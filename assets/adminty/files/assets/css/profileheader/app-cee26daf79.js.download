angular.module("inbox",[]),angular.module("payroll",[]),angular.module("leaves",[]),angular.module("employees",[]),angular.module("PMS",[]),appRoot.services=angular.module("xhr.services",[]).factory("AppSettings",["$resource","$q","LookupServices",function(e,t,i){var n=e("/api/organization/:action",{action:"action"}),o=(e("/api/me/publicprofile"),{gridSettings:{rowHeight:50,showGridFooter:!0,showColumnFooter:!1,filterOptions:{},columnFooterHeight:40,selectionRowHeaderWidth:50,treeRowHeaderAlwaysVisible:!1,groupingShowAggregationMenu:!0,groupingNullLabel:null,enableColumnResizing:!0,enableFiltering:!1,enableColumnMenus:!0,enableVerticalScrollbar:0,enableHorizontalScrollbar:0,enableGridMenu:!0,paginationPageSizes:[100,200,500],paginationPageSize:100,enablePaginationControls:!0,paginationCurrentPage:1,gridMenuCustomItems:[{title:"Hide Search",icon:"icon-search3",leaveOpen:!1,order:0,action:function(e){this.grid&&(this.grid.options.enableFiltering=!this.grid.options.enableFiltering,this.grid.api.core.notifyDataChange("column"))},shown:function(){return this.grid&&this.grid.options.enableFiltering}},{title:"Show Search",icon:"icon-search3",leaveOpen:!1,order:0,action:function(e){this.grid&&(this.grid.options.enableFiltering=!this.grid.options.enableFiltering,this.grid.api.core.notifyDataChange("column"))},shown:function(){return this.grid&&!this.grid.options.enableFiltering}}]},fileUploadSettings:{location:"/api/fileupload/default",maxFileSize:2e6,maxNumberOfFiles:1,acceptFileTypes:void 0,uploadTo:"/api/fileupload/default"},progressOptions:{color:"#3D9EED",strokeWidth:10,trailColor:"#E3E5E8",trailWidth:9,svgStyle:{display:"block",width:"100%"},text:{value:"",className:"xhr-progress-text",style:{color:"#333",position:"absolute",left:"50%",top:"50%",padding:0,margin:0,transform:{prefix:!0,value:"translate(-50%, -50%)"}},autoStyleContainer:!0,alignToBottom:!0},duration:1200,easing:"easeOut",from:{color:"#eee"},to:{color:"#000"}},donutChartOptions:{type:"pieChart",height:200,donut:!0,color:function(e,t){return e.color},x:function(e){return e.key},y:function(e){return e.y},showLabels:!1,pie:{startAngle:function(e){return e.startAngle},endAngle:function(e){return e.endAngle},donutRatio:.94},transitionDuration:500,showLegend:!1,valueFormat:function(e){return d3.format("%")(e/100)},tooltipContent:function(e,t,i,n){return'<h4 style="text-align:center;margin:10px 10px;">'+e.data.key+"</h4><p>"+e.data.y+"% </p>"},legend:{margin:{top:5,right:70,bottom:5,left:0}}},multiBarChartOptions:{chart:{type:"multiBarChart",height:300,margin:{top:80,right:20,bottom:60,left:45},reduceXTicks:!1,clipEdge:!0,staggerLabels:!1,transitionDuration:1e3,groupSpacing:.4,stacked:!0,tooltips:!0,tooltipContent:function(e,t,i,n,o){return"<p>"+e.data.key+": "+e.data.y+"</p>"},showControls:!1,xAxis:{tickFormat:function(e){return e},tickPadding:15},yAxis:{axisLabelDistance:100,tickFormat:function(e){return d3.format("^,")(e.toFixed(2))},x:function(e){return-30},tickPadding:30,tickWidth:50}}},modelBlurSettings:{updateOn:"blur"},scrollSettings:{background:"rgb(206,208,211)",cursorwidth:"10px",autohidemode:"leave"},fixedScrollSetting:{background:"rgb(206,208,211)",cursorwidth:"10px",autohidemode:!1},datepickerOptions:{showWeeks:!1},timepickerOptions:{format:"HH:mm",minutesFormat:"HH:mm",minView:"day",maxView:"minute",startView:"day"},colorPalette:["#FFB630","#86C06A","#FF933F","#3D9EED","#FF5C5C","#C47ED0","#6C7481","#70B8B8","#B9C07A"],trumbowygConfig:{btns:["strong","em","underline","strikethrough","|",,"unorderedList","orderedList","|","placeholderFields"],autogrow:!1,fullscreenable:!1,btnsDef:{placeholderFields:{useTitle:!0,title:"Insert...",func:"insertNonEditable"}},setPlaceholderFields:function(e){this.btnsDef.placeholderFields.customDropdown=e}}});return o.publicBlobUri=publicStorageAccountUrl,o.loadStorageAccount=function(){return n.get({action:"storageaccounturl"}).$promise},o.loadSasUrl=function(){return n.get({action:"tokenbasedbloburl"}).$promise},o.employeeNumberSettings=function(){return n.get({action:"employeenumbersettings"}).$promise},o.getEmployeeDefaultSettings=function(){return n.get({action:"employeedefaultsettings"}).$promise},o.loadCurrencies=function(){return i.lookup.query({id:"currencies"}).$promise},o}]).factory("NotificationService",["$rootScope",function(e){return{information:function(t){e.$broadcast("notificationBroadcast",{Message:t,Type:"information"})},success:function(t){e.$broadcast("notificationBroadcast",{Message:t,Type:"success"})},error:function(t){e.$broadcast("notificationBroadcast",{Message:t,Type:"error"})}}}]).factory("authService",["$resource",function(e){return{getUser:function(t){e("/api/mytime/jobtitle").get(t)},generateRole:function(){}}}]).factory("Utils",["$q","EmployeeLookupService",function(e,t){return{isImage:function(t){var i=e.defer(),n=new Image;return n.onerror=function(){i.resolve(!1)},n.onload=function(){},n.src=t,i.promise},getGuid:function(){var e=(new Date).getTime();return window.performance&&"function"==typeof window.performance.now&&(e+=performance.now()),"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){var i=(e+16*Math.random())%16|0;return e=Math.floor(e/16),("x"==t?i:3&i|8).toString(16)})},getMatchedEmployees:function(i){if(i&&i.length>=2){var n=e.defer();return t.searchEmployees(i).then(function(e){0==e.length&&e.push({noResults:!0}),n.resolve(e)}),n.promise}},getMatchedEmployeesExcluding:function(i,n){if(i&&i.length>=2){var o=e.defer();return t.searchEmployees(i).then(function(e){0==(e=e.filter(function(e){return!n.some(function(t){return t==e.id})})).length&&e.push({noResults:!0}),o.resolve(e)}),o.promise}}}}]).factory("ImageService",["$filter","Utils",function(e,t){return{getImageUrl:function(i,n){if(i||""===i){var o=e("storageAccountUrl")(n+i);t.isImage(o).then(function(t){return t?o:e("storageAccountUrl")(i)})}}}}]).factory("DateServices",function(){return dateservices={toJavaScriptDate:function(e){var t=new Date(e);return t.getMonth()+1+"/"+t.getDate()+"/"+t.getFullYear()},dateOnlyString:function(e){var t=new Date(e),i=t.getMonth()+1,n=t.getDate();return t.getFullYear()+"-"+(i<10?"0"+i:i)+"-"+(n<10?"0"+n:n)}},dateservices}).factory("InvoiceServices",["$q","$timeout",function(e,t){var i={setProject:function(e){i.project=e},getProject:function(){var t=e.defer();return i.project?t.resolve(i.project):t.reject("error"),t.promise}};return i}]).filter("timeFormatter",function(){return function(e,t){var i=/^(?:\d|[01]\d|2[0-3]):[0-5]\d$/,n=0,o=0;switch(t){case"hhmm":return i.test(e)?e:isNaN(e)?null:e&&""!=e?(n=Math.floor(e),(o=Math.round(60*(parseFloat(e)-Math.floor(e))))>59&&(n+=1,o=0),o>9?n+":"+o:n+":0"+o):"0:00";case"decimal":return i.test(e)?parseInt(e.split(":")[0],10)+parseFloat(e.split(":")[1]/60):isNaN(e)||""==e?0:parseFloat(e);case"hrsmin":return i.test(e)?e.split(":")[0]+" hrs "+e.split(":")[1]+" min":/^(?:\d|[01]\d|2[0-3])?(\.\d{1,2})?$/.test(e)?(o=Math.round(e%1*60),(n=parseInt(e))+" hrs "+o+" min"):"0 hrs 0 mins";case"hhmmstring":if("Invalid Date"!=(a=new Date(e)).toString())return(a.getHours()<10?"0"+a.getHours():a.getHours())+":"+(a.getMinutes()<10?"0"+a.getMinutes():a.getMinutes());break;case"hhmmss":if(!isNaN(e)){n=Math.floor(e/36e5),o=Math.floor(e/6e4%60);var r=Math.floor(e/1e3%60);return(n>=10?n:"0"+n)+":"+(o>=10?o:"0"+o)+":"+(r>=10?r:"0"+r)}break;case"hhmmssstring":var a;if("Invalid Date"!=(a=new Date(e)).toString())return(a.getHours()<10?"0"+a.getHours():a.getHours())+":"+(a.getMinutes()<10?"0"+a.getMinutes():a.getMinutes())+":"+(a.getSeconds()<10?"0"+a.getSeconds():a.getSeconds());break;default:return null}}}).filter("storageAccountUrl",["AppSettings",function(e){function t(t){return t?e.publicBlobUri+"/"+t:null}return t.$stateful=!0,t}]).filter("privateStorageAccountUrl",["AppSettings",function(e){function t(t){return t?e.privateBlobUri+"/"+t+e.sasUrl:null}return t.$stateful=!0,t}]).filter("profileImage",function(){return function(e){return!(!e||"null"==e)&&angular.fromJson(e).ImageUrl}}).filter("shortName",function(){return function(e){var t="";return e&&e.trim().split(" ").forEach(function(e){""!=e&&(t=t.concat(e[0]))}),t}}).filter("userFriendlyDate",["$filter",function(e){return function(t,i){var n;n="string"==typeof t?new Date(new Date(t).getTime()+6e4*(new Date).getTimezoneOffset()):new Date(t);var o=new Date;if(n.getMonth()===o.getMonth()){if(n.getDate()===o.getDate())return"Today";if(n.getDate()===o.getDate()+1)return"Tomorrow"}return e("date")(n,i)}}]).filter("commentsFilter",function(){var e=[];return function(t){return angular.forEach(t,function(t){0==t.parentCommentId&&e.push(t)}),e}}).filter("commentsDateFilter",function(){var e="";return function(t){var i=Math.abs(new Date(t)-new Date),n=Math.floor(i/1e3/60),o=Math.floor(n/60);Math.ceil(o/24);if(n<60)e=n<=1?"Just now":n+" minutes ago";else{if(!(o<24))return res=Math.round(Math.ceil((new Date(t).getTime()-(new Date).getTime())/864e5)),-1==res?"1 Day ago":res<-1&&res>-7?Math.abs(res)+" Days ago":res<=-7&&res>-30?1==Math.round(Math.abs(res/7))?" 1 Week ago":Math.round(Math.abs(res/7))+" Weeks ago":res<=-30&&res>-365?1==Math.round(Math.abs(res/30))?"1 Month ago":Math.round(Math.abs(res/30))+" Months ago":res<=-365?1==Math.round(Math.abs(res/365))?"1 Year ago":+Math.round(Math.abs(res/365))+" Years ago":"";e=1==o?o+" hour ago":o+" hours ago"}return e}}).filter("pollDateFilter",function(){return function(e){var t=Math.abs(new Date(e)-new Date),i=Math.floor(t/1e3/60),n=Math.floor(i/60),o=Math.ceil(n/24);return o<3?1==o?o+" day":o+" days":new Date(e)}}).filter("abs",function(){return function(e){return Math.abs(e)}}).filter("shiftTime",["$filter",function(e){return function(t){new Date((new Date).setHours(t.hours,t.minutes,0,0));return e("date")(t,"h:mm a")}}]).filter("parseUrl",function(){var e=/(\b(https?|ftp):\/\/[A-Z0-9+&@#\/%?=~_|!:,.;-]*[-A-Z0-9+&@#\/%=~_|])/gim,t=/(\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,6})/gim;return function(i){return i.match(e)&&(i=i.replace(e,'<a href="$1" target="_blank">$1</a>')),i.match(t)&&(i=i.replace(t,'<a href="mailto:$1">$1</a>')),i}}).filter("regexFilter",function(){return function(e,t,i){for(var n=new RegExp(i),o=[],r=0;r<e.length;r++)e[r][t]&&n.test(e[r][t].toUpperCase())&&o.push(e[r]);return o}}).filter("ordinal",function(){return function(e){var t,i=parseInt(e,10);return isNaN(i)?"":(t=i,1===Math.floor(t/10)?"th":t%10==1?"st":t%10==2?"nd":t%10==3?"rd":"th")}}).filter("decimalToHHMM",function(){return function(e){if(!e)return 0;var t=e<0?"-":"",i=Math.floor(Math.abs(e)),n=Math.floor(60*Math.abs(e)%60);return t+(i<10?"0":"")+i+":"+(n<10?"0":"")+n}}).filter("fileSize",function(){return function(e){var t=1024*e;return t<1024?t.toFixed(2)+" KB":(t/=1024).toFixed(2)+" MB"}}).filter("textToHtmlFormatter",function(){return function(e){if(e){for(var t=e.replace(/&/g,"&amp;"),i=(t=(t=t.replace(/</g,"&lt;")).replace(/>/g,"&gt;")).split("\n"),n=0;n<i.length;n++)i[n]=i[n].replace(/\s/g,"&nbsp;");return i.join("<br>")}return null}}).filter("filterWithArray",function(){return function(e,t,i){var n=[];return e.filter(function(e){null!=i.find(function(i){return e[t]==i})&&n.push(e)}),n}}).filter("toFixed",function(){return function(e,t){return null!=e&&null!=t?parseFloat(e.toFixed(t)):e}}).service("CSV",["$q",function(e){var t=encodeURIComponent("\r\n");this.stringifyField=function(e,t,i){return"string"==typeof e?(e=e.replace(/"/g,'""'),(i||e.indexOf(",")>-1||e.indexOf("\n")>-1||e.indexOf("\r")>-1)&&(e=t+e+t),encodeURIComponent(e)):"boolean"==typeof e?e?"TRUE":"FALSE":e},this.stringify=function(i,n){var o,r=e.defer(),a=this,s="",l=e.when(i).then(function(e){var i,l,c;(e=angular.copy(e),angular.isDefined(n.header)&&n.header)&&(i=[],angular.forEach(n.header,function(e,t){this.push(a.stringifyField(e,n.txtDelim,n.quoteStrings))},i),l=i.join(n.fieldSep?n.fieldSep:","),s+=l+t);c=angular.isArray(e)?e:e(),angular.forEach(c,function(e,i){var o,r;r=[],angular.forEach(e,function(e,t){this.push(a.stringifyField(e,n.txtDelim,n.quoteStrings))},r),o=r.join(n.fieldSep?n.fieldSep:","),s+=i<c.length?o+t:o}),o=window.navigator.msSaveOrOpenBlob?s:"data:text/csv;charset=utf-8,"+s,r.resolve(o)});return"function"==typeof l.catch&&l.catch(function(e){r.reject(e)}),r.promise}}]).filter("propsFilter",function(){return function(e,t){var i=[];return angular.isArray(e)?e.forEach(function(e){for(var n=!1,o=Object.keys(t),r=0;r<o.length;r++){var a=o[r],s=t[a].toLowerCase();if(-1!==e[a].toString().toLowerCase().indexOf(s)){n=!0;break}}n&&i.push(e)}):i=e,i}}).filter("stringToDate",["$filter",function(e){return function(t,i){if(t){var n=new Date;return"string"==typeof t?(t.length>10&&(String.prototype.endsWith&&!t.endsWith("Z")||"Z"!=t[t.length-1])&&(t+="Z"),n=new Date(new Date(t).getTime()+6e4*new Date(t).getTimezoneOffset())):n=new Date(t),e("date")(n,i)}return t}}]).filter("yyyymmddToDate",["$filter",function(e){return function(t,i){if(t){var n=new Date;if("string"==typeof t){var o=t.split("-");n=new Date(o[0],o[1]-1,o[2])}else n=new Date(t);return e("date")(n,i)}return t}}]).filter("currencyToWords",function(){return function(e){var t=function(e){var i=["","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen"];if(e<0||e>999999999)return"NUMBER OUT OF RANGE!";var n=Math.floor(e/1e7);e-=1e7*n;var o=Math.floor(e/1e5);e-=1e5*o;var r=Math.floor(e/1e3);e-=1e3*r;var a=Math.floor(e/100);e%=100;var s=Math.floor(e/10),l=Math.floor(e%10),c="";return n>0&&(c+=t(n)+" crore"),o>0&&(c+=(""==c?"":" ")+t(o)+" lakh"),r>0&&(c+=(""==c?"":" ")+t(r)+" thousand"),a&&(c+=(""==c?"":" ")+t(a)+" hundred"),(s>0||l>0)&&(""!=c&&(c+=" and "),s<2?c+=i[10*s+l]:(c+=["","","twenty","thirty","fourty","fifty","sixty","seventy","eighty","ninety"][s],l>0&&(c+="-"+i[l]))),""==c&&(c="zero"),c};return t(e)}}).filter("startFrom",function(){return function(e,t){if(t=parseInt(t),isFinite(t)&&e)return e.slice(t)}}).filter("colDefFilter",function(){return function(e,t){for(var i=[],n=0;n<e.length;n++){var o=e[n];o.colDef.category==t&&i.push(o)}return i}}).filter("notEqualsTo",function(){return function(e,t){return e.filter(function(e){return e.id!=t})}}),appRoot.factory("ListNavService",function(){var e=[];return{getListIds:function(){return e},addListIds:function(t){e=t}}}),appRoot.factory("TimeListService",function(){return{getTimes:function(){if(window._times)return window._times;window._times=[];for(var e=0;e<24;e++){var t=e>=12?e-12:e;0==t&&(t=12);for(var i=0;i<4;i++){var n=t+":"+(0==i?"00":15*i)+(e<=12?"a":"p");window._times.push(n)}}return window._times}}}),angular.module("LoadingServices",[]).config(["$httpProvider",function(e){e.interceptors.push("myHttpInterceptor"),e.interceptors.push("fileDownloadInterceptor")}]).factory("myHttpInterceptor",["$injector","$q",function(e,t){return{request:function(e){return"/api/heartbeat/datetime"!=e.url&&-1===e.url.indexOf("api/crud")&&-1===e.url.indexOf("api/track")&&-1===e.url.indexOf("api.amplitude.com")&&$(".loading").show(),e},requestError:function(e){return $(".loading").show(),t.reject(e)},response:function(t){var i=e.get("$http");if(i.pendingRequests&&0===i.pendingRequests.filter(e=>-1===e.url.indexOf("api/crud")&&-1===e.url.indexOf("api.amplitude.com")&&-1===e.url.indexOf("api/track")).length&&$(".loading").hide(),"GET"!==t.config.method&&-1===t.config.url.indexOf("api/crud")&&-1===t.config.url.indexOf("api.amplitude.com")&&-1===t.config.url.indexOf("api/track")){var n=e.get("EnvironmentConstants"),o=e.get("$resource"),r=e.get("AppContext"),a={properties:new Object,context:new Object,userId:r.myPublicProfile.id.toString(),type:2,tenantId:r.org.tenantId,sentAt:new Date};a.context={userAgent:window.navigator.userAgent},a.properties={resultCode:t.status.toString(),url:t.config.url,method:t.config.method,requestBody:t.config.data},o(n.auditApiCrudEndpoint).save({},a).$promise}return t},responseError:function(i){var n=e.get("$http");if(n.pendingRequests&&0===n.pendingRequests.filter(e=>-1===e.url.indexOf("api/crud")&&-1===e.url.indexOf("api.amplitude.com")&&-1===e.url.indexOf("api/track")).length&&$(".loading").hide(),"GET"!==i.config.method&&-1===i.config.url.indexOf("api/crud")&&-1===i.config.url.indexOf("api.amplitude.com")&&-1===i.config.url.indexOf("api/track")){var o=e.get("$resource"),r=e.get("AppContext"),a=e.get("EnvironmentConstants"),s={properties:{},context:{},userId:r.myPublicProfile.id.toString(),type:2,tenantId:r.org.tenantId,sentAt:new Date};s.context={userAgent:window.navigator.userAgent},s.properties={resultCode:i.status.toString(),url:i.config.url,method:i.config.method,requestBody:i.config.data},o(a.auditApiCrudEndpoint).save({},s).$promise}return t.reject(i)}}}]).factory("fileDownloadInterceptor",["$rootScope","$injector","$interval","NotificationService","$q",function(e,t,i,n,o){var r=null;return initDialogWait=function(n){if("arraybuffer"==n.responseType){t.get("dialogs").wait("File Download","Wait",10,{keyboard:!1,backdrop:"static"});var o=0;r=i(function(){(o+=10)<100?e.$broadcast("dialogs.wait.progress",{progress:o,msg:"Processing ......"}):i.cancel(r)},1500)}return n},dialogsWaitComplete=function(t){e.$broadcast("dialogs.wait.progress",{progress:100,msg:t}),i.cancel(r),e.$broadcast("dialogs.wait.complete"),r=null},{request:initDialogWait,requestError:function(e){return"arraybuffer"==e.config.responseType&&(dialogsWaitComplete("Error!!!"),n.error("unable to download the file")),o.reject(e)},response:function(e){return"arraybuffer"==e.config.responseType&&dialogsWaitComplete("Completed"),e},responseError:function(e){return"arraybuffer"==e.config.responseType&&(dialogsWaitComplete("Error!!!"),n.error("unable to download the file")),o.reject(e)}}}]),appRoot.directives=angular.module("xhr.directives",["dialogs.main"]).directive("xhrFileUpload",["dialogs",function(e){return{restrict:"E",replace:!0,transclude:!0,scope:{virtualContainer:"@",options:"=",uploadFile:"="},template:$("#picture-template")[0].innerHTML,link:function(t,i,n){$(document).bind("dragover",function(e){var t,i=$(".dropzone"),n=window.dropZoneTimeout;n?clearTimeout(n):i.addClass("in");var o=!1,r=e.target;do{if($(r).hasClass("dropzone")){o=!0,t=$(r);break}r=r.parentNode}while(r);i.removeClass("in hover"),o&&t.addClass("hover"),window.dropZoneTimeout=setTimeout(function(){window.dropZoneTimeout=null,i.removeClass("in hover")},100)}),$(document).bind("drop dragover",function(e){e.preventDefault()});var o=t.options.maxNumberOfFiles?t.options.maxNumberOfFiles:1;i.find("#fileupload").fileupload({dataType:"json",maxFileSize:t.options.maxFileSize?t.options.maxFileSize:2e6,maxNumberOfFiles:o,maxNumberOfFilesPerInstance:t.options.maxNumberOfFilesPerInstance?t.options.maxNumberOfFilesPerInstance:o,acceptFileTypes:t.options.acceptFileTypes,dropZone:$(".dropzone"),url:t.options.uploadTo+"/"+t.virtualContainer,add:function(i,n){var o=n.files[0].name.split(".").pop(),r=t.options.maxFileSize||2e6,a=(t.uploadFile||[]).filter(function(e){return e.isNew});return t.options.allowedFileTypes&&t.options.allowedFileTypes.indexOf(o.toLowerCase())<0?(e.notify("Application notification","Invalid file type, allowed types are "+t.options.allowedFileTypes,{keyboard:!1,backdrop:"static"}),!1):n.files[0].size>r?(e.notify("Application notification","Uploaded file should not exceed "+r/1e6+"MB.",{keyboard:!1,backdrop:"static"}),!1):n.originalFiles.length>t.options.maxNumberOfFiles||n.originalFiles.length+t.uploadFile.length>t.options.maxNumberOfFiles?(e.notify("Application notification","Maximum number of files should not exceed "+t.options.maxNumberOfFiles,{keyboard:!1,backdrop:"static"}),!1):n.originalFiles.length>t.options.maxNumberOfFilesPerInstance||n.originalFiles.length+a.length>t.options.maxNumberOfFilesPerInstance?(e.notify("Application notification","Maximum number of files per instance should not exceed "+t.options.maxNumberOfFilesPerInstance,{keyboard:!1,backdrop:"static"}),!1):($(".loading").show(),t.$apply(),void n.submit())},done:function(e,i){$.each(i.result,function(e,i){i.size=i.size/1048576,i.isNew=!0,1==t.options.maxNumberOfFiles?t.uploadFile[0]=i:(t.uploadFile&&t.uploadFile.length||(t.uploadFile=[]),t.uploadFile.push(i)),t.$apply()}),$(".loading").hide()},fail:function(){$(".loading").hide(),e.notify("Application notification","An error occurred while uploading the file.",{keyboard:!1,backdrop:"static"})}})}}}]).directive("xhrSingleFileUpload",["dialogs",function(e){return{restrict:"E",replace:!0,transclude:!0,scope:{virtualContainer:"@",options:"=",uploadFile:"=",onFileUploaded:"&"},template:$("#picture-template")[0].innerHTML,link:function(t,i,n){i.find("#fileupload").fileupload({dataType:"json",maxFileSize:t.options.maxFileSize?t.options.maxFileSize:2e6,maxNumberOfFiles:t.options.maxNumberOfFiles?t.options.maxNumberOfFiles:1,acceptFileTypes:t.options.acceptFileTypes,dropZone:$(".dropzone"),url:t.options.uploadTo+"/"+t.virtualContainer,add:function(i,n){var o=n.files[0].name.split(".").pop(),r=t.options.maxFileSize||2e6;return t.options.allowedFileTypes&&t.options.allowedFileTypes.indexOf(o.toLowerCase())<0?(e.notify("Application notification","Invalid file type, allowed types are "+t.options.allowedFileTypes,{keyboard:!1,backdrop:"static"}),!1):n.files[0].size>r?(e.notify("Application notification","Uploaded file should not exceed "+r/1e6+"MB.",{keyboard:!1,backdrop:"static"}),!1):(t.$apply(),void n.submit())},done:function(e,i){$.each(i.result,function(e,i){i.size=i.size/1048576,t.uploadFile=i,t.$apply()}),t.onFileUploaded({fileProperties:t.uploadFile})},fail:function(){$(".loading").hide(),e.notify("Application notification","An error occurred while uploading the file.",{keyboard:!1,backdrop:"static"})}})}}}]).directive("imgCropped",["$rootScope","$filter",function(e,t){return{restrict:"E",replace:!0,scope:{source:"=source",selected:"&"},link:function(e,i,n){var o,r=function(){o&&(o.next().remove(),o.remove(),o=void 0)};e.$watch("source",function(n,a){r(),n&&(i.after("<img />"),(o=i.next()).attr("src",t("storageAccountUrl")(n)),$(o).Jcrop({bgFade:!0,bgOpacity:.2,trackDocument:!0,keySupport:!1,boxWidth:450,onSelect:function(t){e.selected({cords:t})},setSelect:[73,340,340,73],aspectRatio:1},function(){var e=this.getBounds();window.boundx=e[0],window.boundy=e[1]}))}),e.$on("$destroy",r)}}}]).directive("xhrPostDataNotification",function(){return function(e,t,i){e.$on("notificationBroadcast",function(t,i){e.notificationMessage=i.Message,$(".notification").addClass(i.Type),$(".notification").miniNotification({time:3e3})})}}).directive("validationMessages",function(){return{scope:{modelController:"=",formSubmit:"="},restrict:"EA",link:function(e,t,i){e.modelController||console.log("Requires a html attribute data-model-controller. This should point to the input field model controller."),e.$watch("modelController.$error",function(t){t&&(e.errorMessages=[],angular.forEach(t,function(t,n){t&&i[n+"Error"]&&e.errorMessages.push(i[n+"Error"])}))},!0)},template:'<div><small class="error" ng-repeat="message in errorMessages" ng-show= "(!modelController.$pristine && $first) || formSubmit" class="warning">{{message}}</small></div>'}}).directive("ngUpdateOnBlur",function(){return{restrict:"A",require:"ngModel",priority:"100",link:function(e,t,i,n){"radio"!==i.type&&"checkbox"!==i.type&&"select"!==i.type&&(t.unbind("input").unbind("keydown").unbind("change"),t.bind("blur",function(){e.$apply(function(){n.$setViewValue(t.val())})}))}}}).directive("appcrestCustomValidator",["$timeout","$parse",function(e,t){return{restrict:"A",require:"ngModel",link:function(e,i,n,o){"true"==n.duplicatePrecheckedValue&&o.$setValidity(n.appcrestCustomValidator,!1),o.$parsers.push(function(i){var r=t(n.validateFunction)(e,{value:i});if(r||!1===r){if(!r.then)return o.$setValidity(n.appcrestCustomValidator,r),r?i:void 0;r.then(function(e){o.$setValidity(n.appcrestCustomValidator,e)},function(e){o.$setValidity(n.appcrestCustomValidator,!1)})}return i})}}}]).directive("authorize",function(e){return{restrict:"A",prioriry:1e5,scope:!1,link:function(){},compile:function(t,i,n){var o=!0;e.getUser(function(e){var n={};n.role="hradmin"==e.name?"hradmin":"employee";var r=i.roles.split(",");for(var a in r)n.role==r[a]&&(o=!1);o&&(t.children().remove(),t.remove())})}}}).directive("uploadAFile",["$timeout","NotificationService","dialogs",function(e,t,i){return{restrict:"A",templateUrl:"fileupload",transclude:!0,scope:{url:"@",fileTypes:"@",maxFileSize:"@",viewModel:"=",onFileUploaded:"&"},link:function(n,o,r){e(function(){$(".file-upload").fileupload({dataType:"json",acceptFileTypes:n.fileTypes,maxFileSize:n.maxFileSize,maxNumberOfFiles:1,add:function(e,t){var o=t.files[0].name.split(".").pop();if(n.fileTypes&&n.fileTypes.indexOf(o)<0)return i.notify("Application notification","Invalid file type, aborted",{keyboard:!1,backdrop:"static"}),!1;$(".loading").show(),n.$apply(),t.submit()},done:function(e,t){n.onFileUploaded({fileProperties:t.result}),$(".loading").hide()},fail:function(e,i){$(".loading").hide(),t.error("Oops.. failed to upload. Please check the file format."),n.$apply()}})},1e3),n.uploadFile=function(){e(function(){o.find(".file-upload").trigger("click")},100)}}}}]).directive("fileUpload",function(){return{restrict:"E",template:'<div ng-transclude ng-model="__userFiles"></div>',replace:!0,transclude:!0,scope:{__userFiles:"=ngModel"},link:function(e,t,i){var n,o;function r(t,i,o){var r=new XMLHttpRequest,a=new FormData,s=0;return r.open("POST",i,!0),r.onreadystatechange=function(){e.__userFiles[o].status={code:r.status,statusText:r.statusText,response:r.response},e.$apply()},r.upload.addEventListener("progress",function(t){s=parseInt(t.loaded/t.total*100),e.__userFiles[o].percent=s,e.$apply()},!1),a.append(n,t),r.send(a),{name:t.name,size:t.size,type:t.type,status:{},percent:0}}n=i.name||"userFile",t.append('<input style="display: none !important;" type="file" '+("true"==i.multiple?"multiple":"")+' accept="'+(i.accept?i.accept:"")+'" name="'+n+'"/>'),o=i.uri||"/upload/upload",t.bind("click",function(){e.$eval(t.find("input")[0].click())}),angular.element(t.find("input")[0]).bind("change",function(t){for(var i,n=t.srcElement.files||t.dataTransfer.files,a=[],s=0;i=n[s];s++)a.push(r(i,o,s));t.srcElement.files=[],t.srcElement.value="",e.__userFiles=a,e.$apply()})}}}).directive("breadcrumbs",["$log","$parse","$interpolate",function(e,t){return{restrict:"EA",replace:!1,scope:{itemDisplayNameResolver:"&"},templateUrl:"breadcrumb",controller:["$scope","$state","$stateParams",function(e,t,i){var n=function(e){return e.title},o=function(e){return t.$current.name===e.name},r=function(){e.$navigationState={currentState:t.$current,params:i,getDisplayName:function(t){return e.hasCustomResolver?e.itemDisplayNameResolver({defaultResolver:n,state:t,isCurrent:o(t)}):n(t)},isCurrent:function(e){return o(e)}}};e.$on("$stateChangeSuccess",function(){r()}),r()}],link:function(e,t,i,n){e.hasCustomResolver=angular.isDefined(i.itemDisplayNameResolver)}}}]).directive("profilePicturePreview",["Utils","$filter",function(e,t){return{restrict:"A",scope:{model:"=model"},link:function(i,n,o){i.$watch("model",function(r,a){if(r&&r.width){var s=t("storageAccountUrl")(o.profilePicturePreview+"/"+r.imageUrl);e.isImage(s).then(function(e){if(e)angular.element(n).attr("src",s);else{var t=$(n).parent().width()/i.model.width,o=$(n).parent().height()/i.model.height;$(n).css({width:Math.round(t*i.model.originalWidth)+"px",height:Math.round(o*i.model.originalHeight)+"px",marginLeft:"-"+Math.round(t*i.model.marginLeft)+"px",marginTop:"-"+Math.round(o*i.model.marginTop)+"px",maxWidth:"none"})}})}})}}}]).directive("timesheetContenteditable",["$timeout","$filter",function(e,t){return{restrict:"A",require:"?ngModel",link:function(i,n,o,r){if("true"!=o.trackTime){if(!r)return;function a(){var e=n.html().trim();if(e&&""!=e||""==e&&r.$viewValue>=0){var i=t("timeFormatter")(e,"hhmm"),o=t("timeFormatter")(e,"decimal");n.html(null!=i?i:"0:00"),o<24&&r.$viewValue!=o?r.$setViewValue(i):o>=24&&r.$viewValue!=o&&(n.html("0:00"),r.$setViewValue(0))}}n.on("blur",function(){i.$apply(a),n.parent().removeClass("entry-active")}),n.on("focus",function(){n.parent().addClass("entry-active"),e(function(){var e=window.getSelection(),t=document.createRange();t.selectNodeContents(n[0]),e.removeAllRanges(),e.addRange(t)},0)}),n.keydown(function(e){-1!=$.inArray(e.keyCode,[8,46,9,27,110,190,186,37,39,59])||65==e.keyCode&&!0===e.ctrlKey||(e.shiftKey||e.keyCode<48||e.keyCode>57)&&(e.keyCode<96||e.keyCode>105)&&e.preventDefault()})}}}}]).directive("xhrContenteditable",["$timeout","$filter",function(e,t){return{restrict:"A",require:"?ngModel",link:function(t,i,n,o){function r(){var e=i.html(),t=i.text();e&&t?(i.html(e),o.$setViewValue(e)):""!=e&&""!=t||(i.html(null),o.$setViewValue(null))}o&&(o.$render=function(){i.html(o.$viewValue||"")},i.on("blur",function(){t.$apply(r)}),i.on("focus",function(){e(function(){var e=window.getSelection(),t=document.createRange();t.selectNodeContents(i[0]),e.removeAllRanges(),e.addRange(t)},0)}))}}}]).directive("xhrTextEditable",[function(){return{restrict:"EA",require:"ngModel",link:function(e,t,i,n){var o="";function r(){t.removeAttr("contenteditable");var e=t.text();n.$isEmpty(e.trim())?(t.text(o),n.$setViewValue(o)):(t.text(e),n.$setViewValue(e))}n.$render=function(){t.html(n.$viewValue||"")},1!=e.$eval(i.locked)&&(t.on("click",function(){t.attr("contenteditable")||(t.attr("contenteditable",!0),o=t.text(),t.focus())}),t.on("blur ",function(){e.$evalAsync(r)}))}}}]).directive("timesheetComment",["$timeout",function(e){return{restrict:"A",scope:{submitted:"="},link:function(e,t,i){t.on("click",function(e){e.stopPropagation(),$(t).focus()}),t.on("focus",function(i){e.submitted||(i.stopPropagation(),$(t).parent(".timesheet-entry-block")&&($("#timesheetCommentEntry").css({top:$(t).parent(".timesheet-entry-block").position().top+$(t).parent(".timesheet-entry-block").outerHeight()-330,left:$(t).parent().position().left+$(t).parent().width()/2-230,display:"block"}),$("#timesheetCommentEntry p.timesheet-comment-box").attr("tabindex",t.attr("tabindex")),$("#timesheetCommentEntry textarea.timesheet-comment-box").attr("tabindex",t.attr("tabindex")),$("#timesheetCommentEntry input.time-picker-input").attr("tabindex",t.attr("tabindex"))))}),$(".timesheet-entry-data").on("blur",function(){$("#timesheetCommentEntry").hide()}),$(".timesheet-entry-data").on("click",function(e){e.stopPropagation(),event.stopPropagation()}),$(".time-tracking").on("click",function(e){e.stopPropagation(),event.stopPropagation()}),$("body").on("click",function(){$("#timesheetCommentEntry").hide()})}}}]).directive("dateOnly",function(){return{restrict:"A",require:"ngModel",link:function(e,t,i,n){n.$parsers.push(function(e){return e instanceof Date?(e.setHours(23),e.setMinutes(59),e.setSeconds(59),e):e})}}}).directive("xhrGridResize",["$timeout",function(e){return{restrict:"A",link:function(e,t,i){function n(){t.height($(window).height()-(t.offset().top+45))}$(window).resize(function(){n()}),n()}}}]).directive("xhrGridScroll",["$timeout",function(e){return{restrict:"A",link:function(t,i,n){e(function(){i.find(".ui-grid-render-container-body .ui-grid-viewport").niceScroll({autohidemode:!1,background:"rgb(206,208,211)",cursorwidth:"10px"})},0)}}}]).directive("xhrGridMonitor",["$timeout","gridUtil",function(e,t){return{require:"uiGrid",scope:!1,link:function(e,t,i,n){var o;!function e(){clearTimeout(o),o=setTimeout(function(){n.grid.gridHeight=n.grid.options.rowHeight*n.grid.rows.length+$(t.find(".ui-grid-header")[0]).outerHeight()+1,n.grid.refresh(),e()},250)}(),t.on("$destroy",function(){clearTimeout(o)})}}}]).directive("xhrGridFlexHeight",["$timeout","gridUtil",function(e,t){return{restrict:"A",require:"uiGrid",scope:!1,link:function(e,t,i,n){var o,r=!isNaN(parseFloat(i.flexBaseOffset))&&isFinite(i.flexBaseOffset)?parseInt(i.flexBaseOffset):45,a=parseInt(i.xhrGridFlexHeight);function s(e){t.height()!=e&&(n.grid.api.core.raise.gridDimensionChanged(t.height(),t.width(),e,t.width()),t.height(n.grid.gridHeight=e),n.grid.queueGridRefresh())}!function e(){clearTimeout(o),o=setTimeout(function(){var i=$(t.find(".ui-grid-header")[0]).outerHeight()+1+($(t.find(".ui-grid-pager-panel")[0]).outerHeight()||0);i+=($(t.find(".ui-grid-footer-info")[0]).outerHeight()||0)+1+($(t.find(".ui-grid-footer-panel")[0]).outerHeight()||0),function(e,i,o){if(a){var l=n.grid.getVisibleRowCount();s(n.grid.options.rowHeight*(l<a?l:a)+i)}else{var c=$(window).height()-(t.offset().top+r),p=e*o+i;s(p>c?c:p)}}(n.grid.options.rowHeight,i,n.grid.rows.length),e()},100)}(),t.on("$destroy",function(){clearTimeout(o)})}}}]).directive("xhrElementHeight",function(){return{restrict:"A",link:function(e,t,i){function n(){t.height($(window).height()-t.offset().top)}$(window).resize(function(){n()}),n()}}}).directive("ngCsv",["$parse","$q","CSV","$document","$timeout",function(e,t,i,n,o){return{restrict:"AC",scope:{data:"&ngCsv",filename:"@filename",header:"&csvHeader",txtDelim:"@textDelimiter",quoteStrings:"@quoteStrings",fieldSep:"@fieldSeparator",lazyLoad:"@lazyLoad",ngClick:"&"},controller:["$scope","$element","$attrs","$transclude",function(e,n,o,r){e.csv="",angular.isDefined(e.lazyLoad)&&"true"==e.lazyLoad||angular.isArray(e.data)&&e.$watch("data",function(t){e.buildCSV()},!0),e.getFilename=function(){return e.filename||"download.csv"},e.buildCSV=function(){var n,r=t.defer();return i.stringify(e.data(),(n={txtDelim:e.txtDelim?e.txtDelim:'"',quoteStrings:e.quoteStrings},angular.isDefined(o.csvHeader)&&(n.header=e.$eval(e.header)),n.fieldSep=e.fieldSep?e.fieldSep:",",n)).then(function(t){e.csv=t,r.resolve(t)}),e.$apply(),r.promise}}],link:function(e,t,i){t.bind("click",function(t){e.buildCSV().then(function(t){!function(){if(window.navigator.msSaveOrOpenBlob){var t=new Blob([e.csv],{type:"text/csv;charset=utf-8;"});navigator.msSaveBlob(t,e.getFilename())}else{var i=angular.element("<a></a>");i.attr("href",e.csv),i.attr("download",e.getFilename()),n.find("body").append(i),o(function(){i[0].click(),i.remove()},null)}}()}),e.$apply()})}}}]).directive("xhrDefaultPagingSearch",["$filter",function(e){return{restrict:"A",scope:{source:"=",gridSource:"=",gridOptions:"=",filter:"="},link:function(t,i,n){t.$watch("source",function(e,i){e&&e!==i&&r(o(t.source,t.gridOptions.pagingOptions.pageSize,t.gridOptions.pagingOptions.currentPage,t.gridOptions.filterOptions.filterText,t.filter))}),t.$watch("gridOptions.pagingOptions",function(e,i){e!==i&&r(o(t.source,t.gridOptions.pagingOptions.pageSize,t.gridOptions.pagingOptions.currentPage,t.gridOptions.filterOptions.filterText,t.filter))},!0),t.$watch("gridOptions.filterOptions",function(e,i){e!==i&&r(o(t.source,t.gridOptions.pagingOptions.pageSize,t.gridOptions.pagingOptions.currentPage,t.gridOptions.filterOptions.filterText,t.filter))},!0),t.$watch("filter",function(e,i){e!==i&&r(o(t.source,t.gridOptions.pagingOptions.pageSize,t.gridOptions.pagingOptions.currentPage,t.gridOptions.filterOptions.filterText,t.filter))},!0);var o=function(t,i,n,o,r){var a=e("filter")(t,angular.extend({},r,{$:o}));return{page:a.slice((n-1)*i,n*i),totalPages:a.length%i==0?a.length/i:Math.floor(a.length/i)+1}},r=function(e){t.gridSource.length=0,angular.forEach(e.page,function(e){t.gridSource.push(e)}),t.gridOptions.totalPages=e.totalPages}}}}]).directive("ngEnter",function(){return function(e,t,i){t.bind("keydown keypress",function(t){13===t.which&&(e.$apply(function(){e.$eval(i.ngEnter)}),t.preventDefault())})}}).directive("xhrInputFocus",["$rootScope","$timeout",function(e,t){return{restrict:"A",scope:{show:"=show"},link:function(i,n,o){i.$watch("show",function(e){e&&t(function(){n[0].focus()})}),$("body").on("mousedown",function(e){i.show&&(i.show=!1,i.$apply())}),e.$on("$routeChangeSuccess",function(e,t){i.show=!1}),$("body").on("mousedown",".expand",function(e){e.stopPropagation()})}}}]).directive("tinymceConfiguration",["$timeout","NotificationService",function(e,t){return{restrict:"A",scope:{model:"=",text:"=",editorReady:"&"},link:function(i,n,o){var r;i.elementId="editor-"+Math.random().toString().substring(2,6),n.attr("id",i.elementId),i.plugins=o.plugins||"link image code textcolor preview table paste codesample advlist lists",i.toolbar=o.toolbar||"bold italic | underline | undo redo | alignleft aligncenter alignright alignjustify | bullist numlist link image | table | fontsizeselect | codesample",i.theme=o.theme||"modern",i.skin=o.skin||"lightgray",i.createEditor=function(){tinyMCE.baseURL="/Plugins/tinymce",tinymce.init({selector:"textarea",paste_enable_default_filters:!0,remove_linebreaks:!0,plugins:[i.plugins],paste_remove_styles_if_webkit:!1,paste_webkit_styles:"all",paste_postprocess:function(e,t){for(var i in t.node.children)"TABLE"==t.node.children[i].nodeName&&t.node.children[i].setAttribute("width","100%")},codesample_languages:[{text:"HTML/XML",value:"markup"},{text:"JavaScript",value:"javascript"},{text:"JSON",value:"json"},{text:"CSS",value:"css"},{text:"PHP",value:"php"},{text:"Ruby",value:"ruby"},{text:"Python",value:"python"},{text:"Java",value:"java"},{text:"C",value:"c"},{text:"C#",value:"csharp"},{text:"C++",value:"cpp"}],fontsize_formats:"8px 10px 11px 12px 14px 18px 24px 36px",lineheight_formats:"16px 18px 20px 22px 24px 26px 28px 30px 32px 34px 36px",table_toolbar:"tableprops tabledelete | tableinsertrowbefore tableinsertrowafter tabledeleterow | tableinsertcolbefore tableinsertcolafter tabledeletecol",insertdatetime_formats:["%D","%d-%m-%Y","%d-%b-%Y","%d %b, %Y","%B %d, %Y","%d %B, %Y"],advlist_bullet_styles:"default,disc,circle,square",statusbar:!1,menubar:!1,default_link_target:"_blank",nonbreaking_force_tab:!0,theme:i.theme,skin:i.skin,pagebreak_separator:'<span style="page-break-after: always;"></span>',pagebreak_split_block:!0,toolbar:i.toolbar,file_browser_callback:function(e,t,i,n){$("#imageupload").trigger("click")},content_css:"/Content/tinymce.css",body_id:"tinymceEditor",setup:function(t){t.on("init",function(e){t.execCommand("fontName",!1,"Verdana"),t.execCommand("fontSize",!1,"12px")}),t.on("load",function(t){e(function(){tinymce.get(i.elementId)&&i.model&&(tinymce.get(i.elementId).setContent(i.model),i.$apply())},0)}),t.on("blur",function(e){i.model=tinymce.get(i.elementId).getContent(),i.text=tinymce.get(i.elementId).getContent({format:"text"}),i.$apply()})},init_instance_callback:i.editorReady}),tinyMCE.on("AddEditor",function(e){e.editor.on("ExecCommand",function(e){var t=e.command;if("FontSize"===t||"FontName"===t){var i=e.value,n=[];e.target.selection.getSelectedBlocks().filter(function(e){return"LI"==e.nodeName}).forEach(function(e){-1==n.indexOf(e.parentNode)&&n.push(e.parentNode)}),n.forEach(function(e){$elm=$(e),$elm.removeAttr("data-mce-style"),"FontSize"===t&&$elm.css("font-size",i),"FontName"===t&&$elm.css("font-family",i)})}}),e.editor.on("ObjectResized",function(e){"IMG"==e.target.nodeName?e.width&&e.width>664&&(e.width=664,e.height=void 0,e.target.setAttribute("width","664"),e.target.setAttribute("style","width: 664px; height: auto;"),e.target.setAttribute("data-mce-style","width: 664px; height: auto;"),e.target.removeAttribute("height"),e.target.style.width="664px",e.target.style.height="auto",t.error("The image should lie within the editor boundaries.")):"TABLE"==e.target.nodeName&&(e.width=664,e.target.setAttribute("width","100%"))}),e.editor.on("NodeChange",function(e){var t;t="IMG"==e.element.nodeName?$(e.element):$(e.element).find("img"),parseInt(t.attr("width"))>664&&t.attr("width","664")})})},i.createEditor(),i.$watch("model",function(e,t){tinymce.editors.length>0&&(r?r.setContent(i.model||""):r=tinymce.get(i.elementId),i.text=tinymce.get(i.elementId).getContent({format:"text"}))}),i.$on("$destroy",function(){r||(r=tinymce.get(i.elementId)),r&&(r.remove(),r=null)})}}}]).directive("letterFieldTrack",["$timeout",function(e){return{restrict:"A",link:function(t,i,n){e(function(){t.$parent.ctrl.letterDetailsModel.template;var e=tinyMCE.activeEditor.getBody();t.$parent.$watch("ctrl.letterDetailsModel.template",function(i,o){var r=$(e).find(".mceNonEditable"),a=[];angular.forEach(r,function(e){-1==a.indexOf(e.innerText)&&a.push(e.innerText)}),t.$parent.ctrl.letterFieldTrack=a,t.$evalAsync(n.letterFieldTrack)})},300)}}}]).directive("ngIntroOptions",["$timeout",function(e){return{restrict:"A",link:function(e,t,i){e[i.ngIntroMethod]=function(t){if("string"==typeof t)var n=introJs(t);else n=introJs();n.setOptions(e.$eval(i.ngIntroOptions)),i.ngIntroOncomplete&&n.oncomplete(e[i.ngIntroOncomplete]),"number"==typeof t?n.goToStep(t).start():n.start()},"true"==i.ngIntroAutostart&&e[i.ngIntroMethod]()}}}]).directive("xhrComment",function(){return{restrict:"A",scope:{xhrCommentType:"=",xhrCommentTypeId:"=",xhrCommentDisable:"=",xhrRequireComments:"=",xhrDisableScroll:"="},templateUrl:function(e,t){return"false"==t.xhrRequireParentComment?"engage/SimpleComments":"engage/Comment"}}}).directive("tinymceImageUpload",["$filter","dialogs","NotificationService",function(e,t,i){return{restrict:"E",replace:!0,transclude:!0,scope:{virtualContainer:"@",options:"=",uploadFile:"="},template:$("#image-template")[0].innerHTML,link:function(i,n,o){n.find("#imageupload").fileupload({dataType:"json",maxFileSize:i.options.maxFileSize?i.options.maxFileSize:2e5,maxNumberOfFiles:i.options.maxNumberOfFiles?i.options.maxNumberOfFiles:1,acceptFileTypes:i.options.acceptFileTypes?i.options.acceptFileTypes:["png","jpg","jpeg"],url:i.options.uploadTo+"/"+i.virtualContainer,add:function(e,n){var o=n.files[0].name.split(".").pop();return acceptFileTypes=i.options.acceptFileTypes?i.options.acceptFileTypes:["png","jpg","jpeg"],acceptFileTypes.indexOf(o.toLowerCase())<0?(t.notify("Application notification","File type is invalid. Please select an image file",{keyboard:!1,backdrop:"static"}),!1):n.originalFiles[0].size&&n.originalFiles[0].size>2e6?(t.notify("Application notification","File is too big. Please select a file smaller than 2 MB.",{keyboard:!1,backdrop:"static"}),!1):(i.$apply(),void n.submit())},done:function(t,n){$.each(n.result,function(t,n){n.size=n.size/1232896,i.uploadFile.push(n),i.$apply(),$(".mce-textbox[placeholder]").val(e("storageAccountUrl")(n.location))})}})}}}]).directive("attendanceColor",["$compile","$sce","$filter",function(e,t,i){return{restrict:"A",scope:{scale:"=",timelist:"=",workedNextDay:"=",shiftStart:"=",shiftEnd:"="},link:function(n,o,r){var a=function(e){return(null!=e.addressLine1?e.addressLine1:"")+" "+(null!=e.adressLine2?e.adressLine2:"")+" "+(null!=e.city?e.city:"")+" "+(null!=e.state?e.city:"")+(null!=e.zip?" - "+e.zip:"")},s=function(e){for(var t in e)if(null!=e[t])return!1;return!0},l=function(r,l,c,p,u,d,m){c>92&&(c-=c-92,l=3),c+l>95&&(l=95-c);var y="",h="",f="";if(!(d&&u&&d.outTime>m.inTime)){if(d&&u?(h=i("stringToDate")(d.outTime,"shortTime"),f=i("stringToDate")(m.inTime,"shortTime")):(h=i("stringToDate")(m.inTime,"shortTime"),f=i("stringToDate")(m.outTime,"shortTime")),u)y="Break "+h+" - "+f;else if(m.isSingleLogOfTheDay){if(y="Logged In "+f,m&&m.address)y+="<br>"+(0==m.punchStatus?"<span class='address-in'></span>":s(m.address)?"":"<span class='address-out'></span>")+a(m.address)}else{if(y="<span>Logged In ",y+=h?h+" - ":"",y+=f,y+="</span>",d&&d.address&&u)y+="<br>"+(0==d.punchStatus?"<span class='address-in'></span>":s(d.address)?"":"<span class='address-out'></span>")+a(d.address);else if(m&&m.address){y+="<br>"+(0==m.punchStatus?"<span class='address-in'></span>":s(m.address)?"":"<span class='address-out'></span>")+a(m.address)}}n["html"+r]=t.trustAsHtml(y);var g=angular.element("<span class='tick-bars"+r+" information-tooltip tooltip-grey tooltip-width' uib-tooltip-html='html"+r+"'/>");o.append(e(g)(n)),$(o).find(".tick-bars"+r).css({"background-color":""+p,width:l+"%",position:"absolute",left:"2px",height:"12px","margin-left":c+"%",top:"3px"})}};if(n.timelist.length>0){var c=Math.abs(n.shiftStart.stringToDateWithTime()-n.scale.stringToDateWithTime())/36e5*3,p=Math.abs(n.shiftEnd.stringToDateWithTime()-n.scale.stringToDateWithTime())/36e5*3;$(o).find(".start-shift-time").css("margin-left",c+"%"),$(o).find(".end-shift-time").css("margin-left",p+"%");n.scale;var u=angular.fromJson(n.timelist),d=(u.length,n.scale,null),m=[],y=[],h=i("groupBy")(u,"manualClockinType");angular.forEach(h,function(e){e.length>1&&(y=i("groupBy")(e,"premiseId"),angular.forEach(y,function(e){for(var t=0;t<e.length-1;t++)0!=e[t].punchStatus&&2!=e[t].punchStatus||1!=e[t+1].punchStatus||m.push({inTime:e[t].timestamp,outTime:e[t+1].timestamp,address:e[t].locationAddress})}))}),1==u.length&&(y=i("groupBy")(u,"premiseId"),angular.forEach(y,function(e){if(3!=e[0].punchStatus){var t=e[0].timestamp.stringToDateWithTime();t.setMinutes(t.getMinutes()+30),m.push({inTime:e[0].timestamp,outTime:t,address:e[0].locationAddress,isSingleLogOfTheDay:!0})}})),m=i("orderBy")(m,"outTime")}var f=0;m.forEach(function(e,t){var i=null!=e.inTime&&"string"==typeof e.inTime?e.inTime.stringToDateWithTime():new Date(e.inTime),o=null!=e.outTime&&"string"==typeof e.outTime?e.outTime.stringToDateWithTime():new Date(e.outTime),r=n.scale.stringToDateWithTime(),a=Math.abs(o-i)/36e5>16?Math.abs(o-i)/36e5*4:Math.abs(o-i)/36e5*3,s=Math.abs(i-r)/36e5*3,c=null!=d?Math.abs(i-(d.outTime?d.outTime.stringToDateWithTime():new Date(d.outTime)))/36e5*3:0;if(c>0){var p=Math.abs((d.outTime?d.outTime.stringToDateWithTime():new Date(d.outTime))-r)/36e5*3;l(f,c,p,"#B7DDF4",!0,d,e),f++}y.length<=2&&a<1&&(a=1),l(f,a,s,"#30ABF2",!1,d,e),f++,d=angular.copy(e)})}}}]).directive("circleImageGenerator",["$filter",function(e){return{restrict:"A",scope:{firstName:"=",lastName:"=",index:"="},controller:["$scope",function(e){e.vm={},e.vm.backgroundColors=["#F4B400","#33B679","#E7711B","#9E69AF","#15A0CB"],e.getRandomColor=function(t){return e.vm.backgroundColors[t%e.vm.backgroundColors.length]}}],replace:!0,template:'<div><div class="img-circle img-initials"  data-ng-style="{\'background-color\':getRandomColor(index)}">{{firstName | limitTo:1}}{{lastName | limitTo:1}}</div></div>'}}]).directive("onlyDigits",function(){return{restrict:"A",require:"?ngModel",link:function(e,t,i,n){n.$parsers.push(function(e){if(void 0==e)return"";var t=e.replace(/[^0-9]/g,"");return t!=e&&(n.$setViewValue(t),n.$render()),t})}}}).directive("xhrNiceScroll",[function(){return{restrict:"A",link:function(e,t,i,n){t.niceScroll({autohidemode:i.autoHide,background:"rgb(206,208,211)",cursorwidth:"10px"}),t.mouseover(function(){t.getNiceScroll().resize()})}}}]).directive("xhrAlterBanner",function(){return{restrict:"A",link:function(e,t){var i=new Date;if(0==i.getMonth()&&i.getDate()>=25&&i.getDate()<=29||7==i.getMonth()&&i.getDate()>=15&&i.getDate()<=20)return n="/Content/images/banner/5.jpg",void t.css({"background-image":"url("+n+")"});var n="/Content/images/banner/"+(Math.round(((new Date).setHours(23)-new Date((new Date).getYear()+1900,0,1,0,0,0))/1e3/60/60/24)%4).toString()+".jpg";t.css({"background-image":"url("+n+")"})}}}).directive("xhrFeatureAuthorize",["AppFeatures","AppContext","ngIfDirective","$q",function(e,t,i,n){var o=i[0];return{scope:!1,transclude:o.transclude,priority:o.priority-1,terminal:o.terminal,restrict:o.restrict,link:function(e,i,n){var r,a=function(){return t.isFeaturePresent(n.feature)},s=n.ngIf;r=s?function(){return e.$eval(s)&&a()}:function(){return a()},n.ngIf=r,o.link.apply(o,arguments)}}}]).directive("xhrHideIfUnauthorized",["ngIfDirective","AppContext",function(e,t){var i=e[0];return{scope:!1,transclude:i.transclude,priority:i.priority-1,terminal:i.terminal,restrict:i.restrict,link:function(e,n,o){var r,a=function(){var i=o.privileges.split(","),n=e.$eval(o.empattributes);return t.hasPrivilege(i,n)},s=o.ngIf;r=s?function(){return e.$eval(s)&&a()}:function(){return a()},o.ngIf=r,i.link.apply(i,arguments)}}}]).directive("setFocus",function(){return{restrict:"A",link:function(e,t,i){e.$watch(i.setFocus,function(e,i){0!=e&&e&&t[0].focus()})}}}).directive("convertToNumber",function(){return{require:"ngModel",link:function(e,t,i,n){n.$parsers.push(function(e){return parseInt(e,10)}),n.$formatters.push(function(e){return""+e})}}}).directive("ngPdf",["$window",function(e){var t=function(e,t,i){var n=function(e){var t=e.getContext("2d");return(window.devicePixelRatio||1)/(t.webkitBackingStorePixelRatio||t.mozBackingStorePixelRatio||t.msBackingStorePixelRatio||t.oBackingStorePixelRatio||t.backingStorePixelRatio||1)}(e);return e.width=Math.floor(t*n),e.height=Math.floor(i*n),e.style.width=Math.floor(t)+"px",e.style.height=Math.floor(i)+"px",e.style.margin="80px",e.getContext("2d").setTransform(n,0,0,n,0,0),e};return{restrict:"E",templateUrl:function(e,t){return t.templateUrl?t.templateUrl:"_PdfViewer.cshtml"},link:function(i,n,o){var r=i.pdfUrl||o.pdfUrl,a=null,s=o.page?o.page:1,l=o.scale>0?o.scale:1,c=o.canvasid?document.getElementById(o.canvasid):document.getElementById("pdf-canvas"),p=c.getContext("2d"),u=angular.element(e);function d(){r&&r.length&&($(".loading").show(),m(),PDFJS.getDocument(r,null,null,i.onProgress).then(function(e){"function"==typeof i.onLoad&&i.onLoad(),r&&r.length?(a=e,i.renderPage(i.pageToDisplay),i.$apply(function(){i.pageCount=e.numPages,$(".loading").hide()})):i.$apply(function(){$(".loading").hide()})},function(e){e&&"function"==typeof i.onError&&(i.onError(e),$(".loading").hide())}))}function m(){var e=$("#pdf");e[0].getContext("2d").clearRect(0,0,e.width(),e.height()+200)}u.on("scroll",function(){i.$apply(function(){i.scroll=u[0].scrollY})}),PDFJS.disableWorker=!0,i.pageNum=s,i.renderPage=function(e){a.getPage(e).then(function(e){var r,a,s,u;"page-fit"!==o.scale||l?r=e.getViewport(l):(r=e.getViewport(1),a=n[0].clientWidth/r.width,s=n[0].clientHeight/r.height,l=Math.min(a,s)),t(c,r.width,r.height),u={canvasContext:p,viewport:r},e.render(u).promise.then(function(){"function"==typeof i.onPageRender&&i.onPageRender()})})},i.goPrevious=function(){i.pageToDisplay<=1||(i.pageNum=parseInt(i.pageNum)-1)},i.goNext=function(){i.pageToDisplay>=a.numPages||(i.pageNum=parseInt(i.pageNum)+1)},i.zoomIn=function(){return l=parseFloat(l)+.2,i.renderPage(i.pageToDisplay),l},i.zoomOut=function(){return l=parseFloat(l)-.2,i.renderPage(i.pageToDisplay),l},i.changePage=function(){i.renderPage(i.pageToDisplay)},i.rotate=function(){"rotate0"===c.getAttribute("class")?c.setAttribute("class","rotate90"):"rotate90"===c.getAttribute("class")?c.setAttribute("class","rotate180"):"rotate180"===c.getAttribute("class")?c.setAttribute("class","rotate270"):c.setAttribute("class","rotate0")},i.$watch("pageNum",function(e){i.pageToDisplay=parseInt(e),null!==a&&i.pageToDisplay&&i.pageToDisplay<=a.numPages&&i.renderPage(i.pageToDisplay)}),i.onPageNumberChanged=function(e){i.pageToDisplay=parseInt(e),null!==a&&i.pageToDisplay&&i.pageToDisplay<=a.numPages&&i.renderPage(i.pageToDisplay)},i.$watch("pdfUrl",function(e){if(""!==e)r=e,i.pageToDisplay=1,i.pageNum=1,d();else{var t=$("#pdf");t[0].getContext("2d").clearRect(0,0,t.width(),t.height()+200),$(".loading").hide()}}),i.$watch(o.pdfUrl,function(e){e&&""!==e?(r=e,i.pageToDisplay=1,i.pageNum=1,d()):($(".loading").hide(),m())}),i.$on("resetPdfCanvas",function(e,t){$(".loading").hide(),m()})}}}]).directive("setHeight",["$window",function(e){return{link:function(t,i,n){var o=e.document.documentElement.clientHeight/e.innerHeight;console.log(o),i.css("min-height",e.innerHeight-64)}}}]).directive("toggleOnFocus",function(){return{link:function(e,t,i){var n=$(t).find(".dropdown-toggle");t.on("focus",function(e){e.stopPropagation(),$(t).bind("keyup","keydown",function(e){$(n).click()})}),t.on("keypress",function(e){$(n).click()})}}}).directive("selectOnFocus",["$timeout",function(e){return function(e,t,i){t.on("focus",function(){$(t).select()})}}]).directive("resize",["$window",function(e){return function(t,i,n){t.$watch(function(){return{h:e.innerHeight,sh:e.document.body.scrollHeight}},function(e,i){t.resizeWithOffset=function(t){var n,o=$("#left-nav-body").height()+100;return e.h==i.h&&e.sh>i.sh?n=e.sh:e.sh<i.sh&&(n=e.h),o>=n&&(n=o),{"min-height":n-t+"px"}}},!0),$(window).bind("resize",function(){t.$apply()})}}]).directive("xhrUiSlider",["$filter","$compile","$rootScope",function(e,t,i){return{restrict:"A",require:"ngModel",scope:{pip:"=pip",float:"=float",settings:"=xhrUiSlider",ngModel:"="},link:function(n,o,r){function a(e){var t=[];e&&(n.settings.values=e.values);for(var i=0;i<=n.settings.values.length;i++)t.push(s(i));n.ngModel=t}function s(e){var t,i;return 0==e?(t=0,i=n.settings.values[e]):e==n.settings.values.length?(t=n.settings.values[e-1],i=n.settings.max):(t=n.settings.values[e-1],i=n.settings.values[e]),{structure:n.settings.slabLables[e],min:t,max:i,multiplier:n.settings.multiplier}}function l(e){return e/n.settings.max*100}function c(e,t){var i=n.settings.max;return Math.abs(t-e)/i*100}function p(e){for(var t=o.find(".range-slab"),i=0;i<t.length;i++){if(0==i)var r=0,a=c(0,e.values[i]);else if(i==t.length)r=l(e.values[i-1]),a=c(e.values[i-1],n.settings.max);else r=l(e.values[i-1]),a=c(e.values[i-1],e.values[i]||n.settings.max);u(t[i],i,r,a)}}function u(e,t,i,n){$(e).css({left:i+"%",width:n+"%"})}function d(e){var t=o.find(".range-slab");n.currentSlab&&$(n.currentSlab).removeClass("active-slab"),n.currentSlab=t[e],$(n.currentSlab).addClass("active-slab")}n.float.formatLabel=function(t){return e("currency")(t*n.settings.multiplier,"",0)},n.rangeClick=function(e){d(e),n.$emit("structureSelected",{name:n.settings.slabLables[e].name,index:e})},o.on("slidechange",function(e,t){n.noSlideChange||(a(t),n.$$phase||i.$$phase||n.$apply())}),o.on("slide.selectPip",function(e,t){p(t)}),o.on("mousedown.selectPip",function(e){}),o.on("slidechange slide",function(t,i){var o=e("currency")(i.value*n.settings.multiplier,"",0);$(i.handle).find(".ui-slider-tip").html(o)}),o.on("slide",function(e,t){var i=t.values.indexOf(t.value);if(curr=t.values[i],next=t.values[i+1]-15,prev=t.values[i-1]+15,curr>next||curr<prev){var n=$.Event("mouseup",{which:1});return $(t.handle).trigger(n),!1}}),n.$on("initSlider",function(e,i){o.slider("instance")&&o.slider("destroy"),n.xhrSlider=o.slider(i).slider("pips",n.pip).slider("float",n.float),o.find(".range-slab").remove(),function(){if(0==o.find(".range-slab").length){for(var e=n.settings.values.length,i="",r=0;r<=e;r++)i+='<span class="range-slab" data-ng-click="rangeClick('+r+')">'+n.settings.slabLables[r].title+"</span>";o.append(t(i)(n))}}(),a(),d(0),p(i)}),n.$on("setHandles",function(e,t){n.noSlideChange=!0;for(var i=0;i<t.values.length;i++)n.xhrSlider.slider("values",i,t.values[i]);a(),p(t),n.noSlideChange=!1}),n.$on("sliderLock",function(e,t){n.xhrSlider.slider("option","disabled",t)})}}}]).directive("xhrSwitchBtn",function(){return{restrict:"AE",replace:!0,transclude:!0,template:function(e,t){var i="true"==t.toggle?"!"+t.ngModel:t.ngModel,n="";return n+="<span",n+=' class="switch'+(t.class?" "+t.class:"")+'"',n+=t.ngModel?' ng-click="'+(t.disabled||t.ngDisabled)+" ? "+t.ngModel+" : "+t.ngModel+"=!"+t.ngModel+(t.ngChange?"; "+t.ngChange+'()"':'"'):"",n+=" ng-class=\"{ 'checked':"+i+", 'disabled':"+t.disabled+", 'cursor-not-allowed':"+t.ngDisabled+' }"',n+=">",n+="<small></small>",n+='<input type="checkbox"',n+=t.id?' id="'+t.id+'"':"",n+=t.name?' name="'+t.name+'"':"",n+=t.ngModel?' ng-model="'+t.ngModel+'"':"",n+=' style="display:none" />',n+='<span class="switch-text">',n+=t.on?'<span class="on">'+t.on+"</span>":"",n+=t.off?'<span class="off">'+t.off+"</span>":" ",n+="</span>"}}}).directive("focusElement",function(){return{link:function(e,t,i){t.on("mousedown",function(e){e.stopPropagation(),t.parents().find(".focused").removeClass("focused"),t.addClass("focused")}),t.parents().on("mousedown",function(e){t.removeClass("focused")})}}}).directive("itemsSortable",function(){return{restrict:"A",scope:{sortItems:"&"},link:function(e,t,i){t.sortable({items:i.sortableElement,containment:i.containment,start:function(e,t){},update:function(t,i){var n=$(i.item).attr("data-element-index"),o=$(i.item).next().attr("data-element-index"),r=$(i.item).prev().attr("data-element-index");n&&(o||r)&&e.sortItems({item:{currentIndex:n,nextElementIndex:o,prevElementIndex:r}})}})}}}).directive("itemsDroppable",function(){return{restrict:"A",scope:{addNewField:"&"},link:function(e,t,i){t.droppable({accept:".create-field-item",drop:function(t,i){e.addNewField({type:i.draggable.attr("data-template-name")})}})}}}).directive("itemsDraggable",function(){return function(e,t,i){t.draggable({helper:i.helper,revert:"invalid",containment:i.containment,zIndex:9999,drag:function(e,t){var n=e.pageY-$(i.containment).offset().top;n<10?$(i.containment).scrollTop($(i.containment).scrollTop()-15):n>$(i.containment).height()-10&&$(i.containment).scrollTop($(i.containment).scrollTop()+15)}})}}).directive("propertiesMenuCollapse",["$timeout",function(e){return function(t,i,n){$("body").on("click",function(){$(i).find(".in").collapse("hide")}),$(i).find(".menu-content").on("click",function(e){e.stopPropagation()}),$(i).find(".menu-content").on("click","li",function(t){e(function(){$(i).find(".in").collapse("hide")},0)})}}]).directive("sameHeight",["$window","$timeout",function(e,t){var i={restrict:"A",groups:{},link:function(n,o,r){function a(){i.groups[r.sameHeight]||(i.groups[r.sameHeight]={height:0,elems:[]}),i.groups[r.sameHeight].elems.push(o),o[0].style.height="",i.groups[r.sameHeight].height<o[0].offsetHeight&&(i.groups[r.sameHeight].height=o[0].offsetHeight),n.$last&&(angular.forEach(i.groups[r.sameHeight].elems,function(e){e[0].style.height=i.groups[r.sameHeight].height+"px"}),i.groups[r.sameHeight].height=0)}t(a),angular.element(e).on("resize",a)}};return i}]).directive("xhrMusterWidthGetter",["$timeout","$window",function(e,t){return{restrict:"A",scope:{xhrMusterWidthGetter:"="},link:function(i,n,o){var r=$(t);function a(){var e=n.find(".week-day");if(e.length>0){var t=$(e[0]).outerWidth();i.xhrMusterWidthGetter=t,i.$apply()}}e(function(){a()},200),r.bind("resize",function(){a()})}}}]).directive("dotdotdot",["$timeout",function(e){return{restrict:"A",link:function(t,i,n){e(function(){for(var e=$(i).children().first(),t=$(i).height();$(e).outerHeight()>t;)$(e).text(function(e,t){return t.replace(/\W*\s(\S)*$/,"...")})},0)}}}]).directive("shortDisable",["$timeout",function(e){return{restrict:"A",scope:{timeSpan:"="},link:function(t,i,n){var o=!1;i.bind("click",function(i){o?(i.preventDefault(),i.stopImmediatePropagation()):o=!0,e(function(){o=!1},t.timeSpan)})}}}]).directive("xhrMonthPicker",["$timeout","$parse",function(e,t){return{restrict:"E",scope:{yearList:"=years",ngModel:"=ngModel",onChange:"&onChange"},templateUrl:"yearMonthPicker",require:"ngModel",link:function(i,n,o){i.showMonth=!1,i.showYear=!1,i.isOpened=!1,i.yearOnly=t(o.yearOnly)(i);var r=70,a=n.find(".year-btn"),s=function(){i.isOpened=!1,i.showMonth=!1,i.showYear=!1},l=function(){return i.yearOnly&&i.ngModel?i.ngModel.year:i.ngModel?i.ngModel.year+" "+i.ngModel.monthName:"yyyy MMM"},c=function(){i.showYear=!i.showYear,i.isOpened=!i.isOpened,i.showMonth=!1,i.$applyAsync()};i.getYearMonth=function(e){if(i.ngModel&&!e)return l();var t=i.yearList[i.yearList.length-1];return t&&(i.ngModel=t.months[t.months.length-1],i.onChange({selectedValue:i.ngModel})),l()},i.$on("monthYearListChanged",function(e,t){i.getYearMonth(!0)}),i.setOnlyYear=function(){i.selectedYear&&(i.ngModel={year:i.selectedYear.year},i.onChange({selectedValue:i.ngModel}))},i.yearSelected=function(t,n){if(n.stopPropagation(),i.selectedYear=t,i.yearOnly)return i.setOnlyYear(),void s();i.showMonth=!i.showMonth||t.months.length>0,e(function(){var e=$(n.target).offsetParent().position();r=$(n.target).outerWidth();var t=$(n.target).index();$(".month-list").css({top:e.top+32*t+"px",left:e.left+1+r+"px"})},2)},i.monthSelected=function(e,t){t.stopPropagation(),i.ngModel=e,s(),i.onChange({selectedValue:i.ngModel})},$(n).on("click",function(e){e.stopPropagation(),i.isOpened||c()}),$(a).on("mouseenter",function(e){e.stopPropagation(),i.isOpened||c()}),$(n).on("mouseleave",function(e){e.stopPropagation(),i.isOpened&&(s(),i.$applyAsync())}),$("body").on("click",function(e){s(),i.$applyAsync()})}}}]).directive("followText",["$window","$interval",function(e,t){return{scope:{text:"=",delay:"=",xOff:"=",yOff:"=",letterSpace:"="},link:function(t,n,o,r){var a=e.document;ns4=!!(navigator.appName.indexOf("Netscape")>=0&&a.layers),ie4=!(!a.all||a.getElementById),ie5=!(!a.all||!a.getElementById),ns6=!!(a.getElementById&&navigator.appName.indexOf("Netscape")>=0);var s=new Array,l=[t.text],c=0,p=-1e3,u="";for(i=1;i<=l.length;i++)u+=ns4?'<layer name="txt'+i+'" top="-100" left="0" width="'+t.letterSpace+'" height="1">':'<div id="txt'+i+'" class="follow-text">',u+='<font color="#333">'+l[i-1]+"</font>",u+=ns4?"</layer>":"</div>";function d(e){var i,o,r;c=t.xOff+(ie4||ie5?event.clientX+n.scrollLeft:e.pageX),p=t.yOff+(ie4||ie5?event.clientY+n.scrollTop:e.pageY),i=s[1],o=c,r=p,ns4?i.moveTo(o,r):(i.style.left=o+"px",i.style.top=r+"px")}n.append(u),e.onload=function(){for(i=1;i<=l.length;i++)s[i]=ns4?n.layers["txt"+i]:ie4?n.all["txt"+i]:a.getElementById("txt"+i);ns4&&a.captureEvents(Event.MOUSEMOVE),a.onmousemove=d}}}}]).directive("xhrCodeFormat",["$timeout",function(e){return{restrict:"A",scope:!1,link:function(t,i,n){e(function(){for(var e=i.find("code"),t=0;t<e.length;t++)Prism.highlightElement(e[t])},500)}}}]).directive("xhrTimePicker",[function(){return{restrict:"A",require:"?ngModel",link:function(e,t,i,n){var o=/^[0-9]?[0-9]$/;t.attr("class").split("s").forEach(function(e){(/end-time/.test(e)||/end-/.test(e))&&!0}),t.keydown(function(e){(o.test(t.val())||t.val().indexOf(":")<0)&&(186==e.keyCode||59==e.keyCode)&&e.shiftKey||-1!=$.inArray(e.keyCode,[8,46,9,27,110,190,37,39])||65==e.keyCode&&!0===e.ctrlKey||(e.shiftKey||e.keyCode<48||e.keyCode>57)&&(e.keyCode<96||e.keyCode>105)&&e.preventDefault()}),t.on("click",function(e){e.stopPropagation()}),t.on("focus",function(){$(this).select()}),t.on("blur",function(){if(/^[0-9][0-9]:[0-9][0-9]$/.test(t.val())){var e=t.val().split(":")[0],i=t.val().split(":")[1];parseInt(e)>23&&(e=23),parseInt(i)>59&&(i=59),t.val(e+":"+i)}else if(/^[0-9]:[0-9][0-9]$/.test(t.val())){i=t.val().split(":")[1];parseInt(i)>59&&(i=59),t.val("0"+t.val().split(":")[0]+":"+i)}else/^\d$/.test(t.val())?t.val("0"+t.val()+":00"):/^\d{2}$/.test(t.val())?(parseInt(t.val())>23&&t.val("00"),t.val(t.val()+":00")):/^[0-9]:[0-9]$/.test(t.val())?t.val("0"+t.val().split(":")[0]+":0"+t.val().split(":")[1]):/^[0-9][0-9]:[0-9]$/.test(t.val())?t.val(t.val().split(":")[0]+":0"+t.val().split(":")[1]):t.val("00:00");""!=t.val()&&n.$setViewValue(t.val())})}}}]).directive("attachOnScroll",["$timeout",function(e){return{restrict:"A",scope:{extraOffset:"<"},link:function(t,i,n){var o=n.parentScrollClass?$("."+n.parentScrollClass):$(window),r=t.extraOffset||20;e(function(){var e,t,n,a=function(){e=i.offset().top-r,t=i.height(),n=$(window).height()<i.height()+r?i.height()+r-$(window).height():0};a(),o.on("scroll",function(r){i.height()!=t&&a(),o.scrollTop()>e+n?o.scrollTop()+i.height()<=$(document).height()&&i.css("top",o.scrollTop()-e-n):i.css("top",0)})},800),t.$on("$destroy",function(){o.off("scroll")})}}}]).directive("timeEntryWindowAlign",["$timeout",function(e){return{restrict:"A",scope:{},link:function(e,t,i){t.hover(function(){var e=t.offset().top-$(window).scrollTop(),i=t.children().find(".view-log-window");e+i.height()>window.innerHeight?(i.css("bottom",-10),i.css("top","")):(i.css("top",0),i.css("bottom",""))})}}}]).directive("openInAppBanner",["deviceDetector","$sce",function(e,t){return{restrict:"A",link:function(t,i,n){if(e.isMobile()){var o='<div class="view-in-app" id="openInAppView"><a onclick="window.open(\''+("android"==e.os?"https://play.google.com/store/apps/details?id=xhr.keka&hl=en":"https://itunes.apple.com/us/app/keka/id1082917021?mt=8")+'\')">Open in app</a><span class="icon-cross-4 node" onclick="this.parentElement.remove();"></span></div>';$("body").append(o)}}}}]).directive("autocompleteTime",["TimeListService",function(e){return{restrict:"A",scope:{range:"="},link:function(t,i,n){i.bind("keydown",function(e){e.keyCode!==$.ui.keyCode.LEFT&&e.keyCode!==$.ui.keyCode.RIGHT||_.defer(function(){i.autocomplete("search")})}).autocomplete({delay:100,source:function(n,o){var r=n.term.split(/\s*-\s*/,t.range?2:1),a=null;if(t.range){var s=i.caret(),l=n.term.indexOf("-");l<0&&(l=r[0].length),a=s>l?r.pop():r[0]}else a=r.pop();o($.grep(e.getTimes(),function(e){return a.match(":")?0==e.search(a):a.match(/(a|p)m?$/)?0==e.replace(":00","").replace(":","").search(a):0==e.replace(":","").search(a)}))},autoFocus:!0,focus:function(){return!1},select:function(e,n){e.keyCode==$.ui.keyCode.TAB&&-1==this.value.indexOf("-")&&e.preventDefault();var o=this.value.split(/\s*-\s*/,t.range?2:1),r=n.item.value;if(t.range){var a=i.caret(),s=this.value.indexOf("-");s<0&&(s=o[0].length),a>s?(o.pop(),o.push(r)):(o.shift(),o.unshift(r)),1==o.length&&o.push("")}else o=[r];return this.value=o.join(" - "),!1}})}}}]).directive("resizeFreezedCells",["$timeout",function(e){return{restrict:"A",scope:{},link:function(t,i,n){function o(){var e=i.find("tr");$.each(e,function(e,t){$(t).children(".freezed-column").height($(t).height()-2)})}e(function(){o()},200),t.$on("schedulerRowsUpdated",function(){e(function(){o()},100)})}}}]).directive("sidebarDropdownList",["$timeout",function(e){return{restrict:"C",scope:{},link:function(t,i,n){e(function(){i.children().length<=1&&i.hide()})}}}]).directive("xhrProgressBar",["$timeout","$window","$parse","$filter",function(e,t,i,n){return{restrict:"E",scope:{options:"=",max:"=",value:"=",text:"=",strikethrough:"=",textIcon:"@",showMaxIcon:"=",hideValue:"="},link:function(e,i,o){var r=angular.copy(e.options);if(!r&&"object"!=typeof r)throw new Error("Options are required for progressbar!");var a=ProgressBar||t.ProgressBar,s=i[0];function l(t){e.progressBar&&(t&&t>-1?(e.progressBar.setText(n("number")(t,"1")||""),e.strikethrough&&$(s).find(".xhr-progress-text").addClass("strike-through")):e.progressBar.setText(""))}function c(t){return(t=t||0)/(e.max||100)}e.progressBar=null,e.progressBar=new a.Circle(s,r),e.progressBar.animate(c(e.value),r,null),e.$watch("value",function(t){var i=c(t);1==i&&e.showMaxIcon&&e.textIcon?(l(""),function(e){if(e){r.text.className=e;var t=$(s).find(".xhr-progress-text");t&&t.addClass(r.text.className)}else{var t=$(s).find(".xhr-progress-text");t&&(t.removeAttr("class"),t.addClass("xhr-progress-text"))}}(e.textIcon)):e.hideValue||l(t),e.progressBar.animate(i)}),e.$watch("text",function(e){l(e)})}}}]).directive("trumbowygConfig",[function(){return{transclude:!0,restrict:"EA",require:"ngModel",scope:{editorSettings:"=",processedText:"=",excerptText:"="},link:function(e,t,i,n){n.$render=function(){angular.element(t).trumbowyg("html",n.$viewValue)},angular.element(t).trumbowyg(e.editorSettings).on("tbwchange",function(){o(angular.element(t).trumbowyg("html"))}).on("tbwpaste",function(){o(angular.element(t).trumbowyg("html"))});var o=function(t){n.$setViewValue(t);var i=$("<div>"+t+"</div>"),o=i.find("a.trumbowyg-non-editable");angular.forEach(o,function(e){var t=$(e);typeKey=t.attr("typeKey"),t.html("{{"+(typeKey?typeKey+".":"")+t.html().replace(/\s/g,"")+"}}")}),e.processedText=i.html(),e.excerptText=i.text()}}}}]).directive("compileTemplate",["$compile",function(e){return{restrict:"A",scope:{templateSource:"=",templateDestination:"=",destinationExcerpt:"=",templateModel:"="},link:function(t,i,n){angular.forEach(t.templateModel,function(e,i){t[i]=e||""});var o=e("<div>"+t.templateSource+"</div>")(t);t.templateDestination=$(o).html(),t.destinationExcerpt=$(o).text(),i.append(o)}}}]).directive("xhrResizePageHeight",["$timeout","$parse","$window",function(e,t,i){return{restrict:"A",link:function(e,n,o){var r=angular.element(i);function a(){var e=t(o.offset)()||100;r.outerHeight()>100?$(n).height(r.outerHeight()-e):$(n).height(r.outerHeight())}a(),r.bind("resize",function(){a()})}}}]).directive("xhrHorizontalScroller",["$timeout","$window",function(e,t){return{restrict:"A",link:function(i,n,o){var r=$(n.find(".btn-left-scroll").get(0)),a=$(n.find(".btn-right-scroll").get(0));if(r.get(0)||a.get(0)){var s,l,c,p,u=$(n.find("ul"));r.click(function(){u.animate({scrollLeft:0},200)}),a.click(function(){m(),u.animate({scrollLeft:c},200)}),$(t).resize(function(){m()}),e(function(){m(),u.on("scroll",function(){m()}),function e(){clearTimeout(p);timeoutId=setTimeout(function(){l=d(u),s=u.outerWidth(),l-s>20?(r.css({display:"block"}),a.css({display:"block"})):(r.css({display:"none"}),a.css({display:"none"})),e()},100)}()},100);var d=function(e){var t=0;return e.find("li").each(function(e,i){t+=i.offsetWidth}),t},m=function(){u=$(n.find("ul")),s=u.outerWidth(),l=d(u),c=l-s};n.on("$destroy",function(){clearTimeout(p)})}}}}]).directive("xhrPrettyDiff",["NotificationService",function(e){return{restrict:"E",scope:{src:"<",diff:"<"},templateUrl:"prettyDiffTemplate",link:function(e,t,i){var n={mode:"beautify",lang:"auto"};e.options={diffview:"sidebyside",context:1,difflabel:"UPDATED",sourcelabel:"ORIGINAL"},e.beautify=function(e){return""==e?e:(n.source=e,global.prettydiff.prettydiff(n))},e.diffHtml="",e.diffView=function(){e.options.source=e.beautify(e.src),e.options.diff=e.beautify(e.diff),e.diffHtml=global.prettydiff.diffview(e.options)[0]},e.diffView()}}}]),appRoot.factory("Constants",[function(){var e=function(e){angular.extend(this,e)};return e.prototype.getById=function(e){var t=Object.keys(this).find(function(t){return this[t].id===e},this);return t?this[t]:null},e.prototype.getByName=function(e){var t=Object.keys(this).find(function(t){return this[t].name===e},this);return t?this[t]:null},e.prototype.getByTitle=function(e){var t=Object.keys(this).find(function(t){return this[t].title===e},this);return t?this[t]:null},e.prototype.getAll=function(){return Object.keys(this).map(function(e){return this[e]},this)},e}]),appRoot.factory("AppContext",["$resource","$q",function(e,t){var i,n={},o=appAccessKeys;return n.isOrgSetupComplete=isOrgSetupComplete,n.isOnboardComplete=isOnboardComplete,n.currentInvoiceStatus=currentInvoiceStatus,n.isGlobalAdmin=isGlobalAdmin,n.isProjectAdmin=isProjectAdmin,n.isBillingManager=isBillingManager,n.isHRManager=isHRManager,n.isPMSAdmin=isPMSAdmin,n.isPayrollAdmin=isPayrollAdmin,Object.defineProperty(n,"keyResultAliasPlural",{get:function(){return this.keyResultAlias+"s"}}),Object.defineProperty(n,"goalAliasPlural",{get:function(){return this.goalAlias+"s"}}),n.currentUser=function(){return i||(i=t.defer(),e("/api/me/publicprofile").get({},function(e){n.myPublicProfile=e,i.resolve(n.myPublicProfile)})),i.promise},e("/api/context/org").get({},function(e){n.org=e}),n.orgFeatures=function(){return o},n.isFeaturePresent=function(e){return-1!=o.indexOf(e)},n.hasPrivilege=function(e,t){return e&&e.some(function(e){return!!n.isGlobalAdmin||(t?n.myPublicProfile&&(n.myPublicProfile.id===t.reportingTo&&hasPrivilegeForImplicitRole(1,e)||n.myPublicProfile.id===t.l2ManagerId&&hasPrivilegeForImplicitRole(2,e)||isSegmentHead(t.groupIds)&&hasPrivilegeForImplicitRole(7,e)||n.roles.some(function(i){return roleHasPrivilege(i,e)||t.groupIds.some(function(t){return roleHasPrivilege(i,e,t)})})):n.roles&&n.roles.some(function(t){return roleHasPrivilege(t,e)}))})},roleHasPrivilege=function(e,t,i){return e.isGlobal?e.privileges.some(function(e){return e===t}):null!==i?e.groupIds.some(function(e){return e===i})&&e.privileges.some(function(e){return e===t}):e.privileges.some(function(e){return e===t})},hasPrivilegeForImplicitRole=function(e,t){return n.roles.some(function(i){return i.implicitRoleType===e&&i.privileges.some(function(e){return e===t})})},isSegmentHead=function(e){return n.segments.some(function(t){return t.segmentDetails.rules.every(function(t){return t.values.some(function(t){return e.includes(t)})})})},initialize=function(){t.all([e("/api/auth/employee/roles").get({}).$promise,e("/api/context/payrollpermissions").get({}).$promise]).then(function(e){n.roles=e[0].roleDefinitions,n.segments=e[0].segments,n.systemRoles=e[0],n.payrollVisibilityPermission=e[1]})},initialize(),n}]),function(e){!function(e){var t=function(){function e(e,t,i,n){this.resource=e,this.q=t,this.environment=i,this.appContext=n}return e.prototype.trackEvent=function(e){var t={};this.setAuditLogDefaultProperties(t);var i=this.getAmplitudeModel(e);t.type=1,t.properties=i,this.resource(this.environment.auditApiTrackEndPoint).save({},t).$promise,this.resource(this.environment.amplitudeTrackingApiUrl).save({},i).$promise},e.prototype.saveCrudOperation=function(e){void 0===e&&(e={}),this.resource(this.environment.auditApiCrudEndpoint).save({},e).$promise},e.prototype.setAuditLogDefaultProperties=function(e){return e.sentAt=new Date,e.context={userAgent:window.navigator.userAgent},this.appContext&&this.appContext.myPublicProfile&&(e.userId=this.appContext.myPublicProfile.id.toString()),this.appContext&&this.appContext.org&&(e.tenantId=this.appContext.org.tenantId),e},e.prototype.getAmplitudeModel=function(e){return{api_key:this.environment.amplitudeApiKey,event_name:e,events:[{user_id:this.appContext.org.tenantId,event_type:e,user_properties:{tenantId:this.appContext.org.tenantId,name:this.appContext.org.name,subdomainname:this.appContext.org.subDomainName}}]}},e.$inject=["$resource","$q","EnvironmentConstants","AppContext"],e}();e.KekaAuditService=t,angular.module("xhr").service("KekaAuditService",t)}(e.Services||(e.Services={}))}(Xhr||(Xhr={})),appRoot.factory("LeavePrivileges",["Constants",function(e){return new e({CANAPPROVE:{id:0,displayTitle:"CANAPPROVE",value:"LEAVE.APPROVE"}})}]),appRoot.factory("HRISPrivileges",["Constants",function(e){return new e({ADDEMPLOYEE:{id:0,displayTitle:"ADDEMPLOYEE",value:"HRIS.ADD_EMPLOYEE"}})}]),appRoot.factory("TimesheetPrivileges",["Constants",function(e){return new e({CANAPPROVE:{id:0,displayTitle:"Approve Timesheets",value:"TIMESHEET.APPROVE"},CANMANAGE:{id:1,displayTitle:"Manage tasks & Team",value:"TIMESHEET.MANAGE"}})}]),appRoot.factory("FinancePriviliges",["Constants",function(e){return new e({CANVIEW:{id:0,displayTitle:"View Financials",value:"FINANCE.VIEW"},CANMANAGE:{id:0,displayTitle:"Manage Financials",value:"FINANCE.MANAGE"}})}]);var SharedModel,Xhr,ApprovalChain,SharedPatterns,SharedServices,Shared,__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){var t=function(){return function(e,t,i,n,o,r,a,s){void 0===s&&(s=!1),this.index=e,this.title=t,this.name=i,this.template=n,this.valid=o,this.init=r,this.description=a,this.disabled=s}}();e.Step=t;var i=function(){return function(e,t,i){this.name=e,this.title=t,this.sortReverse=i}}();e.TableHeader=i;var n=function(){function e(){}return Object.defineProperty(e.prototype,"name",{get:function(){return null},enumerable:!0,configurable:!0}),e}();e.ExportReport=n,e.monthNames=[{name:"JAN",fullName:"January"},{name:"FEB",fullName:"February"},{name:"MAR",fullName:"March"},{name:"APR",fullName:"April"},{name:"MAY",fullName:"May"},{name:"JUN",fullName:"June"},{name:"JUL",fullName:"July"},{name:"AUG",fullName:"August"},{name:"SEP",fullName:"September"},{name:"OCT",fullName:"October"},{name:"NOV",fullName:"November"},{name:"DEC",fullName:"December"}],function(e){e[e.None=0]="None",e[e.AllEmployees=1]="AllEmployees",e[e.RegisteredEmployees=2]="RegisteredEmployees",e[e.EmployeeInvitations=3]="EmployeeInvitations",e[e.PendingRegistrations=4]="PendingRegistrations",e[e.UnInvitedEmployees=5]="UnInvitedEmployees",e[e.EmployeesNeverLoggedIn=6]="EmployeesNeverLoggedIn",e[e.EmployeeType=7]="EmployeeType",e[e.EmployeeRoles=8]="EmployeeRoles",e[e.InCompleteProfiles=9]="InCompleteProfiles",e[e.EmployeesInProbation=10]="EmployeesInProbation",e[e.ConfirmedEmployees=11]="ConfirmedEmployees",e[e.EmployeesInNoticePeriod=12]="EmployeesInNoticePeriod",e[e.RelievedEmployees=13]="RelievedEmployees",e[e.EmployeesWithOutReportingManager=14]="EmployeesWithOutReportingManager",e[e.FamilyInfo=15]="FamilyInfo",e[e.BloodGroupInfo=16]="BloodGroupInfo",e[e.ContactInfo=17]="ContactInfo",e[e.SocialAccountInfo=18]="SocialAccountInfo",e[e.EducationDetails=19]="EducationDetails",e[e.ExperienceDetails=20]="ExperienceDetails",e[e.BirthDayReport=21]="BirthDayReport",e[e.WorkAnniversaryReport=22]="WorkAnniversaryReport",e[e.MarriageAnniversaryReport=23]="MarriageAnniversaryReport",e[e.LoginHistory=24]="LoginHistory",e[e.LoginFailures=25]="LoginFailures",e[e.JobTitles=26]="JobTitles",e[e.Departments=27]="Departments",e[e.LeavePlans=28]="LeavePlans",e[e.OrgLocations=29]="OrgLocations",e[e.WeekOffs=30]="WeekOffs",e[e.TimingPolicies=31]="TimingPolicies",e[e.Shifts=32]="Shifts",e[e.EmployeeLeavePlans=33]="EmployeeLeavePlans",e[e.EmployeeShifts=34]="EmployeeShifts",e[e.EmployeeWeekOffs=35]="EmployeeWeekOffs",e[e.EmployeeTimingPolicies=36]="EmployeeTimingPolicies",e[e.JobDetails=37]="JobDetails",e[e.FinancialDetails=38]="FinancialDetails",e[e.EmployeeBenefits=39]="EmployeeBenefits",e[e.ExpensePolicies=40]="ExpensePolicies",e[e.EmployeeCurrentSalaryDetails=41]="EmployeeCurrentSalaryDetails",e[e.EmployeeCustomFieldDetails=42]="EmployeeCustomFieldDetails",e[e.PollResponses=43]="PollResponses"}(e.EmployeeReportType||(e.EmployeeReportType={}));var o=function(){return function(e){this.approverType=e.approverType,this.approverId=e.approverId,this.approverName=e.approverName}}();e.Approver=o;var r=function(){return function(e){this.level=e.level,this.approvers=(e.approvers||[]).map(function(e){return new o(e)})}}();e.ApproverLevel=r;var a=function(){return function(e){if(null!=e)return this.approvalChain=e.approvalSettings.approvalChain,this.requireApproval=e.approvalSettings.requireApproval,this.requireApprovalComment=e.approvalSettings.requireApprovalComment,this.requireRejectionComment=e.approvalSettings.requireRejectionComment,void(this.autoApprovedIfNoApproversAvailable=e.approvalSettings.autoApprovedIfNoApproversAvailable);this.approvalChain=new s,this.requireApproval=!0,this.requireApprovalComment=!1,this.requireRejectionComment=!1,this.autoApprovedIfNoApproversAvailable=!1}}();e.ApprovalSettings=a;var s=function(){return function(){}}();e.ApprovalChain=s;var l=function(){return function(e,t){this.level=e,this.approvers=null==t?[]:t}}();e.ApprovalChainLevel=l;var c=function(){function e(){}return e.getAll=function(e){var t=[];return Object.keys(e).filter(function(e){return!e.match(/^\d+$/)}).forEach(function(i){t.push({id:e[i],title:i})}),t},e}();e.EnumUtils=c;var p=function(){return function(e){this.id=e.id,this.title=e.title,this.date=e.date,this.yPoint=e.yPoint,this.cssClass=e.cssClass,this.contentCode=e.contentCode,this.color=e.color,this.type=e.type}}();e.EventScaleItem=p}(SharedModel||(SharedModel={})),function(e){!function(e){var t=function(){function e(e){this.startedOn=e.startedOn,this.completedOn=e.completedOn,this.completedInDays=e.completedInDays,this.type=e.type,this.lastModifiedOn=e.lastModifiedOn,this.isStarted=e.isStarted,this.buildStatus()}return Object.defineProperty(e.prototype,"isSetupComplete",{get:function(){var e=this;return this.statusNames.every(function(t){return e[t]})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"progress",{get:function(){var e=this;return this.statusNames.filter(function(t){return e[t]}).length/this.statusNames.length*100},enumerable:!0,configurable:!0}),e}();e.ModuleSetup=t;var i=function(e){function t(t){var i=e.call(this,t)||this;return i.isLegalEntityAdded=t.isLegalEntityAdded,i.isLocationAdded=t.isLocationAdded,i}return __extends(t,e),t.prototype.buildStatus=function(){this.statusNames=["isLegalEntityAdded","isLocationAdded"]},t.prototype.update=function(e){this.constructor(e)},t}(t);e.OrgSetup=i;var n=function(e){function t(t){var i=e.call(this,t)||this;return i.isPlanSetupComplete=t.isPlanSetupComplete,i.isNotificationsComplete=t.isNotificationsComplete,i.isHolidaysAdded=t.isHolidaysAdded,i}return __extends(t,e),t.prototype.buildStatus=function(){this.statusNames=["isPlanSetupComplete","isHolidaysAdded"]},t.prototype.update=function(e){this.constructor(e)},t}(t);e.LeaveSetup=n;var o=function(e){function t(t){var i=e.call(this,t)||this;return i.hasAttendanceFeature=t.hasAttendanceFeature,i.hasAttendanceFeature&&(i.isAttendanceCaptureSchemeAdded=t.isAttendanceCaptureSchemeAdded),i.buildStatus(),i}return __extends(t,e),t.prototype.buildStatus=function(){this.statusNames=[],this.hasAttendanceFeature&&this.statusNames.push("isAttendanceCaptureSchemeAdded")},t.prototype.update=function(e){this.constructor(e)},t}(t);e.AttendanceSetup=o;var r=function(e){function t(t){var i=e.call(this,t)||this;return i.employeeDefaultAdded=t.employeeDefaultAdded,i.employeeNumberSettingsAdded=t.employeeNumberSettingsAdded,i}return __extends(t,e),t.prototype.buildStatus=function(){this.statusNames=["employeeDefaultAdded","employeeNumberSettingsAdded"]},t.prototype.update=function(e){this.constructor(e)},t}(t);e.EmployeeSetup=r;var a=function(e){function t(t){var i=e.call(this,t)||this;return i.employeesImported=t.employeesImported,i.employeeJobDetailsImported=t.employeeJobDetailsImported,i.leaveConsumedImported=t.leaveConsumedImported,i.leaveCarryoverImported=t.leaveCarryoverImported,i.employeeBasicDetailsImported=t.employeeBasicDetailsImported,i.employeePersonalDetailsImported=t.employeePersonalDetailsImported,i}return __extends(t,e),t.prototype.buildStatus=function(){this.statusNames=["employeesImported","employeeJobDetailsImported","leaveConsumedImported","leaveCarryoverImported"]},t.prototype.update=function(e){this.constructor(e)},t}(t);e.EmployeeImportSetup=a;var s=function(e){function t(t){var i=e.call(this,t)||this;return i.config=t.config,i}return __extends(t,e),Object.defineProperty(t.prototype,"isSetupComplete",{get:function(){return this.companyInfoComplete&&this.generalSettingsComplete&&this.pfesiComplete&&this.salaryConfigurationComplete&&this.customSalaryConfigComplete&&this.statutoryFilingDataComplete&&this.loanSettingsComplete},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"companyInfoComplete",{get:function(){return this.config&&this.config.setupState.companyInfoComplete},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"generalSettingsComplete",{get:function(){return this.config&&this.config.setupState.generalSettingsComplete},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"pfesiComplete",{get:function(){return this.config&&this.config.setupState.pfesiComplete},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"salaryConfigurationComplete",{get:function(){return this.config&&this.config.setupState.salaryConfigurationComplete},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"customSalaryConfigComplete",{get:function(){return this.config&&this.config.setupState.customSalaryConfigComplete},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"statutoryFilingDataComplete",{get:function(){return this.config&&this.config.setupState.statutoryFilingDataComplete},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"loanSettingsComplete",{get:function(){return this.config&&this.config.setupState.loanSettingsComplete},enumerable:!0,configurable:!0}),t.prototype.buildStatus=function(){this.statusNames=["companyInfoComplete","generalSettingsComplete","pfesiComplete","salaryConfigurationComplete","customSalaryConfigComplete","statutoryFilingDataComplete","loanSettingsComplete"]},t.prototype.update=function(e){},t}(t);e.PayrollSetup=s;var l=function(e){function t(t){var i=e.call(this,t)||this;return i.currentSalaryImported=t.currentSalaryImported,i.previousSalaryImported=t.previousSalaryImported,i.isPreviousSalaryRequired=t.isPreviousSalaryRequired,i}return __extends(t,e),t.prototype.buildStatus=function(){this.statusNames=["currentSalaryImported","previousSalaryImported"]},t.prototype.update=function(e){this.constructor(e)},t}(t);e.PayrollImportSetup=l;var c=function(){function e(e){this.id=e.id,this.orgId=e.orgId,this.orgFeatures=e.orgFeatures,this.orgSetup=new i(e.orgSetup),this.leaveSetup=new n(e.leaveSetup),this.attendanceSetup=new o(e.attendanceSetup),this.employeeSetup=new r(e.employeeSetup),this.employeeImportSetup=new a(e.employeeImportSetup),this.payrollSetup=new s(e.payrollSetup),this.payrollImportSetup=new l(e.payrollImportSetup)}return Object.defineProperty(e.prototype,"isSetupComplete",{get:function(){return this.isOrgSetupCompleted&&this.isEmployeeSettingsCompleted&&(!this.hasLeaveFeature||this.isLeaveSetupCompleted)&&(!this.hasPayrollFeature||this.isPayrollSetupCompleted)&&(!this.hasAttendanceFeature||this.isAttendanceSetupCompleted)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isOnboardComplete",{get:function(){return this.isSetupComplete&&this.isEmployeeBasicDetailsImported&&this.isEmployeePersonalDetailsImported&&(!this.hasPayrollFeature||this.isPayrollImportCompleted)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isOrgSetupCompleted",{get:function(){return this.orgSetup.isSetupComplete},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isLeaveSetupCompleted",{get:function(){return this.leaveSetup.isSetupComplete},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isAttendanceSetupCompleted",{get:function(){return this.attendanceSetup.isSetupComplete},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isEmployeeSettingsCompleted",{get:function(){return this.employeeSetup.isSetupComplete},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isEmployeeImportCompleted",{get:function(){return this.employeeImportSetup.isSetupComplete},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isEmployeeBasicDetailsImported",{get:function(){return this.employeeImportSetup.employeeBasicDetailsImported},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isEmployeePersonalDetailsImported",{get:function(){return this.employeeImportSetup.employeePersonalDetailsImported},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isPayrollSetupCompleted",{get:function(){return this.payrollSetup.isSetupComplete},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isPayrollImportCompleted",{get:function(){return this.payrollImportSetup.isSetupComplete},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hasPayrollFeature",{get:function(){return this.orgFeatures.some(function(e){return"PAYROLL"==e})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hasLeaveFeature",{get:function(){return this.orgFeatures.some(function(e){return"LEAVES"==e})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hasAttendanceFeature",{get:function(){return this.orgFeatures.some(function(e){return"ATTENDANCE"==e})},enumerable:!0,configurable:!0}),e.prototype.update=function(e){this.constructor(e)},e}();e.OnboardingSetup=c,function(e){e[e.orgSetup=0]="orgSetup",e[e.leaveSetup=1]="leaveSetup",e[e.attendanceSetup=2]="attendanceSetup",e[e.employeeSetup=3]="employeeSetup",e[e.employeeImportSetup=4]="employeeImportSetup",e[e.payrollSetup=5]="payrollSetup",e[e.payrollImportSetup=6]="payrollImportSetup"}(e.OrgSetupStep||(e.OrgSetupStep={}));var p=function(){return function(e,t,i,n){this.orgId=e,this.companyName=t,this.legalEntityName=i,this.legalEntityId=n}}();e.OrgLegalEntity=p}(e.Models||(e.Models={}))}(xhr||(xhr={})),appRoot.factory("SharedModel",function(){var e={hours:0,minutes:0,seconds:0,ms:0},t=[{name:"JAN",fullName:"January"},{name:"FEB",fullName:"February"},{name:"MAR",fullName:"March"},{name:"APR",fullName:"April"},{name:"MAY",fullName:"May"},{name:"JUN",fullName:"June"},{name:"JUL",fullName:"July"},{name:"AUG",fullName:"August"},{name:"SEP",fullName:"September"},{name:"OCT",fullName:"October"},{name:"NOV",fullName:"November"},{name:"DEC",fullName:"December"}];function i(t){return t?new n(t).setTimeSpan(e):(new Date).setTimeSpan(e)}function n(e){return"string"==typeof e?((String.prototype.endsWith&&!e.endsWith("Z")||"Z"!=e[e.length-1])&&(e+="Z"),new Date(new Date(e).getTime()+6e4*(new Date).getTimezoneOffset())):new Date(e)}function o(e){this.addressLine1=e.addressLine1,this.addressLine2=e.addressLine2,this.countryCode=e.countryCode,this.city=e.city,this.state=e.state,this.zip=e.zip}function r(e){this.id=e.id,this.employeeId=e.employeeId?e.employeeId:0,this.fromDate=e.fromDate?e.fromDate.stringToDate():null,this.toDate=e.toDate?e.toDate.stringToDate():null,this.note=e.note,this.availFloaterLeave=e.availFloaterLeave||!1,this.availSpecialLeave=e.availSpecialLeave||!1,this.status=e.status,this.dateApprovedRejected=e.dateApprovedRejected,this.selection=e.selection||[],this.isSick=e.isSick,this.systemGenerated=e.systemGenerated,this.fromSession=null==e.fromSession?0:e.fromSession,this.toSession=null==e.toSession?1:e.toSession,this.notifyTo=e.notifyTo||[],this.documentProofs=e.documentProofs||[]}function a(e){this.companyId=e.companyId,this.companyType=e.companyType,this.legalName=e.legalName,this.registrationDate=e.registrationDate&&"string"==typeof e.registrationDate?e.registrationDate.stringToDate():e.registrationDate,this.address=new o(e.address||{})}function s(e){this.stateCode=e.stateCode,this.signatory=e.signatory,this.valid=function(){return null!=this.stateCode&&null!=this.signatory}}return Date.prototype.toMMMyyyy=function(){return t[this.getMonth()].name+" "+this.getFullYear()},Date.prototype.setTimeSpan=function(e){return this.setHours(e.hours,e.minutes,e.seconds,e.ms),this},Date.prototype.equals=function(e){return this.getTime()==e.getTime()},Date.daysInMonth=function(e,t){return new Date(t,e+1,0).getDate()},Date.getDateObj=function(e){if(Date.valid(e)){if(e instanceof Date)return e;if("string"==typeof e)return e.stringToDate()}},Date.valid=function(e){return e instanceof Date?e.getFullYear()>1902:"string"==typeof e?e.stringToDate().getFullYear()>1902:void 0},Date.prototype.dateOnlyString=function(){return this.getFullYear()+"-"+(this.getMonth()+1)+"-"+this.getDate()},Date.prototype.getWeek=function(){var e=new Date(this.getFullYear(),this.getMonth(),1).getDay();return Math.ceil((this.getDate()+e)/7)},String.prototype.stringToDate=function(){var t=this.split("-");return new Date(t[0],t[1]-1,t[2]).setTimeSpan(e)},String.prototype.stringToDateWithTime=function(){return n(this.toString())},String.prototype.stringToDateWithZeroTime=function(){return i(this.toString())},r.prototype.toJSON=function(){return this.fromDate=this.fromDate.dateOnlyString(),this.toDate=this.toDate.dateOnlyString(),this},a.prototype.toJSON=function(){var e=angular.copy(this);return e.registrationDate=this.registrationDate.dateOnlyString(),e},{Address:o,LeaveRequest:r,Step:function(e){this.index=e.index,this.title=e.title,this.name=e.name,this.template=e.template,this.valid=e.valid,this.init=e.init},TableHeader:function(e){this.name=e.name,this.title=e.title,this.sortReverse=e.sortReverse},LeaveType:function(e){this.id=e.id,this.name=e.name,this.description=e.description,this.isPaid=e.isPaid,this.isSick=e.isSick,this.isStatutory=e.isStatutory,this.isNoteRequired=e.isNoteRequired,this.isDocumentProofRequired=e.isDocumentProofRequired,this.documentProofLeaveExceedDays=this.isDocumentProofRequired&&null!=e.documentProofLeaveExceedDays?e.documentProofLeaveExceedDays:null,this.isPriorNoticeRequired=e.isPriorNoticeRequired,this.minPriorNoticeDays=this.isPriorNoticeRequired&&null!=e.minPriorNoticeDays?e.minPriorNoticeDays:null,this.isRestrictedToGender=e.isRestrictedToGender,this.restrictedGender=this.isRestrictedToGender&&null!=e.restrictedGender?e.restrictedGender:null,this.isHalfDayAllowed=e.isHalfDayAllowed,this.systemLeaveType=e.systemLeaveType,this.isSystemGenerated=e.isSystemGenerated},Selection:function(e){this.leaveTypeId=e.leaveTypeId,this.count=e.count},LegalEntity:function(e){return{id:e.id,tenantId:e.tenantId,orgId:e.orgId,name:e.name,logoPath:e.logoPath,companyInfo:new a(e.companyInfo||{}),labourWelfareFundInfo:new s(e.labourWelfareFund||{}),signatory:e.signatory,bankAccount:e.bankAccount,get isSignatoryAndBankValid(){return this.bankAccount.length>0&&this.signatory.length>0}}},CompanyInfo:a,LabourWelfareFundInfo:s,IncomeTaxInfo:function(e){this.panNumber=e.panNumber,this.tanNumber=e.tanNumber,this.tanCircleNumber=e.tanCircleNumber,this.form16SignatoryId=e.form16SignatoryId,this.citLocation=e.citLocation,this.valid=function(){return null!=this.panNumber&&null!=this.tanNumber&&null!=this.tanCircleNumber&&null!=this.form16SignatoryId&&null!=this.citLocation}},DateWithZeroTime:i,StringToDate:n,SetupStep:function(e){angular.extend(this,e),this.id=e.id,this.title=e.title,this.description=e.description,this.isCurrentstep=e.isCurrentstep||!1,this.isCompleted=e.isCompleted||!1,this.isEnabled=this.isCompleted||this.isCurrentstep}}}),function(e){!function(e){var t=function(){function e(e,t){this.resource=e,this.q=t,this.lookupService=this.resource("/api/lookup/:type",{type:"@type"},{update:{method:"PUT"}})}return e.prototype.getAssetCategories=function(){return this.lookupService.get({type:"assetcategories"}).$promise},e.prototype.getMetricUnits=function(){return this.lookupService.query({type:"metricunits"}).$promise},e.prototype.getDepartments=function(){return this.lookupService.query({type:"departments"}).$promise},e.prototype.getLocations=function(){return this.lookupService.query({type:"locations"}).$promise},e.prototype.getTimezones=function(){return this.lookupService.query({type:"timezones"}).$promise},e.$inject=["$resource","$q"],e}();e.LookupService=t,angular.module("xhr").service("LookupService",t)}(e.Services||(e.Services={}))}(Xhr||(Xhr={})),function(e){!function(t){var i=function(){function t(t){this.allSpecialDays=t,this.specialDayNotSelected=!1,this.timeDuration=e.Model.TimeDuration}return t.prototype.$onInit=function(){this.resetConfig(this.model.leaveQuota),this.specialDays=this.allSpecialDays.getAll(),2==this.model.leaveType.systemLeaveType&&angular.forEach(this.specialDays,function(e){this.model.allowedDays.specialDays.filter(function(t){return t==e.id}).length>0?e.isChecked=!0:e.isChecked=!1},this)},t.prototype.resetConfig=function(e){e.timePeriod&&(e.timePeriod.duration=e.hasUpperLimit?e.timePeriod.duration:null),e.joinedOnOrBeforeDay=e.isProRated?e.joinedOnOrBeforeDay:null,e.availabilityBeyondAnnualQuotaInDays=e.availBeyondAnnualQuota?e.availabilityBeyondAnnualQuotaInDays:null,e.compoffRestrictionDays=e.canEmployeeRequestCompoff?e.compoffRestrictionDays:null,e.compoffRequestInstancesAllowed=e.restrictComoffRequestInstances?e.compoffRequestInstancesAllowed:null},t.prototype.saveCurrentStep=function(){if(this.form.leaveQuota.$valid){if(2==this.model.leaveType.systemLeaveType&&null==this.specialDays.find(function(e){return e.isChecked},this))return void(this.specialDayNotSelected=!0);this.saveAndContinue()}},t.prototype.setAllowedDays=function(){this.model.allowedDays.specialDays=[],this.specialDayNotSelected=!1,angular.forEach(this.specialDays,function(e){e.isChecked&&this.model.allowedDays.specialDays.push(e.id)},this)},t.$inject=["SpecialDays"],t}();var n=function(){function t(t,i){this.filter=t,this.leaveAccrualRate=i,this.timeDuration=e.Model.TimeDuration,this.roundOffType=e.Model.RoundOffType,this.availableAccrualRates=[],this.isAccrualTypeChangable=!1,this.invalidAccrualRates=!1,this.duplicateAccrualRates=!1,this.accrualStartType=e.Model.LeaveAccrualStartPeriod,this.restrictionDays=[],this.setRestrictionDays()}return t.prototype.$onInit=function(){this.availableAccrualRates=this.leaveAccrualRate.getAll().filter(function(e){return e.id!=this.leaveAccrualRate.semiMonthly.id},this),0==this.model.leaveAccrual.accrualRates.length&&this.model.leaveAccrual.accrualRates.push(new e.Model.AccrualRate(!1)),0==this.model.leaveAccrual.initialPeriodAccrualBeginDay&&(this.model.leaveAccrual.initialPeriodAccrualBeginDay=1),this.resetConfig(this.model.leaveAccrual),this.isAccrualTypeChangable=null==this.model.leaveAccrual.accrualRates.find(function(e){return e.duringProbation}),this.model.leaveAccrual.accrualRates=this.filter("orderBy")(this.model.leaveAccrual.accrualRates,["-duringProbation","yearsFromJoining"]),this.accrualRateTypes=[{title:"During Probation",value:!0},{title:"After Probation",value:!1}]},t.prototype.addNewAccrualRate=function(t){this.model.leaveAccrual.accrualRates.splice(t+1,0,new e.Model.AccrualRate(!1))},t.prototype.accrualRateChanged=function(){this.model.leaveAccrual.accrualRates.forEach(function(e){e.daysPerGivenPeriod=parseFloat((e.totalDaysPerYear/this.leaveAccrualRate.getById(this.model.leaveAccrual.accrualRate).instancesInaYear).toFixed(3))},this)},t.prototype.accrualsInPeriodChanged=function(e){e.totalDaysPerYear=parseFloat((e.daysPerGivenPeriod*this.leaveAccrualRate.getById(this.model.leaveAccrual.accrualRate).instancesInaYear).toFixed(3))},t.prototype.accrualsInYearChanged=function(e){e.daysPerGivenPeriod=parseFloat((e.totalDaysPerYear/this.leaveAccrualRate.getById(this.model.leaveAccrual.accrualRate).instancesInaYear).toFixed(3))},t.prototype.accrualRateTypeChanged=function(){this.isAccrualTypeChangable=null==this.model.leaveAccrual.accrualRates.find(function(e){return e.duringProbation})},t.prototype.deleteAccrualRate=function(e){this.model.leaveAccrual.accrualRates.length>1&&(this.model.leaveAccrual.accrualRates.splice(e,1),this.isAccrualTypeChangable=null==this.model.leaveAccrual.accrualRates.find(function(e){return e.duringProbation}))},t.prototype.updateAccrualRateType=function(t){t==e.Model.LeaveAccrualStartPeriod.AfterProbation&&(1==this.model.leaveAccrual.accrualRates.length&&null!=this.model.leaveAccrual.accrualRates.find(function(e){return 1==e.duringProbation})?(this.model.leaveAccrual.accrualRates=[],this.model.leaveAccrual.accrualRates.push(new e.Model.AccrualRate(!1))):this.model.leaveAccrual.accrualRates=this.filter("removeWith")(this.model.leaveAccrual.accrualRates,{duringProbation:!0})),this.isAccrualTypeChangable=null==this.model.leaveAccrual.accrualRates.find(function(e){return e.duringProbation})},t.prototype.saveCurrentStep=function(){if(this.form.leaveAccrual.$valid){if(this.invalidAccrualRates=!1,this.duplicateAccrualRates=!1,!this.model.leaveAccrual.limitToAnnual&&this.model.leaveAccrual.accrualBasedOnExperience&&(this.model.leaveAccrual.accrualRates=this.filter("orderBy")(this.model.leaveAccrual.accrualRates,["-duringProbation","yearsFromJoining"]),this.invalidAccrualRates=null!=this.model.leaveAccrual.accrualRates.find(function(e){return e.duringProbation&&(isNaN(e.daysPerGivenPeriod)||e.daysPerGivenPeriod<0)||!e.duringProbation&&(void 0==e.daysPerGivenPeriod||""===e.daysPerGivenPeriod||e.daysPerGivenPeriod<0||void 0==e.yearsFromJoining||""===e.yearsFromJoining||e.yearsFromJoining<0)}),!this.invalidAccrualRates))for(var e=this.model.leaveAccrual.accrualRates,t=1;t<e.length;t++)if(e[t].duringProbation==e[t-1].duringProbation&&e[t].yearsFromJoining==e[t-1].yearsFromJoining)return void(this.duplicateAccrualRates=!0);this.invalidAccrualRates||this.duplicateAccrualRates||this.saveAndContinue()}},t.prototype.setRestrictionDays=function(){for(var e=1;e<=28;e++)this.restrictionDays.push({id:e,title:e.toString()});this.restrictionDays.push({id:-1,title:"Last day"})},t.prototype.resetConfig=function(e){e.maxAllowedBeyondAccrual=e.isAllowedBeyondAccruedBalance?e.maxAllowedBeyondAccrual:null,e.cappedAccrualBalanceInDays=e.isAccrualBalanceCapped?e.cappedAccrualBalanceInDays:null,e.totalLongLeavesLimitInDays=e.isAccrualStoppedInLongLeave?e.totalLongLeavesLimitInDays:null},t.$inject=["$filter","LeaveAccrualRate"],t}();var o=function(){function t(e){this.filter=e,this.applyingLeave=!1,this.duplicatePriorNoticeRanges=!1,this.invalidApplyingLeaves=!1,this.restrictionDays=[],this.setRestrictionDays()}return t.prototype.$onInit=function(){0==this.model.applyingLeave.priorNoticeRanges.length&&this.model.applyingLeave.priorNoticeRanges.push(new e.Model.PriorNoticeRange(1,0,0)),this.resetConfig(this.model.applyingLeave)},t.prototype.resetConfig=function(e){e.maxPriorNoticeDays=e.requireMaxPriorNotice?e.maxPriorNoticeDays:null,e.maxAllowedDaysForPreviousLeave=e.allowApplyingPreviousLeaves?e.maxAllowedDaysForPreviousLeave:null,e.documentProofExceedDays=e.requireDocumentProof?e.documentProofExceedDays:null,e.pastDatedRestrictionDayOfTheMonth=e.hasRestrictionOnPastDatedLeave?e.pastDatedRestrictionDayOfTheMonth:null},t.prototype.saveCurrentStep=function(){if(this.form.applyingLeave.$valid){if(this.duplicatePriorNoticeRanges=!1,this.model.applyingLeave.priorNoticeRanges=this.filter("orderBy")(this.model.applyingLeave.priorNoticeRanges,["leaveDurationInCalendarDays"]),this.invalidApplyingLeaves=null!=this.model.applyingLeave.priorNoticeRanges.find(function(e){return isNaN(e.leaveDurationInCalendarDays||e.leaveDurationInDays<0)}),!this.invalidApplyingLeaves)for(var e=this.model.applyingLeave.priorNoticeRanges,t=1;t<e.length;t++)if(e[t].leaveDurationInCalendarDays==e[t-1].leaveDurationInCalendarDays)return void(this.duplicatePriorNoticeRanges=!0);this.duplicatePriorNoticeRanges||this.saveAndContinue()}},t.prototype.deletePriorNoticeRange=function(e){this.model.applyingLeave.priorNoticeRanges.length>1&&this.model.applyingLeave.priorNoticeRanges.splice(e,1)},t.prototype.addNewPriorNoticeRange=function(t){this.model.applyingLeave.priorNoticeRanges.splice(t+1,0,new e.Model.PriorNoticeRange)},t.prototype.setRestrictionDays=function(){for(var e=1;e<=28;e++)this.restrictionDays.push({id:e,title:e.toString()});this.restrictionDays.push({id:-1,title:"Last day"})},t.$inject=["$filter"],t}();var r=function(){function t(){this.restrictedLeaveTypes=[],this.restrictedLeaveTypesOnBalance=[],this.restrictionDays=[],this.setRestrictionDays()}return t.prototype.$onInit=function(){this.availableTypesForClubbingRestriction=this.assignedLeaveTypes.filter(function(e){return e.isPaid&&e.id!=this.model.leaveType.id},this),this.availableTypesForBalanceRestriction=this.assignedLeaveTypes.filter(function(e){return e.isPaid&&!e.isStatutory&&e.id!=this.model.leaveType.id},this),angular.forEach(this.restrictedLeaveTypePairs,function(e){if(e.leaveTypeId==this.model.leaveType.id||e.restrictedLeaveTypeId==this.model.leaveType.id){var t=e.leaveTypeId==this.model.leaveType.id?e.restrictedLeaveTypeId:e.leaveTypeId;this.restrictedLeaveTypes.push(this.leaveTypes[t])}},this),this.model.leaveRestrictions.restrictCombiningLeaveType=this.restrictedLeaveTypes.length>0,angular.forEach(this.model.leaveRestrictions.restrictedLeaveTypesOnBalance,function(e){this.leaveTypes[e]&&this.restrictedLeaveTypesOnBalance.push(this.leaveTypes[e])},this),this.resetConfig(this.model.leaveRestrictions)},t.prototype.resetConfig=function(e){e.maxConsecutiveDaysAllowed=e.limitToConsecutiveDays?e.maxConsecutiveDaysAllowed:null,e.minGapInDays=e.requireGapBetweenLeaveRequests?e.minGapInDays:null,e.allowedInstancesPerYear=e.restrictLeavesPerYear?e.allowedInstancesPerYear:null,e.allowedInstancesPerCalendarMonth=e.restrictLeavesPerCalendarMonth?e.allowedInstancesPerCalendarMonth:null,e.maxLeaveConsumptionDays=e.limitMaxLeaveConsumption?e.maxLeaveConsumptionDays:null,e.minLeaveConsumptionDays=e.limitMinLeaveConsumption?e.minLeaveConsumptionDays:null,e.maxLeaveDaysInProbation=e.limitLeaveDaysInProbation&&!e.applyAfterProbation?e.maxLeaveDaysInProbation:null,e.balanceRequiredToLimitMinLeaveDays=e.limitMinLeaveConsumption?e.balanceRequiredToLimitMinLeaveDays:null,e.allowedLeaveInstancesForTenure=e.restrictLeaveInstancesForTenure?e.allowedLeaveInstancesForTenure:null,e.noticePeriodExtensionInstances=e.allowedDuringNoticePeriod?e.noticePeriodExtensionInstances:null,e.leaveAvailingRestrictionDay=e.restrictEmployeeAvailingLeave?e.leaveAvailingRestrictionDay:null},t.prototype.leaveTypeRemoved=function(e,t){t?this.model.leaveRestrictions.restrictedLeaveTypesOnBalance.pop(e.id):this.restrictedLeaveTypePairs=this.restrictedLeaveTypePairs.filter(function(t){return t.leaveTypeId!=e.id&&t.restrictedLeaveTypeId!=e.id})},t.prototype.leaveTypeSelected=function(t,i){i?this.model.leaveRestrictions.restrictedLeaveTypesOnBalance.push(t.id):this.restrictedLeaveTypePairs.push(new e.Model.RestrictedLeaveTypePair(this.model.leaveType.id,t.id))},t.prototype.setRestrictionDays=function(){for(var e=1;e<=28;e++)this.restrictionDays.push({id:e,title:e.toString()});this.restrictionDays.push({id:-1,title:"Last day"})},t.prototype.saveCurrentStep=function(){var e=this;this.form.leaveRestrictions.$valid&&(!this.model.leaveRestrictions.restrictIfBalanceInOtherLeaveTypes||this.restrictedLeaveTypesOnBalance.length>0)&&(!this.model.leaveRestrictions.restrictCombiningLeaveType||this.restrictedLeaveTypes.length>0)&&(this.model.leaveRestrictions.restrictCombiningLeaveType||(this.restrictedLeaveTypePairs=this.restrictedLeaveTypePairs.filter(function(t){return!(t.leaveTypeId==e.model.leaveType.id||t.restrictedLeaveTypeId==e.model.leaveType.id)})),this.saveAndContinue())},t}();var a=function(){function t(){this.leaveOverLappingType=e.Model.LeaveOverLappingType,this.leaveDaysType={CalenderDays:{id:!1,name:"Calender Days"},LeaveDays:{id:!0,name:"Leave Days"}}}return t.prototype.saveCurrentStep=function(){this.form.leaveHolidayWeekoff.$valid&&this.saveAndContinue()},t}();var s=function(){function e(e,t,i,n,o,r,a){var s=this;this.filter=e,this.notificationService=t,this.timesheetServices=i,this.orgSettingServices=n,this.ApproverType=o,this.utilityService=r,this.appContext=a,this.approverLevels=[],this.approverGroups=[],this.vm={},this.filteredApprovers={},this.selectedRoles=[],this.orgFeatures=[],this.doesEmployeeExist=function(e){return!!s.vm.leaveType.approvers&&s.vm.leaveType.approvers.filter(function(t){return t.projectManager?t.projectManager.id==e.id:t.approverId==e.id}).length>0}}return e.prototype.$onInit=function(){this.orgFeatures=this.appContext.orgFeatures(),this.vm.approverTypes=this.ApproverType,this.setApproverTypes(),this.getConfiguration(),this.setDefaults(),this.removeEmptyLevels(!1)},e.prototype.setApproverTypes=function(){this.orgFeatures.some(function(e){return"TIMESHEET"==e})||(this.vm.approverTypes=this.filter("removeWith")(this.vm.approverTypes,{id:this.ApproverType.projectManager.id}),this.vm.approverTypes=this.filter("removeWith")(this.vm.approverTypes,{id:this.ApproverType.accountManager.id}))},e.prototype.getConfiguration=function(){this.approverLevels=null==this.model.leaveApproval.approvalChain.approverLevels?[]:this.model.leaveApproval.approvalChain.approverLevels,angular.forEach(this.approverLevels,function(e,t){angular.forEach(e.approvers,function(e,t){this.selectedRoles.push(e)},this)},this)},e.prototype.addApprover=function(){!this.approverLevels.length||this.approverLevels[this.approverLevels.length-1].approvers.length?(this.approverLevels.push(new l),this.setDefaults()):this.notificationService.error("Please select at least one approver.")},e.prototype.setDefaults=function(){this.vm.leaveType={},this.vm.leaveType.approvers=[],this.approverGroups=[],angular.forEach(this.vm.approverTypes,function(e,t){if(t&&"Employee"!=e.title&&"None"!=e.title){var i={approverType:e.id,approverId:0,approverName:e.title,id:-e.id,category:" Roles"};this.approverGroups.push(i)}},this),this.vm.leaveType={},this.vm.leaveType.approvers=[],angular.forEach(this.approverLevels,function(e,t){this.vm.leaveType.approvers=this.vm.leaveType.approvers.concat(e.approvers)},this),this.filteredApprovers=this.filter("xor")(this.approverGroups,this.selectedRoles,"approverType"),this.filteredApprovers=this.filter("removeWith")(this.filteredApprovers,{approverType:99})},e.prototype.getFilteredEmployees=function(e){var t=this;if(e.length>2)return this.utilityService.getMatchedEmployees(e).then(function(e){var i=t.filter("xor")(t.approverGroups,t.selectedRoles,"approverType");i=t.filter("removeWith")(i,{approverType:99}),angular.forEach(e,function(e){e.approverType&&t.doesEmployeeExist(e)||(e.approverType?e.category="Roles":(e.approverType=99,e.approverId=e.id,e.approverName=e.displayName,e.category="Employees"),i.push(e))},t),t.filteredApprovers=i})},e.prototype.updateApproverList=function(e,t,i){i?e.approverType?this.selectedRoles=this.filter("removeWith")(this.selectedRoles,{approverType:e.approverType}):this.vm.leaveType.approvers&&this.vm.leaveType.approvers.length&&(this.vm.leaveType.approvers=this.filter("removeWith")(this.vm.leaveType.approvers,{approverId:e.approverId})):e.approverType?(this.isRolesRequired=!1,this.selectedRoles.push(e)):this.vm.leaveType.approvers.push(e),this.setDefaults(),this.removeEmptyLevels(!1)},e.prototype.removeEmptyLevels=function(e){var t=!1;return angular.forEach(this.approverLevels,function(i,n){i.approvers=null==i.approvers?[]:i.approvers,0!=i.approvers.length||e?0==i.approvers.length&&e&&(t=!0):this.approverLevels.splice(n,1)},this),t&&this.notificationService.error("Please select at least one approver."),t},e.prototype.saveCurrentStep=function(){this.isRolesRequired=!(this.model.leaveApproval.requireApproval&&null!=this.approverLevels&&null!=this.approverLevels[0]&&this.approverLevels[0].approvers.length>0)&&!!this.model.leaveApproval.requireApproval;var e=!!this.isRolesRequired&&this.removeEmptyLevels(!(null!=this.approverLevels[0]&&this.approverLevels[0].approvers.length>0));!this.form.leaveApproval.$valid||this.isRolesRequired||e||(this.model.leaveApproval.approvalChain.approverLevels=this.approverLevels,this.saveAndContinue())},e.$inject=["$filter","NotificationService","TimesheetServices","OrgSettingServices","ApproverType","Utils","AppContext"],e}(),l=function(){return function(e,t){this.level=e,this.approvers=t,this.approvers=[]}}();t.ApproverLevel=l;var c=function(){function t(t){this.filter=t,this.yearEndProcessingType=e.Model.YearEndProcessingType,this.negativeBalanceProcessingType=e.Model.NegativeBalanceProcessingType,this.carryForwardSetting=!1,this.duplicateCarryForwardSetting=!1,this.invalidCarryForwardSettings=!1}return t.prototype.$onInit=function(){0==this.model.yearEndProcessing.yearEndProcessingRanges.length&&this.model.yearEndProcessing.yearEndProcessingRanges.push(new e.Model.CarryoverRange)},t.prototype.resetConfig=function(){0==this.model.yearEndProcessing.yearEndProcessingRanges.length&&(this.model.yearEndProcessing.yearEndProcessingRanges=[],this.model.yearEndProcessing.yearEndProcessingRanges.push(new e.Model.CarryoverRange)),this.model.yearEndProcessing.carryoverLeavesExpireInDays=this.model.yearEndProcessing.doesCarryoverLeavesExpire||this.model.yearEndProcessing.carryoverLeavesExpireInDays>0?this.model.yearEndProcessing.carryoverLeavesExpireInDays:1},t.prototype.saveFinalStep=function(){if(!this.model.leaveQuota.hasUpperLimit||this.form.leaveYearEndProcess.$valid){if(this.duplicateCarryForwardSetting=!1,(this.model.yearEndProcessing.yearEndProcessingType==this.yearEndProcessingType.CarryAndPay||this.model.yearEndProcessing.yearEndProcessingType==this.yearEndProcessingType.PayAndCarry)&&(this.model.yearEndProcessing.yearEndProcessingRanges=this.filter("orderBy")(this.model.yearEndProcessing.yearEndProcessingRanges,["leaveBalanceInDays"]),this.invalidCarryForwardSettings=null!=this.model.yearEndProcessing.yearEndProcessingRanges.find(function(e){return isNaN(e.leaveBalanceInDays||e.leaveBalanceInDays<0)}),!this.invalidCarryForwardSettings))for(var e=this.model.yearEndProcessing.yearEndProcessingRanges,t=1;t<e.length;t++)if(e[t].leaveBalanceInDays==e[t-1].leaveBalanceInDays)return void(this.duplicateCarryForwardSetting=!0);this.duplicateCarryForwardSetting||(this.model.isSetupComplete=!0,this.saveAndContinue())}},t.prototype.deleteCarryForwardSetting=function(e){this.model.yearEndProcessing.yearEndProcessingRanges.length>1&&this.model.yearEndProcessing.yearEndProcessingRanges.splice(e,1)},t.prototype.addNewCarryForwardSetting=function(t){this.model.yearEndProcessing.yearEndProcessingRanges.splice(t+1,0,new e.Model.CarryoverRange)},t.$inject=["$filter"],t}();!function(){function e(e,t,i){this.blobContainers=e,this._modalInstance=i,this.model={},this.fileUploadSettings=angular.copy(t.fileUploadSettings),this.documentProofs=[]}e.prototype.saveUploadedDocument=function(){this._modalInstance.close(this.documentProofs)},e.prototype.cancelUploadDocument=function(){this._modalInstance.dismiss()},e.$inject=["BlobContainers","AppSettings","$uibModalInstance"]}();angular.module("leaves").directive("leaveQuota",function(){return{scope:{},controller:i,controllerAs:"ctrl",bindToController:{model:"=",saveAndContinue:"&"},templateUrl:"leavesettings/quota"}}).directive("leaveAccrual",function(){return{scope:{},controller:n,controllerAs:"ctrl",bindToController:{model:"=",saveAndContinue:"&"},templateUrl:"leavesettings/leaveaccural"}}).directive("leaveApply",function(){return{scope:{},controller:o,controllerAs:"ctrl",bindToController:{model:"=",saveAndContinue:"&"},templateUrl:"leavesettings/applyingleave"}}).directive("leaveRestriction",function(){return{scope:{},controller:r,controllerAs:"ctrl",bindToController:{model:"=",leaveTypes:"=",restrictedLeaveTypePairs:"=",assignedLeaveTypes:"=",saveAndContinue:"&"},templateUrl:"leavesettings/LeaveRestrictions"}}).directive("leaveHolidayWeekoff",function(){return{scope:{},controller:a,controllerAs:"ctrl",bindToController:{model:"=",saveAndContinue:"&"},templateUrl:"leavesettings/HolidaysAndWeekoffs"}}).directive("leaveApproval",function(){return{scope:{},controller:s,controllerAs:"ctrl",bindToController:{model:"=",saveAndContinue:"&"},templateUrl:"leavesettings/LeaveApproval"}}).directive("leaveYearEndProcess",function(){return{scope:{},controller:c,controllerAs:"ctrl",bindToController:{model:"=",saveAndContinue:"&"},templateUrl:"leavesettings/YearEnd"}})}(e.Components||(e.Components={}))}(Leaves||(Leaves={})),function(e){var t=function(){return function(e,t){var i=this;e.$on("$stateChangeStart",function(e,n,o,r,a){var s=t.get("^");r&&r.name!=t.current.name&&r.name!=s.name&&(i.previousState=r.name,i.previousStateParams=a)})}}();e.StateChangeHandleController=t}(PMS||(PMS={})),function(e){var t=function(){function t(e,t,i,n,o){var r=this;this.filter=e,this.notificationService=t,this.approverTypes=i,this.appContext=n,this.utilityService=o,this.approverLevels=[],this.approverGroups=[],this.filteredApprovers={},this.selectedRoles=[],this.orgFeatures=[],this.approverList=[],this.doesEmployeeExist=function(e){return!!r.approverList&&r.approverList.filter(function(t){return t.projectManager?t.projectManager.id==e.id:t.approverId==e.id}).length>0},this.appContext=n,this.filter=e,this.notificationService=t,this.utilityService=o,this.approverTypes=i}return t.prototype.$onInit=function(){this.init(),this.orgFeatures=this.appContext.orgFeatures(),this.setApproverTypes(),this.getConfiguration(),this.setFilteredApprover(),this.removeEmptyLevels(!1)},t.prototype.getRandomString=function(){return Math.random().toString(36).substr(2,4)},t.prototype.setApproverTypes=function(){if(!this.orgFeatures.some(function(e){return"TIMESHEET"==e})){var e=this.approverTypes.accountManager.id,t=this.approverTypes.projectManager.id;this.approverTypes=this.filter("removeWith")(this.approverTypes,{id:e}),this.approverTypes=this.filter("removeWith")(this.approverTypes,{id:t})}},t.prototype.getConfiguration=function(){var t=this;if(0==this.approvalSettings.approvalChain.approverLevels.length){this.approverLevels=[];var i=new e.Approver(e.ApproverType.ReportingManager,0,"Reporting Manager"),n=new e.ApprovalChainLevel(1,[]);n.approvers.push(i),this.approverLevels.push(n),this.selectedRoles.push(i),this.approvalSettings.approvalChain.approverLevels=this.approverLevels}else this.approverLevels=this.approvalSettings.approvalChain.approverLevels,angular.forEach(this.approverLevels,function(e,i){angular.forEach(e.approvers,function(e,i){t.selectedRoles.push(e)})})},t.prototype.addApproverLevel=function(){!this.approverLevels.length||this.approverLevels[this.approverLevels.length-1].approvers.length?(this.approverLevels.push(new e.ApprovalChainLevel),this.setFilteredApprover(),this.isApprovalSettingsValid=!0):this.notificationService.error("Please select at least one approver.")},t.prototype.setFilteredApprover=function(){var e=this;this.approverGroups=[],angular.forEach(this.approverTypes,function(t,i){if(i&&"Employee"!=t.title&&"None"!=t.title){var n={approverType:t.id,approverId:0,approverName:t.title,id:-t.id,category:" Roles"};e.approverGroups.push(n)}}),this.approverList=[],angular.forEach(this.approverLevels,function(t,i){e.approverList=e.approverList.concat(t.approvers)}),this.filteredApprovers=this.filter("xor")(this.approverGroups,this.selectedRoles,"approverType"),this.filteredApprovers=this.filter("removeWith")(this.filteredApprovers,{approverType:99})},t.prototype.getFilteredEmployees=function(e){var t=this;if(e.length>2)return this.utilityService.getMatchedEmployees(e).then(function(e){var i=t.filter("xor")(t.approverGroups,t.selectedRoles,"approverType");i=t.filter("removeWith")(i,{approverType:99}),angular.forEach(e,function(e){e.approverType&&t.doesEmployeeExist(e)||(e.approverType?e.category="Roles":(e.approverType=99,e.approverId=e.id,e.approverName=e.displayName,e.category="Employees"),i.push(e))}),t.filteredApprovers=i})},t.prototype.updateApproverList=function(e,t,i){i?e.approverType?this.selectedRoles=this.filter("removeWith")(this.selectedRoles,{approverType:e.approverType}):this.approverList&&this.approverList.length&&(this.approverList=this.filter("removeWith")(this.approverList,{approverId:e.approverId})):e.approverType?this.selectedRoles.push(e):this.approverList.push(e),this.setFilteredApprover(),this.isApprovalSettingsValid=this.removeEmptyLevels(!1)||!(this.approvalSettings.requireApproval&&null!=this.approverLevels[0]&&this.approverLevels[0].approvers.length>0),this.approvalSettings.approvalChain.approverLevels=this.approverLevels},t.prototype.removeEmptyLevels=function(e){var t=this,i=!1;return angular.forEach(this.approverLevels,function(n,o){n.approvers=null==n.approvers?[]:n.approvers,0!=n.approvers.length||e?0==n.approvers.length&&e&&(i=!0):t.approverLevels.splice(o,1)}),i&&this.notificationService.error("Please select at least one approver."),i},t.prototype.init=function(){this.approverLevels=[],this.approverGroups=[],this.filteredApprovers={},this.selectedRoles=[],this.orgFeatures=[],this.approverList=[],this.isApprovalSettingsValid=!1},t.$inject=["$filter","NotificationService","ApproverType","AppContext","Utils"],t}();e.MultiLevelApprovalController=t,angular.module("xhr").component("approvalSettings",{templateUrl:"/settings/approvalsettings",controller:t,bindings:{approvalSettings:"=",isApprovalSettingsValid:"=",isSubmitted:"<"}})}(ApprovalChain||(ApprovalChain={})),function(e){!function(e){e[e.None=0]="None",e[e.LeaveRequest=1]="LeaveRequest",e[e.TimesheetRequest=2]="TimesheetRequest",e[e.Attendance=3]="Attendance",e[e.Exit=4]="Exit",e[e.Loan=5]="Loan",e[e.Expense=6]="Expense",e[e.Overtime=7]="Overtime"}(e.ApprovalRequestType||(e.ApprovalRequestType={})),function(e){e[e.None=0]="None",e[e.ReportingManager=1]="ReportingManager",e[e.ProjectManager=2]="ProjectManager",e[e.ClientManager=3]="ClientManager",e[e.L2Manager=4]="L2Manager",e[e.DepartmentHead=5]="DepartmentHead",e[e.BusinessUnitHead=6]="BusinessUnitHead",e[e.PayrollAdmin=7]="PayrollAdmin",e[e.Employee=99]="Employee"}(e.ApproverType||(e.ApproverType={}));var t=function(){return function(e){this.approvalChain=e.approvalChain,this.requireApproval=e.requireApproval,this.requireApprovalComment=e.requireApprovalComment,this.requireRejectionComment=e.requireRejectionComment,this.autoApprovedIfNoApproversAvailable=e.autoApprovedIfNoApproversAvailable}}();e.ApprovalSettings=t;var i=function(){return function(){}}();e.ApprovalChain=i;var n=function(){return function(e,t){this.level=e,this.approvers=null==t?[]:t}}();e.ApprovalChainLevel=n;var o=function(){return function(e,t,i){this.approverId=t,this.approverName=i,this.approverType=e}}();e.Approver=o}(ApprovalChain||(ApprovalChain={})),appRoot.controller("HomeController",["$scope","$route",function(e,t){}]),appRoot.controller("TopNavController",["$scope","$rootScope","$route","$state","$timeout","AppSettings","$q","$location","MyProfileServices","AppContext","$interval","$http","$uibModal","PartnerService","UserRoleType",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y){e.vm={},e.vm.profile={},e.panel={},e.vm.employeeSearchResults=[],e.vm.dateStr=new Date,e.appSettings=r,e.vm.partnerOrgs=[],e.vm.userRoleType=y;e.$on("$stateChangeSuccess",function(t,i,o,r,a){e.vm.state=n.current,e.vm.searchTerm=null}),c.currentUser().then(function(t){e.vm.profile=t,e.vm.profile.profileImageUrl=null==t.profileImageUrl?null:t.profileImageUrl+"?"+(new Date).getTime()}),e.expandSearch=function(){var t=!e.panel.search;e.panel={},e.panel.search=t},e.getPartnerOrgs=function(){m.getPartnerOrgs().then(function(t){e.vm.partnerOrgs=t})},e.showPartnerOrgs=function(){e.vm.selectedPartnerOrg=e.vm.partnerOrgs.find(function(t){return t.id==e.vm.orgId}),e.modalInstance=d.open({templateUrl:"partnerOrgSwitchTemplate",scope:e})},e.switchToPartner=function(){window.location.href="http://"+e.vm.selectedPartnerOrg.subDomainName+"/account/partner"},t.$on("profilePictureUpdated",function(t,i){i.id==e.vm.profile.id&&(e.vm.profile.profileImageUrl=i.imageUrl+"?"+(new Date).getTime())}),t.$on("companyInfoUpdate",function(t,i){e.vm.shortName=i.info.shortName}),e.$on("displayNameUpdated",function(t,i){i.id&&i.id!=e.vm.profile.id||(e.vm.profile.displayName=i.userProfile.displayName,c.myPublicProfile.displayName=i.userProfile.displayName)}),e.showEmployeeProfile=function(t){t.noResults?e.vm.searchTerm=null:0==n.current.name.indexOf("employee.")&&e.vm.canViewAllTabs?n.go(n.current.name,{id:t.id}):n.go($("#"+t.id+"-id").data("stateName"),{id:t.id})},e.switchMyContext=function(t){var i=e.vm.userRoleType.getById(t);if(i){var n=angular.element("#updateUserIdentityForm");angular.element("#contextRoleType").val(i.id);n.submit()}}}]),appRoot.controller("LeftNavController",["$scope","$route","$state","$stateParams","$rootScope","AppSettings","AppContext","PMSSettings","TenantBillingStatus","MyExpensesService","InboxService","AppFeatures",function(e,t,i,n,o,r,a,s,l,c,p,u){e.vm={},e.vm.currentInvoiceStatus=a.currentInvoiceStatus,e.vm.tenantBillingStatus=l,e.isLeftNavPushed=r.isLeftNavPushed,e.appSettings=r,e.pmsSettings=s,e.appContext=a,e.vm.totalCount=0,e.expenseService=c,e.expensePolicy,e.appContext.isFeaturePresent(u.Expenses.title)&&e.expenseService.getExpensePolicy().then(t=>{t.id&&(e.expensePolicy=!0)}),e.$on("$stateChangeSuccess",function(t,n,o,r,a){e.vm.state=i.current,e.vm.isLeavesActive="mytime.leaves"==e.vm.state.name||"mytime.callsick"==e.vm.state.name||"mytime.callsickedit"==e.vm.state.name||"mytime.callleaverequest"==e.vm.state.name||"mytime.callleaverequestedit"==e.vm.state.name||"mytime.otherleave"==e.vm.state.name||"mytime.otherleaveedit"==e.vm.state.name}),e.goToPaymentPage=function(e){e.preventDefault(),window.location.href=invoiceDueLink};a.currentUser().then(function(t){e.vm.profile=t}),e.appContext.isFeaturePresent(u.Inbox.title)&&p.getPendingApprovalsCount().then(function(t){e.vm.totalCount=t.attendanceAdjustmentRequestCount+t.attendanceRemoteClockInRequestCount+t.attendanceWorkingRemotelyRequestCount+t.attendancePartialDayRequestCount+t.compoffRequestCount+t.exitRequestCount+t.expenseClaimRequestCount+t.leaveRequestCount+t.loanRequestCount+t.profileApprovalRequestCount+t.financeRequestsCount+t.exitTaskRequestsCount+t.onboardingTaskRequestsCount})}]),appRoot.directive("animateExpand",function(e){return{restrict:"A",prioriry:1e5,scope:!1,link:function(e,t,i){$(t).focusin(function(){$(t).addClass("top-nav-employee-search"),$(t).removeClass("top-nav-employee-search-reverse")}),$(t).focusout(function(){$(t).removeClass("top-nav-employee-search"),$(t).addClass("top-nav-employee-search-reverse")})}}}),appRoot.controller("ActionBarController",["$scope","$route","$state","$stateParams","$rootScope","ArticleStatus",function(e,t,i,n,o,r){e.vm={},e.vm.articleStatus=r,e.$on("$stateChangeSuccess",function(t,n,o,r,a){e.vm.state=i.current,e.vm.disableButton=!1}),e.$on("enableButton",function(t,i){e.vm.disableButton=!1}),e.goBack=function(){window.history.back()},e.previewArticle=function(){o.$broadcast("previewArticleClicked")},e.saveArticle=function(){e.vm.disableButton||o.$broadcast("saveArticleClicked")},e.editArticle=function(){o.$broadcast("editArticleClicked")},e.publishArticle=function(){e.vm.disableButton||o.$broadcast("publishArticleClicked")},e.$on("articleLoaded",function(t,i){e.vm.article=i.article}),e.$on("articleSaved",function(t,i){e.vm.disableButton=!0}),e.$on("articlePublished",function(t,i){e.vm.disableButton=!0})}]),appRoot.controller("ListNavController",["$scope","$route","$state","$stateParams","$rootScope","ListNavService","$location",function(e,t,i,n,o,r,a){e.vm={},e.vm.id=0,e.vm.currentIndex=0,e.vm.profileIds=[],e.vm.isNavVisible=!1;e.previousProfile=function(){0!==e.vm.currentIndex&&(e.vm.currentIndex-=1,e.vm.id=e.vm.profileIds[e.vm.currentIndex],a.path("/employee/"+e.vm.id+t.current.url))},e.nextProfile=function(){e.vm.currentIndex!==e.vm.profileIds.length-1&&(e.vm.currentIndex+=1,e.vm.id=e.vm.profileIds[e.vm.currentIndex],a.path("/employee/"+e.vm.id+t.current.url))},e.$on("$stateChangeSuccess",function(i,n,o,a,s){"employees.incomplete"===a.name&&"employee.personal"===n.name?(e.vm.isNavVisible=!0,e.vm.profileIds=r.getListIds(),angular.forEach(e.vm.profileIds,function(i,n){if(i==t.params.id)return e.vm.id=i,void(e.vm.currentIndex=n)})):"employee"!==n.parentState&&(e.vm.isNavVisible=!1)})}]),appRoot.factory("AssetStatus",["Constants",function(e){return new e({None:{id:0,title:"None"},Available:{id:1,title:"Available"},Assigned:{id:2,title:"Assigned"},Damaged:{id:3,title:"Damaged"},Lost:{id:4,title:"Lost"}})}]),appRoot.factory("AssetCondition",["Constants",function(e){return new e({None:{id:0,title:"None"},Good:{id:1,title:"Good"},Damaged:{id:2,title:"Damaged"},Lost:{id:3,title:"Lost"}})}]),appRoot.factory("HolidayImportValidationResult",["Constants",function(e){return new e({Valid:{id:0,title:"Valid"},DuplicateRecords:{id:1,title:"DuplicateRecords"},InvalidData:{id:2,title:"InvalidData"}})}]),appRoot.factory("AccountStatus",["Constants",function(e){return new e({notInvited:{id:0,name:"NotInvited",title:"Not Invited"},invited:{id:1,name:"Invited",title:"Invited"},disabled:{id:2,name:"Disabled",title:"Disabled"}})}]),appRoot.factory("AttendanceModificationStatus",["Constants",function(e){return new e({none:{id:0,title:"None"},requestToModify:{id:1,title:"RequestToModify"},requestToAdd:{id:2,title:"RequestToAdd"},requestToDelete:{id:3,title:"RequestToDelete"},requestToAddWebLog:{id:4,title:"RequestToAddWebLog"},requestToAddRemoteLog:{id:5,title:"RequestToAddRemoteLog"}})}]),appRoot.factory("EmployeeImportIdentifier",["Constants",function(e){return new e({none:{id:0,name:"None",title:"None"},employeeNumber:{id:1,name:"EmployeeNumber",title:"Employee Number"},email:{id:2,name:"Email",title:"Email"},pan:{id:3,name:"PAN",title:"PAN"},bankAccountNo:{id:4,name:"BankAccountNo",title:"Bank Account No"}})}]),appRoot.factory("CommentItemType",["Constants",function(e){return new e({article:{id:0,name:"Article"},task:{id:1,name:"Task"},leaves:{id:2,name:"Leave"},timesheet:{id:3,name:"Timesheet"},attendance:{id:4,name:"Attendance"},review:{id:5,name:"Review"},goal:{id:6,name:"Goal"},keyResult:{id:7,name:"KeyResult"}})}]),appRoot.factory("BloodGroup",["Constants",function(e){return new e({aplus:{id:1,name:"A+  (A Positive)"},aminus:{id:2,name:"A- (A Negative)"},bplus:{id:3,name:"B+ (B Positive)"},bminus:{id:4,name:"B- (B Negative)"},abplus:{id:5,name:"AB+ (AB Positive)"},abminus:{id:6,name:"AB- (AB Negative)"},oplus:{id:7,name:"O+ (O Positive)"},ominus:{id:8,name:"O- (O Negative)"},a2plus:{id:9,name:"A2+ (A2 Positive)"},a1plus:{id:10,name:"A1+ (A1 Positive)"},a1minus:{id:11,name:"A1- (A1 Negative )"},a1BMinus:{id:12,name:"A1B- (A1B Negative)"},a1BPlus:{id:13,name:"A1B+ (A1B Positive)"},a2Minus:{id:14,name:"A2- (A2 Negative)"},a2BPlus:{id:15,name:"A2B+ (A2B Positive)"},a2BMinus:{id:16,name:"A2B- (A2B Negative)"},b1Plus:{id:17,name:"B1+ (B1 Positive)"}})}]),appRoot.factory("InputType",["Constants",function(e){return new e({None:{id:0,title:"None"},Text:{id:1,title:"Text"},Number:{id:2,title:"Number"},Select:{id:3,title:"Select"},Date:{id:4,title:"Date"},Textarea:{id:5,title:"Textarea"}})}]),appRoot.factory("DocumentSetStatus",["Constants",function(e){return new e({NotSubmitted:{id:0,title:"No proof attached"},Submitted:{id:1,title:"Not Verified"},SubmittedAndVerified:{id:2,title:"Verified"},Rejected:{id:3,title:"Rejected"}})}]),appRoot.factory("SystemDocumentType",["Constants",function(e){return new e({None:{id:0,title:"None"},Education:{id:1,title:"Education"},Experience:{id:2,title:"Experience"},Review:{id:3,title:"Review"}})}]),appRoot.factory("SocialNetworks",["Constants",function(e){return new e({facebook:{id:1,title:"Facebook",cssClass:"icon-facebook4"},twitter:{id:2,title:"Twitter",cssClass:"icon-twitter3"},linkedin:{id:3,title:"LinkedIn",cssClass:"icon-linkedin"}})}]),appRoot.factory("Gender",["Constants",function(e){return new e({Male:{id:1,name:"Male",title:"Male"},Female:{id:2,name:"Female",title:"Female"},Other:{id:3,name:"Other",title:"Other"}})}]),appRoot.factory("OfferStatus",["Constants",function(e){return new e({NotReleased:{id:0,name:"NotReleased",title:"Not Released"},Released:{id:1,name:"Released",title:"Released"},Accepted:{id:2,name:"Accepted",title:"Accepted"},Declined:{id:3,name:"Declined",title:"Declined"},Withdrawn:{id:4,name:"Withdrawn",title:"Withdrawn"},Joined:{id:5,name:"Joined",title:"Joined"}})}]),appRoot.factory("BankAccountType",["Constants",function(e){return new e({None:{id:0,title:"None"},Current:{id:1,title:"Current"},Savings:{id:2,title:"Savings"}})}]),appRoot.factory("SalaryPaymentMode",["Constants",function(e){return new e({None:{id:0,title:"None"},BankTransfer:{id:1,title:"Bank Transfer"},Cheque:{id:2,title:"Cheque"},Cash:{id:3,title:"Cash"}})}]),appRoot.factory("WorkerType",["Constants",function(e){return new e({permanent:{id:1,name:"Permanent"},contract:{id:2,name:"Contract"},intern:{id:3,name:"Intern"}})}]),appRoot.factory("TimeType",["Constants",function(e){return new e({fullTime:{id:1,name:"Full Time"},partTime:{id:2,name:"Part Time"}})}]),appRoot.factory("EmploymentStatus",["Constants",function(e){return new e({Working:{id:0,name:"Working",title:"Working"},Relieved:{id:1,name:"Relieved",title:"Relieved"}})}]),appRoot.factory("ExitStatus",["Constants",function(e){return new e({Initiated:{id:1,name:"Initiated",title:"Initiated"},Completed:{id:2,name:"Completed",title:"Completed"}})}]),appRoot.factory("DocumentType",["Constants",function(e){return new e({MandatoryDocuments:{id:1,name:"MandatoryDocuments",title:"Mandatory Documents"},OnBoardingDocuments:{id:2,name:"OnBoardingDocuments",title:"OnBoarding Documents"},Forms:{id:3,name:"Forms",title:"Forms"},Financial:{id:4,name:"Financial",title:"Financial"}})}]),appRoot.factory("RelationTypes",["Constants",function(e){return new e({others:{id:0,name:"Others"},spouse:{id:1,name:"Spouse"},father:{id:2,name:"Father"},mother:{id:3,name:"Mother"},child:{id:4,name:"Child"},self:{id:5,name:"Self"},sibling:{id:6,name:"Sibling"}})}]),appRoot.factory("MaritalStatus",["Constants",function(e){return new e({NotMarried:{id:0,name:"Single"},Married:{id:1,name:"Married"}})}]),appRoot.factory("ArticleStatus",["Constants",function(e){return new e({none:{id:0,name:"None"},draft:{id:1,name:"Draft"},published:{id:2,name:"Published"}})}]),appRoot.factory("PollType",["Constants",function(e){return new e({SingleSelect:{id:0,name:"SingleSelect"},MultiSelect:{id:1,name:"MultiSelect"}})}]),appRoot.factory("PollVisibility",["Constants",function(e){return new e({Anonymous:{id:0,name:"Anonymous"},Transparent:{id:1,name:"Transparent"}})}]),appRoot.factory("UserImportSource",["Constants",function(e){return new e({None:{id:0},Office365:{id:1},ExcelSheet:{id:2},Admin:{id:3}})}]),appRoot.factory("AppFeatures",["Constants",function(e){return new e({HRIS:{id:0,title:"HRIS"},Timesheet:{id:1,title:"TIMESHEET"},Attendance:{id:2,title:"ATTENDANCE"},Engage:{id:3,title:"ENGAGE"},Assets:{id:4,title:"ASSETS"},Documents:{id:5,title:"DOCUMENTS"},Payroll:{id:6,title:"PAYROLL"},PMS:{id:7,title:"PMS"},Paygroups:{id:8,title:"PAYGROUPS"},Leaves:{id:9,title:"LEAVES"},Expenses:{id:10,title:"EXPENSES"},TravelDesk:{id:11,title:"TRAVELDESK"},Timeline:{id:12,title:"TIMELINE"},Inbox:{id:13,title:"INBOX"}})}]),appRoot.factory("BlobContainers",["Constants",function(e){return new e({ProfileImage:{id:0,title:"ProfileImage"},Documents:{id:1,title:"Documents"},ExcelUploads:{id:2,title:"ExcelUploads"},TaxBills:{id:3,title:"TaxBills"},Engage:{id:4,title:"Engage"},OrgLogo:{id:5,title:"OrgLogo"},Benefits:{id:6,title:"Benefits"},ExpenseReceipts:{id:7,title:"ExpenseReceipts"},LoginBackgroundImage:{id:8,title:"LoginBackgroundImage"},Temp:{id:9,title:"Temp"},Performance:{id:10,title:"Performance"},BulkPaySlipsPdf:{id:11,title:"BulkPaySlipsPdf"},HelpDesk:{id:12,title:"HelpDesk"},TimesheetAttachments:{id:13,title:"TimesheetAttachments"},ReviewQuestions:{id:15,title:"ReviewQuestions"}})}]),appRoot.factory("GetStartedSteps",["Constants",function(e){return new e({None:{id:0,name:"None",link:""},LeavePlans:{id:1,name:"LeavePlans",link:"#/settings/leaves"},TimeAttedance:{id:2,name:"TimeAttedance",link:"#/settings/timeattendance"},EmployeeDefaults:{id:3,name:"EmployeeDefaults",link:"#/settings/employee/defaults"},JobTitles:{id:4,name:"JobTitles",link:"#/settings/employee/jobtitles"},ImportEmployees:{id:5,name:"ImportEmployees",link:"#/employeedashboard/employees"}})}]),appRoot.factory("TaskPriorities",["Constants",function(e){return new e({all:{id:0,name:"all"},lowPriority:{id:1,name:"low priority"},mediumPriority:{id:2,name:"medium priority"},highPriority:{id:3,name:"high priority"},noPriority:{id:4,name:"unprioritized"}})}]),appRoot.factory("TaskStatus",["Constants",function(e){return new e({todo:{id:1,name:"To Do"},inProgress:{id:2,name:"In Progress"},done:{id:3,name:"Done"}})}]),appRoot.factory("TaskTypes",["Constants",function(e){return new e({all:{id:0,name:"all tasks",icon:"list"},OnBoarding:{id:1,name:"On Boarding Task",icon:"enter3"},systemTasks:{id:2,name:"Exit Task",icon:"console"}})}]),appRoot.factory("TaskProcessTypes",["Constants",function(e){return new e({None:{id:0,name:"None",icon:""},OnBoarding:{id:1,name:"On Boarding Task",icon:""},ExitTask:{id:2,name:"Exit Task",icon:""}})}]),appRoot.factory("SystemTaskTypes",["Constants",function(e){return new e({TimesheetSubmit:{id:1,name:"Timesheet Submit",icon:"target3",actionLink:""},TimesheetApprove:{id:2,name:"Timesheet Approve",icon:"user7",actionLink:""},LeaveApprove:{id:3,name:"Leave Approve",icon:"cake",actionLink:""},Document:{id:4,name:"Document",icon:"enter3",actionLink:"#/me/documents"},EmployeeProfileCompletion:{id:5,name:"Employee Profile Completion",icon:"enter3",actionLink:"#/me/profile"}})}]),appRoot.factory("LeaveRequestStatus",["Constants",function(e){return new e({Pending:{id:0,name:"Pending",title:"Pending Approval"},Approved:{id:1,name:"Approved",title:"Approved"},Rejected:{id:2,name:"Rejected",title:"Rejected"},Cancelled:{id:3,name:"Cancelled",title:"Cancelled"},InApprovalProcess:{id:4,name:"InApprovalProcess",title:"Partially Approved"}})}]),appRoot.factory("LeaveStatus",["Constants",function(e){return new e({Pending:{id:0,name:"Pending"},Cancelled:{id:1,name:"Cancelled"},Consumed:{id:2,name:"Consumed"}})}]),appRoot.factory("LeaveDeductionType",["Constants",function(e){return new e({None:{id:0,name:"None"},Pending:{id:1,name:"Pending"},Approved:{id:2,name:"Approved"},Rejected:{id:3,name:"Rejected"},Cancelled:{id:4,name:"Cancelled"}})}]),appRoot.factory("LeaveRequestType",["Constants",function(e){return new e({SickLeave:{id:0,name:"SickLeave",displayName:"Sick Leave"},PaidLeave:{id:1,name:"PaidLeave",displayName:"Paid/Unpaid Leave"},OtherLeave:{id:2,name:"OtherLeave",displayName:"Other/Statutory Leave"}})}]),appRoot.factory("DeductionType",["Constants",function(e){return new e({None:{id:0,name:"None"},NoAttendanceLog:{id:1,name:"NoAttendanceLog"},LessWorkDuration:{id:2,name:"LessWorkDuration"},LateComming:{id:3,name:"LateComming"},MissingSwipe:{id:4,name:"MissingSwipe"}})}]),appRoot.factory("SessionType",["Constants",function(e){return new e({firstHalf:{id:0,name:"FirstHalf",displayName:"First Half"},secondHalf:{id:1,name:"SecondHalf",displayName:"Second Half"}})}]),appRoot.factory("ClockedStatus",["Constants",function(e){return new e({clockedIn:{id:0,title:"ClockedIn"},clockedOut:{id:1,title:"ClockedOut"}})}]),appRoot.factory("AttendanceRequestType",["Constants",function(e){return new e({none:{id:0,title:"None"},attendanceAdjustment:{id:1,title:"Attendance Adjustment"},webClockin:{id:2,title:"Web Clock-In"},forgotIdCard:{id:3,title:"ForgotID Card"},remoteClockIn:{id:4,title:"Remote Clock-In"},wfh:{id:5,title:"WFH"},onDuty:{id:6,title:"On Duty"},attendanceRegularization:{id:7,title:"Attendance Regularization"}})}]),appRoot.factory("AttendanceRequestStatus",["Constants",function(e){return new e({None:{id:0,title:"None"},Pending:{id:1,title:"Pending"},Approved:{id:2,title:"Approved"},Rejected:{id:3,title:"Rejected"},Cancelled:{id:4,title:"Cancelled"},PartiallyApproved:{id:5,title:"Partially Approved"}})}]),appRoot.factory("RemoteClockinApprovalType",["Constants",function(e){return new e({none:{id:0,title:"None"},approvalRequired:{id:1,title:"ApprovalRequired"},approvalNotRequire:{id:2,title:"ApprovalNotRequired"},requireNotify:{id:3,title:"RequireNotify"}})}]),appRoot.factory("SwipeStatusType",["Constants",function(e){return new e({fullSwipe:{id:0,title:"Office"},swipeInMissing:{id:1,title:"SwipeInMissing"},swipeOutMissing:{id:2,title:"SwipeOutMissing"}})}]),appRoot.factory("AttendanceDayType",["Constants",function(e){return new e({workingDay:{id:0,title:"WorkingDay",name:"Working Day"},holiday:{id:1,title:"Holiday",name:"Holiday"},weeklyOff:{id:2,title:"WeeklyOff",name:"Weekly Off"},noEntriesLogged:{id:3,title:"NoEntriesLogged",name:"Absent"},leave:{id:4,title:"Leave",name:"Leave"}})}]),appRoot.factory("TimesheetStatus",["Constants",function(e){return new e({allStatus:{id:null,title:"All Status",name:"All Status",cssClass:"part-approved"},unSubmitted:{id:0,title:"UnSubmitted",name:"Not Submitted",cssClass:"unsubmitted"},submitted:{id:1,title:"Submitted",name:"Waiting For Approval",cssClass:"submitted"},approved:{id:2,title:"Approved",name:"Approved",cssClass:"approved"},rejected:{id:3,title:"Rejected",name:"Rejected",cssClass:"rejected"},partiallyApproved:{id:4,title:"Partially Approved",name:"Partially Approved",cssClass:"part-approved"}})}]),appRoot.factory("TimeEntryStatus",["Constants",function(e){return new e({unSubmitted:{id:0,title:"UnSubmitted",name:"Not Submitted"},submitted:{id:1,title:"Submitted",name:"Submitted"},approved:{id:2,title:"Approved",name:"Approved"},rejected:{id:3,title:"Rejected",name:"Rejected"},inApprovalProcess:{id:4,title:"InApprovalProcess",name:"In Approval Process"},invoiced:{id:5,title:"Invoiced",name:"Invoiced"}})}]),appRoot.factory("TimeDuration",["Constants",function(e){return new e({none:{id:0,title:"None",name:"None",maxDays:0},hours:{id:1,title:"Hours",name:"Hour",maxDays:0},days:{id:2,title:"Days",name:"Day",maxDays:1},weeks:{id:3,title:"Weeks",name:"Week",maxDays:7},months:{id:4,title:"Months",name:"Month",maxDays:28},halfYear:{id:5,title:"HalfYear",name:"HalfYear",maxDays:168},year:{id:6,title:"Year",name:"Year",maxDays:338},quarterly:{id:7,title:"Quarterly",name:"Quarterly",maxDays:88}})}]),appRoot.factory("CarryOverType",["Constants",function(e){return new e({allLeavesExpire:{id:0,title:"All Leave Expire"},payAndCarry:{id:1,title:"Pay And Carry"},carryAndPay:{id:2,title:"Carry And Pay"}})}]),appRoot.factory("LeaveAccrualRate",["Constants",function(e){return new e({monthly:{id:1,title:"Monthly",name:"Month",minDays:1,maxDays:28,instancesInaYear:12},quarterly:{id:2,title:"Quarterly",name:"Quarter",minDays:1,maxDays:90,instancesInaYear:4},halfYearly:{id:3,title:"Half Yearly",name:"Half Year",minDays:1,maxDays:180,instancesInaYear:2},semiMonthly:{id:4,title:"Semi Monthly",name:"Month",minDays:1,maxDays:15,instancesInaYear:24}})}]),appRoot.factory("RoundOffType",["Constants",function(e){return new e({none:{id:0,title:"None"},roundToNearestZero:{id:1,title:"Round To Nearest Zero"},roundToNextAvailable:{id:2,title:"Round To Next Available"}})}]),appRoot.factory("LeaveOverLappingType",["Constants",function(e){return new e({none:{id:0,title:"None"},leaveBetweenTwoDays:{id:1,title:"Leave Between Two Days"},leaveBeforeDay:{id:2,title:"Leave Before Day"},leaveAfterDay:{id:3,title:"Leave After Day"},leaveEitherBeforeOrAfter:{id:4,title:"Leave Either Before Or After"}})}]),appRoot.factory("YearEndProcessingType",["Constants",function(e){return new e({allLeavesExpire:{id:0,title:"All Leave Expire"},payAll:{id:1,title:"Pay All"},carryForwardAll:{id:2,title:"Carry Forward All"},payAndCarry:{id:3,title:"Pay And Carry"},carryAndPay:{id:4,title:"Carry And Pay"}})}]),appRoot.factory("NegativeBalanceProcessingType",["Constants",function(e){return new e({nullifyAndReset:{id:0,title:"Nullify And Reset"},deductFromSalary:{id:1,title:"Deduct From Salary"},carryForward:{id:2,title:"Carry Forward"}})}]),appRoot.factory("LeaveApprover",["Constants",function(e){return new e({reportingManager:{id:1,title:"Reporting Manager"},hrManager:{id:2,title:"HR Manager"}})}]),appRoot.factory("LeavesLimit",["Constants",function(e){return new e({accruedBalance:{id:1,title:"Limit to Accrued Balance"},yearlyLimit:{id:2,title:"Limit to Yearly Allocation"},noLimit:{id:3,title:"No Upper Limit"}})}]),appRoot.factory("SpecialDays",["Constants",function(e){return new e({birthDay:{id:1,title:"Birthday"},marriageAnniversary:{id:2,title:"Marriage Anniversary"},joiningDay:{id:3,title:"Work Anniversary"}})}]),appRoot.factory("SystemLeaveType",["Constants",function(e){return new e({none:{id:0,title:"None"},floater:{id:1,title:"Floater"},special:{id:2,title:"Special"},compoff:{id:3,title:"Compoff"}})}]),appRoot.factory("DocFolders",["Constants",function(e){return new e({allFolders:{id:1,name:"All Folders"},mandatoryDocuments:{id:2,name:"Mandatory Documents"},onboardingDocuments:{id:3,name:"Onboarding Documents"},forms:{id:4,name:"Forms"},financial:{id:5,name:"Financial"}})}]),appRoot.factory("SystemRoleTypes",["Constants",function(e){return new e({Employee:{id:0,title:"Employee",name:"Employee",feature:"HRIS"},HRExecutive:{id:1,title:"HR Executive",name:"HRExecutive",feature:"HRIS"},GlobalAdmin:{id:2,title:"Global Admin",name:"GlobalAdmin",feature:"HRIS"},TimesheetBillingManager:{id:3,title:"Timesheet Billing Manager",name:"TimesheetBillingManager",feature:"TIMESHEET"},ProjectAdmin:{id:4,title:"Project Admin",name:"ProjectAdmin",feature:"TIMESHEET"},AssetManager:{id:5,title:"Asset Manager",name:"AssetManager",feature:"ASSETS"},PayrollAdmin:{id:6,title:"Payroll Admin",name:"PayrollAdmin",feature:"PAYROLL"},HRManager:{id:7,title:"HR Manager",name:"HRManager",feature:"HRIS"},PerformanceAdmin:{id:8,title:"Performance Admin",name:"PerformanceAdmin",feature:"PMS"},ExpenseManager:{id:9,title:"Expense Manager",name:"ExpenseManager",feature:"EXPENSES"},RequisitionManager:{id:10,title:"RequisitionManager",name:"RequisitionManager",feature:"REQUISITION"},TravelDeskManager:{id:11,title:"Travel Desk Manager",name:"TravelDeskManager",feature:"TRAVELDESK"}})}]),appRoot.factory("WeekDays",["Constants",function(e){return new e({monday:{id:1,title:"Monday"},tuesday:{id:2,title:"Tuesday"},wednesday:{id:3,title:"Wednesday"},thursday:{id:4,title:"Thursday"},friday:{id:5,title:"Friday"},saturday:{id:6,title:"Saturday"},sunday:{id:0,title:"Sunday"}})}]),appRoot.factory("ApproverType",["Constants",function(e){return new e({none:{id:0,title:"None"},reportingManager:{id:1,title:"Reporting Manager"},projectManager:{id:2,title:"Project Manager"},accountManager:{id:3,title:"Client Manager"},l2Manager:{id:4,title:"L2 Manager"},departmentHead:{id:5,title:"Department Head"},businessUnitHead:{id:6,title:"Business unit Head"},employee:{id:99,title:"Employee"}})}]),appRoot.factory("CompanyType",["Constants",function(e){return new e({publicSector:{id:0,title:"Public Sector"},privateLimited:{id:1,title:"Private Limited"},limitedLiability:{id:2,title:"Limited Liability"},publicLimited:{id:3,title:"Public Limited"},proprietorship:{id:4,title:"Proprietorship"},partnershipfirm:{id:5,title:"Partnership Firm"},foreignCompany:{id:6,title:"Foreign Company"},societyClubTrustNGOAOP:{id:7,title:"Society/ Club/ Trust/ NGO/ AOP"},others:{id:8,title:"Others"}})}]),appRoot.factory("DayOffs",["Constants",function(e){return new e({all:{id:0,title:"All"},firstWeek:{id:1,title:"1st"},secondWeek:{id:2,title:"2nd"},thirdWeek:{id:3,title:"3rd"},fourthWeek:{id:4,title:"4th"},fifthWeek:{id:5,title:"5th"},oddWeek:{id:6,title:"Odd(1,3,5)"},evenWeek:{id:7,title:"Even(2,4)"}})}]),appRoot.factory("BillingRateUnit",["Constants",function(e){return new e({hour:{id:0,title:"Hourly"},week:{id:1,title:"Weekly"},month:{id:2,title:"Monthly"}})}]),appRoot.constant("Months",[{id:0,name:"Jan"},{id:1,name:"Feb"},{id:2,name:"Mar"},{id:3,name:"Apr"},{id:4,name:"May"},{id:5,name:"Jun"},{id:6,name:"Jul"},{id:7,name:"Aug"},{id:8,name:"Sep"},{id:9,name:"Oct"},{id:10,name:"Nov"},{id:11,name:"Dec"}]),appRoot.factory("PaymentTerms",["Constants",function(e){return new e({net15:{id:15,name:"Net 15"},net30:{id:30,name:"Net 30"},net45:{id:45,name:"Net 45"},net60:{id:60,name:"Net 60"}})}]),appRoot.factory("InvoiceLineItemType",["Constants",function(e){return new e({task:{id:0,name:"Task",propertyKey:"taskId"},resource:{id:1,name:"Resource",propertyKey:"employeeId"},billingRole:{id:2,name:"Billing Role",propertyKey:"billingRoleId"}})}]),appRoot.factory("TimesheetInvoiceStatus",["Constants",function(e){return new e({created:{id:0,name:"Created",title:"Drafted"},sent:{id:1,name:"Sent",title:"Sent"},paidInFull:{id:3,name:"PaidInFull",title:"Paid"}})}]),appRoot.factory("TimesheetPaymentStatus",["Constants",function(e){return new e({due:{id:0,name:"Due"},partialPaid:{id:1,name:"Partially Paid"},paidInFull:{id:2,name:"Paid In Full"}})}]),appRoot.factory("ProjectStatus",["Constants",function(e){return new e({inProgress:{id:0,title:"In Progress"},completed:{id:1,title:"Completed"},cancelled:{id:2,title:"Cancelled"}})}]),appRoot.factory("BillingType",["Constants",function(e){return new e({noBilling:{id:0,title:"No Billing"},fixedBid:{id:1,title:"Fixed Bid"},timeAndMaterials:{id:2,title:"Time & Materials"},cappedTM:{id:3,title:"Capped T & M"}})}]),appRoot.factory("TaskBillingType",["Constants",function(e){return new e({NonBillable:{id:0,title:"Non Billable"},Billable:{id:1,title:"Billable"},Any:{id:2,title:"Any"}})}]),appRoot.factory("TerminationReasonType",["Constants",function(e){return new e({Voluntary:{id:1,name:"Voluntary",title:"Employee Resignation"},Involuntary:{id:2,name:"Involuntary",title:"Company Actions"},Other:{id:3,name:"Other",title:"Other"}})}]),appRoot.factory("LeaveAttendanceSummaryStatus",["Constants",function(e){return new e({None:{id:0,title:"None"},WeekOff:{id:1,title:"Week Off"},WorkFromHome:{id:2,title:"Work From Home"},AttendanceMissing:{id:3,title:"Attendance Missing"},WorkingDay:{id:4,title:"Working Day"},WorkedOnHoliday:{id:5,title:"Worked on Holiday"},PaidLeaveApproved:{id:6,title:"Paid Leave - Approved"},PaidLeaveNotApproved:{id:7,title:"Paid Leave - Not Approved"},UnpaidLeaveApproved:{id:8,title:"Unpaid Leave - Approved"},UnpaidLeaveNotApproved:{id:9,title:"Unpaid Leave - Not Approved"},Holiday:{id:10,title:"Week Off"}})}]),appRoot.factory("FinalizePayrollSteps",["Constants",function(e){return new e({fetchEmployees:{id:0,title:"Fetch employees to process for payroll"},generateLop:{id:1,title:"Generate Loss of Pay entries..."},salaryRevisons:{id:2,title:"Process Salary revisions"},bonusRevisions:{id:3,title:"Process Bonus entries"},deductEmi:{id:4,title:"Deduct Loan EMIs"},createAdvices:{id:5,title:"Create Salary advices"},generatePayRegister:{id:6,title:"Generate Payroll register"},createTdsSummaries:{id:7,title:"Create TDS summaries"},generatePFChallan:{id:8,title:"Generate PF Electronic Challan Return"},generatePFMonthlyForm:{id:9,title:"Create PF monthly filing Form"},generatePTReturn:{id:10,title:"Generate Professional Tax Filing return"}})}]),appRoot.factory("TenantBillingStatus",["Constants",function(e){return new e({None:{id:0,title:"None"},Paid:{id:1,title:"Paid"},Due:{id:2,title:"Due"},OverDue:{id:3,title:"Overdue"},Verifying:{id:4,title:"Verifying"}})}]),appRoot.factory("SubscriptionInvoiceStatus",["Constants",function(e){return new e({None:{id:0,title:"None"},Open:{id:1,title:"Open"},Verifying:{id:2,title:"Verifying"},Close:{id:3,title:"Close"},WriteOff:{id:4,title:"WriteOff"}})}]),appRoot.factory("SubscriptionInvoiceCycle",["Constants",function(e){return new e({None:{id:0,title:"None"},Monthly:{id:1,title:"Monthly"},BiMonthly:{id:2,title:"BiMonthly"},Quarterly:{id:3,title:"Quarterly"},HalfYearly:{id:4,title:"HalfYearly"},Yearly:{id:5,title:"Yearly"}})}]),appRoot.factory("AlertType",["Constants",function(e){return new e({None:{id:0,title:"None"},Announcement:{id:1,title:"Announcement"},TenantInvoice:{id:2,title:"TenantInvoice"}})}]),appRoot.factory("ExperienceRange",["Constants",function(e){return new e({Unknown:{id:0,title:"Unknown"},BelowTwo:{id:1,title:"0-2 Years"},TwoToFour:{id:2,title:"2-4 Years"},FourToSix:{id:3,title:"4-6 Years"},SixToNine:{id:4,title:"6-9 Years"},AboveNine:{id:5,title:"9+ Years"}})}]),appRoot.factory("AgeRange",["Constants",function(e){return new e({Unknown:{id:0,title:"Unknown"},BelowTwenty:{id:1,title:"Below 20 Years"},TwentyToThirty:{id:2,title:"21-30 Years"},ThirtyToForty:{id:3,title:"31-40 Years"},FortyToFiftyFive:{id:4,title:"41-55 Years"},AboveFiftyFive:{id:5,title:"55+ Years"}})}]),appRoot.factory("AuthenticationType",["Constants",function(e){return new e({None:{id:0,title:"None"},Basic:{id:1,title:"Basic"},Office365:{id:2,title:"Office 365"},Google:{id:3,title:"Google"}})}]),appRoot.factory("AuthenticationMode",["Constants",function(e){return new e({EmailOnly:{id:0,title:"Email Only"},EmailOrUsername:{id:1,title:"Email Or Username"},UsernameOnly:{id:2,title:"Username Only"}})}]),appRoot.factory("CustomUsernameType",["Constants",function(e){return new e({None:{id:0,title:"None"},MobileNumber:{id:1,title:"Mobile Number"},EmployeeNumber:{id:2,title:"Employee Number"}})}]),appRoot.factory("LoginSource",["Constants",function(e){return new e({None:{id:0,title:"None"},Web:{id:1,title:"Web"},MobileApp:{id:2,title:"Mobile App"}})}]),appRoot.factory("EmployeeReportType",["Constants",function(e){return new e({None:{id:0,title:"None"},AllEmployees:{id:1,title:"AllEmployees"},RegisteredEmployees:{id:2,title:"RegisteredEmployees"},EmployeeInvitations:{id:3,title:"EmployeeInvitations"},PendingRegistrations:{id:4,title:"PendingRegistrations"},UnInvitedEmployees:{id:5,title:"UnInvitedEmployees"},EmployeesNeverLoggedIn:{id:6,title:"EmployeesNeverLoggedIn"},EmployeeType:{id:7,title:"EmployeeType"},EmployeeRoles:{id:8,title:"EmployeeRoles"},InCompleteProfiles:{id:9,title:"InCompleteProfiles"},EmployeesInProbation:{id:10,title:"EmployeesInProbation"},ConfirmedEmployees:{id:11,title:"ConfirmedEmployees"},EmployeesInNoticePeriod:{id:12,title:"EmployeesInNoticePeriod"},RelievedEmployees:{id:13,title:"RelievedEmployees"},EmployeesWithOutReportingManager:{id:14,title:"EmployeesWithOutReportingManager"},FamilyInfo:{id:15,title:"FamilyInfo"},BloodGroupInfo:{id:16,title:"BloodGroupInfo"},ContactInfo:{id:17,title:"ContactInfo"},SocialAccountInfo:{id:18,title:"SocialAccountInfo"},EducationDetails:{id:19,title:"EducationDetails"},ExperienceDetails:{id:20,title:"ExperienceDetails"},BirthDayReport:{id:21,title:"BirthDayReport"},WorkAnniversaryReport:{id:22,title:"WorkAnniversaryReport"},MarriageAnniversaryReport:{id:23,title:"MarriageAnniversaryReport"},LoginHistory:{id:24,title:"LoginHistory"},LoginFailures:{id:25,title:"LoginFailures"},JobTitles:{id:26,title:"JobTitles"},Departments:{id:27,title:"Departments"},LeavePlans:{id:28,title:"LeavePlans"},OrgLocations:{id:29,title:"OrgLocations"},WeekOffs:{id:30,title:"WeekOffs"},TimingPolicies:{id:31,title:"TrackingPolicies"},Shifts:{id:32,title:"Shifts"},EmployeeLeavePlans:{id:33,title:"EmployeeLeavePlans"},EmployeeShifts:{id:34,title:"EmployeeShifts"},EmployeeWeekOffs:{id:35,title:"EmployeeWeekOffs"},EmployeeTimingPolicies:{id:36,title:"EmployeeTrackingPolicies"},JobDetails:{id:37,title:"JobDetails"},FinancialDetails:{id:38,title:"FinancialDetails"},EmployeeBenefits:{id:39,title:"EmployeeBenefits"},ExpensePolicies:{id:40,title:"ExpensePolicies"},EmployeeCustomFieldDetails:{id:41,title:"EmployeeCustomFieldDetails"},AllEmployeesMasterData:{id:42,title:"AllEmployeesMasterData"},PollResponses:{id:43,title:"PollResponses"}})}]),appRoot.factory("NatureOfExpense",["Constants",function(e){return new e({None:{id:0,title:"None",description:"None"},General:{id:1,title:"General",description:"General"},Mileage:{id:2,title:"Mileage",description:"Mileage"},PerDiem:{id:3,title:"Per Diem",description:"Per Day"},AirTravel:{id:4,title:"Travel",description:"Travel"},Accommodation:{id:5,title:"Accommodation",description:"Accommodation"},LocalConveyance:{id:6,title:"Local Conveyance",description:"Local Conveyance"},CashAdvance:{id:7,title:"Cash Advance",description:"Cash Advance"}})}]),appRoot.factory("MileageUnit",["Constants",function(e){return new e({KM:{id:0,title:"Kms",description:"Kms"},Mi:{id:1,title:"Miles",description:"Miles"}})}]),appRoot.factory("ExpenseClaimStatus",["Constants",function(e){return new e({None:{id:0,title:"None",description:"None"},Pending:{id:1,title:"Not Submitted",description:"Pending"},Submitted:{id:2,title:"Waiting for Approval",description:"Submitted"},Approved:{id:3,title:"Approved",description:"Approved"},Rejected:{id:4,title:"Rejected",description:"Rejected"},Paid:{id:5,title:"Paid",description:"Paid"},InApprovalProcess:{id:6,title:"In Approval Process",description:"InApprovalProcess"}})}]),appRoot.factory("ExpenseRequestStatus",["Constants",function(e){return new e({None:{id:0,title:"None"},Pending:{id:1,title:"Pending"},Submitted:{id:2,title:"Submitted"},Rejected:{id:3,title:"Rejected"},ReSubmitted:{id:4,title:"Re-Submitted"}})}]),appRoot.factory("ComponentClaimStatus",["Constants",function(e){return new e({Pending:{id:0,title:"Pending",description:"Pending"},Approved:{id:1,title:"Approved",description:"Approved"},Rejected:{id:2,title:"Rejected",description:"Rejected"}})}]),appRoot.factory("ComponentClaimPaymentStatus",["Constants",function(e){return new e({Pending:{id:0,title:"Pending"},Paid:{id:1,title:"Paid"},PaidOutSideKekaPayroll:{id:2,title:"Outside Payroll"}})}]),appRoot.factory("ExpenseClaimPaymentMode",["Constants",function(e){return new e({None:{id:0,title:"None"},PaidWithPayroll:{id:1,title:"Payroll"},PaidOutsidePayroll:{id:2,title:"Outside Payroll"}})}]),appRoot.factory("ExpenseClaimPaymentStatus",["Constants",function(e){return new e({None:{id:0,title:"None"},YetToBePaid:{id:1,title:"Yet to be paid"},Paid:{id:2,title:"Paid"}})}]),appRoot.factory("ExpenseClaimPayInCycle",["Constants",function(e){return new e({FirstPendingCycle:{id:1,title:"First Pending Cycle"},NextPendingCycle:{id:2,title:"Next Pending Cycle"}})}]),appRoot.factory("FieldTypes",["Constants",function(e){return new e({Textbox:{id:1,title:"Textbox",template:"TextBox"},Textarea:{id:2,title:"Textarea",template:"TextArea"},Radio:{id:3,title:"Radio Buttons",template:"Radio"},Checkbox:{id:4,title:"Checkboxes",template:"Checkbox"},Dropdown:{id:5,title:"Dropdown",template:"Dropdown"},Date:{id:7,title:"Date",template:"Date"},Image:{id:10,title:"Image",template:"Image"},Time:{id:14,title:"Time",template:"Time"},Rating:{id:22,title:"Rating",template:"Rating"}})}]),appRoot.factory("FieldPermissionRoles",["Constants",function(e){return new e({None:{id:0,title:"None"},Self:{id:1,title:"Employee themselves"},ReportingManagerAndUp:{id:2,title:"HR Executive and up"},EveryOne:{id:3,title:"EveryOne"}})}]),appRoot.factory("FieldVisibility",["Constants",function(e){return new e({Read:{id:0,title:"Can View Only"},Write:{id:1,title:"Can View & Update"},Hidden:{id:2,title:"Hidden"}})}]),appRoot.factory("FieldApproval",["Constants",function(e){return new e({NotNeeded:{id:0,title:"Approval Not Needed"},FromReportingManager:{id:1,title:"Need Approval From Manager"},FromReportingManagerOrHRAdmin:{id:2,title:"Need Approval From Manager OR HR Admin"},FromHRAdmin:{id:3,title:"Need Approval From HR Admin"}})}]),appRoot.factory("FieldRequestStatus",["Constants",function(e){return new e({None:{id:0,title:"None"},Pending:{id:1,title:"Pending"},PartiallyApproved:{id:2,title:"PartiallyApproved"},Approved:{id:3,title:"Approved"},Rejected:{id:4,title:"Rejected"}})}]),appRoot.factory("ImportExcelType",["Constants",function(e){return new e({None:{id:0,title:"None"},EmployeesPersonalDetails:{id:1,title:"EmployeesPersonalDetails"},EmployeeBasicDetails:{id:25,title:"EmployeeBasicDetails"}})}]),appRoot.factory("AttendanceHoursType",["Constants",function(e){return new e({totalHours:{id:0,name:"Total Hours"},effectiveHours:{id:1,name:"Effective Hours"}})}]),appRoot.factory("PayActionType",["Constants",function(e){return new e({Hold:{id:0,title:"Hold",name:"hold"},Void:{id:1,title:"Void",name:"void"},PayAsArrears:{id:2,title:"Pay As Arrears",name:"payAsArrears"},PayAsSalary:{id:3,title:"Pay As Salary",name:"payAsSalary"}})}]),appRoot.factory("ApplicationModule",["Constants",function(e){return new e({HRIS:{id:0,title:"HRIS",name:"HRIS"},Timesheet:{id:1,title:"Timesheet",name:"Timesheet"},Attendance:{id:2,title:"Attendance",name:"Attendance"},Payroll:{id:3,title:"Payroll",name:"Payroll"}})}]),appRoot.factory("AttendanceModificationStatus",["Constants",function(e){return new e({none:{id:0,name:"HRIS"},requestToModify:{id:1,name:"requestToModify"},requestToAdd:{id:2,name:"requestToAdd"},requestToDelete:{id:3,name:"requestToDelete"},requestToAddWebLog:{id:4,name:"requestToAddWebLog"},requestToAddRemoteLog:{id:5,name:"requestToAddRemoteLog"}})}]),appRoot.factory("UserRoleType",["Constants",function(e){return new e({Employee:{id:1,name:"Employee",title:"Employee"},Privileged:{id:2,name:"Privileged",title:"Privileged"}})}]),appRoot.factory("RatingVisibilityType",["Constants",function(e){return new e({rating:{id:0,title:"Rating"},performanceBand:{id:1,title:"Performance Band"}})}]),appRoot.factory("PeriodOptions",["Constants",function(e){return new e({Day:{id:2,title:"Day"},Week:{id:3,title:"Week"},Month:{id:4,title:"Month"}})}]),appRoot.factory("Frequency",["Constants",function(e){return new e({monthly:{id:0,title:"Monthly",name:"monthly",description:"12 times a year - Monthly",months:1},BiMonthly:{id:1,title:"Bi-Monthly",name:"BiMonthly",description:"twice in a month - Bi-Monthly",months:.5},quarterly:{id:2,title:"Quarterly",name:"quarterly",description:"4 times a year - Quarterly",months:3},halfYearly:{id:3,title:"Half Yearly",name:"halfYearly",description:"Twice a year - Half Yearly",months:6},yearly:{id:4,title:"Annually",name:"yearly",description:"Once a year - Annual",months:12}})}]),appRoot.factory("RecalculationStatus",["Constants",function(e){return new e({Pending:{id:0,title:"Pending"},Processing:{id:1,title:"Processing"},Completed:{id:2,title:"Completed"},Failed:{id:3,title:"Failed"}})}]),appRoot.factory("UsernameType",["Constants",function(e){return new e({Email:{id:0,title:"Email"},MobileNumber:{id:1,title:"MobileNumber"},EmployeeNumber:{id:2,title:"EmployeeNumber"}})}]),appRoot.factory("SupportedViews",["Constants",function(e){return new e({EmployeeProfile:{id:0,title:"Employee Profile",value:"employeeprofile"},AssetType:{id:1,title:"Asset Type",value:"assettype"}})}]),appRoot.factory("CompositeViewType",["Constants",function(e){return new e({None:{id:0,title:"None",value:"none"},EmployeeProfile:{id:1,title:"Employee Profile",value:"employeeprofile"},AssetType:{id:2,title:"Asset Type",value:"assettype"}})}]),appRoot.factory("AuditEventType",["Constants",function(e){return new e({TimeSheetSubmitted:{title:"TimeSheet Submitted"},PayrollRun:{title:"Payroll Run"},BankStatementBatchCreated:{title:"Bank Statement Batch Created"},PTChallanDownloaded:{title:"PT Challan Downloaded"},PFChallanDownloaded:{title:"PF Challan Downloaded"},ESIChallanDownloaded:{title:"ESI Challan Downloaded"}})}]),appRoot.factory("FeedBackTypes",["Constants",function(e){return new e({Appreciate:{id:0,title:"Appreciation",name:"Appreciate"},Personal:{id:1,title:"Personal Feedback",name:"Personal"},Private:{id:2,title:"Private Note",name:"Private"}})}]),appRoot.factory("ReviewResponseType",["Constants",function(e){return new e({Textbox:{id:1,title:"Textbox",template:"TextBox",description:"Comment Only"},Radio:{id:3,title:"Radio Buttons",template:"Radio",description:"Select one from the list"},Rating:{id:22,title:"Rating",template:"Rating",description:"Comment + Rating"}})}]),appRoot.factory("ReviewerType",["Constants",function(e){return new e({self:{id:1,title:"Self",name:"self",isDefault:!0,isIncludedInIndividualGoalsStep:!0},reportingManager:{id:2,title:"Reporting Manager",name:"reportingManager",isDefault:!0,isNominationApprover:!0,isIncludedInIndividualGoalsStep:!0,isApprover:!0},managerOfManager:{id:3,title:"Manager Of Manager",name:"managerOfManager",isDefault:!0,isNominationApprover:!0,isIncludedInIndividualGoalsStep:!0,isApprover:!0},hrManager:{id:4,title:"Admin",name:"hrManager"},departmentHead:{id:5,title:"Department Head",name:"departmentHead",isDefault:!0,isNominationApprover:!0,isIncludedInIndividualGoalsStep:!0,isApprover:!0},peer:{id:6,title:"Peers",name:"peer",isAdditional:!0},external:{id:7,title:"External",name:"external",isAdditional:!0},subordinates:{id:8,title:"Subordinates",name:"subordinates",isAdditional:!0},businessUnitHead:{id:9,title:"Business Unit Head",name:"businessUnitHead",isIncludedInIndividualGoalsStep:!0},otherEmployee:{id:10,title:"Other Employee(s)",name:"otherEmployee"}})}]),appRoot.factory("GlobalRatingScales",["Constants",function(e){return new e({three:{id:3,title:"Three",name:"3-scale",score:3},four:{id:4,title:"Four",name:"4-scale",score:4},five:{id:5,title:"Five",name:"5-scale",score:5},six:{id:6,title:"Six",name:"6-scale",score:6},seven:{id:7,title:"Seven",name:"7-scale",score:7},eight:{id:8,title:"Eight",name:"8-scale",score:8},nine:{id:9,title:"Nine",name:"9-scale",score:9},ten:{id:10,title:"Ten",name:"10-scale",score:10}})}]),appRoot.factory("RatingIcons",["Constants",function(e){function t(e){return"icon-xhr-"+e}function i(e){return t(e)+"-off"}return new e({star:{id:0,title:"star",name:"star",onClassName:t("star"),offClassName:i("star")},person:{id:1,title:"person",name:"person",onClassName:t("person"),offClassName:i("person")},puzzle:{id:2,title:"puzzle",name:"puzzle",onClassName:t("puzzle"),offClassName:i("puzzle")},puzzle2:{id:3,title:"puzzle2",name:"puzzle2",onClassName:t("puzzle2"),offClassName:i("puzzle2")},briefcase:{id:4,title:"briefcase",name:"briefcase",onClassName:t("briefcase"),offClassName:i("briefcase")},map:{id:5,title:"map",name:"map",onClassName:t("map"),offClassName:i("map")},tag:{id:6,title:"tag",name:"tag",onClassName:t("tag"),offClassName:i("tag")},flag:{id:7,title:"flag",name:"flag",onClassName:t("flag"),offClassName:i("flag")},ribbon:{id:8,title:"ribbon",name:"ribbon",onClassName:t("ribbon"),offClassName:i("ribbon")},ribbon2:{id:9,title:"ribbon2",name:"ribbon2",onClassName:t("ribbon2"),offClassName:i("ribbon2")},ribbon3:{id:10,title:"ribbon3",name:"ribbon3",onClassName:t("ribbon3"),offClassName:i("ribbon3")},wallet:{id:11,title:"wallet",name:"wallet",onClassName:t("wallet"),offClassName:i("wallet")},marker:{id:12,title:"marker",name:"marker",onClassName:t("marker"),offClassName:i("marker")},bulb:{id:13,title:"bulb",name:"bulb",onClassName:t("bulb"),offClassName:i("bulb")}})}]),appRoot.factory("ReviewObjectives",["Constants",function(e){return new e({none:{id:0,title:"None",name:"none"},competencies:{id:1,title:"Competencies",name:"Competencies",description:'A Competency is the capability to apply or use a set of related knowledge, skills, and abilities required to successfully perform "critical work functions" or tasks in a defined work setting.',setupTime:"High",instructions:"Setting up competencies is more time consuming and requires involvement of managers at multiple levels. Managers would have to assign job functions and competencies for each employee."},goals:{id:2,title:"Goals",name:"goals",description:"While goals may have their own status tracking, they can also be used to rate an employee performance. The settings to turn on/off goals in review forms are available in the later sections.",note:"Goals can be unchecked during review process",setupTime:"Easy",instructions:"Enabling goals to be available in the performance review forms is very easy and doesn't consume any time."},reviewForm:{id:3,title:"Review Questionnaire",name:"Questions",description:"Questions can be used in the performance review form and used for rating of performance as well.",note:"",setupTime:"Easy",instructions:"Defining various questionnaires  to use in the review form is relatively easy"},coreValues:{id:4,title:"Core Values",name:"Core Values",description:"Core values are those values that your organization truly believes in. They support your organization’s vision, shape its culture and reflect its philosophy, beliefs and principles.",setupTime:"Easy",tip:"It is better to have a short list of core values - say 5 or 6 in number.If the list is long, it is going to be difficult for your employees to connect and adhere to them."},skills:{id:5,title:"Skills",name:"skills"}})}]),appRoot.factory("CycleBeginCondition",["Constants",function(e){return new e({basedOnJoiningDate:{id:1,title:"Date of Joining",name:"basedOnJoiningDate",description:"Based On Joining Date"},basedOnProbationEndDate:{id:2,title:"Probation End Date",name:"basedOnProbationEndDate",description:"Based On Probation End Date"}})}]),appRoot.factory("ReviewEligibilityCriteria",["Constants",function(e){return new e({afterJoining:{id:0,title:"Date of Joining",name:"afterJoining",description:"Based On Joining Date"},AfterProbation:{id:1,title:"Probation End Date",name:"AfterProbation",description:"Based On Probation End Date"}})}]),appRoot.factory("CycleFrequency",["Constants",function(e){return new e({none:{id:0,title:"None",name:"none"},monthly:{id:1,title:"Monthly",name:"monthly"},quarterly:{id:2,title:"Quarterly",name:"quarterly"},halfYearly:{id:3,title:"Half Yearly",name:"halfYearly"},yearly:{id:4,title:"Annually",name:"yearly"}})}]),appRoot.factory("ReviewStepType",["Constants",function(e){return new e({summary:{id:0,title:"Summary",name:"summary"},nomination:{id:1,title:"Selecting Participants",name:"nomination"},meeting:{id:2,title:"One-One Meeting",name:"meeting",isDeletable:!0},form:{id:3,title:"Review Form",name:"form"},calibration:{id:4,title:"Calibration",name:"calibration",isDeletable:!0},finalStep:{id:5,title:"Review Completion Step",name:"finalStep"}})}]),appRoot.factory("CompetencyType",["Constants",function(e){return new e({None:{id:0,title:"None",name:"None"},CommonSuccess:{id:1,name:"Common Success",title:"Core And Common Success"},JobSpecific:{id:2,name:"Job Specific",title:"Job Specific"},Core:{id:3,name:"Core",title:"Core"}})}]),appRoot.factory("GoalType",["Constants",function(e){return new e({Individual:{id:0,title:"Individual",name:"individual",cssClass:"individual-goal",shortForm:"Indv"},Team:{id:1,title:"Team",name:"team",cssClass:"team-goal",shortForm:"Team"},Department:{id:2,title:"Department",name:"department",cssClass:"department-goal",shortForm:"Dept"},Organization:{id:3,title:"Organization",name:"organization",cssClass:"organization-goal",shortForm:"Org"}})}]),appRoot.factory("GoalMetricType",["Constants",function(e){return new e({Percentage:{id:0,title:"Percentage (%)",name:"percentage",symbol:"%",description:"This signifies the percentage metric. Typically the target value is 100 for a percentage metric."},Number:{id:1,title:"Number (#)",name:"number",symbol:"#",description:"This signifies a certain number of well defined units. e.g., Apples, Oranges, Sales Closures, etc."},Checkbox:{id:2,title:"Checkbox (▢)",name:"checkbox",symbol:"Y/N",description:"This signifies a 'Yes or No' type of metric. A quantity using this metric has two states: 'In Progress' and 'Complete'"}})}]),appRoot.factory("StepFunction",["Constants",function(e){return new e({independently:{id:1,title:"Independently",name:"independently",description:"Each of the persons receives their own form simultaneously and completes the step independently."},collaboratively:{id:2,title:"Collaboratively",name:"collaboratively",description:"All of the above people sit together and complete this step in collaboration. One of the persons selected below can mark the process as complete."},sequentially:{id:3,title:"Sequentially",name:"sequentially",description:"Each of the persons receives the review form in the following sequence. The form is available for next reviewers after completion of previous reviewers."}})}]),appRoot.factory("GoalPeriodUnit",["Constants",function(e){return new e({days:{id:2,title:"Days",name:"days"},weeks:{id:3,title:"Weeks",name:"weeks"},months:{id:4,title:"Months",name:"months"}})}]),appRoot.factory("NominationRequestStatus",["Constants",function(e){return new e({Pending:{id:0,title:"Pending",name:"Pending Approval"},Approved:{id:1,title:"Approved",name:"Approved"},Rejected:{id:2,title:"Rejected",name:"Rejected"},PartApproved:{id:3,title:"Partially Approved",name:"Partially Approved"}})}]),appRoot.factory("ReviewStatus",["Constants",function(e){return new e({NotStarted:{id:0,title:"Not Started",name:"Not Started",color:"#D4D7DC"},Nominating:{id:1,title:"Nominating",name:"Nominating",color:"#90CC6D"},InNominationApproval:{id:2,title:"Nomination Approval",name:"Nomination Approval",color:"#C598D0"},InProgress:{id:3,title:"In Progress",name:"In Progress",color:"#C888FD"},InCalibration:{id:4,title:"Calibation Not Started",name:"Calibration",color:"#FBDD53"},Finalized:{id:5,title:"Finalized",name:"Finalized",color:"#2EB0F9"},Cancelled:{id:6,title:"Cancelled",name:"Cancelled",color:"#6C7481"},CalibrationInitiated:{id:7,title:"Calibration Initiated",name:"Calibration Initiated"},CalibrationCompleted:{id:8,title:"Calibration Completed",name:"Calibration Completed"},WritingReviewSummary:{id:9,title:"Writing Review Summary",name:"Writing Review Summary"},AwaitingForRelease:{id:10,title:"Awaiting For Release",name:"Awaiting For Release"},Completed:{id:11,title:"Completed",name:"Completed"}})}]),appRoot.factory("ReviewCalibrationStatus",["Constants",function(e){return new e({NotStarted:{id:0,title:"Not Started",name:"Not Started"},Initiated:{id:1,title:"Calibration Initiated",name:"Calibration Innitiated"},AwaitingForBandAssignment:{id:2,title:"Awaiting For Band Assignment",name:"Awaiting For Band Assignment"},Finalized:{id:3,title:"Calibration Finalized",name:"Calibration Finalized"},Completed:{id:4,title:"Calibration Completed",name:"Calibration Completed"},Disabled:{id:5,title:"Calibration Disabled",name:"Calibration Disabled"}})}]),appRoot.factory("ReviewGroupCycleStatus",["Constants",function(e){return new e({NotStarted:{id:0,title:"Not Started",name:"NotStarted"},InProgress:{id:1,title:"In Progress",name:"InProgress"},Completed:{id:2,title:"Completed",name:"Completed"}})}]),appRoot.factory("ReviewCycleCategory",["Constants",function(e){return new e({StandardCycle:{id:0,title:"Standard",name:"Standard"},AdhocCycle:{id:1,title:"Ad-hoc",name:"Ad-hoc"}})}]),appRoot.factory("ReviewReleaseStatus",["Constants",function(e){return new e({None:{id:0,title:"None",name:"None"},NotReleased:{id:1,title:"NotReleased",name:"Not Released"},Released:{id:2,title:"Released",name:"Released",color:"#C598D0"},Hidden:{id:3,title:"Hidden",name:"Hidden"}})}]),appRoot.factory("ReviewSubmissionStatus",["Constants",function(e){return new e({notSubmitted:{id:0,title:"Not Submitted",name:"Not Submitted"},submitted:{id:1,title:"Submitted",name:"Submitted"},unlocked:{id:2,title:"Unlocked",name:"Unlocked"}})}]),appRoot.factory("KeyResultRequirementType",["Constants",function(e){return new e({NotRequired:{id:0,title:"Not Required",name:"Not Required"},Optional:{id:1,title:"Optional",name:"Optional"},Required:{id:2,title:"Required",name:"Required"}})}]),appRoot.factory("GoalPriority",["Constants",function(e){return new e({Low:{id:0,title:"Low",name:"Low"},Medium:{id:1,title:"Medium",name:"Medium"},High:{id:2,title:"High",name:"High"}})}]),appRoot.factory("GoalCheckInType",["Constants",function(e){return new e({Increment:{id:0,title:"Increment",name:"increment",description:"This will add the value entered to the current progress"},Decrement:{id:1,title:"Decrement",name:"decrement",description:"This will subtract the value entered from the current progress"},Total:{id:2,title:"Total",name:"total",description:"This will set the value entered as the current progress"}})}]),appRoot.factory("GoalTrackingStatus",["Constants",function(e){return new e({None:{id:0,title:"New",name:"none",cssClass:"none",description:"Goals that are new."},OnTrack:{id:1,title:"On Track",name:"onTrack",cssClass:"on-track",description:"Goals whose progress is on track."},OffTrack:{id:2,title:"Behind",name:"offTrack",cssClass:"off-track",description:"Goals whose progress is lagging behind."},AtRisk:{id:3,title:"At Risk",name:"atRisk",cssClass:"at-risk",description:"Goals whose progress is at risk."}})}]),appRoot.factory("SkillType",["Constants",function(e){return new e({None:{id:0,title:"None",name:"None"},Skill:{id:1,title:"Skill",name:"Skill"},Competency:{id:2,title:"Competency",name:"Competency"},CoreValue:{id:3,title:"CoreValue",name:"Core Value"}})}]),appRoot.factory("ReviewItemVisibility",["Constants",function(e){return new e({Everyone:{id:1,title:"Everyone",name:"everyone"},EmployeeOnly:{id:2,title:"Self",name:"self"},ManagersOnly:{id:3,title:"All Other Reviewers (Except self)",name:"managers"}})}]),appRoot.factory("ReviewCycleType",["Constants",function(e){return new e({CommonCycle:{id:0,title:"Common Cycle",name:"Common Cycle",description:"Yes, the reviews for all employees in this group happen at the same time.",information:"This option is to be selected if performance reviews are conducted in fixed months every year. For instance, reviews are conducted once in a year in the month of April or reviews are conducted twice - once in the month of January and once in the month of July, etc."},IndividualCycle:{id:1,title:"Individual Cycle",name:"Individual Cycle",description:"No, the timing of the review for an employee depends on the date of joining and the frequency chosen in the above setting.",information:"For instance, say the frequency at which reviews are conducted is annual. For an employee who joined in May 2018, the first review can be conducted in May 2018, the next in May 2019 and so on. In case the frequency is quarterly, the first review can be conducted in May 2018, the next in August 2018, further in November 2018 and so on."}})}]),appRoot.factory("GoalMethod",["Constants",function(e){return new e({None:{id:0,title:"None"},Standard:{id:1,title:"Standard"},OKR:{id:2,title:"Objective Key Results (OKR)"}})}]),appRoot.factory("GoalAlias",["Constants",function(e){return new e({Standard:{id:0,title:"Goal",subTitle:"Sub Goal"},OKR:{id:1,title:"Objective",subTitle:"Key Result"}})}]),appRoot.factory("GoalLogItemType",["Constants",function(e){return new e({Create:{id:1,title:"Create",name:"create",action:"added"},Update:{id:2,title:"Update",name:"update",action:"edited"},CheckIn:{id:3,title:"Check In",name:"checkIn",action:"updated progress of"},Assignment:{id:7,title:"Assignment",name:"assignment",action:"assigned"},Delete:{id:8,title:"Delete",name:"delete",action:"deleted"},Archive:{id:9,title:"Archived",name:"Archived",action:"archived"},Complete:{id:10,title:"Complete",name:"complete",action:"closed"},Reopen:{id:11,title:"Reopen",name:"reopen",action:"reopened"}})}]),appRoot.factory("GoalVisibility",["Constants",function(e){return new e({OnlyManagers:{id:1,title:"OnlyManagers",name:"Only managers of the employee"},DepartmentEmployees:{id:2,title:"WithinDepartment",name:"Employees of the same department"},Everyone:{id:3,title:"Everyone",name:"Everyone"}})}]),appRoot.factory("ReviewLogItemType",["Constants",function(e){return new e({None:{id:0,title:"None",name:"None",action:"no action"},ReviewStarted:{id:1,title:"Review Started",name:"ReviewStarted",action:"started the review"},ReviewersNominated:{id:2,title:"Reviewers Nominated",name:"ReviewersNominated",action:"nominated reviewers"},ReviewersDeleted:{id:3,title:"Reviewers Deleted",name:"ReviewersDeleted",action:"deleted reviewers"},ReviewersApprovedRejected:{id:4,title:"Reviewers Approved Rejected",name:"ReviewersApprovedRejected",action:"approved/rejected reviewers"},MeetingSubmitted:{id:5,title:"Meeting Submitted",name:"MeetingSubmitted",action:"submitted meeting summary"},ReviewSubmitted:{id:6,title:"Review Submitted",name:"ReviewSubmitted",action:"submitted review rating"},ReviewCalibrated:{id:7,title:"Review Calibrated",name:"ReviewCalibrated",action:"calibrated ratings"},ReviewFinalized:{id:8,title:"Review Finalized",name:"ReviewFinalized",action:"finalized the review"},ReviewCompleted:{id:9,title:"Review Completed",name:"ReviewCompleted",action:"completed the review"},ReviewCancelled:{id:10,title:"Review Cancelled",name:"ReviewCancelled",action:"cancelled the review"},ReviewFormUpdated:{id:11,title:"Review Form Updated",name:"ReviewFormUpdated",action:"updated the review form"},StepCompleted:{id:12,title:"Step Completed",name:"StepCompleted",action:"Step completed"},ReviewReleased:{id:13,title:"Review Released",name:"Review Released",action:"employee review is released"},ReviewHidden:{id:14,title:"Review Hidden",name:"Review Hidden",action:"employee review is hidden"},ReviewerAdded:{id:15,title:"added reviewer",name:"ReviewerAdded",action:"added reviewer"},ReviewerRemoved:{id:16,title:"removed reviewer",name:"ReviewerRemoved",action:"removed reviewer"},ReviewFormUnlocked:{id:17,title:"Unlocked Review Form",name:"ReviewFormUnlocked",action:"unlocked Review form for"},AssignedCalibrator:{id:18,title:"Assigned Calibrator",name:"AssignedCalibrator",action:"assigned calibrator"},RemovedCalibrator:{id:19,title:"Removed Calibrator",name:"RemovedCalibrator",action:"removed calibrator"},CalibrationInitiated:{id:20,title:"Initiated Calibration",name:"CalibrationInitiated",action:"initiated calibration"},CalibrationCompleted:{id:21,title:"Calibration Completed",name:"CalibrationCompleted",action:"completed calibration"},CalibrationUnlocked:{id:22,title:"Calibration Unlocked",name:"CalibrationUnlocked",action:"unlocked calibration"},RollbackToCalibration:{id:23,title:"Rollback To Calibration",name:"RollbackToCalibration",action:"rolled back to calibration"},ReviewSummarySubmitted:{id:24,title:"Review Summary Submitted",name:"ReviewSummarySubmitted",action:"submitted review summary"},RollbackToFinalStep:{id:25,title:"Rollback To Final Step",name:"RollbackToFinalStep",action:"roll back the released review to awaiting for release"}})}]),appRoot.factory("MeetingStatus",["Constants",function(e){return new e({Active:{id:0,title:"Active"},Completed:{id:1,title:"Completed"},Cancelled:{id:2,title:"Cancelled"},Skipped:{id:3,title:"Skipped"}})}]),function(e){var t=function(){function e(){}return e.getById=function(e){return this[e]},e.getAll=function(){var e=this;return Object.keys(this).filter(function(t){return"string"==typeof e[t]}).map(function(t){var i=parseInt(t);return{title:e.getById(t),id:isNaN(i)?t:i}})},e}();e.Enum=t;var i=function(){return function(e,t,i){var n=this;this.setup=e,this.modal=t,this.sharedModel=i,this.updateStepsStatus=function(){var e=!1;n.steps=angular.copy(n.getDefaultSteps()),angular.forEach(n.steps,function(t){!e&&n.setup[t.stateName]?t.isCompleted=!0:e||(t.isCurrentstep=!0,e=!0),n.steps[t.name]=new n.sharedModel.SetupStep(t)})}}}();e.Setup=i;var n=function(){function e(e,t,i){this.steps=e,this.importService=t,this.notificationService=i,this.currentStep=this.steps[0]}return e.prototype.onFileUploaded=function(e){var t=this;this.isImportCompleted=!1,e.result?this.importService.validate().then(function(e){t.nextStep(),t.result=e.result,0==t.result.length&&t.previewFile()},function(e){var i=e.data.message?e.data.message:"Error occurred while importing file";t.notificationService.error(i)}):(this.exception=e.exception,this.notificationService.error(this.exception.Message))},e.prototype.importFile=function(){var e=this;this.importService.import().then(function(t){e.result=t,e.isImportCompleted=!0},function(t){var i=t.data.message?t.data.message:"Error occurred while importing file";e.notificationService.error(i)})},e.prototype.previewFile=function(){var e=this;this.importService.preview().then(function(t){e.uploadedDetails=t,e.initializeGridSettings(),e.nextStep(),e.result=null},function(t){var i=t.data.message?t.data.message:"Error occurred while importing file";e.notificationService.error(i)})},e.prototype.nextStep=function(){var e=this;this.currentStep.valid=!0,this.currentStep=this.steps.filter(function(t){return t.index==e.currentStep.index+1})[0]},e.prototype.initializeGridSettings=function(){},e}();e.ImportController=n;var o,r=function(){function e(e,t,i){this.importResource=t,this.params=i,this.importType=o[e]}return e.prototype.validate=function(){var e=angular.copy(this.params);return e.action="validate/"+this.importType,this.importResource.get(e).$promise},e.prototype.import=function(){var e=angular.copy(this.params);return e.action=this.importType,this.importResource.save(e,{}).$promise},e.prototype.preview=function(){var e=angular.copy(this.params);return e.action="preview/"+this.importType,this.importResource.query(e).$promise},e}();e.ImportService=r,function(e){e[e.PreviousSalaries=1]="PreviousSalaries",e[e.Bonuses=2]="Bonuses",e[e.CurrentSalary=3]="CurrentSalary",e[e.EffectiveSalary=4]="EffectiveSalary",e[e.LossOfDays=5]="LossOfDays",e[e.Financial=6]="Financial",e[e.Declaration=7]="Declaration",e[e.EffectiveBonuses=8]="EffectiveBonuses",e[e.TDSOverride=9]="TDSOverride",e[e.CurrentSalaryWithStructureType=10]="CurrentSalaryWithStructureType",e[e.ComponentsOverride=11]="ComponentsOverride",e[e.PFOverride=12]="PFOverride",e[e.PFAndESIDetails=13]="PFAndESIDetails",e[e.ComponentAccrual=14]="ComponentAccrual",e[e.ComponentClaim=15]="ComponentClaim",e[e.EmployeeEffectiveSalaryWithoutPayroll=16]="EmployeeEffectiveSalaryWithoutPayroll",e[e.Loans=17]="Loans",e[e.OneTimePayments=18]="OneTimePayments",e[e.OneTimeDeductions=19]="OneTimeDeductions",e[e.PTOverride=20]="PTOverride",e[e.ESIOverride=21]="ESIOverride",e[e.bonusesWithAction=22]="bonusesWithAction",e[e.perks=23]="perks",e[e.PayGroupAssignment=24]="PayGroupAssignment",e[e.PreviousComponentClaim=25]="PreviousComponentClaim",e[e.PayableDaysOverride=26]="PayableDaysOverride",e[e.OvertimeAdjustedAmount=27]="OvertimeAdjustedAmount",e[e.LopReversalDays=28]="LopReversalDays"}(o=e.ExcelImportType||(e.ExcelImportType={}));var a=function(){function e(e,t){this.report=e,this.filter=t}return e.prototype.refreshGrid=function(){this.filterRecord=this.filter("filter")(this.records,this.filterText,!1),this.gridOptions.data=this.filterRecord},e}();e.ReportController=a;var s=function(){function e(){}return e.prototype.$onInit=function(){},e.prototype.gotoStep=function(e){this.currentStepIndex>e&&(this.currentStepIndex=e)},e.prototype.next=function(){++this.currentStepIndex},e.prototype.previous=function(){++this.currentStepIndex},e.prototype.checkAnyPendingChanges=function(){return!1},e.$inject=[],e}();e.WizardController=s;var l=function(){function e(){}return e.prototype.goto=function(e){this.onNavigateTo({index:e})},e}();e.WizardHeaderController=l,angular.module("xhr").component("wizardHeader",{controller:e.WizardHeaderController,template:'<div class="col-sm-2 wizard-steps">\n                        <ul class="steps">\n                            <li ng-repeat="step in $ctrl.steps" class="step" data-ng-class="{\'active\' : (step.index ==  $ctrl.currentStepIndex)}">\n                                <div class="step-name" data-ng-class="{\'saperator\': $first}">\n                                    <div class="number" data-ng-click=" $ctrl.goto($index)">{{step.index}}</div>\n                                    <div class="title" data-ng-click=" $ctrl.goto($index)">{{step.title}}</div>\n                                </div>\n                            </li>                        \n                        </ul>\n                    </div>',bindings:{steps:"=",currentStepIndex:"=",onNavigateTo:"&"}});var c=function(){function e(e){this.timeoutService=e,this.restrict="EA",this.template="<div class=\"xhr-grid-pagination\" data-ng-class=\"{'pull-up': pullUp}\">\n            <p data-ng-class='{\"inline-block align-horizontal\": alignHorizontal}' class='clear-bottom upper-case current-page font-smaller'>Showing {{((gridApi.pagination.getPage() -1) * gridApi.grid.options.paginationPageSize) + 1}} - {{100 + ((gridApi.pagination.getPage() -1) * gridApi.grid.options.paginationPageSize)}}</p>\n            <div class=\"navigator\" data-ng-class='{\"inline-block\": alignHorizontal}'>\n                <span class='previous icon-arrow-left-1' data-ng-click='gridApi.pagination.previousPage()'></span>\n                <span class='seek-bar'>{{gridApi.pagination.getPage()}} of {{gridApi.pagination.getTotalPages()}}</span>\n                <span class='next icon-arrow-right-1' data-ng-click='gridApi.pagination.nextPage()'></span>\n            </div>\n        </div>",this.scope={gridApi:"=",alignHorizontal:"=",pullUp:"="},this.link=function(e,t,i){}}return e.factory=function(){var t=function(t){return new e(t)};return t.$inject=["$timeout"],t},e}();e.XhrGridPagination=c,angular.module("xhr").directive("xhrGridPagination",c.factory())}(SharedPatterns||(SharedPatterns={})),function(e){var t=function(){function e(e,t,i){this.httpService=e,this.resource=t,this.q=i,this.location=this.resource("https://maps.googleapis.com/maps/api/geocode/json?latlng=:latlng&key=AIzaSyBjMHjIjlGlKEWP1eVri2xxs7-juzdOVQA",{latlng:"@latlng"},{get:{ignoreRequestedWith:!0}})}return e.prototype.getGeoCordinates=function(){var e=this.q.defer();return $(".loading").show(),navigator.geolocation.getCurrentPosition(function(t){$(".loading").hide(),e.resolve(t)},function(t){$(".loading").hide(),e.reject(t)}),e.promise},e.prototype.getGeoLocationDetails=function(e,t){return this.location.get({latlng:t+","+e}).$promise},e.$inject=["$http","$resource","$q"],e}();e.GeoLocationServices=t;var i=function(){function e(){}return e.prototype.roundOffNumber=function(e){return"number"==typeof+e&&+e%1>0?parseFloat(e).toFixed(2):e},e.prototype.formatAggregation=function(e){var t="sum"==e.type?"Total":e.type;return void 0!=e.value||null!=e.value?t+": "+this.roundOffNumber(e.value):""},e}();e.UiGridExtensions=i;var n=function(){function e(e){var t=this;Object.keys(e).forEach(function(i){t[i]=e[i]}),this.isEvaluated=!1}return e.prototype.evalMathExpression=function(e){var t=this;try{(e||"").replace(/\[/g,"[#").split(/[\]\[ ]/).forEach(function(e){e.startsWith("#")&&((e=e.substring(1,e.length))in t||(t[e]=0))});var i=new Function("with(this) { var value = ("+e.replace(/]/g,"").replace(/\[/g,"")+")*1}; return value");this.result=i.call(this).toFixed(2),this.isEvaluated=!0}catch(e){this.exception=e,this.isEvaluated=!1}},e}();e.ExpressionParser=n;var o=function(){function e(e,t,i,n,o){this.qService=e,this.httpService=t,this.fileSaverService=i,this.blob=n,this._filter=o}return e.prototype.download=function(e,t,i,n){var o=this,r=this.qService.defer();return this.httpService({url:e,method:i,responseType:"arraybuffer",data:t}).then(function(e){if(200===e.status){var t=new o.blob([e.data],{type:e.headers("content-type")});n=n||o.getFileName(e.headers("content-disposition")),o.fileSaverService.saveAs(t,n),r.resolve({isDownloaded:!0})}else r.resolve({isDownloaded:!1,status:e})},function(e){r.resolve({isDownloaded:!1,status:e})}),r.promise},e.prototype.downloadFile=function(e,t){return this.download(e,null,"GET",t)},e.prototype.downloadFileFromBlob=function(e,t){return this.download(this._filter("privateStorageAccountUrl")(e),null,"GET",t)},e.prototype.downloadFileWithPost=function(e,t,i){return this.download(e,t,"POST",i)},e.prototype.getFileName=function(e){return e?e.slice(e.indexOf("filename=")+"filename=".length,e.length).replace(/\"/g,""):"download"},e.$inject=["$q","$http","FileSaver","Blob","$filter"],e}();e.FileDownloadService=o;var r=function(){function e(e){this._q=e,this.allGroups=[],this.departmentGroups=[],this.createGroupTree=function(e,t){var i=[];return e.forEach(function(e){e.depth=1,i.push(e);var n=t.filter(function(t){return t.parentGroupId==e.id});n.length>0&&n.forEach(function(e){e.depth=2,i.push(e);var n=t.filter(function(t){return t.parentGroupId==e.id});n.length>0&&n.forEach(function(e){e.depth=3,i.push(e)})})}),i.filter(function(e){return e.parentGroupId>0})}}return e.$inject=["$q"],e}();e.DepartmentLookUpService=r}(SharedServices||(SharedServices={})),angular.module("xhr").service("GeoLocationServices",SharedServices.GeoLocationServices).service("UiGridExtensions",SharedServices.UiGridExtensions).service("FileDownloadService",SharedServices.FileDownloadService).service("DepartmentLookUpService",SharedServices.DepartmentLookUpService),function(e){!function(e){function t(e){return{scope:{},controller:function(){},controllerAs:"ctrl",bindToController:{steps:"=",currentStep:"=",onClick:"&"},templateUrl:"home/wizardsteps",link:function(t,i,n){e(function(){})}}}t.$inject=["$timeout"],angular.module("xhr").directive("wizardSteps",t)}(e.Directives||(e.Directives={}))}(Shared||(Shared={})),appRoot.controller("ImportEmployeeController",["$scope","$resource","$stateParams","SharedModel","AppSettings","AppContext","GetStartedSteps","NotificationService","EmployeeServices","LookupServices","$location","UserImportSource","$uibModal","OrgSettingServices","DashboardServices","SharedModel",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,n){e.vm={},e.vm.modalTitle="Import Employees",e.vm.modelOptions=o.modelBlurSettings,e.vm.selectionSection=!0,e.vm.excelUsersSection=!1,e.vm.users=[];var h=t("/api/import/:action/:id",{id:"@id",action:"@action"}),f=function(t,i){angular.forEach(t.listImportStatus,function(t){angular.forEach(e.vm.users,function(e){e.email==t.email&&(e.status=1==t.status?"Email Exists":2==t.status?"Employee Number used":"Imported")})}),s.success(t.importedCount+" out of "+e.vm.selectedItems.length+" Users Imported Successfully.")};r.isOrgSetupComplete||y.updateOnBoardStep(a.ImportEmployees.id).then(function(e){console.log(e)}),e.userGridOptions=angular.copy(o.gridSettings),e.userGridOptions.enableRowSelection=!0,e.userGridOptions.enableSelectAll=!0,e.userGridOptions.multiSelect=!0,e.userGridOptions.enableCellEditOnFocus=!0,c.lookup.query({id:"locations"},function(t){e.vm.locations=t,1==t.length&&(e.vm.selectedLocation=t[0])}),e.isEmployeeNumberEditable=function(t){var i=e.vm.empNumberSettings;return!(i.autoGenerate&&!i.allowManualEntry||i.autoGenerate&&i.allowManualEntry&&new n.DateWithZeroTimee(t)>=new n.DateWithZeroTimee(i.manualEntryBefore))},e.userGridOptions.onRegisterApi=function(t){e.gridApi=t},e.onFileUploaded=function(t){e.vm.selectionSection=!1,e.vm.excelUsersSection=!0,e.userGridOptions.columnDefs=[{field:"employeeId",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="!grid.appScope.isEmployeeNumberEditable(row.entity.dateOfJoining)">auto-generated</span><span data-ng-if="grid.appScope.isEmployeeNumberEditable(row.entity.dateOfJoining)">{{row.entity.employeeNumber}}</span></div>',editableCellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="!grid.appScope.isEmployeeNumberEditable(row.entity.dateOfJoining)">auto-generated</span><span data-ng-if="grid.appScope.isEmployeeNumberEditable(row.entity.dateOfJoining)"><input type="number" data-ng-model="row.entity.employeeNumber" /></span></div>',cellEditableCondition:function(e){return e.grid.appScope.isEmployeeNumberEditable(e.row.entity.dateOfJoining)},width:200},{field:"employeeName",displayName:"Display Name",width:200},{field:"firstName",displayName:"First Name",width:200},{field:"middleName",displayName:"Middle Name",width:200},{field:"lastName",displayName:"Last Name",width:200},{field:"dateJoined",displayName:"Date of joining",type:"date",cellFilter:'date:"dd/MM/yyyy"',width:200,editableCellTemplate:'<input type="text" class="datepicking" data-is-open="true" data-uib-datepicker-popup="dd/MM/yyyy" date-only  datepicker-append-to-body=true ng-model="row.entity.dateJoined" readonly="readonly" style="width:100%;"/>'},{field:"dateOfBirth",displayName:"Date of joining",type:"date",cellFilter:'date:"dd/MM/yyyy"',width:200,editableCellTemplate:'<input type="text" class="datepicking" data-is-open="true" data-uib-datepicker-popup="dd/MM/yyyy" date-only  datepicker-append-to-body=true ng-model="row.entity.dateOfBirth" readonly="readonly" style="width:100%;"/>'},{field:"gender",displayName:"Gender",width:200},{field:"email",displayName:"Email",width:200},{field:"department",displayName:"Department",width:200},{field:"jobTitle",displayName:"Job Title",width:200},{field:"secondaryJobTitle",displayName:"Secondary Job Title",width:200},{field:"location",displayName:"Location",width:200},{field:"maritalStatus",displayName:"Marital Status",width:200},{field:"fatherName",displayName:"FatherName",width:200},{field:"spouseName",displayName:"SpouseName",width:200},{field:"physicallyHandicapped",displayName:"Physically Handicapped",width:200},{field:"panNumber",displayName:"PAN Number",width:200},{field:"bankAccountNumber",displayName:"Bank Account Number",width:200},{field:"iFSCode",displayName:"IFSCode",width:200},{field:"bankAccountType",displayName:"Bank Account Type",width:200},{field:"bankName",displayName:"Bank Name",width:200},{field:"bankBranchName",displayName:"Bank Branch Name",width:200},{field:"salaryPaymentMode",displayName:"Salary Payment Mode",width:200},{field:"nameOnBankAccount",displayName:"Name On Bank Account",width:200},{field:"pFEligible",displayName:"PF Eligible"},{field:"pFNumber",displayName:"PF Number"},{field:"pFScheme",displayName:"PF Scheme"},{field:"PpFJoiningDate",displayName:"PF Joining Date"},{field:"eSIEligible",displayName:"ESI Eligible"},{field:"eSINumber",displayName:"ESI Number"},{field:"status",displayName:"Status",enableCellEdit:!1}],e.vm.users=t,e.userGridOptions.data=e.vm.users,e.vm.importSource=u.ExcelSheet,e.$apply(),e.submitted=!1,e.allSelected=!0},e.importUsers=function(){if(e.vm.userImport.$valid)if(e.vm.selectedItems=e.gridApi.selection.getSelectedRows(),0!=e.vm.selectedItems.length){var t=!0;angular.forEach(e.vm.selectedItems,function(i,n){return e.isEmployeeNumberEditable(i.dateOfJoining)||(i.employeeNumber=null),e.isEmployeeNumberEditable(i.dateOfJoining)&&(o=i.employeeNumber,!/^\d+$/.test(o))?(i.status="Invalid Employee Number",void(t=!1)):e.isEmployeeNumberEditable(i.dateOfJoining)&&e.vm.empNumberSettings.allowManualEntry&&e.vm.empNumberSettings.autoGenerateStartWith<=i.employeeNumber?(i.status="Number should be less than"+e.vm.empNumberSettings.autoGenerateStartWith,void(t=!1)):(r=i.email,/^(([^<>()\[\]\\.,;:\s@\"]+(\.[^<>()\[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(r)?""==i.dateOfJoining||null==i.dateOfJoining?(i.status="Invalid date of joining",void(t=!1)):""==i.firstName||null==i.firstName?(i.status="First name required",void(t=!1)):""==i.lastName||null==i.lastName?(i.status="Last name required",void(t=!1)):void 0:(i.status="Invalid email",void(t=!1)));var o,r}),t?h.save({id:e.vm.selectedLocation.id,action:"importexcelusers"},e.vm.selectedItems,function(e){f(e)},function(e){s.error("An error occurred while importing users.")}):s.information("Please enter valid data in selected records.")}else s.information("Please select the employees you want to import.");else e.submitted=!0},e.cancel=function(){p.path("/employees")},e.loadOffice365Users=function(){s.success("Loading Users from Office 365."),h.get({action:"o365"},function(t){s.success("Users Loaded Successfully."),angular.forEach(t.value,function(t){e.vm.users.push(new function(e){this.firstName=e.givenName,this.lastName=e.surname,this.email=e.userPrincipalName,this.displayName=e.displayName}(t))}),e.userGridOptions.columnDefs=[{field:"firstName",displayName:"First Name"},{field:"lastName",displayName:"Last Name"},{field:"displayName",displayName:"Display Name"},{field:"email",displayName:"Email"}],e.vm.selectionSection=!1,e.vm.excelUsersSection=!0,e.vm.importSource=u.Office365,e.$apply()},function(e){s.error("An error occurred while loading users.")})},e.importOffice365Users=function(){h.save({id:e.vm.selectedLocation.id,action:"importoffice365users"},e.userGridOptions.selectedItems,function(e){f(e)},function(e){s.error("An error occurred while importing users.")})}}]),appRoot.controller("ExcelImportLeavesController",["$scope","$resource","$stateParams","$filter","AppSettings","NotificationService","EmployeeServices","LookupServices","TimeDuration","LeaveSettingsService","SharedModel","$uibModalInstance",function(e,t,i,n,o,r,a,s,l,c,p,u){e.vm={},e.vm.hideFileUpload=!1,e.vm.importComplete=!1,e.vm.importType="leaveSummary",e.vm.steps=[],e.vm.modalTitle="Import Leave Consumed",e.vm.steps.push(new p.Step({index:1,title:"Upload Excel File",isvalid:!1,template:"excel-leaves-import"})),e.vm.steps.push(new p.Step({index:2,title:"Import",isvalid:!1,template:"leave-summary-import"}));e.vm.currentStep=e.vm.steps[0],c.getLeaveTypes().then(function(t){e.vm.leaveTypes=t}),e.closeModal=function(){u.dismiss(!0)},e.onFileUploaded=function(t){t.exception?r.error(t.exception.Message):c.getLeaveSummaryInvalidTypes().then(function(t){t.length>0?(e.vm.hideFileUpload=!0,e.vm.unIdentifiedLeaveTypes=t):e.vm.nextStep()},function(e){r.error("An error occurred while processing excel file.")})},e.vm.nextStep=function(){e.vm.currentStep.valid=!0,e.vm.currentStep=e.vm.steps.find(function(t){return t.index==e.vm.currentStep.index+1})},e.abondonAndAddLeaveType=function(){$location.path("/settings/leaves/types")},e.importLeaveBalances=function(){c.importLeaveBalances().then(function(t){e.vm.importComplete=!0})}}]),appRoot.controller("ExcelImportEmployeeController",["$scope","$rootScope","$resource","$stateParams","$state","$timeout","GetStartedSteps","$filter","$location","$uibModalInstance","SharedModel","UserImportSource","AppSettings","AppContext","LookupServices","NotificationService","EmployeeServices","EmployeeImportIdentifier","DashboardServices","ImportExcelType","BusinessUnitService","FileDownloadService",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S,C,w){e.vm={},e.vm.steps=[],e.vm.currentSortingElement={},e.vm.unIdentifiedLocations=[],e.vm.unIdentifiedBusinessUnits=[],e.vm.employeeImportIdentifier=g,e.vm.hideFileUpload=!1,e.vm.uploadedUsers=[],e.vm.modalTitle="Import Employees",e.model={},e.vm.myPublicProfile=m.myPublicProfile,e.vm.steps.push(new p.Step({index:1,title:"Upload Excel File",isvalid:!1,template:"employee-excel-upload"})),e.vm.steps.push(new p.Step({index:2,title:"Data Validations",isvalid:!1,template:"matching-employee-details"})),e.vm.steps.push(new p.Step({index:3,title:"Preview",isvalid:!1,template:"employee-details-preview"}));m.isOrgSetupComplete||v.updateOnBoardStep(a.ImportEmployees.id).then(function(e){console.log(e)}),e.model=new function(){this.employeeImportList=[],this.employeeImportIdentifier=null,this.autoGenerateEmployeeNumber=!1},e.vm.currentStep=e.vm.steps[0],y.lookup.query({id:"locations"},function(t){e.vm.locations=t}),C.getAllBusinessUnits().then(function(t){e.vm.businessUnits=t}),e.userGridOptions=angular.copy(d.gridSettings),e.userGridOptions.enableHorizontalScrollbar=1,e.userGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",width:150},{field:"displayName",displayName:"Display Name",width:200},{field:"firstName",displayName:"First Name",width:200},{field:"middleName",displayName:"Middle Name",width:200},{field:"lastName",displayName:"Last Name",width:200},{field:"dateJoined",displayName:"Date of joining",type:"date",cellFilter:'date:"mediumDate"',width:200},{field:"dateOfBirth",displayName:"Date of Birth",type:"date",cellFilter:'date:"mediumDate"',width:200},{field:"gender",displayName:"Gender",width:200},{field:"email",displayName:"Email",width:200},{field:"department",displayName:"Department",width:200},{field:"businessUnit",displayName:"Business Unit",width:200},{field:"jobTitle",displayName:"Job Title",width:200},{field:"secondaryJobTitle",displayName:"Secondary Job Title",width:200},{field:"location",displayName:"Location",width:200},{field:"mobileNumber",displayName:"Mobile Number",width:200},{field:"workNumber",displayName:"Work Number",width:200},{field:"residenceNumber",displayName:"Residence Number",width:200},{field:"personalEmail",displayName:"Personal Email",width:200},{field:"skypeId",displayName:"Skype Id",width:200},{field:"maritalStatus",displayName:"Marital Status",width:200},{field:"marriageDate",displayName:"Marriage Date",type:"date",cellFilter:'date:"mediumDate"',width:200},{field:"fatherName",displayName:"FatherName",width:200},{field:"motherName",displayName:"Mother Name",width:200},{field:"spouseName",displayName:"SpouseName",width:200},{field:"physicallyHandicapped",displayName:"Physically Handicapped",type:"boolean",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.physicallyHandicapped != null && row.entity.physicallyHandicapped">Yes</span><span data-ng-if="row.entity.physicallyHandicapped != null && !row.entity.physicallyHandicapped">No</span></div',width:200},{field:"bloodGroup",displayName:"Blood Group",width:200},{field:"panAvailable",displayName:"PAN Available",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.panAvailable != null && row.entity.panAvailable">Yes</span><span data-ng-if="row.entity.panAvailable != null && !row.entity.panAvailable">No</span></div',width:200},{field:"panNumber",displayName:"PAN Number",width:200},{field:"dateOfBirthOnPan",displayName:"Date of birth on pan",type:"date",cellFilter:'date:"mediumDate"',width:200},{field:"nameOnPan",displayName:"Name on pan",width:200},{field:"fatherNameOnPan",displayName:"Father name on pan",width:200},{field:"salaryPaymentMode",displayName:"Salary Payment Mode",width:200},{field:"bankName",displayName:"Bank Name",width:200},{field:"ifsCode",displayName:"IFSCode",width:200},{field:"bankAccountNumber",displayName:"Bank Account Number",width:200},{field:"nameOnBankAccount",displayName:"Name On Bank Account",width:200},{field:"pfEstablishmentCode",displayName:"PF Establishment Id",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.pfEstablishmentCode}}</div>',width:200},{field:"pfDetailsAvailable",displayName:"pf Details Available",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.pfDetailsAvailable != null && row.entity.pfDetailsAvailable">Yes</span><span data-ng-if="row.entity.pfDetailsAvailable != null && !row.entity.pfDetailsAvailable">No</span></div',width:200},{field:"pfNumber",displayName:"PF Number",width:200},{field:"pfJoiningDate",displayName:"PF Joining Date",type:"date",cellFilter:'date:"mediumDate"',width:200},{field:"nameOnPFAccount",displayName:"Name On PF Account",width:200},{field:"uan",displayName:"UAN",width:200},{field:"esiEligible",displayName:"ESI Eligible",type:"boolean",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.esiEligible != null && row.entity.esiEligible">Yes</span><span data-ng-if="row.entity.esiEligible != null && !row.entity.esiEligible">No</span></div',width:200},{field:"employerESINumber",displayName:"Employer ESI Number",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.employerESINumber}}</div>',width:200},{field:"esiNumber",displayName:"ESI Number",width:200},{field:"aadhaarNumber",displayName:"Aadhaar Number",width:200},{field:"nameOnAadhaar",displayName:"Name On Aadhaar",width:200},{field:"aadhaarEnrollmentNumber",displayName:"Aadhaar Enrollment Number",width:200}],e.userGridOptions.data="vm.uploadedUsers",e.closeModal=function(){c.dismiss(!0)},e.completeImport=function(){c.close()},e.vm.sortTableData=function(t){e.vm.currentSortingElement=t,e.vm.sortType=t.name,t.sortReverse=!t.sortReverse,e.vm.sortReverse=t.sortReverse},e.onFileUploaded=function(t){t.exception?h.error(t.exception.Message):f.getInvalidLocationsAndBusinessUnitsList(S.EmployeesPersonalDetails.id).then(function(t){t.invalidLocations.length>0||t.invalidBusinessUnits.length>0?(e.vm.hideFileUpload=!0,e.vm.unIdentifiedLocations=t.invalidLocations,e.vm.unIdentifiedBusinessUnits=t.invalidBusinessUnits):(f.getMatchingRecords(S.EmployeesPersonalDetails.id).then(function(t){e.vm.matchedEmployeeNumberCount=t.matchedEmployeeNumberCount,e.vm.matchedEmailCount=t.matchedEmailCount},function(e){h.error("An error occurred while getting existing records.")}),e.model.autoGenerateEmployeeNumber=!1,e.saveEmployeeNumber())},function(e){h.error("An error occurred while processing excel file.")})},e.vm.nextStep=function(){e.vm.currentStep.valid=!0,e.vm.currentStep=e.vm.steps.find(function(t){return t.index==e.vm.currentStep.index+1})},e.saveEmployeeNumber=function(){f.getImportDataValidations(S.EmployeesPersonalDetails.id,e.model).then(function(t){e.vm.showDataValidations=t.result.length>0,e.vm.validationErrors=t.result,e.vm.nextStep()},function(e){})},e.continueAndPreview=function(){f.getImportedUsers(S.EmployeesPersonalDetails.id).then(function(t){e.vm.uploadedUsers=t,e.vm.nextStep()},function(e){})},e.importUsers=function(){f.importExcelEmployees(S.EmployeesPersonalDetails.id,e.model).then(function(i){e.results=i;var n=i.successful.find(function(t){return t.employeeNumber==e.vm.myPublicProfile.employeeNumber});if(n){var o={id:e.vm.myPublicProfile.id,displayName:n.employeeName};t.$broadcast("displayNameUpdated",{id:e.vm.myPublicProfile.id,userProfile:o})}h.success(e.results.successful.length+" Out Of "+(parseInt(e.results.successful.length)+parseInt(e.results.failures.length)).toString()+" Employees Imported.")},function(e){h.error("An error occurred while importing.")})},e.abondonAndAddLocation=function(){e.closeModal(),r(function(){var e=-1==o.current.name.indexOf("setup")?"/settings/company/locations":"/organization";l.path(e)},50)},e.abondonAndAddBusinessUnit=function(){e.closeModal(),r(function(){var e=-1==o.current.name.indexOf("setup")?"/settings/company/businessunits":"/organization";l.path(e)},50)},e.downloadImportSample=function(){w.downloadFile("/api/excel/template/employeeimport")}}]),appRoot.controller("ImportLeavesCarryoverBalanceController",["$scope","$resource","$stateParams","$filter","AppSettings","NotificationService","EmployeeServices","LookupServices","TimeDuration","LeaveSettingsService","SharedModel","$uibModalInstance",function(e,t,i,n,o,r,a,s,l,c,p,u){e.vm={},e.vm.hideFileUpload=!1,e.vm.importComplete=!1,e.vm.importType="carryoverBalance",e.vm.steps=[],e.vm.steps.push(new p.Step({index:1,title:"Upload Excel File",isvalid:!1,template:"excel-leaves-import"})),e.vm.steps.push(new p.Step({index:2,title:"Import",isvalid:!1,template:"leave-summary-import"}));e.vm.currentStep=e.vm.steps[0],c.getLeaveTypes().then(function(t){e.vm.leaveTypes=t}),e.closeModal=function(){u.dismiss(!0)},e.onFileUploaded=function(t){t.exception?r.error(t.exception.Message):c.getCarryoverInvalidTypes().then(function(t){t.length>0?(e.vm.hideFileUpload=!0,e.vm.unIdentifiedLeaveTypes=t):e.vm.nextStep()},function(e){r.error("An error occurred while processing excel file.")})},e.vm.nextStep=function(){e.vm.currentStep.valid=!0,e.vm.currentStep=e.vm.steps.find(function(t){return t.index==e.vm.currentStep.index+1})},e.abondonAndAddLeaveType=function(){$location.path("/settings/leaves/types")},e.importLeaveBalances=function(){c.importCarryoverLeaveBalances().then(function(t){e.vm.importComplete=!0})}}]),appRoot.controller("ExcelImportJobDetailsController",["$scope","$rootScope","$resource","$stateParams","$state","GetStartedSteps","$filter","$location","$uibModalInstance","$timeout","SharedModel","UserImportSource","AppSettings","AppContext","LookupServices","NotificationService","EmployeeServices","EmployeeImportIdentifier","DashboardServices","DepartmentSettingsService","FileDownloadService",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S,C){e.vm={},e.vm.steps=[],e.vm.currentSortingElement={},e.vm.unIdentifiedLocations=[],e.vm.unIdentifiedDepartments=[],e.vm.employeeImportIdentifier=g,e.vm.hideFileUpload=!1,e.vm.uploadedDetails=[],e.vm.modalTitle="Import Job Details",e.model={},e.vm.myPublicProfile=m.myPublicProfile,e.vm.steps.push(new p.Step({index:1,title:"Upload Excel File",isvalid:!1,template:"jobdetails-excel-upload"})),e.vm.steps.push(new p.Step({index:2,title:"Data Validations",isvalid:!1,template:"job-validation-details"})),e.vm.steps.push(new p.Step({index:3,title:"Preview",isvalid:!1,template:"job-details-preview"}));var w=function(){f.getJobDataImportValidations(e.model).then(function(t){t.result.length>0?e.vm.validationErrors=t.result:f.getImportedJobDetails().then(function(t){e.vm.uploadedDetails=t,e.vm.nextStep()},function(e){})},function(e){})};m.isOrgSetupComplete||v.updateOnBoardStep(r.ImportEmployees.id).then(function(e){console.log(e)}),e.model=new function(){this.employeeImportList=[]},e.vm.currentStep=e.vm.steps[0],y.lookup.query({id:"locations"},function(t){e.vm.locations=t}),S.getAllDepartments().then(function(t){e.vm.departments=t}),e.jobDetailsGridOptions=angular.copy(d.gridSettings),e.jobDetailsGridOptions.enableHorizontalScrollbar=1,e.jobDetailsGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",width:150},{field:"employeeName",displayName:"Employee Name",width:200},{field:"location",displayName:"Location",width:200},{field:"businessUnit",displayName:"BusinessUnit",width:200},{field:"department",displayName:"Department",width:200},{field:"jobTitle",displayName:"Job Title",width:200},{field:"secondaryJobTitle",displayName:"Secondary Job Title",width:200},{field:"dateJoined",displayName:"Date of joining",type:"date",cellFilter:'date:"mediumDate"',width:200},{field:"reportingManager",displayName:"Reporting Manager",width:200},{field:"probationEndDate",displayName:"Probation End Date",type:"date",cellFilter:'date:"mediumDate"',width:200},{field:"leavePlan",displayName:"Leave Plan",width:200},{field:"attendanceNumber",displayName:"Attendance Number",width:200},{field:"timeType",displayName:"Time Type",width:200},{field:"workerType",displayName:"Worker Type",width:200},{field:"weeklyOffPolicy",displayName:"Weekly Off Policy",width:200},{field:"shiftType",displayName:"Shift Type",width:200},{field:"attendanceCaptureScheme",displayName:"Attendance Capture Scheme",width:200},{field:"attendanceTrackingPolicy",displayName:"Attendance Tracking Policy",width:200},{field:"expensePolicy",displayName:"Expense Policy",width:200},{field:"holidayList",displayName:"Holiday List",width:200},{field:"costCenter",displayName:"Cost Center",width:200},{field:"band",displayName:"Band",width:200},{field:"payGrade",displayName:"Pay Grade",width:200},{field:"noticePeriod",displayName:"Notice Period",width:200}],e.jobDetailsGridOptions.data="vm.uploadedDetails",e.closeModal=function(){l.dismiss(!0)},e.completeImport=function(){l.close()},e.vm.sortTableData=function(t){e.vm.currentSortingElement=t,e.vm.sortType=t.name,t.sortReverse=!t.sortReverse,e.vm.sortReverse=t.sortReverse},e.onFileUploaded=function(t){t.exception?h.error(t.exception.Message):f.getInvalidJobLocationsAndDepartmentsList().then(function(t){t.invalidLocations.length>0||t.invalidDepartments.length>0?(e.vm.hideFileUpload=!0,e.vm.unIdentifiedLocations=t.invalidLocations,e.vm.unIdentifiedDepartments=t.invalidDepartments):(e.vm.nextStep(),w())},function(e){h.error("An error occurred while processing excel file.")})},e.vm.nextStep=function(){e.vm.currentStep.valid=!0,e.vm.currentStep=e.vm.steps.find(function(t){return t.index==e.vm.currentStep.index+1})},e.importJobDetails=function(){f.importExcelJobDetails(e.model).then(function(t){e.results=t,h.success(e.results.successful.length+" Out Of "+(parseInt(e.results.successful.length)+parseInt(e.results.failures.length)).toString()+" Employees Imported.")},function(e){h.error("An error occurred while importing.")})},e.abondonAndAddLocation=function(){e.closeModal(),c(function(){var e=-1==o.current.name.indexOf("setup")?"/settings/company/locations":"/organization";s.path(e)},50)},e.abondonAndAddDepartment=function(){e.closeModal(),c(function(){var e=-1==o.current.name.indexOf("setup")?"/settings/company/department":"/organization";s.path(e)},50)},e.downloadImportSample=function(){C.downloadFile("/api/excel/template/jobimport")}}]),appRoot.controller("ExcelImportProjectsController",["$scope","$uibModalInstance","SharedModel","AppSettings","NotificationService","TimesheetServices","FileDownloadService",function(e,t,i,n,o,r,a){e.vm={},e.vm.steps=[],e.vm.currentSortingElement={},e.vm.hideFileUpload=!1,e.vm.uploadedDetails=[],e.vm.modalTitle="Import Clients and Projects",e.vm.steps.push(new i.Step({index:1,title:"Upload Excel File",isvalid:!1,template:"projects-file-upload"})),e.vm.steps.push(new i.Step({index:2,title:"Preview",isvalid:!1,template:"project-details-preview"}));var s=function(){r.getProjectImportValidations().then(function(t){t.result.length>0?e.vm.validationErrors=t.result:r.getImportedProjects().then(function(t){e.vm.uploadedProjects=t,e.vm.nextStep()},function(e){})},function(e){})};e.vm.currentStep=e.vm.steps[0],e.projectsGridOptions=angular.copy(n.gridSettings),e.projectsGridOptions.enableHorizontalScrollbar=1,e.projectsGridOptions.columnDefs=[{field:"clientCode",displayName:"Client Code"},{field:"clientName",displayName:"Client Name"},{field:"projectCode",displayName:"Project Code"},{field:"projectName",displayName:"Project Name"},{field:"startDate",displayName:"Start Date",type:"date",cellFilter:'date:"mediumDate"'},{field:"endDate",displayName:"End Date",type:"date",cellFilter:'date:"mediumDate"'},{field:"billingType",displayName:"Billing Type"},{field:"allowNonBillableEntries",displayName:"Allow Non Billable Entries",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.getCellValue(row,col) ? "Yes" : "No"}}</div>'},{field:"assignToAll",displayName:"Assign To All Employees",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.getCellValue(row,col) ? "Yes" : "No"}}</div>'},{field:"requireComments",displayName:"Require Comments",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.getCellValue(row,col) ? "Yes" : "No"}}</div>'},{field:"trackTimeForTasks",displayName:"Track Time For Tasks",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.getCellValue(row,col) ? "Yes" : "No"}}</div>'},{field:"canLinkToExpense",displayName:"Can Link Project To Expense",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.getCellValue(row,col) ? "Yes" : "No"}}</div>'}],e.projectsGridOptions.data="vm.uploadedProjects",e.closeModal=function(){t.dismiss(!0)},e.completeImport=function(){t.close()},e.vm.sortTableData=function(t){e.vm.currentSortingElement=t,e.vm.sortType=t.name,t.sortReverse=!t.sortReverse,e.vm.sortReverse=t.sortReverse},e.onFileUploaded=function(t){t.exception?o.error(t.exception.Message):(e.vm.hideFileUpload=!0,s())},e.vm.nextStep=function(){e.vm.currentStep.valid=!0,e.vm.currentStep=e.vm.steps.find(function(t){return t.index==e.vm.currentStep.index+1})},e.importProjects=function(){r.importExcelProjects().then(function(t){e.results=t,o.success(e.results.successful.length+" Out Of "+(parseInt(e.results.successful.length)+parseInt(e.results.failures.length)).toString()+" Projects Imported.")},function(e){o.error("An error occurred while importing projects.")})},e.downloadImportSample=function(){a.downloadFile("/api/timesheet/excel/template/projectimport")}}]),appRoot.controller("ExcelImportProjectTasksController",["$scope","$uibModalInstance","SharedModel","AppSettings","NotificationService","TimesheetServices","FileDownloadService",function(e,t,i,n,o,r,a){e.vm={},e.vm.steps=[],e.vm.currentSortingElement={},e.vm.hideFileUpload=!1,e.vm.uploadedDetails=[],e.vm.modalTitle="Import Project Tasks",e.vm.steps.push(new i.Step({index:1,title:"Upload Excel File",isvalid:!1,template:"project-tasks-file-upload"})),e.vm.steps.push(new i.Step({index:2,title:"Preview",isvalid:!1,template:"task-details-preview"}));var s=function(){r.getProjectTaskImportValidations().then(function(t){t.result.length>0?e.vm.validationErrors=t.result:r.getImportedProjectTasks().then(function(t){e.vm.uploadedProjectTasks=t,e.vm.nextStep()},function(e){})},function(e){})};e.vm.currentStep=e.vm.steps[0],e.projectTasksGridOptions=angular.copy(n.gridSettings),e.projectTasksGridOptions.enableHorizontalScrollbar=1,e.projectTasksGridOptions.columnDefs=[{field:"clientCode",displayName:"Client Code"},{field:"clientName",displayName:"Client Name"},{field:"projectCode",displayName:"Project Code"},{field:"projectName",displayName:"Project Name"},{field:"taskName",displayName:"Task Name"},{field:"startDate",displayName:"Start Date",type:"date",cellFilter:'date:"mediumDate"'},{field:"endDate",displayName:"End Date",type:"date",cellFilter:'date:"mediumDate"'}],e.projectTasksGridOptions.data="vm.uploadedProjectTasks",e.closeModal=function(){t.dismiss()},e.completeImport=function(){t.close(!0)},e.vm.sortTableData=function(t){e.vm.currentSortingElement=t,e.vm.sortType=t.name,t.sortReverse=!t.sortReverse,e.vm.sortReverse=t.sortReverse},e.onFileUploaded=function(t){t.exception?o.error(t.exception.Message):(e.vm.hideFileUpload=!0,s())},e.vm.nextStep=function(){e.vm.currentStep.valid=!0,e.vm.currentStep=e.vm.steps.find(function(t){return t.index==e.vm.currentStep.index+1})},e.importProjectTasks=function(){r.importExcelProjectTasks().then(function(t){e.results=t,o.success(e.results.successful.length+" Out Of "+(parseInt(e.results.successful.length)+parseInt(e.results.failures.length)).toString()+" Project tasks Imported.")},function(e){o.error("An error occurred while importing project tasks.")})},e.downloadImportSample=function(){a.downloadFile("/api/timesheet/excel/template/projecttaskimport")}}]),appRoot.controller("ExcelImportProjectResourcesController",["$scope","$uibModalInstance","SharedModel","AppSettings","NotificationService","TimesheetServices","FileDownloadService",function(e,t,i,n,o,r,a){e.vm={},e.vm.steps=[],e.vm.currentSortingElement={},e.vm.hideFileUpload=!1,e.vm.uploadedDetails=[],e.vm.modalTitle="Import Project Resources",e.vm.steps.push(new i.Step({index:1,title:"Upload Excel File",isvalid:!1,template:"project-resources-file-upload"})),e.vm.steps.push(new i.Step({index:2,title:"Preview",isvalid:!1,template:"resource-details-preview"}));var s=function(){r.getProjectResourceImportValidations().then(function(t){t.result.length>0?e.vm.validationErrors=t.result:r.getImportedProjectResources().then(function(t){e.vm.uploadedProjectResources=t,e.vm.nextStep()},function(e){})},function(e){})};e.vm.currentStep=e.vm.steps[0],e.projectResourcesGridOptions=angular.copy(n.gridSettings),e.projectResourcesGridOptions.enableHorizontalScrollbar=1,e.projectResourcesGridOptions.columnDefs=[{field:"clientCode",displayName:"Client Code"},{field:"projectCode",displayName:"Project Code"},{field:"employeeNumber",displayName:"Employee Number"},{field:"billingRole",displayName:"Billing Role"},{field:"billingRate",displayName:"Billing Rate"},{field:"startDate",displayName:"Start Date",type:"date",cellFilter:'date:"mediumDate"'},{field:"endDate",displayName:"End Date",type:"date",cellFilter:'date:"mediumDate"'}],e.projectResourcesGridOptions.data="vm.uploadedProjectResources",e.closeModal=function(){t.dismiss()},e.completeImport=function(){t.close(!0)},e.vm.sortTableData=function(t){e.vm.currentSortingElement=t,e.vm.sortType=t.name,t.sortReverse=!t.sortReverse,e.vm.sortReverse=t.sortReverse},e.onFileUploaded=function(t){t.exception?o.error(t.exception.Message):(e.vm.hideFileUpload=!0,s())},e.vm.nextStep=function(){e.vm.currentStep.valid=!0,e.vm.currentStep=e.vm.steps.find(function(t){return t.index==e.vm.currentStep.index+1})},e.importProjectResources=function(){r.importExcelProjectResources().then(function(t){e.results=t,o.success(e.results.successful.length+" Out Of "+(parseInt(e.results.successful.length)+parseInt(e.results.failures.length)).toString()+" Project resources Imported.")},function(e){o.error("An error occurred while importing project resources.")})},e.downloadImportSample=function(){a.downloadFile("/api/timesheet/excel/template/projectresourceimport")}}]),appRoot.controller("ExcelImportTasksInRepositoriesController",["$scope","$uibModalInstance","SharedModel","AppSettings","NotificationService","TimesheetServices","FileDownloadService",function(e,t,i,n,o,r,a){e.vm={},e.vm.steps=[],e.vm.currentSortingElement={},e.vm.hideFileUpload=!1,e.vm.uploadedDetails=[],e.vm.modalTitle="Import Tasks In Repositories",e.vm.steps.push(new i.Step({index:1,title:"Upload Excel File",isvalid:!1,template:"tasks-repository-file-upload"})),e.vm.steps.push(new i.Step({index:2,title:"Preview",isvalid:!1,template:"repository-tasks-preview"}));var s=function(){r.getRepositoryTasksImportValidations().then(function(t){t.result.length>0?e.vm.validationErrors=t.result:r.getImportedRepositoryTasks().then(function(t){e.vm.uploadedRepositoryTasks=t,e.vm.nextStep()},function(e){})},function(e){})};e.vm.currentStep=e.vm.steps[0],e.repositoryTasksGridOptions=angular.copy(n.gridSettings),e.repositoryTasksGridOptions.enableHorizontalScrollbar=1,e.repositoryTasksGridOptions.columnDefs=[{field:"taskName",displayName:"Task Name"}],e.repositoryTasksGridOptions.data="vm.uploadedRepositoryTasks",e.closeModal=function(){t.dismiss()},e.completeImport=function(){t.close(!0)},e.vm.sortTableData=function(t){e.vm.currentSortingElement=t,e.vm.sortType=t.name,t.sortReverse=!t.sortReverse,e.vm.sortReverse=t.sortReverse},e.onFileUploaded=function(t){t.exception?o.error(t.exception.Message):(e.vm.hideFileUpload=!0,s())},e.vm.nextStep=function(){e.vm.currentStep.valid=!0,e.vm.currentStep=e.vm.steps.find(function(t){return t.index==e.vm.currentStep.index+1})},e.importRepositoryTasks=function(){r.importExcelRepositoryTasks().then(function(t){e.results=t,o.success(e.results.successful.length+" Out Of "+(parseInt(e.results.successful.length)+parseInt(e.results.failures.length)).toString()+" Repository Tasks Imported.")},function(e){o.error("Error occured while importing repository tasks.")})},e.downloadImportSample=function(){a.downloadFile("/api/timesheet/excel/template/repositorytasksimport")}}]),appRoot.factory("DashboardServices",["$resource",function(e){return{dashboard:e("/api/dashboard/:action/:id",{action:"@action",id:"@id"},{update:{method:"PUT"}}),inbox:e("/api/inbox/:action/:id",{action:"@action",id:"@id"},{update:{method:"PUT"}}),productUpdate:e("/api/productupdates/:action/:id",{action:"@action",id:"@id"},{update:{method:"PUT"}}),getNewlyJoinedEmployees:function(){return this.dashboard.query({action:"newlyjoined"}).$promise},getHolidays:function(){return this.dashboard.query({action:"holidays"}).$promise},getUpcomingBirthdays:function(){return this.dashboard.query({action:"birthdays"}).$promise},getWorkAnniversaryEmployees:function(){return this.dashboard.query({action:"anniversaries"}).$promise},getDashboardAlerts:function(){return this.dashboard.query({action:"alerts"}).$promise},dismissAlert:function(e){return this.dashboard.update({action:"alert",id:e.id},e).$promise},onBoardGetstarted:function(){return this.dashboard.get({action:"onboard/getstarted"}).$promise},updateOnBoardStep:function(e){return this.dashboard.update({action:"onboard/getstarted",id:e}).$promise},CompleteOnBoardSetup:function(){return this.dashboard.update({action:"onboard/onboardstatus"}).$promise},getTeamLeaves:function(){return this.dashboard.query({action:"teamleaves"}).$promise},getTeamWorkingRemotely:function(){return this.dashboard.query({action:"teamworkingremotely"}).$promise},checkAndUpdateOnboardStatus:function(){return this.dashboard.update({action:"checkandupdateonboardstatus"}).$promise},getPendingInboxCount:function(){return this.inbox.get({action:"pendingapprovalscount"}).$promise},getLastProductUpdatePublishDate:function(){return this.productUpdate.get({action:"lastupdatetime"}).$promise}}}]),appRoot.constant("moment",moment),appRoot.controller("DashboardController",["$scope","DashboardServices","$rootScope","$location","$q","TaskService","AppContext","OnboardingSetup","$cookies","moment",function(e,t,i,n,o,r,a,s,l,c){e.vm={},e.upcomingBirthdays=[],e.workAnniversaryEmployees=[],e.newEmployees=[],e.vm.isOrgSetupComplete=a.isOrgSetupComplete,e.OnboardingSetup=s,e.AppContext=a,e.inboxCount=0,e.isNewProductUpdate=!1,e.checkForProductUpdate=function(i){i&&t.getLastProductUpdatePublishDate().then(function(t){var i=l.get("lastProductUpdatesvisitDate");e.isNewProductUpdate=new c.utc(t.lastPublishedOn).isAfter(i?new Date(i):new Date("2019-01-1"))})},function(){}(),e.AppContext.orgFeatures().includes("INBOX")&&t.getPendingInboxCount().then(function(t){e.inboxCount=t.attendanceAdjustmentRequestCount+t.attendanceRemoteClockInRequestCount+t.attendanceWorkingRemotelyRequestCount+t.compoffRequestCount+t.exitRequestCount+t.expenseClaimRequestCount+t.leaveRequestCount+t.loanRequestCount+t.profileApprovalRequestCount+t.exitTaskRequestsCount+t.onboardingTaskRequestsCount+t.attendancePartialDayRequestCount})}]),appRoot.controller("ExcelImportBasicEmployeeDetails",["$scope","$rootScope","$resource","$stateParams","$state","GetStartedSteps","$filter","$location","$uibModalInstance","$timeout","SharedModel","UserImportSource","AppSettings","AppContext","LookupServices","NotificationService","EmployeeServices","EmployeeImportIdentifier","DashboardServices","ImportExcelType","FileDownloadService",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S,C){e.vm={},e.vm.steps=[],e.vm.currentSortingElement={},e.vm.unIdentifiedLocations=[],e.vm.employeeImportIdentifier=g,e.vm.hideFileUpload=!1,e.vm.uploadedUsers=[],e.vm.modalTitle="Import Employees Basic Information",e.model={},e.vm.myPublicProfile=m.myPublicProfile,e.vm.steps.push(new p.Step({index:1,title:"Upload Excel File",isvalid:!1,template:"onboard-basic-employee-details-import"})),e.vm.steps.push(new p.Step({index:2,title:"Data Validations",isvalid:!1,template:"matching-basic-employee-details"})),e.vm.steps.push(new p.Step({index:3,title:"Preview",isvalid:!1,template:"employee-basic-details-preview"}));m.isOrgSetupComplete||v.updateOnBoardStep(r.ImportEmployees.id).then(function(e){console.log(e)}),e.model=new function(){this.employeeImportList=[],this.employeeImportIdentifier=null,this.autoGenerateEmployeeNumber=!1},e.vm.currentStep=e.vm.steps[0],y.lookup.query({id:"locations"},function(t){e.vm.locations=t}),e.userGridOptions=angular.copy(d.gridSettings),e.userGridOptions.enableHorizontalScrollbar=1,e.userGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"displayName",displayName:"Display Name"},{field:"firstName",displayName:"First Name"},{field:"middleName",displayName:"Middle Name"},{field:"lastName",displayName:"Last Name"},{field:"dateJoined",displayName:"Date of joining",type:"date",cellFilter:'date:"mediumDate"'},{field:"dateOfBirth",displayName:"Date Of Birth",type:"date",cellFilter:'date:"mediumDate"'},{field:"email",displayName:"Email"},{field:"location",displayName:"Location"}],e.userGridOptions.data="vm.uploadedUsers",e.closeModal=function(){l.dismiss()},e.completeImport=function(){l.close(!0)},e.vm.sortTableData=function(t){e.vm.currentSortingElement=t,e.vm.sortType=t.name,t.sortReverse=!t.sortReverse,e.vm.sortReverse=t.sortReverse},e.onFileUploaded=function(t){t.exception?h.error(t.exception.Message):f.getInvalidLocationsForBasicImport().then(function(t){t.length>0?(e.vm.hideFileUpload=!0,e.vm.unIdentifiedLocations=t):(f.getBasicImportMatchingRecords().then(function(t){e.vm.matchedEmployeeNumberCount=t.matchedEmployeeNumberCount,e.vm.matchedEmailCount=t.matchedEmailCount},function(e){h.error("An error occurred while getting existing records.")}),e.model.autoGenerateEmployeeNumber=!1,e.saveEmployeeNumber())},function(e){h.error("An error occurred while fetching locations.")})},e.vm.nextStep=function(){e.vm.currentStep.valid=!0,e.vm.currentStep=e.vm.steps.find(function(t){return t.index==e.vm.currentStep.index+1})},e.saveEmployeeNumber=function(){f.getBasicImportDataValidations(e.model).then(function(t){e.vm.showDataValidations=t.result.length>0,e.vm.validationErrors=t.result,e.vm.nextStep()},function(e){})},e.continueAndPreview=function(){f.getImportedBasicEmployeeDetails().then(function(t){e.vm.uploadedUsers=t,e.vm.nextStep()},function(e){})},e.importUsers=function(){f.importExcelEmployees(S.EmployeeBasicDetails.id,e.model).then(function(i){e.results=i;var n=i.successful.find(function(t){return t.employeeNumber==e.vm.myPublicProfile.employeeNumber});if(n){var o={id:e.vm.myPublicProfile.id,displayName:n.employeeName};t.$broadcast("displayNameUpdated",{id:e.vm.myPublicProfile.id,userProfile:o})}h.success(e.results.successful.length+" Out Of "+(parseInt(e.results.successful.length)+parseInt(e.results.failures.length)).toString()+" Employees Imported.")},function(e){h.error("An error occurred while importing.")})},e.abondonAndAddLocation=function(){e.closeModal(),c(function(){var e=-1==o.current.name.indexOf("setup")?"/settings/company/locations":"/organization";s.path(e)},50)},e.downloadImportSample=function(){C.downloadFile("/api/excel/template/employeebasicimport")}}]),appRoot.factory("WidgetServices",["$resource","$q",function(e,t){return{details:e("/api/employees/:action/",{action:"@action"}),myTime:e("/api/mytime/:action",{action:"@action"}),getTimesheetData:function(e){return this.myTime.get({action:"timesheetdata",fromDate:e}).$promise}}}]),appRoot.controller("GetStartedWidgetController",["$scope","$filter","AppContext","DashboardServices","GetStartedSteps","NotificationService",function(e,t,i,n,o,r){e.vm.getStartedSteps=o.getAll(),e.vm.wizard={};e.vm.getLink=function(t){return e.vm.getStartedSteps.find(function(e){return e.id==t}).link},e.vm.getCurrentStep=function(){var t=e.vm.wizard.steps.filter(function(e){return 0==e.isCompleted});return t.length>0?e.vm.wizard.steps.indexOf(t[0])+1:-1};n.onBoardGetstarted.then(function(t){e.vm.wizard=t;var o=e.vm.getCurrentStep();-1!=o||e.vm.isOrgSetupComplete||n.CompleteOnBoardSetup.then(function(t){r.success("You are done with setting up your organization."),e.vm.isOrgSetupComplete=!0,i.isOrgSetupComplete=!0}),e.vm.getStartedProgress=(o>0?o-1:e.vm.wizard.steps.length)/e.vm.wizard.steps.length*100+"%"})}]),appRoot.controller("InviteEmployeesWidgetController",["$scope","EmployeeServices","SystemRoleServices","SystemRoleTypes","DashboardServices","NotificationService",function(e,t,i,n,o,r){function a(e){this.email=e.email||"",this.roleId=e.roleId||0}e.model={},e.model.employees=[],e.vm.employeeRole={id:0,title:"Employee"},e.vm.systemRolesTypes=n.getAll(),e.isEmailValid=function(e){return/^(([^<>()\[\]\\.,;:\s@\"]+(\.[^<>()\[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(e)};var s=function(){e.model.employees=[],e.model.employees.push(new a({email:"",roleId:e.vm.employeeRole.id})),e.submitted=!1};e.addNew=function(){e.model.employees.push(new a({email:"",roleId:e.vm.employeeRole.id}))},e.inviteEmployees=function(){e.disableInvite=!0;var t=!0;e.model.employees.forEach(function(i){t=t&&e.isEmailValid(i.email)}),t?o.dashboard.save({action:"InviteEmployees"},e.model.employees,function(t){t.importedCount==e.model.employees.length?(r.success("Employees Invited Successfully."),s()):(t.listImportStatus.forEach(function(t){var i,n=e.model.employees.find(function(e,n){if(e.email==t.email)return i=n,!0});1==t.status?n.emailExsists=!0:e.model.employees.splice(i,1)}),r.success(t.importedCount+" out of "+t.listImportStatus.length+" Users Invited Successfully.")),e.disableInvite=!1},function(t){r.error("An error occurred while inviting users."),e.disableInvite=!1}):e.disableInvite=!1},i.role.query({action:"roles"},function(t){e.vm.systemRoles=t,e.vm.systemRoles.unshift(e.vm.employeeRole),s()})}]),appRoot.factory("LookupServices",["$resource",function(e){return{lookup:e("/api/lookup/:id/:action",{id:"@id",action:"@action"})}}]).factory("OrgServices",["$resource",function(e){return{organizations:e("/api/organizations/:action",{id:"@id",action:"@action"})}}]),appRoot.controller("AddressController",["$scope","AppSettings","LookupServices",function(e,t,i){e.vm={},e.watchOn=function(t){e.$watch(t,function(t,i){t&&(e.model=t)})};e.$on("PermanentAddressChanged",function(t,i){"permanent"===e.templateName&&(i.address?e.model=i.address:(e.tempData=angular.copy(e.model),e.model=null,e.model=e.tempData))});i.lookup.query({id:"countries"},function(t){e.vm.countries=t},function(e){console.log("error in loading countries")})}]),appRoot.controller("BulkEditEmployeesController",["$scope","$resource","$q","$uibModal","NotificationService","$timeout","$filter","EmployeeServices","LookupServices","AppSettings","uiGridEditConstants",function(e,t,i,n,o,r,a,s,l,c,p){e.vm={},e.vm.niceScrollOptions=angular.copy(c.scrollSettings),e.vm.dojMaxDate=new Date;e.vm.refreshData=function(){e.employeeGridOptions.data=a("filter")(e.vm.employees,e.vm.filterText,!1)},e.triggerBlur=function(t,i){2==i&&"object"!=typeof t&&void 0!==t||e.$broadcast(p.events.END_CELL_EDIT)},e.vm.rowChanged=function(t){e.gridApi.selection.selectRow(t)},e.getLocation=function(t){return e.vm.locations.find(function(e){return e.id==t})},e.getDepartment=function(t){return e.vm.departments.find(function(e){return e.id==t})},e.getJobTitle=function(t){return e.vm.jobTitles.find(function(e){return e.id==t})};e.employeeGridOptions=angular.copy(c.gridSettings),e.employeeGridOptions.rowHeight=65,e.employeeGridOptions.columnDefs=[{name:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row, col)}}</span></div>',enableCellEdit:!1,allowCellFocus:!1,headerTooltip:!0},{name:"displayName",displayName:"Name",cellTemplate:'<div class="ui-grid-cell-contents"><span title="{{row.entity.displayName}}">{{row.entity.displayName}}</span><br/><span title="{{row.entity.email}}">{{row.entity.email}}</span></div>',enableCellEdit:!1,allowCellFocus:!1,headerTooltip:!0},{name:"locationId",displayName:"Location",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.getLocation(row.entity.locationId).name}}</span><br/>',enableCellEdit:!1,allowCellFocus:!1,headerTooltip:!0},{name:"departmentId",displayName:"Department",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.getDepartment(row.entity.departmentId).name}}</span><br/>',enableCellEdit:!1,allowCellFocus:!1,headerTooltip:!0},{name:"jobTitle",displayName:"Job Title",enableCellEdit:!0,allowCellFocus:!0,enableCellEditOnFocus:!0,cellTemplate:'<div data-ng-click="grid.appScope.triggerBlur(row.entity.jobTitle);" class="ui-grid-cell-contents"><span>{{row.entity.jobTitle.name}}</span></div>',editableCellTemplate:'<div class="ui-grid-cell-contents"><ui-select data-ng-model="row.entity.jobTitle" on-select="grid.appScope.vm.rowChanged(row.entity)" theme="bootstrap" class="client-select" append-to-body="true"><ui-select-match placeholder="Select or search a job title...">{{$select.selected.name}}</ui-select-match><ui-select-choices class="action-button" repeat="jobTitle in grid.appScope.vm.jobTitles | filter: { name : $select.search }" data-ng-nicescroll="" data-nice-option="grid.appScope.vm.niceScrollOptions"><span ng-if="!jobTitle.id" class="add-client" ng-click="grid.appScope.addNewJobTitle(row.entity);">Create a new job title</span><span ng-if="jobTitle.id" ng-bind-html="jobTitle.name | highlight: $select.search"></span></ui-select-choices></ui-select></div>',cellClass:"ui-grid-cell",headerTooltip:!0},{name:"secondaryJobTitle",displayName:"Secondary Job Title",enableCellEdit:!0,allowCellFocus:!0,enableCellEditOnFocus:!0,cellTemplate:'<div class="ui-grid-cell-contents"><span title="{{row.entity.secondaryJobTitle}}">{{row.entity.secondaryJobTitle}}</span></div>',editableCellTemplate:'<div class="ui-grid-cell-contents"><input type="text" class="form-control" data-ng-change="grid.appScope.vm.rowChanged(row.entity)" data-ng-model="row.entity.secondaryJobTitle"></div>',headerTooltip:!0},{name:"reportingTo",displayName:"Reporting To",enableCellEdit:!0,allowCellFocus:!0,enableCellEditOnFocus:!0,cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.reportingManager.displayName}}</span></div>',editableCellTemplate:'<div class="ui-grid-cell-contents" style="padding-right: 20px;"><input type="text" data-ng-blur="grid.appScope.triggerBlur(row.entity.reportingManager, 2);" data-xhr-input-focus="" data-show="true" class="form-control" data-ng-change="grid.appScope.vm.rowChanged(row.entity)" data-ng-model="row.entity.reportingManager" uib-typeahead="name as name.displayName for name in grid.appScope.vm.employees | filter:{displayName : $viewValue}" typeahead-min-length="3" typeahead-template-url="employee-names-template" typeahead-append-to-body="true"></div>',headerTooltip:!0}],e.employeeGridOptions.multiSelect=!0,e.employeeGridOptions.onRegisterApi=function(t){e.gridApi=t},s.getBulkEditEmployeesData().then(function(t){e.vm.jobTitles=t.jobTitles;var i={id:0,name:"add new job title"};e.vm.jobTitles.unshift(i),e.vm.locations=t.locations,e.vm.departments=t.departments,e.vm.employees=t.pendingEmployeeProfiles,e.vm.employees.forEach(function(t){t.jobTitle=e.vm.jobTitles.find(function(e){return e.id==t.jobTitleId})}),e.vm.copyEmployees=angular.copy(t.pendingEmployeeProfiles),angular.forEach(e.vm.employees,function(t){t.reportingTo&&(t.reportingManager=e.vm.copyEmployees.find(function(e){return e.id==t.reportingTo}))}),e.employeeGridOptions.data=a("orderBy")(e.vm.employees,"employeeNumber",!1)}),e.vm.employees=[],e.vm.jobTitles=[],e.vm.loadEmployeesCount=15;e.addNewJobTitle=function(t){var i,o;e.vm.selectedLocation=(i=t.locationId,e.vm.locations.filter(function(e){return e.id==i})[0]),e.vm.selectedDepartment=(o=t.departmentId,e.vm.departments.filter(function(e){return e.id==o})[0]),e.model={};var r=n.open({templateUrl:"/employeesettings/addnewemployeerole",scope:e,controller:"EmployeeJobTitleController",backdrop:"static",keyboard:!1});e.modalInstance=r,r.result.then(function(i){var n=i.id?i.id:t.jobTitleId;if(n){var o=e.vm.jobTitles.find(function(e){return e.id==n});o||(e.vm.jobTitles.push(i),o=i),t.jobTitle=o}else 0==t.jobTitle.id&&(t.jobTitle=null)},function(){})},e.update=function(e,t){if(e.$valid){o.information("Updating employee details...");var i={};i.locationId=t.locationId,i.jobTitleId=t.jobTitleId,i.secondaryJobTitle=t.secondaryJobTitle,i.dateJoined=t.dateJoined,i.reportTo=t.reportingManager?t.reportingManager.id:null,"object"==typeof t.reportingManager?s.employee.update({id:t.id,employeeNumber:t.employeeNumber,action:"jobbasicinfo"},i,function(){o.success("Employee details updated successfully.")},function(){o.error("An error occurred while updating employee details.")}):o.information("Please select valid reporting manager and job title from the list.")}},e.updateSelected=function(){var t=[],i=0,n=e.gridApi.selection.getSelectedRows();angular.forEach(n,function(n){if("object"==typeof n.reportingManager&&"object"==typeof n.jobTitle&&null!=n.jobTitle){var o={};o.jobTitleId=n.jobTitle.id,o.dateJoined=n.dateJoined,o.secondaryJobTitle=n.secondaryJobTitle,o.reportTo=n.reportingManager?n.reportingManager.id:null;var r={jobDetails:o,id:n.id,employeeNumber:n.employeeNumber};t.push(r),e.gridApi.selection.unSelectRow(n)}else i++}),t.length>0?s.employee.update({action:"bulkeditjobInfo"},t,function(){o.success(n.length-i+" out of "+n.length+" Employees details updated successfully."),i>0&&r(function(){o.information("Please select valid reporting manager and job title from the list.")},2e3)},function(){o.error("An error occurred while updating employee details. All fields are required.")}):0==i?o.information("Please select at least one employee."):o.information("Please select Job Title and Reporting Manager from the list.")},e.selectAll=function(){angular.forEach(e.vm.employees,function(t){t.isChecked=e.selectOrUnselect})},e.doesEmployeeNumberExist=function(t,n){var o=i.defer();return t!=e.vm.copyEmployees[n].employeeNumber?s.employee.get({action:"doesemployeenumberexist",number:t},function(e){e.result?o.resolve(!1):o.resolve(!0)}):o.resolve(!0),o.promise},e.loadMoreemployees=function(){e.vm.loadEmployeesCount=e.vm.loadEmployeesCount+40},e.$watchCollection("vm.jobTitles",function(t){t&&(e.test=t)}),e.getSearchResults=function(t){return e.vm.employees.filter(function(e){return-1!=e.displayName.toLowerCase().indexOf(t.toLowerCase())})}}]),appRoot.controller("EmployeeTimeNavController",["$scope","$stateParams","$rootScope","ApplicationModule","EmployeeTimesheetServices","AppContext","$state","SharedDataService",function(e,t,i,n,o,r,a,s){e.vm={},e.vm.id=t.id;var l;l=r.orgFeatures().some(function(e){return"LEAVES"==e}),e.vm.employeeAttributes=s.getEmployeeAttributes(),"employee.time"!=a.current.name&&"employee.time.timesheet"!=a.current.name||(r.orgFeatures().some(function(e){return"TIMESHEET"==e})?o.getEmployeeModuleStatus(e.vm.id).then(function(t){e.vm.employeeModuleStatus=t,e.vm.isTimesheetEnabled=e.vm.employeeModuleStatus.some(function(t){return t.employeeId==e.vm.id&&t.module==n.Timesheet.id&&t.enabled}),l&&"employee.time.timesheet"!=a.current.name?window.location.href="ui/#/employee/"+e.vm.id+"/time/leave":a.go("employee.time.timesheet")}):l?window.location.href="ui/#/employee/"+e.vm.id+"/time/leave":a.go("employee.time.attendance")),r.orgFeatures().some(function(e){return"TIMESHEET"==e})&&o.getEmployeeModuleStatus(e.vm.id).then(function(t){e.vm.employeeModuleStatus=t,e.vm.isTimesheetEnabled=e.vm.employeeModuleStatus.some(function(t){return t.employeeId==e.vm.id&&t.module==n.Timesheet.id&&t.enabled})}),i.$on("employeeModuleStatusUpdated",function(t,i){var o=e.vm.employeeModuleStatus.map(function(e){return e.id}).indexOf(i.employeeModule.id);-1!=o?e.vm.employeeModuleStatus[o]=i.employeeModule:e.vm.employeeModuleStatus.push(i.employeeModule),e.vm.isTimesheetEnabled=e.vm.employeeModuleStatus.some(function(t){return t.employeeId==e.vm.id&&t.module==n.Timesheet.id&&t.enabled})})}]),appRoot.factory("EmployeeServices",["$resource","$q","SharedModel","EmployeeModel",function(e,t,i,n){return{employee:e("/api/employee/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),employeeManage:e("/api/employee/manage/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),employeeAttendance:e("/api/employee/:employeeId/:action/:id",{employeeId:"@employeeId",id:"@id",action:"@action"},{update:{method:"PUT"}}),attendanceBulkActions:e("/api/attendance/requests/:action",{action:"@action"},{update:{method:"PUT"}}),user:e("/api/user/:id/:action",{id:"@id",action:"@action"},{update:{method:"PUT"}}),publicProfile:e("/api/publicprofile/:action/:id",{id:"@id"}),employeeFinance:e("/api/employee/:id/finance/:action/",{id:"@id",action:"@action"}),importExcel:e("/api/employee/import/:action/",{action:"@action"},{update:{method:"PUT"}}),getDashboardDetails:function(){return this.employee.get({action:"dashboard"}).$promise},getReportDashboardDetails:function(){return this.employee.get({action:"reportdashboard"}).$promise},getAllEmployeesList:function(){return this.employee.query({action:"all"}).$promise},inviteEmployees:function(e){return this.employeeManage.save({action:"invite/all"},e).$promise},generateResetLink:function(e){return this.employeeManage.get({action:"triggerresetlink",id:e}).$promise},getRegisteredEmployees:function(){return this.employee.query({action:"registered"}).$promise},getIncompleteProfiles:function(){return this.employee.query({action:"incomplete"}).$promise},getEmployeesRelieved:function(){return this.employee.get({action:"relieved"}).$promise},getEmployeesInProbation:function(){return this.employee.query({action:"inprobation"}).$promise},getConfirmedEmployees:function(){return this.employee.query({action:"confirmed"}).$promise},getEmployeesInNoticePeriod:function(){return this.employee.get({action:"innoticeperiod"}).$promise},addEmployee:function(e){return this.employeeManage.save({action:"add"},e).$promise},getUser:function(e){return this.user.get({id:e,action:"default"}).$promise},getUserProfile:function(e){return this.user.get({id:e,action:"userprofile"}).$promise},getUserPII:function(e){return this.user.get({id:e,action:"userpii"}).$promise},getEmployee:function(e){var i=this,n=t.defer();return this.employee.get({id:e,action:"default"},function(o){t.all([i.getUser(o.userId),i.getUserProfile(o.userId),i.getUserPII(o.userId)]).then(function(t){var r=angular.copy(o.displayName),a=angular.copy(o.email),s=angular.copy(t[0].userName);angular.extend(o,t[0],t[1],t[2]),o.displayName=r,o.email=a;var l=i.newEmployee(o);l.id=e,l.employeeUserName=a?s:s.substring(0,s.lastIndexOf("@")),n.resolve(l)})}),n.promise},getPublicProfile:function(e){return this.employee.get({id:e,action:"publicprofile"}).$promise},getEmployeeTeam:function(e){return this.publicProfile.query({id:e,action:"team"}).$promise},getInvalidLocationsForBasicImport:function(){return this.employee.query({action:"import/basicdetails/invalidlocations"}).$promise},getInvalidLocationsAndBusinessUnitsList:function(e){return this.employee.get({action:"import/invalidlocationsandbusinessunits",id:e}).$promise},updateJobBasicInfo:function(e,t){return this.employee.update({id:e,employeeNumber:t,action:"jobbasicinfo"},jobDetails).$promise},getInvalidJobLocationsAndDepartmentsList:function(){return this.employee.get({action:"import/invalidjoblocationsanddepartments"}).$promise},getBasicImportMatchingRecords:function(){return this.employee.get({action:"import/basicdetails/matchingrecords"}).$promise},getMatchingRecords:function(e){return this.employee.get({action:"import/matchingrecords",id:e}).$promise},getBasicImportDataValidations:function(e){return this.employee.save({action:"import/basicdetail/datavalidation"},e).$promise},getImportDataValidations:function(e,t){return this.employee.save({action:"import/datavalidation",id:e},t).$promise},getJobDataImportValidations:function(e){return this.employee.save({action:"import/jobdatavalidation"},e).$promise},getEmployeeModuleImportValidations:function(e){return this.employee.save({action:"import/employeemodulevalidation"},e).$promise},getImportedBasicEmployeeDetails:function(){return this.employee.query({action:"import/basicdetail/preview"}).$promise},getImportedUsers:function(e){return this.employee.query({action:"import/preview",id:e}).$promise},getImportedJobDetails:function(){return this.employee.query({action:"import/previewjobdetails"}).$promise},getImportedEmployeeModules:function(){return this.employee.query({action:"import/previewemployeemodules"}).$promise},importExcelEmployees:function(e,t){return this.employeeManage.save({action:"import/employees",id:e},t).$promise},importExcelJobDetails:function(e){return this.employee.save({action:"import/jobdetails"},e).$promise},importExcelEmployeeModules:function(e){return this.employee.save({action:"import/employeemodules"},e).$promise},getAttendanceRequests:function(e){return this.employee.query({action:"attendancerequests",id:e}).$promise},employeeResource:e("/api/employee",{invitationStatus:"@invitationStatus"}),me:e("/api/me/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),emailExist:e("/api/employee/emailexist/:email"),leaveRequest:e("/api/employee/leaverequest/:id",{id:"@id"},{update:{method:"PUT"}}),bulkEditEmployeesData:e("/api/employee/bulkeditemployees",null,{query:{method:"GET",isArray:!1}}),newEmployee:function(e){return new n.Employee(e)},getEmployeesByLocation:function(e){return this.employee.query({id:e,action:"EmployeesByLocation"}).$promise},getJobInfo:function(){return this.employee.get({action:"jobInfo"}).$promise},getBulkEditEmployeesData:function(){return this.bulkEditEmployeesData.query().$promise},getPendingLeaveImportEmployees:function(){return this.employee.query({action:"pendingleaveimport"}).$promise},updateEmail:function(e,t){return this.employeeManage.update({id:e,action:"updateemail"},{newemail:t}).$promise},removeEmail:function(e){return this.employeeManage.update({id:e,action:"removeemail"}).$promise},doesemailexist:function(e,t){return this.employee.get({id:e,action:"doesemailexist",email:t}).$promise},updateMobile:function(e,t){return this.employeeManage.update({id:e,action:"updatemobilephone"},{newmobilenumber:t}).$promise},doesMobileexist:function(e,t){return this.employee.get({id:e,action:"doesmobileexist",mobilePhone:t}).$promise},getAttendanceSummary:function(e){return this.employeeAttendance.query({action:"summary",employeeId:e}).$promise},saveAttendanceRequest:function(e){return this.employeeAttendance.save({action:"webclockin"},e).$promise},getMonthAttendanceSummary:function(e,t){return this.employeeAttendance.query({action:"summary",employeeId:e,id:t}).$promise},getAttendanceDayRequests:function(e){return this.employeeAttendance.get({action:"attendancedayrequests",employeeId:e}).$promise},approveWfhRequest:function(e,t){return this.employeeAttendance.save({action:"approvewfh",employeeId:e,id:t}).$promise},rejectWfhRequest:function(e,t){return this.employeeAttendance.save({action:"rejectwfh",employeeId:e,id:t}).$promise},cancleWfhRequest:function(e,t){return this.employeeAttendance.save({action:"cancelwfh",employeeId:e,id:t}).$promise},approveOnDutyRequest:function(e,t){return this.employeeAttendance.save({action:"approveonduty",employeeId:e,id:t}).$promise},rejectOnDutyRequest:function(e,t){return this.employeeAttendance.save({action:"rejectonduty",employeeId:e,id:t}).$promise},cancelOnDutyRequest:function(e,t){return this.employeeAttendance.save({action:"cancelonduty",employeeId:e,id:t}).$promise},approveRemoteClockInRequest:function(e,t){return this.employeeAttendance.save({action:"approveremoteclockin",employeeId:e,id:t}).$promise},approveAllRemoteClockInRequests:function(e){return this.attendanceBulkActions.update({action:"approveremoteclockin/all"},e).$promise},rejectRemoteClockInRequest:function(e,t){return this.employeeAttendance.save({action:"rejectremoteclockin",employeeId:e,id:t}).$promise},rejectAllRemoteClockInRequests:function(e){return this.attendanceBulkActions.update({action:"rejectremoteclockin/all"},e).$promise},approveAdjustmentRequest:function(e,t){return this.employeeAttendance.save({action:"approveadjustment",employeeId:e,id:t}).$promise},approveAllAdjustmentRequest:function(e){return this.attendanceBulkActions.update({action:"approveadjustment/all"},e).$promise},rejectAdjustmentRequest:function(e,t){return this.employeeAttendance.save({action:"rejectadjustment",employeeId:e,id:t}).$promise},rejectAllAdjustmentRequest:function(e){return this.attendanceBulkActions.update({action:"rejectadjustment/all"},e).$promise},getTeamStats:function(e){return this.employeeAttendance.get({action:"mystats",employeeId:e}).$promise},getTrackingPolicy:function(e){return this.employeeAttendance.get({action:"trackingpolicy",employeeId:e}).$promise},getLeavePlan:function(e){return this.employeeAttendance.get({action:"leaveplan",employeeId:e}).$promise},getAttendancerequests:function(e){return this.employeeAttendance.query({action:"attendancerequests",employeeId:e}).$promise},getAttendanceCaptureScheme:function(e){return this.employeeAttendance.get({action:"attendancecapturescheme",employeeId:e}).$promise},saveWFHRequest:function(e,t){return this.employeeAttendance.save({action:"savewfh",employeeId:e},t).$promise},saveOnDutyRequest:function(e,t){return this.employeeAttendance.save({action:"saveonduty",employeeId:e},t).$promise},getMaxEmployeeNumber:function(e,t){return this.employeeAttendance.get({action:t,id:e}).$promise},saveAttendanceAdjustmentRequest:function(e,t){return this.employeeAttendance.save({action:"saveattendanceadjustment",employeeId:e},t).$promise},doesEmployeeNumberExist:function(e,i){var n=t.defer();return this.employee.get({action:i,id:e},function(e){e.result?n.resolve(!1):n.resolve(!0)},function(e){n.resolve(!0)}),n.promise},updateEmployeeNumber:function(e,t){return this.employee.update({action:"updateemployeenumber",employeeId:e,newEmployeeNumber:t},null).$promise},updateAttendanceNumber:function(e,t){return this.employee.update({action:"updateattendancenumber",employeeId:e,newAttendanceNumber:t},null).$promise},getLeaveStats:function(e){return e.action="leaves/dashboard/data",this.employee.get(e).$promise},getLeaveRequest:function(e){return e.action="leaverequest",this.employee.get(e).$promise},saveLeaveRequest:function(e,t){return e.action="leaverequest",this.employee.save(e,t).$promise},updateLeaveRequest:function(e,t){return e.action="leaverequest",this.employee.update(e,t).$promise},getEmployeeProjects:function(e){return this.employee.query({action:"employeeprojects",id:e}).$promise},getProjectTasks:function(e){return this.employee.query({id:e,action:"projecttasks"}).$promise},getTimesheetEntries:function(e,t){return this.employee.query({fromDate:e,id:t,action:"timesheet"}).$promise},getTimesheetsDue:function(e){return this.employee.query({action:"timesheetsdue",id:e}).$promise},getTimesheetsDueCount:function(e){return this.employee.get({action:"timesheetsduecount",id:e}).$promise},getTimesheetsRejected:function(e){return this.employee.query({action:"timesheetsrejected",id:e}).$promise},getTimesheetsRejectedCount:function(e){return this.employee.get({action:"timesheetsrejectedcount",id:e}).$promise},getTimesheet:function(e,t){return this.employee.get({fromDate:e,id:t,action:"employeetimesheet"}).$promise},getEmployeeTimeoffData:function(e){return this.employee.get({action:"timeOffData",id:e}).$promise},getEmployeeResourceAllocation:function(e){return this.employee.query({action:"resourceallocation",id:e}).$promise},getAttendanceData:function(e,t){return this.employeeAttendance.query({action:"attendancedetails",employeeId:e,fromDate:t}).$promise},resetPassword:function(e,t){return this.employeeManage.update({action:"resetpassword",id:e},{password:t}).$promise},generatePassword:function(e,t){return this.employeeManage.update({action:"generatepassword",id:e},{password:t}).$promise},getExitDetails:function(e){return this.employee.get({id:e,action:"exitDetails"}).$promise},initiateEmployeeExit:function(e){return this.employee.save({action:"initiateexit"},e).$promise},updateEmployeeExit:function(e){return this.employee.update({action:"initiateexit"},e).$promise},deleteEmployeeExit:function(e,t){return this.employee.update({action:"canceltermination",employeeid:e},t).$promise},disableEmployeeAccount:function(e){return this.employeeManage.update({action:"account/disable",id:e}).$promise},enableEmployeeAccount:function(e){return this.employeeManage.update({action:"account/enable",id:e}).$promise},getEmployeeExitInfo:function(e){return this.employee.get({action:"initiateexit",id:e}).$promise},rejoinEmployee:function(e){return this.employee.update({action:"rejoinemployee"},e).$promise},saveCustomProperties:function(e,t,i,n){return this.employee.update({action:"customproperties",id:e,sectionId:t,groupId:i},n).$promise},getEmployeeModuleStatus:function(e){return this.employee.query({action:"employeemodulestatus",id:e}).$promise}}}]),appRoot.factory("MyProfileServices",["$resource","$q","EmployeeModel",function(e,t,i){return{profile:e("/api/me/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),getPublicProfile:function(){return this.profile.get({action:"publicprofile"}).$promise},getMyJobInfo:function(){return this.profile.get({action:"details"}).$promise},getIsAllowEmployeeResign:function(){return this.profile.get({action:"isallowemployeeresign"}).$promise},getMyTeam:function(){return this.profile.query({action:"team"}).$promise},getIsProfileEditable:function(){return this.profile.get({action:"iseditable"}).$promise},getEmployee:function(){return this.profile.get({action:"employee"}).$promise},getUser:function(){return this.profile.get({action:"user"}).$promise},getUserProfile:function(){return this.profile.get({action:"userprofile"}).$promise},getMyProfile:function(){var e=t.defer();return t.all([this.getEmployee(),this.getUser(),this.getUserProfile()]).then(function(t){var n=angular.copy(t[0].displayName);angular.extend(t[0],t[1],t[2]),t[0].displayName=n;var o=new i.MyProfile(t[0]);e.resolve(o)}),e.promise},doesMobileExist:function(e){return this.profile.get({action:"doesmobilenumberexist",mobile:e}).$promise},getEmployeeOnboardInfo:function(){return this.profile.get({action:"employeeonboardinfo"}).$promise},saveCustomProperties:function(e,t,i){return this.profile.update({action:"customproperties",sectionId:e,groupId:t},i).$promise},getAuthenticationMode:function(){return this.profile.get({action:"authenticationmode"}).$promise},getWeeklyOffPolicy:function(){return this.profile.get({action:"weeklyoffpolicy"}).$promise},getclockInDetails:function(){return this.profile.get({action:"clockInDetailsForToday"}).$promise},getEducationDetails:function(){return this.profile.query({action:"educationdetails"}).$promise},getExperienceDetails:function(){return this.profile.query({action:"experiencedetails"}).$promise}}}]),appRoot.factory("PublicProfileServices",["$resource","$q","SharedModel","EmployeeModel",function(e,t,i,n){return{publicProfile:e("/api/publicprofile/:action/:id",{id:"@id",action:"@action"}),getPublicProfile:function(e){return this.publicProfile.get({id:e,action:"employee"}).$promise},getMyTeam:function(e){return this.publicProfile.query({id:e,action:"team"}).$promise},getEmployeeSearchResult:function(e){return this.publicProfile.get({id:e,action:"searchEmployee"}).$promise},getEmployeePublicProfiles:function(){return this.publicProfile.query({action:"all"}).$promise},getEmployeePublicProfilesStartingWith:function(e){return this.publicProfile.query({action:"startswith",firstLetter:e}).$promise},getEmployeeProfilesByIds:function(e){return this.publicProfile.query({listOfEmployeeIds:e,action:"employeesbyids"}).$promise},getOrgChartData:function(e){return this.publicProfile.get({action:"orgchart",id:e}).$promise},getEmployeeReportees:function(e){return this.publicProfile.query({action:"reportees",id:e}).$promise}}}]),appRoot.controller("EmployeeDashboardController",["$scope","$state","$uibModal","EmployeeServices",function(e,t,i,n){e.vm={},e.$on("$stateChangeSuccess",function(i,n,o,r,a){e.vm.state=t.current});var o=function(){n.getDashboardDetails().then(function(t){e.vm.dashboardDetails=t})};o(),e.importEmployees=function(){e.modalInstance=i.open({templateUrl:"/employees/excelImport",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"ExcelImportEmployeeController"}),e.modalInstance.result.then(function(e){e&&o()})},e.importJobDetails=function(){i.open({templateUrl:"/employees/excelImport",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"ExcelImportJobDetailsController"}).result.then(function(e){e&&o()})}}]),appRoot.controller("InviteEmployeesController",["$scope","$resource","$q","AppSettings","$uibModalInstance","NotificationService","EmployeeServices","employeesList","$filter",function(e,t,i,n,o,r,a,s,l){e.vm={},e.vm.employees=s,e.vm.isGridVisible=0!==s.length,e.vm.inviteInProcess=!1,e.vm.selectedEmployees=[],e.vm.validEmployees=[],0!=e.vm.employees.length&&(e.vm.departmentIdentifier=e.vm.employees[0].hasOwnProperty("department")?"department":"departmentName",e.vm.locationIdentifier=e.vm.employees[0].hasOwnProperty("location")?"location":"locationName");e.employeeGridOptions=angular.copy(n.gridSettings),e.employeeGridOptions.columnDefs=[{field:"employeeNumber",cellTemplate:'<div class="ui-grid-cell-contents"><span title="{{grid.getCellValue(row,col)}}">{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell",displayName:"Employee Number"},{field:"fullName",cellTemplate:'<div class="ui-grid-cell-contents"><span title="{{row.entity.fullName}}">{{row.entity.fullName}}</span></div>',cellClass:"ui-grid-cell",displayName:"Full Name",sort:{direction:"asc",priority:1}},{field:"jobTitle",displayName:"Job Title",cellTemplate:'<div class="ui-grid-cell-contents"><span title="{{row.entity.jobTitle}}">{{row.entity.jobTitle != null ? row.entity.jobTitle : "Not Available"}}</span></div>',cellClass:"ui-grid-cell",headerTooltip:!0},{field:e.vm.departmentIdentifier,displayName:"Department",cellTemplate:'<div class="ui-grid-cell-contents"><span title="{{row.entity.'+e.vm.departmentIdentifier+' }}">{{row.entity.'+e.vm.departmentIdentifier+" != null ? row.entity."+e.vm.departmentIdentifier+' : "Not Avaialble"}}</span></div>',cellClass:"ui-grid-cell",headerTooltip:!0},{field:e.vm.locationIdentifier,displayName:"Location",cellTemplate:'<div class="ui-grid-cell-contents"><span title="{{row.entity.'+e.vm.locationIdentifier+'}}">{{row.entity.'+e.vm.locationIdentifier+" != null ? row.entity."+e.vm.locationIdentifier+' : "Not Available"}}</span></div>',cellClass:"ui-grid-cell",headerTooltip:!0},{field:"email",cellTemplate:'<div class="ui-grid-cell-contents"><span title="{{grid.getCellValue(row, col)}}">{{grid.getCellValue(row, col)}}</span></div>',cellClass:"ui-grid-cell",displayName:"Email"}],e.employeeGridOptions.rowHeight=40,e.employeeGridOptions.data="vm.employees",e.employeeGridOptions.multiSelect=!0,e.employeeGridOptions.onRegisterApi=function(t){e.gridApi=t,t.selection.on.rowSelectionChanged(e,function(t){e.vm.selectedEmployees=e.gridApi.selection.getSelectedRows(),e.vm.validEmployees=e.vm.selectedEmployees.filter(function(e){return e.email}),e.vm.Invitestatus=0==e.vm.selectedEmployees.length?"Select atleast one employee":"Select employees having email"}),t.selection.on.rowSelectionChangedBatch(e,function(t){e.vm.selectedEmployees=e.gridApi.selection.getSelectedRows(),e.vm.validEmployees=e.vm.selectedEmployees.filter(function(e){return e.email}),e.vm.Invitestatus=0==e.vm.selectedEmployees.length?"Select atleast one employee":"Select employees having email"}),e.gridApi.grid.registerRowsProcessor(e.singleFilter,200)},e.invite=function(){0===e.vm.validEmployees.length?e.vm.Invitestatus=0==e.vm.selectedEmployees.length?"Select atleast one employee":"Select employees having email":(e.vm.inviteInProcess=!0,r.information("Inviting Employees..."),a.inviteEmployees(e.vm.validEmployees).then(function(t){o.close(e.vm.validEmployees),r.success("Employees has been Invited.")},function(t){e.vm.inviteInProcess=!1,r.error("An error occurred while inviting employees.")}))},e.close=function(){o.close()},e.singleFilter=function(t){var i=new RegExp(e.vm.filterText,"ig");return t.forEach(function(t){var n=!1;["employeeNumber","fullName","jobTitle",e.vm.departmentIdentifier,e.vm.locationIdentifier,"email"].forEach(function(e){(t.entity[e]||"").match(i)&&(n=!0)}),n||(t.visible=!1)}),t},e.vm.refreshData=function(){e.gridApi.grid.refresh()}}]),appRoot.controller("EmployeesController",["$scope","$state","$uibModal","$location","OrgSettingServices","AppSettings","AppContext","EmployeeExpenseService","AppFeatures",function(e,t,i,n,o,r,a,s,l){e.vm={},e.vm.niceScrollOptions=angular.copy(r.scrollSettings),e.$on("$stateChangeSuccess",function(i,n,o,r,a){e.vm.state=t.current}),e.$on("ExpenseClaimsCount",function(e,t){c()});var c=function(){a.isFeaturePresent(l.Expenses.title)&&(a.isGlobalAdmin||a.hasPrivilege(["EXPENSE.MANAGE_ORG_CLAIMS"]))&&s.getPendingExpenseClaimsCount().then(function(t){e.vm.pendingExpenseClaimsCount=t.expenseClaimApprovalsCount})};c()}]),appRoot.controller("AddEmployeeController",["$scope","$resource","$q","$stateParams","$location","$uibModal","AppSettings","$filter","NotificationService","EmployeeServices","SharedModel","LookupServices","$timeout","OrgSettingServices",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m){e.vm={},e.vm.modelOptions=angular.copy(a.modelBlurSettings),e.vm.datepickerOptions=angular.copy(a.datepickerOptions),e.disableAddEmpBtn=!1,e.vm.isEmployeeNumberRequired=!0;e.validateEmployeeNumber=function(t){if(!(e.vm.employeeNumberSettings.autoGenerate&&t>e.vm.employeeNumberSettings.autoGenerateStartWith))return c.doesEmployeeNumberExist(t,"doesemployeenumberexist")},e.checkDateOfJoin=function(){if(e.vm.employeeNumberSettings&&e.vm.employeeNumberSettings.autoGenerate&&e.vm.employeeNumberSettings.allowManualEntry&&e.vm.employeeNumberSettings.manualEntryBefore&&e.model.dateOfJoining){var t=new p.DateWithZeroTime(e.vm.employeeNumberSettings.manualEntryBefore);e.vm.isEmployeeNumberRequired=""!=e.model.dateOfJoining&&e.model.dateOfJoining.getTime()<new Date(t).getTime()}else e.vm.isEmployeeNumberRequired=!e.vm.employeeNumberSettings||!e.vm.employeeNumberSettings.autoGenerate;e.vm.isEmployeeNumberRequired||(e.model.employeeNumber=null)},e.updateDisplayName=function(){e.model.displayName=(e.model.firstName?e.model.firstName.trim()+" ":"")+(e.model.lastName?e.model.lastName.trim():"")},e.model=new function(){this.firstName=null,this.middleName=null,this.lastName=null,this.displayName=null,this.email=null,this.locationId=null,this.employeeNumber=null,this.dateOfJoining=null,this.inviteEmployee=!0},u.lookup.query({id:"locations"},function(t){1==t.length&&(e.model.locationId=t[0].id),e.vm.locations=t}),m.organization.get({action:"authenticationtype"},function(t){e.vm.showOff365Import=2==t.authenticationType},function(e){console.log("Error in fetching the authentication type")}),e.addEmployee=function(){if(e.disableAddEmpBtn=!0,e.newEmployee.$valid){l.information("Adding Employee.");var t=angular.copy(e.model);t.dateOfJoining=s("date")(t.dateOfJoining,"dd-MM-yyyy"),c.addEmployee(t).then(function(t){o.path("/employee/"+t.id+"/job"),l.success("Employee added successfully."),e.disableAddEmpBtn=!1},function(i){l.error("An error occurred while adding an employee."),e.model.dateOfJoining=new p.DateWithZeroTime(t.dateOfJoining),e.disableAddEmpBtn=!1})}else e.$broadcast("validateForm"),e.disableAddEmpBtn=!1},e.doesEmailExist=function(e){var t=i.defer();return c.employee.get({id:0,action:"doesemailexist",email:e},function(e){e.result?t.resolve(!1):t.resolve(!0)}),t.promise}}]),appRoot.factory("EmployeeReportServices",["$resource",function(e){return{reports:e("/api/employee/reports/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),getUnInvitedEmployees:function(){return this.reports.query({action:"uninvited"}).$promise}}}]),appRoot.controller("EmployeePersonalDetailsController",["$scope","$resource","$stateParams","$rootScope","$state","$uibModal","$q","$filter","NotificationService","EmployeeServices","RelationTypes","LookupServices","AppSettings","SocialNetworks","MaritalStatus","Gender","BloodGroup","MyProfileServices","dialogs","SharedModel","$timeout","AppContext","Utils",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S,C,w,b){e.vm={},e.vm.id=i.id,e.vm.profile={},e.vm.modelOptions=angular.copy(d.modelBlurSettings),e.vm.relationTypes=p,e.vm.socialNetworkTypes=m,e.vm.maritalStatus=y,e.vm.marriageMaxDate=new Date,e.vm.gender=h,e.vm.bloodGroup=f;var P,T=new Date;T.setFullYear(T.getFullYear()-10,T.getMonth(),T.getDate()),e.vm.dobMaxDate=T,e.vm.dobMaxDateCopy=angular.copy(T),P=i.id?c.employee:g.profile,i.id?e.vm.employeeId=i.id:w.currentUser().then(function(t){e.vm.employeeId=t.id}),e.vm.dobDatePickerOptions={showWeeks:!1,maxDate:e.vm.dobMaxDate,initDate:e.vm.dobMaxDate},e.$on("$stateChangeSuccess",function(t,i,n,r,a){e.vm.state=o.current}),e.$on("userDataLoaded",function(t,i){e.model=angular.copy(i.user.personalDetails),e.model.marriageDate=null==e.model.marriageDate?null:e.model.marriageDate,e.model.dateOfBirth=null==e.model.dateOfBirth?null:e.model.dateOfBirth,e.model.gender=e.model.gender?e.model.gender:null,e.model.bloodGroup=e.model.bloodGroup?e.model.bloodGroup:null});e.relationEditMode=!1,e.socialNetworkingLinksEditMode=!1,a.all([u.lookup.query({id:"countries"}).$promise,g.getIsProfileEditable()]).then(function(t){e.vm.countries=t[0],e.vm.isEditable=t[1].isEditable}),e.dobMinDateValidate=function(t){if(null!=t)return!(t.getFullYear()>e.vm.dobMaxDateCopy.getFullYear())},e.setAddress=function(){e.vm.isSameAddress&&(e.model.permanentAddress=angular.copy(e.model.currentAddress))},e.editRelation=function(t){e.selectedRelation=angular.copy(t),e.relationEditMode=!0,e.vm.submitted=!1,e.family.$setPristine()},e.toggleAddRelationForm=function(){e.relationEditMode=!e.relationEditMode,e.selectedRelation=null,e.vm.submitted=!1,e.family.$setPristine()},e.saveNewRelation=function(t){e.family.$valid&&(e.relationEditMode=!1,t.id=this.utilService.getGuid(),l.information("Saving relation..."),P.save({id:e.vm.id,action:"relations"},t,function(i){e.model.relations.push(t),n.$broadcast("relationsUpdated",{id:e.vm.employeeId,relations:e.model.relations}),l.success("Relation added successfully.")},function(e){l.error("An error occurred while adding a relation.")}))},e.updateRelation=function(t){e.family.$valid&&(l.information("Updating relation..."),P.update({id:e.vm.id,action:"relations"},t,function(i){for(var o=0;o<e.model.relations.length;o+=1)if(e.model.relations[o].id===t.id){e.model.relations[o]=t;break}n.$broadcast("relationsUpdated",{id:e.vm.employeeId,relations:e.model.relations}),l.success("Relation updated successfully."),e.relationEditMode=!1},function(e){l.error("An error occurred while updating relation.")}))},e.deleteRelation=function(t){v.confirm("Please Confirm","Are you sure want to delete this relation ?").result.then(function(){l.information("Deleting relation..."),P.delete({id:e.vm.id,relationId:t,action:"relations"},function(i){for(var o=e.model.relations.length-1;o>=0;o-=1)if(e.model.relations[o].id===t){e.model.relations.splice(o,1);break}n.$broadcast("relationsUpdated",{id:e.vm.employeeId,relations:e.model.relations}),e.relationEditMode=!1,e.selectedRelation=null,l.success("Relation deleted successfully.")},function(e){l.error("An error occurred while deleting relation.")})})},e.save=function(){if(e.personInfo.$valid){l.information("Updating personal information...");var t=angular.copy(e.model);t.marriageDate=null==t.marriageDate?null:s("date")(t.marriageDate,"yyyy-MM-dd"),t.dateOfBirth=null==t.dateOfBirth?null:s("date")(t.dateOfBirth,"yyyy-MM-dd"),P.update({id:e.vm.id,action:"personalinfo"},{workPhone:t.workPhone,displayName:t.displayName,userProfile:t},function(t){t.userProfile.marriageDate=null==t.userProfile.marriageDate?null:t.userProfile.marriageDate.stringToDate(),t.userProfile.dateOfBirth=null==t.userProfile.dateOfBirth?null:t.userProfile.dateOfBirth.stringToDate(),n.$broadcast("profileUpdated",{id:e.vm.id,userProfile:t.userProfile}),n.$broadcast("displayNameUpdated",{id:e.vm.id,userProfile:t.userProfile}),l.success("Personal information updated successfully.")},function(i){e.model.marriageDate=null==t.marriageDate?null:new S.DateWithZeroTime(t.marriageDate),e.model.dateOfBirth=null==t.dateOfBirth?null:new S.DateWithZeroTime(t.dateOfBirth),l.error("An error occurred while updating personal information.")})}else e.$broadcast("validateForm")},e.changeEmail=function(){e.vm.newEmail=e.vm.confirmEmail=null,e.modalInstance=r.open({templateUrl:"changeemail-template",scope:e})},e.isEmailValid=function(t){return e.vm.newEmail===t},e.doesEmailExist=function(e){var t=a.defer();return c.employee.get({id:0,action:"doesemailexist",email:e},function(e){e.result?t.resolve(!1):t.resolve(!0)}),t.promise},e.close=function(){e.modalInstance.close()},e.updateEmail=function(){e.vm.changeEmailForm.emailForm.$valid?c.employee.update({id:e.vm.id,action:"updateemail"},{newemail:e.vm.newEmail},function(t){e.model.email=e.vm.newEmail,e.modalInstance.close(),n.$broadcast("profileUpdated",{id:e.vm.id,userProfile:e.model}),l.success("Email updated successfully")},function(e){l.error("An error occurred while updating email.")}):e.$broadcast("validateForm")}}]),appRoot.controller("EmployeeProfessionalDetailsController",["$scope","$resource","$rootScope","$stateParams","$state","NotificationService","EmployeeServices","dialogs",function(e,t,i,n,o,r,a,s){e.vm={},e.vm.id=n.id,e.vm.currentDate=new Date,e.$on("userDataLoaded",function(t,i){e.model=i.user.professionalDetails}),e.$on("$stateChangeSuccess",function(t,i,n,r,a){e.vm.state=o.current});var l=e.vm.id?a.employee:a.me;e.experienceEditMode=!1,e.educationEditMode=!1,e.save=function(){r.information("Updating professional information..."),l.update({id:e.vm.id,action:"professionalinfo"},e.model,function(t){i.$broadcast("professionalInfoUpdated",{id:e.vm.id,professionalInfo:e.model}),r.success("Professional information updated successfully.")},function(e){r.error("An error occurred while updating professional information.")})},e.toggleAddExperienceForm=function(){e.experienceEditMode=!e.experienceEditMode,e.selectedExperience=null,e.vm.submitted=!1,e.professionalExperience.$setPristine()},e.toggleAddEducationForm=function(){e.educationEditMode=!e.educationEditMode,e.selectedEducation=null,e.vm.formSubmitted=!1,e.professionalEducation.$setPristine()},e.saveExperienceDetail=function(t){e.professionalExperience.$valid&&(e.experienceEditMode=!1,t.id=Math.random().toString(36).substr(2,4),r.information("Saving experience..."),l.save({id:e.vm.id,action:"experience"},t,function(n){e.model.myExperience.push(t),e.selectedExperience=null,i.$broadcast("professionalInfoUpdated",{id:e.vm.id,professionalInfo:e.model}),r.success("Experience added successfully.")},function(e){r.error("An error occurred while adding experience details.")}))},e.editExperience=function(t){e.selectedExperience=angular.copy(t),e.experienceEditMode=!0,e.vm.submitted=!1,e.professionalExperience.$setPristine()},e.updateExperience=function(t){e.professionalExperience.$valid&&(e.experienceEditMode=!1,r.information("Updating experience..."),l.update({id:e.vm.id,action:"experience"},t,function(n){for(var o=0;o<e.model.myExperience.length;o+=1)if(e.model.myExperience[o].id===t.id){e.model.myExperience[o]=t;break}e.selectedExperience=null,i.$broadcast("professionalInfoUpdated",{id:e.vm.id,professionalInfo:e.model}),r.success("Experience updated successfully.")},function(e){r.error("An error occurred while updating experience details.")}))},e.deleteExperience=function(t){s.confirm("Please Confirm","Are you sure want to delete this Experience ?").result.then(function(){r.information("Deleting Experience..."),l.delete({id:e.vm.id,experienceId:t,action:"experience"},function(n){for(var o=e.model.myExperience.length-1;o>=0;o-=1)if(e.model.myExperience[o].id===t){e.model.myExperience.splice(o,1);break}i.$broadcast("professionalInfoUpdated",{id:e.vm.id,professionalInfo:e.model}),r.success("Experience deleted successfully.")},function(e){r.error("An error occurred while deleting experience details.")})})},e.saveEducationDetail=function(t){e.professionalEducation.$valid&&(e.educationEditMode=!1,t.id=Math.random().toString(36).substr(2,4),r.information("Saving education..."),l.save({id:e.vm.id,action:"education"},t,function(n){e.model.educationDetails.push(t),e.selectedEducation=null,i.$broadcast("professionalInfoUpdated",{id:e.vm.id,professionalInfo:e.model}),r.success("Education added successfully.")},function(e){r.error("An error occurred while adding education details.")}))},e.editEducation=function(t){e.selectedEducation=angular.copy(t),e.educationEditMode=!0,e.vm.formSubmitted=!1,e.professionalEducation.$setPristine()},e.updateEducation=function(t){e.professionalEducation.$valid&&(e.educationEditMode=!1,r.information("Updating Education..."),l.update({id:e.vm.id,action:"education"},t,function(n){for(var o=0;o<e.model.educationDetails.length;o+=1)if(e.model.educationDetails[o].id===t.id){e.model.educationDetails[o]=t;break}e.selectedEducation=null,i.$broadcast("professionalInfoUpdated",{id:e.vm.id,professionalInfo:e.model}),r.success("Education updated successfully.")},function(e){r.error("An error occurred while updating education details.")}))},e.deleteEducation=function(t){s.confirm("Please Confirm","Are you sure want to delete this Education ?").result.then(function(){r.information("Deleting education..."),l.delete({id:e.vm.id,educationId:t,action:"education"},function(n){for(var o=e.model.educationDetails.length-1;o>=0;o-=1)if(e.model.educationDetails[o].id===t){e.model.educationDetails.splice(o,1);break}i.$broadcast("professionalInfoUpdated",{id:e.vm.id,professionalInfo:e.model}),r.success("Education deleted successfully.")},function(e){r.error("An error occurred while deleting education details.")})})}}]),appRoot.filter("getById",function(){return function(e,t){for(var i=0,n=e.length;i<n;i+=1)if(+e[i].id==+t)return e[i];return null}}),appRoot.controller("EmployeeJobDetailsController",["$scope","$rootScope","$resource","$stateParams","$state","$uibModal","$filter","$q","WorkerType","EmploymentStatus","TimeType","AppSettings","NotificationService","EmployeeServices","$timeout","LookupServices","PublicProfileServices","TimeDuration","ExitStatus","$route","OrgSettingServices","SharedModel","RemoteClockinApprovalType",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S,C,w,b){e.vm={},e.vm.id=n.id,e.vm.datepickerOptions=angular.copy(u.datepickerOptions),e.vm.modelOptions=angular.copy(u.modelBlurSettings),e.vm.workerType=l,e.vm.EmploymentStatus=c,e.vm.timeType=p,e.vm.timeDuration=g,e.vm.exitStatus=v,e.vm.isemployeeNumberEditable=!1,e.IsEmployeeNumberRequired=!1,e.state=o.current,e.vm.remoteClockinApprovalType=b,e.vm.approvalOptions=[{n:"Use Global Settings",v:e.vm.remoteClockinApprovalType.none.id},{n:"Approval required",v:e.vm.remoteClockinApprovalType.approvalRequired.id},{n:"Approval not required",v:e.vm.remoteClockinApprovalType.approvalNotRequire.id},{n:"Approval not required but required to notify",v:e.vm.remoteClockinApprovalType.requireNotify.id}];var P="employee.job"==e.state.name?m.employee:m.me;e.$on("userDataLoaded",function(t,i){e.dateOfBirth=i.user.personalDetails.dateOfBirth,e.model=angular.copy(i.user.jobDetails),e.model.probationPeriod.unit=isFinite(e.model.probationPeriod.unit)?e.model.probationPeriod.unit:4,e.model.probationPeriod.unit=e.model.probationPeriod.unit.toString(),e.model.leavePlanId=e.model.leavePlanId?e.model.leavePlanId:null,e.model.copyOfJobDetails=angular.copy(i.user.jobDetails),e.model.dateJoined=null==e.model.dateJoined?null:e.model.dateJoined,i.user.jobDetails.employeeNumber||(e.isInvalidEmpNumber=!0),e.vm.isEmployeeActive=!(e.model.exitStatus==e.vm.exitStatus.Initiated.id||e.model.exitStatus==e.vm.exitStatus.Completed.id),e.model.reportTo>0&&f.getEmployeeSearchResult(e.model.reportTo).then(function(t){e.vm.reportTo=t.displayName,e.vm.reportingManager=t})}),e.$on("routeChanged",function(e,t){S.reload()});y(function(){"employee.job"==e.state.name&&C.getEmployeeNumberSettings().then(function(t){if(e.vm.isemployeeNumberEditable=!0,t.isSettingsSet)return e.vm.employeeNumberSettings=t,void(e.IsEmployeeNumberRequired=!t.autoGenerate)}),P.get({action:"jobInfo"},function(t){var i;e.vm.jobTitles=t.jobTitles,e.vm.departments=t.departments,e.vm.shifts=t.shifts,e.vm.weeklyOffs=t.weeklyOffs,e.vm.timingPolicies=t.timingPolicies,e.vm.captureSchemes=t.captureSchemes,e.vm.leavePlans=t.leavePlans,e.vm.locations=t.orgLocations,e.vm.selectedLocation=(i=e.model.locationId,e.vm.locations.find(function(e){return e.id==i})),e.model.jobTitle=e.vm.jobTitles.find(function(t){return t.id==e.model.jobTitleId}),e.model.department=e.vm.departments.find(function(t){return t.id==e.model.departmentId})})},1500),e.updateJobDetails=function(){if(e.jobInfo.$valid){var i=angular.copy(e.model);i.jobTitleId=e.model.jobTitle.id,i.departmentId=e.model.department.id,i.dateJoined=a("date")(i.dateJoined,"yyyy-MM-dd"),d.information("Updating Job Info..."),m.employee.update({id:e.vm.id,action:"jobInfo"},i,function(n){e.model.dateJoined=i.dateJoined.stringToDate(),t.$broadcast("jobDetailsUpdated",{id:e.vm.id,jobDetails:e.model,orgLocationName:e.vm.selectedLocation.name,reportingManagerName:e.vm.reportTo}),d.success("Job Info updated Successfully.")},function(e){d.error("An error occurred while updating job information.")})}else e.$broadcast("validateForm")},e.setReportToId=function(){e.vm.reportingManager=e.vm.reportTo,e.model.reportTo=e.vm.reportTo.id},e.doesEmployeeNumberExist=function(e){var t=s.defer();return m.employee.get({id:0,action:"doesemployeenumberexist",number:e},function(e){e.result?t.resolve(!1):t.resolve(!0)}),t.promise},e.dojValidationWithDob=function(t){if(null!=t){var i=new Date(e.dateOfBirth),n=new Date(t);return null==i||i<n}},e.addNewJobTitle=function(){var t=r.open({templateUrl:"/employeesettings/addnewemployeerole",scope:e,controller:"EmployeeJobTitleController"});e.modalInstance=t,t.result.then(function(t){var i=t.id?t.id:e.model.jobTitleId;i&&(e.vm.jobTitles.find(function(e){return e.id==i})||(e.vm.jobTitles.push(t),e.model.jobTitle=t))},function(){})},e.addDepartment=function(){e.departmentModelInstance=r.open({templateUrl:"add-department-template",controller:"DepartmentsController"}),e.departmentModelInstance.result.then(function(t){if(t.id){var i=t.id?t.id:e.model.departmentId,n=e.vm.departments.find(function(e){return e.id==i});n||(e.vm.departments.push(t),n=t),e.model.department=n}},function(){})},e.checkDateOfJoin=function(){var t=(""+e.vm.employeeNumberSettings.manualEntryBefore).replace(/-/g,"/").replace(/[TZ]/g," ").trim();t&&e.model.dateOfJoining?e.IsEmployeeNumberRequired=""!=e.model.dateOfJoining&&e.model.dateOfJoining.getTime()<new Date(t).getTime():e.IsEmployeeNumberRequired=!1},e.changeEmployeeNumber=function(){e.vm.employeeNumberSettings&&e.vm.employeeNumberSettings.isSettingsSet?e.openEmpNumEdit():(e.modalInstance=r.open({scope:e,templateUrl:"employeenumbertemplate",controller:"EmployeeNumberSettingsController"}),e.modalInstance.result.then(function(t){t&&(e.vm.employeeNumberSettings=angular.copy(t),e.vm.employeeNumberSettings.isSettingsSet=!0,e.model.employeeNumber?e.openEmpNumEdit():m.getEmployee(e.vm.id).then(function(t){e.model.employeeNumber=t.jobDetails.employeeNumber,e.model.employeeNumber||e.openEmpNumEdit()}))}))},e.changeAttendanceNumber=function(){e.attendanceNumberModalInstance=r.open({templateUrl:"editAttendanceNumber",controller:"AttendanceNumberEditController",windowClass:"employee-number-edit",resolve:{modaldata:function(){return e.model},employeeid:function(){return e.vm.id}}}),e.attendanceNumberModalInstance.result.then(function(t){e.model.attendanceNumber=t})},e.openEmpNumEdit=function(){e.employeeNumberModalInstance=r.open({templateUrl:"editEmployeeNumber",controller:"EmployeeNumberEditController",windowClass:"employee-number-edit",resolve:{modaldata:function(){return e.model},employeeid:function(){return e.vm.id},employeeNumberSettings:function(){return e.vm.employeeNumberSettings}}}),e.employeeNumberModalInstance.result.then(function(t){e.model.employeeNumber=t})},e.validateReportingManager=function(){e.vm.reportingManager&&(e.vm.reportTo=e.vm.reportingManager.displayName)}}]),appRoot.controller("EmployeeJobTitleController",["$scope","$resource","$q","NotificationService","LookupServices","JobTitleServices","AppSettings","$uibModalInstance",function(e,t,i,n,o,r,a,s){e.vm={},e.vm.modelOptions=angular.copy(a.modelBlurSettings),e.model={},e.submitted=!1;e.addEmployeeRole=function(t){e.vm.newRole.$valid?(n.information("Adding Job title..."),r.jobTitle.save(t,function(e){if(0!=e.id){n.success("Job title added successfully.");var i={id:e.id,name:t.name,description:t.description};s.close(i)}else n.information("A job title with this name already exists. Please use a different name.")},function(e){s.close(),n.error("An error occurred while adding a job title.")})):e.$broadcast("validateForm")},e.CancelEmployeeRole=function(){s.close({})}}]),appRoot.controller("EmployeeAssetController",["$scope","$resource","$stateParams","AppSettings","AppContext","NotificationService","EmployeeServices","MyProfileServices","AssetServices",function(e,t,i,n,o,r,a,s,l){e.vm={},e.vm.myProfilePage="me.assets"===e.state.name;var c,p,u=function(){e.AssetsListGridOptions=angular.copy(n.gridSettings),e.AssetsListGridOptions.columnDefs=[{field:"name",displayName:"Asset Name",cellTemplate:'<div class="ui-grid-cell-contents"><span><span data-ng-if="grid.appScope.vm.isGlobalAdmin"><a data-ng-if="!grid.appScope.vm.myProfilePage" ui-sref="employee.assets.assetlog({assetId:{{row.entity.id}}})">{{grid.getCellValue(row,col)}}</a><a data-ng-if="grid.appScope.vm.myProfilePage" ui-sref="me.assets.assetlog({assetId:{{row.entity.id}}})">{{grid.getCellValue(row,col)}}</a></span><span data-ng-if="!grid.appScope.vm.isGlobalAdmin">{{grid.getCellValue(row,col)}}</span></span></div>',cellClass:"ui-grid-cell"},{field:"assetId",cellClass:"ui-grid-cell",displayName:"Asset Id"},{name:"assetCategoryName",cellClass:"ui-grid-cell",displayName:"Category"},{name:"assetItemType",cellClass:"ui-grid-cell",displayName:"Item Type"}],e.AssetsListGridOptions.data="vm.assets",e.AssetsListGridOptions.enableColumnMenus=!1};c="employee.assets"==e.state.name?a.employee:s.profile,p={action:"assets"},"employee.assets"==e.state.name&&(p.id=i.id),c.query(p,function(t){e.vm.assets=t},function(e){console.log("error in loading assets.")}),u()}]),appRoot.controller("EmployeeExitController",["$scope","AppSettings","TimeDuration","TerminationReasonType","EmployeeServices","NotificationService","$location","ExitStatus","EmploymentStatus","$route","$state","$stateParams","$filter","$uibModalInstance","EmployeeDetails","OrgSettingServices","$q","PublicProfileServices","Utils","$uibModal","$rootScope","SharedModel",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S,C,w){function b(t){this.id=t.id||0,this.initiatedBy=t.initiatedBy,this.terminationTriggeredBy=t.terminationTriggeredBy||n.Voluntary.id,this.terminationReason=t.terminationReason,this.regretTermination=t.regretTermination,this.isOktoRehire=t.isOktoRehire,this.terminationNotificationDate=t.terminationNotificationDate?new w.DateWithZeroTime(t.terminationNotificationDate):new Date,this.originalNoticePeriodInDays=t.originalNoticePeriodInDays,this.adjustedNoticePeriodInDays=t.adjustedNoticePeriodInDays||0,this.enforceStandardNoticePeriod=!!angular.isUndefined(t.enforceStandardNoticePeriod)||t.enforceStandardNoticePeriod,this.lastWorkingDate=t.lastWorkingDate?new w.DateWithZeroTime(t.lastWorkingDate):null,this.noticePeriodCompensation=t.noticePeriodCompensation||!0,this.payrollEndDate=t.payrollEndDate?new Date(t.payrollEndDate):null,this.note=t.note,this.roleTransitions=t.roleTransitions||new function(e){this.assignEveryOneTo=e.assignEveryOneTo,this.assignIndividually=e.assignIndividually||!1,this.listOfTransitions=e.listOfTransitions||[]}({}),this.setExitInterview=t.setExitInterview,this.ExitInterviewOn=t.exitInterviewOn||null,this.personalEmail=t.personalEmail,this.employeeId=t.employeeId||e.vm.employee.id}function P(e){this.index=e.index,this.title=e.title,this.name=e.name,this.url=e.url,this.isValid=e.isValid,this.templateUrl=e.templateUrl}function T(e){this.id=e.id||v.getGuid(),this.reason=e.reason,this.terminationReasonType=e.terminationReasonType}e.$on("userDataLoaded",function(t,i){e.id=i.user.id,e.vm.jobDetails=angular.copy(i.user.jobDetails)}),e.vm={},e.vm.employee=y||{},e.vm.employee.id=e.vm.employee.id||u.id,e.vm.reporters=[],e.vm.reasons=[],e.vm.timeDuration=i,e.vm.terminationType=n,e.employeeServices=o,e.vm.modelOptions=angular.copy(t.modelBlurSettings),e.vm.datepickerOptions=angular.copy(t.datepickerOptions),e.updatedReporters=[],e.vm.assignEveryOneTo=null,e.vm.terminationReason=null,e.vm.jobDetails=null,e.vm.terminationSteps=[new P({title:"Initiate Employee Exit",name:"Initiation",index:1,isValid:!1,templateUrl:"initiate-exit"}),new P({title:"Transfer Role",name:"Transfer Role",index:2,isValid:!1,templateUrl:"transfer-role"})],e.vm.modelOptions=t.modelBlurSettings,e.model=new b({}),e.date=new Date;var D=!1;e.closeModal=function(){m.close()},e.getFilteredEmployees=function(e){if(e&&e.length>=2){var t=f.defer();return g.searchEmployees(e).then(function(e){0==e.length&&e.push({noResults:!0}),t.resolve(e)}),t.promise}},e.$watch("vm.terminationReason",function(t){if(t)return t.isEmptyReason?(e.vm.terminationReason=null,void e.vm.form.initiationForm.terminationReason.$setPristine()):void(e.model.terminationReason=t.id)}),e.$watch("vm.assignEveryOneTo",function(t){t&&(e.model.roleTransitions.assignEveryOneTo=t.id)}),e.vm.calculateLastWorkingDay=function(){e.model.terminationNotificationDate&&e.model.originalNoticePeriodInDays&&(e.model.enforceStandardNoticePeriod?e.model.lastWorkingDate=new w.DateWithZeroTime(new Date(e.model.terminationNotificationDate).getTime()+864e5*e.model.originalNoticePeriodInDays):e.model.lastWorkingDate=new w.DateWithZeroTime(new Date(e.model.terminationNotificationDate).getTime()+864e5*(isNaN(e.model.adjustedNoticePeriodInDays)?0:e.model.adjustedNoticePeriodInDays)))},e.saveInitiation=function(){e.vm.form.initiationForm.$valid?(e.vm.currentStep=e.vm.terminationSteps[1],e.vm.processedStep=e.vm.terminationSteps[1]):e.$broadcast("validateForm")},e.updateRoleTransitions=function(){e.vm.reporters.length?(e.vm.submitted=!0,e.vm.form.roleTransition.$valid?(e.model.roleTransitions.assignIndividually?(angular.forEach(e.vm.reporters,function(t,i){e.model.roleTransitions.listOfTransitions.push({employeeId:t.id,recipientId:t.newRecipient.id})}),e.model.roleTransitions.assignEveryOneTo=0):e.model.roleTransitions.listOfTransitions=[],e.saveTerminationSettings()):e.$broadcast("validateForm")):e.saveTerminationSettings()};var I=function(){e.vm.employee.jobDetails.exitStatus=D?s.Completed.id:s.Initiated.id,e.vm.employee.jobDetails.employmentStatus=D?l.Relieved.id:l.Working.id,e.vm.employee.jobDetails.exitDate=e.model.lastWorkingDate.stringToDate(),e.vm.employee.jobDetails.effectiveDate=e.model.terminationNotificationDate.stringToDate();var t=angular.copy(e.model);t.terminationReason=e.vm.terminationReason.reason,C.$broadcast("ExitStatusUpdated",{jobDetails:e.vm.employee.jobDetails,isImmediateTermination:D,exitInfo:t})};e.saveTerminationSettings=function(){e.model.lastWorkingDate=d("date")(e.model.lastWorkingDate,"yyyy-MM-dd"),e.model.terminationNotificationDate=d("date")(e.model.terminationNotificationDate,"yyyy-MM-dd"),y.isInitiation?e.employeeServices.initiateEmployeeExit(e.model).then(function(t){D=e.model.lastWorkingDate.stringToDate()<new w.DateWithZeroTime,e.model.id=t.id,D?r.success("Exit process completed Successfully."):r.success("Exit process initiated Successfully."),I()},function(t){r.error("An error occurred while processing exit initiation."),e.vm.employee.jobDetails.exitDate=e.model.lastWorkingDate.stringToDate(),e.vm.employee.jobDetails.effectiveDate=new w.DateWithZeroTime(e.model.terminationNotificationDate)}):e.employeeServices.updateEmployeeExit(e.model).then(function(t){(D=e.model.lastWorkingDate.stringToDate()<new w.DateWithZeroTime)?r.success("Exit process completed Successfully."):r.success("Exit process updated Successfully."),I()}),m.close()},e.setEmployeeRecipients=function(){if(e.model.roleTransitions.assignIndividually)angular.forEach(e.model.roleTransitions.listOfTransitions,function(t,i){var n=d("filter")(e.vm.reporters,{id:t.employeeId}),o=d("filter")(e.vm.recipientsInfo,{id:t.recipientId});n[0]&&o[0]&&(n[0].newRecipient=o[0])});else{var t=d("filter")(e.vm.recipientsInfo,{id:e.model.roleTransitions.assignEveryOneTo});t[0]&&(e.vm.assignEveryOneTo=t[0])}},e.addNewTerminationReason=function(){e.vm.newReason=new T({}),e.vm.newReason.terminationReasonType=e.model.terminationTriggeredBy,e.vm.isEdit=!1,e.submitted=!1;var t=S.open({templateUrl:"AddExitReasonTemplate",scope:e});e.modalInstance=t},e.saveReason=function(){if(e.vm.TerminationReasonForm.exitReason.$valid){var t=d("filter")(e.vm.reasons,{reason:void 0}).concat(e.vm.newReason);h.organization.update({action:"terminationreasons"},t,function(t){e.vm.reasons.push(e.vm.newReason),e.vm.terminationReason=angular.copy(e.vm.newReason),e.model.terminationTriggeredBy=e.vm.newReason.terminationReasonType},function(t){r.error("An error occurred while adding a custom termination reason."),e.vm.terminationReason=null}),e.modalInstance.close()}else e.submitted=!0,e.$broadcast("validateForm")},e.updateTerminationSettings=function(){e.vm.terminationReason.terminationReasonType=e.model.terminationTriggeredBy;var t=angular.copy(e.vm.reasons).concat(new T(e.vm.terminationReason));h.organization.update({action:"terminationreasons"},t,function(e){},function(t){r.error("An error occurred while adding a custom termination reason."),e.vm.terminationReason=null,e.vm.currentStep=e.vm.terminationSteps[0]})},e.filterReason=function(t){return t.terminationReasonType==e.model.terminationTriggeredBy||t.isEmptyReason},e.cancel=function(){e.modalInstance.close()},e.gotoStep=function(t){e.model.id?e.vm.currentStep=e.vm.terminationSteps[t-1]:e.vm.processedStep.index>=t&&(e.vm.currentStep=e.vm.terminationSteps[t-1])},e.setReason=function(){e.vm.terminationReason&&!d("filter")(e.vm.reasons,{terminationReasonType:e.model.terminationTriggeredBy,id:e.vm.terminationReason.id}).length&&(e.vm.terminationReason=null,e.vm.form.initiationForm.terminationReason.$setPristine())},e.$watch("vm.currentStep",function(t,i){t&&2==t.index&&e.setEmployeeRecipients()}),f.all([h.getTerminationReasons(),o.getEmployeeExitInfo(e.vm.employee.id)]).then(function(t){e.vm.reasons=t[0].terminationReasons||[],e.vm.recipientsInfo=t[1].exitInfo.recipientsInfo||[],e.vm.recipientsInfo=t[1].exitInfo.recipientsInfo||[],e.vm.reporters=t[1].exitInfo.reporters||[],y.isInitiation?(e.model.originalNoticePeriodInDays=t[1].noticePeriod?function(t){var i=0,n=t.duration;switch(t.unit){case e.vm.timeDuration.days.id:i=n;break;case e.vm.timeDuration.weeks.id:i=7*n;break;case e.vm.timeDuration.months.id:i=30*n}return i}(t[1].noticePeriod):0,e.vm.calculateLastWorkingDay()):(e.model=new b(t[1].exitInfo.terminationDetails),e.model.terminationReason&&(e.vm.terminationReason=d("filter")(e.vm.reasons,{id:e.model.terminationReason})[0]),e.model.roleTransitions.assignIndividually||(e.vm.assignEveryOneTo=d("filter")(e.vm.recipientsInfo,{id:e.model.roleTransitions.assignEveryOneTo})[0])),e.model.personalEmail="null"!=t[1].exitInfo.personalEmail?t[1].exitInfo.personalEmail:"";var i=new T({});i.isEmptyReason=!0,e.vm.reasons.unshift(i)}),e.vm.currentStep=e.vm.terminationSteps[0],e.vm.processedStep=e.vm.terminationSteps[0]}]),appRoot.controller("EmployeeFinancialDetailsController",["$scope","$stateParams","AppSettings","NotificationService","EmployeeServices","LookupServices","BankAccountType","SalaryPaymentMode","AppContext","$state","MyFinanceServices","EmployeeModel",function(e,t,i,n,o,r,a,s,l,c,p,u){e.vm={},e.vm.niceScrollOptions=angular.copy(i.scrollSettings),e.vm.modelOptions=angular.copy(i.modelBlurSettings),e.vm.datepickerOptions=angular.copy(i.datepickerOptions),e.vm.bankAccountType=a,e.vm.salaryPaymentMode=s;var d=function(){r.lookup.query({id:"banks"},function(t){e.vm.banks=t,e.model.bankDetails.bankId&&(e.model.bankDetails.bank=e.vm.banks.find(function(t){return t.id==e.model.bankDetails.bankId}))})};e.save=function(){if(e.financialInfo.$valid){e.model.bankDetails.bankId=e.model.bankDetails.bank.id,e.model.bankDetails.bankName=e.model.bankDetails.bank.name;var t=angular.copy(e.model);t.pfJoiningDate=null==t.pfJoiningDate?null:t.pfJoiningDate.dateOnlyString(),n.information("updating Financial Info...");var i=angular.copy(e.vm.params);e.financeService.savefinancialInfo(i,e.model,function(e){n.success("Financial info updated successfully.")},function(e){n.error("An error occurred while updating financial information.")})}},function(){if(e.vm.params={},c.includes("employee"))e.financeService=o,e.vm.params.id=t.id,e.$on("userDataLoaded",function(t,i){e.model=i.user.financialDetails,d(),e.model.pfJoiningDate=null==e.model.pfJoiningDate?null:new Date(e.model.pfJoiningDate)});else if(c.includes("myfinances")){e.financeService=p;var i=angular.copy(e.vm.params);e.financeService.getFinancialInfo(i).then(function(t){e.model=new u.FinancialDetails(t),d(),e.model.pfJoiningDate=null==e.model.pfJoiningDate?null:new Date(e.model.pfJoiningDate)})}}()}]),appRoot.factory("EmployeeModel",["SocialNetworks","SharedModel","SalaryPaymentMode",function(e,t,i){function n(e){this.unit=e.unit,this.duration=e.duration}function o(e){this.id=e.id,this.relationType=e.relationType,this.firstName=e.firstName,this.lastName=e.lastName,this.email=e.email,this.mobile=e.mobile,this.profession=e.profession,this.dateOfBirth=null!=e.dateOfBirth?e.dateOfBirth.stringToDateWithTime():null,this.gender=e.gender||0}function r(i){this.firstName=i.firstName,this.middleName=i.middleName,this.lastName=i.lastName,this.displayName=i.displayName,this.email=i.email,this.location=i.location,this.gender=i.gender,this.bloodGroup=i.bloodGroup,this.dateOfBirth=i.dateOfBirth,this.maritalStatus=i.maritalStatus,this.marriageDate=i.marriageDate,this.iSPhysicallyHandicapped=i.isPhysicallyHandicapped,this.mobilePhone=i.mobilePhone,this.homePhone=i.homePhone,this.workPhone=i.workPhone,this.skypeId=i.skypeId,this.personalEmail=i.personalEmail,this.currentAddress=i.currentAddress?new t.Address(i.currentAddress):new t.Address({}),this.permanentAddress=i.permanentAddress?new t.Address(i.permanentAddress):new t.Address({}),this.relations=i.myRelations?$.map(i.myRelations,function(e){return new o(e)}):[],this.socialNetworks=i.socialNetworks?$.map(i.socialNetworks,function(t){return new function(t){this.id=t.socialNetworkType,this.link=t.link,this.type=e.getById(t.socialNetworkType)}(t)}):[]}function a(e){this.professionalSummary=e.professionalSummary,this.status=e.status,this.myExperience=e.myExperience?$.map(e.myExperience,function(e){return new function(e){this.id=e.id,this.companyName=e.companyName,this.title=e.title,this.location=e.location,this.from=new Date(e.from),this.to=new Date(e.to),this.description=e.description}(e)}):[],this.educationDetails=e.educationDetails?$.map(e.educationDetails,function(e){return new function(e){this.id=e.id,this.degree=e.degree,this.specialization=e.specialization,this.university=e.university,this.percentage=e.percentage,this.from=new Date(e.from),this.to=new Date(e.to)}(e)}):[]}function s(e){e&&(this.salaryPaymentMode=e.salaryPaymentMode,this.bankId=this.salaryPaymentMode==i.BankTransfer.id?e.bankId:null,this.bankName=this.salaryPaymentMode==i.BankTransfer.id?e.bankName:null,this.nameOnTheAccount=this.salaryPaymentMode==i.BankTransfer.id?e.nameOnTheAccount:null,this.accountNumber=this.salaryPaymentMode==i.BankTransfer.id?e.accountNumber:null,this.ifscCode=this.salaryPaymentMode==i.BankTransfer.id?e.ifscCode:null,this.validState=e.validState,this.reset=function(){this.constructor(this)},this.getSalaryPaymentName=function(){return i.getById(this.salaryPaymentMode).title})}function l(e){this.bankDetails=new s(e.bankDetails),this.ispfEligible=e.ispfEligible,this.pfNumber=e.pfNumber,this.pfScheme=e.pfScheme,this.pfJoiningDate=e.pfJoiningDate,this.pan=e.pan,this.panNumber=e.pan?e.pan.panNumber:null,this.isesiEligible=e.isesiEligible,this.esiNumber=e.esiNumber,this.aadhaar=e.aadhaar}function c(e){this.employeeNumber=e.employeeNumber,this.attendanceNumber=e.attendanceNumber,this.jobTitleId=e.jobTitleId,this.secondaryJobTitle=e.secondaryJobTitle,this.locationId=e.locationId,this.departmentId=e.departmentId,this.timeType=e.timeType,this.employmentStatus=e.employmentStatus,this.workerType=e.workerType,this.reportTo=e.reportTo,this.dateJoined=e.dateJoined,this.exitDate=e.exitDate,this.weeklyOffPolicyId=e.weeklyOffPolicyId,this.expensePolicyId=e.expensePolicyId,this.holidayListId=e.holidayListId,this.shiftPolicyId=e.shiftPolicyId,this.trackingPolicyId=e.trackingPolicyId,this.attendanceCaptureSchemeId=e.attendanceCaptureSchemeId,this.leavePlanId=e.leavePlanId,this.probationPeriod=null==e.probationPeriod?new n({}):new n(e.probationPeriod),this.probationEndDate=e.probationEndDate,this.allowRemoteClockIn=e.allowRemoteClockIn,this.allowWebClockIn=e.allowWebClockIn,this.remoteClockInApprovalType=e.remoteClockInApprovalType,this.requireWebClockInApproval=e.requireWebClockInApproval,this.requireWFHApproval=e.requireWFHApproval,this.allowWFH=e.allowWFH,this.requireWebClockInComment=e.requireWebClockInComment,this.effectiveDate=e.effectiveDate,this.noticePeriod=null==e.noticePeriod?new n({}):new n(e.noticePeriod),this.terminationType=e.terminationType,this.notes=e.notes,this.exitStatus=e.exitStatus,this.exitInitiatedBy=e.exitInitiatedBy,this.requireRemoteClockInComment=e.requireRemoteClockInComment,this.costCenterId=e.costCenterId,this.payBandId=e.payBandId,this.payGradeId=e.payGradeId}function p(e){this.displayName=e.displayName,this.orgLocation=e.orgLocationName,this.email=e.email,this.mobilePhone=e.mobilePhone,this.skypeId=e.skypeId,this.employeeRole=e.jobTitle,this.socialStatus=e.socialStatus,this.reportingTo=e.reportingTo,this.reportingManager=e.reportingManager,this.profileImageUrl=e.profileImageUrl,this.departmentName=e.departmentName,this.isReportingManager=e.isReportingManager,this.isApproverActive=e.isApproverActive}function u(e){this.professionalSummary=e.professionalSummary,this.educationDetails=e.educationDetails,this.experienceDetails=e.experienceDetails}return{Employee:function(e){this.profileImageUrl=e.profileImageUrl,this.employeeLoginStatus=null!=e.loginId,this.accountStatus=e.accountStatus,this.invitationStatus=e.invitationStatus,this.personalDetails=new r(e),this.inProbation=e.inProbation,this.professionalDetails=new a(e),this.jobDetails=new c(e.jobDetails),this.financialDetails=new l(e),this.customProperties=e.customProperties||[]},PublicProfile:function(e){this.employeeHeader=new p(e),this.publicProfileSummary=new u(e)},MyProfile:function(e){this.profileImage=e.profileImage,this.personalDetails=new r(e),this.jobDetails=new c(e.jobDetails),this.professionalDetails=new a(e),this.financialDetails=new l(e),this.customProperties=e.customProperties||[]},MeProfile:function(e){this.employeeHeader=new p(e),this.publicProfileSummary=new u(e),this.mobilePhone=e.mobilePhone,this.homePhone=e.homePhone,this.workPhone=e.workPhone,this.skypeId=e.skypeId,this.personalEmail=e.personalEmail,this.currentAddress=e.currentAddress?new t.Address(e.currentAddress):new t.Address({}),this.permanentAddress=e.permanentAddress?new t.Address(e.permanentAddress):new t.Address({}),this.relations=e.relations?$.map(e.relations,function(e){return new o(e)}):[]},EmployeeHeader:p,FinancialDetails:l,BankAccountDetails:s,ResetPasswordModel:function(e){this.email=e.email,this.password=e.password,this.confirmPassword=e.confirmPassword}}}]),appRoot.controller("MeController",["$scope","$resource","$filter","$stateParams","$state","$rootScope","$q","$uibModal","MyProfileServices","EmployeeModel","RelationTypes","AppSettings","LookupServices","$timeout","CustomFieldService","FieldVisibility","FieldPermissionRoles","EmployeesService","SupportedViews","CompositeViewType","AppContext","AppFeatures",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S,C,w){e.vm={},e.vm.relationTypes=p,e.vm.fileUploadSettings=angular.copy(u.fileUploadSettings),e.vm.fileUploadSettings.acceptFileTypes=/(\.|\/)(gif|jpe?g|png)$/i,e.vm.showSummary=!1,e.model=null,e.vm.fieldVisibility=h,e.vm.fieldPermissionRoles=f,e.vm.dayType=["working day","holiday","full day weekly off","first half weekly off","second half weekly off"],e.$on("$stateChangeSuccess",function(t,i,n,r,a){e.vm.state=o.current,null!=e.model&&m(function(){e.$broadcast("userDataLoaded",{user:e.model})},0)}),e.updateProfilePicture=function(){s.open({templateUrl:"profile-picture-template",scope:e,controller:"UpdateEmployeeProfilePictureController",controllerAs:"ctrl",resolve:{profileImageInfo:function(){return{imageUrl:e.vm.publicProfile.profileImageUrl,employeeId:e.vm.employeeId,isMyProfile:!0}}}}).result.then(function(t){e.vm.publicProfile.profileImageUrl=t})},e.$on("relationsUpdated",function(t,i){e.vm.publicProfile.id==i.id&&(e.model.personalDetails.relations=i.relations),e.vm.publicProfile.relations=i.relations}),e.$on("profilePictureUpdated",function(t,i){e.vm.employeeId==i.id&&(e.vm.publicProfile.profileImageUrl=i.imageUrl+"?"+(new Date).getTime())}),e.$on("professionalInfoUpdated",function(t,i){e.model.professionalDetails=i.professionalInfo,angular.forEach(i.professionalInfo,function(t,i){e.vm.publicProfile.hasOwnProperty(i)&&(e.vm.publicProfile[i]=t)}),e.vm.publicProfile.experienceDetails=i.professionalInfo,e.vm.experienceDetails.forEach(function(e){e.dateOfJoining&&e.dateOfRelieving&&(e.dateOfJoining=new Date(e.dateOfJoining),e.dateOfRelieving=new Date(e.dateOfRelieving))})}),e.$on("professionalSummaryUpdated",function(t,i){e.vm.publicProfile.professionalSummary=i.professionalSummary}),e.$on("educationDetailsUpdated",function(t,i){e.vm.publicProfile.educationDetails=i.educationDetails,e.vm.educationDetails.forEach(function(e){e.yearOfJoining&&e.yearOfCompletion&&(e.yearOfJoining=new Date(e.yearOfJoining),e.yearOfCompletion=new Date(e.yearOfCompletion))})}),e.$on("primaryDetailsUpdated",function(t,i){e.vm.publicProfile.displayName=i.primaryDetails.displayName}),e.$on("contactInfoUpdated",function(t,i){e.vm.publicProfile.email=i.contactInfo.workEmail,e.vm.publicProfile.mobilePhone=i.contactInfo.mobilePhone,e.vm.publicProfile.workPhone=i.contactInfo.workPhone,e.vm.publicProfile.homePhone=i.contactInfo.residencePhone,e.vm.publicProfile.skypeId=i.contactInfo.skypeId}),e.$on("addressDetailsUpdated",function(t,i){e.vm.publicProfile.currentAddress=i.addressDetails.currentAddress,e.vm.publicProfile.permanentAddress=i.addressDetails.permanentAddress}),e.$on("resignSubmitted",function(t,i){e.model.selfResignDetails=i.resignDetails}),e.$on("profileUpdated",function(t,i){e.model.personalDetails=i.userProfile,angular.forEach(i.userProfile,function(t,i){e.vm.publicProfile.hasOwnProperty(i)&&(e.vm.publicProfile[i]=t)})});var b=function(){e.vm.fieldVisibilityPermissions={};var t=e.vm.fieldPermissionRoles.Self.id;e.vm.customFieldConfig.sections.forEach(function(i){i.fieldGroups.forEach(function(i){i.fields.forEach(function(i){var n=i.fieldPermissions.find(function(e){return e.role==t});e.vm.fieldVisibilityPermissions[i.name.toLowerCase()]=n.visibility!=e.vm.fieldVisibility.Hidden.id})})})};a.all([l.getPublicProfile(),y.getView(S.EmployeeProfile.id,v.EmployeeProfile.value,v.EmployeeProfile.value),l.getMyProfile(),g.getMyResignationDetails(),l.getEducationDetails(),l.getExperienceDetails()]).then(function(t){e.vm.employeeId=t[0].id,e.vm.publicProfile=t[0],e.vm.publicProfile.profileImageUrl=null==t[0].profileImageUrl?null:t[0].profileImageUrl+"?"+(new Date).getTime(),e.vm.customFieldConfig=t[1],e.vm.educationDetails=t[4],e.vm.experienceDetails=t[5],e.vm.experienceDetails.forEach(function(e){e.dateOfJoining&&e.dateOfRelieving&&(e.dateOfJoining=new Date(e.dateOfJoining),e.dateOfRelieving=new Date(e.dateOfRelieving))}),e.vm.educationDetails.forEach(function(e){e.yearOfJoining&&e.yearOfCompletion&&(e.yearOfJoining=new Date(e.yearOfJoining),e.yearOfCompletion=new Date(e.yearOfCompletion))}),b(),e.model=t[2],e.model.jobDetails&&(e.model.jobDetails.dateJoined=e.model.jobDetails.dateJoined?e.model.jobDetails.dateJoined.stringToDate():e.model.jobDetails.dateJoined,e.model.jobDetails.probationEndDate=null==e.model.jobDetails.probationEndDate?null:e.model.jobDetails.probationEndDate.stringToDate()),e.model.personalDetails&&(e.model.personalDetails.marriageDate=null==e.model.personalDetails.marriageDate?null:e.model.personalDetails.marriageDate.stringToDate(),e.model.personalDetails.dateOfBirth=null==e.model.personalDetails.dateOfBirth?null:e.model.personalDetails.dateOfBirth.stringToDate()),e.$broadcast("userDataLoaded",{user:e.model}),e.model.selfResignDetails=t[3].exitDetails,C.isFeaturePresent(w.Attendance.title)&&l.getclockInDetails().then(function(t){e.model.clockInDetails=t}),e.vm.hasTimelineFeature=C.isFeaturePresent(w.Timeline.title),$("#summaryNav").addClass("active")})}]),appRoot.controller("EmployeeLeaveDetailsController",["$scope","$resource","$uibModal","$stateParams",function(e,t,i,n){e.vm={},e.vm.id=n.id}]),appRoot.controller("EmployeeBenefitDetailsController",["$scope","$resource","$stateParams",function(e,t,i){e.vm={},e.vm.id=i.id}]),appRoot.controller("EmployeeTrainingDetailsController",["$scope","$resource","$stateParams",function(e,t,i){e.vm={},e.vm.id=i.id}]),appRoot.controller("EmployeeSearchController",["$scope","$resource","$stateParams",function(e,t,i){e.vm={},e.vm.id=i.id}]),function(e){!function(e){var t=function(){function e(e){var t=this;this.resource=e,this.leaves=this.resource("/api/employee/:id/leave/:action/:requestId",{id:"@id",action:"@action",requestId:"@requestId"},{update:{method:"PUT"}}),this.compOffs=this.resource("/api/employee/:id/leave/compoff/:action/:requestId",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.getEmployeeModuleStatus=function(e){return t.leaves.query({action:"employeemodulestatus",id:e}).$promise},this.getLeavePlan=function(e){return t.leaves.get({action:"leaveplan",id:e}).$promise}}return e.prototype.getLeaveStats=function(e,t){return void 0===t&&(t=null),this.leaves.get({action:"stats",id:e,forDate:t}).$promise},e.prototype.getWeeklyOffPolicy=function(e){return this.leaves.get({action:"weeklyoffpolicy",id:e}).$promise},e.prototype.approveLeaveRequest=function(e,t){return this.leaves.save({action:"approve",id:e,requestId:t}).$promise},e.prototype.rejectLeaveRequest=function(e,t,i){return this.leaves.save({action:"reject",id:e,requestId:t,rejectReason:i},{}).$promise},e.prototype.approveCompOffRequest=function(e,t){return this.compOffs.save({action:"approve",id:e,requestId:t},{}).$promise},e.prototype.rejectCompOffRequest=function(e,t){return this.compOffs.save({action:"reject",id:e,requestId:t},{}).$promise},e.prototype.cancelCompoffLeaveRequest=function(e,t,i){return this.compOffs.update({action:"cancel",id:e,requestId:t},i).$promise},e.$inject=["$resource"],e}();e.EmployeeLeavesServices=t,angular.module("leaves").service("EmployeeLeavesServices",t)}(e.Services||(e.Services={}))}(Leaves||(Leaves={})),function(e){!function(e){!function(e){var t=function(){function e(e){var t=this;this.resource=e,this.pmsEmployee=this.resource("/api/pms/employees/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.getEmployeeProfile=function(e){return t.pmsEmployee.get({action:"pmsprofile",id:e}).$promise}}return e.prototype.getEmployeeCurrentReview=function(e){return this.pmsEmployee.get({action:"currentreview",id:e}).$promise},e.prototype.getEmployeeCompetencies=function(e){return this.pmsEmployee.query({action:"competencies",id:e}).$promise},e.prototype.getEmployeeFeedback=function(e){return this.pmsEmployee.query({action:"feedback",id:e}).$promise},e.prototype.getEmployeeGoals=function(e){return this.pmsEmployee.query({action:"goals",id:e}).$promise},e.$inject=["$resource"],e}();e.EmployeePerformanceService=t,angular.module("xhr").service("EmployeePerformanceService",t)}(e.Services||(e.Services={}))}(e.Performance||(e.Performance={}))}(Employee||(Employee={})),function(e){var t,i;e.Components||(e.Components={}),t=function(){function e(e,t,i,n,o,r,a,s){this.scope=e,this.qService=t,this.filterService=i,this.publicProfileService=n,this.myProfileService=o,this.appContext=r,this.appSettings=a,this.utilService=s,this.scrollSettings=angular.copy(this.appSettings.fixedScrollSetting),this.myProfile=angular.copy(this.appContext.myPublicProfile)}return e.prototype.getMatchedEmployees=function(e){return this.utilService.getMatchedEmployees(e)},e.prototype.selectEmployee=function(e){this.selectedEmployee=e},e.$inject=["$scope","$q","$filter","PublicProfileServices","MyProfileServices","AppContext","AppSettings","Utils"],e}(),i=function(){function e(e,t){var i=this;this.filterService=e,this.publicProfileServices=t,this.restrict="AE",this.replace=!1,this.scope={selectedEmployee:"="},this.i=0,this.animationDuration=300,this.link=function(e,t,n){i.element=t,e.$watch("selectedEmployee",function(e,n){e!=n&&i.publicProfileServices.getOrgChartData(e.id).then(function(e){i.setEmployeeHirearchy(e),i.initOrgTree(t)})}),i.publicProfileServices.getOrgChartData(0).then(function(e){i.setEmployeeHirearchy(e),i.initOrgTree(t)})},this.zoomListner=d3.behavior.zoom().scaleExtent([.1,10]).on("zoom",function(e){i.zoomed()})}return e.prototype.setEmployeeHirearchy=function(e){var t=this;if(this.forEmployee=e.employee,this.forEmployee.children=e.reportees.filter(function(e){return e.id!=t.forEmployee.reportingTo}),e.reportingManager&&e.reportingManager.id!=e.employee.id){this.currentEmployee=e.reportingManager,this.currentEmployee.children=e.peers.filter(function(e){return e.id!=t.currentEmployee.id});var i=this.currentEmployee.children.find(function(e){return e.id==t.forEmployee.id});if(i){var n=this.currentEmployee.children.indexOf(i);this.currentEmployee.children[n]=this.forEmployee}else this.currentEmployee.children.push(this.forEmployee)}else this.currentEmployee=this.forEmployee;this.maxChildrenCount=e.peers.length||e.reportees.length||0},e.prototype.initOrgTree=function(e){var t=this;this.rootNode=this.currentEmployee;var i=100,n=20,o=120,r=(200*this.maxChildrenCount||100)-i-n;this.rootNode.x0=r/2,this.rootNode.y0=0;r>=550&&this.maxChildrenCount;this.treeHandle=d3.layout.tree().size([r,"100%"]),this.diagonalFunction=d3.svg.diagonal().projection(function(e){return[e.y+20,e.x]}),e.html(""),this.svgHandle=d3.select(e.get(0)).append("svg").attr("width","100%").attr("class","xhrOrgTree").attr("height",r+i+n).call(this.zoomListner).append("g").attr("transform","translate("+o+","+i+")"),this.rootNode.children&&this.rootNode.children.forEach(function(e){t.collapse(e)}),this.update(this.rootNode)},e.prototype.collapse=function(e){e.children&&(e._children=e.children,e.children=null)},e.prototype.associateChildren=function(e){var t=this;e.id==this.currentEmployee.reportingTo?(this.currentEmployee=e,this.publicProfileServices.getEmployeeReportees(e.id).then(function(i){e.children=i,t.initOrgTree(t.element)})):this.publicProfileServices.getEmployeeReportees(e.id).then(function(i){e.children=i,e.parent&&e.parent.children&&e.parent.children.filter(function(t){return t.id!=e.id}).forEach(function(e){t.collapse(e)}),t.update(e)})},e.prototype.click=function(e){var t=this;if(!e.children&&!e._children)return this.associateChildren(e);e.parent&&e.parent.children&&e.parent.children.filter(function(t){return t.id!=e.id}).forEach(function(e){t.collapse(e)}),e.children?(e._children=e.children,e.children=null):(e._children.forEach(function(e){t.collapse(e)}),e.children=e._children,e._children=null),this.update(e)},e.prototype.update=function(e){var t=this,i=this.treeHandle.nodes(this.rootNode).reverse();this.setHierarchyColor(i);var n=this.treeHandle.links(i);i.forEach(function(e){return e.y=450*e.depth});var o=this.svgHandle.selectAll("g.node").data(i,function(e){return e.id||(e.id=++t.i)}),r=o.enter().append("g").attr("class","node").attr("transform",function(t){return"translate("+e.y0+","+e.x0+")"}).on("click",function(e){t.click(e)});r.append("rect").attr("r",1e-6).attr("x","-30").attr("y","-50").attr("height","108").attr("width","276").style("stroke","none"),r.append("foreignObject").attr("x","-32").attr("y","-49").attr("width","275").attr("height","110").append("xhtml:body").style("font","12px").html(function(e){return t.getNodeContent(e)});var a=o.transition().duration(this.animationDuration).attr("transform",function(e){return"translate("+e.y+","+e.x+")"});a.select("rect").attr("r",4.5),a.select("text");var s=o.exit().transition().duration(this.animationDuration).attr("transform",function(t){return"translate("+e.y+","+e.x+")"}).remove();s.select("rect").attr("r",1e-6),s.select("text").style("fill-opacity",1e-6);var l=this.svgHandle.selectAll("path.link").data(n,function(e){return e.target.id});l.enter().insert("path","g").attr("class","link").attr("d",function(i){var n={x:e.x0,y:e.y0+20};return t.diagonalFunction({source:n,target:n})}),l.transition().duration(this.animationDuration).attr("d",this.diagonalFunction).style("stroke",function(e){if(e.target.routed)return"#3D9EED"}),l.exit().transition().duration(this.animationDuration).attr("d",function(i){var n={x:e.x,y:e.y+20};return t.diagonalFunction({source:n,target:n})}).remove(),i.forEach(function(e){e.x0=e.x,e.y0=e.y}),this.setMaxHeight()},e.prototype.getNodeContent=function(e){var t=e.firstName?e.firstName[0]+e.lastName[0]:(e.displayName.split(" ")[0]?e.displayName.split(" ")[0].charAt(0):"")+(e.displayName.split(" ")[1]?e.displayName.split(" ")[1].charAt(0):""),i=null==e.profileImageUrl?"<div class='img-circle img-initials' style='height:50px;width:50px;padding:10px;font-size:20px'>"+t+"</div>":"<img src='"+this.filterService("storageAccountUrl")("50x50/"+e.profileImageUrl)+"' class='img-circle' height='50' width='50' />";return"<div class='org-tree-item clearfix "+(e.routed?"active":"")+"'><div class='dept-heading text-ellipsis'>"+(e.department||"")+"</div><div class='tree-item-body'><div class='img-details'>"+i+"</div><div class='item-details horizontal-margin-sm'><p class='text-ellipsis'>"+e.displayName+"</p><p class='text-ellipsis font-smaller text-muted'>"+(e.jobTitle||"")+"</p><p class='text-ellipsis font-smaller text-muted upper-case'>"+(e.location||"")+"</p><div class='reportee-count-container'><span class='reportee-count'>"+e.reporteeCount+"</span></div></div></div></div>"},e.prototype.setMaxHeight=function(){var e=this;d3.nest().key(function(e){return e.depth}).entries(this.treeHandle.nodes(this.rootNode).reverse()).reverse().forEach(function(t){t.values.length>e.maxChildrenCount&&(e.maxChildrenCount=t.values.length)});var t=200*this.maxChildrenCount>=550?200*this.maxChildrenCount:550;d3.select("svg.xhrOrgTree").attr("height",t),this.treeHandle.size([200*this.maxChildrenCount,"100%"])},e.prototype.setHierarchyColor=function(e){var t=this,i=e.find(function(e){return e.id==t.forEmployee.id});i&&(i.routed=!0);for(var n=this.forEmployee.parent;void 0!==n;)n.routed=!0,n=n.parent},e.prototype.zoomed=function(){this.svgHandle.attr("transform","translate("+d3.event.translate+")scale("+d3.event.scale+")"),d3.event&&d3.event.sourceEvent&&d3.event.sourceEvent.stopImmediatePropagation()},e.factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["$filter","PublicProfileServices"],t},e}(),angular.module("xhr").controller("OrganizationTreeController",t).directive("xhrOrgTree",i.factory())}(Employee||(Employee={})),appRoot.controller("PublicProfileController",["$scope","$resource","$filter","$stateParams","$state","$rootScope","$q","PublicProfileServices","EmployeeModel","AppContext","$location","CustomFieldService","FieldVisibility","FieldPermissionRoles","SupportedViews","CompositeViewType",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h){e.vm={},e.vm.id=n.id,e.vm.fieldVisibility=d,e.vm.fieldPermissionRoles=m,e.$on("$stateChangeSuccess",function(t,i,n,r,a){e.vm.state=o.current});var f=function(){e.vm.fieldVisibilityPermissions={};var t=i("includedByState")("me")?e.vm.fieldPermissionRoles.Self.id:i("includedByState")("myteamemployee")||i("includedByState")("employee")?e.vm.fieldPermissionRoles.ReportingManagerAndUp.id:e.vm.fieldPermissionRoles.EveryOne.id;e.vm.customFieldConfig.sections.forEach(function(i){i.fieldGroups.forEach(function(i){i.fields.forEach(function(i){var n=i.fieldPermissions.find(function(e){return e.role==t});e.vm.fieldVisibilityPermissions[i.name.toLowerCase()]=n.visibility!=e.vm.fieldVisibility.Hidden.id})})})};a.all([s.getPublicProfile(e.vm.id),u.getView(h.EmployeeProfile.id,y.EmployeeProfile.value,y.EmployeeProfile.value)]).then(function(t){e.vm.publicProfile=t[0],e.vm.customFieldConfig=t[1],f()})}]),function(e){!function(e){var t=function(){function e(e,t){var i=this;this._urlRouterProvider=e,this._stateProvider=t,this.registerEmployeeProfileRoutes=function(){i._stateProvider.state("employee",{url:"/employee/:id",template:"<employee-profile></employee-profile>",title:"Employee Information",parentState:"employee",description:"This page contains all the information about employee."}).state("employee.summary",{url:"/summary",template:'<employee-profile-summary field-visibility-permissions = "ctrl.fieldVisibilityPermissions" data-ng-if="ctrl.fieldVisibilityPermissions"></employee-profile-summary>',title:"Employee Summary",parentState:"employee",description:"This page contains all the basic information of an employee like name,email id,address,family details..etc."}).state("employee.job",{url:"/job",template:'<employee-job-details employee-profile = "ctrl.model"></employee-job-details>',title:"Employee Job",parentState:"employee",description:"This page contains all the job details of an employee."}).state("employee.profile",{url:"/profile",template:'<employee-profile-complete-details employee-profile = "ctrl.model"></employee-profile-complete-details>',title:"Employee Profile",parentState:"employee",description:"This page contains all the basic information of an employee like name,email id,address,family details..etc."}).state("employee.documents",{url:"/documents",template:"<employee-document-details></employee-document-details>",title:"Documents Information",parentState:"employee",description:"This page contains employee mandatory,onboarding and financial documents."}).state("employee.assets",{url:"/assets",template:"<employee-assets></employee-assets>",title:"Assets",parentState:"employee"}).state("employee.initiateexit",{url:"/initiateexit",title:"Employee Initiate Exit In Progress",description:"This page is to start the Initiate Exit of Employee",onEnter:["$state","$uibModal","$stateParams","EmployeeProfileActionsService",function(e,t,i,n){t.open({templateUrl:"/employeeprofile/initiateexit",windowClass:"full-screen-modal dark-modal employee-exit-modal action-content",controller:"RMEmployeeExitController",controllerAs:"ctrl",keyboard:!1,resolve:{EmployeeId:function(){return i.id},myTeamService:function(){return null},ExitService:function(){return n},isUpdateRequest:function(){return!0},isThroughUrl:function(){return!0}}}).result.then(function(e){e.isThroughUrl&&window.history.back()})}]}).state("employee.updateinitiateexit",{url:"/updateinitiateexit",title:"Update Employee Initiate Exit",description:"This page is to start the Initiate Exit of Employee",onEnter:["$state","$uibModal","$stateParams","EmployeeProfileActionsService",function(e,t,i,n){t.open({templateUrl:"/employeeprofile/initiateexit",windowClass:"full-screen-modal dark-modal employee-exit-modal action-content",controller:"RMEmployeeExitController",controllerAs:"ctrl",keyboard:!1,resolve:{EmployeeId:function(){return i.id},myTeamService:function(){return null},ExitService:function(){return n},isUpdateRequest:function(){return!0},isThroughUrl:function(){return!0}}}).result.then(function(e){e.isThroughUrl&&window.history.back()})}]}).state("employee.takeexitaction",{url:"/takeexitaction",title:"Approve/Reject Employee Exit Request",description:"This page is to approve or reject the employee exit request",onEnter:["$state","$uibModal","$stateParams","EmployeeProfileActionsService",function(e,t,i,n){t.open({templateUrl:"/employeeprofile/initiateexit",windowClass:"full-screen-modal dark-modal employee-exit-modal action-content",controller:"RMEmployeeExitController",controllerAs:"ctrl",keyboard:!1,resolve:{EmployeeId:function(){return i.id},myTeamService:function(){return null},ExitService:function(){return n},isUpdateRequest:function(){return!1},isThroughUrl:function(){return!0}}}).result.then(function(e){e.isThroughUrl&&window.history.back()})}]}).state("employee.assets.assetlog",{url:"/:assetId/log",views:{"@employee":{templateUrl:"/employeeassets/assetlog",controller:"AssetLogController"}},title:"Asset Log",parentState:"employee.assets"}).state("employee.time",{url:"/time",templateUrl:"/employeeprofile/time",controller:"EmployeeTimeNavController",title:"mytime",parentState:"employee"}).state("employee.time.timesheet",{url:"/timesheets",templateUrl:"/employeetimesheet/timesheet",controller:"MyTimesheetController",controllerAs:"ctrl",title:"Employee | Timesheet",parentState:"employee.time"}).state("employee.time.timesheet.all",{url:"/all",template:'<all-timesheets is-self="ctrl.isSelf" is-my-team="ctrl.isMyTeam" my-public-profile="ctrl.myPublicProfile" week-start-day="ctrl.weekStartDay" my-projects="ctrl.myProjects" my-time-off-data="ctrl.myTimeOffData" billing-classifications="ctrl.billingClassifications" update-count="ctrl.updateCount(action, currentTimesheet, source)"></all-timesheets>',title:"Employee | Timesheet | All Timesheets",parentState:"employee.time"}).state("employee.time.timesheet.due",{url:"/due",template:'<timesheets-due is-self="ctrl.isSelf" is-my-team="ctrl.isMyTeam" my-public-profile="ctrl.myPublicProfile" week-start-day="ctrl.weekStartDay" my-projects="ctrl.myProjects" my-time-off-data="ctrl.myTimeOffData" billing-classifications="ctrl.billingClassifications" update-count="ctrl.updateCount(action, currentTimesheet, source)"></timesheets-due>',title:"Employee | Timesheet | Timesheets Due",parentState:"employee.time"}).state("employee.time.timesheet.rejected",{url:"/rejected",template:'<timesheets-rejected is-self="ctrl.isSelf" is-my-team="ctrl.isMyTeam" my-public-profile="ctrl.myPublicProfile" week-start-day="ctrl.weekStartDay" my-projects="ctrl.myProjects" my-time-off-data="ctrl.myTimeOffData" billing-classifications="ctrl.billingClassifications" update-count="ctrl.updateCount(action, currentTimesheet, source)"></timesheets-rejected>',title:"Employee | Timesheet | Timesheets Rejected",parentState:"employee.time"}).state("employee.time.timesheet.summary",{url:"/summary",template:'<week-summary is-self="ctrl.isSelf" is-my-team="ctrl.isMyTeam"></week-summary>',title:"Employee | Timesheet | Week Summary",parentState:"employee.time"}).state("employee.time.timesheet.projecttime",{url:"/projecttime",template:'<project-time is-self="ctrl.isSelf" is-my-team="ctrl.isMyTeam" my-projects="ctrl.myProjects"></project-time>',title:"Employee | Timesheet | Project Time",parentState:"employee.time"}).state("employee.time.attendance",{url:"/attendance",templateUrl:"/employeeattendance/attendance",controller:"AttendanceController",controllerAs:"ctrl",title:"Attendance Information",parentState:"employee.time",description:"This page contains employee attendance information.",resolve:{AttendanceSummaryService:["EmployeeAttendanceService",function(e){return e}],Params:["$stateParams",function(e){return e}]}})},this.registerEmployeeFinanaceRoutes=function(){i._stateProvider.state("employee.paytimeline",{url:"/paytimeline",templateUrl:"/employees/paytimeline",controller:"EmployeePayTimelineController",title:"Pay Timeline",parentState:"employee"}).state("employee.finances",{url:"/finances",templateProvider:["$templateRequest","EmployeeAndPayrollDetails",function(e,t){return t.payrollSetUp.setupComplete?e("/finances"):'<div id="my-finance" class="my-finance-container"></div><div id=" partial" class="sub-page-main-navigation"><ul><li ui-sref-active="active"><a class="anchor-sm" ui-sref=".summary">summary</a></li></ul></div><div class="col-sm-12"><div class="sub-page-container" data-ui-view=""></div></div>'}],controller:"FinancesController",resolve:{FinanceService:["EmployeeFinanceServices",function(e){return e}],Params:["$stateParams",function(e){return{id:e.id}}],EmployeeAndPayrollDetails:["FinanceService","Params","$q","dialogs","$state",function(e,t,i,n,o){var r=i.defer();return e.getEmployeeAndPayrollDetails(angular.copy(t)).then(function(e){r.resolve(e)},function(e){400==e.status&&n.notify("Application notification",e.data.message,{keyboard:!1,backdrop:"static"}).result.then(function(){o.go(""==o.$current.name?"home":o.$current)},function(e){o.go(""==o.$current.name?"home":o.$current)}),r.reject()}),r.promise}],PayrollVisibilityPermission:["FinanceService","Params","$q",function(e,t,i){var n=i.defer();return e.getEmployeePayrollpermissions(t.id).then(function(e){n.resolve(e)}),n.promise}],setupUrl:function(){return"employee.finances.summary"},showMyPay:function(){return!0},financialYearList:["FinanceService","Params",function(e,t){return e.getFinancialYearList(angular.copy(t))}],currentFinancialYear:["financialYearList",function(e){return e[0]}]},title:"Finances",parentState:"employee"}).state("employee.finances.summary",{url:"/summary",templateProvider:["$templateRequest","EmployeeAndPayrollDetails","AppContext","SharedDataService",function(e,t,i,n){return t.employee.payrollEnable?t.payrollSetUp.setupComplete?e("/finances/overview"):!t.payrollSetUp.setupComplete&&(i.hasPrivilege(["EmployeeFinance.AddEmployeeSalary","EmployeeFinance.Implicit.AddEmployeeSalary"],n.getEmployeeAttributes())&&i.hasPrivilege(["EmployeeFinance.ViewEmployeeSalaryDetails","EmployeeFinance.Implicit.ViewEmployeeSalaryDetails"],n.getEmployeeAttributes())||t.payrollSetUp.salarySetupComplete&&i.hasPrivilege(["EmployeeFinance.AddEmployeeFinancialData","EmployeeFinance.Implicit.AddEmployeeFinancialData"],n.getEmployeeAttributes())&&i.hasPrivilege(["EmployeeFinance.ViewEmployeeFinancialData","EmployeeFinance.Implicit.ViewEmployeeFinancialData"],n.getEmployeeAttributes()))?e("/finances/financeSetup"):'<div id="my-finance" class="my-finance-container"></div><div id=" partial" class="sub-page-main-navigation"> <div class="content-container  col-sm-12"><h1 class="widget-heading">Employee payroll profile is not completed</h1></div></div>':"<div class='row'><div class='content-container  col-sm-12'><h1 class='widget-heading'>Payroll Profile is not Enabled </h1></div></div>"}],controllerProvider:["EmployeeAndPayrollDetails","AppContext","SharedDataService",function(e,t,i){return e.employee.payrollEnable?e.payrollSetUp.setupComplete?"FinancesSummaryController":!e.payrollSetUp.setupComplete&&(t.hasPrivilege(["EmployeeFinance.AddEmployeeSalary","EmployeeFinance.Implicit.AddEmployeeSalary"],i.getEmployeeAttributes())&&t.hasPrivilege(["EmployeeFinance.ViewEmployeeSalaryDetails","EmployeeFinance.Implicit.ViewEmployeeSalaryDetails"],i.getEmployeeAttributes())||e.payrollSetUp.salarySetupComplete&&t.hasPrivilege(["EmployeeFinance.AddEmployeeFinancialData","EmployeeFinance.Implicit.AddEmployeeFinancialData"],i.getEmployeeAttributes())&&t.hasPrivilege(["EmployeeFinance.ViewEmployeeFinancialData","EmployeeFinance.Implicit.ViewEmployeeFinancialData"],i.getEmployeeAttributes()))?"EmployerFinanceSetup":"":""}],controllerAs:"ctrl",title:"Summary",parentState:"employee.finances"}).state("employee.finances.summary.applyloan",{url:"/applyloan",title:"Apply Loan",onEnter:["$uibModal","$state","$stateParams","Params","FinanceService",function(e,t,i,n,o){e.open({templateUrl:"myfinances/loanrequest",controllerAs:"ctrl",keyboard:!1,backdrop:"static",controller:"LoanApplyController",windowClass:"structure-compare",bindToController:!0,resolve:{loanRequestId:function(){},FinanceService:function(){return o},Params:function(){return n}}}).result.finally(function(){t.go("^")})}]}).state("employee.finances.summary.addnew",{url:"/addnew",title:"Add new Loan | Loans",onEnter:["$uibModal","$state","$stateParams","EmployeeAndPayrollDetails",function(e,t,i,n){i.employeeId=i.id,e.open({templateUrl:"finances/addOrUpdateLoan",windowClass:"full-screen-modal",backdrop:!1,controller:"AddOrUpdateLoanController",controllerAs:"ctrl",resolve:{payrollConfig:function(){return n.config}}}).result.finally(function(){t.go("^")})}]}).state("employee.finances.summary.insuranceguide",{url:"/insuranceguide",onEnter:["$uibModal","$state",function(e,t){e.open({templateUrl:"insuranceGuide",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1}).result.finally(function(){t.go("^")})}],title:"Summary | Insurance Guide"}).state("employee.finances.pay",{url:"/pay",templateUrl:"/finances/mypay",controller:"FinancesMyPayController",controllerAs:"ctrl",title:"My Pay",parentState:"employee.finances",resolve:{PayrollVisibilityPermission:["PayrollVisibilityPermission",function(e){return e}]}}).state("employee.finances.pay.incometax",{url:"/incometax",templateUrl:"/finances/incometax",controller:"FinancesIncomeTaxController",title:"Income Tax Details",parentState:"employee.finances"}).state("employee.finances.pay.payslips",{url:"/payslips",templateUrl:"/finances/payslips",controller:"PaySlipsController",controllerAs:"ctrl",title:"Pay Slips",parentState:"employee.finances"}).state("employee.finances.pay.salary",{url:"/salary",templateUrl:"/finances/salaryhierarchy",controller:"FinancesSalaryController",controllerAs:"ctrl",title:"Salary Hierarchy",parentState:"employee.finances"}).state("employee.finances.pay.componentclaims",{url:"/componentclaims",templateUrl:"/finances/ComponentClaims",controller:"ComponentClaimsController",controllerAs:"ctrl",title:"Component Claims",parentState:"employee.finances",resolve:{ComponentClaimsService:["EmployeeFinanceServices",function(e){return e}]}}).state("employee.finances.managetax",{url:"/managetax",templateUrl:"/finances/managetax",title:"Manage Tax",parentState:"employee.finances",controller:"ManageTaxController",controllerAs:"ctrl"}).state("employee.finances.managetax.declaration",{url:"/declaration",templateUrl:"/finances/declaration",controller:"FinancesDeclarationController"}).state("employee.finances.managetax.declaration.group1o5lac",{url:"/group1o5lac",template:'<group1o5-lac data-ng-if="vm.investmentDeclaration" sections-group="vm.groupedTaxSections[vm.taxSectionGroup.group1o5Lac.id]" data-edit-in-progress="vm.editInProgress" investment-declaration="vm.investmentDeclaration" save-declaration="saveDeclaration()" update-deduction="updateDeduction(deduction)" clear-deduction="clearDeduction(deductionName)" incometax-stats="vm.incomeTaxDeductionSummary" payroll-config="vm.payrollConfig" financial-year="vm.financialYear"></group1o5-lac>',title:"Group 1.5 lac",parentState:"employee.finances.managetax.declaration"}).state("employee.finances.managetax.declaration.othertaxsections",{url:"/othertaxsections",template:'<other-tax-sections data-ng-if="vm.investmentDeclaration" sections-group="vm.groupedTaxSections[vm.taxSectionGroup.otherSections.id]" data-edit-in-progress="vm.editInProgress" investment-declaration="vm.investmentDeclaration" save-declaration="saveDeclaration()" update-deduction="updateDeduction(deduction)" clear-deduction="clearDeduction(deductionName)" nps-employer-amount="vm.incomeTaxDeductionSummary.npsEmployerGrossAmount" isnps-employer-component-enable="vm.incomeTaxDeductionSummary.isNPSEmployerComponentEnable" payroll-config="vm.payrollConfig" financial-year="vm.financialYear"></other-tax-sections>',title:"Other Exemptions",parentState:"employee.finances.managetax.declaration"}).state("employee.finances.managetax.declaration.allowances",{url:"/allowances",template:'<tax-saving-allowance data-ng-if="vm.investmentDeclaration" sections-group="vm.groupedTaxSections[vm.taxSectionGroup.allowances.id]" data-edit-in-progress="vm.editInProgress" investment-declaration="vm.investmentDeclaration" save-declaration="saveDeclaration()" update-deduction="updateDeduction(deduction)" clear-deduction="clearDeduction(deductionName)" payroll-config="vm.payrollConfig" financial-year="vm.financialYear" get-allowances="getAllowances()"></tax-saving-allowance>',title:"Tax Saving Allowances",parentState:"employee.finances.managetax.declaration"}).state("employee.finances.managetax.declaration.householdincome",{url:"/householdincome",template:'<household-income data-ng-if="vm.investmentDeclaration" financial-year="vm.financialYear" is-finance-setup="true" payroll-config="vm.payrollConfig" investment-declaration="vm.investmentDeclaration" save-self-Occupied="saveSelfOccupiedLoanDetail(model)" save-or-update-rental-detail="saveOrUpdateRentalDetail(model)" delete-rental-detail="deleteRentalDetail(houseIdentifier)" save-or-update-let-out-property="saveOrUpdateLetOutProperty(model)" delete-other-house-residence="deleteOtherHouseResidence(houseIdentifier)"></household-income>',title:"Income from house",parentState:"employee.finances.managetax.declaration"}).state("employee.finances.managetax.declaration.othersources",{url:"/othersourcesincome",template:'<othersources-income data-ng-if="vm.investmentDeclaration" financial-year="vm.financialYear" is-finance-setup="true" payroll-config="vm.payrollConfig" investment-declaration="vm.investmentDeclaration" save-other-sources="saveOrUpdateOtherSources(model)" delete-other-sources="deleteOtherSource()"></othersources-income>',title:"Income from other sources",parentState:"employee.finances.managetax.declaration"}).state("employee.finances.managetax.taxfiling",{url:"/taxfiling",templateUrl:"/finances/freeTaxFiling",title:"Free Tax Filing",parentState:"employee.finances.managetax.freeTaxFiling"}).state("employee.finances.managetax.taxsavinginvestment",{url:"/taxsavinginvestment",templateUrl:"/finances/taxSavinginvestment",title:"Tax Saving Investment",parentState:"employee.finances.managetax.taxSavingInvestment"}).state("employee.finances.managetax.previousemployment",{url:"/previousemployment",templateUrl:"/finances/previousemployment",controller:"PreviousEmploymentController",title:"Previous Employement Salary",parentState:"employee.finances"}).state("employee.finances.managetax.form12bb",{url:"/form12bb",templateUrl:"/finances/form12bb",controller:"Form12bbController",title:"Income tax deduction summary",parentState:"employee.finances",controllerAs:"ctrl"}).state("employee.finances.preferences",{url:"/preferences",templateUrl:"/finances/preferences",controller:"FinancePreferences",controllerAs:"ctrl",title:"Preferences Information",parentState:"employee.finances"}).state("employee.finances.loans",{url:"/loans",templateUrl:"/finances/loans",title:"",parentState:"myfinances",controller:"EmployeeLoansController",controllerAs:"ctrl"}).state("employee.finances.loans.addnew",{url:"/addnew",title:"Add new Loan | Loans",onEnter:["$uibModal","$state","$stateParams","EmployeeAndPayrollDetails",function(e,t,i,n){i.employeeId=i.id,e.open({templateUrl:"finances/addOrUpdateLoan",windowClass:"full-screen-modal",backdrop:!1,controller:"AddOrUpdateLoanController",controllerAs:"ctrl",resolve:{payrollConfig:function(){return n.config}}}).result.finally(function(){t.go("^")})}]}).state("employee.finances.loans.edit",{url:"/:loanId/edit",title:"Add new Loan | Loans",onEnter:["$uibModal","$state","EmployeeAndPayrollDetails","$stateParams",function(e,t,i,n){n.employeeId=n.id,e.open({templateUrl:"finances/addOrUpdateLoan",windowClass:"full-screen-modal",backdrop:!1,controller:"AddOrUpdateLoanController",controllerAs:"ctrl",resolve:{payrollConfig:function(){return i.config}}}).result.finally(function(){t.go("^")})}]}).state("employee.finances.loans.outstanding",{url:"/outstanding",templateUrl:"/finances/outstandingloans",title:"Outstanding | Loans",parentState:"myfinances.loans",controller:"EmployeeOutstandingLoansController",controllerAs:"ctrl"}).state("employee.finances.loans.cleared",{url:"/cleared",templateUrl:"/finances/clearedloans",title:"Cleared | Loans",parentState:"myfinances.loans",controller:"EmployeeClearedLoansController",controllerAs:"ctrl"}).state("employee.finances.loans.request",{url:"/request",template:"<ui-view/>"}).state("employee.finances.loans.request.all",{url:"/all",title:"Loan Requests",templateUrl:"/finances/LoanRequests",controller:"EmployeeLoanRequestController",controllerAs:"ctrl",parentState:"employee.finances.loans.request"}).state("employee.finances.loans.request.applyloan",{url:"/apply",templateUrl:"/finances/LoanRequests",title:"Apply Loan Request",onEnter:["$uibModal","$state","$stateParams","FinanceService","Params",function(e,t,i,n,o){e.open({templateUrl:"myfinances/loanrequest",controllerAs:"ctrl",keyboard:!1,backdrop:"static",controller:"LoanApplyController",windowClass:"structure-compare",bindToController:!0,resolve:{loanRequestId:function(){},FinanceService:function(){return n},Params:function(){return o}}}).result.finally(function(){t.go("^")})}]}).state("employee.finances.loans.request.edit",{url:"/edit/:loanRequestId",onEnter:["$uibModal","$state","$stateParams","FinanceService","Params",function(e,t,i,n,o){e.open({templateUrl:"myfinances/loanrequest",controllerAs:"ctrl",windowClass:"structure-compare",keyboard:!0,controller:"LoanApplyController",bindToController:!0,resolve:{loanRequestId:function(){return i.loanRequestId},FinanceService:function(){return n},Params:function(){return o}}}).result.finally(function(){t.go("^")})}],title:"Edit Loan Request",parentState:"employee.finances.loans.request"}).state("employee.finances.loans.request.approval",{url:"/approval/:loanRequestId",title:"Approve | LoanRequest",onEnter:["$uibModal","EmployeeAndPayrollDetails","$stateParams","$state",function(e,t,i,n){i.employeeId=i.id,e.open({templateUrl:"finances/addOrUpdateLoan",windowClass:"full-screen-modal",backdrop:!1,controller:"PayrollLoanApprovalController",controllerAs:"ctrl",resolve:{payrollConfig:function(){return t.config}}}).result.finally(function(){n.go("^")})}]}).state("employee.benefits",{url:"/benefits",templateUrl:"/employees/benefits",controller:"EmployeeBenefitDetailsController",title:"Benifits Information",parentState:"employee",description:"This page contains employee benefits."})},this.registerRedirects=function(){i._urlRouterProvider.when("/employee","/employeedashboard/summary"),i._urlRouterProvider.when("/employee/:id","/employee/:id/summary"),i._urlRouterProvider.when("/employee/:id/time/timesheets","/employee/:id/time/timesheets/all"),i._urlRouterProvider.when("/employee/:id/talent","/employee/:id/talent/summary"),i._urlRouterProvider.when("/employee/:id/finances","/employee/:id/finances/summary"),i._urlRouterProvider.when("/employee/:id/finances/loans","/employee/:id/finances/loans/outstanding"),i._urlRouterProvider.when("/employee/:id/finances/loans/request","/employee/:id/finances/loans/request/all")},this.registerRedirects(),this.registerEmployeeProfileRoutes(),this.registerEmployeeAppreciationRoutes(),this.registerEmployeeTalentProfileRoutes(),this.registerEmployeeFinanaceRoutes()}return e.prototype.registerEmployeeAppreciationRoutes=function(){this._stateProvider.state("employee.appreciations",{url:"/appreciations",template:'<employee-feedback is-read-only="true"></employee-feedback>',title:"Feedback",parentState:"employee",description:"This page shows all the appreciations given to the employee"})},e.prototype.registerEmployeeTalentProfileRoutes=function(){this._stateProvider.state("employee.talent",{url:"/talent",template:"<employee-talent-profile></employee-talent-profile>",title:"Employee | Talent",parentState:"employee",description:"This page contains all the information about employee talent details."}).state("employee.talent.summary",{url:"/summary",template:"<employee-talent-summary></employee-talent-summary>",title:"Talent Summary",parentState:"employee.talent",description:"This page conatina employee talent summary"}).state("employee.talent.goals",{url:"/goals",template:"<employee-talent-goals></employee-talent-goals>",title:"Goals",parentState:"employee.talent",description:"This page will show all the employee goals"}).state("employee.talent.goal",{url:"/goal/:goalId",template:'<goal-details goal-component-service="ctrl.employeeTalentGoalsService" can-clone-goal="false" previous-state="ctrl.previousState" previous-state-params="ctrl.previousStateParams"></goal-details>',title:"Employee | Talent | Goal Details",parentState:"employee.talent.goals"}).state("employee.talent.reviews",{url:"/reviews",template:"<employee-reviews></employee-reviews>",title:"Reviews",parentState:"employee.talent",description:"This page shows all the employee reviews"}).state("employee.talent.feedback",{url:"/feedback",template:"<employee-feedback></employee-feedback>",title:"Feedback",parentState:"employee.talent",description:"This page shows all the feedback given to the employee"}).state("employee.talent.skills",{url:"/skills",template:"<employee-skills></employee-skills>",title:"Competencies & Core Values",parentState:"employee.talent",description:"This page shows all the skills assigned to employee"})},e}();e.RegisterEmployeesRouting=t,angular.module("employees").config(["$urlRouterProvider","$stateProvider",function(e,i){new t(e,i)}])}(e.routing||(e.routing={}))}(Employees||(Employees={})),function(e){var t=function(){function e(){}return e.prototype.setEmployeeAttributes=function(e){this.employeeAttributes=e},e.prototype.getEmployeeAttributes=function(){return this.employeeAttributes},e}();e.SharedDataService=t,angular.module("employees").service("SharedDataService",t)}(EmployeeProfile||(EmployeeProfile={})),function(e){var t,i,n,o,r;e.Controllers||(e.Controllers={}),t=function(){function e(){}return e.$inject=[],e}(),i=function(){function e(e,t,i,n,o,r,a,s,l){var c=this;this.appContext=e,this._scope=t,this._rootScope=i,this.appSettings=n,this._modalInstance=o,this.notificationService=r,this.employeeServices=a,this.myProfileServices=s,this.profileImageInfo=l,this.selectedImageUrl=[],this.fileUploadSettings={},this.imageCropped=!1,this.image={},this.profileImage={},this.selected=function(e){if(e){c.imageCropped=!0;var t=$(".cropped-image-container").width()/e.w,i=$(".cropped-image-container").height()/e.h,n=$(".picture-display-div img").width(),o=$(".picture-display-div img").height();c.image={},c.image.width=e.w,c.image.height=e.h,c.image.marginLeft=e.x,c.image.marginTop=e.y,c.image.originalWidth=n,c.image.originalHeight=o,c.image.marginRight=e.x2,c.image.marginBottom=e.y2,$("#preview").css({width:Math.round(t*n)+"px",height:Math.round(i*o)+"px",marginLeft:"-"+Math.round(t*c.image.marginLeft)+"px",marginTop:"-"+Math.round(i*c.image.marginTop)+"px"}),c._scope.$apply()}},this.save=function(){c.notificationService.information("Saving Profile Image..."),c.image&&(c.profileImage.width=c.image.width,c.profileImage.height=c.image.height,c.profileImage.marginLeft=c.image.marginLeft,c.profileImage.marginTop=c.image.marginTop,c.profileImage.originalWidth=c.image.originalWidth,c.profileImage.originalHeight=c.image.originalHeight,c.profileImage.marginRight=c.image.marginRight,c.profileImage.marginBottom=c.image.marginBottom),c.profileImage.imageUrl=c.selectedImageUrl[0].location,c.profileImage.originalUrl=c.profileImageInfo.imageUrl?c.profileImageInfo.imageUrl.split("?")[0]:c.selectedImageUrl[0].location;var e=c.profileImageInfo.isMyProfile||c.profileImageInfo.employeeId==c.appContext.myPublicProfile.id?c.myProfileServices.profile:c.employeeServices.employee,t=c.profileImageInfo.isMyProfile||c.profileImageInfo.employeeId==c.appContext.myPublicProfile.id?{action:"profileImage"}:{id:c.profileImageInfo.employeeId,action:"profileImage"};e.save(t,c.profileImage).$promise.then(function(e){c.image=null,c.selectedImageUrl=[];var t=(new Date).getTime();e?c._modalInstance.close(e.originalUrl+"?"+t):c._modalInstance.dismiss("cancel"),c.profileImageInfo.isMyProfile&&c._rootScope.$broadcast("profilePictureUpdated",{id:c.profileImageInfo.employeeId,imageUrl:c.profileImage.originalUrl}),c.notificationService.success("Image Saved Successfully.")},function(e){c.notificationService.error("An error occurred while saving the image."),c._modalInstance.dismiss("cancel")})},this.cancel=function(){c.selectedImageUrl=[],c._modalInstance.dismiss("cancel")},this.fileUploadSettings=angular.copy(this.appSettings.fileUploadSettings),this.fileUploadSettings.allowedFileTypes="png,jpg,jpeg",this.currentImage=this.profileImageInfo.imageUrl}return e.$inject=["AppContext","$scope","$rootScope","AppSettings","$uibModalInstance","NotificationService","EmployeeServices","MyProfileServices","profileImageInfo"],e}(),n=function(){function e(e,t,i,n,o,r,a){var s=this;this.model=e,this._modalInstance=t,this._scope=i,this.employeeServices=n,this.EmployeeModel=o,this.notificationService=r,this.appSettings=a,this.showPasswordErr=!1,this.resetPasswordModel={},this.setPassword=function(){s.form.setPasswordForm.$valid&&s.validatePassword(s.resetPasswordModel)&&(s.employeeServices.setPassword(s.model.employeeId,s.resetPasswordModel).then(function(e){s.notificationService.success("New password has been set successfully")},function(e){this.notificationService.error("An error occurred while setting a new password.")}),s._modalInstance.close(s.resetPasswordModel))},this.closeSetPasswordEditor=function(){s._modalInstance.dismiss("cancel")},this.validatePassword=function(e){return e.password.length<6?(s.errorMessage="The password must be at least 6 character long",s.showPasswordErr=!0,!1):e.password.length>100?(s.errorMessage="The password must be at max 100 character long",s.showPasswordErr=!0,!1):e.password!=e.confirmPassword?(s.errorMessage="The password and confirmation password do not match",s.showPasswordErr=!0,!1):(s.errorMessage="",s.showPasswordErr=!1,!0)},this.modelOptions=angular.copy(this.appSettings.modelBlurSettings),this.resetPasswordModel=new o.ResetPasswordModel({}),this.resetPasswordModel.email=this.model.employeeEmail}return e.$inject=["model","$uibModalInstance","$scope","EmployeeServices","EmployeeModel","NotificationService","AppSettings"],e}(),o=function(){function e(e,t,i,n,o,r){var a=this;this.model=e,this.toGeneratePassword=t,this._modalInstance=i,this.employeeServices=n,this.notificationService=o,this.appSettings=r,this.showPasswordErr=!1,this.submitted=!1,this.isAutoGenerate=!0,this.closePasswordEditor=function(){a._modalInstance.dismiss("cancel")},this.modelOptions=angular.copy(this.appSettings.modelBlurSettings)}return e.prototype.generatePassword=function(){var e=this;this.submitted=!0,this.form.generatePasswordForm.$valid&&(this.toGeneratePassword?(this.isAutoGenerate||this.validatePassword())&&this.employeeServices.generatePassword(this.model.id,this.password).then(function(t){""!=t.password?(e.password=t.password,e.isPasswordUpdated=!0,e.model.accountStatus=1,e.model.invitationStatus=1,e.notificationService.success("Password generated successfully")):e.notificationService.error("Somthing went wrong in generation of password, please try again")},function(e){this.notificationService.error("An error occurred while generating a password.")}):(this.isAutoGenerate||this.validatePassword())&&this.employeeServices.resetPassword(this.model.id,this.password).then(function(t){""!=t.password?(e.password=t.password,e.isPasswordUpdated=!0,e.notificationService.success("Password generated successfully")):e.notificationService.error("Somthing went wrong in generation of password, please try again")},function(e){this.notificationService.error("An error occurred while generating a password.")}))},e.prototype.validatePassword=function(){return this.password.length<6?(this.errorMessage="The password must be at least 6 character long",this.showPasswordErr=!0,!1):this.password.length>100?(this.errorMessage="The password must be at max 100 character long",this.showPasswordErr=!0,!1):this.password!=this.confirmPassword?(this.errorMessage="The password and confirmation password do not match",this.showPasswordErr=!0,!1):(this.errorMessage="",this.showPasswordErr=!1,!0)},e.$inject=["model","toGeneratePassword","$uibModalInstance","EmployeeServices","NotificationService","AppSettings"],e}(),r=function(){function e(e,t,i,n,o){var r=this;this.model=e,this._modalInstance=t,this.passwordLinkStatus=i,this.employeeServices=n,this.notificationService=o,this.resetMailProcessing=!1,this.closeModal=function(){r._modalInstance.dismiss("cancel")}}return e.prototype.generatePasswordResetLink=function(){var e=this;this.resetMailProcessing=!0,this.employeeServices.generateResetLink(this.model.id).then(function(t){t.isResetMailSent?(e.passwordLinkStatus=!0,e.notificationService.success("Password reset email sent successfully")):(e.notificationService.error("Something went wrong while sending password reset mail."),e.resetMailProcessing=!1)},function(t){e.notificationService.error("Something went wrong while sending password reset mail."),e.resetMailProcessing=!1})},e.$inject=["model","$uibModalInstance","passwordLinkStatus","EmployeeServices","NotificationService"],e}(),angular.module("employees").controller("EmployeeProfileController",t).controller("UpdateEmployeeProfilePictureController",i).controller("SetPasswordController",n).controller("GeneratePasswordController",o).controller("ResetPasswordController",r)}(EmployeeProfile||(EmployeeProfile={})),function(e){var t;e.Components||(e.Components={}),t=function(){function t(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S,C,w,b,P,T,D,I,A,E){var R=this;this._scope=e,this._$rootScope=t,this._filter=i,this._appContext=n,this.appSettings=o,this._employeeProfileService=r,this.customFieldService=a,this.lookupServices=s,this.orgSettingServices=l,this.authenticationMode=c,this.customUsernameType=p,this._modal=u,this._stateParams=d,this._notificationService=m,this._dialogService=y,this._myProfileService=h,this._employeeServices=f,this.q=g,this.AppSettings=v,this.fieldVisibility=S,this.fieldPermissionRoles=C,this.fieldApproval=w,this.fieldTypes=b,this.relationTypes=P,this.bloodGroup=T,this.gender=D,this.supportedViews=I,this.compositeViewType=A,this.utilService=E,this.experienceDetails=[],this.educationDetails=[],this.familyDetails=[],this.submitted=!1,this.isSameAddress=!1,this.toggleForm=!1,this.currentDate=new Date,this.emailSubmitted=!1,this.mobileSubmitted=!1,this.isProfileComplete=!0,this.canEditMobile=!1,this.hasDocumentFeature=!1,this.getCountryName=function(e){return e?R.countries.find(function(t){return t.code==e}).name:""},this.emailPattern=/^([\w\.\-]+)+@((([\-\w]+\.)+[a-zA-Z]{2,})|(([0-9]{1,3}\.){3}[0-9]{1,3}))$/;this.isAdmin=null!=this._stateParams.id,this.employeeId=this._stateParams.id,this.modelOptions=angular.copy(o.modelBlurSettings),this.fromDatePickerOptions={showWeeks:!1},this.toDatePickerOptions={showWeeks:!1,maxDate:this.currentDate},this.hasDocumentFeature=this._appContext.isFeaturePresent("DOCUMENTS"),this._stateParams.id?(this.q.all([this._employeeServices.getEmployee(this._stateParams.id),this.customFieldService.getView(A.EmployeeProfile.id,I.EmployeeProfile.value,I.EmployeeProfile.value),this.lookupServices.lookup.query({id:"countries"}),this.orgSettingServices.getAuthenticationMode()]).then(function(e){if(R.intializeComponentModels(e[0]),R.authunticationDetails=e[3],R.customProprties=e[0].customProperties,R.customFieldConfig=e[1],R.customFieldConfigCopy=angular.copy(R.customFieldConfig),R.setCustomFieldConfig(e[0].personalDetails),R.countries=e[2],!R.hasDocumentFeature){var t=R.customFieldConfig.sections.find(function(e){return"professionalinfosection"==e.identifier}).fieldGroups;R.customFieldConfig.sections.find(function(e){return"professionalinfosection"==e.identifier}).fieldGroups=t.filter(function(e){return"experienceinfogroup"!=e.identifier&&"educationinfogroup"!=e.identifier})}}),this.hasDocumentFeature&&this.q.all([this._employeeProfileService.getEducationDetails(this._stateParams.id),this._employeeProfileService.getExperienceDetails(this._stateParams.id)]).then(function(e){R.educationDetails=e[0],R.educationDetails.forEach(function(e){e.yearOfJoining&&e.yearOfCompletion&&(e.yearOfJoining=new Date(e.yearOfJoining),e.yearOfCompletion=new Date(e.yearOfCompletion))}),R.experienceDetails=e[1],R.experienceDetails.forEach(function(e){e.dateOfJoining&&e.dateOfRelieving&&(e.dateOfJoining=new Date(e.dateOfJoining),e.dateOfRelieving=new Date(e.dateOfRelieving))})})):(this.q.all([this._myProfileService.getMyProfile(),this.customFieldService.getView(A.EmployeeProfile.id,I.EmployeeProfile.value,I.EmployeeProfile.value),this.lookupServices.lookup.query({id:"countries"}),this._myProfileService.getAuthenticationMode()]).then(function(e){if(R.intializeComponentModels(e[0]),R.authunticationDetails=e[3],R.customProprties=e[0].customProperties,R.customFieldConfig=e[1],R.customFieldConfigCopy=angular.copy(R.customFieldConfig),R.setCustomFieldConfig(e[0].personalDetails),R.countries=e[2],!R.hasDocumentFeature){var t=R.customFieldConfig.sections.find(function(e){return"professionalinfosection"==e.identifier}).fieldGroups;R.customFieldConfig.sections.find(function(e){return"professionalinfosection"==e.identifier}).fieldGroups=t.filter(function(e){return"experienceinfogroup"!=e.identifier&&"educationinfogroup"!=e.identifier})}}),this.hasDocumentFeature&&this.q.all([this._myProfileService.getEducationDetails(),this._myProfileService.getExperienceDetails()]).then(function(e){R.educationDetails=e[0],R.educationDetails.forEach(function(e){e.yearOfJoining&&e.yearOfCompletion&&(e.yearOfJoining=new Date(e.yearOfJoining),e.yearOfCompletion=new Date(e.yearOfCompletion))}),R.experienceDetails=e[1],R.experienceDetails.forEach(function(e){e.dateOfJoining&&e.dateOfRelieving&&(e.dateOfJoining=new Date(e.dateOfJoining),e.dateOfRelieving=new Date(e.dateOfRelieving))})}))}return t.prototype.intializeComponentModels=function(t){var i=this;this.familyDetails=[],t.personalDetails&&(t.personalDetails.marriageDate=null==t.personalDetails.marriageDate?null:t.personalDetails.marriageDate.stringToDate(),t.personalDetails.dateOfBirth=null==t.personalDetails.dateOfBirth?null:t.personalDetails.dateOfBirth.stringToDate()),this.model=angular.copy(t.personalDetails),this.model.employeeUserName=angular.copy(t.employeeUserName),this.primaryDetails=new e.Model.PrimaryDetails(this.model.firstName,this.model.lastName,this.model.middleName,this.model.displayName,this.model.gender,this.model.dateOfBirth,this.model.maritalStatus,this.model.bloodGroup,this.model.marriageDate),this.contactDetails=new e.Model.ContactDetails(this.model.email,this.model.personalEmail,this.model.mobilePhone,this.model.workPhone,this.model.homePhone,this.model.skypeId),this.addressDetails=new e.Model.AddressDetails(new e.Model.Address(this.model.currentAddress.addressLine1,this.model.currentAddress.addressLine2,this.model.currentAddress.city,this.model.currentAddress.countryCode,this.model.currentAddress.state,this.model.currentAddress.zip),new e.Model.Address(this.model.permanentAddress.addressLine1,this.model.permanentAddress.addressLine2,this.model.permanentAddress.city,this.model.permanentAddress.countryCode,this.model.permanentAddress.state,this.model.permanentAddress.zip)),this.socialAccounts=new e.Model.SocialAccounts(this.model.skypeId,this.model.linkedIn,this.model.facebook,this.model.twitter,this.model.blog,this.model.googlePlus),this.primaryDetails.checkIfCompleted(),this.contactDetails.checkIfCompleted(),angular.forEach(t.personalDetails.relations,function(t){i.familyDetails.push(new e.Model.RelationDetails(t))}),this.professionalDetails=new e.Model.ProfessionalDetails({professionalSummary:t.professionalDetails.professionalSummary,status:null})},t.prototype.setCustomFieldConfig=function(e){var t=this;this.isProfileComplete=!0,e.gender=e.gender||null,e.bloodGroup=e.bloodGroup||null,this.keysToLowerCase(e);var i=angular.copy(this.professionalDetails);this.keysToLowerCase(i),this.customFieldConfig.sections.forEach(function(n){n.fieldGroups.forEach(function(n){var o=!0;n.isHidden=!0,n.fields.forEach(function(r){var a=r.identifier.toLowerCase();"MaritalStatus"==r.identifier?(r.value=e[a]?e[a].toString():"0",t.marritalStatus=r.value):"ISPhysicallyHandicapped"==r.identifier?r.value=e[a]?1:0:"MyRelations"==r.identifier&&"relationinfogroup"==n.identifier?(r.value=e.relations,r.value.forEach(function(e){e.gender=0==e.gender?null:e.gender})):r.value=r.isSystemDefined?e[a]||i[a]:t.customProprties[a]?t.customProprties[a]:null,r.isSystemDefined||r.fieldType!=t.fieldTypes.Date.template||(r.value=r.value?new Date(r.value):null),r.formElementHint==t.fieldTypes.Dropdown.title&&(r.value=null!=r.value&&"BloodGroup"!=r.identifier?r.value.toString():r.value),"MobilePhone"==r.identifier&&t.authunticationDetails.authenticationMode!=t.authenticationMode.EmailOnly.id&&t.authunticationDetails.customUsernameType==t.customUsernameType.MobileNumber.id&&(t.canEditMobile=t.isAdmin);var s=t.isAdmin?t.fieldPermissionRoles.ReportingManagerAndUp.id:t.fieldPermissionRoles.Self.id,l=r.fieldPermissions.find(function(e){return e.role==s});r.readOnly=!(!r.readOnly&&l.visibility!=t.fieldVisibility.Read.id),r.hidden=l.visibility==t.fieldVisibility.Hidden.id,n.isHidden=n.isHidden&&r.hidden,o&&(o=t.isFieldComplete(n,r))}),n.isComplete=o,o||(t.isProfileComplete=o)})})},t.prototype.onFieldValueChange=function(e){"MaritalStatus"==e.identifier&&(this.marritalStatus=e.value)},t.prototype.changeEmail=function(e){this.newEmail=this.confirmEmail=null,this.workEmail=e.value,this.emailSubmitted=!1,this.emailModalInstance=this._modal.open({templateUrl:"changeemail-template",scope:this._scope})},t.prototype.removeEmail=function(e){var t=this;this._dialogService.confirm("Removing email","Are you sure do you want to remove email and continue with user name login.").result.then(function(){t._employeeServices.removeEmail(t._stateParams.id).then(function(i){e.value=null,t.loadEmployeeProfile(),t._notificationService.success("Email removed successfully.")},function(e){t._notificationService.error(e.data.message)})})},t.prototype.changeMobile=function(e){this.newMobile=this.confirmMobile=null,this.mobiePhone=e.value,this.mobileSubmitted=!1,this.mobileModalInstance=this._modal.open({templateUrl:"changemobile-template",scope:this._scope})},t.prototype.isEmailValid=function(e){return this.newEmail===e},t.prototype.isMobileValid=function(e){return this.newMobile===e},t.prototype.close=function(){this.emailModalInstance.close()},t.prototype.closeMobleModal=function(){this.mobileModalInstance.close()},t.prototype.updateWorkEmail=function(){var e=this;this.changeEmailForm.$valid&&(this.newEmail=this.newEmail.toLowerCase(),this.updateEmail(this.newEmail).then(function(t){if(t){var i=e.activeGroup.fields.find(function(e){return"Email"==e.name}),n=e.activeGroup.fields.indexOf(i);i.value=e.newEmail,e._scope.employeeEmailOnProfile=e.newEmail,e.activeGroup.fields[n]=angular.copy(i);var o=e.customFieldConfig.sections.find(function(t){return t.identifier==e.sectionId}).fieldGroups.find(function(t){return t.identifier==e.groupId}),r=o.fields.find(function(e){return"Email"==e.name}),a=o.fields.indexOf(r);r.value=e.newEmail,e.customFieldConfig.sections.find(function(t){return t.identifier==e.sectionId}).fieldGroups.find(function(t){return t.identifier==e.groupId}).fields[a]=r,e.close()}}))},t.prototype.setSelectedGroupProprties=function(e){var t=this;e.fields.forEach(function(e){t.customProprties[e.identifier]=e.fieldType==t.fieldTypes.Date.template&&e.value?e.value.dateOnlyString():e.value})},t.prototype.updateMobile=function(){var e=this;if(this.changeMobileForm.$valid)if(this.authunticationDetails.customUsernameType!=this.customUsernameType.MobileNumber.id||this.contactDetails.workEmail){var t=this.isAdmin?this._stateParams.id:this._appContext.myPublicProfile.id,i=this.activeGroupCopy.fields.find(function(e){return"MobilePhone"==e.identifier}),n=this.activeGroupCopy.fields.indexOf(i);i.value=this.newMobile,this._scope.employeeEmailOnProfile=this.newMobile,this.activeGroupCopy.fields[n]=angular.copy(i);var o=this.customFieldConfig.sections.find(function(t){return t.identifier==e.sectionId}).fieldGroups.find(function(t){return t.identifier==e.groupId});this.setSelectedGroupProprties(this.activeGroupCopy),this._employeeServices.saveCustomProperties(t,this.sectionId,this.groupId,this.customProprties).then(function(t){var i=o.fields.find(function(e){return"MobilePhone"==e.name}),n=o.fields.indexOf(i);i.value=t.mobilePhone,e.activeGroup.fields[n]=i,e.customFieldConfig.sections.find(function(t){return t.identifier==e.sectionId}).fieldGroups.find(function(t){return t.identifier==e.groupId}).fields[n]=i}),this.closeMobleModal()}else this._employeeServices.updateMobile(this._stateParams.id,this.newMobile).then(function(t){if(t){var i=e.activeGroup.fields.find(function(e){return"MobilePhone"==e.name}),n=e.activeGroup.fields.indexOf(i);i.value=e.newMobile,e._scope.employeeEmailOnProfile=e.newMobile,e.activeGroup.fields[n]=angular.copy(i);var o=e.customFieldConfig.sections.find(function(t){return t.identifier==e.sectionId}).fieldGroups.find(function(t){return t.identifier==e.groupId}),r=o.fields.find(function(e){return"MobilePhone"==e.name}),a=o.fields.indexOf(r);r.value=e.newMobile,e.customFieldConfig.sections.find(function(t){return t.identifier==e.sectionId}).fieldGroups.find(function(t){return t.identifier==e.groupId}).fields[a]=r,e.closeMobleModal()}})},t.prototype.isFieldComplete=function(e,t){return"experienceinfogroup"==e.identifier||"educationinfogroup"==e.identifier||(e.canAddMultipleGroups&&"addressinfogroup"!=e.identifier?!t.required||t.value.length>0:e.canAddMultipleGroups&&"addressinfogroup"==e.identifier?!t.required||null!=t.value.addressLine1:"MaritalStatus"==t.identifier?!t.required||null!=t.value:"MarriageDate"==t.identifier?!t.required||2!=this.marritalStatus||null!=t.value:"Email"==t.identifier||(!t.required||!!t.value))},t.prototype.loadEmployeeProfile=function(){var e=this;(this._stateParams.id?this._employeeServices.getEmployee(this._stateParams.id):this._myProfileService.getMyProfile()).then(function(t){e.intializeComponentModels(t),e.customProprties=t.customProperties,e.setCustomFieldConfig(t.personalDetails),e.activeGroup.isSystemDefined&&e.updateEmployeeSummary()})},t.prototype.keysToLowerCase=function(e){var t=angular.copy(e);return Object.keys(t).forEach(function(t){var i=t.toLowerCase();i!==t&&(e[i]=e[t],delete e[t])}),t},t.prototype.setAddress=function(){this.isSameAddress&&(this.activeGroup.fields[1].value=angular.copy(this.activeGroup.fields[0].value))},t.prototype.getFieldValue=function(e){if(e.value||0==e.value){if(e.formElementHint==this.fieldTypes.Checkbox.template){var t=[];return e.value="string"==typeof e.value?JSON.parse(e.value):e.value,e.value&&e.value.forEach(function(i){var n=e.fieldChoices.find(function(e){return e.identifier==i});null!=n&&t.push(n.value)}),t.join(", ")}var i="BloodGroup"!=e.identifier?e.fieldChoices.find(function(t){return t.identifier==e.value}):this.bloodGroup.getById(e.value);return i?"BloodGroup"!=e.identifier?i.value:i.name:""}},t.prototype.isApprovalNeeded=function(e){var t=this.isAdmin?this.fieldPermissionRoles.ReportingManagerAndUp:this.fieldPermissionRoles.Self;return e.fieldPermissions.find(function(e){return e.role==t.id}).approval!=this.fieldApproval.NotNeeded.id},t.prototype.doesEmailExist=function(e){var t=this.q.defer();return this._employeeServices.doesemailexist(0,e.email).then(function(e){e.result?t.resolve(!1):t.resolve(!0)}),t.promise},t.prototype.doesMobileExist=function(e){var t=this.q.defer();return this._employeeServices.employee.get({id:0,action:"doesmobilenumberexist",mobile:e.mobile},function(e){e.result?t.resolve(!1):t.resolve(!0)}),t.promise},t.prototype.updateEmail=function(e){var t=this.q.defer();return this._employeeServices.updateEmail(this._stateParams.id,e).then(function(e){t.resolve(!0)},function(e){t.resolve(!1)}),t.promise},t.prototype.editCustomFieldGroup=function(e,t,i){var n=this;this.submitted=!1,this.sectionId=e,this.groupId=t,this.activeGroup=angular.copy(i),this.activeGroupCopy=angular.copy(i),this.toggleForm=!1,this.submitted=!1,this.modalInstance=this._modal.open({scope:this._scope,templateUrl:"edit-field-group-modal",backdrop:"static",windowClass:"employee-profile-modal",keyboard:!1}),this.modalInstance.result.then(function(e){n.loadEmployeeProfile()})},t.prototype.updateEmployeeSummary=function(){switch(this.activeGroup.identifier){case"primaryinfoGroup":this._$rootScope.$broadcast("displayNameUpdated",{id:this._stateParams.id,userProfile:this.model}),this.employeeProfile.displayName=this.model.displayName;break;case"contactinfoGroup":this.employeeProfile.mobilePhone=this.model.mobilePhone,this.employeeProfile.email=this.model.email,this.employeeProfile.skypeId=this.model.skypeId,this.employeeProfile.employeeUserName=this.model.employeeUserName}},t.prototype.getFieldRenderTemplate=function(e){return"MobilePhone"==e.identifier?"MobileNumber-preview":"WorkPhone"==e.identifier||"HomePhone"==e.identifier?"PhoneNumber-preview":e.formElementHint?e.formElementHint+"-preview":void 0},t.prototype.setCustomProprties=function(){var e=this,t=this;this.activeGroup.fields.forEach(function(i){"MyRelations"==i.identifier&&"relationinfogroup"==e.activeGroup.identifier&&i.value.forEach(function(e){e.gender=null==e.gender?0:e.gender}),"MarriageDate"==i.identifier&&(i.value=1==e.marritalStatus?null:i.value),e.customProprties[i.identifier]=i.fieldType==t.fieldTypes.Date.template&&i.value?i.value.dateOnlyString():i.value})},t.prototype.saveCustomProperties=function(){var e=this;if(this.form.$valid){this.setCustomProprties();var t=this,i=this.isAdmin?this._stateParams.id:this._appContext.myPublicProfile.id,n=this.sectionId,o=this.groupId;(this.isAdmin?this._employeeServices.saveCustomProperties(i,n,o,this.customProprties):this._myProfileService.saveCustomProperties(n,o,this.customProprties)).then(function(i){t.modalInstance.close(),e._notificationService.success(e.activeGroup.title+" updated successfully")},function(t){e._notificationService.error("An error occurred while updating details.")})}},t.prototype.toggleAddForm=function(){this.toggleForm=!this.toggleForm,this.submitted=!1,this.selectedGroupField={}},t.prototype.editGroupField=function(e,t){this.toggleForm=!0,this.activeIndex=e,this.submitted=!1,this.selectedGroupField=angular.copy(t)},t.prototype.addGroupField=function(){this.form.$valid&&(this.selectedGroupField.id=this.utilService.getGuid(),this.activeGroup.fields[0].value.push(this.selectedGroupField),this.toggleAddForm())},t.prototype.updateGroupField=function(){this.form.$valid&&(this.activeGroup.fields[0].value[this.activeIndex]=this.selectedGroupField,this.toggleAddForm())},t.prototype.deleteFieldGroup=function(e){this.toggleForm=!1,this.activeGroup.fields[0].value.splice(e,1)},t.prototype.updateDateConfig=function(){this.fromDatePickerOptions={showWeeks:!1,maxDate:this.selectedGroupField.to},this.toDatePickerOptions={showWeeks:!1,maxDate:this.currentDate,minDate:this.selectedGroupField.from}},t.$inject=["$scope","$rootScope","$filter","AppContext","AppSettings","EmployeeProfileService","CustomFieldService","LookupServices","OrgSettingServices","AuthenticationMode","CustomUsernameType","$uibModal","$stateParams","NotificationService","dialogs","MyProfileServices","EmployeeServices","$q","AppSettings","FieldVisibility","FieldPermissionRoles","FieldApproval","FieldTypes","RelationTypes","BloodGroup","Gender","SupportedViews","CompositeViewType","Utils"],t}(),angular.module("employees").component("employeeProfileCompleteDetails",{templateUrl:"employeeprofile/profiledetails",controller:t,controllerAs:"ctrl",bindings:{employeeProfile:"="}})}(EmployeeProfile||(EmployeeProfile={})),function(e){var t;e.Components||(e.Components={}),t=function(){function e(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S,C,w,b){var P=this;this.appSettings=e,this.appContext=t,this.appFeatures=i,this._scope=n,this.state=o,this._stateParams=r,this._modal=a,this.employeeProfileService=s,this.employeeProfileActionsService=l,this.exitStatus=c,this.employmentStatus=p,this.notificationService=u,this.sharedModel=d,this.dialogs=m,this.accountStatus=y,this.employeeServices=h,this.$q=f,this.customFieldService=g,this.fieldPermissionRoles=v,this.fieldVisibility=S,this.supportedViews=C,this.compositeViewType=w,this.sharedDataService=b,this.fileUploadSettings={},this.selectedImageUrl=[],this.exitRequestStatus=Employee.Models.ExitRequestStatus,this.dayType=["working day","holiday","full day weekly off","first half weekly off","second half weekly off"],this.init=function(){P.$q.all([P.customFieldService.getView(P.compositeViewType.EmployeeProfile.id,P.supportedViews.EmployeeProfile.value,P.supportedViews.EmployeeProfile.value),P.employeeProfileService.getEmployeeProfileHeaderDetails(P.employeeId),P.appContext.currentUser()]).then(function(e){P.customFieldConfig=e[0],P.model=new Employees.Model.EmployeeProfileBasicDetails(e[1]),0==e[1].employmentStatus&&P.appContext.isFeaturePresent(P.appFeatures.Attendance.title)&&P.employeeProfileService.getEmployeeClockInDetails(P.employeeId).then(function(e){P.model.clockInDetails=e}),P.isMyReportee=P.model.isMyReportee,P.employeeAttributes=P.model.employeeAttributes,P.sharedDataService.setEmployeeAttributes(P.employeeAttributes),P.isPayrollAdmin=P.appContext.hasPrivilege(["PAYROLL.MANAGE_EMPLOYEE"],P.employeeAttributes),P.isAdmin=P.appContext.hasPrivilege(["HRIS.MANAGE_EMPLOYEE"],P.employeeAttributes),P.setFieldPermissions(),P.model.profileImageUrl=null==e[1].profileImageUrl?null:e[1].profileImageUrl+"?"+(new Date).getTime(),P.setTimeDefaultUrl(),P.setExpenseDefaultUrl(),P.getExitInfo(),P.canViewOnlyFinanceTab=P.appContext.hasPrivilege(["EmployeeFinance.ViewEmployeeSalaryDetails","EmployeeFinance.Implicit.ViewEmployeeSalaryDetails"],P.employeeAttributes)&&!P.appContext.hasPrivilege(["PAYROLL.MANAGE","FINANCE.MANAGE","PAYROLL.MANAGE_EMPLOYEE"],P.employeeAttributes)})},this.setTimeDefaultUrl=function(){P.appContext.isFeaturePresent(P.appFeatures.Leaves.title)&&P.appContext.hasPrivilege(["Leave.Implicit.ViewEmployeeLeaves","Leave.ViewEmployeeLeaves"],P.employeeAttributes)?P.timeDefaultPageUrl="/ui/#/employee/"+P.employeeId+"/time/leave":P.appContext.isFeaturePresent(P.appFeatures.Timesheet.title)&&P.appContext.hasPrivilege(["TIMESHEET.APPROVE"],P.employeeAttributes)?P.timeDefaultPageUrl="/old/#/employee/"+P.employeeId+"/time/timesheets":P.appContext.isFeaturePresent(P.appFeatures.Attendance.title)&&P.appContext.hasPrivilege(["Attendance.ViewEmployeeAttendanceDetails","Attendance.Implicit.ViewEmployeeAttendanceDetails"],P.employeeAttributes)&&(P.timeDefaultPageUrl="/ui/#/employee/"+P.employeeId+"/time/attendance")},this.setExpenseDefaultUrl=function(){P.appContext.isFeaturePresent(P.appFeatures.Expenses.title)&&(P.appContext.hasPrivilege(["Expense.Implicit.ViewExpenseClaim","Expense.ViewExpenseClaim"],P.employeeAttributes)?P.expenseDefaultPageUrl="/ui/#/employee/"+P.employeeId+"/expenses/pending":P.appContext.hasPrivilege(["Expense.Implicit.ViewAdvanceRequest","Expense.ViewAdvanceRequest"],P.employeeAttributes)&&(P.expenseDefaultPageUrl="/ui/#/employee/"+P.employeeId+"/expenses/advancerequests"))},this.getExitInfo=function(){P.appContext.hasPrivilege(["Offboarding.ViewEmployeeExitStatus","Offboarding.Implicit.ViewEmployeeExitStatus"],P.employeeAttributes)&&P.employeeProfileActionsService.getExitDetails(P.employeeId).then(function(e){P.exitInfo=e})},this.setFieldPermissions=function(){P.fieldVisibilityPermissions={};var e=P.isAdmin||P.isMyReportee?P.fieldPermissionRoles.ReportingManagerAndUp.id:P.fieldPermissionRoles.EveryOne.id;P.customFieldConfig.sections.forEach(function(t){t.fieldGroups.forEach(function(t){t.fields.forEach(function(i){var n=i.fieldPermissions.find(function(t){return t.role==e});P.fieldVisibilityPermissions[i.name.toLowerCase()]=n.visibility!=P.fieldVisibility.Hidden.id&&!t.isHidden})})})},this.initiateOrUpdateExit=function(){P._modal.open({templateUrl:"initiateEmployeeExit",windowClass:"full-screen-modal dark-modal employee-exit-modal action-content",controller:"RMEmployeeExitController",controllerAs:"ctrl",backdrop:"static",resolve:{EmployeeId:function(){return P.model.id},myTeamService:function(){return null},ExitService:function(){return P.employeeProfileActionsService},isUpdateRequest:function(){return!0},isThroughUrl:function(){return!1}}}).result.then(function(e){e.exitRequest&&(4==e.exitRequest.exitRequestStatus||7==e.exitRequest.exitRequestStatus?(P.model.exitStatus=null,P.model.employmentStatus=P.employmentStatus.Working.id,P.model.effectiveDate=null,P.model.exitDate=null,P.model.exitInitiatedBy=null,P.exitInfo=null,P.notificationService.success("Termination cancelled.")):P.updateEmployeeExitDetails())})},this.cancelTermination=function(){P.dialogs.confirm("Please Confirm","Are you sure want to cancel exit process ?").result.then(function(){P.notificationService.information("Updating Job Info..."),P.employeeProfileActionsService.cancelEmployeeExitRequest(P.model.id,"").then(function(e){P.model.exitStatus=null,P.model.employmentStatus=P.employmentStatus.Working.id,P.model.effectiveDate=null,P.model.exitDate=null,P.model.exitInitiatedBy=null,P.exitInfo={},P.notificationService.success("Termination cancelled.")},function(e){P.notificationService.error("An error occurred while canceling termination.")})})},this.inviteEmployee=function(){P.model.invitationStatus=P.accountStatus.invited.id,P.notificationService.information("Inviting Employeee..."),P.employeeServices.employeeManage.save({id:P.employeeId,action:"inviteuser"},{},function(){P.notificationService.success("Employee has been invited.")},function(){P.model.invitationStatus=P.accountStatus.notInvited.id,P.notificationService.error("An error occurred while inviting an employee.")})},this.rejoinEmployee=function(){P.dialogs.confirm("Please Confirm","Are you sure want to join this employee again ?").result.then(function(){P.employeeProfileActionsService.rejoinEmployee(P.model.id).then(function(e){P.model.exitStatus=null,P.model.employmentStatus=P.employmentStatus.Working.id,P.model.effectiveDate=null,P.model.exitDate=null,P.model.exitInitiatedBy=null,P.exitInfo={},P.notificationService.success("Employee rejoined successfully")},function(e){P.notificationService.error("An error occurred while re-joining an employee.")})})},this.updateProfilePicture=function(){P._modal.open({templateUrl:"profile-picture-template",controller:"UpdateEmployeeProfilePictureController",controllerAs:"ctrl",scope:P._scope,resolve:{profileImageInfo:function(){return{imageUrl:P.model.profileImageUrl,employeeId:P.employeeId,isMyProfile:!1}}}}).result.then(function(e){P.model.profileImageUrl=e})},this.disableEmployeeAccount=function(){P.dialogs.confirm("Please Confirm","Are you sure want to disable keka login for this employee ?").result.then(function(){P.employeeServices.disableEmployeeAccount(P.model.id).then(function(e){P.model.accountStatus=P.accountStatus.disabled.id,P.notificationService.success("Employee account disabled successfully")},function(e){P.notificationService.error("An error occurred while disabling employee login.")})})},this.enableEmployeeAccount=function(){P.dialogs.confirm("Please Confirm","Are you sure you want enable keka login for this employee ?").result.then(function(){P.employeeServices.enableEmployeeAccount(P.model.id).then(function(e){P.model.accountStatus=e.accountStatus,P.notificationService.success("Employee account enabled successfully")},function(e){P.notificationService.error("An error occurred while enabling employee login.")})})},this.setPassword=function(){P.model.email?P.resetLinkModal():P.generatePasswordModal()},this.employeeId=this._stateParams.id,this.fileUploadSettings=angular.copy(this.appSettings.fileUploadSettings),this.fileUploadSettings.acceptFileTypes=/(\.|\/)(gif|jpe?g|png)$/i,this.init()}return e.prototype.updateEmployeeExitDetails=function(){var e=this;this.employeeProfileActionsService.getExitDetails(this.employeeId).then(function(t){e.exitInfo=t,e.model.exitDate=t.lastWorkingDate,e.model.effectiveDate=t.advanceNoticeDate,e.model.exitStatus=t.exitStatus,e.model.employmentStatus=t.employmentStatus})},e.prototype.takeActionOnExit=function(){var e=this;this._modal.open({templateUrl:"initiateEmployeeExit",windowClass:"full-screen-modal dark-modal employee-exit-modal action-content",controller:"RMEmployeeExitController",controllerAs:"ctrl",backdrop:"static",resolve:{EmployeeId:function(){return e.model.id},myTeamService:function(){return null},ExitService:function(){return e.employeeProfileActionsService},isUpdateRequest:function(){return!1},isThroughUrl:function(){return!1}}}).result.then(function(t){t.exitRequest&&(4==t.exitRequest.exitRequestStatus||7==t.exitRequest.exitRequestStatus?(e.model.exitStatus=null,e.model.employmentStatus=e.employmentStatus.Working.id,e.model.effectiveDate=null,e.model.exitDate=null,e.model.exitInitiatedBy=null,e.exitInfo=null,e.notificationService.success("Termination cancelled.")):e.updateEmployeeExitDetails())})},e.prototype.resetLinkModal=function(){var e=this;this._modal.open({templateUrl:"password-reset-link",controller:"ResetPasswordController",controllerAs:"ctrl",backdrop:"static",scope:this._scope,resolve:{model:function(){return e.model},passwordLinkStatus:!1}}).result.then(function(e){})},e.prototype.generatePassword=function(){var e=this;this._modal.open({templateUrl:"generate-password",controller:"GeneratePasswordController",controllerAs:"ctrl",backdrop:"static",scope:this._scope,resolve:{model:function(){return e.model},toGeneratePassword:!0}}).result.then(function(e){})},e.prototype.generatePasswordModal=function(){var e=this;this._modal.open({templateUrl:"generate-password",controller:"GeneratePasswordController",controllerAs:"ctrl",backdrop:"static",scope:this._scope,resolve:{model:function(){return e.model},toGeneratePassword:!1}}).result.then(function(e){})},e.$inject=["AppSettings","AppContext","AppFeatures","$scope","$state","$stateParams","$uibModal","EmployeeProfileService","EmployeeProfileActionsService","ExitStatus","EmploymentStatus","NotificationService","SharedModel","dialogs","AccountStatus","EmployeeServices","$q","CustomFieldService","FieldPermissionRoles","FieldVisibility","SupportedViews","CompositeViewType","SharedDataService"],e}(),angular.module("employees").component("employeeProfileHeader",{templateUrl:"employeeprofile/profileheader",controller:t,controllerAs:"ctrl",bindings:{model:"=",fieldVisibilityPermissions:"="}})}(EmployeeProfile||(EmployeeProfile={})),function(e){var t;e.Components||(e.Components={}),t=function(){function e(e,t,i,n){var o=this;this._stateParams=e,this._modal=t,this.employeeProfileService=i,this.appContext=n,this.experienceDetails=[],this.educationDetails=[],this.hasDocumentFeature=!1,this.hasTimelineFeature=!1,this.init=function(){o.employeeProfileService.getEmployeeProfileAboutDetails(o.employeeId).then(function(e){o.model=new Employees.Model.EmployeeProfileSummaryDetails(e),e.professionalSummary||o.employeeProfileService.getEmployeeProfileHeaderDetails(o.employeeId).then(function(e){o.profile=new Employees.Model.EmployeeProfileBasicDetails(e)}),$("#summaryNav").addClass("active")})},this.employeeId=this._stateParams.id,this.hasDocumentFeature=this.appContext.isFeaturePresent("DOCUMENTS"),this.hasTimelineFeature=this.appContext.isFeaturePresent("TIMELINE"),this.hasDocumentFeature&&(i.getEducationDetails(this.employeeId).then(function(e){o.educationDetails=e,o.educationDetails.forEach(function(e){delete e["cgpa / Percentage"],e.yearOfJoining&&e.yearOfCompletion&&(e.yearOfJoining=new Date(e.yearOfJoining),e.yearOfCompletion=new Date(e.yearOfCompletion))})}),i.getExperienceDetails(this.employeeId).then(function(e){o.experienceDetails=e,o.experienceDetails.forEach(function(e){e.dateOfJoining&&e.dateOfRelieving&&(e.dateOfJoining=new Date(e.dateOfJoining),e.dateOfRelieving=new Date(e.dateOfRelieving))})})),this.init()}return e.$inject=["$stateParams","$uibModal","EmployeeProfileService","AppContext"],e}(),angular.module("employees").component("employeeProfileSummary",{templateUrl:"employeeprofile/summary",controller:t,controllerAs:"ctrl",bindings:{fieldVisibilityPermissions:"="}})}(EmployeeProfile||(EmployeeProfile={})),function(e){var t;e.Components||(e.Components={}),t=function(){function e(){}return e.$inject=[],e}(),angular.module("employees").component("employeeProfile",{templateUrl:"employeeprofile/index",controller:t,controllerAs:"ctrl"})}(EmployeeProfile||(EmployeeProfile={})),function(e){var t;e.Components||(e.Components={}),t=function(){function e(e,t,i,n,o,r,a,s,l){var c=this;this._stateParams=e,this.employeeLookupService=t,this.$q=i,this.customFieldService=n,this.fieldPermissionRoles=o,this.fieldVisibility=r,this.appContext=a,this.supportedViews=s,this.compositeViewType=l,this.init=function(){c.$q.all([c.customFieldService.getView(c.compositeViewType.EmployeeProfile.id,c.supportedViews.EmployeeProfile.value,c.supportedViews.EmployeeProfile.value),c.employeeLookupService.getEmployeeTeam(c.employeeId)]).then(function(e){c.customFieldConfig=e[0],c.myTeam=e[1],c.setFieldPermissions()})},this.setFieldPermissions=function(){c.fieldVisibilityPermissions={};var e=c.employeeId==c.appContext.myPublicProfile.id?c.fieldPermissionRoles.ReportingManagerAndUp.id:c.fieldPermissionRoles.EveryOne.id;c.customFieldConfig.sections.forEach(function(t){t.fieldGroups.forEach(function(t){t.fields.forEach(function(i){var n=i.fieldPermissions.find(function(t){return t.role==e});c.fieldVisibilityPermissions[i.name.toLowerCase()]=n.visibility!=c.fieldVisibility.Hidden.id&&!t.isHidden})})})},this.employeeId=this._stateParams.id,this.init()}return e.$inject=["$stateParams","EmployeeLookupService","$q","CustomFieldService","FieldPermissionRoles","FieldVisibility","AppContext","SupportedViews","CompositeViewType"],e}(),angular.module("employees").component("employeeTeam",{templateUrl:"employeeprofile/team",controller:t,controllerAs:"ctrl"})}(EmployeeProfile||(EmployeeProfile={})),function(e){!function(e){!function(e){e[e.NotInvited=0]="NotInvited",e[e.Invited=1]="Invited"}(e.InvitationStatus||(e.InvitationStatus={})),function(e){e[e.NotRegistered=0]="NotRegistered",e[e.Registered=1]="Registered",e[e.Disabled=2]="Disabled"}(e.AccountStatus||(e.AccountStatus={})),function(e){e[e.Working=0]="Working",e[e.Relieved=1]="Relieved"}(e.EmploymentStatus||(e.EmploymentStatus={}));var t=function(){return function(e){this.id=e.id,this.employeeNumber=e.employeeNumber,this.displayName=e.displayName,this.profileImageUrl=e.profileImageUrl,this.email=e.email,this.mobilePhone=e.mobilePhone,this.workPhone=e.workPhone,this.invitationStatus=e.invitationStatus,this.accountStatus=e.accountStatus,this.employeeUserName=e.employeeUserName,this.userName=e.userName,this.locationName=e.locationName,this.jobTitle=e.jobTitle,this.businessUnitName=e.businessUnitName,this.departmentName=e.departmentName,this.reportingTo=e.reportingTo,this.reportingManagerName=e.reportingManagerName,this.skypeId=e.skypeId,this.exitStatus=e.exitStatus,this.effectiveDate=e.effectiveDate,this.employmentStatus=e.employmentStatus,this.isMyReportee=e.isMyReportee,this.isPhysicallyHandicapped=e.iSPhysicallyHandicapped,this.flowId=e.flowId,this.employeeAttributes=e.employeeAttributes}}();e.EmployeeProfileBasicDetails=t;var i=function(){return function(){}}();e.ClockInDetails=i;var n=function(){return function(e){this.id=e.id,this.professionalSummary=e.professionalSummary}}();e.EmployeeProfileSummaryDetails=n}(e.Model||(e.Model={}))}(Employees||(Employees={})),function(e){!function(e){var t=function(){function e(e){var t=this;this._resource=e,this.getEmployeeProfileHeaderDetails=function(e){return t.employeeProfile.get({action:"profileheader",id:e}).$promise},this.getEmployeeProfileAboutDetails=function(e){return t.employeeProfile.get({action:"summary",id:e}).$promise},this.getEmployeeProfile=function(e){return t.employeeProfile.get({action:"publicprofile",id:e}).$promise},this.getEmployeeClockInDetails=function(e){return t.employeeProfile.get({action:"clockInDetailsForToday",id:e}).$promise},this.getEducationDetails=function(e){return t.employeeProfile.query({action:"educationdetails",id:e}).$promise},this.getExperienceDetails=function(e){return t.employeeProfile.query({action:"experiencedetails",id:e}).$promise},this.employeeProfile=this._resource("/api/employee/:id/profile/:action",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.$inject=["$resource"],e}();e.EmployeeProfileService=t;var i=function(){function e(e){this._resource=e,this.employeeProfileActions=this._resource("/api/employee/:id/profileactions/:action",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getEmployee=function(e){return this.employeeProfileActions.get({action:"employeedetails",id:e}).$promise},e.prototype.getEmployeeExitInfo=function(e){return this.employeeProfileActions.get({action:"info",id:e}).$promise},e.prototype.saveEmployeeExitRequest=function(e,t){return this.employeeProfileActions.save({action:"exitrequest",id:e},t).$promise},e.prototype.updateEmployeeExitRequest=function(e,t){return this.employeeProfileActions.update({action:"exitrequest",id:e},t).$promise},e.prototype.cancelEmployeeExitRequest=function(e,t){return this.employeeProfileActions.delete({action:"exitrequest",id:e,rejectComment:t}).$promise},e.prototype.approveEmployeeExitRequest=function(e){return this.employeeProfileActions.update({action:"approveexit",id:e}).$promise},e.prototype.rejectEmployeeExitRequest=function(e,t){return this.employeeProfileActions.save({action:"rejectexit",id:e,rejectComment:t},{}).$promise},e.prototype.rejoinEmployee=function(e){return this.employeeProfileActions.update({action:"rejoin",id:e}).$promise},e.prototype.getExitDetails=function(e){return this.employeeProfileActions.get({action:"exitdetails",id:e}).$promise},e.$inject=["$resource"],e}();e.EmployeeProfileActionsService=i,angular.module("employees").service("EmployeeProfileService",t).service("EmployeeProfileActionsService",i)}(e.Services||(e.Services={}))}(EmployeeProfile||(EmployeeProfile={})),function(e){var t;e.Components||(e.Components={}),t=function(){function e(e,t,i,n,o){this.AppSettings=e,this.notificationService=t,this.employeesService=i,this.q=n,this.employeeJobService=o,this.submitted=!1,this.disableButton=!1}return e.prototype.$onInit=function(){this.modelOptions=angular.copy(this.AppSettings.modelBlurSettings),this.model.newAttendanceNumber=null,this.request=new EmployeeJobProfile.Model.AttendanceNumberChangeRequest({})},e.prototype.updateAttendanceNumber=function(){var e=this;this.editAttendanceNumberForm.$valid&&!this.disableButton&&(this.notificationService.information("updating attendance Number..."),this.request.oldValueName=this.model.attendanceNumber,this.request.newValueName=this.model.newAttendanceNumber,this.request.employeeId=this.employeeId,this.employeeJobService.updateAttendanceNumber(this.employeeId,this.request).then(function(t){t.response?(e.modalInstance.close(e.model.newAttendanceNumber),e.notificationService.success("Attendance number updated successfully")):(e.notificationService.error("An error occurred while updating attendance number."),e.modalInstance.dismiss())},function(t){e.modalInstance.dismiss(),e.notificationService.error("An error occurred while updating attendance number.")}))},e.prototype.isAttendanceNumberValid=function(e){var t=this;if(null!=e){this.disableButton=!0;var i=this.q.defer();return this.employeesService.employee.get({id:0,action:"doesattendancenumberexist",number:e},function(e){e.result?i.resolve(!1):i.resolve(!0),t.disableButton=!1}),i.promise}return!0},e.prototype.closeAttendanceNumberEditor=function(){this.modalInstance.dismiss(),this.model.newAttendanceNumber=null},e.$inject=["AppSettings","NotificationService","EmployeesService","$q","EmployeeJobService"],e}(),angular.module("employees").component("changeAttendanceNumber",{templateUrl:"editAttendanceNumber",controller:t,controllerAs:"ctrl",bindings:{model:"<",employeeId:"<",modalInstance:"<"}})}(EmployeeProfile||(EmployeeProfile={})),function(e){var t;e.Components||(e.Components={}),t=function(){function e(e,t,i,n){this.AppSettings=e,this.notificationService=t,this.employeeJobService=i,this.businessUnitService=n,this.submitted=!1,this.disableButton=!1,this.allGroups=[],this.businessUnits=[],this.isRoleChanged=!0}return e.prototype.$onInit=function(){var e=this;this.modelOptions=angular.copy(this.AppSettings.modelBlurSettings),this.disableButton=!0,this.request=new EmployeeJobProfile.Model.BusinessUnitChangeRequest({}),this.businessUnitService.getAllBusinessUnits().then(function(t){e.businessUnits=t,e.currentBusinessUnit=e.businessUnits.find(function(t){return t.id==e.model.businessUnitId})})},e.prototype.onBusinessUnitSelectd=function(){this.disableButton=!1},e.prototype.updateBusinessUnit=function(){var e=this;this.editBusinessUnitForm.$valid&&(this.notificationService.information("Updating business unit..."),this.request.oldValueId=this.model.businessUnitId,this.request.newValueId=this.businessUnit.id,this.request.oldValueName=null==this.currentBusinessUnit?"":this.currentBusinessUnit.name,this.request.newValueName=this.businessUnit.name,this.request.reason=1==this.isRoleChanged?EmployeeJobProfile.Model.JobDetailChangeReason.RoleChange:EmployeeJobProfile.Model.JobDetailChangeReason.Correction,this.request.employeeId=this.employeeId,this.employeeJobService.updateBusinessUnit(this.employeeId,this.request).then(function(t){t.response?(e.modalInstance.close({businessUnit:e.businessUnit}),e.notificationService.success("Business unit updated successfully")):(e.notificationService.error("Business unit is either invalid or already exists."),e.modalInstance.dismiss())},function(t){e.modalInstance.dismiss(),e.notificationService.error("An error occurred while updating business unit.")}))},e.prototype.closeBusinessUnitEditor=function(){this.modalInstance.dismiss()},e.$inject=["AppSettings","NotificationService","EmployeeJobService","BusinessUnitService"],e}(),angular.module("employees").component("changeBusinessUnit",{templateUrl:"editBusinessUnit",controller:t,controllerAs:"ctrl",bindings:{model:"<",employeeId:"<",modalInstance:"<"}})}(EmployeeProfile||(EmployeeProfile={})),function(e){var t;e.Components||(e.Components={}),t=function(){function e(e,t,i,n,o){this.AppSettings=e,this.notificationService=t,this.employeeJobService=i,this.q=n,this.costCenterSettingsService=o,this.submitted=!1,this.disableButton=!1,this.costCenters=[]}return e.prototype.$onInit=function(){var e=this;this.modelOptions=angular.copy(this.AppSettings.modelBlurSettings),this.disableButton=!0,this.request=new EmployeeJobProfile.Model.CostCenterChangeRequest({}),this.costCenterSettingsService.getAllCostCenters().then(function(t){e.costCenters=t})},e.prototype.onSelect=function(){this.disableButton=!1},e.prototype.updateCostCenter=function(){var e=this;this.form.editCostCenterForm.$valid&&(this.notificationService.information("updating Cost center..."),this.request.oldValueId=this.model.costCenterId,this.request.newValueId=this.costCenter.id,this.request.oldValueName=null==this.oldCostCenterName?"":this.oldCostCenterName,this.request.newValueName=this.costCenter.name,this.request.employeeId=this.employeeId,this.employeeJobService.updateCostCenter(this.employeeId,this.request).then(function(t){t.response?(e.modalInstance.close(e.costCenter),e.notificationService.success("Cost center updated successfully")):(e.notificationService.error("Cost center is either invalid or already exists."),e.modalInstance.dismiss())},function(t){e.modalInstance.dismiss(),e.notificationService.error("An error occurred while updating Cost center.")}))},e.prototype.closeCostCenterEditor=function(){this.modalInstance.dismiss()},e.$inject=["AppSettings","NotificationService","EmployeeJobService","$q","CostCenterSettingsService"],e}(),angular.module("employees").component("changeCostCenter",{templateUrl:"editCostCenter",controller:t,controllerAs:"ctrl",bindings:{model:"<",employeeId:"<",oldCostCenterName:"<",modalInstance:"<"}})}(EmployeeProfile||(EmployeeProfile={})),function(e){var t;e.Components||(e.Components={}),t=function(){function e(e,t,i,n){var o=this;this.AppSettings=e,this.notificationService=t,this.employeeJobService=i,this.departmentSettingsService=n,this.submitted=!1,this.disableButton=!1,this.departmentGroups=[],this.isRoleChanged=!0,this.setDepartment=function(e){o.department=e,o.disableButton=!1}}return e.prototype.$onInit=function(){var e=this;this.modelOptions=angular.copy(this.AppSettings.modelBlurSettings),this.disableButton=!0,this.request=new EmployeeJobProfile.Model.DepartmentChangeRequest({}),this.departmentSettingsService.getAllDepartments().then(function(t){e.departmentGroups=e.createDepartmentTree(t),e.currentDepartment=e.departmentGroups.find(function(t){return t.id==e.model.departmentId})})},e.prototype.createDepartmentTree=function(e){var t=[];return e.filter(function(t){return!e.some(function(e){return e.id===t.parentGroupId})}).forEach(function(i){i.depth=1,t.push(i),e.filter(function(e){return e.parentGroupId==i.id}).forEach(function(e){e.depth=2,t.push(e)})}),t},e.prototype.updateDepartment=function(){var e=this;this.editDepartmentForm.$valid&&(this.notificationService.information("updating Department..."),this.request.oldValueId=this.model.departmentId,this.request.newValueId=this.department.id,this.request.oldValueName=null==this.currentDepartment?"":this.currentDepartment.name,this.request.newValueName=this.department.name,this.request.reason=1==this.isRoleChanged?EmployeeJobProfile.Model.JobDetailChangeReason.RoleChange:EmployeeJobProfile.Model.JobDetailChangeReason.Correction,this.request.employeeId=this.employeeId,this.employeeJobService.updateDepartment(this.employeeId,this.request).then(function(t){t.response?(e.modalInstance.close({department:e.department}),e.notificationService.success("Department updated successfully")):(e.notificationService.error("Department is either invalid or already exists."),e.modalInstance.dismiss())},function(t){e.modalInstance.dismiss(),e.notificationService.error("An error occurred while updating department.")}))},e.prototype.closeDepartmentEditor=function(){this.modalInstance.dismiss()},e.$inject=["AppSettings","NotificationService","EmployeeJobService","DepartmentSettingsService"],e}(),angular.module("employees").component("changeDepartment",{templateUrl:"editDepartment",controller:t,controllerAs:"ctrl",bindings:{model:"<",employeeId:"<",modalInstance:"<"}})}(EmployeeProfile||(EmployeeProfile={})),function(e){var t;e.Components||(e.Components={}),t=function(){function e(e,t,i,n,o){this.AppSettings=e,this.notificationService=t,this.employeesService=i,this.q=n,this.employeeJobService=o,this.submitted=!1,this.disableButton=!1}return e.prototype.$onInit=function(){this.modelOptions=angular.copy(this.AppSettings.modelBlurSettings),this.model.newEmployeeNumber=null,this.request=new EmployeeJobProfile.Model.EmployeeNumberChangeRequest({})},e.prototype.updateEmployeeNumber=function(){var e=this;this.editEmployeeNumberForm.$valid&&(this.notificationService.information("updating Employee Number..."),this.request.oldValueName=this.model.employeeNumber,this.request.newValueName=this.model.newEmployeeNumber,this.request.employeeId=this.employeeId,this.employeeJobService.updateEmployeeNumber(this.employeeId,this.request).then(function(t){t.response?(e.modalInstance.close(e.model.newEmployeeNumber),e.notificationService.success("Employee number updated successfully")):(e.notificationService.error("Employee number is either invalid or already exists."),e.modalInstance.dismiss())},function(t){e.modalInstance.dismiss(),e.notificationService.error("An error occurred while updating employee number.")}))},e.prototype.isEmployeeNumberValid=function(e){var t=this;if(e){this.disableButton=!0;var i=this.q.defer();return this.employeesService.employee.get({id:0,action:"doesemployeenumberexist",number:e},function(e){i.resolve(!e.result),t.disableButton=!1}),i.promise}return!0},e.prototype.closeEmployeeNumberEditor=function(){this.modalInstance.dismiss(),this.model.newEmployeeNumber=null},e.$inject=["AppSettings","NotificationService","EmployeesService","$q","EmployeeJobService"],e}(),angular.module("employees").component("changeEmployeeNumber",{templateUrl:"editEmployeeNumber",controller:t,controllerAs:"ctrl",bindings:{model:"<",employeeId:"<",modalInstance:"<"}})}(EmployeeProfile||(EmployeeProfile={})),function(e){var t;e.Components||(e.Components={}),t=function(){function e(e,t,i){this.notificationService=e,this.employeesService=t,this.employeeJobService=i,this.submitted=!1,this.requestInProgress=!1,this.isRoleChanged=!0}return e.prototype.$onInit=function(){var e=this;this.model.newJobTitle=null,this.model.newSecondaryJobTitle=null,this.request=new EmployeeJobProfile.Model.JobTitleChangeRequest({}),this.employeeJobService.getEmployeeJobTitles().then(function(t){e.jobTitles=t,e.currentJobtitle=e.jobTitles.find(function(t){return t.id==e.model.jobTitleId})})},e.prototype.updateJobTitle=function(){var e=this;this.updateJobTitleForm.$valid&&(this.notificationService.information("Updating Job Title..."),this.request.oldValueId=this.model.jobTitleId,this.request.newValueId=this.model.newJobTitle.id,this.request.oldSecondaryJobTitleName=this.model.secondaryJobTitle,this.request.newSecondaryJobTitleName=this.model.newSecondaryJobTitle,this.request.oldValueName=this.currentJobtitle?this.currentJobtitle.name:"",this.request.newValueName=this.model.newJobTitle.name,this.request.reason=1==this.isRoleChanged?EmployeeJobProfile.Model.JobDetailChangeReason.RoleChange:EmployeeJobProfile.Model.JobDetailChangeReason.Correction,this.request.employeeId=this.employeeId,this.employeeJobService.updateJobTitle(this.employeeId,this.request).then(function(t){t.response?(e.model.jobTitleId=e.model.newJobTitle.id,e.model.jobTitle=e.model.newJobTitle,e.model.secondaryJobTitle=e.model.newSecondaryJobTitle==e.request.oldSecondaryJobTitleName?e.request.oldSecondaryJobTitleName:e.request.newSecondaryJobTitleName,e.modalInstance.close(e.model),e.notificationService.success("Employee job title updated successfully")):(e.notificationService.error("An error occurred while updating employee job title."),e.modalInstance.dismiss())},function(t){e.modalInstance.dismiss(),e.notificationService.error("An error occurred while updating employee job title.")}))},e.prototype.closeModal=function(){this.modalInstance.dismiss(),this.model.newJobTitleId=null},e.$inject=["NotificationService","EmployeesService","EmployeeJobService"],e}(),angular.module("employees").component("changeJobTitle",{templateUrl:"jobTitleUpdateTemplate",controller:t,controllerAs:"ctrl",bindings:{model:"<",employeeId:"<",modalInstance:"<"}})}(EmployeeProfile||(EmployeeProfile={})),function(e){var t;e.Components||(e.Components={}),t=function(){function e(e,t,i,n,o,r,a){this.notificationService=e,this.employeesService=t,this.timeDuration=i,this._leaveAccrualRate=n,this.employeeJobService=o,this._scope=r,this.leaveSettingService=a,this.submitted=!1,this.requestInProgress=!1,this.isPlanChanged=!1}return e.prototype.$onInit=function(){var e=this;this.model.newLeavePlan=null,this.model.effectiveFrom=null;var t=new Date;t.setDate(t.getDate()-1),this.datePickerOptions={maxDate:t,showWeeks:!1},this.leaveSettingService.getLeavePlans().then(function(t){e.leavePlans=t,e.currentLeavePlan=e.leavePlans.find(function(t){return t.id==e.model.leavePlanId})}),this.request=new EmployeeJobProfile.Model.LeavePlanChangeRequest({})},e.prototype.updateLeavePlan=function(){var e=this;this.updateLeavePlanForm.$valid&&(this.notificationService.information("Updating Leave Plan..."),this.request.employeeId=this.employeeId,this.request.oldValueId=this.currentLeavePlan.id,this.request.newValueId=this.model.newLeavePlan.id,this.request.reason=1==this.isPlanChanged?EmployeeJobProfile.Model.JobDetailChangeReason.RoleChange:EmployeeJobProfile.Model.JobDetailChangeReason.Correction,this.request.effectiveFrom=this.model.effectiveFrom&&!this.isPlanChanged?this.model.effectiveFrom.dateOnlyString():null,this.request.newValueName=this.model.newLeavePlan.name,this.request.oldValueName=this.currentLeavePlan.name,this.employeeJobService.updateLeavePlan(this.employeeId,this.request).then(function(t){t.response?(e.modalInstance.close(e.model.newLeavePlan),e.notificationService.success("Employee leave plan updated successfully")):(e.notificationService.error("An error occurred while updating employee leave plan."),e.modalInstance.dismiss())},function(t){e.modalInstance.dismiss(),e.notificationService.error("An error occurred while updating employee leave plan.")}))},e.prototype.getAccrualRateMessage=function(e){return!e.leaveQuota.hasUpperLimit||e.leaveAccrual.limitToAnnual?"None ":e.leaveAccrual.accrualBasedOnExperience?"Accrual varies based on experience ":e.leaveAccrual.accrualRate?"Accrue "+parseFloat((e.leaveQuota.timePeriod.duration/this._leaveAccrualRate.getById(e.leaveAccrual.accrualRate).instancesInaYear).toFixed(3))+(e.yearEndProcessing.maxPayDays>1?" days ":" day ")+this._leaveAccrualRate.getById(e.leaveAccrual.accrualRate).title:void 0},e.prototype.updateReason=function(e){this.model.isPlanChanged=e},e.prototype.closeModal=function(){this.modalInstance.dismiss(),this.model.newLeavePlanId=null},e.$inject=["NotificationService","EmployeesService","TimeDuration","LeaveAccrualRate","EmployeeJobService","$scope","LeaveSettingsService"],e}(),angular.module("employees").component("changeLeavePlan",{templateUrl:"leavePlanUpdateTemplate",controller:t,controllerAs:"ctrl",bindings:{model:"<",employeeId:"<",modalInstance:"<"}})}(EmployeeProfile||(EmployeeProfile={})),function(e){var t;e.Components||(e.Components={}),t=function(){function e(e,t,i,n,o){this.AppSettings=e,this.notificationService=t,this.employeeJobService=i,this.q=n,this.orgLocationService=o,this.submitted=!1,this.disableButton=!1,this.locations=[],this.isRoleChanged=!0}return e.prototype.$onInit=function(){var e=this;this.modelOptions=angular.copy(this.AppSettings.modelBlurSettings),this.disableButton=!0,this.request=new EmployeeJobProfile.Model.OrgLocationChangeRequest({}),this.orgLocationService.getOrgLocations().then(function(t){e.locations=t,e.currentLocation=e.locations.find(function(t){return t.id==e.model.locationId})})},e.prototype.onSelect=function(){this.disableButton=!1},e.prototype.updateLocation=function(){var e=this;this.editLocationForm.$valid&&(this.notificationService.information("updating Location..."),this.request.oldValueId=this.model.locationId,this.request.newValueId=this.location.id,this.request.oldValueName=this.model.locationName,this.request.newValueName=this.location.name,this.request.reason=1==this.isRoleChanged?EmployeeJobProfile.Model.JobDetailChangeReason.RoleChange:EmployeeJobProfile.Model.JobDetailChangeReason.Correction,this.request.employeeId=this.employeeId,this.employeeJobService.updateLocation(this.employeeId,this.request).then(function(t){t.response?(e.modalInstance.close(e.location),e.notificationService.success("Location updated successfully")):(e.notificationService.error("Location is either invalid or already exists."),e.modalInstance.dismiss())},function(t){e.modalInstance.dismiss(),e.notificationService.error("An error occurred while updating location.")}))},e.prototype.closeLocationEditor=function(){this.modalInstance.dismiss()},e.$inject=["AppSettings","NotificationService","EmployeeJobService","$q","OrgLocationService"],e}(),angular.module("employees").component("changeLocation",{templateUrl:"editLocation",controller:t,controllerAs:"ctrl",bindings:{model:"<",employeeId:"<",modalInstance:"<"}})}(EmployeeProfile||(EmployeeProfile={})),function(e){var t;e.Components||(e.Components={}),t=function(){function e(e,t,i,n,o,r){this.AppSettings=e,this.notificationService=t,this.employeesService=i,this._filter=n,this._dateServices=o,this.employeeJobService=r,this.submitted=!1,this.hasProbationEnd=!1,this.requestInProgress=!1}return e.prototype.$onInit=function(){this.modelOptions=angular.copy(this.AppSettings.modelBlurSettings),this.model.newProbationEndDate=null,this.request=new EmployeeJobProfile.Model.ProbationEndDateChangeRequest({})},e.prototype.updateProbationEndDate=function(){var e=this;this.editProbationDateForm.$valid&&(this.notificationService.information("updating Probation End Date..."),this.request.oldProbationEndDate=this._dateServices.dateOnlyString(this.model.probationEndDate),this.request.newProbationEndDate=this._dateServices.dateOnlyString(this.model.newProbationEndDate),this.request.newValueName=this._filter("date")(this.model.newProbationEndDate,"dd-MMMM-yyyy"),this.request.oldValueName=this._filter("date")(this.model.probationEndDate,"dd-MMMM-yyyy"),this.request.employeeId=this.employeeId,this.employeeJobService.updateProbationEndDate(this.employeeId,this.request).then(function(t){t.response?(e.modalInstance.close(e.model.newProbationEndDate),e.notificationService.success("Probation end date updated successfully")):(e.notificationService.error("An error occurred while updating probation end date."),e.modalInstance.dismiss())},function(t){e.modalInstance.dismiss(),e.notificationService.error("An error occurred while updating probation end date.")}))},e.prototype.updateConfirmedDate=function(){var e=(new Date).setHours(0,0,0,0),t=angular.copy(this.model.newProbationEndDate);this.hasProbationEnd=e>t.getTime(),this.hasProbationEnd||(this.confirmedDate=new Date(t.setDate(t.getDate()+1)))},e.prototype.closeProbationDateEditor=function(){this.modalInstance.dismiss(),this.model.newProbationEndDate=null},e.$inject=["AppSettings","NotificationService","EmployeesService","$filter","DateServices","EmployeeJobService"],e}(),angular.module("employees").component("changeProbationEndDate",{templateUrl:"editProbationDate",controller:t,controllerAs:"ctrl",bindings:{model:"<",employeeId:"<",modalInstance:"<"}})}(EmployeeProfile||(EmployeeProfile={})),function(e){var t;e.Components||(e.Components={}),t=function(){function e(e,t,i,n,o,r){this.AppSettings=e,this.notificationService=t,this.employeesService=i,this.employeeLookupService=n,this.q=o,this.employeeJobService=r,this.submitted=!1,this.disableButton=!1,this.isRoleChanged=!0}return e.prototype.$onInit=function(){var e=this;this.modelOptions=angular.copy(this.AppSettings.modelBlurSettings),this.model.newReportingManager=null,this.model.reportTo>0&&this.employeesService.getEmployee(this.model.reportTo).then(function(t){e.previousReportingManager=t}),this.request=new EmployeeJobProfile.Model.ReportingManagerChangeRequest({})},e.prototype.updateReportingManager=function(){var e=this;this.editReportingManagerForm.$valid&&(this.notificationService.information("updating Reporting Manager..."),this.request.oldValueId=this.model.reportTo,this.request.newValueId=this.model.newReportingManager.id,this.request.oldValueName=this.previousReportingManager?this.previousReportingManager.personalDetails.displayName:"",this.request.newValueName=this.model.newReportingManager.displayName,this.request.reason=1==this.isRoleChanged?EmployeeJobProfile.Model.JobDetailChangeReason.RoleChange:EmployeeJobProfile.Model.JobDetailChangeReason.Correction,this.request.employeeId=this.employeeId,this.employeeJobService.updateReportingManager(this.employeeId,this.request).then(function(t){t.result?(e.modalInstance.close(e.model.newReportingManager),e.notificationService.success("Reporting Manager updated successfully")):(e.notificationService.error("An error occurred while updating reporting manager."),e.modalInstance.dismiss())},function(t){e.modalInstance.dismiss(),e.notificationService.error("An error occurred while updating reporting manager.")}))},e.prototype.closeReportingManagerEditor=function(){this.modalInstance.dismiss(),this.model.newReportingManager=null},e.prototype.getMatchedEmployees=function(e){var t=this;if(e&&e.length>=2){var i=this.q.defer();return this.employeeLookupService.searchEmployees(e).then(function(e){if(0==e.length&&e.push({noResults:!0}),null!=t.previousReportingManager){var n=e.findIndex(function(e){return e.id==t.previousReportingManager.id});-1!=n&&e.splice(n,1)}i.resolve(e)}),i.promise}},e.$inject=["AppSettings","NotificationService","EmployeesService","EmployeeLookupService","$q","EmployeeJobService"],e}(),angular.module("employees").component("changeReportingManager",{templateUrl:"editReportingManager",controller:t,controllerAs:"ctrl",bindings:{model:"<",employeeId:"<",modalInstance:"<"}})}(EmployeeProfile||(EmployeeProfile={})),function(e){var t;e.Components||(e.Components={}),t=function(){function e(e,t,i,n){this.AppSettings=e,this.notificationService=t,this.employeeJobService=i,this.workerTypeService=n,this.submitted=!1,this.disableButton=!1,this.isRoleChanged=!0}return e.prototype.$onInit=function(){this.modelOptions=angular.copy(this.AppSettings.modelBlurSettings),this.disableButton=!0,this.request=new EmployeeJobProfile.Model.WorkerTypeChangeRequest({}),this.currentWorkerType=this.workerTypeService.getById(this.model.workerType)},e.prototype.onWorkerTypeSelected=function(){this.disableButton=!1},e.prototype.updateWorkerType=function(){var e=this;this.editWorkerTypeForm.$valid&&(this.notificationService.information("Updating worker type..."),this.request.oldValueId=this.model.workerType,this.request.newValueId=this.workerType,this.request.oldValueName=null==this.currentWorkerType?"":this.currentWorkerType.name,this.request.newValueName=this.workerTypeService.getById(this.workerType).name,this.request.reason=1==this.isRoleChanged?EmployeeJobProfile.Model.JobDetailChangeReason.RoleChange:EmployeeJobProfile.Model.JobDetailChangeReason.Correction,this.request.employeeId=this.employeeId,this.employeeJobService.updateWorkerType(this.employeeId,this.request).then(function(t){t.response?(e.modalInstance.close({workerType:e.workerType}),e.notificationService.success("Worker type updated successfully")):(e.notificationService.error("Worker type is either invalid or already exists."),e.modalInstance.dismiss())},function(t){e.modalInstance.dismiss(),e.notificationService.error("An error occurred while updating worker type.")}))},e.prototype.closeWorkerTypeEditor=function(){this.modalInstance.dismiss()},e.$inject=["AppSettings","NotificationService","EmployeeJobService","WorkerType"],e}(),angular.module("employees").component("changeWorkerType",{templateUrl:"editWorkerType",controller:t,controllerAs:"ctrl",bindings:{model:"<",employeeId:"<",modalInstance:"<"}})}(EmployeeProfile||(EmployeeProfile={})),function(e){var t;e.Components||(e.Components={}),t=function(){function e(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S){var C=this;this._state=e,this.q=t,this._stateParams=i,this._modal=n,this.employeeLookupService=o,this.employeeJobService=r,this.workerType=a,this.timeType=s,this._scope=l,this.filter=c,this.employeesService=p,this.remoteClockinApprovalType=u,this._filter=d,this.notificationService=m,this.applicationModule=y,this.appSettings=h,this._rootScope=f,this.publicProfileServices=g,this.myProfileServices=v,this.employmentStatus=S,this.eventTypeIdentifier=Employee.Profile.CutomFields.Model.EventTypeIdentifiers,this.fieldNames=Employee.Profile.CutomFields.Model.FieldNames,this.isemployeeNumberEditable=!1,this.isEmployeeNumberRequired=!1,this.isreportingManagerEditable=!1,this.init=function(){C.datepickerOptions=angular.copy(C.appSettings.datepickerOptions),C.modelOptions=angular.copy(C.appSettings.modelBlurSettings),C.setApprovalOptions(),C.fieldDetails=new Employee.Model.FieldDetails(null),C.q.all([C.employeeLookupService.getJobInfoLookups(),C.employeeId?C.employeeJobService.getEmployeejobDetails(C.employeeId):C.myProfileServices.getMyJobInfo()]).then(function(e){C.jobDetailsLookups=e[0],C.model=new Employee.Model.EmployeeJobInfo(e[1]),0==C.model.payBandId?C.model.payBandId=null:C.model.payBandId,0==C.model.payGradeId?C.model.payGradeId=null:C.model.payGradeId,0==C.model.expensePolicyId?C.model.expensePolicyId=null:C.model.expensePolicyId,C.model.departmentId=0==C.model.departmentId?null:C.model.departmentId,C.model.leavePlanId=0==C.model.leavePlanId?null:C.model.leavePlanId,C.model.jobTitleId=0==C.model.jobTitleId?null:C.model.jobTitleId,C.employeeId||C.myProfileServices.getIsAllowEmployeeResign().then(function(e){return C.isAllowEmployeeResign=e.isAllowEmpoloyeeResign}),C._stateParams.id&&C.employeesService.getEmployeeModuleStatus(C._stateParams.id).then(function(e){C.employeeModuleStatus=e,C.model.isTimesheetEnabled=e.some(function(e){return e.module==C.applicationModule.Timesheet.id&&e.enabled}),C.isTimesheetEnabled=angular.copy(C.model.isTimesheetEnabled)}),C.oldJobDetailsEventModel=C.buildJobDetailsUpdateEventModel(),C.isTimesheetEnabled=angular.copy(C.model.isTimesheetEnabled)}),C._stateParams.id?(C.isemployeeNumberEditable=!0,C.isreportingManagerEditable=!0):C.employeesService.getMyResignationDetails().then(function(e){C.selfResignDetails=e.exitDetails}),C._scope.$on("exitDetailsUpdated",function(e,t){C.model.exitStatus=t.jobDetails.exitStatus,C.model.employmentStatus=t.jobDetails.employmentStatus,C.model.exitDate=t.jobDetails.exitDate,C.model.effectiveDate=t.jobDetails.effectiveDate})}}return e.prototype.$onInit=function(){this.employeeId=this._stateParams.id,this.init()},e.prototype.openFieldAuditPopUp=function(e,t){this.fieldDetails.fieldName=e,this.fieldDetails.fieldIdentifier=t,this.modalInstance=this._modal.open({template:'<employee-job-field-audit employee-id = "ctrl._stateParams[\'id\']" field-details = "ctrl.fieldDetails" modal-instance = "ctrl.modalInstance" > </employee-job-field-audit>',windowClass:"right-side-modal field-audit-template-right-side-modal",backdrop:!0,keyboard:!1,scope:this._scope})},e.prototype.openJobDetailsAuditPopUp=function(){this.fieldDetails.fieldName="JOB INFO",this.fieldDetails.fieldIdentifier=this.eventTypeIdentifier.EmployeeJobDetailsUpdated,this.modalInstance=this._modal.open({template:'<employee-job-module-audit employee-id = "ctrl._stateParams[\'id\']" field-details = "ctrl.fieldDetails" modal-instance = "ctrl.modalInstance" > </employee-job-module-audit>',windowClass:"right-side-modal field-audit-template-right-side-modal",backdrop:!0,keyboard:!1,scope:this._scope})},e.prototype.changeLeavePlan=function(){var e=this;this.modalInstance=this._modal.open({template:'<change-leave-plan model ="ctrl.model" employee-id = "ctrl._stateParams[\'id\']" modal-instance = "ctrl.modalInstance"></change-leave-plan>',windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,scope:this._scope}),this.modalInstance.result.then(function(t){e.model.leavePlanId=t.id})},e.prototype.changeJobTitle=function(){var e=this;this.modalInstance=this._modal.open({template:'<change-job-title model ="ctrl.model" employee-id = "ctrl._stateParams[\'id\']" modal-instance = "ctrl.modalInstance"></change-job-title>',windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,scope:this._scope}),this.modalInstance.result.then(function(t){e.model.jobTitleId=t.jobTitleId,e.model.secondaryJobTitle=t.secondaryJobTitle,e.employeeProfile.jobTitle=t.jobTitle.name})},e.prototype.changeBusinessUnit=function(){var e=this;this.modalInstance=this._modal.open({template:'<change-business-unit model ="ctrl.model" employee-id = "ctrl._stateParams[\'id\']" modal-instance = "ctrl.modalInstance"></change-business-unit>',windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,scope:this._scope}),this.modalInstance.result.then(function(t){e.model.businessUnitId=t.businessUnit.id,e.employeeProfile.businessUnitName=t.businessUnit.name,e._scope.$emit("businessUnitUpdated",{id:e._stateParams.id,businessUnitName:t.businessUnit.name})})},e.prototype.changeDepartment=function(){var e=this;this.modalInstance=this._modal.open({template:'<change-department model ="ctrl.model" employee-id = "ctrl._stateParams[\'id\']" modal-instance = "ctrl.modalInstance"></change-department>',windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,scope:this._scope}),this.modalInstance.result.then(function(t){e.model.departmentId=t.department.id,e.employeeProfile.departmentName=t.department.name,e._scope.$emit("departmentUpdated",{id:e._stateParams.id,departmentName:t.department.name})})},e.prototype.changeCostCenter=function(){var e=this;this.modalInstance=this._modal.open({template:'<change-cost-center model ="ctrl.model" employee-id = "ctrl._stateParams[\'id\']" old-cost-centerName = "ctrl.model.costCenterName" modal-instance = "ctrl.modalInstance"></change-cost-center>',windowClass:"costCenter-edit",backdrop:!1,keyboard:!1,scope:this._scope}),this.modalInstance.result.then(function(t){e.model.costCenterId=t.id,e.model.costCenterName=t.name})},e.prototype.changeLocation=function(){var e=this;this.modalInstance=this._modal.open({template:'<change-location model ="ctrl.model" employee-id = "ctrl._stateParams[\'id\']" modal-instance = "ctrl.modalInstance"></change-location>',windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,scope:this._scope}),this.modalInstance.result.then(function(t){e.model.locationId=t.id,e.model.locationName=t.name,e.employeeProfile.locationName=t.name})},e.prototype.changeReportingManager=function(){var e=this;this.modalInstance=this._modal.open({template:'<change-reporting-manager model ="ctrl.model" employee-id = "ctrl._stateParams[\'id\']" modal-instance = "ctrl.modalInstance"></change-reporting-manager>',windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,scope:this._scope}),this.modalInstance.result.then(function(t){e.reportingManager=t,e.model.reportTo=t.id,e.model.reportingManagerName=t.displayName,e.employeeProfile.reportingManagerName=e.model.reportingManagerName,e.employeeProfile.reportingTo=e.model.reportTo})},e.prototype.changeAttendanceNumber=function(){var e=this;this.modalInstance=this._modal.open({template:'<change-attendance-number model ="ctrl.model" employee-id = "ctrl._stateParams[\'id\']" modal-instance = "ctrl.modalInstance"></change-attendance-number>',windowClass:"employee-number-edit",backdrop:!1,keyboard:!1,scope:this._scope}),this.modalInstance.result.then(function(t){e.model.attendanceNumber=t})},e.prototype.changeEmployeeNumber=function(){var e=this;this.modalInstance=this._modal.open({template:'<change-employee-number model ="ctrl.model" employee-id = "ctrl._stateParams[\'id\']" modal-instance = "ctrl.modalInstance"></change-employee-number>',windowClass:"employee-number-edit",backdrop:!1,keyboard:!1,scope:this._scope}),this.modalInstance.result.then(function(t){e.model.employeeNumber=t,e.employeeProfile.employeeNumber=t})},e.prototype.changeProbationEndDate=function(){var e=this;this.modalInstance=this._modal.open({template:'<change-probation-end-date model ="ctrl.model" employee-id = "ctrl._stateParams[\'id\']" modal-instance = "ctrl.modalInstance"></change-probation-end-date>',backdrop:!1,keyboard:!1,scope:this._scope}),this.modalInstance.result.then(function(t){e.model.probationEndDate=t})},e.prototype.changeWorkerType=function(){var e=this;this.modalInstance=this._modal.open({template:'<change-worker-type model ="ctrl.model" employee-id = "ctrl._stateParams[\'id\']" modal-instance = "ctrl.modalInstance"></change-worker-type>',windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,scope:this._scope}),this.modalInstance.result.then(function(t){e.model.workerType=t.workerType,e._scope.$emit("workerTypeUpdated",{id:e._stateParams.id,workerTypeName:t.workerType.name})})},e.prototype.openSelfResignation=function(){var e=this;this._state.current.name.contains("me")&&!this.employeeId&&(this.modalInstance=this._modal.open({template:'<self-resignation modal-instance = "ctrl.modalInstance"></self-resignation>',windowClass:"full-screen-modal dark-modal self-resign-form",backdrop:!1,keyboard:!1,scope:this._scope}),this.modalInstance.result.then(function(t){t.id&&e.employeesService.getMyResignationDetails().then(function(t){e.selfResignDetails=t.exitDetails,e._scope.$emit("resignSubmitted",{resignDetails:e.selfResignDetails})})}))},e.prototype.setApprovalOptions=function(){this.approvalOptions=[{n:"Use Global Settings",v:this.remoteClockinApprovalType.none.id},{n:"Approval required",v:this.remoteClockinApprovalType.approvalRequired.id},{n:"Approval not required",v:this.remoteClockinApprovalType.approvalNotRequire.id},{n:"Approval not required but required to notify",v:this.remoteClockinApprovalType.requireNotify.id}]},e.prototype.buildJobDetailsUpdateEventModel=function(){var e=this,t=new Employee.Profile.CutomFields.Model.JobDetailsUpdateEventModel;return this.jobDetailsLookups.payBands.forEach(function(i){i.id==e.model.payBandId&&(t.band=i.name)}),this.jobDetailsLookups.payGrades.forEach(function(i){i.id==e.model.payGradeId&&(t.payGrade=i.name)}),t.timeType=angular.copy(this.timeType.getById(this.model.timeType).name),this.jobDetailsLookups.shiftPolices.forEach(function(i){i.identifier==e.model.shiftPolicyId&&(t.shiftType=i.name)}),this.jobDetailsLookups.holidayLists.forEach(function(i){i.id==e.model.holidayListId&&(t.holidayList=i.name)}),this.jobDetailsLookups.attendanceCaptureSchemes.forEach(function(i){i.id==e.model.attendanceCaptureSchemeId&&(t.attendanceCaptureScheme=i.name)}),t.workerType=angular.copy(this.workerType.getById(this.model.workerType).name),this.jobDetailsLookups.weeklyOffPolicies.forEach(function(i){i.identifier==e.model.weeklyOffPolicyId&&(t.weeklyOffPolicy=i.name)}),this.jobDetailsLookups.trackingPolicies.forEach(function(i){i.identifier==e.model.trackingPolicyId&&(t.attendanceTrackingPolicy=i.name)}),this.jobDetailsLookups.overtimePolicies.forEach(function(i){i.identifier==e.model.overtimePolicyId&&(t.overtimePolicy=i.name)}),this.jobDetailsLookups.expensePolicies.forEach(function(i){i.id==e.model.expensePolicyId&&(t.expensePolicy=i.name)}),t.secondaryJobTitle=angular.copy(this.model.secondaryJobTitle),t.dateOfJoining=angular.copy(this._filter("date")(this.model.dateJoined,"dd-MMMM-yyyy")),this.jobDetailsLookups.noticePeriods.forEach(function(i){i.id==e.model.noticePeriodId&&(t.noticePeriod=i.name)}),angular.copy(t)},e.prototype.updateJobDetails=function(){var e=this;if(this.form.jobInfo.$valid){var t=angular.copy(this.model);t.jobTitleId=this.model.jobTitleId,t.departmentId=this.model.departmentId,t.businessUnitId=this.model.businessUnitId,t.dateJoined=this._filter("date")(t.dateJoined,"yyyy-MM-dd"),t.probationEndDate=this._filter("date")(t.probationEndDate,"yyyy-MM-dd"),this.newJobDetailsEventModel=this.buildJobDetailsUpdateEventModel();var i=!angular.equals(this.oldJobDetailsEventModel,this.newJobDetailsEventModel);i?(this.notificationService.information("Updating Job Info..."),this.employeesService.updateJobInfo(this._stateParams.id,t,t.weeklyOffPolicyId,t.shiftPolicyId,this.newJobDetailsEventModel,this.oldJobDetailsEventModel).then(function(t){e.model.departmentId=e.model.departmentId,e._scope.$emit("jobDetailsUpdated",{id:e._stateParams.id,jobDetails:e.model,orgLocationName:e.model.locationName,reportingManagerName:e.model.reportingManagerName}),e.notificationService.success("Job Info updated Successfully."),e.oldJobDetailsEventModel=angular.copy(e.newJobDetailsEventModel)},function(t){e.notificationService.error("An error occurred while updating job information.")})):this.isTimesheetEnabled==this.model.isTimesheetEnabled&&this.notificationService.error("No changes to update."),this.isTimesheetEnabled!=this.model.isTimesheetEnabled&&(i||this.notificationService.information("Updating Job Info..."),this.employeesService.updateEmployeeModuleStatus(this._stateParams.id,this.applicationModule.Timesheet.id,this.model.isTimesheetEnabled).then(function(t){i||e.notificationService.success("Job Info updated Successfully.");var n=e.employeeModuleStatus.map(function(e){return e.id}).indexOf(t.id);-1!=n?e.employeeModuleStatus[n]=t:e.employeeModuleStatus.push(t),e.isTimesheetEnabled=angular.copy(e.model.isTimesheetEnabled)},function(t){i||e.notificationService.error("An error occurred while updating job information.")}))}},e.$inject=["$state","$q","$stateParams","$uibModal","EmployeeLookupService","EmployeeJobService","WorkerType","TimeType","$scope","$filter","EmployeesService","RemoteClockinApprovalType","$filter","NotificationService","ApplicationModule","AppSettings","$rootScope","PublicProfileServices","MyProfileServices","EmploymentStatus"],e}(),angular.module("employees").component("employeeJobDetails",{templateUrl:"employeeprofile/job",controller:t,controllerAs:"ctrl",bindings:{employeeProfile:"="}}).component("selfResignation",{templateUrl:"selfResignationForm",controller:"SelfResignationController",controllerAs:"ctrl",bindings:{modalInstance:"<"}}).component("meJobDetails",{templateUrl:"/me/job",controller:t,controllerAs:"ctrl"})}(EmployeeProfile||(EmployeeProfile={})),function(e){var t;e.Components||(e.Components={}),t=function(){function e(e,t,i,n){this.AppSettings=e,this.notificationService=t,this.q=i,this.employeeJobDetailsAuditService=n}return e.prototype.$onInit=function(){this.modelOptions=angular.copy(this.AppSettings.modelBlurSettings),this.model=[];var e=new Date;this.toDate=angular.copy(e),e.setMonth(e.getMonth()-1),this.fromDate=angular.copy(e),this.getAuditDetails(),this.maxDate=angular.copy(this.toDate),this.minDate=new Date,this.minDate.setMonth(this.minDate.getMonth()-3),this.getAuditDetails(),this.eventType=Employee.Profile.CutomFields.Model.EventType},Object.defineProperty(e.prototype,"fieldName",{get:function(){return this.fieldDetails.fieldName},enumerable:!0,configurable:!0}),e.prototype.getAuditDetails=function(){var e=this;if(this.fromDate<=this.toDate){this.model=[];var t=angular.copy(this.toDate);t.setDate(this.toDate.getDate()+1),this.employeeJobDetailsAuditService.getFieldAudit(this.employeeId,this.fieldDetails.fieldIdentifier,this.fromDate.dateOnlyString(),t.dateOnlyString()).then(function(t){e.model=t})}},e.prototype.closeModal=function(){this.modalInstance.close()},e.$inject=["AppSettings","NotificationService","$q","EmployeeJobDetailsAuditService"],e}(),angular.module("employees").component("employeeJobFieldAudit",{templateUrl:"fieldAuditTemplate",controller:t,controllerAs:"ctrl",bindings:{employeeId:"<",fieldDetails:"<",modalInstance:"<"}})}(EmployeeProfile||(EmployeeProfile={})),function(e){var t;e.Components||(e.Components={}),t=function(){function e(e,t,i,n,o){this.AppSettings=e,this.notificationService=t,this.q=i,this.costCenterSettingsService=n,this.employeeJobDetailsAuditService=o,this.totalAuditsCount=0}return e.prototype.$onInit=function(){this.modelOptions=angular.copy(this.AppSettings.modelBlurSettings),this.model=[];var e=new Date;this.toDate=angular.copy(e),e.setMonth(e.getMonth()-1),this.fromDate=angular.copy(e),this.getAuditDetails(),this.maxDate=angular.copy(this.toDate),this.minDate=new Date,this.minDate.setMonth(this.minDate.getMonth()-3),this.eventType=Employee.Profile.CutomFields.Model.EventType},Object.defineProperty(e.prototype,"fieldName",{get:function(){return this.fieldDetails.fieldName},enumerable:!0,configurable:!0}),e.prototype.filterModal=function(){var e=this;this.totalAuditsCount=0,this.copyModel.forEach(function(t,i){t.variance.changes=angular.copy(e.model[i].variance.changes.filter(function(t){return t.name.toLowerCase().startsWith(e.searchKey.toLowerCase())})),e.totalAuditsCount+=t.variance.changes.length})},e.prototype.buildFieldName=function(e){return e.replace(".JobDetailsUpdateEventModel.","").split(/(?=[A-Z])/).join(" ")},e.prototype.getAuditDetails=function(){var e=this;if(this.fromDate<=this.toDate){this.model=[];var t=angular.copy(this.toDate);t.setDate(this.toDate.getDate()+1),this.employeeJobDetailsAuditService.getJobModuleAudit(this.employeeId,this.fieldDetails.fieldIdentifier,this.fromDate.dateOnlyString(),t.dateOnlyString()).then(function(t){e.model=t,e.model.forEach(function(t){t.variance.changes=t.variance.changes.filter(function(t){return!!t.name.startsWith(".JobDetailsUpdateEventModel")&&(t.name=e.buildFieldName(t.name),!0)})}),e.copyModel=angular.copy(e.model)})}},e.prototype.closeModal=function(){this.modalInstance.close()},e.$inject=["AppSettings","NotificationService","$q","OrgLocationService","EmployeeJobDetailsAuditService"],e}(),angular.module("employees").component("employeeJobModuleAudit",{templateUrl:"moduleAuditTemplate",controller:t,controllerAs:"ctrl",bindings:{employeeId:"<",fieldDetails:"<",modalInstance:"<"}})}(EmployeeProfile||(EmployeeProfile={})),function(e){!function(e){var t=function(){return function(e){this.id=e.id,this.locationId=e.locationId,this.locationName=e.locationName,this.departmentId=e.departmentId,this.departmentName=e.departmentName,this.businessUnitId=e.businessUnitId,this.businessUnitName=e.businessUnitName,this.jobTitleId=e.jobTitleId,this.primaryJobTitleName=e.primaryJobTitleName,this.secondaryJobTitle=e.secondaryJobTitleName,this.reportTo=e.reportingTo,this.reportingManagerName=e.reportingManagerName,this.dateJoined="string"==typeof e.dateJoined?e.dateJoined.stringToDate():e.dateJoined,this.leavePlanId=e.leavePlanId,this.leavePlanName=e.leavePlanName,this.probationEndDate="string"==typeof e.probationEndDate?e.probationEndDate.stringToDate():e.probationEndDate,this.attendanceNumber=e.attendanceNumber,this.employeeNumber=e.employeeNumber,this.payBandId=0==e.bandId?null:e.bandId,this.payGradeId=0==e.payGradeId?null:e.payGradeId,this.costCenterId=e.costCenterId,this.costCenterName=e.costCenterName,this.expensePolicyId=0==e.expensePolicyId?null:e.expensePolicyId,this.workerType=e.workerType,this.timeType=e.timeType,this.trackingPolicyId=""==e.trackingPolicyId?null:e.trackingPolicyId,this.weeklyOffPolicyId=""==e.weeklyOffPolicyId?null:e.weeklyOffPolicyId,this.shiftPolicyId=""==e.shiftPolicyId?null:e.shiftPolicyId,this.attendanceCaptureSchemeId=0==e.attendanceCaptureSchemeId?null:e.attendanceCaptureSchemeId,this.overtimePolicyId=""==e.overtimePolicyId?null:e.overtimePolicyId,this.holidayListId=0==e.holidayListId?null:e.holidayListId,this.isTimesheetEnabled=e.isTimesheetEnabled,this.exitStatus=e.exitStatus,this.employmentStatus=e.employmentStatus,this.noticePeriodId=0==e.noticePeriodId?null:e.noticePeriodId}}();e.EmployeeJobInfo=t;var i=function(){return function(e){this.fieldName=e?e.fieldName:null,this.fieldIdentifier=e?e.fieldIdentifier:null}}();e.FieldDetails=i}(e.Model||(e.Model={}))}(Employee||(Employee={})),function(e){!function(e){var t=function(){function e(e,t){this.resource=e,this.q=t,this.employeeJob=this.resource("/api/employee/:id/job/:action",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.employeeJobTitle=this.resource("/api/jobtitle/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getEmployeejobDetails=function(e){return this.employeeJob.get({action:"details",id:e}).$promise},e.prototype.getEmployeeJobTitles=function(){return this.employeeJobTitle.query({action:"jobtitles"}).$promise},e.prototype.updateLocation=function(e,t){return this.employeeJob.update({action:"location",id:e},t).$promise},e.prototype.updateCostCenter=function(e,t){return this.employeeJob.update({action:"costcenter",id:e},t).$promise},e.prototype.updateBusinessUnit=function(e,t){return this.employeeJob.update({action:"businessunit",id:e},t).$promise},e.prototype.updateDepartment=function(e,t){return this.employeeJob.update({action:"department",id:e},t).$promise},e.prototype.updateEmployeeNumber=function(e,t){return this.employeeJob.update({action:"employeenumber",id:e},t).$promise},e.prototype.updateAttendanceNumber=function(e,t){return this.employeeJob.update({action:"attendancenumber",id:e},t).$promise},e.prototype.updateProbationEndDate=function(e,t){return this.employeeJob.update({action:"probationenddate",id:e},t).$promise},e.prototype.updateJobTitle=function(e,t){return this.employeeJob.update({action:"jobtitle",id:e},t).$promise},e.prototype.updateLeavePlan=function(e,t){return this.employeeJob.update({action:"leaveplan",id:e},t).$promise},e.prototype.updateReportingManager=function(e,t){return this.employeeJob.update({action:"reportingmanager",id:e},t).$promise},e.prototype.updateWorkerType=function(e,t){return this.employeeJob.update({action:"workertype",id:e},t).$promise},e.$inject=["$resource","$q"],e}();e.EmployeeJobService=t,angular.module("employees").service("EmployeeJobService",t)}(e.Services||(e.Services={}))}(Employee||(Employee={})),function(e){!function(e){!function(e){var t=function(){function e(e){var t=this;this._resource=e,this.getAttendanceSummary=function(e){return t.employeeAttendance.query({action:"summary",id:e}).$promise},this.getMonthAttendanceSummary=function(e,i){return t.employeeAttendanceSummary.query({action:"monthsummary",id:e,fromDate:i}).$promise},this.getAttendanceSummaryFrom=function(e,i){return t.employeeAttendanceSummary.query({action:"summary",id:e,fromDate:i.dateOnlyString()}).$promise},this.getAttendanceStats=function(e){return t.employeeAttendance.get({action:"stats",id:e}).$promise},this.getAttendanceRequests=function(e){return t.employeeAttendance.get({action:"attendancerequests",id:e}).$promise},this.getAttendanceDayRequests=function(e){return t.employeeAttendance.get({action:"attendancedayrequests",id:e}).$promise},this.getAttendanceCaptureScheme=function(e){return t.employeeAttendance.get({action:"attendancecapturescheme",id:e}).$promise},this.getTrackingPolicy=function(e){return t.employeeAttendance.get({action:"trackingpolicy",id:e}).$promise},this.saveAttendanceAdjustmentRequest=function(e,i){return t.employeeAttendance.save({action:"saveattendanceadjustment",id:e},i).$promise},this.getAttendanceRegularizationStatus=function(e,i){return t.employeeAttendance.get({action:"regularizationstatus",id:e,date:i}).$promise},this.saveWfhRequest=function(e,i){return t.employeeAttendance.save({action:"savewfh",id:e},i).$promise},this.saveOnDutyRequest=function(e,i){return t.employeeAttendance.save({action:"saveonduty",id:e},i).$promise},this.approveWfhRequest=function(e,i){return t.employeeAttendanceRequest.save({action:"approvewfh",id:e,requestId:i}).$promise},this.rejectWfhRequest=function(e,i){return t.employeeAttendanceRequest.save({action:"rejectwfh",id:e,requestId:i}).$promise},this.cancleWfhRequest=function(e,i){return t.employeeAttendanceRequest.save({action:"cancelwfh",id:e,requestId:i}).$promise},this.approveOnDutyRequest=function(e,i){return t.employeeAttendanceRequest.save({action:"approveonduty",id:e,requestId:i}).$promise},this.rejectOnDutyRequest=function(e,i){return t.employeeAttendanceRequest.save({action:"rejectonduty",id:e,requestId:i}).$promise},this.cancelOnDutyRequest=function(e,i){return t.employeeAttendanceRequest.save({action:"cancelonduty",id:e,requestId:i}).$promise},this.approveRemoteClockInRequest=function(e,i){return t.employeeAttendanceRequest.save({action:"approveremoteclockin",id:e,requestId:i}).$promise},this.rejectRemoteClockInRequest=function(e,i){return t.employeeAttendanceRequest.save({action:"rejectremoteclockin",id:e,requestId:i}).$promise},this.approveAdjustmentRequest=function(e,i){return t.employeeAttendanceRequest.save({action:"approveadjustment",id:e,requestId:i}).$promise},this.rejectAdjustmentRequest=function(e,i){return t.employeeAttendanceRequest.save({action:"rejectadjustment",id:e,requestId:i}).$promise},this.getServerTime=function(e){return t.employeeAttendance.get({action:"servertime",id:e}).$promise},this.getAttendanceSettings=function(e){return t.employeeAttendance.get({action:"attendancesettings",id:e}).$promise},this.employeeAttendance=this._resource("/api/employee/:id/attendance/:action",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.employeeAttendanceSummary=this._resource("/api/employee/:id/attendance/:action/:fromDate",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.employeeAttendanceRequest=this._resource("/api/employee/:id/attendance/:action/:requestId",{id:"@id",requestId:"@requestId",action:"@action"},{update:{method:"PUT"}})}return e.$inject=["$resource"],e}();e.EmployeeAttendanceService=t,angular.module("employees").service("EmployeeAttendanceService",t)}(e.Services||(e.Services={}))}(e.Attendance||(e.Attendance={}))}(EmployeeProfile||(EmployeeProfile={})),function(e){!function(e){var t=function(){return function(e){this.id=e.id,this.code=e.code,this.name=e.name,this.description=e.description}}();e.LookupItem=t}(e.Model||(e.Model={}))}(Employee||(Employee={})),function(e){!function(e){var t=function(){function e(e,t){this.resource=e,this.q=t,this.employeeLookup=this.resource("/api/employee/lookup/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getJobInfoLookups=function(){return this.employeeLookup.get({action:"jobinfo"}).$promise},e.prototype.getAddEmployeeJobInfoLookups=function(){return this.employeeLookup.get({action:"addemployeejobinfo"}).$promise},e.prototype.searchEmployees=function(e){return this.employeeLookup.query({action:"search",searchKey:e}).$promise},e.prototype.searchAllEmployees=function(e){return this.employeeLookup.query({action:"searchall",searchKey:e}).$promise},e.prototype.getEmployeeTeam=function(e){return this.employeeLookup.query({action:"team",id:e}).$promise},e.$inject=["$resource","$q"],e}();e.EmployeeLookupService=t,angular.module("employees").service("EmployeeLookupService",t)}(e.Services||(e.Services={}))}(Employee||(Employee={})),function(e){!function(t){!function(t){var i=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m){this.scope=t,this.state=i,this.stateParams=n,this.uibModal=o,this.appSettings=r,this.notificationService=a,this.componentClaimStatus=s,this.componentClaimPaymentStatus=l,this.currentFinancialYear=c,this.componentClaimService=p,this.dialogs=u,this.appContext=d,this.SharedDataService=m,this.components=[],this.pendingComponentClaims=[],this.pastComponentClaims=[],this.params={year:this.currentFinancialYear.from.getFullYear(),id:this.stateParams.id},this.init(),this.employeeAttributes=this.SharedDataService.getEmployeeAttributes(),this.initializeComponentSummaryGridSettings(),this.initializePendingComponentGridSettings(),this.initializePastComponentGridSettings(),this.salaryComponents=e.Configuration.Model.salaryComponentTypes}return t.prototype.getDefaultColums=function(){return[{field:"componentName",displayName:"Component Name",cellClass:"ui-grid-cell"},{field:"componentType",displayName:"Component Type",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.appScope.ctrl.salaryComponents.getById(row.entity.componentType)}}</div>',cellClass:"ui-grid-cell"}]},t.prototype.init=function(){var t=this;this.componentClaimService.getEmployeeComponentClaimsSummary(this.params).then(function(i){t.components=i.map(function(t){return new e.Model.Finance.ComponentClaim(t)})}),this.componentClaimService.getPendingComponentClaims(this.params).then(function(i){t.pendingComponentClaims=i.map(function(t){return new e.Model.Finance.ComponentClaim(t)})}),this.componentClaimService.getPastComponentClaims(this.params).then(function(i){t.pastComponentClaims=i.map(function(t){return new e.Model.Finance.ComponentClaim(t)})})},t.prototype.addorEditClaim=function(e){var t=this;if(null!=e){var i=this.components.filter(function(t){return t.claimAgainstComponent==e.claimAgainstComponent})[0];e.remainingBalance=i.remainingBalance+e.claimAmount}this.uibModal.open({templateUrl:"addoredit-componentClaim",controller:"AddOrUpdateClaimController",windowClass:"bonus",controllerAs:"ctrl",resolve:{Components:function(){return t.components},SelectedComponent:function(){return e},ComponentClaimsService:function(){return t.componentClaimService},Params:function(){return t.params}}}).result.then(function(e){e&&t.init()})},t.prototype.deleteClaim=function(e){var t=this;this.dialogs.confirm("Confirm","This will delete claim and all the receipts linked to it. Do you want to delete ?").result.then(function(i){t.componentClaimService.cancelComponentClaim(t.params,e.id).then(function(e){e.isDeleted&&(t.notificationService.success("Component Claim deleted successfully"),t.init())})},function(e){t.notificationService.error(e.data.message)})},t.prototype.initializeComponentSummaryGridSettings=function(){this.componentsSummaryGridOptions=angular.copy(this.appSettings.gridSettings),this.componentsSummaryGridOptions.columnDefs=this.getDefaultColums(),this.componentsSummaryGridOptions.columnDefs.push({field:"totalAnnualAmount",displayName:"Annual Claim Amount",cellClass:"ui-grid-cell",cellFilter:"currency:'Rs.':2",type:"number"},{field:"totalAccruedAmount",displayName:"Accrued",cellClass:"ui-grid-cell",cellFilter:"currency:'Rs.':2",type:"number"},{field:"totalClaimedAmount",displayName:"Claimed",cellClass:"ui-grid-cell",cellFilter:"currency:'Rs.':2",type:"number"},{field:"remainingBalance",displayName:"Remaining Balance",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.remainingBalance > -1">{{row.entity.remainingBalance | currency: \'Rs.\' :2}}\n                        <br /></span>\n                        <span class="text-muted"> * {{(row.entity.totalAnnualAmount - row.entity.totalClaimedAmount - row.entity.totalUnclaimedVoidAmount - row.entity.totalUnclaimedPaidAsTaxableAmount) | currency: \'Rs.\' :2}} till end of FY</span></div>',cellClass:"ui-grid-cell"}),this.componentsSummaryGridOptions.data="ctrl.components",this.componentsSummaryGridOptions.rowHeight=60},t.prototype.initializePendingComponentGridSettings=function(){this.pendingComponentsGridOptions=angular.copy(this.appSettings.gridSettings),this.pendingComponentsGridOptions.columnDefs=this.getDefaultColums(),this.pendingComponentsGridOptions.columnDefs.push({field:"claimAmount",displayName:"Claimed Amount",cellClass:"ui-grid-cell",cellFilter:"currency:'Rs.':2",type:"number"},{field:"note",displayName:"note",cellClass:"ui-grid-cell"},{field:"claimedOn",displayName:"Claimed On",type:"date",cellFilter:'date:"dd MMM yyyy"',cellClass:"ui-grid-cell"}),this.state.includes("employee.finances")?this.appContext.hasPrivilege(["EmployeeFinance.ApproveEmployeeComponentClaims","EmployeeFinance.Implicit.ApproveEmployeeComponentClaims"],this.employeeAttributes)?this.pendingComponentsGridOptions.columnDefs.push({name:"Actions",displayName:"ACTIONS",cellClass:"ui-grid-cell cell-tooltip",cellTemplate:'<div class="ui-grid-cell-contents action-buttons">\n                        <a class="text-center" data-ng-click="grid.appScope.ctrl.reviewComponentClaim(row.entity)">\n                            <span class = "icon-pencil5" data-ng-if = "row.entity.paymentStatus == grid.appScope.ctrl.componentClaimPaymentStatus.Pending.id"></span>\n                            <span data-ng-if = "row.entity.paymentStatus == grid.appScope.ctrl.componentClaimPaymentStatus.Paid.id || row.entity.paymentStatus == grid.appScope.ctrl.componentClaimPaymentStatus.PaidOutSideKekaPayroll.id" class = "icon-file-check"></span>\n                            Review Claim\n                        </a></div>'}):this.appContext.hasPrivilege(["EmployeeFinance.AddEmployeeComponentClaims","EmployeeFinance.Implicit.AddEmployeeComponentClaims"],this.employeeAttributes)&&this.pendingComponentsGridOptions.columnDefs.push({name:"Actions",displayName:"ACTIONS",cellClass:"ui-grid-cell cell-tooltip",width:300,cellTemplate:'<div class="ui-grid-cell-contents action-buttons">\n                        <a class="action-block text-center" data-ng-click="grid.appScope.ctrl.addorEditClaim(row.entity)">\n                        <span class="icon-pencil5"> </span>Edit</a>\n                        <a class="action-block text-center" data-ng-click="grid.appScope.ctrl.deleteClaim(row.entity)">\n                        <span class="icon-remove3"> </span>Remove</a>\n                        </a>\n                        </div>'}):this.pendingComponentsGridOptions.columnDefs.push({name:"Actions",displayName:"ACTIONS",cellClass:"ui-grid-cell cell-tooltip",width:300,cellTemplate:'<div class="ui-grid-cell-contents action-buttons">\n                        <a class="action-block text-center" data-ng-click="grid.appScope.ctrl.addorEditClaim(row.entity)">\n                        <span class="icon-pencil5"> </span>Edit</a>\n                        <a class="action-block text-center" data-ng-click="grid.appScope.ctrl.deleteClaim(row.entity)">\n                        <span class="icon-remove3"> </span>Remove</a>\n                        </a>\n                        </div>'}),this.pendingComponentsGridOptions.data="ctrl.pendingComponentClaims",this.pendingComponentsGridOptions.rowHeight=60},t.prototype.initializePastComponentGridSettings=function(){this.pastComponentsGridOptions=angular.copy(this.appSettings.gridSettings),this.pastComponentsGridOptions.columnDefs=this.getDefaultColums(),this.pastComponentsGridOptions.columnDefs.push({field:"claimAmount",displayName:"Claimed Amount",cellClass:"ui-grid-cell",cellFilter:"currency:'Rs.':2",type:"number"},{field:"claimedBy",displayName:"Claimed By",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.claimedBy}} </span><br />\n                        <span class="text-muted"> on {{row.entity.claimedOn | date : \'dd MMM yyyy\' }}</span></div>',cellClass:"ui-grid-cell"},{field:"status",displayName:"Status",cellTemplate:'<div class="ui-grid-cell-contents">\n                                    <span data-ng-if = "row.entity.status == grid.appScope.ctrl.componentClaimStatus.Approved.id" class="accepted">Accepted</span>\n                                    <span data-ng-if = "row.entity.status == grid.appScope.ctrl.componentClaimStatus.Rejected.id" class="rejected">Rejected</span>\n                                    </div>',cellClass:"ui-grid-cell"},{field:"actionTakenOn",displayName:"Action Taken",cellTemplate:'<div class="ui-grid-cell-contents"><span> {{row.entity.actionTakenBy}} </span><br />\n                        <span class="text-muted"> on {{row.entity.actionTakenOn | date : \'dd MMM yyyy\'}}</span></div>',cellClass:"ui-grid-cell"},{field:"paymentStatus",displayName:"Payment Status",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.ctrl.componentClaimPaymentStatus.getById(row.entity.paymentStatus).title}}</span><br />\n                        <span class="text-muted" data-ng-if="row.entity.paymentStatus == grid.appScope.ctrl.componentClaimPaymentStatus.Paid.id || row.entity.paymentStatus == grid.appScope.ctrl.componentClaimPaymentStatus.PaidOutSideKekaPayroll.id"> on {{row.entity.paidOn | date : \'dd MMM yyyy\'}}</span></div>',cellClass:"ui-grid-cell"},{field:"payableAmount",displayName:"Payable Amount",cellClass:"ui-grid-cell",cellFilter:"currency:'Rs.':2",type:"number"}),this.state.includes("employee.finances")&&this.appContext.hasPrivilege(["EmployeeFinance.ApproveEmployeeComponentClaims","EmployeeFinance.Implicit.ApproveEmployeeComponentClaims"],this.employeeAttributes)&&this.pastComponentsGridOptions.columnDefs.push({name:"Actions",displayName:"ACTIONS",cellClass:"ui-grid-cell cell-tooltip",cellTemplate:'<div class="ui-grid-cell-contents action-buttons">\n                        <a class="text-center" data-ng-click="grid.appScope.ctrl.reviewComponentClaim(row.entity)">\n                            <span class = "icon-pencil5" data-ng-if = "row.entity.paymentStatus != grid.appScope.ctrl.componentClaimPaymentStatus.Paid.id && row.entity.paymentStatus != grid.appScope.ctrl.componentClaimPaymentStatus.PaidOutSideKekaPayroll.id"> </span>\n                            <span data-ng-if = "row.entity.paymentStatus == grid.appScope.ctrl.componentClaimPaymentStatus.Paid.id || row.entity.paymentStatus == grid.appScope.ctrl.componentClaimPaymentStatus.PaidOutSideKekaPayroll.id" class = "icon-file-check"> </span>\n                            Review Claim\n                        </a></div>'}),this.pastComponentsGridOptions.data="ctrl.pastComponentClaims",this.pastComponentsGridOptions.rowHeight=60},t.prototype.reviewComponentClaim=function(e){var t=this;this.uibModal.open({templateUrl:"payroll/ReviewComponentClaim",controller:"ReviewComponentClaimController",controllerAs:"ctrl",windowClass:"full-screen-modal dark-modal no-scroll-x declaration-doc-approvals",backdrop:!1,keyboard:!1,resolve:{ComponentClaim:function(){return e}}}).result.then(function(e){e&&t.init()})},t.$inject=["$scope","$state","$stateParams","$uibModal","AppSettings","NotificationService","ComponentClaimStatus","ComponentClaimPaymentStatus","currentFinancialYear","ComponentClaimsService","dialogs","AppContext","SharedDataService"],t}();t.ComponentClaimsController=i;var n=function(){function e(e,t,i,n,o,r,a,s,l){this.scope=e,this.appSettings=t,this.availableClaims=i,this.componentForEdit=n,this.componentClaimsservice=o,this._modalInstance=r,this.notificationService=a,this.dialogs=s,this.params=l,this.isEdit=!1,null!=n&&(this.selectedComponet=angular.copy(n),this.selectedclaimAgainstComponent=n.claimAgainstComponent,this.isEdit=!0),this.fileUploadSettings=angular.copy(this.appSettings.fileUploadSettings),this.fileUploadSettings.acceptFileTypes=/(\.|\/)(jpe?g|png|doc|docx|pdf|txt|xps|rtf)$/i,this.fileUploadSettings.allowedFileTypes="png,jpg,jpeg,doc,docx,pdf,rtf,xps,txt",this.fileUploadSettings.maxNumberOfFiles=5,this.fileUploadSettings.maxFileSize=2097153}return e.prototype.changeAllwoanceClaim=function(){var e=this;this.selectedComponet=this.availableClaims.find(function(t){return t.claimAgainstComponent==e.selectedclaimAgainstComponent})},e.prototype.onFileUploaded=function(){var e=this;!this.selectedComponet.receipts||this.selectedComponet.receipts.length<this.fileUploadSettings.maxNumberOfFiles?this.componentClaimsservice.addComponentClaimReceipt(this.params,this.receipts).then(function(t){e.selectedComponet.receipts||(e.selectedComponet.receipts=[]),e.selectedComponet.receipts.push(t)}):this.notificationService.success("you can add maximun "+this.fileUploadSettings.maxNumberOfFiles+" files..")},e.prototype.submitNewClaim=function(){var e=this;this.form.submitComponentClaimForm.$valid&&(this.selectedComponet.id&&this.selectedComponet.id>0?this.componentClaimsservice.updateComponentClaim(this.params,this.selectedComponet):this.componentClaimsservice.submitComponentClaim(this.params,this.selectedComponet)).then(function(t){t.isSubmitted&&(e.notificationService.success("Component Claim saved Sucessfully"),e._modalInstance.close(t.isSubmitted))},function(t){e.validationMessage=t.data.message})},e.prototype.deleteReceipt=function(e){this.selectedComponet.receipts.splice(e,1)},e.prototype.validateComponentClaim=function(){var e=this;this.componentClaimsservice.validateComponentClaim(this.params,this.selectedComponet).then(function(t){e.validationMessage=""},function(t){e.validationMessage=t.data.message})},e.$inject=["$scope","AppSettings","Components","SelectedComponent","ComponentClaimsService","$uibModalInstance","NotificationService","dialogs","Params"],e}();t.AddOrUpdateClaimController=n,angular.module("payroll").controller("AddOrUpdateClaimController",n).controller("ComponentClaimsController",i)}(t.Controllers||(t.Controllers={}))}(e.Finance||(e.Finance={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(t){!function(t){var i=function(){function e(e,t,i,n,o,r,a,s){var l=this;this._scope=e,this._modal=t,this.appSettings=i,this.deductionStatus=n,this.blobContainers=o,this._financeModel=r,this._notificationService=a,this.SharedDataService=s,this.openFileUpload=function(e){l.activeDeduction=e,l.attachedFiles=angular.copy(e.attachedDocuments),l.modalInstane=l._modal.open({scope:l._scope,templateUrl:"uploadFiles"})},this.saveClaimUploads=function(){l.activeDeduction.attachedDocuments=l.attachedFiles,l.modalInstane.close()},this.saveInvestment=function(){return l.saveDeclaration(l.investmentDeclaration.deductions).then(function(e){l._notificationService.success("Tax declared successfully."),l.investmentDeclaration=e,l.buildtaxSection()},function(e){l._notificationService.error(e.data.message||"Error occurred in tax declaration."),l.resetTaxSection()}),!0},this.updateInvestmentDeduction=function(e){l.updateDeduction({deduction:e}).then(function(t){l._notificationService.success("Tax Deduction Updated successfully.");var i=t.getDeduction(e.name),n=t.getDeductionClaim(e.name);l.investmentDeclaration.updateOrSetDeduction(i);var o=!1;l.groupTaxSections.sections.some(function(e){return e.deductions.some(function(t,r){return!(!i||t.name!=i.name)&&(e.deductions[r]=new l._financeModel.TaxDeduction(t,i,n),o=!0)}),o})},function(e){l._notificationService.error(e.data.message||"Error occurred in updating tax deduction."),l.resetTaxSection()})},this.clearInvestmentDeduction=function(e){l.clearDeduction({deductionName:e}).then(function(t){l._notificationService.success("Tax Deduction Updated successfully."),l.investmentDeclaration.clearDeduction(e);var i=new l._financeModel.Declaration(t),n=!1;l.groupTaxSections.sections.some(function(t){return t.deductions.some(function(o,r){return o.name==e&&(t.deductions[r]=new l._financeModel.TaxDeduction(o,i.getDeduction(o.name),i.getDeductionClaim(o.name)),n=!0)}),n})},function(e){l._notificationService.error("Error occurred in updating tax deduction."),l.resetTaxSection()})}}return Object.defineProperty(e.prototype,"editInProgress",{get:function(){return this._editInProgress||this.groupTaxSections&&this.groupTaxSections.sections.some(function(e){return e.deductions.some(function(e){return e.onEdit})})},set:function(e){this._editInProgress=e},enumerable:!0,configurable:!0}),e.prototype.$onInit=function(){this.initblobSetting(),this.buildtaxSection(),this.employeeAttributes=this.SharedDataService.getEmployeeAttributes()},e.prototype.resetTaxSection=function(){this.groupTaxSections.reset()},e.prototype.initDeclarationSettings=function(){this.enableDeclarationEdit=this.payrollConfig.employee.declaration.enableDeclarationEdit(this.financialYear),this.requireProofs=this.payrollConfig.employee.declaration.requireProofSubmission},e.prototype.initblobSetting=function(){this.fileUploadSettings=angular.copy(this.appSettings.fileUploadSettings),this.fileUploadSettings.acceptFileTypes=/(\.|\/)(jpe?g|png|doc|docx|pdf|txt|xps|rtf)$/i,this.fileUploadSettings.allowedFileTypes="png,jpg,jpeg,doc,docx,pdf,rtf,xps,txt",this.fileUploadSettings.maxNumberOfFiles=12,this.fileUploadSettings.maxNumberOfFilesPerInstance=5,this.fileUploadSettings.maxFileSize=2e6,this.fileUploadSettings.dragZone="#dragZone"},e}();var n=function(e){function t(t,i,n,o,r,a,s,l,c){var p=e.call(this,t,i,n,o,r,a,s,c)||this;return p.dialogService=l,p}return __extends(t,e),t.prototype.buildtaxSection=function(){this.initDeclarationSettings(),this.incometaxStats=this.incometaxStats||{},this.groupTaxSections=new this._financeModel.GroupedTaxSection(this.sectionsGroup,this.investmentDeclaration,{epf:this.incometaxStats.epfGrossAmount,vpf:this.incometaxStats.vpfGrossAmount})},t.prototype.saveInvestmentDeclaration=function(){return this.form.group1o5LacForm.$valid?this.saveInvestment():(this._notificationService.error("Please fill required fields."),!1)},t.prototype.clearDeductionLineItem=function(e){var t=this;this.dialogService.confirm("Clear Deduction","Are you sure you want to remove declaration for '"+e.title+"' ?").result.then(function(){t.clearInvestmentDeduction(e.name)})},t.prototype.updateDeductionLineItem=function(e){if(!e.amountDeclared)return this._notificationService.error("Please fill valid amount.");this.updateInvestmentDeduction(e.getDeclare())},t.$inject=["$scope","$uibModal","AppSettings","DeductionStatus","BlobContainers","FinanceModel","NotificationService","dialogs","SharedDataService"],t}(i);t.Group1o5LacDirectiveController=n;var o=function(e){function t(t,i,n,o,r,a,s,l,c){var p=e.call(this,t,i,n,o,r,a,s,c)||this;return p.deductionStatus=o,p._financeModel=a,p.dialogService=l,p}return __extends(t,e),t.prototype.buildtaxSection=function(){this.initDeclarationSettings(),this.isnpsEmployerComponentEnable||this.npsEmployerAmount>0?this.groupTaxSections=new this._financeModel.GroupedTaxSection(this.sectionsGroup,this.investmentDeclaration,{npsemployer:this.npsEmployerAmount}):this.groupTaxSections=new this._financeModel.GroupedTaxSection(this.sectionsGroup,this.investmentDeclaration)},t.prototype.saveInvestmentDeclaration=function(){return this.form.othertaxForm.$valid?this.saveInvestment():(this._notificationService.error("Please fill required fields."),!1)},t.prototype.clearDeductionLineItem=function(e){var t=this;this.dialogService.confirm("Clear Deduction","Are you sure you want to remove declaration for '"+e.title+"' ?").result.then(function(){t.clearInvestmentDeduction(e.name)})},t.prototype.updateDeductionLineItem=function(e){if(!e.amountDeclared)return this._notificationService.error("Please fill valid amount.");this.updateInvestmentDeduction(e.getDeclare())},t.$inject=["$scope","$uibModal","AppSettings","DeductionStatus","BlobContainers","FinanceModel","NotificationService","dialogs","SharedDataService"],t}(i);t.OtherTaxSectionsDirectiveController=o;var r=function(t){function i(e,i,n,o,r,a,s,l,c){var p=t.call(this,e,i,n,o,r,a,s,c)||this;return p.deductionStatus=o,p._financeModel=a,p.dialogService=l,p}return __extends(i,t),i.prototype.buildtaxSection=function(){var t=this;this.initDeclarationSettings();var i=angular.copy(this.sectionsGroup),n={},o={},r={};i.sections.forEach(function(e){r[e.name]=e,e.deductions.forEach(function(e){o[e.name]=e})}),this.getAllowances().then(function(a){a.forEach(function(t){var i=null,a=t.sectionName.split("_").pop();if(t.componentName in o?(i=o[t.componentName]).maxLimit=t.amount:i=new e.Model.TaxSectionDeduction({name:t.componentName,description:t.title,title:t.title,section:a,maxLimit:t.sectionMaxAmount}),i){if(i.section in n)return void n[i.section].deductions.push(i);n[i.section]=a in r?r[i.section]:new e.Model.TaxSection({name:i.section}),n[i.section].deductions=[i]}}),i.sections=Object.keys(n).map(function(e){return n[e]}),t.groupTaxSections=new t._financeModel.GroupedTaxSection(i,t.investmentDeclaration)},function(e){t._notificationService.error("error while retrieving data")})},i.prototype.saveInvestmentDeclaration=function(){return this.form.allowanceForm.$valid?this.saveInvestment():(this._notificationService.error("Please fill required fields."),!1)},i.prototype.clearDeductionLineItem=function(e){var t=this;this.dialogService.confirm("Clear Deduction","Are you sure you want to remove declaration for '"+e.title+"' ?").result.then(function(){t.clearInvestmentDeduction(e.name)})},i.prototype.updateDeductionLineItem=function(e){if(!e.amountDeclared)return this._notificationService.error("Please fill valid amount.");this.updateInvestmentDeduction(e.getDeclare())},i.$inject=["$scope","$uibModal","AppSettings","DeductionStatus","BlobContainers","FinanceModel","NotificationService","dialogs","SharedDataService"],i}(i);t.TaxSavingAllowanceController=r;var a=function(){function t(e,t,i,n){this.modalService=e,this.dialogs=t,this.notificationService=i,this.SharedDataService=n,this.claims={},this.employeeAttributes=this.SharedDataService.getEmployeeAttributes()}return t.prototype.$onInit=function(){this.BuildDeductionsUnderHouse()},t.prototype.BuildDeductionsUnderHouse=function(){var e=this;this.deductionsUnderHouse=this.investmentDeclaration.deductionsUnderHouseProperty,this.enableDeclarationEdit=this.payrollConfig.employee.declaration.enableDeclarationEdit(this.financialYear);var t={};this.investmentDeclaration.deductionClaims.forEach(function(i){switch(i.againstDeduction){case"homeloaninterest":angular.extend(t,i.homeloanInterests);break;case"houseRent":angular.extend(e.claims,i.rentDetails);break;case"incomefromhouseproperty":angular.extend(e.claims,i.letOutHouseProperties)}}),angular.forEach(t,function(t,i){i in e.claims?e.claims[i].interestOnLoanAmount=t.interestAmount:e.claims[i]=t})},t.prototype.addOrEditCurrentResidence=function(){var e=this;this.modalService.open({templateUrl:"addCurrentResidence",windowClass:"full-screen-modal self-occupied-container",controller:u,controllerAs:"ctrl",resolve:{currentResidence:function(){return e.deductionsUnderHouse.currentResidence},saveSelfOccupied:function(){return e.saveSelfOccupied},saveOrUpdateRentalDetail:function(){return e.saveOrUpdateRentalDetail},deleteRentalDetail:function(){return e.deleteRentalDetail},financialYear:function(){return e.financialYear}}}).result.then(function(t){e.deductionsUnderHouse.currentResidence=t})},t.prototype.addOrEditRental=function(t){var i=this;this.modalService.open({templateUrl:"collectHouseRental",windowClass:"collect-house-rental structure-compare",controller:m,controllerAs:"ctrl",backdrop:"static",keyboard:!1,resolve:{rentDetail:function(){return t},financialYear:function(){return i.financialYear},saveOrUpdateRentalDetail:function(){return i.saveOrUpdateRentalDetail}}}).result.then(function(t){i.deductionsUnderHouse=new e.Model.Finance.DeductionsUnderHouseProperty(t.deductionsUnderHouseProperty)})},t.prototype.deleteRental=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure want to delete "+e.address+"?").result.then(function(){t.deleteRentalDetail({houseIdentifier:e.houseIdentifier}).then(function(){t.notificationService.success(e.address+" deleted successfully"),t.deductionsUnderHouse.currentResidence.removeRentalDetails(e)},function(e){t.notificationService.error(e.data.message)})})},t.prototype.addOrEditOwnProperty=function(t){var i=this;this.modalService.open({templateUrl:"addPropertyTemplate",windowClass:"structure-compare",controller:d,controllerAs:"ctrl",resolve:{letOutProperty:function(){return t},saveOrUpdateLetOutProperty:function(){return i.saveOrUpdateLetOutProperty}}}).result.then(function(t){i.deductionsUnderHouse=new e.Model.Finance.DeductionsUnderHouseProperty(t.deductionsUnderHouseProperty)})},t.prototype.deleteOwnProperty=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure want to delete "+e.address+"?").result.then(function(){t.deleteOtherHouseResidence({houseIdentifier:e.houseIdentifier}).then(function(){t.notificationService.success(e.address+" deleted successfully"),t.deductionsUnderHouse.removeLetOutProperty(e.houseIdentifier)},function(e){t.notificationService.error(e.data.message)})})},t.$inject=["$uibModal","dialogs","NotificationService","SharedDataService"],t}();t.HouseHoldIncomeController=a;var s=function(){function e(e,t){var i=this;this._scope=e,this._financeModel=t,this.paySlipSummary=[],this.nextPaySlip=function(){i.anyNextSlip&&i.currentIndex++},this.previousPaySlip=function(){i.anyPreviousSlip&&i.currentIndex--}}return Object.defineProperty(e.prototype,"anyNextSlip",{get:function(){return this.currentIndex<this.paySlipSummary.length-1},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"anyPreviousSlip",{get:function(){return this.currentIndex>0},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"currentPaySlip",{get:function(){return this.paySlipSummary[this.currentIndex]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"anyPaySlip",{get:function(){return this.paySlipSummary.length>0},enumerable:!0,configurable:!0}),e.prototype.$onInit=function(){var e=this;this.getPayslipSummary().then(function(t){e.paySlipSummary=t?t.map(function(t){return new e._financeModel.PaySlipSummary(t)}).sort(function(e,t){return e.cycleLastDate-t.cycleLastDate}):[],e.currentIndex=e.paySlipSummary.length-1})},e.$inject=["$scope","FinanceModel"],e}();t.PaySlipWizardController=s;var l=function(){function e(e,t){this._scope=e,this._financeModel=t}return e.prototype.$onInit=function(){var e=this;this.getExpenseSummary().then(function(t){e.expenseClaims=t})},e.$inject=["$scope","FinanceModel"],e}();t.ExpenseClaimWiZardController=l;var c=function(){function e(e,t,i){this._scope=e,this._financeModel=t,this.SharedDataService=i,this.employeeAttributes=this.SharedDataService.getEmployeeAttributes()}return e.prototype.$onInit=function(){var e=this;this.getLoanSummary().then(function(t){e.loans=t})},e.$inject=["$scope","FinanceModel","SharedDataService"],e}();t.LoanWiZardController=c;var p=function(){function e(e,t,i){this._scope=e,this._financeModel=t,this.AlertPriority=i,this.alertPriority=i}return e.prototype.$onInit=function(){this.alerts=[]},e.$inject=["$scope","FinanceModel","AlertPriority"],e}();t.AlerWizardController=p;var u=function(){function t(t,i,n,o,r,a,s,l,c,p,u){this.modalService=t,this.blobContainers=i,this.notificationService=n,this.appSettings=o,this.modalInstance=c,this.dialogs=p,this.financialYear=u,this.saveOrUpdateRentalDetail=s,this.saveSelfOccupied=a,this.deleteRentalDetail=l,this.originalModel=r,this.model=new e.Model.Finance.CurrentResidence(r||{}),this.isEdit=this.model.valid(),this.model.setStatusSubmitted(),this.initblobSetting()}return t.prototype.close=function(){this.modalInstance.close(this.originalModel)},t.prototype.addOrEditRental=function(t){var i=this;this.modalService.open({templateUrl:"collectHouseRental",windowClass:"collect-house-rental structure-compare",controller:m,controllerAs:"ctrl",backdrop:"static",keyboard:!1,resolve:{rentDetail:function(){return t},financialYear:function(){return i.financialYear},saveOrUpdateRentalDetail:function(){return i.saveOrUpdateRentalDetail}}}).result.then(function(t){i.model=new e.Model.Finance.DeductionsUnderHouseProperty(t.deductionsUnderHouseProperty).currentResidence,i.originalModel.update(i.model)})},t.prototype.deleteRental=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure want to delete "+e.address+"?").result.then(function(){t.deleteRentalDetail({houseIdentifier:e.houseIdentifier}).then(function(){t.notificationService.success("deleted successfully"),t.model.removeRentalDetails(e),t.originalModel.update(t.model)},function(e){t.notificationService.error(e.data.message)})})},t.prototype.saveSelfOccupiedProperty=function(){var t=this;!this.model.isRentedProperty&&this.form.ownHouseProperty.$valid&&this.saveSelfOccupied({model:this.model.selfOccupiedHouseProperty}).then(function(i){t.notificationService.success("Saved self occupied loan details successfully"),t.model=new e.Model.Finance.DeductionsUnderHouseProperty(i.deductionsUnderHouseProperty).currentResidence,t.modalInstance.close(t.model)},function(e){t.notificationService.error(e.data.message)})},t.prototype.initblobSetting=function(){this.fileUploadSettings=angular.copy(this.appSettings.fileUploadSettings),this.fileUploadSettings.acceptFileTypes=/(\.|\/)(jpe?g|png|doc|docx|pdf|txt|xps|rtf)$/i,this.fileUploadSettings.allowedFileTypes="png,jpg,jpeg,doc,docx,pdf,rtf,xps,txt",this.fileUploadSettings.maxNumberOfFiles=5,this.fileUploadSettings.maxFileSize=2e6,this.fileUploadSettings.dragZone="#dragZone"},t.$inject=["$uibModal","BlobContainers","NotificationService","AppSettings","currentResidence","saveSelfOccupied","saveOrUpdateRentalDetail","deleteRentalDetail","$uibModalInstance","dialogs","financialYear"],t}();t.CurrentResidenceController=u;var d=function(){function t(t,i,n,o,r,a){this.blobContainers=t,this.notificationService=i,this.appSettings=n,this.modalInstance=a,this.saveOrUpdateLetOutProperty=r,this.model=new e.Model.Finance.LetOutProperty(o||{}),this.model.status=e.Model.DeductionStatus.Submitted,this.initblobSetting()}return t.prototype.saveLetOutProperty=function(){var e=this;this.form.incomeFromLetOut.$valid&&this.saveOrUpdateLetOutProperty({model:this.model}).then(function(t){var i=e.model.houseIdentifier?" updated successfully.":" added successfully.";e.notificationService.success(e.model.address+i),e.modalInstance.close(t)},function(t){e.notificationService.error("Error occurred in tax declaration.")})},t.prototype.initblobSetting=function(){this.fileUploadSettings=angular.copy(this.appSettings.fileUploadSettings),this.fileUploadSettings.acceptFileTypes=/(\.|\/)(jpe?g|png|doc|docx|pdf|txt|xps|rtf)$/i,this.fileUploadSettings.allowedFileTypes="png,jpg,jpeg,doc,docx,pdf,rtf,xps,txt",this.fileUploadSettings.maxNumberOfFiles=5,this.fileUploadSettings.maxFileSize=2e6,this.fileUploadSettings.dragZone="#dragZone"},t.$inject=["BlobContainers","NotificationService","AppSettings","letOutProperty","saveOrUpdateLetOutProperty","$uibModalInstance"],t}();t.LetoutPropertyController=d;var m=function(){function t(t,i,n,o,r,a){var s=this;this.scope=t,this.modalInstance=i,this.financialYear=r,this.notificationService=a,this.steps=[],this.saveOrUpdateRentalDetail=o,this.steps=[new SharedModel.Step(1,"Rental Details","rentalDetails","addRentStep",!1),new SharedModel.Step(2,"Landlord Details","landlordDetails","addLandlordDetails",!1)],this.model=new e.Model.Finance.RentDetails(n||{}),this.model.status=e.Model.DeductionStatus.Submitted,this.scope.$watch("ctrl.rentalForm.rentalHouseDetails.$valid",function(e,t){s.steps[0].valid=e}),this.scope.$watch("ctrl.rentalForm.landlordInfoForm.$valid",function(e,t){s.steps[1].valid=e}),this.currentStep=this.steps[0]}return t.prototype.gotoStep=function(e){var t=this.steps.find(function(t){return t.index==e});if(t){var i=this.steps.find(function(e){return e.index==t.index-1});i&&!i.valid||(this.currentStep=t)}},t.prototype.gotoNext=function(){this.gotoStep(this.currentStep.index+1)},t.prototype.saveRentDetail=function(){var e=this;this.saveOrUpdateRentalDetail({model:this.model}).then(function(t){var i=e.model.address+(e.model.houseIdentifier?" updated successfully":" added successfully");e.notificationService.success(i),e.modalInstance.close(t)},function(t){e.notificationService.error(t.data.message)})},t.prototype.close=function(){this.modalInstance.dismiss("cancel")},t.$inject=["$scope","$uibModalInstance","rentDetail","saveOrUpdateRentalDetail","financialYear","NotificationService"],t}();t.RentCollectionController=m;var y=function(){function e(e,t){var i=this;this.blobContainers=e,this.appSettings=t,this.attachedFiles=[],this.filterBasedOnFrom=function(e){return i.model&&(!i.model.from||i.model.from<=e.date)},this.filterBasedOnTo=function(e){return i.model&&(!i.model.to||i.model.to>=e.date)}}return e.prototype.$onInit=function(){var e=this;this.metroLocations=["Delhi","Mumbai","Chennai","kolkata","Other Non Metro"],this.months=this.financialYear.getAllMonths().map(function(e){return{date:e.date,title:e.monthDetails.name+"-"+e.year}}),this.model.houseIdentifier&&(this.model.from=this.months.find(function(t){return t.date.getMonth()==e.model.from.getMonth()&&t.date.getFullYear()==e.model.from.getFullYear()}).date,this.model.to=this.months.find(function(t){return t.date.getMonth()==e.model.to.getMonth()&&t.date.getFullYear()==e.model.to.getFullYear()}).date),this.initblobSetting()},e.prototype.initblobSetting=function(){this.fileUploadSettings=angular.copy(this.appSettings.fileUploadSettings),this.fileUploadSettings.acceptFileTypes=/(\.|\/)(jpe?g|png|doc|docx|pdf|txt|xps|rtf)$/i,this.fileUploadSettings.allowedFileTypes="png,jpg,jpeg,doc,docx,pdf,rtf,xps,txt",this.fileUploadSettings.maxNumberOfFiles=5,this.fileUploadSettings.maxFileSize=2e6,this.fileUploadSettings.dragZone="#dragZone"},e.$inject=["BlobContainers","AppSettings"],e}();t.AddRentController=y;var h=function(){function e(e,t){this.blobContainers=e,this.appSettings=t,this.attachedFiles=[],this.landLordOptions=[{id:"GOVERNMENT",title:"Government"},{id:"NONRESDENT",title:"Non Resident"},{id:"OTHERVALUE",title:"Other Value"}],this.initblobSetting()}return e.prototype.$onInit=function(){var e=this.model.to.getMonth()-this.model.from.getMonth();this.isRequired=8333.34<=this.model.rentPaid/(e||1)},e.prototype.initblobSetting=function(){this.fileUploadSettings=angular.copy(this.appSettings.fileUploadSettings),this.fileUploadSettings.acceptFileTypes=/(\.|\/)(jpe?g|png|doc|docx|pdf|txt|xps|rtf)$/i,this.fileUploadSettings.allowedFileTypes="png,jpg,jpeg,doc,docx,pdf,rtf,xps,txt",this.fileUploadSettings.maxNumberOfFiles=5,this.fileUploadSettings.maxFileSize=2e6,this.fileUploadSettings.dragZone="#dragZone"},e.$inject=["BlobContainers","AppSettings"],e}();t.AddLandlordController=h,angular.module("payroll").directive("otherTaxSections",function(){return{scope:{},controller:o,controllerAs:"vm",bindToController:{sectionsGroup:"=",investmentDeclaration:"=",saveDeclaration:"&",updateDeduction:"&",clearDeduction:"&",isFinanceSetup:"=",payrollConfig:"=",financialYear:"=",editInProgress:"=",npsEmployerAmount:"="},link:function(e,t,i){e.$on("incomeTaxSummaryChanged",function(t,i){e.vm.investmentDeclaration=i.investmentDeclaration,e.vm.npsEmployerAmount=i.npsEmployerAmount,e.vm.isnpsEmployerComponentEnable=i.isNPSEmployerComponentEnable,e.vm.buildtaxSection()})},templateUrl:"/finances/othertaxsection"}}).directive("group1o5Lac",function(){return{scope:{},controller:n,controllerAs:"vm",bindToController:{sectionsGroup:"=",investmentDeclaration:"=",incometaxStats:"=",saveDeclaration:"&",updateDeduction:"&",clearDeduction:"&",isFinanceSetup:"=",payrollConfig:"=",financialYear:"=",editInProgress:"="},link:function(e,t,i){e.$on("incomeTaxSummaryChanged",function(t,i){e.vm.investmentDeclaration=i.investmentDeclaration,e.vm.incometaxStats=i.incometaxStats,e.vm.buildtaxSection()})},templateUrl:"/finances/taxSectionGroup1o5Lacs"}}).directive("taxSavingAllowance",function(){return{scope:{},controller:r,controllerAs:"vm",bindToController:{sectionsGroup:"=",investmentDeclaration:"=",saveDeclaration:"&",updateDeduction:"&",clearDeduction:"&",isFinanceSetup:"=",payrollConfig:"=",financialYear:"=",editInProgress:"=",getAllowances:"&"},link:function(e,t,i){e.$on("incomeTaxSummaryChanged",function(t,i){i.isfinancialYearChanged&&(e.vm.investmentDeclaration=i.investmentDeclaration,e.vm.buildtaxSection())})},templateUrl:"/finances/allowancesDeclaration"}}).directive("householdIncome",function(){return{scope:{},controller:a,controllerAs:"ctrl",bindToController:{sectionsGroup:"=",investmentDeclaration:"=",financialYear:"=",saveSelfOccupied:"&",saveOrUpdateRentalDetail:"&",deleteRentalDetail:"&",saveOrUpdateLetOutProperty:"&",deleteOtherHouseResidence:"&",isFinanceSetup:"=",payrollConfig:"="},link:function(e,t,i){e.$on("incomeTaxSummaryChanged",function(t,i){e.ctrl.investmentDeclaration=i.investmentDeclaration,e.ctrl.BuildDeductionsUnderHouse()})},templateUrl:"/finances/householdincome"}}).directive("paySlipWizard",function(){return{scope:{},controller:s,bindToController:{getPayslipSummary:"&"},controllerAs:"ctrl",template:$("#payslipWizardTemplate")[0].innerHTML}}).directive("panInfoView",function(){return{scope:{panDetails:"=",editPanDetails:"&",employeeAttributes:"="},templateUrl:"panInfoView"}}).directive("bankDetailsView",function(){return{scope:{bankDetails:"=",salaryPaymentMode:"=",editBankDetails:"&",employeeAttributes:"="},templateUrl:"bankDetailsView"}}).directive("aadhaarDetailsView",function(){return{scope:{aadhaarDetails:"=",editAadhaarInfo:"&",employeeAttributes:"="},templateUrl:"aadharDetailsView"}}).directive("pfAndEsiInfoView",function(){return{scope:{esiDetails:"=",pfDetails:"=",pfStatus:"=",editPfAndEsiInfo:"&",config:"=",employeeAttributes:"="},templateUrl:"PfAndESIInfoView"}}).directive("addRentStep",function(){return{scope:{},templateUrl:"addRentStep",controller:y,controllerAs:"ctrl",bindToController:{model:"=",rentalForm:"=",financialYear:"=",nextStep:"&",close:"&"}}}).directive("addLandlordStep",function(){return{scope:{},templateUrl:"addLandlordStep",controller:h,controllerAs:"ctrl",bindToController:{model:"=",rentalForm:"=",saveRentDetail:"&",close:"&"}}}).directive("expenseClaimWizard",function(){return{scope:{},controller:l,bindToController:{getExpenseSummary:"&"},controllerAs:"ctrl",template:$("#claimWizardTemplate")[0].innerHTML}}).directive("loanWizard",function(){return{scope:{},controller:c,bindToController:{getLoanSummary:"&"},controllerAs:"ctrl",template:$("#loanWizardTemplate")[0].innerHTML}}).directive("alertWizard",function(){return{scope:{},controller:p,controllerAs:"ctrl",template:$("#alertWizardTemplate")[0].innerHTML}})}(t.components||(t.components={}))}(e.Finance||(e.Finance={}))}(Payroll||(Payroll={})),function(e){!function(t){var i,n,o,r,a;t.Loans||(t.Loans={}),i=function(){function e(e,t,i,n,o){var r=this;this.financeService=e,this.params=t,this.scope=n,this.SharedDataService=o,this.payrollConfig=i.config,this.getLoanAggregates(),this.employeeAttributes=this.SharedDataService.getEmployeeAttributes(),this.scope.$on("loanChanges",function(e,t){r.getLoanAggregates()})}return e.prototype.getLoanAggregates=function(){var e=this;this.financeService.getEmployeeLoanAggregates(this.params.id).then(function(t){e.loanAggregateData=t})},e.$inject=["FinanceService","$stateParams","EmployeeAndPayrollDetails","$scope","SharedDataService"],e}(),n=function(){function t(t,i,n,o,r,a,s,l,c,p,u){var d=this;this.appSettings=t,this.modal=i,this.financeService=n,this.params=o,this.uiGridGroupingConstants=r,this.uiGridExtensions=a,this.state=s,this.dialogs=l,this.notificationService=c,this.scope=p,this.SharedDataService=u,this.employeeLoans=new e.loan.model.EmployeeLoans({}),this.deleteloan=function(e){d.dialogs.confirm("Please confirm","Are you sure want to delete loan of amount "+e.loanAmount+" ? ").result.then(function(){d.financeService.deleteEmployeeLoan(d.params,e.id).then(function(t){d.notificationService.success("Loan of amount "+e.loanAmount+" deleted successfully"),d.employeeLoans.deleteLoan(e),d.scope.$emit("loanChanges")},function(e){d.notificationService.error(e.data.message)})})},this.getOutStandingLoans(),this.employeeAttributes=this.SharedDataService.getEmployeeAttributes(),this.initializeGridSettings()}return t.prototype.getOutStandingLoans=function(){var t=this;this.financeService.getAllOutstandingLoans(this.params.id).then(function(i){t.employeeLoans=new e.loan.model.EmployeeLoans({loans:i})})},t.prototype.initializeGridSettings=function(){var e=this;this.loanGridOptions=angular.copy(this.appSettings.gridSettings),this.loanGridOptions.showColumnFooter=!0,this.loanGridOptions.columnDefs=[{field:"loanAmount",displayName:"LOAN AMOUNT",cellTemplate:'<div class="ui-grid-cell-contents"><span title = "INR {{grid.getCellValue(row,col) | number : 0}}">INR {{grid.getCellValue(row,col) | number : 0}}</span></div>',cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"disbursalWithInPayroll",displayName:"Disbursal Mode",cellTemplate:'<div class="ui-grid-cell-contents" title = "{{row.entity.disbursalWithInPayroll ? \'Keka Payroll\' : \'Outside Payroll\'}}"><span>{{row.entity.disbursalWithInPayroll ? "Keka Payroll" : "Outside Payroll"}}</span></div>',cellClass:"ui-grid-cell",cellTooltip:!0,groupingShowGroupingMenu:!1},{field:"emiAmount",displayName:"EMI AMOUNT",cellTemplate:'<div class="ui-grid-cell-contents" title = "INR {{grid.getCellValue(row,col) | number : 0}}"><span>INR {{grid.getCellValue(row,col) | number : 0}}</span></div>',cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"outstandingAmount",displayName:"Outstanding Amount",cellTemplate:'<div class="ui-grid-cell-contents" title = "INR {{grid.getCellValue(row,col) | number : 0}}"><span>INR {{grid.getCellValue(row,col) | number : 0}}</span></div>',cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"repaymentTerm",displayName:"Actual Repayment Term",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)}},{field:"remainingTerm",displayName:"BALANCE PERIOD",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)}},{field:"repaymentStatusName",displayName:"STATUS",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,groupingShowAggregationMenu:!1},{field:"emiDeductsFrom",displayName:"EMI Deducts From",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,cellFilter:"date:'dd MMM yyyy'",groupingShowAggregationMenu:!1},{field:"progressBar",displayName:"Progress Status",cellTemplate:'<div class="ui-grid-cell-contents col-sm-12"><span><div class="progress-container"><div class="progress info"> <div class="progress-bar" style="width:{{row.entity.progressBar}}%;"></div></div></div></span></div>',cellClass:"ui-grid-cell",enableGrouping:!1}],this.state.includes("employee.finances")&&this.loanGridOptions.columnDefs.push({name:"Actions",displayName:"ACTIONS",enableSorting:!1,cellTemplate:"loanActionTemplate",enableGrouping:!1}),this.loanGridOptions.rowHeight=50,this.loanGridOptions.data="ctrl.employeeLoans.loans | filter: ctrl.filterText"},t.$inject=["AppSettings","$uibModal","FinanceService","Params","uiGridGroupingConstants","UiGridExtensions","$state","dialogs","NotificationService","$scope","SharedDataService"],t}(),o=function(){function t(t,i,n,o,r,a){this.appSettings=t,this.modal=i,this.financeService=n,this.params=o,this.uiGridGroupingConstants=r,this.uiGridExtensions=a,this.employeeLoans=new e.loan.model.EmployeeLoans({}),this.getClearedLoans(),this.initializeGridSettings()}return t.prototype.getClearedLoans=function(){var t=this;this.financeService.getClearedLoans(this.params.id).then(function(i){t.employeeLoans=new e.loan.model.EmployeeLoans({loans:i})})},t.prototype.initializeGridSettings=function(){var e=this;this.loanGridOptions=angular.copy(this.appSettings.gridSettings),this.loanGridOptions.showColumnFooter=!0,this.loanGridOptions.columnDefs=[{field:"loanAmount",displayName:"LOAN AMOUNT",cellTemplate:'<div class="ui-grid-cell-contents"><span title = "INR {{grid.getCellValue(row,col) | number : 0}}">INR {{grid.getCellValue(row,col) | number : 0}}</span></div>',cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"disbursalWithInPayroll",displayName:"Disbursal Mode",cellTemplate:'<div class="ui-grid-cell-contents" title = "{{row.entity.disbursalWithInPayroll ? \'Keka Payroll\' : \'Outside Payroll\'}}"><span>{{row.entity.disbursalWithInPayroll ? "Keka Payroll" : "Outside Payroll"}}</span></div>',cellClass:"ui-grid-cell",cellTooltip:!0,groupingShowGroupingMenu:!1},{field:"emiAmount",displayName:"EMI AMOUNT",cellTemplate:'<div class="ui-grid-cell-contents" title = "INR {{grid.getCellValue(row,col) | number : 0}}"><span>INR {{grid.getCellValue(row,col) | number : 0}}</span></div>',cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"outstandingAmount",displayName:"Outstanding Amount",cellTemplate:'<div class="ui-grid-cell-contents" title = "INR {{grid.getCellValue(row,col) | number : 0}}"><span>INR {{grid.getCellValue(row,col) | number : 0}}</span></div>',cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"repaymentTerm",displayName:"Actual Repayment Term",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)}},{field:"remainingTerm",displayName:"BALANCE PERIOD",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)}},{field:"repaymentStatusName",displayName:"STATUS",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,groupingShowAggregationMenu:!1},{field:"emiDeductsFrom",displayName:"EMI Deducts From",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,cellFilter:"date:'dd MMM yyyy'",groupingShowAggregationMenu:!1},{field:"progressBar",displayName:"Progress Status",cellTemplate:'<div class="ui-grid-cell-contents col-sm-12"><span><div class="progress-container"><div class="progress info"> <div class="progress-bar" style="width:{{row.entity.progressBar}}%;"></div></div></div></span></div>',cellClass:"ui-grid-cell",enableGrouping:!1}],this.loanGridOptions.rowHeight=50,this.loanGridOptions.data="ctrl.employeeLoans.loans | filter: ctrl.filterText"},t.$inject=["AppSettings","$uibModal","FinanceService","Params","uiGridGroupingConstants","UiGridExtensions"],t}(),r=function(){function t(t,i,n,o,r,a,s,l,c){this.appSettings=t,this.modal=i,this.financeService=n,this.uiGridExtensions=o,this.dialog=r,this.notificationService=a,this.params=s,this.payrollLoanService=l,this.SharedDataService=c,this.loanRequestStatus=e.loan.model.LoanRequestStatus,this.getLoanRequest(),this.initializeGridSettings(),this.employeeAttributes=this.SharedDataService.getEmployeeAttributes()}return t.prototype.getLoanRequest=function(){var t=this;this.financeService.getAllLoanRequest(this.params.id).then(function(i){t.employeeLoanRequests=i.map(function(t){return new e.loan.model.EmployeeLoanView(t)})})},t.prototype.initializeGridSettings=function(){this.loanGridOptions=angular.copy(this.appSettings.gridSettings),this.loanGridOptions.columnDefs=[{field:"loanAmount",displayName:"LOAN AMOUNT",cellTemplate:'<div class="ui-grid-cell-contents"><span title = "INR {{grid.getCellValue(row,col) | number : 0}}">INR {{grid.getCellValue(row,col) | number : 0}}</span></div>',cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,groupingShowGroupingMenu:!1,width:150},{field:"loanReleasedOn",displayName:"EXPECTED On",cellFilter:"date:'dd MMM yyyy'",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,groupingShowGroupingMenu:!1,width:150},{field:"emiDeductsFrom",displayName:"EMI START FROM",cellFilter:"date:'dd MMM yyyy'",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,groupingShowGroupingMenu:!1,width:150},{field:"repaymentTerm",displayName:"Term",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,width:100},{field:"notes",displayName:"COMMENT",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,width:150},{field:"loanRequestStatus",displayName:"Status",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.appScope.ctrl.loanRequestStatus[row.entity.loanRequestStatus]}}</div>',cellTooltip:!0,headerTooltip:!0,width:120},{field:"requestedOn",displayName:"REQUESTED ON",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,cellFilter:"date:'dd MMM yyyy'",width:150},{field:"actionTakenBy",displayName:"ACTION TAKEN BY",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,enableGrouping:!1,width:100},{field:"actionTakenOn",displayName:"ACTION TAKEN ON",cellFilter:"date:'dd MMM yyyy'",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,enableGrouping:!1,width:150},{name:"Actions",displayName:"ACTIONS",enableSorting:!1,cellClass:"cell-tooltip",cellTemplate:"loanRequestActionTemplate"}],this.loanGridOptions.rowHeight=50,this.loanGridOptions.data="ctrl.employeeLoanRequests | filter: ctrl.filterText"},t.prototype.cancelLoanRequest=function(e){var t=this;this.dialog.confirm("Please Confirm","Are you sure you want to cancel loan request of amount "+e.loanAmount+" ? ").result.then(function(i){t.financeService.cancelLoanRequest(angular.copy(t.params),e.id).then(function(e){t.getLoanRequest(),t.notificationService.success(" Loan request canceled successfully")},function(e){t.notificationService.error(e.data.message)})})},t.prototype.rejectLoanRequest=function(e){var t=this;this.dialog.confirm("Please Confirm","Are you sure you want to reject this loan request  of amount "+e.loanAmount+" ? ").result.then(function(i){t.payrollLoanService.rejectLoanRequest(t.params.id,e.id).then(function(e){t.getLoanRequest(),t.notificationService.success("Loan request rejected successfully")},function(e){t.notificationService.error(e.data.message)})})},t.$inject=["AppSettings","$uibModal","FinanceService","UiGridExtensions","dialogs","NotificationService","Params","PayrollLoanService","SharedDataService"],t}(),a=function(){function t(e,t,i,n,o,r){this.financeService=e,this._loanRequestId=i,this._modalInstance=n,this.notificationService=o,this.$q=r,this.params=angular.copy(t),this.init()}return t.prototype.init=function(){var t=this;this.model=new e.loan.model.EmployeeLoan({}),this._loanRequestId?this.$q.all([this.financeService.getPendingCycles(angular.copy(this.params),4),this.financeService.getLoanRequest(this.params,this._loanRequestId)]).then(function(i){t.model=new e.loan.model.EmployeeLoan(i[1]),t.emiDeductsFrom=t.model.emiDeductsFrom,t.loanReleasedOn=t.model.loanReleasedOn,t.payCycleMonthList=i[0]},function(e){t.notificationService.error(e.data.message)}):this.financeService.getPendingCycles(angular.copy(this.params),4).then(function(e){t.payCycleMonthList=e})},t.prototype.changeEmiStartsFrom=function(){var e=this;if(this.model.emiDeductsFrom){var t=this.payCycleMonthList.find(function(t){return e.model.emiDeductsFrom.getMonth()==t.month&&e.model.emiDeductsFrom.getFullYear()==t.year});this.emiDeductsFrom=t?t.to:null,this.isChangeEmiStartsFrom=!0}},t.prototype.changeExpectedDate=function(){var e=this;if(this.model.loanReleasedOn){var t=this.payCycleMonthList.find(function(t){return e.model.loanReleasedOn.getMonth()==t.month&&e.model.loanReleasedOn.getFullYear()==t.year});this.loanReleasedOn=t?t.to:null,this.isChangeExpectedOn=!0}},t.prototype.resetEmiStartsFrom=function(){this.isChangeEmiStartsFrom=!1},t.prototype.resetExpectedDate=function(){this.isChangeExpectedOn=!1},t.prototype.submitLoanRequest=function(){var t=this;if(this.form.loanRequestForm.$valid){this.requestInProgress=!0;var i=new e.loan.model.EmployeeLoan(this.model);i.emiDeductsFrom=this.emiDeductsFrom,i.loanReleasedOn=this.loanReleasedOn,this._loanRequestId?this.financeService.updateLoanRequest(this.params,i).then(function(e){t.notificationService.success("Loan Request of amount "+i.loanAmount+" updated successfully"),t._modalInstance.close({applied:!0,request:e})},function(e){e.data.message&&(t.loanRestrictions=e.data.message.split("\r\n").filter(function(e){return""!=e})),t.requestInProgress=!1}):this.financeService.saveLoanRequest(this.params,i).then(function(e){t.notificationService.success("Loan Request of amount "+i.loanAmount+" submitted successfully"),t._modalInstance.close({applied:!0,request:e})},function(e){e.data.message&&(t.loanRestrictions=e.data.message.split("\r\n").filter(function(e){return""!=e})),t.requestInProgress=!1})}},t.$inject=["FinanceService","Params","loanRequestId","$uibModalInstance","NotificationService","$q"],t}(),angular.module("payroll").controller("EmployeeClearedLoansController",o).controller("EmployeeOutstandingLoansController",n).controller("EmployeeLoansController",i).controller("EmployeeLoanRequestController",r),angular.module("payroll").controller("LoanApplyController",a)}(e.Finances||(e.Finances={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){var t,i,n,o,r,a,s,l,c;e.Setup||(e.Setup={}),t=function(e){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y){var h=e.call(this,a.payrollSetUp,s,m)||this;return h.scope=t,h.state=i,h.AppContext=n,h.financeService=o,h.params=r,h.employeeAndPayrollDetails=a,h.payrollSalaryStructureService=l,h.financeModel=c,h.salarySharedModel=p,h.lookupServices=u,h.salaryStructureGenerateSource=d,h.SharedDataService=y,h.doNotDeductPF=!1,h.openSalaryDetails=function(){h.modal.open({templateUrl:"finances/salaryHierarchy",windowClass:"full-screen-modal",controller:"FinancesSalaryController",controllerAs:"ctrl",resolve:{FinanceService:function(){return h.financeService},Params:function(){return h.params},EmployeeAndPayrollDetails:function(){return h.employeeAndPayrollDetails}}})},h.openAddSalaryWidget=function(){h.modal.open({templateUrl:"finances/addSalaryAndBonus",windowClass:"full-screen-modal",controller:"SalaryDetailsController",controllerAs:"ctrl",resolve:{Model:function(){return new h.salarySharedModel.SalaryAndBonusDetails({employee:{id:h.employee.id,name:h.employee.displayName,dateOfJoined:h.employee.dateJoined,workerType:h.employee.workerType,esi:h.employee.esi},generateSalaryStructure:h.payrollSalaryStructureService.generateStructureBasedPaygroup,config:h.payrollConfig,hasPayrollFeature:!0})},SalaryService:function(){return h.payrollSalaryStructureService},Config:function(){return h.payrollConfig}}}).result.then(function(e){h.setup.salarySetupComplete=e.salaryDetails.salarySetUpComplete,h.doNotDeductPF=e.doNotDeductPF,h.payrollConfig.payGroupId!=e.payGroupId?h.financeService.getEmployeeAndPayrollDetails(angular.copy(h.params)).then(function(e){h.payrollConfig=e.config,h.employee=e.employee,h.employee.esi.isESIEligible=e.isESIEligible,h.updateStepsStatus(),h.updateStep()}):(h.employee.esi.isESIEligible=e.isESIEligible,h.updateStepsStatus(),h.updateStep())})},h.openPanAndBankInfo=function(){h.modal.open({templateUrl:"bankAndPanInfo",windowClass:"full-screen-modal no-scroll-x",controller:"BankAndPanController",controllerAs:"ctrl",resolve:{FinanceService:function(){return h.financeService},Params:function(){return h.params},Employee:function(){return h.employee},PayrollConfig:function(){return h.payrollConfig},Banks:function(){return h.lookupServices.lookup.query({id:"banks"}).$promise}}}).result.then(function(e){h.setup.bankAndPanSetupComplete=e.bankAndPanSetupComplete,h.updateStepsStatus(),h.updateStep()})},h.openPfAndEsiinfo=function(){h.modal.open({templateUrl:"pfAndEsiInfo",windowClass:"full-screen-modal",controller:"PfAndEsiController",controllerAs:"ctrl",resolve:{FinanceService:function(){return h.financeService},Params:function(){return h.params},Employee:function(){return h.employee},PayrollConfig:function(){return h.payrollConfig},SaveText:function(){return"Save & Close"},Cancel:!1}}).result.then(function(e){h.setup.pfAndESISetupComplete=e.pfAndESISetupComplete,h.updateStepsStatus(),h.updateStep()})},h.payrollConfig=a.config,h.employee=a.employee,h.payrollConfig.isPFFilingRequired()&&h.AppContext.hasPrivilege(["EmployeeFinance.AddEmployeeFinancialData","EmployeeFinance.Implicit.AddEmployeeFinancialData"],h.SharedDataService.getEmployeeAttributes())?h.financeService.getPfOverride(angular.copy(h.params)).then(function(e){h.doNotDeductPF=e.doNotDeductPF,h.updateStepsStatus(),h.updateStep()}):(h.updateStepsStatus(),h.updateStep()),h.scope.$watch("ctrl.setup.setupComplete",function(e){e&&h.state.reload()}),h}return __extends(t,e),t.prototype.getDefaultSteps=function(){var e={salarySetup:{id:1,title:"Add Salary",name:"salarySetup",description:"Add Salary and Issue bonus",stateName:"salarySetupComplete",initStep:this.openAddSalaryWidget},bankAndPanSetup:{id:2,title:"Pan Card & Bank Information",name:"bankAndPanSetup",description:"PAN Card details are necessary for payroll tax calculation. Bank information is required for direct deposit of salary",stateName:"bankAndPanSetupComplete",initStep:this.openPanAndBankInfo},pfAndESISetup:{id:3,title:"Provident Fund & ESI",name:"pfAndESISetup",description:"PF options and nomination details are required so that the information is up to date. ESI is applicable only if gross salary is below "+this.payrollConfig.esi.statutoryLimit,stateName:"pfAndESISetupComplete",initStep:this.openPfAndEsiinfo}};return this.AppContext.hasPrivilege(["EmployeeFinance.AddEmployeeSalary","EmployeeFinance.Implicit.AddEmployeeSalary"],this.SharedDataService.getEmployeeAttributes())?this.setup.salarySetupComplete&&(e.salarySetup.title="Salary Information",e.salarySetup.initStep=this.openSalaryDetails,e.salarySetup.description="Gross salary and the salary structure are provided here for Edit & quick view."):(e.salarySetup.title="Salary Information",e.salarySetup.initStep=function(){},e.salarySetup.description=""),this.payrollConfig.isESIFilingRequired()&&this.payrollConfig.isPFFilingRequired()?this.employee.esi.isESIEligible&&!this.doNotDeductPF||(this.employee.esi.isESIEligible?(e.pfAndESISetup.title="Employees State Insurance (ESI)",e.pfAndESISetup.description="ESI is applicable only if gross salary is below "+this.payrollConfig.esi.statutoryLimit):this.doNotDeductPF?(this.setup.pfAndESISetupComplete=!0,delete e.pfAndESISetup):(e.pfAndESISetup.title="Provident Fund(pf)",e.pfAndESISetup.description="PF Options and nomination details are required so that the information is up to date.")):this.payrollConfig.isESIFilingRequired()&&this.employee.esi.isESIEligible?(e.pfAndESISetup.title="Employee State Insurance (ESI)",e.pfAndESISetup.description="ESI is applicable only if gross salary is below "+this.payrollConfig.esi.statutoryLimit):this.payrollConfig.isPFFilingRequired()&&!this.doNotDeductPF?(e.pfAndESISetup.title="Provident Fund(pf)",e.pfAndESISetup.description="PF Options and nomination details are required so that the information is up to date."):(this.setup.pfAndESISetupComplete=!0,delete e.pfAndESISetup),this.AppContext.hasPrivilege(["EmployeeFinance.AddEmployeeFinancialData","EmployeeFinance.Implicit.AddEmployeeFinancialData"],this.SharedDataService.getEmployeeAttributes())||(e.pfAndESISetup.initStep=function(){},e.bankAndPanSetup.initStep=function(){}),e},t.prototype.updateStep=function(){this.AppContext.hasPrivilege(["EmployeeFinance.AddEmployeeSalary","EmployeeFinance.Implicit.AddEmployeeSalary"],this.SharedDataService.getEmployeeAttributes())||(this.setup.bankAndPanSetupComplete?(this.steps.pfAndESISetup.isEnabled=!0,this.steps.pfAndESISetup.isCurrentstep=!0):(this.steps.bankAndPanSetup.isEnabled=!0,this.steps.bankAndPanSetup.isCurrentstep=!0),this.steps.bankAndPanSetup.isCompleted=this.setup.bankAndPanSetupComplete,this.steps.salarySetup.isEnabled=!1,this.steps.salarySetup.isCurrentstep=!1)},t.$inject=["$scope","$state","AppContext","FinanceService","Params","EmployeeAndPayrollDetails","$uibModal","PayrollSalaryStructureService","FinanceModel","SalarySharedModel","LookupServices","SalaryStructureGenerateSource","SharedModel","SharedDataService"],t}(SharedPatterns.Setup),i=function(e){function t(t,i,n,o,r,a,s,l,c){var p=e.call(this,r.employee.reviewPayrollSetup,a,l)||this;return p.scope=t,p.state=i,p.financeService=n,p.params=o,p.employeeAndPayrollDetails=r,p.financeModel=s,p.currentFinancialYear=c,p.openReviewSalary=function(){p.modal.open({templateUrl:"finances/reviewEmployeeSalary",windowClass:"full-screen-modal",controller:"ReviewSalaryController",controllerAs:"vm",resolve:{FinanceService:function(){return p.financeService},Params:function(){return p.params},Employee:function(){return p.employee},PayrollConfig:function(){return p.payrollConfig}}}).result.then(function(e){var t=angular.copy(p.setup);t.reviewSalary=e.reviewSalary,p.updateReviewStatus(t)})},p.openPanAndBankInfo=function(){p.modal.open({templateUrl:"reviewbankAndPanInfo",windowClass:"full-screen-modal no-scroll-x",controller:"ReviewBankAndPanController",controllerAs:"ctrl",resolve:{FinanceService:function(){return p.financeService},Params:function(){return p.params},Employee:function(){return p.employee}}}).result.then(function(e){var t=angular.copy(p.setup);t.reviewBankAndPANDetails=e.reviewBankAndPANDetails,p.updateReviewStatus(t)})},p.openPfAndEsiinfo=function(){p.modal.open({templateUrl:"reviewPfAndEsiInfo",windowClass:"full-screen-modal",controller:"ReviewPfAndEsiController",controllerAs:"ctrl",resolve:{Employee:function(){return p.employee},PayrollConfig:function(){return p.payrollConfig},pfOverride:function(){return p.financeService.getPFStatus(angular.copy(p.params))}}}).result.then(function(e){var t=angular.copy(p.setup);"reviewPFAndESIDetails"in t?t.reviewPFAndESIDetails=e.reviewed:"reviewPFDetails"in t?t.reviewPFDetails=e.reviewed:"reviewESIDetails"in t&&(t.reviewESIDetails=e.reviewed),p.updateReviewStatus(t)})},p.openTaxDeclaration=function(){p.modal.open({templateUrl:"taxDeclarationInfo",windowClass:"full-screen-modal",controller:"ManageTaxReviewController",controllerAs:"ctrl",resolve:{FinanceService:function(){return p.financeService},Params:function(){return angular.copy(p.params)},Employee:function(){return p.employee},PayrollConfig:function(){return p.payrollConfig},currentFinancialYear:function(){return p.currentFinancialYear}}}).result.then(function(e){var t=angular.copy(p.setup);t.reviewTaxDeclaration=e.reviewTaxDeclaration,p.updateReviewStatus(t)})},p.updateReviewStatus=function(e){p.financeService.saveReviewPayrollSetup(angular.copy(p.params),e).then(function(e){p.setup=e,p.updateStepsStatus()})},p.payrollConfig=r.config,p.employee=r.employee,p.isPreviousIncomeDetailsRequired=r.isPreviousIncomeDetailsRequired,p.updateStepsStatus(),p.scope.$watch("ctrl.setup.allReviewed",function(e){e&&p.state.reload()}),p}return __extends(t,e),t.prototype.getDefaultSteps=function(){var e=this,t={},i=1;return angular.forEach(this.setup,function(n,o){switch(o){case"reviewSalary":t.reviewSalary={id:i++,title:"Review Salary",name:"reviewSalary",description:"Your gross annual salary and the salary structure are provided for your quick review here.",stateName:"reviewSalary",initStep:e.openReviewSalary};break;case"reviewBankAndPANDetails":t.reviewBankAndPANDetails={id:i++,title:"Review Pan Card & Bank Information",name:"reviewBankAndPANDetails",description:"PAN Card details are necessary for payroll tax calculation. Bank information is required for direct deposit of salary",stateName:"reviewBankAndPANDetails",initStep:e.openPanAndBankInfo};break;case"reviewPFAndESIDetails":t.reviewPFAndESIDetails={id:i++,title:"Review Provident Fund & ESI",name:"reviewPFAndESIDetails",description:"PF Options and nomination details are required so that the information is up to date. ESI is applicable only if gross salary is below "+e.payrollConfig.esi.statutoryLimit,stateName:"reviewPFAndESIDetails",initStep:e.openPfAndEsiinfo};break;case"reviewPFDetails":t.reviewPFDetails={id:i++,title:"Provident Fund(PF)",name:"reviewPFDetails",description:"PF Options and nomination details are required so that the information is up to date.",stateName:"reviewPFDetails",initStep:e.openPfAndEsiinfo};break;case"reviewESIDetails":t.reviewESIDetails={id:i++,title:"Employee State Insurance (ESI)",name:"reviewESIDetails",description:"ESI is applicable only if gross salary is below "+e.payrollConfig.esi.statutoryLimit,stateName:"reviewESIDetails",initStep:e.openPfAndEsiinfo};break;case"reviewTaxDeclaration":t.reviewTaxDeclaration={id:i++,title:"Tax Declaration",name:"reviewTaxDeclaration",description:"You need declare your tax savings and other investment information to save on your tax.",stateName:"reviewTaxDeclaration",initStep:e.openTaxDeclaration}}}),t},t.$inject=["$scope","$state","FinanceService","Params","EmployeeAndPayrollDetails","$uibModal","FinanceModel","SharedModel","currentFinancialYear"],t}(SharedPatterns.Setup),n=function(){function e(e,t,i,n,o,r,a,s,l,c){var p=this;this.scope=e,this.financeService=t,this.params=i,this.employee=n,this.banks=o,this.modalInstance=r,this.salaryPaymentMode=a,this.notificationService=s,this.employeeModel=l,this.financeModel=c,this.model={},this.vm={},this.gotoNextStep=function(e){var t=p.vm.steps.find(function(t){return t.index===e});t?t.valid&&t.saveDetails():p.gotoStep(e+1)},this.savePanDetails=function(){p.vm.form.panCardDetails.$valid&&(p.vm.form.panCardDetails.$dirty?p.financeService.savePanDetails(angular.copy(p.params),p.model).then(function(e){p.notificationService.success("Pan card information is saved"),p.employee.pan=new p.financeModel.PanDetails(e),p.gotoStep(p.vm.currentStep.index+1)},function(){p.notificationService.error("Error occured while saving the pan card information")}):p.gotoStep(p.vm.currentStep.index+1))},this.saveBankDetails=function(){p.vm.form.paymentModeAndBankDetails.$valid&&(p.vm.form.paymentModeAndBankDetails.$dirty?p.financeService.saveBankDetails(angular.copy(p.params),p.model).then(function(e){p.notificationService.success("Salary payment mode and bank information is saved"),p.employee.bankDetails=new p.employeeModel.BankAccountDetails(e),p.gotoStep(p.vm.currentStep.index+1)},function(){p.notificationService.error("Error occured while saving bank details")}):p.gotoStep(p.vm.currentStep.index+1))},this.gotoStep=function(e){var t=p.vm.steps.find(function(t){return t.index===e});t?p.vm.currentStep=t:p.modalInstance.close({bankAndPanSetupComplete:p.employee.bankDetails.validState&&p.employee.pan.validState})},this.resetPanDetails=function(){p.model.construct(),p.model.panNotApplicable||(p.model.dateOfBirth=p.employee.dateOfBirth,p.model.nameOnPanCard=p.employee.displayName)};var u=this;this.vm.steps=[{index:1,name:"PanInfo",title:"Pan Card Details",init:function(){this.valid=u.employee.pan.validState,this.saveDetails=u.savePanDetails,u.employee.pan.dateOfBirth=u.employee.pan.dateOfBirth||u.employee.dateOfBirth,u.employee.pan.nameOnPanCard=u.employee.pan.nameOnPanCard||u.employee.displayName,u.model=new u.financeModel.PanDetails(u.employee.pan),u.saveText="Save & Continue"}},{index:2,name:"BankInfo",title:"Bank Account",init:function(){this.valid=u.employee.bankDetails.validState,this.saveDetails=u.saveBankDetails,u.model=angular.copy(u.employee.bankDetails),u.model.salaryPaymentMode===u.salaryPaymentMode.None.id&&(u.model.salaryPaymentMode=u.salaryPaymentMode.BankTransfer.id),u.model.bankId&&(u.model.bank=u.banks.find(function(e){return e.id===u.model.bankId})),u.saveText="complete"}}],this.vm.currentStep=this.vm.steps[0],this.scope.$watch("ctrl.vm.currentStep",function(e){e&&e.init()}),this.scope.$watch("ctrl.vm.form.panCardDetails.$valid",function(e,t){e!==t&&(p.vm.steps[0].valid=e)}),this.scope.$watch("ctrl.vm.form.paymentModeAndBankDetails.$valid",function(e,t){e!==t&&(p.vm.steps[1].valid=e)}),this.scope.$watch("ctrl.model.bank",function(e,t){e!==t&&null!=p.model.bank&&(p.model.bankId=p.model.bank.id,p.model.bankName=p.model.bank.name)})}return e.$inject=["$scope","FinanceService","Params","Employee","Banks","$uibModalInstance","SalaryPaymentMode","NotificationService","EmployeeModel","FinanceModel"],e}(),o=function(){function e(e,t,i,n,o,r,a,s,l,c,p,u){var d=this;this.scope=e,this.financeService=t,this.params=i,this.employee=n,this.payrollConfig=o,this.modalInstance=r,this.notificationService=a,this.financeModel=s,this.$q=l,this.saveText=c,this.cancel=p,this.PayrollLookUpService=u,this.model={},this.vm={},this.savePfAndEsiDetails=function(){if(d.vm.form.pfAndESIDetails.$valid){var e=[];d.payrollConfig.isPFFilingRequired()&&(d.model.pf.pfConfigurationId=d.pfConfigurationId,null!=d.pfConfigurationId&&(d.model.pf.pfEstablishmentCode=d.pfLookup.find(function(e){return e.id==d.pfConfigurationId}).pfNumber),e.push(d.financeService.savePFDetails(angular.copy(d.params),d.model.pf).then(function(e){d.employee.pf=new d.financeModel.PFDetails(e),d.employee.pfConfigurationId=d.pfConfigurationId}))),d.payrollConfig.isESIFilingRequired()&&(d.model.esi.esiConfigurationId=d.esiConfigurationId,null!=d.esiConfigurationId&&(d.model.esi.esiEstablishmentCode=d.esiLookup.find(function(e){return e.id==d.esiConfigurationId}).esiNumber),e.push(d.financeService.saveESIDetails(angular.copy(d.params),d.model.esi).then(function(e){d.employee.esi=new d.financeModel.ESIDetails(e),d.employee.esiConfigurationId=d.esiConfigurationId}))),d.$q.all(e).then(function(){d.notificationService.success(d.title+" information is saved");var e=!(d.payrollConfig.isPFFilingRequired()&&!d.pfOverride.doNotDeductPF)||d.employee.pf.validState,t=!(d.payrollConfig.isESIFilingRequired()&&d.employee.esi.isESIEligible)||d.employee.esi.validState;d.modalInstance.close({pfAndESISetupComplete:e&&t})},function(){d.notificationService.success("Error occured while  saving "+d.title)})}},this.model.pf=new this.financeModel.PFDetails(this.employee.pf),this.model.esi=new this.financeModel.ESIDetails(this.employee.esi),this.financeService.getPfOverride(angular.copy(this.params)).then(function(e){d.pfOverride=e,d.payrollConfig.isPFFilingRequired()&&!d.pfOverride.doNotDeductPF&&(d.title="PF "),d.payrollConfig.isESIFilingRequired()&&d.employee.esi.isESIEligible&&(d.title?d.title+="And ESI":d.title="ESI")}),this.PayrollLookUpService.getStatutoryPFInfo(this.payrollConfig.payGroupId).then(function(e){d.pfLookup=e}),this.PayrollLookUpService.getStatutoryESIInfo(this.payrollConfig.payGroupId).then(function(e){d.esiLookup=e}),this.pfConfigurationId=this.employee.pfConfigurationId,this.esiConfigurationId=this.employee.esiConfigurationId}return e.prototype.closeModal=function(){this.modalInstance.dismiss()},e.prototype.resetPFDetails=function(){this.model.pf.construct(),this.model.pf.isPFNotEligible||(this.model.nameOnTheAccount=this.employee.displayName,this.model.joinDate=this.employee.dateJoined)},e.$inject=["$scope","FinanceService","Params","Employee","PayrollConfig","$uibModalInstance","NotificationService","FinanceModel","$q","SaveText","Cancel","PayrollLookUpService"],e}(),r=function(){function e(e,t,i,n,o,r,a,s){var l=this;this.scope=e,this.financeService=t,this.params=i,this.employee=n,this.payrollConfig=o,this.modalInstance=r,this.financeModel=a,this.modal=s,this.isMyFinance=!1,this.financeService.reviewSalaryAndPreviousIncome(angular.copy(this.params)).then(function(e){e.hasPayrollFeature=!0,l.review=new l.financeModel.SalaryInformation(e)}),this.getFinancialYearList(),this.financeService.myfinances&&(this.isMyFinance=!0)}return e.prototype.getFinancialYearList=function(){var e=this,t=angular.copy(this.params);this.financeService.getFinancialYearList(t).then(function(t){if(t){var i=t;e.getTaxRegime(i[0])}})},e.prototype.getTaxRegime=function(e){var t=this;this.selectedFinancialYear=e;var i=angular.copy(this.params);i.year=e.from.getFullYear(),this.financeService.getTaxRegimeDetails(i).then(function(e){e&&(t.taxRegime=e)})},e.prototype.reviewed=function(){return this.modalInstance.close({reviewSalary:!0})},e.prototype.closeModal=function(){this.modalInstance.dismiss()},e.prototype.openSalaryStructure=function(e){var t=this;this.financeService.getSalaryBreakup(this.params,e.id).then(function(i){t.modal.open({templateUrl:"salary-break-down",controller:"SalaryBreakDowmDisplay",windowClass:"salary-break-down",resolve:{salaryTimeLine:function(){return e},PayGroupName:function(){return null},breakUp:function(){return i}}})})},e.$inject=["$scope","FinanceService","Params","Employee","PayrollConfig","$uibModalInstance","FinanceModel","$uibModal"],e}(),a=function(){function e(e,t,i,n){var o=this;this.scope=e,this.employee=t,this.modalInstance=i,this.salaryPaymentMode=n,this.vm={},this.gotoNextStep=function(e){var t=o.vm.steps.find(function(t){return t.index===e});if(!t||t.valid){var i=o.vm.steps.find(function(t){return t.index===e+1});i?o.vm.currentStep=i:o.modalInstance.dismiss()}},this.vm.steps=[{index:1,name:"PanInfo",title:"Pan Card Details",valid:this.employee.pan.validState},{index:2,name:"BankInfo",title:"Bank Account",valid:this.employee.bankDetails.validState}],this.vm.currentStep=this.vm.steps[0],this.vm.bankDetails=angular.copy(this.employee.bankDetails),this.vm.panDetails=angular.copy(this.employee.pan)}return e.prototype.reviewed=function(){return this.modalInstance.close({reviewBankAndPANDetails:!0})},e.$inject=["$scope","Employee","$uibModalInstance","SalaryPaymentMode"],e}(),s=function(){function e(e,t,i,n,o){this.scope=e,this.employee=t,this.payrollConfig=i,this.modalInstance=n,this.pf=o,this.vm={},this.vm.esiDetails=this.employee.esi,this.vm.pfDetails=this.employee.pf,this.payrollConfig.isPFFilingRequired()&&(this.title="PF"),this.payrollConfig.isESIFilingRequired()&&(this.title?this.title+="And ESI":this.title="ESI")}return e.prototype.reviewed=function(){this.modalInstance.close({reviewed:!0})},e.prototype.closeModal=function(){this.modalInstance.dismiss()},e.$inject=["$scope","Employee","PayrollConfig","$uibModalInstance","pfOverride"],e}(),l=function(){function e(e,t,i,n,o,r,a,s,l,c,p){var u=this;this.scope=e,this.financeService=t,this.params=i,this.employee=n,this.payrollConfig=o,this.modalInstance=r,this.notificationService=a,this.financeModel=s,this.payrollModel=l,this.taxSectionGroup=c,this.vm={},this.getIncomeTaxDeductionSummary=function(e){u.financeService.getTaxDeclarationInputs(angular.copy(u.params)).then(function(t){t=new u.financeModel.IncomeTaxDeductionSummary(t);u.vm.incometaxstats=t,u.vm.npsEmployerAmount=t.npsEmployerGrossAmount,u.vm.isNPSEmployerComponentEnable=t.isNPSEmployerComponentEnable,e.groupedTaxSections.forEach(function(e){u.vm.groupedTaxSections[e.name]=e}),u.vm.investmentDeclaration=new u.financeModel.Declaration(e.declaration)})},this.gotoStep=function(e){var t=u.steps.find(function(t){return t.index===e-1});if(e<=4&&u.editInProgress)return u.notificationService.error("Please fill all details to proceed");if(!t||t.valid){var i=u.steps.find(function(t){return t.index===e});i?u.currentStep=i:u.modalInstance.close({reviewTaxDeclaration:!0})}},this.saveDeclaration=function(){return u.params.year=u.vm.financialYear.from.getFullYear(),u.financeService.saveInvestmentDeclaration(angular.copy(u.params),u.vm.investmentDeclaration.deductions).then(function(e){return u.vm.investmentDeclaration=new u.financeModel.Declaration(e),u.vm.investmentDeclaration})},this.updateDeduction=function(e){return u.params.year=u.vm.financialYear.from.getFullYear(),u.financeService.updateDeduction(angular.copy(u.params),e).then(function(e){return u.vm.investmentDeclaration=new u.financeModel.Declaration(e),u.vm.investmentDeclaration})},this.clearDeduction=function(e){return u.params.year=u.vm.financialYear.from.getFullYear(),u.financeService.clearDeduction(angular.copy(u.params),e).then(function(e){return u.vm.investmentDeclaration=new u.financeModel.Declaration(e),u.vm.investmentDeclaration})},this.getAllowances=function(){return this.params.year=this.vm.financialYear.from.getFullYear(),this.financeService.getTaxFreeAllowanceComponents(angular.copy(this.params))},this.saveSelfOccupiedLoanDetail=function(e){var t=this;return this.params.year=this.vm.financialYear.from.getFullYear(),this.financeService.saveSelfOccupiedLoanDetail(angular.copy(this.params),e).then(function(e){return t.vm.investmentDeclaration=new t.financeModel.Declaration(e),t.vm.investmentDeclaration})},this.saveOrUpdateRentalDetail=function(e){var t=this;return this.params.year=this.vm.financialYear.from.getFullYear(),this.financeService.saveOrUpdateRentalDetail(angular.copy(this.params),e).then(function(e){return t.vm.investmentDeclaration=new t.financeModel.Declaration(e),t.vm.investmentDeclaration})},this.deleteRentalDetail=function(e){return this.params.year=this.vm.financialYear.from.getFullYear(),this.financeService.deleteRentalDetail(angular.copy(this.params),e)},this.saveOrUpdateLetOutProperty=function(e){var t=this;return this.params.year=this.vm.financialYear.from.getFullYear(),this.financeService.saveOrUpdateOtherHouseResidence(angular.copy(this.params),e).then(function(e){return t.vm.investmentDeclaration=new t.financeModel.Declaration(e),t.vm.investmentDeclaration})},this.deleteOtherHouseResidence=function(e){return this.params.year=this.vm.financialYear.from.getFullYear(),this.financeService.deleteOtherHouseResidence(angular.copy(this.params),e)},this.steps=[{index:1,name:"15LacGroup",title:"1.5 Lac Exemptions",valid:!0},{index:2,name:"otherTaxExemptions",title:"Other Exemptions",valid:!0},{index:3,name:"allowances",title:"Tax Saving Allowances",valid:!0},{index:4,name:"houseProperty",title:"House Property",valid:!0}],this.vm.groupedTaxSections={},this.vm.financialYear=p,this.params.year=p.from.getFullYear(),this.financeService.gettaxDeclarationSummary(angular.copy(this.params)).then(function(e){u.getIncomeTaxDeductionSummary(e)},function(e){u.notificationService.error("Error occurred")}),this.currentStep=this.steps[0]}return e.$inject=["$scope","FinanceService","Params","Employee","PayrollConfig","$uibModalInstance","NotificationService","FinanceModel","PayrollModel","TaxSectionGroup","currentFinancialYear"],e}(),c=function(){function e(e,t,i,n,o){this.employeeAndPayrollDetails=e,this.FinanceService=t,this.dateServices=i,this.currentFinancialYear=n,this.financialYearList=o,this.selectedFinancialYear=n}return e.prototype.generateForm=function(){this.FinanceService.exportForm12bb(this.employeeAndPayrollDetails.employee.id,{groupId:this.employeeAndPayrollDetails.config.payGroupId,name:"form12bb",format:"pdfform",financialYear:this.selectedFinancialYear.from.getFullYear()})},e.$inject=["EmployeeAndPayrollDetails","FinanceService","DateServices","currentFinancialYear","financialYearList"],e}(),angular.module("payroll").controller("ReviewSalaryController",r),angular.module("payroll").controller("PfAndEsiController",o),angular.module("payroll").controller("ManageTaxReviewController",l),angular.module("payroll").controller("BankAndPanController",n),angular.module("payroll").controller("ReviewBankAndPanController",a),angular.module("payroll").controller("ReviewPfAndEsiController",s),angular.module("payroll").controller("EmployeeFinanceSetup",i),angular.module("payroll").controller("EmployerFinanceSetup",t),angular.module("payroll").controller("Form12bbController",c)}(e.Finance||(e.Finance={}))}(payroll||(payroll={})),function(e){!function(t){var i=function(){function e(e,t,i,n,o,r){this.scope=e,this.$state=t,this.stateParams=i,this.appContext=n,this.payrollVisibilityPermission=o,this.SharedDataService=r,this.fbpDeclarationUrl="/ui/#/myfinances/pay/fbp",this.employeeAttributes=this.SharedDataService.getEmployeeAttributes(),this.stateParams.id?this.fbpDeclarationUrl="/ui/#/employee/"+this.stateParams.id+"/finance/pay/fbp":this.payrollVisibilityPermission=this.appContext.payrollVisibilityPermission;var a=this;this.scope.$on("$stateChangeStart",function(e,t,i,n,o){"employee.finances.pay"==t.name&&a.$state.includes("employee.finances")&&(a.hasRouteAccess("employee.finances.pay.salary")?(e.preventDefault(),a.$state.go("employee.finances.pay.salary")):a.hasRouteAccess("employee.finances.pay.payslips")?(e.preventDefault(),a.$state.go("employee.finances.pay.payslips")):a.hasRouteAccess("employee.finances.pay.incometax")?(e.preventDefault(),a.$state.go("employee.finances.pay.incometax")):a.hasRouteAccess("employee.finances.pay.componentclaims")?(e.preventDefault(),a.$state.go("employee.finances.pay.componentclaims")):a.appContext.hasPrivilege(["EmployeeFinance.ViewEmployeeFBPDeclarations","EmployeeFinance.Implicit.ViewEmployeeFBPDeclarations"],a.employeeAttributes)&&(e.preventDefault(),location.href="/ui/#/employee/"+a.stateParams.id+"/finance/pay/fbp"))}),this.$state.includes("employee.finances")&&(this.hasRouteAccess(this.$state.current.name)||(this.hasRouteAccess("employee.finances.pay.salary")?this.$state.go("employee.finances.pay.salary"):this.hasRouteAccess("employee.finances.pay.payslips")?this.$state.go("employee.finances.pay.payslips"):this.hasRouteAccess("employee.finances.pay.incometax")?this.$state.go("employee.finances.pay.incometax"):this.hasRouteAccess("employee.finances.pay.componentclaims")?this.$state.go("employee.finances.pay.componentclaims"):this.appContext.hasPrivilege(["EmployeeFinance.ViewEmployeeFBPDeclarations","EmployeeFinance.Implicit.ViewEmployeeFBPDeclarations"],this.employeeAttributes)&&(location.href="/ui/#/employee/"+this.stateParams.id+"/finance/pay/fbp")))}return e.prototype.hasRouteAccess=function(e){var t=!1;return"employee.finances.pay.salary"==e?(this.appContext.hasPrivilege(["EmployeeFinance.ViewEmployeeSalaryDetails"],this.employeeAttributes)||this.appContext.hasPrivilege(["EmployeeFinance.Implicit.ViewEmployeeSalaryDetails"],this.employeeAttributes))&&(t=!0):"employee.finances.pay.payslips"==e?this.appContext.hasPrivilege(["EmployeeFinance.ViewEmployeePayslips","EmployeeFinance.Implicit.ViewEmployeePayslips"],this.employeeAttributes)&&(t=!0):"employee.finances.pay.incometax"==e?this.appContext.hasPrivilege(["EmployeeFinance.ViewIncomeTaxDetails","EmployeeFinance.Implicit.ViewIncomeTaxDetails"],this.employeeAttributes)&&(t=!0):"employee.finances.pay.componentclaims"==e&&this.appContext.hasPrivilege(["EmployeeFinance.ViewEmployeeComponentClaims","EmployeeFinance.Implicit.ViewEmployeeComponentClaims"],this.employeeAttributes)&&(t=!0),t},e.$inject=["$scope","$state","$stateParams","AppContext","PayrollVisibilityPermission","SharedDataService"],e}();t.FinancesMyPayController=i;var n=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S,C,w){var b=this;this.scope=t,this.uibModal=i,this.$q=n,this.FinanceService=o,this.AppContext=r,this.AppFeatures=a,this.PayrollModel=s,this.Params=l,this.EmployeeAndPayrollDetails=c,this.SalarySharedModel=p,this.$state=u,this.PayrollSalaryStructureService=d,this.dialogs=m,this.NotificationService=y,this.SalaryStructureGenerateSource=h,this.PayrollConfigurationService=f,this.paymentStatus=g,this.WorkerType=v,this.paygroupService=S,this.employeeBenefitsService=C,this.SharedDataService=w,this.remunerationType=e.Configuration.Model.RemunerationType,this.salaryStructureNames={},this.hasPayrollFeature=this.AppContext.isFeaturePresent(a.Payroll.title),this.employeeAttributes=this.SharedDataService.getEmployeeAttributes(),this.Params.id&&(this.EmployeeAndPayrollDetails.config.salaryStructures.forEach(function(e){b.salaryStructureNames[e.name]=e.title}),this.EmployeeAndPayrollDetails.config.customSalaryConfig.customSalaryStructures.length>0&&this.EmployeeAndPayrollDetails.config.customSalaryConfig.customSalaryStructures.forEach(function(e){b.salaryStructureNames[e.name]=e.title})),t.$watch("ctrl.payTimeLines",function(e,t){e&&0==e.length&&u.reload()}),this.financeService=o,this.params=angular.copy(l),this.employee=this.EmployeeAndPayrollDetails.employee,this.getSalaryDetails(),this.financeService.myfinances?this.payrollConfig=this.EmployeeAndPayrollDetails.config:this.employeeId=this.Params.id,(this.AppContext.hasPrivilege(["EmployeeFinance.ViewIncomeTaxDetails","EmployeeFinance.Implicit.ViewIncomeTaxDetails"])||u.includes("myfinances"))&&this.getFinancialYearList()}return t.prototype.getFinancialYearList=function(){var e=this;if(!this.$state.includes("employee.viewpay")){var t=angular.copy(this.Params);this.financeService.getFinancialYearList(t).then(function(t){t&&(e.financialYearList=t,e.getTaxRegime(e.financialYearList[0]))})}},t.prototype.getTaxRegime=function(e){var t=this;this.selectedFinancialYear=e;var i=angular.copy(this.Params);i.year=e.from.getFullYear(),this.financeService.getTaxRegimeDetails(i).then(function(e){e&&(t.taxRegime=e)})},t.prototype.getSalaryDetails=function(){var e=this;this.financeService.getSalaryDetails(this.params).then(function(t){(t||[]).forEach(function(e){e.effectiveFrom=e.effectiveFrom.stringToDateWithZeroTime()}),e.payTimeLines=t})},t.prototype.openLatestsalaryVersion=function(e){var t=this;this.financeService.getSalaryBreakup(this.params,e.id).then(function(i){t.uibModal.open({templateUrl:"salary-break-down",controller:"SalaryBreakDowmDisplay",windowClass:"salary-break-down",resolve:{salaryTimeLine:function(){return e},PayGroupName:function(){return e.payGroup},breakUp:function(){return i}}})})},t.prototype.openSalaryStructure=function(e){var t=this;this.financeService.getSalaryBreakup(this.params,e.id).then(function(i){t.uibModal.open({templateUrl:"salary-break-down",controller:"SalaryBreakDowmDisplay",windowClass:"salary-break-down",resolve:{salaryTimeLine:function(){return e},PayGroupName:function(){return e.payGroup},breakUp:function(){return i}}})})},t.prototype.openReviseSalary=function(){var e=this;this.uibModal.open({templateUrl:"revise-salary-template",windowClass:"revise-salary-template full-screen-modal dark-modal action-content",controller:"ReviseSalaryController",controllerAs:"ctrl",resolve:{Model:function(){return new e.SalarySharedModel.SalaryAndBonusDetails({employee:{id:e.employee.id,name:e.employee.displayName,dateOfJoined:e.employee.dateJoined,workerType:e.employee.workerType},config:e.EmployeeAndPayrollDetails.config,generateSalaryStructure:e.PayrollSalaryStructureService.generateStructure,hasPayrollFeature:e.hasPayrollFeature})},SalaryService:function(){return e.PayrollSalaryStructureService},SalaryDetails:function(){return e.payTimeLines},EmployeeAndPayrollDetails:function(){return e.EmployeeAndPayrollDetails},RemunerationType:function(){return e.payTimeLines[0].remunerationType},payGroupId:function(){return e.EmployeeAndPayrollDetails.config.payGroupId}}}).result.then(function(t){e.getSalaryDetails()})},t.prototype.openIssueBonus=function(e){var t=this;this.uibModal.open({templateUrl:"add-bonus-template",controller:"AddBonusController",resolve:{EmployeeDetails:function(){return{id:t.employee.id,name:t.employee.displayName,dateOfJoined:t.employee.dateJoined}},SalaryService:function(){return t.PayrollSalaryStructureService},Config:function(){return t.EmployeeAndPayrollDetails.config},salaryStructureIdentifier:function(){return e}}}).result.then(function(e){t.getSalaryDetails()},function(){})},t.prototype.editSalary=function(e){var t=this;this.financeService.getSalaryBreakup(this.params,e.id).then(function(i){t.uibModal.open({templateUrl:"edit-salary-template",controller:"SalaryEditController",windowClass:"add-salary-structure-modal",resolve:{Model:function(){return new t.SalarySharedModel.SalaryDetails({ctc:e.salaryAmount,effectiveFrom:new Date(e.effectiveFrom),salaryItemsView:i,employee:{id:t.employee.id,name:t.employee.displayName,dateOfJoined:t.employee.dateJoined,workerType:t.employee.workerType},config:t.EmployeeAndPayrollDetails.config,generateSalaryStructure:t.PayrollSalaryStructureService.generateStructure,structureGenerateSource:i.structureGenerateSource,salaryStructureConfiguration:i.salaryConfigurationName,hasPayrollFeature:t.hasPayrollFeature})},SalaryId:function(){return e.id},SalaryService:function(){return t.PayrollSalaryStructureService},payGroupId:function(){return t.EmployeeAndPayrollDetails.config.payGroupId},remunerationType:function(){return e.remunerationType}}}).result.then(function(e){t.getSalaryDetails()})})},t.prototype.getFinancialYear=function(e){var t=new Date(e);return t.getMonth()<3?t.getFullYear()-1:t.getFullYear()},t.prototype.addOrEditEmployeeBenefit=function(e,t){var i=this;this.uibModal.open({templateUrl:"addEditEmployeeBenefit",controller:"AddEmployeeBenefitController as ctrl",resolve:{selectedFinancialYear:function(){return i.getFinancialYear(e.effectiveFrom)},EmployeeId:function(){return i.Params.id},salaryStructure:function(){return e},EmployeeBenefitId:function(){return(t||{}).id}}}).result.then(function(e){e&&i.getSalaryDetails()})},t.prototype.deleteEmployeeBenefit=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you Sure Want to delete"+e.title+" perk ?").result.then(function(){t.employeeBenefitsService.deleteBenefit(t.employee.id,e.id).then(function(i){i.isDeleted?(t.NotificationService.success("perk "+e.title+" deleted successfully"),t.getSalaryDetails()):t.NotificationService.information("error in perk "+e.title+" deletion")},function(i){t.NotificationService.error("An error occurred while deleting perk"+e.title)})})},t.prototype.deleteSalary=function(e){var t=this;e.isModifiable&&this.dialogs.confirm("Please Confirm","Are you Sure Want to delete Salary of Rs."+e.salaryAmount+" which was effective from "+new Date(e.effectiveFrom).toDateString()+" ?").result.then(function(){t.PayrollSalaryStructureService.deleteSalary(t.employee.id,e.id).then(function(e){e.isDeleted?(t.getSalaryDetails(),t.NotificationService.success("Salary Deleted successfully.")):t.NotificationService.information("This salary is in use and cannot be deleted.")},function(e){t.NotificationService.error("An error occurred while deleting salary.")})})},t.prototype.deletebonus=function(e){var t=this;e.isModifiable&&this.dialogs.confirm("Please Confirm","Are you Sure Want to delete "+e.type+" of "+e.amount.toFixed(2)+" ?").result.then(function(){t.PayrollSalaryStructureService.deleteBonus(t.employee.id,e.id).then(function(e){e.isDeleted&&(t.getSalaryDetails(),t.NotificationService.success("Bonus deleted successfully."))},function(e){t.NotificationService.error(e.data.exceptionMessage)})})},t.prototype.changeBonusAmount=function(e){var t=this;this.uibModal.open({templateUrl:"change-bonus-amount-template",controller:"changeBonusAmountController",controllerAs:"ctrl",windowClass:"bonus",resolve:{EmployeeDetails:function(){return{id:t.employee.id,name:t.employee.displayName,dateOfJoined:t.employee.dateJoined}},SalaryService:function(){return t.PayrollSalaryStructureService},Config:function(){return t.EmployeeAndPayrollDetails.config},Bonus:function(){return e}}}).result.then(function(e){t.getSalaryDetails()},function(){})},t.prototype.editBonus=function(e){var t=this;this.uibModal.open({templateUrl:"edit-bonus-template",controller:"BonusEditController",windowClass:"bonus",controllerAs:"ctrl",resolve:{EmployeeDetails:function(){return{id:t.employee.id,name:t.employee.displayName,dateOfJoined:t.employee.dateJoined}},SalaryService:function(){return t.PayrollSalaryStructureService},Config:function(){return t.EmployeeAndPayrollDetails.config},Bonus:function(){return e}}}).result.then(function(e){t.getSalaryDetails()},function(){})},t.prototype.bonusHistory=function(e){var t=this;this.uibModal.open({templateUrl:"timeline-bonus",windowClass:"bonus",controller:"BonusHistoyController",controllerAs:"ctrl",resolve:{EmployeeDetails:function(){return{id:t.employee.id,name:t.employee.displayName,dateOfJoined:t.employee.dateJoined}},SalaryService:function(){return t.PayrollSalaryStructureService},Bonus:function(){return e}}})},t.prototype.openStructureVersions=function(e){var t=this;this.parentSalaryStructure=e,this.revisionTimeLine=null,this.financeService.getSalaryVersions(this.params,e.identifier).then(function(e){e&&e.length>0&&(t.revisionTimeLine=new t.SalarySharedModel.PayrollPayTimeline({canManage:t.canManage,hasPayrollFeature:!0,structures:e.map(function(e){return new t.PayrollModel.SalaryStructure(e)}),perks:[],oneTimePayments:[]}))}),this.revisionModelInstance=this.uibModal.open({templateUrl:"salary-versions-template",windowClass:"bonus employee-profile-modal",scope:this.scope,resolve:{}})},t.$inject=["$scope","$uibModal","$q","FinanceService","AppContext","AppFeatures","PayrollModel","Params","EmployeeAndPayrollDetails","SalarySharedModel","$state","PayrollSalaryStructureService","dialogs","NotificationService","SalaryStructureGenerateSource","PayrollConfigurationService","PaymentStatus","WorkerType","paygroupService","EmployeeBenefitsService","SharedDataService"],t}();t.FinancesSalaryController=n;var o=function(){function t(t,i,n,o,r,a,s,l,c){this.scope=t,this._modalInstance=i,this.EmployeeDetails=n,this.SalaryService=o,this.Config=r,this.NotificationService=a,this.salarySharedModel=s,this.paymentStatus=l,this.bonus=c,this.revisionType=e.Model.Finance.RevisionType,this.model=new e.Model.Finance.BonusRevision(this.bonus)}return t.prototype.changeBonusAmount=function(){var e=this;this.form.changeBonusForm.$valid&&this.SalaryService.bonusRevision(this.EmployeeDetails.id,this.model.bonusId,this.model).then(function(t){e._modalInstance.close(t),e.NotificationService.error("Bonus amount changed successfully.")},function(t){e.NotificationService.error(t.data.exceptionMessage)})},t.$inject=["$scope","$uibModalInstance","EmployeeDetails","SalaryService","Config","NotificationService","SalarySharedModel","PaymentStatus","Bonus"],t}();t.changeBonusAmountController=o;var r=function(){function t(t,i,n,o,r,a,s,l,c,p){var u=this;this.scope=t,this._modalInstance=i,this.appSettings=n,this.employeeDetails=o,this.paymentStatus=r,this.notificationService=a,this.salaryService=s,this.config=l,this.salarySharedModel=c,this.bonus=p,this.validateName=!1,this.datepickerOptions=angular.copy(this.appSettings.datepickerOptions),this.employee=this.employeeDetails,this.hasPayrollFeature=null!=this.config,this.config&&(this.isIncludeInTax=!0),this.salaryService.bonusType.query({},function(t){u.bonusTypes=t.map(function(e){return new u.salarySharedModel.BonusType(e)}),u.bonusTypes.unshift(new u.salarySharedModel.BonusType({title:"Create new One Time Component"}));var i=angular.copy(u.bonus);i.componentType=u.bonusTypes.find(function(e){return e.identifier==u.bonus.bonusTypeId}),u.model=new e.Model.Finance.EditBonus(i)})}return t.prototype.resetNewbonusType=function(){this.createOneTimePaymentType=!1,this.oneTimeComponentName=null},t.prototype.saveBonusType=function(){var e=this;this.form.bonusType.$valid&&this.validateBonusType()&&this.salaryService.bonusType.save({title:this.oneTimeComponentName}).$promise.then(function(t){e.bonusTypes.push(t),e.model.componentType=t,e.resetNewbonusType(),e.notificationService.success("One Time Payment Type Created Successfully.")},function(t){e.notificationService.error(t.data.exceptionMessage),e.resetNewbonusType()})},t.prototype.validateBonusType=function(){var e=this;return!this.bonusTypes.find(function(t){return t.title.toLowerCase()==e.oneTimeComponentName.toLowerCase()})||(this.validateName=!0,!1)},t.prototype.updateBonus=function(){var e=this;this.form.editBonusForm.$valid&&(this.model.status!=this.paymentStatus.PaidOutsideKekaPayroll.id&&(this.model.paidOn=null),this.salaryService.updateBonus(this.employee.id,this.bonus.id,this.model).then(function(t){e._modalInstance.close(t),e.notificationService.success("Bonus updated successfully.")},function(t){e.notificationService.error("An error occurred while updating bonus. "+t.data.message+".")}))},t.prototype.close=function(){this._modalInstance.dismiss()},t.$inject=["$scope","$uibModalInstance","AppSettings","EmployeeDetails","PaymentStatus","NotificationService","SalaryService","Config","SalarySharedModel","Bonus"],t}();t.BonusEditController=r;var a=function(){function t(t,i,n,o,r,a,s,l){this.scope=t,this._modalInstance=i,this.employeeDetails=n,this.salaryService=o,this.NotificationService=r,this.bonus=a,this.appSettings=s,this.paymentStatus=l,this.bonusHistoryType=e.Model.Finance.BonusHistoryType,this.niceScrollOptions=angular.copy(this.appSettings.scrollSettings),this.historyType=this.bonusHistoryType.Revision,this.getBonusRevisionHistory()}return t.prototype.getBonusRevisionHistory=function(){var e=this;this.salaryService.bonusRevisionHistory(this.employeeDetails.id,this.bonus.id).then(function(t){e.model=t,e.historyType=e.bonusHistoryType.Revision})},t.prototype.getBonusPaymentHistory=function(){var e=this;this.salaryService.bonusPaymentHistory(this.employeeDetails.id,this.bonus.id).then(function(t){e.model=t,e.historyType=e.bonusHistoryType.Payement})},t.$inject=["$scope","$uibModalInstance","EmployeeDetails","SalaryService","NotificationService","Bonus","AppSettings","PaymentStatus"],t}();t.BonusHistoyController=a;var s=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g){var v=this;this.scope=t,this.$uibModalInstance=i,this.$q=n,this.salaryService=o,this.PaymentStatus=r,this.notificationService=a,this.Model=s,this.Config=l,this.salarySharedModel=c,this.appSettings=p,this.employeesFinanceServices=u,this.employeeFinanceServices=d,this.payrollLookUpService=m,this.payrollModel=y,this.appContext=h,this.appFeatures=f,this.payrollSalaryStructureService=g,this.bonusTypes=[],this.allPaygroups=[],this.steps=[],this.remunerationTypes=[],this.customsalaryStructures=[],this.remunerationType=e.Configuration.Model.RemunerationType,this.minimumCTC=0,this.hasPayGroupsFeature=this.appContext.isFeaturePresent(this.appFeatures.Paygroups.title),this.paymentStatus=r,this.datepickerOptions=angular.copy(this.appSettings.datepickerOptions),this.modelOptions=this.appSettings.modelBlurSettings,this.steps.push({index:1,name:"ANNUAL SALARY",title:"ANNUAL SALARY",valid:!1}),this.steps.push({index:2,name:"Bonus",title:"Bonus",valid:!1}),this.hasPayrollFeature=null!=this.Config,this.config=this.Config,this.hasPayrollFeature&&this.payrollLookUpService.getPayGroups().then(function(t){v.allPaygroups=t.map(function(t){return new e.Configuration.Model.PaygroupLookup(t)}),v.selectedpayGroupId=v.allPaygroups[0].id,v.getPayrollConfig(v.selectedpayGroupId)}),this.scope.$watch("ctrl.form.salary.$valid",function(e,t){null!=e&&e!=t&&(v.steps[0].valid=e)}),this.init()}return t.prototype.init=function(){var e=this;this.model=this.Model,this.model.hasPayrollFeature=this.hasPayrollFeature,this.currentStep=this.steps[0],this.model.selectedTaxRegime="0",this.salaryService.bonusType.query({},function(t){e.bonusTypes=t.map(function(t){return new e.salarySharedModel.BonusType(t)}),e.bonusTypes.unshift(new e.salarySharedModel.BonusType({title:"Create new One Time Component"}))})},t.prototype.getPayrollConfig=function(t){var i=this;this.model.payGroupId=t;var n=this.allPaygroups.find(function(e){return e.id==t});this.isESIFilingRequired=n.esiEnabled,this.isPFFilingRequired=n.allowPFOverride,this.setPFAndESIElibity(),this.payrollLookUpService.getAllRemunerationTypes(t).then(function(t){i.remunerationTypes=t.map(function(t){return new e.Configuration.Model.RemunerationLookup(t)}),i.model.remunerationType=i.remunerationTypes[0].type,i.model.generateSalaryStructure(),i.onSelectRemuneration()}),this.payrollLookUpService.getAllCustomSalaryStructures(t).then(function(t){i.customsalaryStructures=t.map(function(t){return new e.Configuration.Model.CustomSalaryStructureLookup(t)})})},t.prototype.setPFAndESIElibity=function(){this.model.isESIEligible=!this.isESIFilingRequired&&null,this.model.doNotDeductPF=!!this.isPFFilingRequired||null,this.isESIFilingRequired&&this.isPFFilingRequired?this.pfandesimessage="":this.isESIFilingRequired||this.isPFFilingRequired?this.isPFFilingRequired?this.isESIFilingRequired||(this.pfandesimessage="ESI is not applicable for the selected Pay Group"):this.pfandesimessage="Ability to override employee PF values is turned off":this.pfandesimessage="Ability to override employee PF values is turned off and ESI is not applicable for the selected Pay Group"},t.prototype.onSelectRemuneration=function(){this.model.ctc=0,this.model.structureGenerateSource=this.model.remunerationType==this.remunerationType.monthly?this.model.generateSources.Range.id:this.model.generateSources.CustomStructure.id},t.prototype.gotoStep=function(e){var t=this.steps.find(function(t){return t.index==e-1});if(!t||t&&t.valid){var i=this.steps.find(function(t){return t.index==e});i?this.currentStep=i:this.closeAddSalary()}},t.prototype.resetNewbonusType=function(){this.createOneTimePaymentType=!1,this.oneTimeComponentName=null},t.prototype.saveSalaryAndBonuses=function(){var t=this,i={ctc:this.model.ctc,effectiveFrom:this.model.effectiveFrom,structureGenerateSource:this.model.structureGenerateSource,salaryStructureConfiguration:this.model.salaryStructureConfiguration,adhocComponents:this.model.adhocComponents,enablePayroll:!0,selectedTaxRegime:this.model.selectedTaxRegime};if(this.appContext.isFeaturePresent(this.appFeatures.Payroll.title)){this.payrollProfileInput=new e.Model.Finance.EmployeePayrollProfileInput(this.model),this.payrollProfileInput.employeeId=this.model.employee.id,this.payrollProfileInput.payrollDateJoined=this.model.effectiveFrom,this.payrollProfileInput.enablePayroll=!0,this.notificationService.success("Saving employee payroll details");var n=[];n.push(this.employeeFinanceServices.updateEmployeePayrollProfileInputs({id:this.model.employee.id},this.payrollProfileInput)),this.isPFFilingRequired&&n.push(this.employeeFinanceServices.updateDoNotDeductPF({id:this.model.employee.id},this.model.doNotDeductPF)),this.$q.all(n).then(function(e){t.addSalaryAndBonus(i)},function(e){t.notificationService.error("An error occurred while saving employee payroll details.")})}else this.addSalaryAndBonus(i)},t.prototype.addSalaryAndBonus=function(e){var t=this;this.appContext.isFeaturePresent(this.appFeatures.Payroll.title)?this.salaryService.updateRemuneration(this.model.employee.id,this.model.remunerationType).then(function(i){t.salaryService.addSalaryAndBonus(t.model.employee.id,e).then(function(e){e.bonusTypes=t.bonusTypes,t.$uibModalInstance.close({salaryDetails:e,doNotDeductPF:t.model.doNotDeductPF,isESIEligible:!!t.payrollProfileInput&&t.payrollProfileInput.isESIEligible,payGroupId:t.model.payGroupId})},function(e){t.notificationService.error(e.data.message)})}):this.salaryService.addSalaryAndBonus(this.model.employee.id,e).then(function(e){e.bonusTypes=t.bonusTypes,t.$uibModalInstance.close({salaryDetails:e,doNotDeductPF:t.model.doNotDeductPF,isESIEligible:!!t.payrollProfileInput&&t.payrollProfileInput.isESIEligible})},function(e){t.notificationService.error(e.data.message)})},t.prototype.saveBonusType=function(){var e=this;this.form.bonusType.$valid&&this.salaryService.bonusType.save({title:this.oneTimeComponentName}).$promise.then(function(t){e.bonusTypes.push(t),e.model.currentAdhocComponent.componentType=t,e.resetNewbonusType(),e.notificationService.success("One Time Payment Type Created Successfully.")},function(t){e.notificationService.error(t.data.message),e.resetNewbonusType()})},t.prototype.closeAddSalary=function(){this.$uibModalInstance.dismiss()},t.$inject=["$scope","$uibModalInstance","$q","SalaryService","PaymentStatus","NotificationService","Model","Config","SalarySharedModel","AppSettings","EmployeesFinanceServices","EmployeeFinanceServices","PayrollLookUpService","PayrollModel","AppContext","AppFeatures","PayrollSalaryStructureService"],t}();t.SalaryDetailsController=s;var l=function(){function e(e,t,i,n){this.scope=e,this.$state=t,this.appContext=i,this.SharedDataService=n,this.employeeAttributes=this.SharedDataService.getEmployeeAttributes();var o=this;this.scope.$on("$stateChangeStart",function(e,t,i,n,r){"employee.finances.managetax"!=t.name&&"employee.finances.managetax.declaration"!=t.name||o.$state.includes("employee.finances")&&(o.hasRouteAccess("employee.finances.managetax.declaration.group1o5lac")?(e.preventDefault(),o.$state.go("employee.finances.managetax.declaration.group1o5lac")):o.hasRouteAccess("employee.finances.managetax.previousemployment")?(e.preventDefault(),o.$state.go("employee.finances.managetax.previousemployment")):o.hasRouteAccess("employee.finances.managetax.form12bb")&&(e.preventDefault(),o.$state.go("employee.finances.managetax.form12bb")))}),this.$state.includes("employee.finances")&&(this.hasRouteAccess(t.current.name)||(this.hasRouteAccess("employee.finances.managetax.declaration.group1o5lac")?this.$state.go("employee.finances.managetax.declaration.group1o5lac"):this.hasRouteAccess("employee.finances.managetax.previousemployment")?this.$state.go("employee.finances.managetax.previousemployment"):this.hasRouteAccess("employee.finances.managetax.form12bb")&&this.$state.go("employee.finances.managetax.form12bb")))}return e.prototype.hasRouteAccess=function(e){var t=!1;return"employee.finances.managetax.declaration.group1o5lac"==e||"employee.finances.managetax.declaration.othertaxsections"==e||"employee.finances.managetax.declaration.allowances"==e||"employee.finances.managetax.declaration.householdincome"==e||"employee.finances.managetax.declaration.othersources"==e?this.appContext.hasPrivilege(["EmployeeFinance.ViewEmployeeDeclarations","EmployeeFinance.Implicit.ViewEmployeeDeclarations"],this.employeeAttributes)&&(t=!0):"employee.finances.managetax.declaration.previousemployment"==e?this.appContext.hasPrivilege(["EmployeeFinance.ViewPreviousIncome","EmployeeFinance.Implicit.ViewPreviousIncome"],this.employeeAttributes)&&(t=!0):"employee.finances.managetax.declaration.form12bb"==e&&this.appContext.hasPrivilege(["EmployeeFinance.AccessForm12BB"],this.employeeAttributes)&&(t=!0),t},e.$inject=["$scope","$state","AppContext","SharedDataService"],e}();t.ManageTaxController=l,angular.module("payroll").controller("FinancesSalaryController",n).controller("changeBonusAmountController",o).controller("BonusEditController",r).controller("BonusHistoyController",a).controller("SalaryDetailsController",s).controller("FinancesMyPayController",i).controller("ManageTaxController",l)}(e.Finance||(e.Finance={}))}(Payroll||(Payroll={})),function(e){!function(e){!function(t){var i=function(){function t(e){this.letOutHouseProperties=e.letOutHouseProperties.map(function(e){return new n(e)}),this.currentResidence=new o(e.currentResidence)}return Object.defineProperty(t.prototype,"isCurrentResidenceAdded",{get:function(){return this.currentResidence.valid()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"pendingClaim",{get:function(){return this.letOutHouseProperties.filter(function(t){return t.status==e.DeductionStatus.Submitted}).reduce(function(e,t){return e+t.netAnnualRentReceived+t.interestOnLoanAmount},0)+this.currentResidence.pendingClaim},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"requestedClaim",{get:function(){return this.letOutHouseProperties.reduce(function(e,t){return e+t.netAnnualRentReceived+t.interestOnLoanAmount},0)+this.currentResidence.requestedClaim},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rejectedClaim",{get:function(){return this.letOutHouseProperties.filter(function(t){return t.status==e.DeductionStatus.Rejected}).reduce(function(e,t){return e+t.netAnnualRentReceived+t.interestOnLoanAmount},0)+this.currentResidence.rejectedClaim},enumerable:!0,configurable:!0}),t.prototype.getReviewDocsCount=function(){return this.letOutHouseProperties.reduce(function(e,t){return e+t.attachedDocuments.length},0)+this.currentResidence.getReviewDocsCount()},t.prototype.removeLetOutProperty=function(e){this.letOutHouseProperties=this.letOutHouseProperties.filter(function(t){return t.houseIdentifier!=e})},t.prototype.removeCurrentResidence=function(){this.currentResidence=new o({})},t}();t.DeductionsUnderHouseProperty=i;var n=function(){function t(t){this.houseIdentifier=t.houseIdentifier,this.address=t.address,this.annualRentReceived=t.annualRentReceived,this.municipalTaxesPaid=t.municipalTaxesPaid,this.unrealizedRent=t.unrealizedRent,this.interestOnLoanAmount=t.interestOnLoanAmount,this.status=t.status,this.comment=t.comment,this.approverId=t.approverId,this.approverName=t.approverName,this.approvedOn=t.approvedOn,this.attachedDocuments=null!=t.attachedDocuments?t.attachedDocuments.map(function(t){return new e.AttachedDocuments(t)}):[]}return Object.defineProperty(t.prototype,"statusName",{get:function(){return e.DeductionStatus[this.status]},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"netAnnualRentReceived",{get:function(){return this.annualRentReceived-(this.municipalTaxesPaid||0)-(this.unrealizedRent||0)},enumerable:!0,configurable:!0}),t}();t.LetOutProperty=n;var o=function(){function t(e){this.isRentedProperty=e.isRentedProperty||!1,this.isRentedProperty?this.houseRentDeduction=new a(e.houseRentDeduction||{}):this.selfOccupiedHouseProperty=new r(e.selfOccupiedHouseProperty||{})}return Object.defineProperty(t.prototype,"pendingClaim",{get:function(){return this.getTotalAmountOfStatus(e.DeductionStatus.Submitted)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rejectedClaim",{get:function(){return this.getTotalAmountOfStatus(e.DeductionStatus.Rejected)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"requestedClaim",{get:function(){return this.isRentedProperty?this.houseRentDeduction.rentDetails.reduce(function(e,t){return e+t.rentPaid},0):this.selfOccupiedHouseProperty.interestAmount},enumerable:!0,configurable:!0}),t.prototype.getReviewDocsCount=function(){return this.isRentedProperty?this.houseRentDeduction.rentDetails.reduce(function(t,i){return t+i.attachedDocuments.length+((i.landlordInfo||new e.LandlordInfo({})).signedDeclaration?1:0)},0):this.selfOccupiedHouseProperty.attachedDocuments.length},t.prototype.getTotalAmountOfStatus=function(e){return this.isRentedProperty?this.houseRentDeduction.rentDetails.filter(function(t){return t.status==e}).reduce(function(e,t){return e+t.rentPaid},0):this.selfOccupiedHouseProperty.status==e?this.selfOccupiedHouseProperty.interestAmount:0},t.prototype.setStatusSubmitted=function(){this.isRentedProperty?this.houseRentDeduction.rentDetails.forEach(function(t){t.status=e.DeductionStatus.Submitted}):this.selfOccupiedHouseProperty.status=e.DeductionStatus.Submitted},t.prototype.removeRentalDetails=function(e){this.isRentedProperty&&(this.houseRentDeduction.rentDetails=this.houseRentDeduction.rentDetails.filter(function(t){return t.houseIdentifier!=e.houseIdentifier}))},t.prototype.addRent=function(e){this.isRentedProperty&&this.houseRentDeduction.rentDetails.push(e)},t.prototype.valid=function(){return this.isRentedProperty?this.houseRentDeduction.valid:this.selfOccupiedHouseProperty.valid},t.prototype.construct=function(){this.update(this)},t.prototype.update=function(e){this.constructor(e)},t}();t.CurrentResidence=o;var r=function(){function t(t){this.address=t.address,this.houseLoanType=t.houseLoanType||u.ConstructionOrPurchase,this.interestAmount=t.interestAmount,this.status=t.status,this.attachedDocuments=null!=t.attachedDocuments?t.attachedDocuments.map(function(t){return new e.AttachedDocuments(t)}):[],this.comment=t.comment,this.approverId=t.approverId,this.approverName=t.approverName,this.approvedOn=t.approvedOn}return Object.defineProperty(t.prototype,"hasLoanInterest",{get:function(){return!0},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"valid",{get:function(){return this.interestAmount>0&&this.houseLoanType!=u.None&&null!=this.address},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"statusName",{get:function(){return e.DeductionStatus[this.status]},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"houseLoanTypeName",{get:function(){return u[this.houseLoanType]},enumerable:!0,configurable:!0}),t}();t.selfOccupiedProperty=r;var a=function(){function e(e){this.rentDetails=e.rentDetails?e.rentDetails.map(function(e){return new s(e)}):[]}return Object.defineProperty(e.prototype,"rentPaid",{get:function(){return this.rentDetails.reduce(function(e,t){return e+t.rentPaid},0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"valid",{get:function(){return this.rentDetails.length>0},enumerable:!0,configurable:!0}),e}();t.DeductionHra=a;var s=function(){function t(t){var i=this;this.toJSON=function(){return{houseIdentifier:i.houseIdentifier,rentPaid:i.rentPaid,address:i.address,city:i.city,landlordInfo:i.landlordInfo,attachedDocuments:i.attachedDocuments,status:i.status,to:i.to.dateOnlyString(),from:i.from.dateOnlyString()}},this.houseIdentifier=t.houseIdentifier,this.rentPaid=t.rentPaid,this.address=t.address,this.city=t.city,this.landlordInfo=new e.LandlordInfo(t.landlordInfo||{}),this.attachedDocuments=null!=t.attachedDocuments?t.attachedDocuments.map(function(t){return new e.AttachedDocuments(t)}):[],this.status=t.status,this.to=Date.getDateObj(t.to),this.from=Date.getDateObj(t.from),this.comment=t.comment,this.approverId=t.approverId,this.approverName=t.approverName,this.approvedOn=t.approvedOn,this.landlordInfo.isSameAddress=null!=this.landlordInfo.address&&this.landlordInfo.address==this.address}return Object.defineProperty(t.prototype,"statusName",{get:function(){return e.DeductionStatus[this.status]},enumerable:!0,configurable:!0}),t.prototype.construct=function(e){this.constructor(e)},t.prototype.setLanlordAddress=function(){this.landlordInfo.isSameAddress&&(this.landlordInfo.address=this.address)},t}();t.RentDetails=s;var l=function(){return function(e){this.ctc=e.ctc,this.effectiveFrom=e.effectiveFrom,this.nextRevisionDate=e.nextRevisionDate,this.salaryId=e.salaryId,this.structureGenerateSource=e.structureGenerateSource,this.salaryStructureConfiguration=e.salaryStructureConfiguration,this.adhocComponents=e.adhocComponents}}();t.SalaryViewModel=l;var c=function(){function t(e){this.componentType=e.componentType,this.effectiveFrom=e.effectiveFrom,this.amount=e.amount,this.status=5,this.note=e.note,this.componentName=e.componentName,this.type=e.type,this.isIncludeInTax=!1}return t.prototype.getStatusName=function(){if(this.status)return e.PaymentStatus[this.status]},t}();t.AdhocComponent=c;var p=function(){function e(e){this.houseIdentifier=e.houseIdentifier,this.houseLoanFor=e.houseLoanFor,this.houseLoanType=e.houseLoanType,this.interestAmount=e.interestAmount,this.comment=e.comment}return Object.defineProperty(e.prototype,"houseLoanTypeName",{get:function(){return u[this.houseLoanType]},enumerable:!0,configurable:!0}),e}();t.HomeLoanInterest=p;var u,d=function(){function t(t){this.interestIncome=t.interestIncome,this.commissionIncome=t.commissionIncome,this.agriculturalIncome=t.agriculturalIncome,this.gamblingIncome=t.gamblingIncome,this.otherProfessionalIncome=t.otherProfessionalIncome,this.status=t.status,this.comment=t.comment,this.approverId=t.approverId,this.approverName=t.approverName,this.approvedOn=t.approvedOn,this.attachedDocuments=null!=t.attachedDocuments?t.attachedDocuments.map(function(t){return new e.AttachedDocuments(t)}):[]}return Object.defineProperty(t.prototype,"totalAmount",{get:function(){return this.interestIncome+this.commissionIncome+this.agriculturalIncome+this.gamblingIncome+this.otherProfessionalIncome},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"pendingClaim",{get:function(){return this.status==e.DeductionStatus.Submitted?this.totalAmount:0},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rejectedClaim",{get:function(){return this.status==e.DeductionStatus.Rejected?this.totalAmount:0},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"statusName",{get:function(){return e.DeductionStatus[this.status]},enumerable:!0,configurable:!0}),t}();t.IncomeFromOtherSources=d,function(e){e[e.None=0]="None",e[e.RangeBased=1]="RangeBased",e[e.CustomStructure=2]="CustomStructure",e[e.AutoGenerated=3]="AutoGenerated"}(t.SalaryStructureGenerateSource||(t.SalaryStructureGenerateSource={})),function(e){e[e.None=0]="None",e[e.SelfOccupiedProperty=1]="SelfOccupiedProperty",e[e.LetOutProperty=2]="LetOutProperty"}(t.HouseLoanFor||(t.HouseLoanFor={})),function(e){e[e.None=0]="None",e[e.ConstructionOrPurchase=1]="ConstructionOrPurchase",e[e.Repair=2]="Repair"}(u=t.HouseLoanType||(t.HouseLoanType={}));var m,y=function(){return function(e){this.bonusId=e.id,this.doesNotAffectInSalary=e.doesNotAffectInSalary,this.type=e.type,this.originalAmount=e.amount,this.revisionType=m.Correction}}();t.BonusRevision=y,function(e){e[e.mone=0]="mone",e[e.Added=1]="Added",e[e.Correction=2]="Correction",e[e.Revision=3]="Revision"}(m=t.RevisionType||(t.RevisionType={}));var h=function(){function e(e){var t=this;this.componentType=e.componentType,this.effectiveFrom=new Date(e.payBy),this.paidOn=null!=e.paidOn?new Date(e.paidOn):e.paidOn,this.isIncludeInTax=e.isIncludeInTax,this.status=e.status,this.note=e.note,Object.defineProperty(this,"componentName",{get:function(){return t.componentType.identifier},enumerable:!0}),Object.defineProperty(this,"type",{get:function(){if(t.componentType)return t.componentType.title}})}return e.prototype.toJSON=function(){return{componentName:this.componentType.identifier,status:this.status,note:this.note,effectiveFrom:this.effectiveFrom.dateOnlyString(),isIncludeInTax:this.isIncludeInTax,paidOn:this.paidOn?this.paidOn.dateOnlyString():null}},e}();t.EditBonus=h,function(e){e[e.Revision=0]="Revision",e[e.Payement=1]="Payement"}(t.BonusHistoryType||(t.BonusHistoryType={}));var f=function(){return function(e){this.id=e.id,this.employeeId=e.employeeId,this.payGroupId=e.payGroupId,this.componentType=e.componentType,this.claimAgainstComponent=e.claimAgainstComponent,this.componentName=e.componentName,this.remainingBalance=e.remainingBalance,this.totalAnnualAmount=e.totalAnnualAmount,this.totalAccruedAmount=e.totalAccruedAmount,this.claimedOn=e.claimedOn?e.claimedOn.stringToDate():null,this.receipts=e.receipts||[],this.status=e.status,this.paymentStatus=e.paymentStatus,this.actionTakenBy=e.actionTakenByName,this.claimedBy=e.claimedBy,this.actionTakenOn=e.actionTakenOn?e.actionTakenOn.stringToDate():null,this.claimAmount=e.claimAmount,this.totalClaimedAmount=e.totalClaimedAmount,this.payableAmount=e.payableAmount,this.note=e.note,this.paidOn=e.paidOn?e.paidOn.stringToDate():null,this.payDate=e.payDate?e.payDate.stringToDate():null,this.paymentStatus=e.paymentStatus,this.totalUnclaimedVoidAmount=e.totalUnclaimedVoidAmount,this.totalUnclaimedPaidAsTaxableAmount=e.totalUnclaimedPaidAsTaxableAmount}}();t.ComponentClaim=f;var g=function(){return function(e){this.employeeId=e.employeeId,this.payGroupId=e.payGroupId,this.enablePayroll=e.enablePayroll||!1,this.payrollDateJoined=e.payrollDateJoined,this.isESIEligible=e.isESIEligible||!1}}();t.EmployeePayrollProfileInput=g}(e.Finance||(e.Finance={}))}(e.Model||(e.Model={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){!function(e){var t=function(){return function(e,t,i){this.salaryPaymentMode=t,this.config=i,this.bankDetails=e.bankDetails,this.pfDetails=e.pf,this.esiDetails=e.esi,this.panDetails=e.pan,this.aadhaarDetails=e.aadhaar}}(),i=function(e){function t(t,i,n,o,r){var a=e.call(this,n.employee,r,n.config)||this;return a.scope=t,a.financeService=i,a.employeeAndPayrollDetails=n,a.params=o,a.financeService.getPFStatus(angular.copy(a.params)).then(function(e){a.pfStatus=e.pfStatus}),a}return __extends(t,e),t.$inject=["$scope","FinanceService","EmployeeAndPayrollDetails","Params","SalaryPaymentMode"],t}(t),n=function(e){function t(t,i,n,o,r,a,s,l){var c=e.call(this,o.employee,a,o.config)||this;return c.scope=t,c.financeService=i,c.modal=n,c.employeeAndPayrollDetails=o,c.params=r,c.lookupServices=s,c.SharedDataService=l,c.editBankDetails=function(){c.modal.open({templateUrl:"bankInfoForm",windowClass:"no-scroll",controller:"EditBankController",controllerAs:"ctrl",resolve:{FinanceService:function(){return c.financeService},Params:function(){return c.params},Employee:function(){return c.employeeAndPayrollDetails.employee},Banks:function(){return c.banks}}}).result.then(function(){c.bankDetails=c.employeeAndPayrollDetails.employee.bankDetails})},c.editPanDetails=function(){c.modal.open({templateUrl:"panInfoForm",windowClass:"no-scroll",controller:"EditPanController",controllerAs:"ctrl",resolve:{FinanceService:function(){return c.financeService},Params:function(){return c.params},Employee:function(){return c.employeeAndPayrollDetails.employee}}}).result.then(function(){c.panDetails=c.employeeAndPayrollDetails.employee.pan})},c.editPfAndEsiDetails=function(){c.modal.open({templateUrl:"pfAndEsiInfoForm",windowClass:"no-scroll",controller:"PfAndEsiController",controllerAs:"ctrl",resolve:{FinanceService:function(){return c.financeService},Params:function(){return c.params},Employee:function(){return c.employeeAndPayrollDetails.employee},PayrollConfig:function(){return c.config},SaveText:function(){return"Update"},Cancel:function(){return!0},PfOverride:function(){return c.financeService.getPfOverride(angular.copy(c.params))}}}).result.then(function(){c.pfDetails=c.employeeAndPayrollDetails.employee.pf,c.esiDetails=c.employeeAndPayrollDetails.employee.esi})},c.editAadhaarDetails=function(){c.modal.open({templateUrl:"aadhaarInfoForm",windowClass:"no-scroll",controller:"EditAadhaarController",controllerAs:"ctrl",resolve:{FinanceService:function(){return c.financeService},Params:function(){return c.params},Employee:function(){return c.employeeAndPayrollDetails.employee}}}).result.then(function(){c.aadhaarDetails=c.employeeAndPayrollDetails.employee.aadhaar})},c.lookupServices.lookup.query({id:"banks"}).$promise.then(function(e){c.banks=e}),c.employeeAttributes=c.SharedDataService.getEmployeeAttributes(),c.financeService.getPFStatus(angular.copy(c.params)).then(function(e){c.pfStatus=e.pfStatus}),c}return __extends(t,e),t.$inject=["$scope","FinanceService","$uibModal","EmployeeAndPayrollDetails","Params","SalaryPaymentMode","LookupServices","SharedDataService"],t}(t),o=function(){function e(e,t,i,n,o,r,a,s,l,c){var p=this;this.scope=e,this.financeService=t,this.params=i,this.employee=n,this.banks=o,this.modalInstance=r,this.salaryPaymentMode=a,this.notificationService=s,this.employeeModel=l,this.financeModel=c,this.model={},this.vm={},this.cancel=!0,this.saveBankDetails=function(){p.vm.form.paymentModeAndBankDetails.$valid&&(p.vm.form.paymentModeAndBankDetails.$dirty?p.financeService.saveBankDetails(angular.copy(p.params),p.model).then(function(e){p.notificationService.success("Salary payment mode and bank information is saved"),p.employee.bankDetails=new p.employeeModel.BankAccountDetails(e),p.modalInstance.close()},function(){p.notificationService.error("Error occured while saving bank details")}):p.modalInstance.close())},this.close=function(){p.modalInstance.dismiss()},this.model=angular.copy(this.employee.bankDetails),this.saveText="Update",this.model.salaryPaymentMode===this.salaryPaymentMode.None.id&&(this.model.salaryPaymentMode=this.salaryPaymentMode.BankTransfer.id),this.model.bankId&&(this.model.bank=this.banks.find(function(e){return e.id===p.model.bankId})),this.scope.$watch("ctrl.model.bank",function(e,t){e!==t&&(p.model.bankId=p.model.bank.id,p.model.bankName=p.model.bank.name)})}return e.$inject=["$scope","FinanceService","Params","Employee","Banks","$uibModalInstance","SalaryPaymentMode","NotificationService","EmployeeModel","FinanceModel"],e}(),r=function(){function e(e,t,i,n,o,r,a,s,l){var c=this;this.scope=e,this.financeService=t,this.params=i,this.employee=n,this.modalInstance=o,this.salaryPaymentMode=r,this.notificationService=a,this.employeeModel=s,this.financeModel=l,this.model={},this.vm={},this.cancel=!0,this.saveAadhaarDetails=function(){c.vm.form.aadhaarDetails.$valid&&(c.vm.form.aadhaarDetails.$dirty?c.financeService.saveAadhaarDetails(angular.copy(c.params),c.model).then(function(e){c.notificationService.success("Aadhaar details saved successfully."),c.employee.aadhaar=new c.financeModel.AadhaarDetails(e),c.modalInstance.close()},function(){c.notificationService.error("Error occured while saving aadhaar details")}):c.modalInstance.close())},this.close=function(){c.modalInstance.dismiss()},this.model=angular.copy(this.employee.aadhaar),this.saveText="Update"}return e.$inject=["$scope","FinanceService","Params","Employee","$uibModalInstance","SalaryPaymentMode","NotificationService","EmployeeModel","FinanceModel"],e}(),a=function(){function e(e,t,i,n,o,r,a,s){var l=this;this.scope=e,this.financeService=t,this.params=i,this.employee=n,this.modalInstance=o,this.notificationService=r,this.employeeModel=a,this.financeModel=s,this.model={},this.vm={},this.cancel=!0,this.savePanDetails=function(){l.vm.form.panCardDetails.$valid&&(l.vm.form.panCardDetails.$dirty?l.financeService.savePanDetails(angular.copy(l.params),l.model).then(function(e){l.notificationService.success("Pan card information is saved"),l.employee.pan=new l.financeModel.PanDetails(e),l.modalInstance.close()},function(){l.notificationService.error("Error occured while saving the pan card information")}):l.modalInstance.close())},this.resetPanDetails=function(){l.model.construct(),l.model.panNotApplicable||(l.model.dateOfBirth=l.employee.dateOfBirth,l.model.nameOnPanCard=l.employee.displayName)},this.close=function(){l.modalInstance.dismiss()},this.model=angular.copy(this.employee.pan),this.saveText="Update"}return e.$inject=["$scope","FinanceService","Params","Employee","$uibModalInstance","NotificationService","EmployeeModel","FinanceModel"],e}();angular.module("payroll").controller("MyFinancePreferences",i),angular.module("payroll").controller("FinancePreferences",n),angular.module("payroll").controller("EditBankController",o),angular.module("payroll").controller("EditPanController",a),angular.module("payroll").controller("EditAadhaarController",r)}(e.Preferences||(e.Preferences={}))}(e.Finance||(e.Finance={}))}(payroll||(payroll={})),function(e){!function(e){!function(e){var t=function(){function e(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y){this.scope=e,this.modalService=t,this.modelInstance=i,this.salaryService=n,this.notificationService=o,this.salaryModel=r,this.salarySharedModel=a,this.appSettings=s,this.salaryDetails=l,this.paymentStatus=c,this.employeeAndPayrollDetails=p,this.employeeService=u,this.remunerationType=d,this.payrollLookUpService=m,this.payGroupId=y,this.customSalaryStructures=[],this.remunerationTypes=Payroll.Configuration.Model.RemunerationType,this.minCTC=0,this.datepickerOptions=angular.copy(s.datepickerOptions),this.hasPayrollFeature=null!=p.config,this.init()}return e.prototype.init=function(){var e=this;this.createOneTimePaymentType=!1,this.isAdhocCopied=!1,this.showAdhocList=!1,this.bonusTypeErrors="",this.model=this.salaryModel,this.oldctc=this.salaryDetails[0].salaryAmount,angular.forEach(this.salaryDetails,function(t){1==t.isCurrent&&(e.currentSalary=t)}),this.salaryService.bonusType.query(function(t){e.bonusTypes=t.map(function(t){return new e.salarySharedModel.BonusType(t)}),e.bonusTypes.unshift(new e.salarySharedModel.BonusType({title:"Create new One Time Component"}))}),this.remunerationType!=this.remunerationTypes.monthly&&(this.model.structureGenerateSource=this.model.generateSources.CustomStructure.id),this.employeeDetails=this.employeeService.getPublicProfile(this.model.employee.id),this.payrollLookUpService.getCustomSalaryStructures(this.payGroupId,this.remunerationType).then(function(t){e.customSalaryStructures=t.map(function(e){return new Payroll.Configuration.Model.CustomSalaryStructureLookup(e)})})},e.prototype.saveSalaryAndBonuses=function(){var e=this;if(this.createOneTimePaymentType)this.bonusTypeErrors="Please save the bonus type";else if(this.form.salaryRevisionForm.$valid){var t={ctc:this.model.ctc,effectiveFrom:this.model.effectiveFrom,structureGenerateSource:this.model.structureGenerateSource,salaryStructureConfiguration:this.model.salaryStructureConfiguration,adhocComponents:this.model.adhocComponents};this.salaryService.addSalaryAndBonus(this.model.employee.id,t).then(function(t){e.notificationService.success("Salary Revised Successfully"),angular.forEach(t.bonuses,function(i,n){var o=t.bonuses[n].isModifiable,r=t.bonuses[n].id;t.bonuses[n]=e.model.adhocComponents[n],t.bonuses[n].payBy=t.bonuses[n].effectiveFrom,t.bonuses[n].isModifiable=o,t.bonuses[n].id=r,t.bonuses[n].status=4==t.bonuses[n].status?"Pending":"Paid Outside Keka Payroll"}),e.modelInstance.close(t)},function(t){e.notificationService.error(t.data.message)})}},e.prototype.saveBonusType=function(){var e=this;this.form.bonusType.$valid&&this.salaryService.bonusType.save({title:this.oneTimeComponentName}).$promise.then(function(t){e.bonusTypes.push(t),e.model.currentAdhocComponent.componentType=t,e.resetNewbonusType(),e.notificationService.success("One Time Payment Type Created Successfully.")},function(t){e.notificationService.error(t.data.message),e.resetNewbonusType()})},e.prototype.cancelBonus=function(){this.model.resetAdhocComponent(),this.adhocPercentage=null,this.form.salaryRevisionForm.oneTimeComponents.$setPristine()},e.prototype.resetNewbonusType=function(){this.createOneTimePaymentType=!1,this.oneTimeComponentName=null},e.prototype.close=function(){this.modelInstance.close()},e.prototype.showSalaryBreakup=function(){this.modalService.open({templateUrl:"salaryBreakupView",windowClass:"structure-compare add-salary-details-container",scope:this.scope})},e.prototype.generatePercentage=function(){this.currentSalary.salaryAmount!=this.model.ctc&&(this.model.ctcPercentage=(this.model.ctc-this.currentSalary.salaryAmount)/this.currentSalary.salaryAmount*100,this.oldPercentage=this.model.ctcPercentage)},e.prototype.generateCtc=function(){this.model.ctc=Math.round(parseFloat(this.currentSalary.salaryAmount+this.currentSalary.salaryAmount/100*this.model.ctcPercentage)),this.oldPercentage=this.model.ctcPercentage,this.oldctc=this.currentSalary.annualSalary},e.prototype.generateDailyWageCtc=function(){this.model.ctc=parseFloat(this.currentSalary.salaryAmount+this.currentSalary.salaryAmount/100*this.model.ctcPercentage),this.oldPercentage=this.model.ctcPercentage,this.oldctc=this.currentSalary.annualSalary},e.prototype.generateAdhocPercentage=function(){this.model.ctc&&this.model.currentAdhocComponent.amount?this.adhocPercentage=this.model.currentAdhocComponent.amount/this.model.ctc*100:this.model.currentAdhocComponent.amount&&(this.adhocPercentage=this.model.currentAdhocComponent.amount/this.currentSalary.annualSalary*100)},e.prototype.generateAdhoc=function(){this.model.ctc?this.model.currentAdhocComponent.amount=Math.round(this.model.ctc*this.adhocPercentage/100):this.model.currentAdhocComponent.amount=Math.round(this.currentSalary.annualSalary*this.adhocPercentage/100)},e.prototype.copyFromPrevious=function(){var e=this;angular.forEach(this.currentSalary.extras,function(t){t.componentType=e.bonusTypes.find(function(e){return e.title==t.type}),t.effectiveFrom=t.payBy,t=new e.salarySharedModel.AdhocComponent(t),e.model.adhocComponents.push(t)}),this.showAdhocList=!0,this.isAdhocCopied=!0},e.prototype.initializeNewAdhocComponent=function(){this.model.initializeNewAdhocComponent()},e.prototype.saveAdhoc=function(){this.createOneTimePaymentType?this.bonusTypeErrors="Please save the bonus type":this.form.salaryRevisionForm.oneTimeComponents.$valid&&(this.model.adhocComponents.push(this.model.currentAdhocComponent),this.showAdhocList=this.model.adhocComponents.length>0,this.model.resetAdhocComponent(),this.adhocPercentage=null,this.form.salaryRevisionForm.oneTimeComponents.$setPristine())},e.prototype.delAdhoc=function(e){this.model.adhocComponents.splice(e,1),this.showAdhocList=this.model.adhocComponents.length>0},e.prototype.reviseSalary=function(){var e=this;this.form.salaryRevisionForm.$valid&&this.salaryService.createRevision(this.model.employeeDetails.id,this.model).then(function(t){e.notificationService.success("Salary Revised Successfully"),e.modelInstance.close(t)},function(t){e.notificationService.error(t.data.message)})},e.$inject=["$scope","$uibModal","$uibModalInstance","SalaryService","NotificationService","Model","SalarySharedModel","AppSettings","SalaryDetails","PaymentStatus","EmployeeAndPayrollDetails","EmployeeServices","RemunerationType","PayrollLookUpService","payGroupId"],e}(),i=function(){function e(e,t,i){var n=this;this.financeService=e,this.financeModel=i,this.paySlipYearList=[],this.paySlipMonthList=[],this.params=angular.copy(t),this.financeService.getPayslipsYearList(this.params).then(function(e){n.paySlipYearList=e.map(function(e){return{id:e,title:e}}),n.isPaySlipAvailable&&n.getPayslips(e[0])})}return Object.defineProperty(e.prototype,"isPaySlipAvailable",{get:function(){return this.paySlipYearList.length>0},enumerable:!0,configurable:!0}),e.prototype.getPayslips=function(e){var t=this;this.currentYear!=e&&(this.currentYear=e,this.financeService.getEmployeePayslips(this.params,this.currentYear).then(function(e){t.payslips=e.map(function(e){return new t.financeModel.PaySlipView(e)}),t.buildMonths()}))},e.prototype.selectPayslip=function(e){var t=this;this.currentMonth=e,this.currentPaySlip=this.payslips.find(function(e){return e.forYear==t.currentYear&&e.forMonth==t.currentMonth})},e.prototype.downloadPdf=function(e){this.financeService.exportPaySlip(this.params,this.currentPaySlip.cycleId,e)},e.prototype.buildMonths=function(){var e=this;this.paySlipMonthList=this.payslips.filter(function(t){return t.forYear==e.currentYear}).sort(function(e,t){return t.forMonth-e.forMonth}).map(function(e){return{id:e.forMonth,name:e.forMonthName,source:e.source}}),this.paySlipMonthList.length>0&&this.selectPayslip(this.paySlipMonthList[0].id)},e.$inject=["FinanceService","Params","FinanceModel"],e}();e.PaySlipsController=i,angular.module("payroll").controller("ReviseSalaryController",t).controller("PaySlipsController",i)}(e.Salary||(e.Salary={}))}(e.Finance||(e.Finance={}))}(payroll||(payroll={})),function(e){!function(e){!function(e){var t=function(){function e(e,t,i,n,o){this.resource=e,this.q=t,this.payrollModel=i,this.financeModel=n,this.formDownloadService=o,this.claims=this.resource("/api/me/expenses/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.myComponentClaims=this.resource("/api/myfinances/componentclaims/:year/:action",{year:"@year",action:"@action"},{update:{method:"PUT"}}),this.myfinances=this.resource("/api/myfinances/:year/:action/:identifer",{year:"@year",action:"@action",identifer:"@identifer"},{update:{method:"PUT"}})}return e.prototype.getPayslipSummary=function(e){return e.action="payslip/summary",this.myfinances.query(e).$promise},e.prototype.getLoanSummary=function(e){return e.action="loan/summary",this.myfinances.get(e).$promise},e.prototype.getExpenseSummary=function(e){return e.action="summary",this.claims.get(e).$promise},e.prototype.getTaxRegimeDetails=function(e){return e.action="taxregimedetails",this.myfinances.get(e).$promise},e.prototype.gettaxDeclarationSummary=function(e){return e.action="tax/declaration/Summary",this.myfinances.get(e).$promise},e.prototype.saveInvestmentDeclaration=function(e,t){return e.action="tax/declaration",this.myfinances.save(e,t).$promise},e.prototype.updateDeduction=function(e,t){return e.action="tax/declaration/deduction",this.myfinances.update(e,t).$promise},e.prototype.clearDeduction=function(e,t){return e.action="tax/declaration/deduction",e.deductionName=t,this.myfinances.delete(e).$promise},e.prototype.saveSelfOccupiedLoanDetail=function(e,t){return e.action="tax/declaration/selfOccupied",this.myfinances.save(e,t).$promise},e.prototype.saveOrUpdateRentalDetail=function(e,t){return e.action="tax/declaration/rentalDetail",e.identifer=t.houseIdentifier,this.myfinances.save(e,t).$promise},e.prototype.deleteRentalDetail=function(e,t){return e.action="tax/declaration/rentalDetail",e.identifer=t,this.myfinances.delete(e).$promise},e.prototype.saveOrUpdateOtherHouseResidence=function(e,t){return e.action="tax/declaration/otherhouseresidence",e.identifer=t.houseIdentifier,this.myfinances.save(e,t).$promise},e.prototype.deleteOtherHouseResidence=function(e,t){return e.action="tax/declaration/otherhouseresidence",e.identifer=t,this.myfinances.delete(e).$promise},e.prototype.saveOrUpdateOtherSourcesIncome=function(e,t){return e.action="tax/declaration/othersources",this.myfinances.save(e,t).$promise},e.prototype.deleteOtherSourceIncome=function(e){return e.action="tax/declaration/othersources",this.myfinances.delete(e).$promise},e.prototype.getPreviousIncomeDetails=function(e){return e.action="previousincome",this.myfinances.get(e).$promise},e.prototype.savePreviousIncomeDetails=function(e,t){return e.action="previousincome",this.myfinances.save(e,t).$promise},e.prototype.getPayslipsYearList=function(e){return e.action="payslip/yearlist",this.myfinances.query(e).$promise},e.prototype.getEmployeePayslips=function(e,t){return e.action="payslip/"+t+"Y",this.myfinances.query(e).$promise},e.prototype.exportPaySlip=function(e,t,i){return this.formDownloadService.downloadFile("/api/myfinances/payslip/export/?format=pdfform&cycleId="+t+"&isSegregatedPayslip="+i)},e.prototype.exportForm12bb=function(e,t){return this.formDownloadService.downloadFile("/api/myfinances/export/form12bb/?name="+t.name+"&groupId="+t.groupId+"&format="+t.format+"&financialYear="+t.financialYear)},e.prototype.exportIncomeTaxComputation=function(e,t){return this.formDownloadService.downloadFile("/api/myfinances/export/incometax/?name="+t.name+"&year="+t.year+"&format="+t.format)},e.prototype.getPFStatus=function(e){return e.action="pfStatus",this.myfinances.get(e).$promise},e.prototype.getSalaryDetails=function(e){return e.action="paytimelines",this.myfinances.query(e).$promise},e.prototype.getSalaryBreakup=function(e,t){return e.action="salary/"+t+"/breakup",e.structureId=t,this.myfinances.get(e).$promise},e.prototype.getSalaryVersions=function(e,t){return e.action="salary/"+t+"/versions",e.identifier=t,this.myfinances.query(e).$promise},e.prototype.getIncomeTaxDetails=function(e){return e.action="incometaxdetails",this.myfinances.get(e).$promise},e.prototype.getIncomeTaxDeductionSummary=function(e){return e.action="incomeTaxDeductionSummary",this.myfinances.get(e).$promise},e.prototype.getTaxDeclarationInputs=function(e){return e.action="declartionInputs",this.myfinances.get(e).$promise},e.prototype.getCompanyInfo=function(e){return e.action="companyInfo",this.myfinances.get(e).$promise},e.prototype.getEmployeeAndPayrollDetails=function(e){var t=this;return e.action="employeeAndPayrollDetails",this.myfinances.get(e).$promise.then(function(e){return{employee:new t.financeModel.Employee(e.employee),config:new t.payrollModel.PayrollConfiguration(e.payrollConfig)}})},e.prototype.saveReviewPayrollSetup=function(e,t){return e.action="review/setup",this.myfinances.save(e,t).$promise},e.prototype.reviewSalaryAndPreviousIncome=function(e){return e.action="review/SalaryAndPreviousIncome",this.myfinances.get(e).$promise},e.prototype.getCurrentSalary=function(e){var t=this;return e.action="currentSalary",this.myfinances.get(e).$promise.then(function(e){return new t.payrollModel.SalaryStructure(e)})},e.prototype.savePFOverride=function(e,t){var i=this;return e.action="pfsettingsoverrides",this.myfinances.save(e,t,function(e){return new i.payrollModel.SalaryStructure(e)}).$promise},e.prototype.getPfOverride=function(e){var t=this;return e.action="pfsettingsoverrides",this.myfinances.get(e).$promise.then(function(e){return new t.payrollModel.PFSettingsOverrides(e)})},e.prototype.getFinancialYearList=function(e){var t=this;return e.action="financialyears",this.myfinances.query(e).$promise.then(function(e){return e.map(function(e){return new t.payrollModel.FinancialYear(e)})},function(e){return t.q.reject(e)})},e.prototype.getEmployeeLoanAggregates=function(){return this.myfinances.get({action:"loan/aggregates"}).$promise},e.prototype.getAllOutstandingLoans=function(e){return this.myfinances.query({action:"loan/all/outstanding"}).$promise},e.prototype.getClearedLoans=function(){return this.myfinances.query({action:"loan/all/cleared"}).$promise},e.prototype.getAllLoanRequest=function(){return this.myfinances.query({action:"loan/all/requests"}).$promise},e.prototype.getPendingCycles=function(e,t){var i=this;return e.action="getpendingcycles",e.count=t,this.myfinances.query(e).$promise.then(function(e){return e.map(function(e){return new i.payrollModel.PayrollCycle(e)})})},e.prototype.saveLoanRequest=function(e,t){return e.action="loan/request",this.myfinances.save(e,t).$promise},e.prototype.updateLoanRequest=function(e,t){return e.action="loan/request",e.identifer=t.id,this.myfinances.update(e,t).$promise},e.prototype.getLoanRequest=function(e,t){return e.action="loan/request",e.identifer=t,this.myfinances.get(e).$promise},e.prototype.cancelLoanRequest=function(e,t){return e.action="loan/request/"+t+"/cancel",this.myfinances.update(e,{}).$promise},e.prototype.getTaxFreeAllowanceComponents=function(e){return e.action="tax/declaration/allowance",this.myfinances.query(e,{}).$promise},e.prototype.getEmployeeComponentClaimsSummary=function(e){return this.myComponentClaims.query({year:e.year+"FY",id:e.id,action:"summary"}).$promise},e.prototype.getPendingComponentClaims=function(e){return this.myComponentClaims.query({year:e.year+"FY",id:e.id,action:"pending"}).$promise},e.prototype.getPastComponentClaims=function(e){return this.myComponentClaims.query({year:e.year+"FY",id:e.id,action:"past"}).$promise},e.prototype.submitComponentClaim=function(e,t){return this.myComponentClaims.save({year:e.year+"FY",id:e.id,action:"submit"},t).$promise},e.prototype.updateComponentClaim=function(e,t){return this.myComponentClaims.update({action:"update"},t).$promise},e.prototype.addComponentClaimReceipt=function(e,t){return this.myComponentClaims.save({action:"AddReceipt"},t).$promise},e.prototype.cancelComponentClaim=function(e,t){return this.myComponentClaims.delete({action:"deleteClaim",claimId:t}).$promise},e.prototype.validateComponentClaim=function(e,t){return this.myComponentClaims.save({id:e.id,action:"validate"},t).$promise},e.$inject=["$resource","$q","PayrollModel","FinanceModel","FormDownloadService"],e}();e.MyFinanceServices=t;var i=function(){function e(e,t,i,n,o){var r=this;this.resource=e,this.q=t,this.payrollModel=i,this.financeModel=n,this.formDownloadService=o,this.employeeExpenses=this.resource("/api/employee/:id/expense/:action",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.componentClaims=this.resource("/api/employee/:id/finance/componentClaims/:year/:action",{id:"@id",year:"@year",action:"@action"},{update:{method:"PUT"}}),this.employeeFinance=this.resource("/api/employee/:id/finance/:year/:action/:identifer",{id:"@id",year:"@year",action:"@action",identifer:"@identifer"},{update:{method:"PUT"}}),this.getComponentclaimForReview=function(e,t){return r.componentClaims.get({action:"review/claim",id:e,claimId:t}).$promise}}return e.prototype.getPayslipSummary=function(e){return e.action="payslip/summary",this.employeeFinance.query(e).$promise},e.prototype.getLoanSummary=function(e){return e.action="loan/summary",this.employeeFinance.get(e).$promise},e.prototype.getTaxRegimeDetails=function(e){return e.action="taxregimedetails",this.employeeFinance.get(e).$promise},e.prototype.getExpenseSummary=function(e){return e.action="summary",this.employeeExpenses.get(e).$promise},e.prototype.gettaxDeclarationSummary=function(e){return e.action="tax/declaration/Summary",this.employeeFinance.get(e).$promise},e.prototype.saveInvestmentDeclaration=function(e,t){return e.action="tax/declaration",this.employeeFinance.save(e,t).$promise},e.prototype.updateDeduction=function(e,t){return e.action="tax/declaration/deduction",this.employeeFinance.update(e,t).$promise},e.prototype.clearDeduction=function(e,t){return e.action="tax/declaration/deduction",e.deductionName=t,this.employeeFinance.delete(e).$promise},e.prototype.saveSelfOccupiedLoanDetail=function(e,t){return e.action="tax/declaration/selfOccupied",this.employeeFinance.save(e,t).$promise},e.prototype.saveOrUpdateRentalDetail=function(e,t){return e.action="tax/declaration/rentalDetail",e.identifer=t.houseIdentifier,this.employeeFinance.save(e,t).$promise},e.prototype.deleteRentalDetail=function(e,t){return e.action="tax/declaration/rentalDetail",e.identifer=t,this.employeeFinance.delete(e).$promise},e.prototype.saveOrUpdateOtherHouseResidence=function(e,t){return e.action="tax/declaration/otherhouseresidence",e.identifer=t.houseIdentifier,this.employeeFinance.save(e,t).$promise},e.prototype.deleteOtherHouseResidence=function(e,t){return e.action="tax/declaration/otherhouseresidence",e.identifer=t,this.employeeFinance.delete(e).$promise},e.prototype.saveOrUpdateOtherSourcesIncome=function(e,t){return e.action="tax/declaration/othersources",this.employeeFinance.save(e,t).$promise},e.prototype.deleteOtherSourceIncome=function(e){return e.action="tax/declaration/othersources",this.employeeFinance.delete(e).$promise},e.prototype.getPayslipsYearList=function(e){return e.action="payslip/yearlist",this.employeeFinance.query(e).$promise},e.prototype.getEmployeePayslips=function(e,t){return e.action="payslip/"+t+"Y",this.employeeFinance.query(e).$promise},e.prototype.getPFStatus=function(e){return e.action="pfStatus",this.employeeFinance.get(e).$promise},e.prototype.getSalaryDetails=function(e){return e.action="paytimelines",this.employeeFinance.query(e).$promise},e.prototype.getSalaryBreakup=function(e,t){return e.action="salary/"+t+"/breakup",e.structureId=t,this.employeeFinance.get(e).$promise},e.prototype.getSalaryVersions=function(e,t){return e.action="salary/"+t+"/versions",e.structureIdentifier=t,this.employeeFinance.query(e).$promise},e.prototype.getIncomeTaxDetails=function(e){return e.action="incometaxdetails",this.employeeFinance.get(e).$promise},e.prototype.getIncomeTaxDeductionSummary=function(e){return e.action="incomeTaxDeductionSummary",this.employeeFinance.get(e).$promise},e.prototype.getGrossAndPTaxDetails=function(e,t){return e.action="professionaltaxSummarydetails",e.year=t,this.employeeFinance.get(e).$promise},e.prototype.savePTaxOverride=function(e,t){return e.action="professionalTaxOverride",this.employeeFinance.save(e,t).$promise},e.prototype.updatePTaxOverride=function(e,t){return e.action="professionalTaxOverride",this.employeeFinance.update(e,t).$promise},e.prototype.deletePTaxOverride=function(e,t){return e.action="professionalTaxOverride",e.taxOverrideId=t,this.employeeFinance.delete(e).$promise},e.prototype.getGrossAndTaxDetails=function(e,t){return e.action="incometaxSummarydetails",e.year=t,this.employeeFinance.get(e).$promise},e.prototype.saveIncomeTaxOverride=function(e,t){return e.action="incomeTaxOverride",this.employeeFinance.save(e,t).$promise},e.prototype.updateIncomeTaxOverride=function(e,t){return e.action="incomeTaxOverride",this.employeeFinance.update(e,t).$promise},e.prototype.deleteIncomeTaxOverride=function(e,t){return e.action="incomeTaxOverride",e.taxOverrideId=t,this.employeeFinance.delete(e).$promise},e.prototype.getGrossAndESIDetails=function(e,t){return e.action="esiSummarydetails",e.year=t,this.employeeFinance.get(e).$promise},e.prototype.saveESIOverride=function(e,t){return e.action="esiOverride",this.employeeFinance.save(e,t).$promise},e.prototype.updateESIOverride=function(e,t){return e.action="esiOverride",this.employeeFinance.update(e,t).$promise},e.prototype.deleteESIOverride=function(e,t){return e.action="esiOverride",e.esiOverrideId=t,this.employeeFinance.delete(e).$promise},e.prototype.getPreviousIncomeDetails=function(e){return e.action="previousincome",this.employeeFinance.get(e).$promise},e.prototype.savePreviousIncomeDetails=function(e,t){return e.action="previousincome",this.employeeFinance.save(e,t).$promise},e.prototype.deletePreviousIncomeDetail=function(e,t){return e.action="previousincome/"+t,this.employeeFinance.delete(e).$promise},e.prototype.getCompanyInfo=function(e){return e.action="companyInfo",this.employeeFinance.get(e).$promise},e.prototype.exportPaySlip=function(e,t,i){return this.formDownloadService.downloadFile("/api/employee/"+e.id+"/finance/payslip/export/?format=pdfform&cycleId="+t+"&isSegregatedPayslip="+i)},e.prototype.exportForm12bb=function(e,t){return this.formDownloadService.downloadFile("/api/employee/"+e+"/finance/export/form12bb/?name="+t.name+"&groupId="+t.groupId+"&format="+t.format+"&financialYear="+t.financialYear)},e.prototype.exportIncomeTaxComputation=function(e,t){return this.formDownloadService.downloadFile("/api/employee/"+e+"/finance/export/incometax/?name="+t.name+"&year="+t.year+"&format="+t.format)},e.prototype.getCurrentSalary=function(e){var t=this;return e.action="currentSalary",this.employeeFinance.get(e).$promise.then(function(e){return new t.payrollModel.SalaryStructure(e)})},e.prototype.getEmployeeAndPayrollDetails=function(e){var t=this;return e.action="employeeAndPayrollDetails",this.employeeFinance.get(e).$promise.then(function(e){return{employee:new t.financeModel.Employee(e.employee),config:new t.payrollModel.PayrollConfiguration(e.payrollConfig),payrollSetUp:new t.financeModel.PayrollSetUp(e.employeePayrollSetUp)}})},e.prototype.getEmployeePayrollpermissions=function(e){return this.employeeFinance.get({action:"payrollpermissions",id:e}).$promise},e.prototype.reviewSalaryAndPreviousIncome=function(e){throw"Not Implemented"},e.prototype.savePFOverride=function(e,t){var i=this;return e.action="pfsettingsoverrides",this.employeeFinance.save(e,t).$promise.then(function(e){return new i.payrollModel.SalaryStructure(e)})},e.prototype.getPfOverride=function(e){var t=this;return e.action="pfsettingsoverrides",this.employeeFinance.get(e).$promise.then(function(e){return new t.payrollModel.PFSettingsOverrides(e)})},e.prototype.saveSalaryComponentsOverride=function(e,t){var i=this;return e.action="salarycomponentsoverride",this.employeeFinance.save(e,t).$promise.then(function(e){return new i.payrollModel.SalaryStructure(e)})},e.prototype.savePanDetails=function(e,t){return e.action="pandetails",this.employeeFinance.save(e,t).$promise},e.prototype.saveESIDetails=function(e,t){return e.action="esiDetails",this.employeeFinance.save(e,t).$promise},e.prototype.savePFDetails=function(e,t){return e.action="pfDetails",this.employeeFinance.save(e,t).$promise},e.prototype.saveBankDetails=function(e,t){return e.action="bankdetails",this.employeeFinance.save(e,t).$promise},e.prototype.saveAadhaarDetails=function(e,t){return e.action="aadhaardetails",this.employeeFinance.save(e,t).$promise},e.prototype.getPendingCycles=function(e,t){var i=this;return e.action="getpendingcycles",e.count=t,this.employeeFinance.query(e).$promise.then(function(e){return e.map(function(e){return new i.payrollModel.PayrollCycle(e)})})},e.prototype.getFinancialYearList=function(e){var t=this;return e.action="financialyears",this.employeeFinance.query(e).$promise.then(function(e){return e.map(function(e){return new t.payrollModel.FinancialYear(e)})},function(e){return t.q.reject(e)})},e.prototype.getLeaveEncashmentSettings=function(){return this.employeeFinance.query({action:"getencashmentpolicies"}).$promise},e.prototype.getAllOutstandingLoans=function(e){return this.employeeFinance.query({action:"loan/all/outstanding",id:e}).$promise},e.prototype.getClearedLoans=function(e){return this.employeeFinance.query({action:"loan/all/cleared",id:e}).$promise},e.prototype.getAllLoanRequest=function(e){return this.employeeFinance.query({action:"loan/all/requests",id:e}).$promise},e.prototype.getEmployeeLoanAggregates=function(e){return this.employeeFinance.get({action:"loan/aggregates",id:e}).$promise},e.prototype.saveLoanRequest=function(e,t){return e.action="loan/request",this.employeeFinance.save(e,t).$promise},e.prototype.updateLoanRequest=function(e,t){return e.action="loan/request",e.identifer=t.id,this.employeeFinance.update(e,t).$promise},e.prototype.getLoanRequest=function(e,t){return e.action="loan/request",e.identifer=t,this.employeeFinance.get(e).$promise},e.prototype.cancelLoanRequest=function(e,t){return e.action="loan/request/"+t+"/cancel",this.employeeFinance.update(e,{}).$promise},e.prototype.getLoanConfiguration=function(e){return this.employeeFinance.get({id:e,action:"loan/configuration"}).$promise},e.prototype.deleteEmployeeLoan=function(e,t){return e.action="loan/"+t,this.employeeFinance.delete(e,{}).$promise},e.prototype.getTaxFreeAllowanceComponents=function(e){return e.action="tax/declaration/allowance",this.employeeFinance.query(e,{}).$promise},e.prototype.getEmployeeComponentClaimsSummary=function(e){return this.componentClaims.query({year:e.year+"FY",id:e.id,action:"summary"}).$promise},e.prototype.getPendingComponentClaims=function(e){return this.componentClaims.query({year:e.year+"FY",id:e.id,action:"pending"}).$promise},e.prototype.getPastComponentClaims=function(e){return this.componentClaims.query({year:e.year+"FY",id:e.id,action:"past"}).$promise},e.prototype.submitComponentClaim=function(e,t){return this.componentClaims.save({year:e.year+"FY",id:e.id,action:"submit"},t).$promise},e.prototype.updateComponentClaim=function(e,t){return this.componentClaims.update({id:e.id,action:"update"},t).$promise},e.prototype.addComponentClaimReceipt=function(e,t){return this.componentClaims.save({id:e.id,action:"AddReceipt"},t).$promise},e.prototype.cancelComponentClaim=function(e,t){return this.componentClaims.delete({id:e.id,action:"deleteClaim",claimId:t}).$promise},e.prototype.updateDoNotDeductPF=function(e,t){return this.employeeFinance.update({id:e.id,action:"donotdeductpf",doNotDeductPF:t},{}).$promise},e.prototype.updateEmployeePayrollProfileInputs=function(e,t){return this.employeeFinance.update({id:e.id,action:"profileinput"},t).$promise},e.prototype.validateComponentClaim=function(e,t){return this.componentClaims.save({id:e.id,action:"validate"},t).$promise},e.prototype.rejectComponentclaim=function(e,t){return this.componentClaims.update({id:e,action:"reject"},t).$promise},e.prototype.approveComponentclaim=function(e,t,i){return this.componentClaims.update({id:e,action:"approve",claimId:t},i).$promise},e.$inject=["$resource","$q","PayrollModel","FinanceModel","FormDownloadService"],e}();e.EmployeeFinanceServices=i;var n=function(){function e(e){this.resource=e,this.declarationResource=this.resource("/api/employee/:id/finance/:year/declaration/:action/:identifer",{id:"@id",year:"@year",action:"@action",identifer:"@identifer"},{update:{method:"PUT"}})}return e.prototype.approveTaxDeduction=function(e,t,i){return this.declarationResource.save({action:"taxdeduction/approve",id:t,year:e},i).$promise},e.prototype.rejectTaxDeduction=function(e,t,i){return this.declarationResource.save({action:"taxdeduction/reject",id:t,year:e},i).$promise},e.prototype.approveSelfOccupied=function(e,t,i){return this.declarationResource.save({action:"selfOccupied/approve",id:t,year:e},i).$promise},e.prototype.rejectSelfOccupied=function(e,t,i){return this.declarationResource.save({action:"selfOccupied/reject",id:t,year:e},i).$promise},e.prototype.approveHouseRent=function(e,t,i,n){var o="rentDetail/"+i+"/approve";return this.declarationResource.save({action:o,id:t,year:e},n).$promise},e.prototype.rejectHouseRent=function(e,t,i,n){var o="rentDetail/"+i+"/reject";return this.declarationResource.save({action:o,id:t,year:e},n).$promise},e.prototype.approveLetOutProperty=function(e,t,i,n){var o="letOutProperty/"+i+"/approve";return this.declarationResource.save({action:o,id:t,year:e},n).$promise},e.prototype.rejectLetOutProperty=function(e,t,i,n){var o="letOutProperty/"+i+"/reject";return this.declarationResource.save({action:o,id:t,year:e},n).$promise},e.prototype.approveOtherSources=function(e,t,i){return this.declarationResource.save({action:"othersources/approve",id:t,year:e},i).$promise},e.prototype.rejectOtherSources=function(e,t,i){return this.declarationResource.save({action:"othersources/reject",id:t,year:e},i).$promise},e.$inject=["$resource"],e}();e.EmployeeDeclarationApprovalServices=n;var o=function(){function e(e,t,i,n,o){this.resource=e,this.q=t,this.payrollModel=i,this.financeModel=n,this.formDownloadService=o,this.employeesFinance=this.resource("/api/employees/finance/:action/",{action:"@action"},{update:{method:"PUT"}})}return e.prototype.getPendingCycles=function(e,t){var i=this;return this.employeesFinance.query({groupId:e,count:t,action:"getpendingcycles"}).$promise.then(function(e){return e.map(function(e){return new i.payrollModel.PayrollCycle(e)})})},e.prototype.getLeaveEncashmentSettings=function(e){return this.employeesFinance.query({groupId:e,action:"getencashmentpolicies"}).$promise},e.prototype.getPendingCyclesGroupWise=function(e){return this.employeesFinance.get({count:e,action:"getpendingcyclesgroupwise"}).$promise},e.prototype.getPayrollConfig=function(e){return this.employeesFinance.get({action:"payrollconfig",paygroupId:e}).$promise},e.prototype.getAllPaygroups=function(){return this.employeesFinance.query({action:"paygroups"}).$promise},e.$inject=["$resource","$q","PayrollModel","FinanceModel","FormDownloadService"],e}();e.EmployeesFinanceServices=o,angular.module("xhr").service("MyFinanceServices",t),angular.module("xhr").service("EmployeeFinanceServices",i),angular.module("xhr").service("EmployeesFinanceServices",o).service("EmployeeDeclarationApprovalServices",n)}(e.Services||(e.Services={}))}(e.Finance||(e.Finance={}))}(Payroll||(Payroll={})),function(e){!function(t){!function(t){var i=function(){function t(e,t,i,n){this.modalService=e,this.dialogs=t,this.notificationService=i,this.SharedDataService=n,this.claims={},this.employeeAttributes=this.SharedDataService.getEmployeeAttributes()}return t.prototype.$onInit=function(){this.buildIncomefromOtherSources()},t.prototype.buildIncomefromOtherSources=function(){this.otherSources=this.investmentDeclaration.deductionsFromOtherSources,this.enableDeclarationEdit=this.payrollConfig.employee.declaration.enableDeclarationEdit(this.financialYear),this.claims=this.investmentDeclaration.deductionClaims.find(function(e){return"incomefromothersources"==e.againstDeduction})},t.prototype.addOrEditOtherSources=function(){var t=this;this.modalService.open({templateUrl:"otherSourcesTemplate",windowClass:"structure-compare",controller:n,controllerAs:"ctrl",keyboard:!1,resolve:{otherSources:function(){return t.otherSources},financialYear:function(){return t.financialYear},saveOtherSources:function(){return t.saveOtherSources}}}).result.then(function(i){t.otherSources=new e.Model.Finance.IncomeFromOtherSources(i.deductionsFromOtherSources)})},t.prototype.deleteIncomeFromOtherSources=function(){var e=this;this.dialogs.confirm("Please Confirm","Are you sure want to delete income from other sources?").result.then(function(){e.deleteOtherSources().then(function(t){e.notificationService.success("Income from othersources are deleted successfully"),e.otherSources=t},function(t){e.notificationService.error(t.data.message)})})},t.$inject=["$uibModal","dialogs","NotificationService","SharedDataService"],t}();t.IncomeFromOtherSourcesController=i;var n=function(){function t(t,i,n,o,r,a){this.blobContainers=t,this.notificationService=i,this.appSettings=n,this.modalInstance=a,this.saveOtherSources=r,this.model=new e.Model.Finance.IncomeFromOtherSources(o||{}),this.isEdit=o.status,this.model.status=e.Model.DeductionStatus.Submitted,this.initblobSetting()}return t.prototype.saveIncomeOtherSources=function(){var e=this;this.form.incomeFromOtherSources.$valid&&this.saveOtherSources({model:this.model}).then(function(t){var i=e.isEdit?" updated successfully.":" added successfully.";e.notificationService.success("Income From OtherSources "+i),e.modalInstance.close(t)},function(t){e.notificationService.error("Error occurred in tax declaration.")})},t.prototype.initblobSetting=function(){this.fileUploadSettings=angular.copy(this.appSettings.fileUploadSettings),this.fileUploadSettings.acceptFileTypes=/(\.|\/)(jpe?g|png|doc|docx|pdf|txt|xps|rtf)$/i,this.fileUploadSettings.allowedFileTypes="png,jpg,jpeg,doc,docx,pdf,rtf,xps,txt",this.fileUploadSettings.maxNumberOfFiles=5,this.fileUploadSettings.maxFileSize=2e6,this.fileUploadSettings.dragZone="#dragZone"},t.$inject=["BlobContainers","NotificationService","AppSettings","otherSources","saveOtherSources","$uibModalInstance"],t}();t.OtherSourcesController=n,angular.module("payroll").directive("othersourcesIncome",function(){return{scope:{},controller:i,controllerAs:"ctrl",bindToController:{sectionsGroup:"=",investmentDeclaration:"=",financialYear:"=",saveOtherSources:"&",deleteOtherSources:"&",isFinanceSetup:"=",payrollConfig:"="},link:function(e,t,i){e.$on("incomeTaxSummaryChanged",function(t,i){e.ctrl.investmentDeclaration=i.investmentDeclaration,e.ctrl.buildIncomefromOtherSources()})},templateUrl:"/finances/incomeFromOtherSources"}})}(t.components||(t.components={}))}(e.Finance||(e.Finance={}))}(Payroll||(Payroll={})),function(e){!function(e){!function(e){var t=function(){function e(e){var t=this;this._resource=e,this.getEmployeeModuleStatus=function(e){return t.employeeLeaves.query({action:"employeemodulestatus",id:e}).$promise},this.getLeaveStats=function(e){return t.employeeLeaves.get({action:"stats",id:e}).$promise},this.getEmployeeLeaveStats=function(e,i){return t.employeeLeaves.get({action:"requests",id:e,fromDate:i}).$promise},this.saveLeaveRequest=function(e,i){return t.employeeLeaves.save({action:"request",id:i},e).$promise},this.checkLeaveValidation=function(e,i){return t.employeeLeaves.save({action:"validation",id:i},e).$promise},this.updateLeaveRequest=function(e,i){return t.employeeLeaves.update({action:"request",requestId:i},e).$promise},this.getTeamLeaveCalendar=function(e){return t.employeeLeaves.get({action:"calendarevents",id:e}).$promise},this.getWeeklyOffPolicy=function(e){return t.employeeLeaves.get({action:"weeklyoffpolicy",id:e}).$promise},this.approveLeaveRequest=function(e){return t.employeeLeaves.save({action:"approve",requestId:e}).$promise},this.rejectLeaveRequest=function(e){return t.employeeLeaves.save({action:"reject",requestId:e}).$promise},this.cancelLeaveRequest=function(e){return t.employeeLeaves.update({action:"cancel",requestId:e}).$promise},this.deleteLeaveRequest=function(e,i){return t.employeeLeaves.delete({action:"delete",requestId:i},e).$promise},this.updateLeaveRequestType=function(e,i){return t.employeeLeaves.update({action:"delete",requestId:e},i).$promise},this.updateLeaveRequestDates=function(e,i){return t.employeeLeaves.update({action:"requestdates",id:e},i).$promise},this.getLeavePlan=function(e){return t.employeeLeaves.get({action:"leaveplan",id:e}).$promise},this.employeeLeaves=this._resource("/api/employee/:id/leaves/:action",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.$inject=["$resource"],e}();e.EmployeeLeavesService=t,angular.module("employees").service("EmployeeLeavesService",t)}(e.Services||(e.Services={}))}(e.Leaves||(e.Leaves={}))}(EmployeeProfile||(EmployeeProfile={})),function(e){!function(e){!function(e){var t=function(){function e(e){var t=this;this._resource=e,this.getEmployeeTimeoffData=function(e){return t.employeeTimesheet.get({action:"timeOffData",id:e}).$promise},this.getUnSubmittedTimesheetCount=function(e){return t.employeeTimesheet.get({action:"timesheetsduecount",id:e}).$promise},this.getRejectedTimesheetCount=function(e){return t.employeeTimesheet.get({action:"timesheetsrejectedcount",id:e}).$promise},this.getEmployeeProjects=function(e){return t.employeeTimesheet.query({action:"employeeprojects",id:e}).$promise},this.getProjectResourceAllocations=function(e){return t.employeeTimesheet.query({action:"resourceallocation",id:e}).$promise},this.getEmployeeTimesheet=function(e,i){return t.employeeTimesheet.get({action:"employeetimesheet",id:e,fromDate:i}).$promise},this.getSubmissionStatusAndTimesheetEntries=function(e,i){return t.employeeTimesheet.get({action:"timesheet",id:e,fromDate:i}).$promise},this.getUnSubmittedTimesheets=function(e){return t.employeeTimesheet.query({action:"timesheetsdue",id:e}).$promise},this.getRejectedTimesheets=function(e){return t.employeeTimesheet.query({action:"timesheetsrejected",id:e}).$promise},this.getWeekTimeSummary=function(e,i,n){return t.employeeTimesheet.query({action:"weektimesummary",id:e,fromDate:i,toDate:n}).$promise},this.getProjectTimeSummary=function(e,i){return t.employeeTimesheet.query({action:"timeentries",projectId:i,id:e}).$promise},this.saveProjectRequest=function(e,i){return t.employeeTimesheet.save({action:"requestproject",id:e},i).$promise},this.saveTimesheetEntries=function(e,i){return t.employeeTimesheet.save({action:"timesheet",id:e},i).$promise},this.saveTimesheetRequest=function(e,i){return t.employeeTimesheet.save({action:"submittimesheet",id:e},i).$promise},this.unSubmitTimesheet=function(e,i){return t.employeeTimesheetAction.update({action:"unsubmitTimesheet",id:e,timesheetId:i},{}).$promise},this.updateTimesheetRequest=function(e,i){return t.employeeTimesheet.update({action:"submittimesheet",timesheetId:e},i).$promise},this.rejectTimesheet=function(e,i,n){return t.employeeTimesheetAction.update({action:"rejectTimesheet",id:e,timesheetId:i,rejectComment:n},{}).$promise},this.getEmployeeModuleStatus=function(e){return t.employeeTimesheet.query({action:"employeemodulestatus",id:e}).$promise},this.employeeTimesheet=this._resource("/api/employee/:id/timesheet/:action",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.employeeTimesheetAction=this._resource("/api/employee/:id/timesheet/:action/:timesheetId",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.$inject=["$resource"],e}();e.EmployeeTimesheetServices=t,angular.module("employees").service("EmployeeTimesheetServices",t)}(e.Services||(e.Services={}))}(e.Timesheet||(e.Timesheet={}))}(EmployeeProfile||(EmployeeProfile={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){var t,i,n,o,r,a;e.Components||(e.Components={}),t=function(e){function t(t,i,n,o,r,a){var s=e.call(this,t,i)||this;return s.state=i,s.stateParams=n,s.pmsSettings=o,s.employeeTalentGoalsService=r,s.appContext=a,s.employeeId=s.stateParams.id||s.appContext.myPublicProfile.id,s}return __extends(t,e),Object.defineProperty(t.prototype,"currentState",{get:function(){return this.state.current.name},enumerable:!0,configurable:!0}),t.$inject=["$scope","$state","$stateParams","PMSSettings","EmployeeTalentGoalsService","AppContext"],t}(e.StateChangeHandleController),i=function(){function t(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S){this._stateParams=e,this.notificationService=t,this._q=i,this._state=n,this.employeeTalentService=o,this.lookupService=r,this.appContext=a,this.appSettings=s,this.goalTypes=l,this.goalMetricTypes=c,this.goalTrackingStatuses=p,this.feedbackTypes=u,this.filter=d,this.reviewerTypes=m,this.pmsSettings=y,this.reviewStatus=h,this.reviewReleaseStatus=f,this.reviewStepType=g,this.modalService=v,this.employeeTalentGoalsService=S,this.submitted=!1,this.ReviewsRating=[],this.jobFunctions=[],this.employeeJobFunctions=[],this.employeeJobFunctionstemp=[],this.addNew=!0,this.maximumWeightage=0,this.activeGoals=[],this.reviewRatings=[],this.reviewRatingGroup={},this.reviewRatingAverage={},this.customColors=["#CEE5B0","#F3BC8E","#C598D0","#99D6D7","#79B4E5","#FF312E","#285796","#282D32","#CEE5B0","#F3BC8E"],this.niceScrollOptions=angular.copy(s.scrollSettings),this.employeeId=this._stateParams.id||this.appContext.myPublicProfile.id,this.getEmployeePerformanceDetails(),this.pmsSettings.goalSettings.isFeatureEnabled&&this.getEmployeeActiveGoals(),this.pmsSettings.reviewSettings.isFeatureEnabled&&this.getReviewDetails(),this.pmsSettings.feedbackSettings.isFeatureEnabled&&this.getFeedback()}return t.prototype.getEmployeePerformanceDetails=function(){var t=this;this.employeeTalentService.getEmployeeTalentDetails(this.employeeId).then(function(i){t.employeeProfile=i.employeeProfile,t.employeeJobFunctions=i.employeeJobFunctions,t.jobFunctions=i.jobFunctions,t.employeeJobFunctionstemp=angular.copy(t.employeeJobFunctions),t.setJobfunctions(),t.model=new e.Model.PMSEmployeePerformanceDetails(t.employeeProfile?t.employeeProfile:{employeeid:t.employeeId})})},t.prototype.getEmployeeActiveGoals=function(){var t=this;this.employeeTalentGoalsService.getEmployeeActiveGoals(this.employeeId).then(function(i){t.activeGoals=i.map(function(t){return new e.Model.GoalListItem(t)})})},t.prototype.getReviewDetails=function(){var t=this;this.employeeTalentService.getActiveReview(this.employeeId).then(function(i){t.currentReview=new e.Model.EmployeeReviewLookUpView(i),t.getEmployeeReviewRatings()})},t.prototype.getEmployeeReviewRatings=function(){var e=this;this.employeeTalentService.getReviewRatings(this.employeeId).then(function(t){e.reviewRatings=t,e.currentReview&&e.filterReviewRatings()})},t.prototype.getFeedback=function(){var t=this;this.employeeTalentService.getEmployeeActiveFeedback(this.employeeId).then(function(i){t.feedbackItems=i.map(function(t){return new e.Model.Feedback(t)})})},t.prototype.setJobfunctions=function(){var e=this;this.employeeJobFunctions.forEach(function(t){var i=e.jobFunctions.find(function(e){return e.id==t.jobFunctionId});t.name=i.name}),this.employeeJobFunctionstemp=angular.copy(this.employeeJobFunctions)},t.prototype.getKeyResultProgressTooltip=function(e){var t=e.actualValue||e.startValue||0;return e.metricType!=this.goalMetricTypes.Checkbox.id?"Progress: "+parseFloat(t.toFixed(2))+"/"+e.targetValue+" "+this.goalMetricTypes.getById(e.metricType).symbol:e.actualValue==e.targetValue?"Complete":"In Progress"},t.prototype.getLastUpdated=function(e){return this.filter("orderBy")(e.log,"loggedOn",!0)[0]},t.prototype.buildDonutChartOptions=function(){return this.donutChartOptions={},this.donutChartOptions={chart:angular.copy(this.appSettings.donutChartOptions),title:{enable:!0,text:"",html:"<h4 class='text-light-bold'>"+this.filter("number")(this.currentReview.overallRating,1)+"</h4>",class:"chart-title",css:{textAlign:"center",top:"40px",left:"10px","font-size":"12px",position:"absolute",width:"90px"}}},this.donutChartOptions.chart.height=120,this.donutChartOptions.chart.width=110,this.donutChartOptions.chart.pie.donutRatio=.6,this.donutChartOptions.chart.showLegend=!1,this.donutChartOptions.chart.growOnHover=!1,this.donutChartOptions.chart.valueFormat=function(e){return e},this.donutChartOptions},t.prototype.bindChartData=function(){this.ReviewsRating.push({key:"Rating",y:this.currentReview.overallRating,color:"#86C06A"},{y:5-this.currentReview.overallRating,color:"#E3E5E8"})},t.prototype.filterReviewRatings=function(){var e=this;this.reviewRatingGroup=this.filter("groupBy")(this.reviewRatings,"reviewerType"),Object.keys(this.reviewRatingGroup).forEach(function(t){var i=0;e.reviewRatingGroup[t].forEach(function(e){i+=e.overallRating}),i/=e.reviewRatingGroup[t].length,e.reviewRatingAverage[t]=i}),this.buildDonutChartOptions(),this.bindChartData()},t.$inject=["$stateParams","NotificationService","$q","$state","EmployeeTalentService","PMSLookupService","AppContext","AppSettings","GoalType","GoalMetricType","GoalTrackingStatus","FeedBackTypes","$filter","ReviewerType","PMSSettings","ReviewStatus","ReviewReleaseStatus","ReviewStepType","$uibModal","EmployeeTalentGoalsService"],t}(),n=function(){function t(t,i,n,o){var r=this;this._stateParams=t,this.pmsSettings=i,this.employeeTalentService=n,this.employeeTalentGoalsService=o,this.goals=[];var a=this._stateParams.id;this.employeeTalentGoalsService.getEmployeeGoals(a).then(function(t){r.goals=t.map(function(t){return new e.Model.GoalListItem(t)})}),this.employeeTalentService.getEmployeeProfile(a).then(function(e){r.employee=e})}return t.$inject=["$stateParams","PMSSettings","EmployeeTalentService","EmployeeTalentGoalsService"],t}(),o=function(){function t(t,i,n,o,r,a,s,l,c,p,u){var d=this;this.stateParams=t,this.notificationService=i,this.qService=n,this.stateService=o,this.employeeTalentService=r,this.appContext=a,this.appSettings=s,this._filter=l,this._months=c,this.reviewStatus=p,this.reviewReleaseStatus=u,this.reviewsList=[],this.monthId=-1,this.initGridSettings=function(){d.gridSettings=angular.copy(d.appSettings.gridSettings),d.gridSettings.columnDefs=[{name:"reviewCycleName",displayName:"Review Cycle"},{field:"reviewInitiatedDate",displayName:"Review Initiated Date",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col) | date: "MMM dd, yyyy"}}</span><span data-ng-if="!grid.getCellValue(row,col)">Not Available</span></div>'},{field:"cycleStartDate",displayName:"Cycle Start Date",cellFilter:'date: "MMM dd, yyyy"'},{field:"status",displayName:"Status",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.ctrl.reviewStatus.getById(row.entity.status).name}}</span></div>'},{field:"startedByEmployee",displayName:"Review Initiated By",cellTemplate:'<div class = "ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row,col)" title="{{row.entity.startedByEmployee}}"><a data-ui-sref="employee({id: row.entity.startedBy})">{{row.entity.startedByEmployee}}</a></span><span data-ng-if="!grid.getCellValue(row,col)">Not Available</span></div></div>'},{field:"completedOn",displayName:"Review Completed On",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="(row.entity.reviewReleaseStatus == grid.appScope.ctrl.reviewReleaseStatus.Released.id || row.entity.reviewReleaseStatus == grid.appScope.ctrl.reviewReleaseStatus.Hidden.id)">{{grid.getCellValue(row,col) | date: "MMM dd, yyyy"}}</span><span data-ng-if="(row.entity.reviewReleaseStatus != grid.appScope.ctrl.reviewReleaseStatus.Released.id && row.entity.reviewReleaseStatus != grid.appScope.ctrl.reviewReleaseStatus.Hidden.id)">Not Available</span></div>'},{field:"cancelledOn",displayName:"Review Cancelled On",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="(row.entity.status == grid.appScope.ctrl.reviewStatus.Cancelled.id && grid.getCellValue(row,col))">{{grid.getCellValue(row,col) | date: "MMM dd, yyyy"}}</span><span data-ng-if="(!grid.getCellValue(row,col) || row.entity.status != grid.appScope.ctrl.reviewStatus.Cancelled.id)">Not Available</span></div>'},{field:"overallRating",displayName:"Overall Rating",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{(row.entity.overallRating != null && row.entity.overallRating > 0) ? row.entity.overallRating : "Not Available"}}</span></div>'}],d.gridSettings.data="ctrl.reviewsList | filter: ctrl.filterText",d.gridSettings.onRegisterApi=d.setGridApi},this.setGridApi=function(e){d.gridApi=e},this.initGridSettings(),this.isSelf=!this.stateParams.id,this.presentState=this.stateService.current.name,this.employeeId=this.stateParams.id||this.appContext.myPublicProfile.id,this.employeeTalentService.getEmployeeReviews(this.employeeId).then(function(t){d.reviewsList=t.map(function(t){return new e.Model.EmployeeReviewListView(t)})})}return t.$inject=["$stateParams","NotificationService","$q","$state","EmployeeTalentService","AppContext","AppSettings","$filter","Months","ReviewStatus","ReviewReleaseStatus"],t}(),r=function(){function t(t,i,n,o,r,a,s){var l=this;this.scope=t,this.stateParams=i,this.stateService=n,this.employeeTalentService=o,this.notificationService=r,this.modalService=a,this.feedbackTypes=s,this.feedbacks=[],this.getAllFeedbacks=function(){l.employeeTalentService.getEmployeeFeedbacks(l.id).then(function(t){t&&t.length>0&&(l.feedbacks=t.map(function(t){return new e.Model.Feedback(t)}))},function(e){l.notificationService.error("Error while getting feedbacks")})},this.id=this.stateParams.id,this.isSelf=!this.stateParams.id,this.presentState=this.stateService.current.name,this.getAllFeedbacks()}return t.prototype.giveFeedback=function(t){var i=this;this.modalService.open({templateUrl:"submitFeedbackTemplate",windowClass:"full-screen-modal dark-modal submit-feedback-container",controller:"FeedbackSubmitController",controllerAs:"ctrl",resolve:{FeedbackModel:new e.Model.Feedback({feedbackType:t?e.Model.FeedbackTypes.Private:e.Model.FeedbackTypes.Appreciate}),FeedbackService:function(){return i.employeeTalentService}}}).result.then(function(t){i.id&&t.toEmployees.find(function(e){return e.id==i.id})&&i.feedbacks.push(new e.Model.Feedback(t))})},t.$inject=["$scope","$stateParams","$state","EmployeeTalentService","NotificationService","$uibModal","FeedBackTypes"],t}(),a=function(){function t(t,i,n,o,r,a,s,l,c,p,u){var d=this;this._scope=t,this.stateParams=i,this._modal=n,this.notificationService=o,this.qService=r,this._filter=a,this.stateService=s,this.employeeTalentService=l,this.appContext=c,this.appSettings=p,this.competencyType=u,this.competencyList=[],this.coreValueList=[],this.skillBehaviours=[],this.setCompetencies=function(){d.competencyList.forEach(function(t){t.competencyType!=e.Model.CompetencyType.None&&(t.competencyTypeName=d.competencyType.getById(t.competencyType).name)})},this.initCompetencyOptions=function(){d.competencyGridOptions=angular.copy(d.appSettings.gridSettings),d.competencyGridOptions.columnDefs=[{field:"name",displayName:"Competency Name",cellTemplate:'<div class ="ui-grid-cell-contents" title = "{{row.entity.name}}">{{row.entity.name}}</div>',cellToolTip:!0},{field:"description",displayName:"Description",cellTemplate:'<div class ="ui-grid-cell-contents" title = "{{row.entity.description}}">{{row.entity.description}}</div>',cellToolTip:!0},{field:"weightage",displayName:"Weightage",cellTemplate:"<div class=\"ui-grid-cell-contents\">\n                                    <span>{{row.entity.weightage+'%'}}</span>\n                                   </div>"},{field:"behaviourCount",displayName:"Behaviours",cellTemplate:'<div class="ui-grid-cell-contents"><a data-ng-click="grid.appScope.ctrl.showCompetencyBehaviours(row.entity)">{{row.entity.behaviourCount}}</a>'},{field:"competencyTypeName",displayName:"Competency Type",cellTemplate:'<div class ="ui-grid-cell-contents" title = "{{row.entity.competencyTypeName}}">{{row.entity.competencyTypeName}}</div>',cellToolTip:!0}],d.competencyGridOptions.data=d.competencyList,d.competencyGridOptions.onRegisterApi=d.setGridApi},this.setGridApi=function(e){d.gridApi=e},this.isSelf=!this.stateParams.id,this.presentState=this.stateService.current.name,this.employeeId=this.stateParams.id||this.appContext.myPublicProfile.id,this.employeeTalentService.getAllCompetenciesList(this.employeeId).then(function(e){d.competencyList=e,d.setCompetencies(),d.initBehaviourGridOptions(),d.initCompetencyOptions(),d.filterCompetencies()}),this.employeeTalentService.getCoreValuesList(this.employeeId).then(function(t){d.coreValueList=t.map(function(t){return new e.Model.CoreValueView(t)}),d.initCoreValueOptions(),d.filterCoreValues()})}return t.prototype.initCoreValueOptions=function(){this.coreValueGridOptions=angular.copy(this.appSettings.gridSettings),this.coreValueGridOptions.columnDefs=[{field:"name",displayName:"Core Value Name",cellTooltip:!0},{field:"description",displayName:"Description",cellTemplate:'<div class ="ui-grid-cell-contents" title = "{{row.entity.description}}">{{row.entity.description}}</div>',cellToolTip:!0},{field:"behaviourCount",displayName:"Behaviours",cellTemplate:'<div class="ui-grid-cell-contents"><a data-ng-click="grid.appScope.ctrl.showCoreValueBehaviours(row.entity)">{{row.entity.behaviourCount}}</a>'}],this.coreValueGridOptions.data=this.coreValueList,this.coreValueGridOptions.onRegisterApi=this.setGridApi},t.prototype.initBehaviourGridOptions=function(){this.behaviourGridOptions=angular.copy(this.appSettings.gridSettings),this.behaviourGridOptions.columnDefs=[{field:"title",displayName:"Title",cellTooltip:!0},{field:"useInRatings",displayName:"Use in ratings?",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.useInRatings ? "Yes" : "No"}}</div>'}],this.behaviourGridOptions.data='ctrl.skillBehaviours | orderBy: "title"'},t.prototype.showCompetencyBehaviours=function(e){var t=this;e.behaviourCount?(this.skillToShow=angular.copy(e),this.employeeTalentService.getCompetencyBehaviours(e.id,this.employeeId).then(function(e){t.skillBehaviours=e,t._modal.open({templateUrl:"assigned-behaviours-template",scope:t._scope})})):this.notificationService.information("There are no behaviours assigned to this competency")},t.prototype.showCoreValueBehaviours=function(e){var t=this;e.behaviourCount?(this.skillToShow=e,this.employeeTalentService.getCoreValueBehaviours(this.employeeId,e.id).then(function(e){t.skillBehaviours=e,t._modal.open({templateUrl:"assigned-behaviours-template",scope:t._scope})})):this.notificationService.information("There are no behaviours assigned to this corevalue")},t.prototype.filterCompetencies=function(){this.competencyGridOptions.data=this._filter("filter")(this.competencyList,this.competencyFilterText,!1)},t.prototype.filterCoreValues=function(){this.coreValueGridOptions.data=this._filter("filter")(this.coreValueList,this.coreValueFilterText,!1)},t.$inject=["$scope","$stateParams","$uibModal","NotificationService","$q","$filter","$state","EmployeeTalentService","AppContext","AppSettings","CompetencyType"],t}(),angular.module("PMS").component("employeeTalentProfile",{templateUrl:"employeetalent/index",controller:t,controllerAs:"ctrl"}).component("employeeTalentSummary",{templateUrl:"employeetalent/summary",controller:i,controllerAs:"ctrl"}).component("employeeTalentGoals",{templateUrl:"employeetalent/goals",controller:n,controllerAs:"ctrl"}).component("employeeReviews",{templateUrl:"employeetalent/reviews",controller:o,controllerAs:"ctrl"}).component("employeeFeedback",{templateUrl:"employeetalent/feedback",controller:r,controllerAs:"ctrl",bindings:{isReadOnly:"<"}}).component("employeeSkills",{templateUrl:"employeetalent/skills",controller:a,controllerAs:"ctrl"})}(PMS||(PMS={})),function(e){!function(e){var t=function(){function e(e){var t=this;this.resource=e,this.talentProfileService=this.resource("/api/employee/:id/talent/:action/:reviewGroupId",{id:"@id",action:"@action",reviewGroupId:"@reviewGroupId"},{update:{method:"PUT"}}),this.employeeReviewService=this.resource("/api/employee/:id/reviews/:action",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.employeeFeedbackService=this.resource("/api/employee/:id/feedback/:action",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.employeeSkillService=this.resource("/api/employee/:id/skills/:action/:skillId",{id:"@id",action:"@action",skillId:"@skillId"},{update:{method:"PUT"}}),this.employeeCompetencyService=this.resource("/api/employee/:id/skills/:action/:competencyId",{id:"@id",action:"@action",skillId:"@competencyId"},{update:{method:"PUT"}}),this.employeeCoreValueService=this.resource("/api/employee/:id/skills/:action/:coreValueId",{id:"@id",action:"@action",skillId:"@coreValueId"},{update:{method:"PUT"}}),this.feedbackService=this.resource("/api/feedback/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.getEmployeeProfile=function(e){return t.talentProfileService.get({action:"profile",id:e}).$promise},this.getEmployeeTalentDetails=function(e){return t.talentProfileService.get({action:"details",id:e}).$promise},this.getEmployeeReviews=function(e){return t.employeeReviewService.query({action:"all",id:e}).$promise},this.getActiveReview=function(e){return t.employeeReviewService.get({action:"active",id:e}).$promise},this.getReviewRatings=function(e){return t.employeeReviewService.query({action:"ratings",id:e}).$promise},this.getEmployeeFeedbacks=function(e){return t.employeeFeedbackService.query({action:"all",id:e}).$promise},this.getEmployeeActiveFeedback=function(e){return t.employeeFeedbackService.query({action:"active",id:e}).$promise},this.getAllCompetenciesList=function(e){return t.employeeSkillService.query({action:"competencies",id:e}).$promise},this.getCoreValuesList=function(e){return t.employeeSkillService.query({action:"corevalues",id:e}).$promise},this.saveFeedbackSetting=function(e){return t.feedbackService.save({action:"savebadge"},e).$promise},this.saveFeedback=function(e){return t.feedbackService.save({action:"save"},e).$promise}}return e.prototype.getCompetencyBehaviours=function(e,t){return this.employeeCompetencyService.query({action:"competency/behaviour",id:t,competencyId:e}).$promise},e.prototype.getCoreValueBehaviours=function(e,t){return this.employeeCoreValueService.query({action:"corevalues/behaviour",id:e,coreValueId:t}).$promise},e.prototype.getCoreValuesAndCompetencies=function(){return this.feedbackService.get({action:"corevaluesandcompetencies"}).$promise},e.$inject=["$resource"],e}();e.EmployeeTalentService=t;var i=function(){function e(e,t){var i=this;this.resource=e,this._stateParams=t,this.employeeGoalService=this.resource("/api/employee/:id/goals/:action/:goalId",{id:"@id",action:"@action",goalId:"@goalId"},{update:{method:"PUT"}}),this.getEmployeeGoals=function(e){return i.employeeGoalService.query({action:"all",id:e}).$promise},this.getEmployeeActiveGoals=function(e){return i.employeeGoalService.query({action:"active",id:e}).$promise},this.getGoal=function(e){return i.employeeGoalService.get({action:"goal",id:i.employeeId,goalId:e}).$promise},this.getKeyResults=function(e){return i.employeeGoalService.query({action:"keyresults",id:i.employeeId,goalId:e}).$promise},this.saveGoal=function(e){return i.employeeGoalService.save({action:"goal",id:i.employeeId},e).$promise},this.updateGoal=function(e,t){return i.employeeGoalService.update({action:"goal",id:i.employeeId,goalId:e},t).$promise},this.getDepartments=function(){return i.employeeGoalService.query({action:"departments",id:i.employeeId}).$promise},this.getBusinessUnits=function(){return i.employeeGoalService.query({action:"businessunits",id:i.employeeId}).$promise},this.getGroupsAssignedToGoal=function(e){return i.employeeGoalService.query({action:"groupsassignedto",goalId:e,id:i.employeeId}).$promise},this.checkInGoal=function(e,t){return i.employeeGoalService.update({action:"goalcheckin",goalId:e,id:i.employeeId},t).$promise},this.markGoalAsComplete=function(e){return i.employeeGoalService.update({action:"markcomplete",goalId:e,id:i.employeeId}).$promise},this.markGoalAsIncomplete=function(e){return i.employeeGoalService.update({action:"markincomplete",goalId:e,id:i.employeeId}).$promise},this.deleteGoal=function(e){return i.employeeGoalService.update({action:"deletegoal",goalId:e,id:i.employeeId}).$promise},this.getGoalCategories=function(){return i.employeeGoalService.query({action:"categories",id:i.employeeId}).$promise},this.getAllCompetencies=function(){return i.employeeGoalService.query({action:"competency/all",id:i.employeeId}).$promise},this.getGoalsToAssign=function(){return i.employeeGoalService.query({action:"goalstoassign",id:i.employeeId}).$promise},this.employeeId=this._stateParams.id}return e.$inject=["$resource","$stateParams"],e}();e.EmployeeTalentGoalsService=i}(e.Services||(e.Services={}))}(PMS||(PMS={})),angular.module("PMS").service("EmployeeTalentService",PMS.Services.EmployeeTalentService).service("EmployeeTalentGoalsService",PMS.Services.EmployeeTalentGoalsService),function(e){!function(t){var i=function(){function t(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S,C,w,b,P,T,D){var I=this;this._scope=e,this._$rootScope=t,this._filter=i,this._appContext=n,this.appSettings=o,this._employeeProfileService=r,this.customFieldService=a,this.lookupServices=s,this._modal=l,this._stateParams=c,this._notificationService=p,this._myProfileService=u,this.authenticationMode=d,this.customUsernameType=m,this._employeeServices=y,this.orgSettingServices=h,this.q=f,this.AppSettings=g,this.fieldVisibility=v,this.fieldPermissionRoles=S,this.fieldApproval=C,this.fieldTypes=w,this.relationTypes=b,this.bloodGroup=P,this.gender=T,this.utilService=D,this.experienceDetails=[],this.educationDetails=[],this.familyDetails=[],this.submitted=!1,this.isSameAddress=!1,this.toggleForm=!1,this.currentDate=new Date,this.emailSubmitted=!1,this.mobileSubmitted=!1,this.isProfileComplete=!0,this.getCountryName=function(e){return e?I.countries.find(function(t){return t.code==e}).name:""};this.isAdmin=null!=this._stateParams.id,this.modelOptions=angular.copy(o.modelBlurSettings),this.fromDatePickerOptions={showWeeks:!1},this.toDatePickerOptions={showWeeks:!1,maxDate:this.currentDate},this._stateParams.id?this.q.all([this._employeeServices.getEmployee(this._stateParams.id),this.customFieldService.getView(1,"employeeprofile","employeeprofile"),this.lookupServices.lookup.query({id:"countries"}),this.orgSettingServices.getAuthenticationMode(),,this._employeeProfileService.getEducationDetails(this._stateParams.id),this._employeeProfileService.getExperienceDetails(this._stateParams.id)]).then(function(e){I.intializeComponentModels(e[0]),I.authunticationDetails=e[3],I.customProprties=e[0].customProperties,I.customFieldConfig=e[1],I.customFieldConfigCopy=angular.copy(I.customFieldConfig),I.setCustomFieldConfig(e[0].personalDetails),I.countries=e[2],I.educationDetails=e[4],I.experienceDetails=e[5],I.educationDetails.forEach(function(e){e.yearOfJoining&&e.yearOfCompletion&&(e.yearOfJoining=new Date(e.yearOfJoining),e.yearOfCompletion=new Date(e.yearOfCompletion))}),I.experienceDetails.forEach(function(e){e.dateOfJoining&&e.dateOfRelieving&&(e.dateOfJoining=new Date(e.dateOfJoining),e.dateOfRelieving=new Date(e.dateOfRelieving))})}):this.q.all([this._myProfileService.getMyProfile(),this.customFieldService.getView(1,"employeeprofile","employeeprofile"),this.lookupServices.lookup.query({id:"countries"}),this._myProfileService.getAuthenticationMode(),this._myProfileService.getEducationDetails(),this._myProfileService.getExperienceDetails()]).then(function(e){I.intializeComponentModels(e[0]),I.authunticationDetails=e[3],I.customProprties=e[0].customProperties,I.customFieldConfig=e[1],I.customFieldConfigCopy=angular.copy(I.customFieldConfig),I.setCustomFieldConfig(e[0].personalDetails),I.countries=e[2],I.educationDetails=e[4],I.experienceDetails=e[5],I.educationDetails.forEach(function(e){e.yearOfJoining&&e.yearOfCompletion&&(e.yearOfJoining=new Date(e.yearOfJoining),e.yearOfCompletion=new Date(e.yearOfCompletion))}),I.experienceDetails.forEach(function(e){e.dateOfJoining&&e.dateOfRelieving&&(e.dateOfJoining=new Date(e.dateOfJoining),e.dateOfRelieving=new Date(e.dateOfRelieving))})})}return t.prototype.intializeComponentModels=function(t){var i=this;this.familyDetails=[],t.personalDetails&&(t.personalDetails.marriageDate=null==t.personalDetails.marriageDate?null:t.personalDetails.marriageDate.stringToDate(),t.personalDetails.dateOfBirth=null==t.personalDetails.dateOfBirth?null:t.personalDetails.dateOfBirth.stringToDate()),this.model=angular.copy(t.personalDetails),this.primaryDetails=new e.Model.PrimaryDetails(this.model.firstName,this.model.lastName,this.model.middleName,this.model.displayName,this.model.gender,this.model.dateOfBirth,this.model.maritalStatus,this.model.bloodGroup,this.model.marriageDate),this.contactDetails=new e.Model.ContactDetails(this.model.email,this.model.personalEmail,this.model.mobilePhone,this.model.workPhone,this.model.homePhone,this.model.skypeId),this.addressDetails=new e.Model.AddressDetails(new e.Model.Address(this.model.currentAddress.addressLine1,this.model.currentAddress.addressLine2,this.model.currentAddress.city,this.model.currentAddress.countryCode,this.model.currentAddress.state,this.model.currentAddress.zip),new e.Model.Address(this.model.permanentAddress.addressLine1,this.model.permanentAddress.addressLine2,this.model.permanentAddress.city,this.model.permanentAddress.countryCode,this.model.permanentAddress.state,this.model.permanentAddress.zip)),this.socialAccounts=new e.Model.SocialAccounts(this.model.skypeId,this.model.linkedIn,this.model.facebook,this.model.twitter,this.model.blog,this.model.googlePlus),this.primaryDetails.checkIfCompleted(),this.contactDetails.checkIfCompleted(),angular.forEach(t.personalDetails.relations,function(t){i.familyDetails.push(new e.Model.RelationDetails(t))}),this.professionalDetails=new e.Model.ProfessionalDetails({professionalSummary:t.professionalDetails.professionalSummary,status:null})},t.prototype.setCustomFieldConfig=function(e){var t=this;this.isProfileComplete=!0,e.gender=e.gender||null,e.bloodGroup=e.bloodGroup||null,this.keysToLowerCase(e);var i=angular.copy(this.professionalDetails);this.keysToLowerCase(i),this.customFieldConfig.sections.forEach(function(n){n.fieldGroups.forEach(function(n){var o=!0;n.isHidden=!0,n.fields.forEach(function(r){"MaritalStatus"==r.identifier?(r.value=e[r.identifier.toLowerCase()]?e[r.identifier.toLowerCase()].toString():"0",t.marritalStatus=r.value):"ISPhysicallyHandicapped"==r.identifier?r.value=e[r.identifier.toLowerCase()]?1:0:"MyRelations"==r.identifier&&"relationinfogroup"==n.identifier?(r.value=e.relations,r.value.forEach(function(e){e.gender=0==e.gender?null:e.gender})):r.value=r.isSystemDefined?e[r.identifier.toLowerCase()]||i[r.identifier.toLowerCase()]:t.customProprties[r.identifier]?t.customProprties[r.identifier]:null,r.isSystemDefined||r.fieldType!=t.fieldTypes.Date.template||(r.value=r.value?new Date(r.value):null),r.formElementHint==t.fieldTypes.Dropdown.title&&(r.value=null!=r.value&&"BloodGroup"!=r.identifier?r.value.toString():r.value),"MobilePhone"==r.identifier&&t.authunticationDetails.authenticationMode!=t.authenticationMode.EmailOnly.id&&t.authunticationDetails.customUsernameType==t.customUsernameType.MobileNumber.id&&(r.readOnly=!0);var a=t.isAdmin?t.fieldPermissionRoles.ReportingManagerAndUp.id:t.fieldPermissionRoles.Self.id,s=r.fieldPermissions.find(function(e){return e.role==a});r.readOnly=!(!r.readOnly&&s.visibility!=t.fieldVisibility.Read.id),r.hidden=s.visibility==t.fieldVisibility.Hidden.id,n.isHidden=n.isHidden&&r.hidden,o&&(o=t.isFieldComplete(n,r))}),n.isComplete=o,o||(t.isProfileComplete=o)})})},t.prototype.onFieldValueChange=function(e){"MaritalStatus"==e.identifier&&(this.marritalStatus=e.value)},t.prototype.changeEmail=function(e){this.newEmail=this.confirmEmail=null,this.workEmail=e.value,this.emailSubmitted=!1,this.emailModalInstance=this._modal.open({templateUrl:"changeemail-template",scope:this._scope})},t.prototype.isEmailValid=function(e){return this.newEmail===e},t.prototype.close=function(){this.emailModalInstance.close()},t.prototype.updateWorkEmail=function(){var e=this;this.changeEmailForm.$valid&&(this.newEmail=this.newEmail.toLowerCase(),this.updateEmail(this.newEmail).then(function(t){var i=e.activeGroup.fields.find(function(e){return"Email"==e.name}),n=e.activeGroup.fields.indexOf(i);i.value=e.newEmail,e._scope.employeeEmailOnProfile=e.newEmail,e.activeGroup.fields[n]=angular.copy(i);var o=e.customFieldConfig.sections.find(function(t){return t.identifier==e.sectionId}).fieldGroups.find(function(t){return t.identifier==e.groupId}),r=o.fields.find(function(e){return"Email"==e.name}),a=o.fields.indexOf(r);r.value=e.newEmail,e.customFieldConfig.sections.find(function(t){return t.identifier==e.sectionId}).fieldGroups.find(function(t){return t.identifier==e.groupId}).fields[a]=r,e._scope.$emit("workemailupdated",{id:e._stateParams.id,primarydetails:e.model}),e.close()}))},t.prototype.isFieldComplete=function(e,t){return"experienceinfogroup"==e.identifier||"educationinfogroup"==e.identifier||(e.canAddMultipleGroups&&"addressinfogroup"!=e.identifier?!t.required||t.value.length>0:e.canAddMultipleGroups&&"addressinfogroup"==e.identifier?!t.required||null!=t.value.addressLine1:"MaritalStatus"==t.identifier?!t.required||null!=t.value:"MarriageDate"==t.identifier?!t.required||2!=this.marritalStatus||null!=t.value:!t.required||!!t.value)},t.prototype.loadEmployeeProfile=function(){var e=this;(this._stateParams.id?this._employeeServices.getEmployee(this._stateParams.id):this._myProfileService.getMyProfile()).then(function(t){e.intializeComponentModels(t),e.customProprties=t.customProperties,e.setCustomFieldConfig(t.personalDetails),e.activeGroup.isSystemDefined&&e.updateEmployeeSummary()})},t.prototype.keysToLowerCase=function(e){var t=angular.copy(e);return Object.keys(t).forEach(function(t){var i=t.toLowerCase();i!==t&&(e[i]=e[t],delete e[t])}),t},t.prototype.setAddress=function(){this.isSameAddress&&(this.activeGroup.fields[1].value=angular.copy(this.activeGroup.fields[0].value))},t.prototype.getFieldValue=function(e){if(e.value||0==e.value){if(e.formElementHint==this.fieldTypes.Checkbox.template){var t=[];return e.value="string"==typeof e.value?JSON.parse(e.value):e.value,e.value&&e.value.forEach(function(i){var n=e.fieldChoices.find(function(e){return e.identifier==i});null!=n&&t.push(n.value)}),t.join(", ")}var i="BloodGroup"!=e.identifier?e.fieldChoices.find(function(t){return t.identifier==e.value}):this.bloodGroup.getById(e.value);return i?"BloodGroup"!=e.identifier?i.value:i.name:""}},t.prototype.isApprovalNeeded=function(e){var t=this.isAdmin?this.fieldPermissionRoles.ReportingManagerAndUp:this.fieldPermissionRoles.Self;return e.fieldPermissions.find(function(e){return e.role==t.id}).approval!=this.fieldApproval.NotNeeded.id},t.prototype.doesEmailExist=function(e){var t=this.q.defer();return this._employeeServices.employee.get({id:0,action:"doesemailexist",email:e.email},function(e){e.result?t.resolve(!1):t.resolve(!0)}),t.promise},t.prototype.updateEmail=function(e){var t=this.q.defer();return this._employeeServices.employee.update({id:this._stateParams.id,action:"updateemail"},{newemail:e},function(e){t.resolve(!0)},function(e){t.resolve(!1)}),t.promise},t.prototype.editCustomFieldGroup=function(e,t,i){var n=this;this.submitted=!1,this.sectionId=e,this.groupId=t,this.activeGroup=angular.copy(i),this.activeGroupCopy=angular.copy(i),this.toggleForm=!1,this.submitted=!1,this.modalInstance=this._modal.open({scope:this._scope,templateUrl:"edit-field-group-modal",backdrop:"static",windowClass:"employee-profile-modal",keyboard:!1}),this.modalInstance.result.then(function(e){n.loadEmployeeProfile()})},t.prototype.updateEmployeeSummary=function(){switch(this.activeGroup.identifier){case"primaryinfoGroup":this._scope.$emit("primaryDetailsUpdated",{id:this._stateParams.id,primaryDetails:this.primaryDetails}),this._$rootScope.$broadcast("displayNameUpdated",{id:this._stateParams.id,userProfile:this.model});break;case"contactinfoGroup":this._scope.$emit("contactInfoUpdated",{id:this._stateParams.id,contactInfo:this.contactDetails});break;case"addressinfogroup":this._scope.$emit("addressDetailsUpdated",{id:this._stateParams.id,addressDetails:this.addressDetails});break;case"relationinfogroup":this._scope.$emit("relationsUpdated",{id:this._stateParams.id,relations:this.familyDetails});break;case"experienceinfogroup":this._scope.$emit("professionalInfoUpdated",{id:this._stateParams.id,professionalInfo:this.experienceDetails});break;case"educationinfogroup":this._scope.$emit("educationDetailsUpdated",{id:this._stateParams.id,educationDetails:this.educationDetails});break;case"professionalsummaryinfogroup":this._scope.$emit("professionalSummaryUpdated",{id:this._stateParams.id,professionalSummary:this.professionalDetails.professionalSummary})}},t.prototype.getFieldRenderTemplate=function(e){return"MobilePhone"==e.identifier?"MobileNumber-preview":"WorkPhone"==e.identifier||"HomePhone"==e.identifier?"PhoneNumber-preview":e.formElementHint?e.formElementHint+"-preview":void 0},t.prototype.setCustomProprties=function(){var e=this,t=this;this.activeGroup.fields.forEach(function(i){"MyRelations"==i.identifier&&"relationinfogroup"==e.activeGroup.identifier&&i.value.forEach(function(e){e.gender=null==e.gender?0:e.gender}),"MarriageDate"==i.identifier&&(i.value=1==e.marritalStatus?null:i.value),e.customProprties[i.identifier]=i.fieldType==t.fieldTypes.Date.template&&i.value?i.value.dateOnlyString():i.value})},t.prototype.isMobileValid=function(e){return this.newMobile===e},t.prototype.changeMobile=function(e){this.newMobile=this.confirmMobile=null,this.mobiePhone=e.value,this.mobileSubmitted=!1,this.mobileModalInstance=this._modal.open({templateUrl:"changemobile-template",scope:this._scope})},t.prototype.doesMobileExist=function(e){var t=this.q.defer();return this._myProfileService.doesMobileExist(e.mobile).then(function(e){e.result?t.resolve(!1):t.resolve(!0)}),t.promise},t.prototype.setSelectedGroupProprties=function(e){var t=this;e.fields.forEach(function(e){t.customProprties[e.identifier]=e.fieldType==t.fieldTypes.Date.template&&e.value?e.value.dateOnlyString():e.value})},t.prototype.updateMobile=function(){var e=this;this.isAdmin?this._stateParams.id:this._appContext.myPublicProfile.id;if(this.changeMobileForm.$valid){var t=this.activeGroupCopy.fields.find(function(e){return"MobilePhone"==e.identifier}),i=this.activeGroupCopy.fields.indexOf(t);t.value=this.newMobile,this._scope.employeeEmailOnProfile=this.newMobile,this.activeGroupCopy.fields[i]=angular.copy(t);var n=this.customFieldConfig.sections.find(function(t){return t.identifier==e.sectionId}).fieldGroups.find(function(t){return t.identifier==e.groupId});this.setSelectedGroupProprties(this.activeGroupCopy),this._myProfileService.saveCustomProperties(this.sectionId,this.groupId,this.customProprties).then(function(t){var i=n.fields.find(function(e){return"MobilePhone"==e.name}),o=n.fields.indexOf(i);i.value=t.mobilePhone,e.activeGroup.fields[o]=i,e.customFieldConfig.sections.find(function(t){return t.identifier==e.sectionId}).fieldGroups.find(function(t){return t.identifier==e.groupId}).fields[o]=i}),this.closeMobleModal()}},t.prototype.closeMobleModal=function(){this.mobileModalInstance.close()},t.prototype.saveCustomProperties=function(){var e=this;if(this.form.$valid){this.setCustomProprties();var t=this,i=this.isAdmin?this._stateParams.id:this._appContext.myPublicProfile.id,n=this.sectionId,o=this.groupId;(this.isAdmin?this._employeeServices.saveCustomProperties(i,n,o,this.customProprties):this._myProfileService.saveCustomProperties(n,o,this.customProprties)).then(function(i){t.modalInstance.close(),e._notificationService.success(e.activeGroup.title+" updated successfully")},function(t){e._notificationService.error("An error occurred while updating details.")})}},t.prototype.toggleAddForm=function(){this.toggleForm=!this.toggleForm,this.submitted=!1,this.selectedGroupField={}},t.prototype.editGroupField=function(e,t){this.toggleForm=!0,this.activeIndex=e,this.submitted=!1,this.selectedGroupField=angular.copy(t)},t.prototype.addGroupField=function(){this.form.$valid&&(this.selectedGroupField.id=this.utilService.getGuid(),this.activeGroup.fields[0].value.push(this.selectedGroupField),this.toggleAddForm())},t.prototype.updateGroupField=function(){this.form.$valid&&(this.activeGroup.fields[0].value[this.activeIndex]=this.selectedGroupField,this.toggleAddForm())},t.prototype.deleteFieldGroup=function(e){this.toggleForm=!1,this.activeGroup.fields[0].value.splice(e,1)},t.prototype.updateDateConfig=function(){this.fromDatePickerOptions={showWeeks:!1,maxDate:this.selectedGroupField.to},this.toDatePickerOptions={showWeeks:!1,maxDate:this.currentDate,minDate:this.selectedGroupField.from}},t.$inject=["$scope","$rootScope","$filter","AppContext","AppSettings","EmployeeProfileService","CustomFieldService","LookupServices","$uibModal","$stateParams","NotificationService","MyProfileServices","AuthenticationMode","CustomUsernameType","EmployeeServices","OrgSettingServices","$q","AppSettings","FieldVisibility","FieldPermissionRoles","FieldApproval","FieldTypes","RelationTypes","BloodGroup","Gender","Utils"],t}();var n=function(){function e(e,t,i,n,o,r){this._notificationService=e,this._employeeProfileService=t,this._stateParams=i,this._myProfileService=n,this._modal=o,this._scope=r,this.vm={};var a=this;a.vm.profileService=a._stateParams.id?a._employeeProfileService.employeeProfile:a._myProfileService.profile,a.vm.updateSocialAccounts=function(){a._notificationService.information("Updating Social accounts..."),a.vm.profileService.update({action:"socialAccounts",id:a._stateParams.id},a.vm.model,function(){a.model=a.vm.model,a.vm.modalInstance.close(),a._notificationService.success("Social accounts updated successfully!")})},a.vm.showEditModal=function(e){a.vm.model=angular.copy(a.model),a.vm.modalInstance=a._modal.open({templateUrl:e,backdrop:"static",windowClass:"employee-profile-modal",scope:a._scope,keyboard:!1})}}return e.$inject=["NotificationService","EmployeeProfileService","$stateParams","MyProfileServices","$uibModal","$scope"],e}();angular.module("xhr").directive("myProfile",function(){return{restrict:"E",templateUrl:"me/employeeprofile",controller:i,controllerAs:"ctrl"}}).directive("socialAccounts",function(){return{controller:n,controllerAs:"social",bindToController:{model:"=",showEditModal:"&",onUpdate:"&",isEditable:"="},templateUrl:"social-accounts"}})}(e.Components||(e.Components={}))}(EmployeeProfile||(EmployeeProfile={})),function(e){!function(e){var t;e.Components||(e.Components={}),t=function(){function e(e,t,i,n,o,r,a,s){var l=this;this._scope=e,this._filter=t,this._modal=i,this.appSettings=n,this.uiGridConstants=o,this.employeeDocumentService=r,this.fileDownloadService=a,this.documentSetStatus=s,this.pendingDocumentSets=[],this.init=function(){l.initializeGridSettings(),l.loadPendingApprovalDocuments()},this.loadPendingApprovalDocuments=function(){l.employeeDocumentService.getPendingApprovals().then(function(e){l.pendingDocumentSets=l._filter("orderBy")(e,"displayName",!1)})},this.initializeGridSettings=function(){l.gridOptions=angular.copy(l.appSettings.gridSettings),l.gridOptions.rowTemplate='<div data-ng-click="grid.appScope.expandTreeRow(row)" data-ng-repeat="col in colContainer.renderedColumns track by col.colDef.name" class="ui-grid-cell" ui-grid-cell></div>',l.gridOptions.columnDefs=[{field:"displayName",displayName:"Employee name",cellTemplate:'<div class="file-set ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell",groupingShowAggregationMenu:!1,sort:{direction:l.uiGridConstants.ASC,priority:0}},{field:"documentType",displayName:"Document Type",cellClass:"ui-grid-cell",groupingShowAggregationMenu:!1},{field:"files",displayName:"Files",cellTemplate:'<div class="file-set ui-grid-cell-contents"><div data-ng-repeat="file in grid.getCellValue(row,col)"><a data-ng-click="grid.appScope.downloadDocument(file.location, row.entity.displayName, row.entity.documentType);" class="file-name"><span class="icon-file-download2 ng-scope" title="Add attachment"></span>{{file.name}}</a></div></div>',cellClass:"ui-grid-cell",enableGrouping:!1},{field:"employeeId",displayName:"verify",cellTemplate:'<div class="file-set ui-grid-cell-contents" data-ng-if="!row.groupHeader"><div><a class="btn btn-sm-info" data-ng-click="grid.appScope.verifyDocuments(row.entity.id, false);">Verify</a></div></div>',cellClass:"ui-grid-cell",enableGrouping:!1}],l.gridOptions.data="ctrl.pendingDocumentSets",l.gridOptions.rowHeight=100,l.gridOptions.appScopeProvider=l,l.gridOptions.onRegisterApi=function(e){l.gridApi=e}},this.expandTreeRow=function(e){e.groupHeader&&l.gridApi.treeBase.toggleRowTreeState(e)},this.verifyDocuments=function(e,t){if(l.isVerifyAll=t,l.isVerifyAll)l.documentForVerification={documentSet:l.pendingDocumentSets[0],employeeDocuments:l.pendingDocumentSets};else{var i=l.pendingDocumentSets.find(function(t){return t.id==e});l.setFieldValues(i),l.documentForVerification={documentSet:i,documentType:{name:i.documentType,folderType:i.folderType,metaData:i.metaData,details:i.details},particulars:i.particulars[0]}}l.modalInstance=l._modal.open({template:'<document-verification template="verify-document-template" is-verify-all="ctrl.isVerifyAll" document-for-verification="ctrl.documentForVerification" modal-instance="ctrl.modalInstance"></document-verification>',windowClass:"fullscreen-modal",backdrop:!1,scope:l._scope}),l.modalInstance.result.then(function(e){l.loadPendingApprovalDocuments()})},this.downloadDocument=function(e,t,i){l.fileDownloadService.downloadFile(l._filter("privateStorageAccountUrl")(e),t.replace(/\./g,"_")+"-"+i)},this.setFieldValues=function(e){e.metaData.forEach(function(t){t.value=e.details.find(function(e){return e.id==t.name}).value})},this.init()}return e.$inject=["$scope","$filter","$uibModal","AppSettings","uiGridConstants","EmployeeDocumentService","FileDownloadService","DocumentSetStatus"],e}(),angular.module("employees").component("pendingApprovalDocumentsReport",{templateUrl:"reports/pendingapprovaldocuments",controller:t,controllerAs:"ctrl"})}(e.Reports||(e.Reports={}))}(Employees||(Employees={}));var EmployeeProfile,EmployeeJobProfile,Integration;__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){var t=function(){return function(e){this.educationDetails=[],this.experienceDetails=[],this.socialNetworks=[],this.relations=[],this.id=e.id,this.displayName=e.displayName,this.employeeNumber=e.employeeNumber,this.email=e.email,this.dateJoined=e.dateJoined,this.workPhone=e.workPhone,this.leavePlanId=e.leavePlanId,this.profileImageUrl=e.profileImageUrl,this.reportingTo=e.reportingTo,this.locationId=e.locationId,this.city=e.city,this.countryCode=e.countryCode,this.probationEndDate=e.probationEndDate,this.gender=e.gender,this.mobilePhone=e.mobilePhone,this.homePhone=e.homePhone,this.skypeId=e.skypeId,this.personalEmail=e.personalEmail,this.CurrentAddress=e.CurrentAddress,this.permanentAddress=e.permanentAddress,this.dateOfBirth=e.dateOfBirth,this.maritalStatus=e.maritalStatus,this.marriageDate=e.marriageDate,this.socialStatus=e.socialStatus,this.professionalSummary=e.professionalSummary,this.educationDetails=e.educationDetails,this.experienceDetails=e.experienceDetails,this.socialNetworks=e.socialNetworks,this.relations=e.relations,this.jobTitle=e.jobTitle,this.secondaryJobTitle=e.secondaryJobTitle,this.departmentName=e.departmentName,this.orgLocationName=e.orgLocationName,this.isReportingManager=e.isReportingManager,this.isClientManager=e.isClientManager,this.isTimesheetApprover=e.isTimesheetApprover,this.reportingManager=e.reportingManager,this.isOnboarded=e.isOnboarded,this.isProfileComplete=e.isProfileComplete}}();e.PublicProfile=t;var i=function(){return function(e,t,i,n,o,r){this.addressLine1=e,this.addressLine2=t,this.city=i,this.countryCode=n,this.state=o,this.zip=r}}();e.Address=i;var n=function(){function e(e,t,i,n,o,r,a,s,l,c){this.firstName=e,this.lastName=t,this.middleName=i,this.displayName=n,this.gender=o,this.dateOfBirth=r,this.maritalStatus=a,this.bloodGroup=s,this.marriageDate=l,this.isComplete=c}return e.prototype.checkIfCompleted=function(){this.isComplete=this.firstName&&""!=this.firstName.trim()&&this.lastName&&""!=this.lastName.trim()&&this.displayName&&""!=this.displayName.trim()},e.prototype.toJSON=function(){var e=angular.copy(this);return e.dateOfBirth=e.dateOfBirth?e.dateOfBirth.dateOnlyString():e.dateOfBirth,e.marriageDate=e.marriageDate?e.marriageDate.dateOnlyString():e.marriageDate,e},e}();e.PrimaryDetails=n;var o=function(){function e(e,t,i,n,o,r,a){this.workEmail=e,this.personalEmail=t,this.mobilePhone=i,this.workPhone=n,this.residencePhone=o,this.skypeId=r,this.isComplete=a}return e.prototype.checkIfCompleted=function(){this.isComplete=this.workEmail&&""!=this.workEmail.trim()&&this.mobilePhone&&""!=this.mobilePhone.trim()},e}();e.ContactDetails=o;var r=function(){return function(e,t){this.currentAddress=e,this.permanentAddress=t}}();e.AddressDetails=r;var a=function(){return function(e,t,i,n,o,r){this.skype=e,this.linkedIn=t,this.facebook=i,this.twitter=n,this.blog=o,this.googlePlus=r}}();e.SocialAccounts=a;var s=function(){return function(e){this.id=e.id,this.title=e.title,this.companyName=e.companyName,this.location=e.location,this.from=e.from,this.to=e.to,this.description=e.description}}();e.ExperienceDetails=s;var l=function(){return function(e){this.id=e.id,this.degree=e.degree,this.specialization=e.specialization,this.university=e.university,this.from=e.from,this.to=e.to,this.percentage=e.percentage}}();e.EducationDetails=l;var c=function(){return function(e){this.id=e.id,this.email=e.email,this.firstName=e.firstName,this.lastName=e.lastName,this.mobile=e.mobile,this.relationType=e.relationType,this.profession=e.profession,this.dateOfBirth=e.dateOfBirth,this.gender=e.gender}}();e.RelationDetails=c;var p=function(){return function(e){this.professionalSummary=e.professionalSummary,this.status=e.status}}();e.ProfessionalDetails=p;var u=function(){function e(e){this.gender=null,this.id=e.id,this.firstName=e.firstName,this.lastName=e.lastName,this.middleName=e.middleName,this.displayName=e.displayName,this.gender=e.gender,this.dateOfBirth=e.dateOfBirth,this.email=e.email,this.shiftPolicyId=e.shiftPolicyId,this.weeklyOffPolicyId=e.weeklyOffPolicyId,this.reportTo=e.reportTo,this.jobTitleId=e.jobTitleId,this.locationId=e.locationId,this.businessUnitId=e.businessUnitId,this.departmentId=e.departmentId,this.workerType=e.workerType,this.dateJoined=e.dateJoined,this.timeType=e.timeType,this.probationPeriod=e.probationPeriod,this.employeeNumber=e.employeeNumber,this.leavePlanId=e.leavePlanId,this.trackingPolicyId=e.trackingPolicyId,this.overtimePolicyId=e.overtimePolicyId,this.attendanceCaptureSchemeId=e.attendanceCaptureSchemeId,this.holidayListId=e.holidayListId,this.expensePolicyId=e.expensePolicyId,this.salaryDetails=e.salaryDetails||{},this.inviteEmployee=e.inviteEmployee||!1,this.numberSeriesId=e.numberSeriesId,this.mobilePhone=e.mobilePhone,this.noticePeriodId=e.noticePeriodId,this.isOnboardSkipped=e.isOnboardSkipped||!1,this.onboardFlowId=e.onboardFlowId}return e.prototype.updateDisplayName=function(){this.displayName=(this.firstName?this.firstName.trim()+" ":"")+(this.middleName?this.middleName.trim()+" ":"")+(this.lastName?this.lastName.trim():"")},e}();e.NewEmployee=u,function(e){e[e.None=0]="None",e[e.Single=1]="Single",e[e.Married=2]="Married"}(e.MaritalStatus||(e.MaritalStatus={}));var d=function(){return function(e,t){this.unit=e,this.duration=t}}();e.TimePeriod=d}(e.Model||(e.Model={}))}(EmployeeProfile||(EmployeeProfile={})),function(e){!function(e){var t=function(){return function(e){this.employeeId=e.employeeId,this.requestedBy=e.requestedBy,this.reason=e.reason,this.newValueId=e.newValueId,this.oldValueId=e.oldValueId,this.newValueName=e.newValueName,this.oldValueName=e.oldValueName,this.updatedOn="string"==typeof e.updatedOn?e.updatedOn.stringToDate():e.updatedOn,this.effectiveFrom="string"==typeof e.effectiveFrom?e.effectiveFrom.stringToDate():e.effectiveFrom}}();e.JobDetailChangeRequest=t;var i=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t}(t);e.OrgLocationChangeRequest=i;var n=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t}(t);e.CostCenterChangeRequest=n;var o=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t}(t);e.BusinessUnitChangeRequest=o;var r=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t}(t);e.DepartmentChangeRequest=r;var a=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t}(t);e.AttendanceNumberChangeRequest=a;var s=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t}(t);e.EmployeeNumberChangeRequest=s;var l=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t}(t);e.LeavePlanChangeRequest=l;var c=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t}(t);e.ReportingManagerChangeRequest=c;var p=function(e){function t(t){var i=e.call(this,t)||this;return i.oldProbationEndDate=t.oldProbationEndDate,i.newProbationEndDate=t.newProbationEndDate,i}return __extends(t,e),t}(t);e.ProbationEndDateChangeRequest=p;var u=function(e){function t(t){var i=e.call(this,t)||this;return i.oldSecondaryJobTitleName=t.oldSecondaryJobTitleName,i.newSecondaryJobTitleName=t.newSecondaryJobTitleName,i}return __extends(t,e),t}(t);e.JobTitleChangeRequest=u;var d=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t}(t);e.WorkerTypeChangeRequest=d,function(e){e[e.None=0]="None",e[e.Correction=1]="Correction",e[e.RoleChange=2]="RoleChange"}(e.JobDetailChangeReason||(e.JobDetailChangeReason={}))}(e.Model||(e.Model={}))}(EmployeeJobProfile||(EmployeeJobProfile={})),function(e){!function(e){var t=function(){function e(e,t){this.resource=e,this.q=t,this.employeeJobDetaislAudit=this.resource("/api/employeejob/:id/audit/:forField/:action",{id:"@id",action:"@action"})}return e.prototype.getFieldAudit=function(e,t,i,n){return this.employeeJobDetaislAudit.query({id:e,forField:t,fromDate:i,toDate:n}).$promise},e.prototype.getJobModuleAudit=function(e,t,i,n){return this.employeeJobDetaislAudit.query({id:e,forField:t,fromDate:i,toDate:n,action:"jobmoduleaudit"}).$promise},e.$inject=["$resource","$q"],e}();e.EmployeeJobDetailsAuditService=t;var i=function(){function e(e,t,i){this.resource=e,this.q=t,this.EmployeeModel=i,this.employee=this.resource("/api/employee/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.employeeJob=this.resource("/api/employee/job/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.user=this.resource("/api/user/:id/:action",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.me=this.resource("/api/me/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.service=this.resource("/api/payroll/salary/employee/:employeeId/addSalaryAndBonus/fromHiro/:id",{id:"@id",employeeId:"@action"},{update:{method:"PUT"}})}return e.prototype.getEmployeeData=function(e,t){return(t?this.employee:this.me).get({action:e}).$promise},e.prototype.doesEmployeeNumberExist=function(e){var t=this.q.defer();return this.employee.get({id:0,action:"doesemployeenumberexist",number:e},function(e){t.resolve(!e.result)}),t.promise},e.prototype.getUser=function(e){return this.user.get({id:e,action:"default"}).$promise},e.prototype.getUserProfile=function(e){return this.user.get({id:e,action:"userprofile"}).$promise},e.prototype.getUserPII=function(e){return this.user.get({id:e,action:"userpii"}).$promise},e.prototype.getEmployee=function(e){var t=this,i=this.q.defer();return this.employee.get({id:e,action:"default"},function(n){t.q.all([t.getUser(n.userId),t.getUserProfile(n.userId),t.getUserPII(n.userId)]).then(function(o){angular.extend(n,o[0],o[1],o[2]);var r=new t.EmployeeModel.Employee(n);r.id=e,i.resolve(r)})}),i.promise},e.prototype.getEmployeeLeaveStats=function(e){return this.employee.get({action:"leaves/stats",id:e}).$promise},e.prototype.updateJobInfo=function(e,t,i,n,o,r){return this.employee.update({id:e,action:"jobInfo"},{jobDetails:t,weeklyOffPolicyId:i,ShiftPolicyId:n,newJobDetailsEventModel:o,oldJobDetailsEventModel:r}).$promise},e.prototype.getEmployeeReportees=function(e){return this.employee.query({action:"employeereportees",employeeId:e}).$promise},e.prototype.getEmployeeAssets=function(e){return this.employee.query({action:"assets",id:e}).$promise},e.prototype.getMyResignation=function(){return this.me.get({action:"resignation"}).$promise},e.prototype.getResignationReasons=function(){return this.me.get({action:"resignationreasons"}).$promise},e.prototype.saveMyResingation=function(e){return this.me.save({action:"resignation"},e).$promise},e.prototype.updateMyResigantion=function(e){return this.me.update({action:"resignation"},e).$promise},e.prototype.getMyResignationDetails=function(){return this.me.get({action:"resignation/details"}).$promise},e.prototype.cancelMyResignation=function(){return this.me.delete({action:"resignation"}).$promise},e.prototype.getEmployeeModuleStatus=function(e){return this.employee.query({action:"employeemodulestatus",id:e}).$promise},e.prototype.updateEmployeeModuleStatus=function(e,t,i){return this.employee.update({action:"employeemodulestatus",id:e},{employeeId:e,module:t,enabled:i}).$promise},e.prototype.postSalaryCompensation=function(e,t){return this.service.get({employeeId:e,preboardingCandidateId:t}).$promise},e.$inject=["$resource","$q","EmployeeModel"],e}();e.EmployeesService=i,angular.module("employees").service("EmployeesService",i).service("EmployeeJobDetailsAuditService",t)}(e.Services||(e.Services={}))}(Employee||(Employee={})),function(e){!function(e){var t=function(){function e(e,t){this.resource=e,this.q=t,this.service=this.resource("/api/integration/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getMagnetOffers=function(){return this.service.query({action:"magnet/offers"}).$promise},e.prototype.getMagnetOffer=function(e){return this.service.get({action:"magnet/offer",preboardingCandidateId:e}).$promise},e.$inject=["$resource","$q"],e}();e.IntegrationService=t,angular.module("xhr").service("IntegrationService",t)}(e.Services||(e.Services={}))}(Integration||(Integration={}));var Employees,Offers;__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){var t=function(e){function t(i,n,o,r,a,s){var l=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.EmployeeEffectiveSalaryWithoutPayroll,r.importExcel,{}),n)||this;return l.location=i,l.modalInstance=o,l.employeeServices=r,l.appSettings=a,l.fileDownloadService=s,l}return __extends(t,e),t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/excel/template/employeeeffectivesalaryimportwithoutpayroll")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee Name"},{field:"annualSalary",displayName:"Annual Salary"},{field:"effectiveFrom",displayName:"Effective From",type:"date",cellFilter:'date:"dd MMM yyyy"'}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","effectiveSalary-without-payroll-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","effectiveSalary-without-payroll-validation-details",!1),new SharedModel.Step(3,"Preview","","effectiveSalary-without-payroll-details-preview",!1)],t.$inject=["$location","NotificationService","$uibModalInstance","EmployeeServices","AppSettings","FileDownloadService"],t}(SharedPatterns.ImportController);e.EmployeeSalaryImportWithOutPayrollController=t}(e.imports||(e.imports={}))}(Employees||(Employees={})),angular.module("xhr").controller("EmployeeSalaryImportWithOutPayrollController",Employees.imports.EmployeeSalaryImportWithOutPayrollController),function(e){var t=function(){function e(e,t,i,n,o,r,a,s,l){var c=this;this.scope=e,this.stateParams=t,this._filter=i,this._modal=n,this.appSettings=o,this.gender=r,this.offerStatus=a,this.integrationService=s,this.employeeServices=l,this.employeeOffers=[],this.initializeGrid=function(){c.gridOptions=angular.copy(c.appSettings.gridSettings),c.gridOptions.columnDefs=[{field:"firstName",displayName:"First Name",cellClass:"ui-grid-cell"},{field:"lastName",displayName:"Last Name",cellClass:"ui-grid-cell"},{field:"email",displayName:"Email",cellClass:"ui-grid-cell"},{field:"mobile",displayName:"Mobile Number",cellClass:"ui-grid-cell"},{field:"gender",displayName:"Gender",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row, col) != 0" title="{{grid.appScope.ctrl.gender.getById(grid.getCellValue(row, col)).name}}">{{grid.appScope.ctrl.gender.getById(grid.getCellValue(row, col)).name}}</span><span data-ng-if="grid.getCellValue(row, col) == 0">Not Available</span></div>',cellClass:"ui-grid-cell",headerTooltip:!0},{field:"status",displayName:"Status",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.ctrl.offerStatus.getById(grid.getCellValue(row, col)).title}}</span></div>',cellClass:"ui-grid-cell",headerTooltip:!0},{name:"Actions",displayName:"ACTIONS",cellClass:"ui-grid-cell cell-tooltip",width:300,cellTemplate:'<div class="ui-grid-cell-contents action-buttons"> <a class="action-block text-center" data-ng-click="grid.appScope.ctrl.addEmployee(row.entity)" data-ng-if="row.entity.status < 3 "><span class="icon-add-new-emp icon-action"></span><span class="display-block action-text"> Add As Employee </span></a>NaN'}],c.gridOptions.rowHeight=60,c.gridOptions.data="ctrl.employeeOffers | filter: ctrl.filterText",c.gridOptions.onRegisterApi=function(e){c.gridApi=e}},this.initializeGrid(),this.stateParams.preboardingCandidateId&&this.integrationService.getMagnetOffer(+this.stateParams.preboardingCandidateId).then(function(e){c.addEmployee(e)})}return e.prototype.addEmployee=function(e){var t=this;this.selectedOffer=angular.copy(e);var i=new EmployeeProfile.Model.NewEmployee({firstName:e.firstName,lastName:e.lastName,displayName:(e.firstName?e.firstName.trim()+" ":"")+(e.lastName?e.lastName.trim():""),email:e.email,locationId:e.locationId,departmentId:e.departmentId,jobTitleId:e.jobTitleId,gender:e.gender,dateOfBirth:new Date(e.dateOfBirth),dateJoined:new Date(e.expectedDateOfJoining)});i.preboardingCandidateId=e.id,i.candidateIdentifier=e.candidateIdentifier,this.employeeServices.employee.get({id:0,action:"doesemailexist",email:i.email},function(n){i.duplicateEmail=n.result,t.modalInstance=t._modal.open({templateUrl:"employees/addnewemployee",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"NewEmployeeController",controllerAs:"ctrl",resolve:{NewEmployeeModel:function(){return i},OfferModel:function(){return e}}}),t.modalInstance.result.then(function(e){window.location.href="/ui/#/org/hiring/requisition/offers"})})},e.$inject=["$scope","$stateParams","$filter","$uibModal","AppSettings","Gender","OfferStatus","IntegrationService","EmployeeServices"],e}();e.MagnetOffersController=t;var i=function(){function e(e,t){this._state=e,this.appContext=t,this.parentState=this._state.current.parentState}return e.$inject=["$state","AppContext"],e}();e.MagnetRecruitmentController=i,angular.module("xhr").component("magnetRecruitment",{templateUrl:"/employees/recruitment",controller:i,controllerAs:"ctrl"}).component("magnetOffers",{templateUrl:"/employees/offers",controller:t,controllerAs:"ctrl"})}(Offers||(Offers={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){var t;!function(e){e[e.None=0]="None",e[e.Voluntary=1]="Voluntary",e[e.InVoluntary=2]="InVoluntary",e[e.Other=3]="Other"}(e.TerminationReasonType||(e.TerminationReasonType={})),function(e){e[e.None=0]="None",e[e.Extend=1]="Extend"}(e.NoticePeriodAction||(e.NoticePeriodAction={})),function(e){e[e.None=0]="None",e[e.Requested=1]="Requested",e[e.PendingApproval=2]="PendingApproval",e[e.Approved=3]="Approved",e[e.Canceled=4]="Canceled",e[e.Finalized=5]="Finalized",e[e.Settled=6]="Settled",e[e.Rejected=7]="Rejected"}(t=e.ExitRequestStatus||(e.ExitRequestStatus={})),function(e){e[e.None=0]="None",e[e.Initiated=1]="Initiated",e[e.Completed=2]="Completed"}(e.ExitStatus||(e.ExitStatus={}));var i=function(){return function(e){this.id=e.id,this.reason=e.reason,this.terminationReasonType=e.terminationReasonType}}();e.TerminationReason=i;var n=function(){return function(e){this.terminationReasons=e.terminationReasons.map(function(e){return new i(e)}),this.allowEmployeeResign=e.allowEmployeeResign,this.approverLevels=e.approverLevels.map(function(e){return new SharedModel.ApproverLevel(e)})}}();e.TerminationSettings=n;var o=function(){function i(t){this.id=t.id,this.employeeId=t.employeeId,this.resignationNote=t.resignationNote,this.initiatedBy=t.initiatedBy,this.requestedOn="string"==typeof t.requestedOn?t.requestedOn.stringToDateWithTime():t.requestedOn,this.terminationType=t.terminationType,this.advanceNoticeProvided=t.advanceNoticeProvided,this.advanceNoticeDate="string"==typeof t.advanceNoticeDate?t.advanceNoticeDate.stringToDate():t.advanceNoticeDate,this.lastWorkingDate="string"==typeof t.lastWorkingDate?t.lastWorkingDate.stringToDate():t.lastWorkingDate,this.noticePeriodInDays=t.noticePeriodInDays,this.extendedLastWorkingDate="string"==typeof t.extendedLastWorkingDate?t.extendedLastWorkingDate.stringToDate():t.extendedLastWorkingDate,this.terminationReason=t.terminationReason,this.regretTermination=t.regretTermination,this.isOktoRehire=t.isOktoRehire,this.payrollEndDate="string"==typeof t.payrollEndDate?t.payrollEndDate.stringToDate():t.payrollEndDate,this.comments=t.comments,this.reporteeTransitions=new e.ReporteeTransitions(t.reporteeTransitions||{}),this.exitRequestStatus=t.exitRequestStatus,this.approvalLog=t.approvalLog||[],this.leaveActions=new a(t.leaveActions||{}),this.exitTasks=(t.exitTasks||[]).map(function(e){return new u(e)}),this.assetActions=(t.assetActions||[]).map(function(e){return new p(e)}),this.settlementDate=Date.getDateObj(t.settlementDate),this.extendedDays=t.extendedDays,this.settlementSummary=new x(t.settlementSummary||{}),this.isPreviousCycleFinalized=t.isPreviousCycleFinalized}return Object.defineProperty(i.prototype,"isFutureRelieving",{get:function(){var e=new Date((new Date).setHours(0,0,0,0)),t=angular.copy(this.extendedLastWorkingDate);return t&&t.setHours(0,0,0,0),!!(Date.valid(t)&&t.getTime()>=e.getTime())},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"isSettlementComplete",{get:function(){return this.exitRequestStatus==t.Settled},enumerable:!0,configurable:!0}),i.prototype.toJSON=function(){return{id:this.id,employeeId:this.employeeId,resignationNote:this.resignationNote,initiatedBy:this.initiatedBy,requestedOn:this.requestedOn?this.requestedOn.dateOnlyString():null,terminationType:this.terminationType,advanceNoticeProvided:this.advanceNoticeProvided,advanceNoticeDate:this.advanceNoticeDate?this.advanceNoticeDate.dateOnlyString():null,lastWorkingDate:this.lastWorkingDate?this.lastWorkingDate.dateOnlyString():null,noticePeriodInDays:this.noticePeriodInDays,terminationReason:this.terminationReason,regretTermination:this.regretTermination,isOktoRehire:this.isOktoRehire,payrollEndDate:this.payrollEndDate?this.payrollEndDate.dateOnlyString():null,comments:this.comments,reporteeTransitions:this.reporteeTransitions,exitRequestStatus:this.exitRequestStatus,approvalLog:this.approvalLog,leaveActions:this.leaveActions,exitTasks:this.exitTasks,assetActions:this.assetActions,settlementDate:this.settlementDate?this.settlementDate.dateOnlyString():null}},i}();e.ExitRequest=o;var r=function(){function e(e){this.id=e.id,this.employeeNumber=e.employeeNumber,this.initiatedBy=e.initiatedBy,this.displayName=e.displayName,this.initiatedByName=e.initiatedByName,this.email=e.email,this.extendedDays=e.extendedDays,this.extendedLastWorkingDate="string"==typeof e.extendedLastWorkingDate?e.extendedLastWorkingDate.stringToDate():e.extendedLastWorkingDate,this.dateJoined="string"==typeof e.dateJoined?e.dateJoined.stringToDate():e.dateJoined,this.advanceNoticeDate="string"==typeof e.advanceNoticeDate?e.advanceNoticeDate.stringToDate():e.advanceNoticeDate,this.lastWorkingDate="string"==typeof e.lastWorkingDate?e.lastWorkingDate.stringToDate():e.lastWorkingDate,this.requestedOn="string"==typeof e.requestedOn?e.requestedOn.stringToDate():e.requestedOn,this.canceledDate="string"==typeof e.canceledDate?e.canceledDate.stringToDate():e.canceledDate,this.settlementDate="string"==typeof e.settlementDate?e.settlementDate.stringToDate():e.settlementDate,this.exitStatus=e.exitStatus,this.comments=e.comments,this.employmentStatus=e.employmentStatus,this.terminationType=e.terminationType,this.terminationReason=e.terminationReason,this.requestStatus=e.requestStatus,this.noticePeriodInDays=e.noticePeriodInDays,this.isSelfResign=e.isSelfResign,this.isFinalStatement=e.isFinalStatement}return e.prototype.mapFromExitRequest=function(e){this.advanceNoticeDate=e.advanceNoticeDate,this.exitStatus=e.isFutureRelieving?1:2,this.lastWorkingDate=e.lastWorkingDate,this.requestStatus=e.exitRequestStatus,this.noticePeriodInDays=e.noticePeriodInDays,this.terminationReason=e.terminationReason,this.terminationType=e.terminationType,this.extendedDays=e.extendedDays,this.extendedLastWorkingDate=e.extendedLastWorkingDate,this.settlementDate=e.settlementDate,this.comments=e.comments},e}();e.EmployeeExitListItem=r;var a=function(){return function(e){this.leaveRestrictions=(e.leaveRestrictions||[]).map(function(e){return new s(e)}),this.leaveBalanceEncashments=(e.leaveBalanceEncashments||[]).map(function(e){return new d(e)})}}();e.LeaveActions=a;var s=function(){return function(e){this.typeId=e.typeId,this.balance=e.balance,this.canApplyLeave=e.canApplyLeave,this.action=e.action,this.noticePeriodExtensionInDays=e.noticePeriodExtensionInDays,this.hasUpperLimit=e.hasUpperLimit}}();e.LeaveTypeRestriction=s;var l=function(){return function(e){this.transitions=[],this.assignIndividually=e.assignIndividually||!1,this.assignTo=e.assignTo,this.assignIndividually&&(this.transitions=(e.transitions||[]).map(function(e){return new c(e)}))}}();e.ReporteeTransitions=l;var c=function(){return function(e){this.employeeId=e.employeeId,this.reportingManagerId=e.reportingManagerId}}();e.EmployeeAssignment=c;var p=function(){function e(e){this.assetId=e.id||e.assetId,this.chargeDamages=e.chargeDamages,this.descriptionOfDamages=e.descriptionOfDamages,this.amountToRecover=e.amountToRecover,this.recoverStatus=e.recoverStatus,this.recoveredOn="string"==typeof e.recoveredOn?e.recoveredOn.stringToDate():e.recoveredOn,this.recoverTaskId=e.recoverTaskId}return e.prototype.toJSON=function(){return{assetId:this.assetId,chargeDamages:this.chargeDamages,descriptionOfDamages:this.descriptionOfDamages,amountToRecover:this.amountToRecover,recoverStatus:this.recoverStatus,recoveredOn:this.recoveredOn?this.recoveredOn.dateOnlyString():null,recoverTaskId:this.recoverTaskId}},e}();e.AssetAction=p;var u=function(){function e(e){this.id=e.id,this.assignedTo=e.assignedTo,this.taskProcessType=2,this.dueOn="string"==typeof e.dueOn?e.dueOn.stringToDate():e.dueOn,this.status=e.status,this.description=e.description,this.title=e.title,this.commentIdentifier=e.commentIdentifier,this.attachments=e.attachments,this.assignToEmp=e.assignToEmp,this.templateIdentifier=e.templateIdentifier}return e.prototype.toJSON=function(){return{id:this.id,assignedTo:this.assignedTo,taskProcessType:this.taskProcessType,dueOn:this.dueOn?this.dueOn.dateOnlyString():null,status:this.status,description:this.description,title:this.title,commentIdentifier:this.commentIdentifier,attachments:this.attachments}},e}();e.ExitTask=u,function(e){e[e.None=0]="None",e[e.ToBeRecovered=1]="ToBeRecovered",e[e.Recovered=2]="Recovered",e[e.Lost=3]="Lost"}(e.AssetRecover||(e.AssetRecover={})),function(e){e[e.Available=0]="Available",e[e.NotAvailable=1]="NotAvailable",e[e.Assigned=2]="Assigned"}(e.AssetStatus||(e.AssetStatus={})),function(e){e[e.None=0]="None",e[e.Asset=1]="Asset",e[e.Leave=2]="Leave",e[e.Salary=3]="Salary",e[e.Bonus=4]="Bonus",e[e.Loan=5]="Loan",e[e.Gratuity=6]="Gratuity",e[e.Arrear=7]="Arrear",e[e["Final Settlement"]=8]="Final Settlement",e[e.Expense=9]="Expense",e[e["Notice Period Buyout"]=10]="Notice Period Buyout"}(e.ExitPayableType||(e.ExitPayableType={}));var d=function(){function e(e){this.typeName=e.typeName,this.typeId=e.typeId,this.balance=e.balance,this.actualBalance=e.actualBalance,this.amount=e.amount,this.encashmentPolicyId=e.encashmentPolicyId,this.encashmentAction=e.encashmentAction,this.id=e.id}return Object.defineProperty(e.prototype,"isValid",{get:function(){return this.encashmentAction>=0&&null!=this.encashmentPolicyId},enumerable:!0,configurable:!0}),e.prototype.toJSON=function(){return{typeId:this.typeId,balance:this.balance,amount:this.amount,encashmentPolicyId:this.encashmentPolicyId,encashmentAction:this.encashmentAction,id:this.id}},e}();e.LeaveBalanceEncashmentView=d,function(e){e[e.None=0]="None",e[e.Approved=1]="Approved",e[e.Rejected=2]="Rejected",e[e.Paid=3]="Paid",e[e.Pending=4]="Pending"}(e.OneTimePaymentStatus||(e.OneTimePaymentStatus={}));var m=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.Void=0,t.Pay=1,t.PayAsArrear=2,t.PaymentVoid=3,t.ReleasePayment=4,t.AlreadyPaid=5,t[0]="Void",t[1]="Pay",t[2]="Pay As Arrear",t[3]="Payment Void",t[4]="Release Payment",t[5]="Already Paid",t}(SharedPatterns.Enum);e.SalaryPayAction=m,function(e){e[e.None=0]="None",e[e.Pending=1]="Pending",e[e.Submitted=2]="Submitted",e[e.Approved=3]="Approved",e[e.Rejected=4]="Rejected",e[e.Paid=5]="Paid",e[e.InApprovalProcess=6]="InApprovalProcess"}(e.ExpenseClaimStatus||(e.ExpenseClaimStatus={})),function(e){e[e.None=0]="None",e[e.PaidWithPayroll=1]="PaidWithPayroll",e[e.PaidOutsidePayroll=2]="PaidOutsidePayroll"}(e.ExpenseClaimPaymentMode||(e.ExpenseClaimPaymentMode={}));var y=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.Void=0,t.Pay=1,t.PaidOutSideKekaPayroll=2,t.PartialPay=3,t[0]="Void (Never Pay)",t[1]="Pay",t[2]="Paid OutSide Keka Payroll",t[3]="Partially Pay",t}(SharedPatterns.Enum);e.PaymentPayAction=y;var h=function(){function e(e){this.forEmployeeId=e.forEmployeeId,this.exitInCycle=e.exitInCycle,this.payAction=e.payAction,this.payrollEndDate=e.payrollEndDate,this.useClaimsToValidateDeductions=e.useClaimsToValidateDeductions,this.lossOfDays=new g(e.lossOfDays||{}),this.currentSalaryStructure=e.currentSalaryStructure,this.remunerationType=e.remunerationType,this.gratuityAmount=e.gratuityAmount,this.noticePeriodBuyOutInfo=e.noticePeriodBuyOutInfo,this.pendingBonuses=(e.pendingBonuses||[]).map(function(e){return new v(e)}),this.pendingLoans=(e.pendingLoans||[]).map(function(e){return new S(e)}),this.pendingRevisions=(e.pendingRevisions||[]).map(function(e){return new C(e)}),this.pendingExpenseClaims=(e.pendingExpenseClaims||[]).map(function(e){return new b(e)}),this.pendingAdvanceExpenses=(e.pendingAdvanceExpenses||[]).map(function(e){return new b(e)}),this.pendingAdvanceExpenseSettlements=(e.pendingAdvanceExpenseSettlements||[]).map(function(e){return new b(e)}),this.pendingSalaryOnHolds=(e.pendingSalaryOnHolds||[]).map(function(e){return new w(e)}),this.customTransactions=(e.customTransactions||[]).map(function(e){return new P(e)}),this.pendingOneTimeTransactions=(e.pendingOneTimeTransactions||[]).map(function(e){return new T(e)}),this.componentClaims=(e.componentClaimViews||[]).map(function(e){return new N(e)}),this.buildLeaveEncashments(e.leaveBalanceEncashments,e.typeSummary),this.gratuityDetails=new O(e.gratuityDetails||{}),this.leaveEncashmentDetails=new F(e.leaveEncashmentDetails||{})}return Object.defineProperty(e.prototype,"isSalaryPay",{get:function(){return this.payAction==R.Pay},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isPreviousCycleFinalized",{get:function(){return this.exitInCycle.isPreviousCycleFinalized},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"totalLeaveEncashmentAmount",{get:function(){return this.leaveBalanceEncashments.filter(function(e){return e.isValid&&(e.encashmentAction==R.Pay||e.encashmentAction==R.AlreadyPaid)}).reduce(function(e,t){return e+t.amount},0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"totalPaidLeavesCount",{get:function(){return this.leaveBalanceEncashments.filter(function(e){return e.isValid&&(e.encashmentAction==R.Pay||e.encashmentAction==R.AlreadyPaid)}).reduce(function(e,t){return e+t.balance},0)},enumerable:!0,configurable:!0}),e.prototype.addCustomDeduction=function(e){this.customTransactions.push(e)},e.prototype.updateCustomDeduction=function(e){var t=this.customTransactions.find(function(t){return t.identifier==e.identifier});t&&t.update(e)},e.prototype.deleteCustomDeduction=function(e){this.customTransactions=this.customTransactions.filter(function(t){return t.identifier!=e})},e.prototype.updateOneTimeTransaction=function(e){var t=this.pendingOneTimeTransactions.find(function(t){return t.oneTimePaymentId==e.oneTimePaymentId});t&&t.update(e)},e.prototype.deleteOneTimeTransaction=function(e){this.pendingOneTimeTransactions=this.pendingOneTimeTransactions.filter(function(t){return t.oneTimePaymentId!=e})},e.prototype.buildLeaveEncashments=function(e,t){var i={};(e||[]).forEach(function(e){return i[e.typeId]=e}),this.leaveBalanceEncashments=(t||[]).filter(function(e){return e.hasUpperLimit&&0!=e.actualAvailableInDays}).map(function(e){var t={id:0,typeName:e.type.name,actualBalance:e.actualAvailableInDays+e.fAndFEncashed,typeId:e.type.id,amount:0,balance:0,encashmentPolicyId:"",encashmentAction:1};return e.type.id in i&&(t.amount=i[e.type.id].amount,t.balance=i[e.type.id].balance,t.encashmentPolicyId=i[e.type.id].encashmentPolicyId,t.encashmentAction=i[e.type.id].encashmentAction,t.id=i[e.type.id].id),new d(t)})},e.prototype.toJSON=function(){return{lossOfDays:this.lossOfDays,forEmployeeId:this.forEmployeeId,payAction:this.payAction,payrollEndDate:this.payrollEndDate,useClaimsToValidateDeductions:this.useClaimsToValidateDeductions,pendingBonuses:this.pendingBonuses,pendingRevisions:this.pendingRevisions,pendingSalaryOnHolds:this.pendingSalaryOnHolds,pendingExpenseClaims:this.pendingExpenseClaims,pendingAdvanceExpenses:this.pendingAdvanceExpenses,pendingAdvanceExpenseSettlements:this.pendingAdvanceExpenseSettlements,customTransactions:this.customTransactions,pendingOneTimeTransactions:this.pendingOneTimeTransactions,leaveBalanceEncashments:this.leaveBalanceEncashments,noticePeriodBuyOutInfo:this.noticePeriodBuyOutInfo,gratuityAmount:this.gratuityAmount,componentClaims:this.componentClaims}},e}();e.EmployeeExitPayablesSummary=h;var f=function(){function e(e){this.id=e.id,this.employeeId=e.employeeId,this.source=e.source,this.lopDates=e.lopDates,this.days=e.days,this.payCycle=e.payCycle,this.comment=e.comment}return e.prototype.valid=function(){return this.employeeId>0&&this.source&&this.days>-1&&this.days<32},e}();e.LossOfDays=f;var g=function(e){function t(t){var i=e.call(this,t)||this;return t.override&&1!=t.override.source||(t.override={employeeId:t.employeeId,payCycle:t.payCycle,source:t.source,comment:t.override?t.override.comment:null}),i.override=new f(t.override),i}return __extends(t,e),t.prototype.update=function(){null!=this.override.days?this.override.source=3:(this.comment=this.override.comment,this.override=new f({employeeId:this.employeeId,payCycle:this.payCycle,source:this.source,comment:this.comment}))},t.prototype.isValid=function(){return 1==this.override.source?this.valid():this.override.valid()},t.prototype.toJSON=function(){return this.comment=this.override.comment,null!=this.override.days?this.override:new f(this)},t}(f);e.LossOfDaysView=g;var v=function(){function e(e){this.bonusOnHoldId=e.bonusOnHoldId,this.bonusId=e.bonusId,this.bonusPayAction=e.bonusPayAction,this.amount=e.amount,this.carryForward=e.carryForward,this.balanceAmount=e.balanceAmount||this.amount,this.processedType=e.processedType,this.dueOn="string"==typeof e.dueOn?e.dueOn.stringToDate():e.dueOn,this.includeInTax=e.includeInTax,this.paidOn="string"==typeof e.paidOn?e.paidOn.stringToDate():e.paidOn,this.bonusTitle=e.bonusTitle,this.payAmount=e.payAmount?e.payAmount:Number((this.balanceAmount*(e.payPercentage/100)).toFixed(2)),this.payPercentage=e.payAmount?100*this.payAmount/e.balanceAmount:e.payPercentage}return e.prototype.toJSON=function(){return{bonusOnHoldId:this.bonusOnHoldId,bonusId:this.bonusId,payPercentage:this.payPercentage,carryForward:this.carryForward,bonusPayAction:this.bonusPayAction,includeInTax:this.includeInTax,paidOn:this.paidOn?this.paidOn.dateOnlyString():null}},e}();e.BonusDetailsView=v;var S=function(){return function(e){this.id=e.id,this.loanAmount=e.loanAmount,this.outStandingAmount=e.outStandingAmount,this.remainingTerm=e.remainingTerm,this.repaymentStatus=e.repaymentStatus,this.emiDeductsFrom=Date.getDateObj(e.emiDeductsFrom),this.isLoanReleasedFuture=e.isLoanReleasedFuture}}();e.LoanDetailsView=S;var C=function(){function e(e){this.revisionOnHoldId=e.revisionOnHoldId,this.revisionId=e.revisionId,this.payAction=e.payAction,this.ctc=e.ctc,this.effectiveFrom=Date.getDateObj(e.effectiveFrom),this.since="string"==typeof e.since?e.since.stringToDate():e.since}return e.prototype.toJSON=function(){return{revisionId:this.revisionId,revisionOnHoldId:this.revisionOnHoldId,payAction:this.payAction,since:this.since?this.since.dateOnlyString():null}},e}();e.OnHoldRevisionsView=C;var w=function(){function e(e){this.salaryOnHoldId=e.salaryOnHoldId,this.salaryAction=e.salaryAction,this.ctc=e.ctc,this.monthFor=e.monthFor,this.month=e.month,this.year=e.year,this.isPaymentOnHold=e.isPaymentOnHold}return Object.defineProperty(e.prototype,"holdDate",{get:function(){return new Date(this.year,this.month-1,1)},enumerable:!0,configurable:!0}),e.prototype.toJSON=function(){return{salaryOnHoldId:this.salaryOnHoldId,salaryAction:this.salaryAction}},e}();e.SalaryOnHoldView=w;var b=function(){function e(e){this.expenseId=e.expenseId,this.title=e.title,this.amount=e.amount,this.expensePayAction=e.expensePayAction,this.payDate="string"==typeof e.payDate?e.payDate.stringToDate():e.payDate,this.claimStatus=e.claimStatus,this.advanceRequestId=e.advanceRequestId}return e.prototype.toJSON=function(){return{expenseId:this.expenseId,expensePayAction:this.expensePayAction,payDate:this.payDate?this.payDate.dateOnlyString():null}},e}();e.ExpenseClaimView=b;var P=function(){function e(e){this.identifier=e.identifier,this.amount=e.amount,this.title=e.title,this.isDeduction=e.isDeduction}return e.prototype.update=function(e){this.constructor(e)},e}();e.CustomDeductionView=P;var T=function(){function e(e){this.oneTimePaymentId=e.oneTimePaymentId,this.payAction=e.payAction,this.amount=e.amount,this.title=e.title,this.isDeduction=e.isDeduction,this.comment=e.comment}return e.prototype.update=function(e){this.constructor(e)},e}();e.OneTimeTransactionView=T;var D=function(){return function(){}}();e.OneTimeTransaction=D;var I=function(){return function(){}}();e.LeaveEncashmentView=I;var A=function(){function e(e){this.buyOutConfigurationId=e.buyOutConfigurationId,this.actualAmount=e.actualAmount||0,this.overriddenAmount=e.overriddenAmount,this.days=e.days||0,this.isAmountOverridden=null!=e.overriddenAmount,this.areDaysOverridden=e.areDaysOverridden||!1,this.isBuyOutApplicable=e.isBuyOutApplicable||!1}return e.prototype.update=function(e){this.isBuyOutApplicable?(this.isAmountOverridden||(this.overriddenAmount=null),this.areDaysOverridden||(this.days=e)):(this.actualAmount=0,this.buyOutConfigurationId=0,this.days=0,this.isAmountOverridden=!1,this.areDaysOverridden=!1)},e}();e.NoticePeriodBuyOutInfo=A;var E=function(){function e(e){this.name=e.name,this.id=e.id,this.assetId=e.assetId,this.chargeDamages=e.chargeDamages,this.descriptionOfDamages=e.descriptionOfDamages,this.amountToRecover=e.amountToRecover,this.recoverStatus=e.recoverStatus,this.recoveredOn="string"==typeof e.recoveredOn?e.recoveredOn.stringToDate():e.recoveredOn,this.recoverTaskId=e.recoverTaskId,this.assignedTo=e.assignedTo,this.assetConditionId=e.assetConditionId,this.assetStatusReasonId=e.assetStatusReasonId,this.assetConditionName=e.assetConditionName,this.assetStatusReasonName=e.assetStatusReasonName}return e.prototype.toJSON=function(){return{employeeAssetId:this.id,chargeDamages:this.chargeDamages,descriptionOfDamages:this.descriptionOfDamages,amountToRecover:this.amountToRecover,recoverStatus:this.recoverStatus,recoveredOn:this.recoveredOn?this.recoveredOn.dateOnlyString():null,recoverTaskId:this.recoverTaskId,assetConditionId:this.assetConditionId,assetStatusReasonId:this.assetStatusReasonId,assetConditionName:this.assetConditionName,assetStatusReasonName:this.assetStatusReasonName}},e}();e.AssetsView=E;var R=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.DontPay=0,t.Pay=1,t.AlreadyPaid=2,t[0]="Void (Never Pay)",t[1]="Pay",t[2]="Already Paid",t}(SharedPatterns.Enum);e.PayAction=R;var x=function(){return function(e){this.employeeId=e.employeeId,this.settledOn=e.settledOn,this.payables=(e.payables||[]).map(function(e){return new M(e)}),this.finalSettlementAmount=e.finalSettlementAmount}}();e.ExitSettlementSummary=x;var M=function(){return function(e){this.payableType=e.payableType,this.payableDays=e.payableDays,this.amount=e.amount,this.isDeduction=e.isDeduction,this.description=e.description,this.components=e.components,this.title=e.title}}();e.PayableItem=M;var N=function(){function e(e){this.claimId=e.claimId,this.componentTitle=e.componentTitle,this.claimAmount=e.claimAmount,this.payableAmount=e.payableAmount,this.claimedOn=e.claimedOn,this.status=e.status,this.actionTakenByName=e.actionTakenByName,this.actionTakenOn=e.actionTakenOn,this.payDate=e.payDate}return e.prototype.toJSON=function(){return{claimId:this.claimId,status:this.status,payableAmount:this.payableAmount,payDate:this.payDate}},e}();e.ComponentClaimView=N,function(e){e[e.Pending=0]="Pending",e[e.Approved=1]="Approved",e[e.Rejected=2]="Rejected"}(e.ComponentClaimStatus||(e.ComponentClaimStatus={}));var O=function(){function e(e){this.lastTenMonthsSalary=[],this.isEmployeeEligibleForGratuity=e.isEmployeeEligibleForGratuity,this.isOrgEligibleForGratuityAct=e.isOrgEligibleForGratuityAct,this.isAmountAutoCalculated=e.isAmountAutoCalculated,this.lastDrawnSalary=Number(e.lastDrawnSalary.toFixed(2)),this.noOfyears=e.noOfyears||0,this.payableAmount=Number(e.payableAmount.toFixed(2)),this.autoCalculatedAmount=Number(e.autoCalculatedAmount.toFixed(2)),this.hasPreviousTaxExemption=e.hasPreviousTaxExemption,this.previousTaxExempted=e.hasPreviousTaxExemption?e.previousTaxExempted:0,this.payEntireGratuityAmountAsTaxable=e.payEntireGratuityAmountAsTaxable,this.lastTenMonthsSalary=(e.lastTenMonthsSalary||[]).map(function(e){return new k(e)}),this.taxExemptedAmount=e.taxExemptedAmount}return Object.defineProperty(e.prototype,"averageOfTenMonthsSalary",{get:function(){return Number((this.lastTenMonthsSalary.reduce(function(e,t){return e+t.total},0)/10).toFixed(2))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"taxableGratuity",{get:function(){return this.payableAmount-this.taxExemptedAmount},enumerable:!0,configurable:!0}),e}();e.EmployeeGratuityDetail=O;var k=function(){function e(e){this.basic=e.basic||0,this.da=e.da||0,this.commission=e.commission||0}return Object.defineProperty(e.prototype,"total",{get:function(){return this.basic+this.da+this.commission},enumerable:!0,configurable:!0}),e}();e.SalaryDetials=k;var F=function(){function e(e){this.lastTenMonthsSalary=[],this.excludeFromTaxExemption=e.excludeFromTaxExemption,this.lastTenMonthsSalary=(e.lastTenMonthsSalary||[]).map(function(e){return new k(e)}),this.previousTaxExempted=e.previousTaxExempted,this.taxExemptedAmount=e.taxExemptedAmount,this.payableAmount=e.payableAmount,this.creditedLeaves=e.creditedLeaves,this.isManualCalculation=e.isManualCalculation,this.cashEquivalentLeave=e.cashEquivalentLeave}return Object.defineProperty(e.prototype,"averageOfTenMonthsSalary",{get:function(){return Number((this.lastTenMonthsSalary.reduce(function(e,t){return e+t.total},0)/10).toFixed(2))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"leaveBalanceInMonths",{get:function(){return Number((this.creditedLeaves/30).toFixed(2))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"taxableAmount",{get:function(){return Number((this.payableAmount-this.taxExemptedAmount).toFixed(2))},enumerable:!0,configurable:!0}),e}();e.LeaveEncashmentDetails=F}(e.Models||(e.Models={}))}(Employee||(Employee={})),function(e){!function(e){!function(e){var t=function(){function e(e){this.resourceService=e,this.exitResource=this.resourceService("/api/employee/exit/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.assetsResource=this.resourceService("/api/asset/settings/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.employeeTaskResource=this.resourceService("/api/employee/:employeeId/exit/task/:id/:action",{employeeId:"@employeeId",id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getEmployeeExitInfo=function(e){return this.exitResource.get({action:"info",id:e}).$promise},e.prototype.getEmployee=function(e){return this.exitResource.get({action:"profileactions/employeedetails",id:e}).$promise},e.prototype.saveEmployeeExitRequest=function(e,t){return this.exitResource.save({action:"request",id:e},t).$promise},e.prototype.updateEmployeeExitRequest=function(e,t){return this.exitResource.update({action:"request",id:e},t).$promise},e.prototype.cancelEmployeeExitRequest=function(e,t){return this.exitResource.delete({action:"request",id:e,rejectComment:t}).$promise},e.prototype.approveEmployeeExitRequest=function(e){return this.exitResource.update({action:"approve",id:e}).$promise},e.prototype.rejectEmployeeExitRequest=function(e,t){return this.exitResource.save({action:"reject",id:e,rejectComment:t},{}).$promise},e.prototype.getAllSeflResignedRequests=function(){return this.exitResource.query({action:"selfresigned"}).$promise},e.prototype.getAllPendingExitRequests=function(){return this.exitResource.query({action:"pendingrequests"}).$promise},e.prototype.getAllCompletedExitRequests=function(){return this.exitResource.query({action:"completedrequests"}).$promise},e.prototype.getAllSettledRequests=function(){return this.exitResource.query({action:"settledrequests"}).$promise},e.prototype.getAllCanceledExitRequests=function(){return this.exitResource.query({action:"canceledrequests"}).$promise},e.prototype.saveEmployeeExitTask=function(e,t){return this.exitResource.save({action:"task",id:e},t).$promise},e.prototype.getExitTask=function(e,t){return this.employeeTaskResource.get({employeeId:e,id:t}).$promise},e.prototype.updateExitTask=function(e,t,i){return this.employeeTaskResource.update({employeeId:e,id:t,action:"update"},i).$promise},e.prototype.deleteExitTask=function(e,t){return this.exitResource.remove({action:"task",id:e,taskId:t}).$promise},e.prototype.getExitPendingActivities=function(e){return this.exitResource.get({action:"pendingactivities",id:e}).$promise},e.prototype.saveExitPendingActivities=function(e,t){return this.exitResource.update({action:"pendingactivities",id:e},t).$promise},e.prototype.getEmployeeLeaveStats=function(e,t){return void 0===t&&(t=null),this.exitResource.get({action:"leaves/stats",id:e,exitDate:t}).$promise},e.prototype.getEmployeeReportees=function(e){return this.exitResource.query({action:"employeereportees",id:e}).$promise},e.prototype.getDeductiontypes=function(){return this.exitResource.query({action:"payroll/deductiontypes"}).$promise},e.prototype.getNoticePeriodBuyOutPolicies=function(e){return this.exitResource.query({action:"payroll/noticePeriodBuyOutPolicies",id:e}).$promise},e.prototype.settledExitRequest=function(e,t){return this.exitResource.save({action:"settlement",id:e},t).$promise},e.prototype.getAssetStatusReasons=function(){return this.exitResource.query({action:"asset/statusreasons"})},e.prototype.getAssetConditions=function(){return this.exitResource.query({action:"asset/conditions"})},e.prototype.getExitTaskLists=function(){return this.exitResource.query({action:"tasklists"}).$promise},e.prototype.getExitTaskTemplates=function(e){return this.exitResource.query({action:"templates",id:e}).$promise},e.prototype.saveTaskListAsExitTasks=function(e,t){return this.exitResource.save({action:"tasks",requestId:e,taskListId:t},{}).$promise},e.prototype.getExitReasons=function(){return this.exitResource.get({action:"exitreasons"}).$promise},e.$inject=["$resource"],e}();e.EmployeeExitService=t;var i=function(){function e(e){this.resourceService=e,this.exitResource=this.resourceService("/api/payroll/exit/employee/:employeeId/:action/:id",{action:"@action"},{update:{method:"PUT"}})}return e.prototype.calculateInterest=function(e,t){return this.exitResource.save({action:"loan/calculateInterest",employeeId:e},t).$promise},e.prototype.getEmployeeLoanOutStanding=function(e,t,i){return this.exitResource.get({action:"loan/"+e+"/overridedetails",employeeId:t,exitcycleid:i}).$promise},e.prototype.saveOrUpdateOverride=function(e,t,i){return this.exitResource.save({action:"loan/"+e+"/overridedetails",employeeId:i},t).$promise},e.prototype.getExitPayables=function(e){return this.exitResource.get({action:"payables",employeeId:e}).$promise},e.prototype.saveExitPayables=function(e,t){return this.exitResource.update({action:"payables",employeeId:e},t).$promise},e.prototype.saveGratuityDetils=function(e,t){return this.exitResource.save({action:"gratutity",employeeId:e},t).$promise},e.prototype.calculateGratuityDetils=function(e,t){return this.exitResource.save({action:"gratutity/calculate",employeeId:e},t).$promise},e.prototype.calculateLeaveEncashmentDetails=function(e,t){return this.exitResource.save({action:"leaveencashment/calculate",employeeId:e},t).$promise},e.prototype.saveLeaveEncashmentDetails=function(e,t){return this.exitResource.save({action:"leaveencashment",employeeId:e},t).$promise},e.prototype.getLastTenMonthsSalary=function(e){return this.exitResource.query({action:"lasttenmonthssalary",employeeId:e}).$promise},e.prototype.getLastDrawnSalary=function(e){return this.exitResource.get({action:"lastdrawnsalary",employeeId:e}).$promise},e.prototype.getsettlmentSummary=function(e){return this.exitResource.get({action:"settlmentSummary",employeeId:e}).$promise},e.prototype.finalizeSettlement=function(e,t){return this.exitResource.save({action:"settlement/finalize",employeeId:e},t).$promise},e.prototype.updateOneTimeTransaction=function(e,t){return this.exitResource.update({action:"onetimetransaction",employeeId:e},t).$promise},e.prototype.saveOneTimeTransaction=function(e,t,i){return this.exitResource.save({action:"onetimetransaction",id:t,employeeId:e},i).$promise},e.prototype.deleteOneTimeTransaction=function(e,t){return this.exitResource.delete({action:"onetimetransaction",employeeId:e,oneTimeTransactionId:t}).$promise},e.prototype.settledExitRequest=function(e,t){return this.exitResource.save({action:"settled",employeeId:e},t).$promise},e.$inject=["$resource"],e}();e.EmployeePayrollExitService=i,angular.module("employees").service("EmployeeExitService",t).service("EmployeePayrollExitService",i)}(e.Services||(e.Services={}))}(e.Exit||(e.Exit={}))}(Employee||(Employee={})),function(e){!function(t){var i,n,o,r,a,s,l,c,p,u;t.Controllers||(t.Controllers={}),i=function(){function t(e,t,i){this.employeeServices=e,this.notificationService=t,this.qService=i}return t.prototype.$onInit=function(){var t=this;this.qService.all([this.employeeServices.getResignationReasons(),this.employeeServices.getMyResignation()]).then(function(i){t.terminationReasons=i[0].resignationReasons||[],i[1].exitRequest&&i[1].exitRequest.id&&(t.model=new e.Models.ExitRequest(i[1].exitRequest))})},t.prototype.saveResignRequest=function(){var e=this;this.form.empResignationForm.$valid&&this.employeeServices.saveMyResingation(this.model).then(function(t){t.id&&t.id>0?(e.notificationService.success("Resignation request saved successfully"),e.modalInstance.close({id:t.id,requestedOn:t.requestedOn})):e.notificationService.error("An error occurred while saving resignation request.")},function(t){e.notificationService.error(t.data.message)})},t.prototype.updateResignRequest=function(){var e=this;this.form.empResignationForm.$valid&&this.employeeServices.updateMyResigantion(this.model).then(function(t){t.isUpdated?(e.notificationService.success("Resignation request updated successfully"),e.modalInstance.close()):e.notificationService.error("An error occurred while updating resignation request.")},function(t){e.notificationService.error("An error occurred while updating resignation request.")})},t.prototype.closeModalInstance=function(){this.modalInstance.dismiss()},t.$inject=["EmployeesService","NotificationService","$q"],t}(),n=function(){function t(t,i,n,o,r,a,s,l){var c=this;this.scope=t,this.modalService=i,this.notificationService=n,this.orgSettingServices=o,this.utilsService=r,this.approverTypes=a,this.filterService=s,this.dialogs=l,this.approvalLevels=[],this.terminationReasonType=e.Models.TerminationReasonType,this.approverGroups=[],this.filteredApprovers=[],this.selectedRoles=[],this.orgSettingServices.getTerminationSettings().then(function(e){c.initTerminationSettings(e),c.setApprovalFlowDropdown()})}return t.prototype.setApprovalFlowDropdown=function(){var e=this;angular.forEach(this.approverTypes.getAll(),function(t,i){var n=e.approvalLevels.filter(function(e){return e.approvers.filter(function(e){return e.approverType==t.id}).length>0}).length;i&&!n&&e.approverGroups.push({approverType:t.id,approverId:0,approverName:t.title,id:-t.id,category:"Roles"})}),this.filteredApprovers=this.approverGroups},t.prototype.addApproverLevel=function(){this.isModelChanged=!0,this.approvalLevels.length&&0==this.approvalLevels[this.approvalLevels.length-1].approvers.length?this.notificationService.information("Please add at least one approver"):this.approvalLevels.push(new SharedModel.ApproverLevel({}))},t.prototype.updateApproverList=function(e,t,i){this.isModelChanged=!0,e.approverType?i?(this.selectedRoles=this.selectedRoles.filter(function(t){return t.approverType!=e.approverType}),this.filteredApprovers.push(e)):(this.filteredApprovers=this.filteredApprovers.filter(function(t){return t.approverType!=e.approverType}),this.selectedRoles.push(e)):i?this.filteredApprovers.push(e):this.filteredApprovers=this.filteredApprovers.filter(function(t){return t.id!=e.id})},t.prototype.getFilteredEmployees=function(e){var t=this;if(e&&e.length>=2)return this.utilsService.getMatchedEmployees(e).then(function(e){if(!e[0].noResults){var i=t.filterService("xor")(t.approverGroups,t.selectedRoles,"approverType");angular.forEach(e,function(e){t.isEmployeeSelected(e)||(e.category="Employees",i.push(e))}),t.filteredApprovers=i}})},t.prototype.isEmployeeSelected=function(e){for(var t=0;t<this.approvalLevels.length;t++){if(this.approvalLevels[t].approvers.find(function(t){return t.approverId==e.id}))return!0}return!1},t.prototype.saveTerminationSettings=function(){var e=this;this.isModelChanged=!1;var t=[];this.approvalLevels=this.approvalLevels.filter(function(e){return e.approvers.length>0});for(var i=0;i<this.approvalLevels.length;i++){var n=new SharedModel.ApproverLevel({level:i+1});if(0==this.approvalLevels[i].approvers.length)break;this.approvalLevels[i].approvers.forEach(function(t){t.approverType?n.approvers.push(new SharedModel.Approver({approverType:t.approverType,approverId:t.approverId,approverName:t.approverName})):t.id&&t.id>0&&n.approvers.push(new SharedModel.Approver({approverType:e.approverTypes.employee.id,approverId:t.id,approverName:t.displayName}))}),t.push(n)}this.terminationSettings.approverLevels=t,this.orgSettingServices.saveTerminationSettings(this.terminationSettings).then(function(t){e.initTerminationSettings(t),e.notificationService.success("Employee exit settings updated successfully")})},t.prototype.initTerminationSettings=function(t){this.terminationSettings=new e.Models.TerminationSettings(t),this.terminationSettings.approverLevels.forEach(function(e){e.approvers.forEach(function(e){e.approverType?e.category="Roles":e.category="Employee"})}),this.approvalLevels=angular.copy(this.terminationSettings.approverLevels),this.updateReasonTypes()},t.prototype.openAddReasonModal=function(t,i){i&&i.id?this.model=angular.copy(i):this.model=new e.Models.TerminationReason({terminationReasonType:t}),this.modalInstance=this.modalService.open({templateUrl:"addExitReasonTemplate",windowClass:"structure-compare small-btn",scope:this.scope})},t.prototype.saveExitReason=function(){var t=this;this.form.reasonCollectionForm.$valid&&this.orgSettingServices.organization.save({action:"terminationreason"},this.model,function(i){t.terminationSettings.terminationReasons=i.terminationReasons.map(function(t){return new e.Models.TerminationReason(t)}),t.updateReasonTypes(),t.modalInstance.close(),t.notificationService.success((t.model.terminationReasonType==e.Models.TerminationReasonType.Voluntary?"Voluntary":"Company")+" actions reason "+t.model.reason+" added successfully.")})},t.prototype.updateExitReason=function(){var t=this;this.form.reasonCollectionForm.$valid&&this.orgSettingServices.organization.update({action:"terminationreason",id:null},this.model,function(i){i.isUpdated&&(t.terminationSettings.terminationReasons.find(function(e){return e.id==t.model.id}).reason=t.model.reason,t.modalInstance.close(),t.notificationService.success((t.model.terminationReasonType==e.Models.TerminationReasonType.Voluntary?"Voluntary":"Company")+" actions reason "+t.model.reason+" updated successfully."))})},t.prototype.deleteExitReason=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure you want to delete this reason?").result.then(function(){t.orgSettingServices.organization.delete({action:"terminationreason",id:e.id},function(i){i.isDeleted?(t.terminationSettings.terminationReasons=t.terminationSettings.terminationReasons.filter(function(t){return t.id!=e.id}),t.updateReasonTypes(),t.notificationService.success(e.reason+" reason deleted successfully.")):t.notificationService.error(e.reason+" reason cannot be deleted because it is assigned to employees.")})})},t.prototype.updateReasonTypes=function(){var e=this;this.voluntaryReasons=this.terminationSettings.terminationReasons.filter(function(t){return t.terminationReasonType==e.terminationReasonType.Voluntary}),this.involuntaryReasons=this.terminationSettings.terminationReasons.filter(function(t){return t.terminationReasonType==e.terminationReasonType.InVoluntary})},t.prototype.doesReasonExist=function(e){var t=this;if(this.model.id&&this.terminationSettings.terminationReasons.find(function(e){return e.id==t.model.id}).reason.toUpperCase()==(e||"").toUpperCase())return!0;return!this.terminationSettings.terminationReasons.find(function(i){return(i.reason||"").toUpperCase()==e.toUpperCase()&&i.terminationReasonType==t.model.terminationReasonType})},t.$inject=["$scope","$uibModal","NotificationService","OrgSettingServices","Utils","ApproverType","$filter","dialogs"],t}(),o=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y,h){var f=this;this.employeeId=t,this.qService=i,this.timeDuration=n,this.notificationService=o,this.modalInstanceService=r,this.exitService=a,this.modalService=s,this.scope=l,this.appContext=c,this.dialogService=p,this.employeeLeavesServices=u,this.employeeProfileActionsService=d,this.isUpdateRequest=m,this.isThroughUrl=y,this.employeeExitService=h,this.terminationReasonType=e.Models.TerminationReasonType,this.leaveNoticePeriodAction=e.Models.NoticePeriodAction,this.terminationReasons=[],this.noticePeriodLeaveActions=[{name:"None",id:this.leaveNoticePeriodAction.None},{name:"Extend",id:this.leaveNoticePeriodAction.Extend}],this.leaveAvailabilityOptions=[{name:"Can Apply Leave",value:!0},{name:"Can't Apply Leave",value:!1}];var g=[this.exitService.getEmployee(this.employeeId),this.exitService.getEmployeeExitInfo(this.employeeId)];this.hasLeaveFeature=this.appContext.isFeaturePresent("LEAVES"),this.appContext.currentUser().then(function(e){f.currentEmployee=e}),this.qService.all(g).then(function(t){if(f.employeeDetails=t[0],f.exitSettings=t[1].exitSettings,t[1].noticePeriod||t[1].defaultNoticePeriod?(f.noticePeriod=t[1].noticePeriod||t[1].defaultNoticePeriod,f.defaultNoticePeriod=f.noticePeriod.duration+" "+n.getById(f.noticePeriod.unit).title,f.originalNoticeDays=f.getNoticePeriodInDays(f.noticePeriod),f.originalNoticeDaysIncludeStartDate=f.originalNoticeDays>0?f.originalNoticeDays-1:0):f.originalNoticeDays=0,t[1].exitRequest&&t[1].exitRequest.id){f.selectTerminationReasons(t[1].exitRequest.terminationType),f.exitRequest=new e.Models.ExitRequest(t[1].exitRequest);var i=angular.copy(f.exitRequest.advanceNoticeDate);f.exitRequest.originalLastWorkingDate=new Date(i.setDate(i.getDate()+f.originalNoticeDaysIncludeStartDate))}else{f.exitRequest=new e.Models.ExitRequest({terminationType:e.Models.TerminationReasonType.InVoluntary,advanceNoticeProvided:!0,advanceNoticeDate:new Date}),f.selectTerminationReasons(e.Models.TerminationReasonType.InVoluntary),f.exitRequest.noticePeriodInDays=f.getNoticePeriodInDays(f.noticePeriod);i=angular.copy(f.exitRequest.advanceNoticeDate);var o=f.exitRequest.noticePeriodInDays>0?f.exitRequest.noticePeriodInDays-1:0;f.exitRequest.lastWorkingDate=new Date(i.setDate(i.getDate()+o)),f.exitRequest.originalLastWorkingDate=angular.copy(f.exitRequest.lastWorkingDate)}if(f.exitRequest&&!f.exitRequest.lastWorkingDate){f.exitRequest.noticePeriodInDays=f.getNoticePeriodInDays(f.noticePeriod);i=angular.copy(f.exitRequest.advanceNoticeDate),o=f.exitRequest.noticePeriodInDays>0?f.exitRequest.noticePeriodInDays-1:0;f.exitRequest.lastWorkingDate=new Date(i.setDate(i.getDate()+o)),f.exitRequest.originalLastWorkingDate=angular.copy(f.exitRequest.lastWorkingDate)}f.hasLeaveFeature&&f.getLeaveStats()})}return t.prototype.getNoticePeriodInDays=function(e){if(!e)return 0;var t=0,i=e.duration;switch(e.unit){case this.timeDuration.days.id:t=i;break;case this.timeDuration.weeks.id:t=7*i;break;case this.timeDuration.months.id:var n=new Date,o=Math.abs(new Date(n.getFullYear(),n.getMonth()+i,n.getDate()).getTime()-n.getTime());if(30==n.getDate()||31==n.getDate()){var r=new Date(n.getFullYear(),n.getMonth()+i+1,0);n.getDate()>r.getDate()&&(o=Math.abs(r.getTime()-n.getTime()))}t=Math.ceil(o/864e5)}return t},t.prototype.updateNoticePeriod=function(){if(this.exitRequest.advanceNoticeDate&&this.exitRequest.lastWorkingDate&&this.exitRequest.lastWorkingDate>=this.exitRequest.advanceNoticeDate?this.exitRequest.noticePeriodInDays=Math.ceil(Math.abs(this.exitRequest.lastWorkingDate.getTime()-this.exitRequest.advanceNoticeDate.getTime())/864e5)+1:this.exitRequest.noticePeriodInDays=0,this.exitRequest.advanceNoticeDate){var e=angular.copy(this.exitRequest.advanceNoticeDate);this.exitRequest.originalLastWorkingDate=new Date(e.setDate(e.getDate()+this.originalNoticeDaysIncludeStartDate))}},t.prototype.updateLastWorkingDate=function(){if(this.exitRequest.noticePeriodInDays>0&&!isNaN(this.exitRequest.lastWorkingDate.getTime())){var e=new Date(this.exitRequest.advanceNoticeDate.valueOf()),t=this.exitRequest.noticePeriodInDays>0?this.exitRequest.noticePeriodInDays-1:0;e.setDate(e.getDate()+t),this.exitRequest.lastWorkingDate=angular.copy(e)}else this.exitRequest.lastWorkingDate=angular.copy(this.exitRequest.advanceNoticeDate),this.exitRequest.noticePeriodInDays=1},t.prototype.selectTerminationReasons=function(t){this.terminationReasons=t==e.Models.TerminationReasonType.Voluntary?this.exitSettings.resignationReasons:this.exitSettings.terminationReasons,this.exitRequest&&t==e.Models.TerminationReasonType.Voluntary&&(this.exitRequest.advanceNoticeProvided=!0)},t.prototype.resetExtendNoticePeriodDays=function(){this.exitRequest.extendedDays=0,this.exitRequest.extendedLastWorkingDate=this.exitRequest.lastWorkingDate},t.prototype.saveExitRequest=function(){var e=this;this.currentEmployee&&this.currentEmployee.id==this.employeeDetails.id?this.dialogService.notify("Application notification","Terminating yourself is not allowed since, it will block your access to the Keka application.",{keyboard:!1,backdrop:"static"}).result.finally(function(){e.closeModal()}):this.form.employeeExitDetailsForm.$valid&&(this.exitRequest.employeeId=this.employeeDetails.id,this.isRequestInProgress=!0,this.exitService.saveEmployeeExitRequest(this.employeeDetails.id,this.exitRequest).then(function(t){t.id?(e.notificationService.success("Exit has been initiated"),e.exitRequest.id=t.id,e.exitRequest.exitRequestStatus=1,e.exitRequest.requestedOn=new Date,e.closeModal()):e.notificationService.error("An error occurred while creating exit request."),e.isRequestInProgress=!1},function(t){e.notificationService.error(t.data.message),e.isRequestInProgress=!1}))},t.prototype.updateExitRequest=function(){var t=this;this.currentEmployee&&this.currentEmployee.id==this.employeeDetails.id?this.dialogService.notify("Application notification","Terminating yourself is not allowed since, it will block your access to the Keka application.",{keyboard:!1,backdrop:"static"}).result.finally(function(){t.closeModal()}):this.form.employeeExitDetailsForm.$valid&&(this.isRequestInProgress=!0,this.exitService.updateEmployeeExitRequest(this.employeeDetails.id,this.exitRequest).then(function(i){i.exitRequest&&(t.exitRequest=new e.Models.ExitRequest(i.exitRequest),t.notificationService.success("Exit request is updated"),t.closeModal()),t.isRequestInProgress=!1},function(e){t.notificationService.error("An error occurred while updating exit request."),t.isRequestInProgress=!1}))},t.prototype.closeModal=function(){this.modalInstanceService.close({exitRequest:this.exitRequest,isThroughUrl:this.isThroughUrl})},t.prototype.buildLeaveSummary=function(){var t=this;this.leaveStats.leaveSummary.typeSummary.forEach(function(i){var n=t.exitRequest.leaveActions.leaveRestrictions.find(function(e){return e.typeId==i.type.id});if(n){var o=t.exitRequest.leaveActions.leaveRestrictions.indexOf(n);o>-1&&(t.exitRequest.leaveActions.leaveRestrictions[o].balance=i.actualAvailableInDays,t.exitRequest.leaveActions.leaveRestrictions[o].canApplyLeave=t.leaveConfigLookup[i.type.id].leaveRestrictions.allowedDuringNoticePeriod,t.exitRequest.leaveActions.leaveRestrictions[o].hasUpperLimit=t.leaveConfigLookup[i.type.id].leaveQuota.hasUpperLimit)}else t.leaveConfigLookup[i.type.id].leaveRestrictions.allowedDuringNoticePeriod?e.Models.NoticePeriodAction.Extend:e.Models.NoticePeriodAction.None,t.exitRequest.leaveActions.leaveRestrictions.push(new e.Models.LeaveTypeRestriction({typeId:i.type.id,balance:i.actualAvailableInDays,canApplyLeave:t.leaveConfigLookup[i.type.id].leaveRestrictions.allowedDuringNoticePeriod,noticePeriodExtensionInDays:t.leaveConfigLookup[i.type.id].leaveRestrictions.noticePeriodExtensionInstances,action:t.leaveConfigLookup[i.type.id].leaveRestrictions.allowedDuringNoticePeriod?e.Models.NoticePeriodAction.Extend:e.Models.NoticePeriodAction.None,hasUpperLimit:t.leaveConfigLookup[i.type.id].leaveQuota.hasUpperLimit}))}),this.exitRequest.leaveActions.leaveRestrictions=this.exitRequest.leaveActions.leaveRestrictions.filter(function(e){return t.leaveConfigLookup[e.typeId]})},t.prototype.buildLeaveTypeLookup=function(){var e=this;this.leaveConfigLookup={},this.leaveStats.leavePlan.configuration.forEach(function(t){e.leaveConfigLookup[t.leaveType.id]=t})},t.prototype.rejectExitRequest=function(){this.cancelModalInstance=this.modalService.open({templateUrl:"exitRejectReason",scope:this.scope,windowClass:"structure-compare small-btn"})},t.prototype.approveExitRequest=function(){var t=this;this.currentEmployee&&this.currentEmployee.id==this.employeeDetails.id?this.dialogService.notify("Application notification","Approving of exit request yourself is not allowed since, it will block your access to the Keka application.",{keyboard:!1,backdrop:"static"}).result.finally(function(){t.closeModal()}):(this.isRequestInProgress=!0,this.exitService.approveEmployeeExitRequest(this.employeeDetails.id,this.exitRequest).then(function(i){i.requestStatus>0&&(t.exitRequest=new e.Models.ExitRequest(t.exitRequest),t.exitRequest.exitRequestStatus=i.requestStatus,t.notificationService.success("Exit request is approved"),t.closeModal()),t.isRequestInProgress=!1},function(e){t.notificationService.error("An error occurred while updating exit request."),t.isRequestInProgress=!1}))},t.prototype.getLeaveStats=function(){var e=this;return this.employeeExitService.getEmployeeLeaveStats(this.employeeId,this.exitRequest.extendedLastWorkingDate?this.exitRequest.extendedLastWorkingDate.dateOnlyString():null).then(function(t){e.leaveStats=t,e.buildLeaveTypeLookup(),e.buildLeaveSummary()})},t.prototype.submitReject=function(){var t=this;this.rejectForm.rejectExitRequest.$valid&&(this.isRequestInProgress=!0,this.exitService.rejectEmployeeExitRequest(this.exitRequest.employeeId,this.rejectComment).then(function(i){i.isRejected?(t.notificationService.success("Exit request rejected successfully"),t.exitRequest.exitRequestStatus=e.Models.ExitRequestStatus.Rejected,t.cancelModalInstance.close(),t.closeModal()):(t.cancelModalInstance.close(),t.notificationService.error("An error occurred while rejecting exit request.")),t.isRequestInProgress=!1},function(e){t.isRequestInProgress=!1}))},t.$inject=["EmployeeId","$q","TimeDuration","NotificationService","$uibModalInstance","ExitService","$uibModal","$scope","AppContext","dialogs","EmployeeLeavesServices","EmployeeProfileActionsService","isUpdateRequest","isThroughUrl","EmployeeExitService"],t}(),r=function(){function e(){}return e.$inject=[],e}(),a=function(){function t(t,i,n,o){var r=this;this.uibModal=t,this.employeeExitService=i,this.qService=n,this.modalService=o,this.exitRequests=[],this.qService.all([this.employeeExitService.getAllSeflResignedRequests(),this.employeeExitService.getExitReasons()]).then(function(t){r.exitRequests=t[0].map(function(t){return new e.Models.EmployeeExitListItem(t)}),r.exitSettings=t[1],r.buildTerminationReasonLookup()})}return t.prototype.buildTerminationReasonLookup=function(){var e=this;this.terminationReasonLookup={},this.exitSettings.resignationReasons.forEach(function(t){e.terminationReasonLookup[t.id]=t.reason})},t.prototype.openResignApproval=function(t){var i=this;this.currentOpenModalInstance=this.modalService.open({templateUrl:"initiateEmployeeExit",windowClass:"full-screen-modal dark-modal employee-exit-modal action-content step-1-saperator",controller:o,controllerAs:"ctrl",backdrop:"static",resolve:{EmployeeId:function(){return t},currentOpenModalInstance:function(){return i.currentOpenModalInstance}}}),this.currentOpenModalInstance.result.then(function(t){t.exitRequestStatus!=e.Models.ExitRequestStatus.Approved&&t.exitRequestStatus!=e.Models.ExitRequestStatus.Canceled||(i.exitRequests=i.exitRequests.filter(function(e){return e.id!=t.employeeId}))})},t.prototype.openExitProcessWizard=function(t){var i=this;this.currentOpenModalInstance=this.modalService.open({templateUrl:"employeeExitProcess",windowClass:"full-screen-modal dark-modal employee-exit-modal wizard-head action-content step-1-saperator",controller:u,controllerAs:"ctrl",resolve:{EmployeeId:function(){return t},currentOpenModalInstance:function(){return i.currentOpenModalInstance}}}),this.currentOpenModalInstance.result.then(function(t){t.exitRequestStatus!=e.Models.ExitRequestStatus.Approved&&t.exitRequestStatus!=e.Models.ExitRequestStatus.Canceled||(i.exitRequests=i.exitRequests.filter(function(e){return e.id!=t.employeeId}))})},t.$inject=["$uibModal","EmployeeExitService","$q","$uibModal"],t}(),s=function(){function t(t,i,n,o,r,a,s){var l=this;this.modalService=t,this.employeeExitService=i,this.qService=n,this.notificationService=o,this.scope=r,this.dialogs=a,this.filterService=s,this.exitRequests=[],this.exitRequestStatus=e.Models.ExitRequestStatus,this.exitStatus=e.Models.ExitStatus,this.qService.all([this.employeeExitService.getAllPendingExitRequests(),this.employeeExitService.getExitReasons()]).then(function(t){l.exitRequests=l.filterService("orderBy")(t[0].map(function(t){return new e.Models.EmployeeExitListItem(t)}),"lastWorkingDate"),l.exitSettings=t[1],l.buildTerminationReasonLookup()}),this.scope.$on("refreshPendingRequests",function(e,t){var i=l.exitRequests.findIndex(function(e){return e.id==t.request.employeeId});i>-1&&(l.exitRequests[i].mapFromExitRequest(t.request),l.exitRequests=l.exitRequests.filter(function(e){return 1==e.requestStatus||3==e.requestStatus}))})}return t.prototype.openExitProcessWizard=function(e){var t=this;this.currentOpenModalInstance=this.modalService.open({templateUrl:"employeeExitProcess",windowClass:"full-screen-modal dark-modal employee-exit-modal wizard-head action-content step-1-saperator",controller:u,controllerAs:"ctrl",resolve:{EmployeeId:function(){return e},currentOpenModalInstance:function(){return t.currentOpenModalInstance}}}),this.currentOpenModalInstance.result.then(function(e){},function(e){var i=t.exitRequests.findIndex(function(t){return t.id==e.employeeId});i>-1&&(t.exitRequests[i].mapFromExitRequest(e),t.exitRequests=t.exitRequests.filter(function(e){return 1==e.requestStatus||3==e.requestStatus}),delete t.currentOpenModalInstance)})},t.prototype.buildTerminationReasonLookup=function(){var e=this;this.terminationReasonLookup={},this.exitSettings.terminationReasons.forEach(function(t){e.terminationReasonLookup[t.id]=t.reason}),this.exitSettings.resignationReasons.forEach(function(t){e.terminationReasonLookup[t.id]=t.reason})},t.prototype.rejectExitRequest=function(e){this.currentCancelId=e,this.rejectComment=null,this.rejectModalInstance=this.modalService.open({templateUrl:"exitRejectReason",scope:this.scope,windowClass:"structure-compare small-btn"})},t.prototype.submitReject=function(){var e=this;this.rejectForm.rejectExitRequest.$valid&&this.employeeExitService.cancelEmployeeExitRequest(this.currentCancelId,this.rejectComment).then(function(t){t.isDeleted?(e.notificationService.success("Exit request rejected successfully"),e.rejectModalInstance.close(),e.exitRequests=e.exitRequests.filter(function(t){return t.id!=e.currentCancelId}),e.currentCancelId=null):(e.rejectModalInstance.close(),e.notificationService.error("An error occurred while rejecting exit request."))})},t.prototype.cancelExit=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure want to cancel exit process ?").result.then(function(){t.employeeExitService.cancelEmployeeExitRequest(e,"").then(function(i){i.isDeleted?(t.notificationService.success("Exit request canceled successfully"),t.exitRequests=t.exitRequests.filter(function(t){return t.id!=e})):t.notificationService.error("An error occurred while canceling exit request.")},function(e){t.notificationService.error("An error occurred while canceling exit request.")})})},t.$inject=["$uibModal","EmployeeExitService","$q","NotificationService","$scope","dialogs","$filter"],t}(),l=function(){function t(t,i,n,o,r,a,s,l){var c=this;this.uibModal=t,this.employeeExitService=i,this.qService=n,this.modalService=o,this.filterService=r,this.scope=a,this.downloadService=s,this.notificationService=l,this.exitRequests=[],this.exitRequestStatus=e.Models.ExitRequestStatus,this.qService.all([this.employeeExitService.getAllCompletedExitRequests(),this.employeeExitService.getExitReasons()]).then(function(t){c.exitRequests=c.filterService("orderBy")(t[0].map(function(t){return new e.Models.EmployeeExitListItem(t)}),"lastWorkingDate"),c.exitSettings=t[1],c.buildTerminationReasonLookup()}),this.scope.$on("refreshPendingRequests",function(e,t){var i=c.exitRequests.findIndex(function(e){return e.id==t.request.employeeId});i>-1&&(c.exitRequests[i].mapFromExitRequest(t.request),c.exitRequests[i].isFinalStatement=angular.isDefined(t.isFinalStatement)?t.isFinalStatement:c.exitRequests[i].isFinalStatement,c.exitRequests=c.exitRequests.filter(function(e){return 5==e.requestStatus||6==e.requestStatus}))})}return t.prototype.buildTerminationReasonLookup=function(){var e=this;this.terminationReasonLookup={},this.exitSettings.terminationReasons.forEach(function(t){e.terminationReasonLookup[t.id]=t.reason}),this.exitSettings.resignationReasons.forEach(function(t){e.terminationReasonLookup[t.id]=t.reason})},t.prototype.downloadFFStatement=function(e){var t=this;this.downloadService.downloadFile("/api/payroll/exit/employee/"+e+"/export/exitstatement/").then(function(e){e.isDownloaded||t.notificationService.error("An error occurred while downloading F&F statement.")})},t.prototype.openExitProcessWizard=function(e){var t=this;this.currentOpenModalInstance=this.modalService.open({templateUrl:"employeeExitProcess",windowClass:"full-screen-modal dark-modal employee-exit-modal wizard-head action-content step-1-saperator",controller:u,controllerAs:"ctrl",resolve:{EmployeeId:function(){return e},currentOpenModalInstance:function(){return t.currentOpenModalInstance}}}),this.currentOpenModalInstance.result.then(function(e){},function(e){var i=t.exitRequests.findIndex(function(t){return t.id==e.employeeId});i>-1&&(t.exitRequests[i].mapFromExitRequest(e),t.exitRequests=t.exitRequests.filter(function(e){return 5==e.requestStatus||6==e.requestStatus}),delete t.currentOpenModalInstance)})},t.$inject=["$uibModal","EmployeeExitService","$q","$uibModal","$filter","$scope","FormDownloadService","NotificationService"],t}(),c=function(){function t(t,i,n,o){var r=this;this.uibModal=t,this.employeeExitService=i,this.qService=n,this.modalService=o,this.exitRequests=[],this.qService.all([this.employeeExitService.getAllSettledRequests(),this.employeeExitService.getExitReasons()]).then(function(t){r.exitRequests=t[0].map(function(t){return new e.Models.EmployeeExitListItem(t)}),r.exitSettings=t[1],r.buildTerminationReasonLookup()})}return t.prototype.buildTerminationReasonLookup=function(){var e=this;this.terminationReasonLookup={},this.exitSettings.terminationReasons.forEach(function(t){e.terminationReasonLookup[t.id]=t.reason}),this.exitSettings.resignationReasons.forEach(function(t){e.terminationReasonLookup[t.id]=t.reason})},t.prototype.openExitProcessWizard=function(e){var t=this;this.currentOpenModalInstance=this.modalService.open({templateUrl:"employeeExitProcess",windowClass:"full-screen-modal dark-modal employee-exit-modal wizard-head action-content step-1-saperator",controller:u,controllerAs:"ctrl",resolve:{EmployeeId:function(){return e},currentOpenModalInstance:function(){return t.currentOpenModalInstance}}})},t.$inject=["$uibModal","EmployeeExitService","$q","$uibModal"],t}(),p=function(){function t(t,i,n,o){var r=this;this.uibModal=t,this.employeeExitService=i,this.qService=n,this.filterService=o,this.exitRequests=[],this.qService.all([this.employeeExitService.getAllCanceledExitRequests(),this.employeeExitService.getExitReasons()]).then(function(t){r.exitRequests=r.filterService("orderBy")(t[0].map(function(t){return new e.Models.EmployeeExitListItem(t)}),"lastWorkingDate",!0),r.exitSettings=t[1],r.buildTerminationReasonLookup()})}return t.prototype.buildTerminationReasonLookup=function(){var e=this;this.terminationReasonLookup={},this.exitSettings.terminationReasons.forEach(function(t){e.terminationReasonLookup[t.id]=t.reason}),this.exitSettings.resignationReasons.forEach(function(t){e.terminationReasonLookup[t.id]=t.reason})},t.$inject=["$uibModal","EmployeeExitService","$q","$filter"],t}(),u=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y,h){this.employeeId=t,this.qService=i,this.employeesService=n,this.timeDuration=o,this.employeeExitService=r,this.currentOpenModalInstance=a,this.appContext=s,this.notificationService=l,this.modalService=c,this.scope=p,this.modalServiceInstance=u,this.state=d,this.rootScope=m,this.employeeLeavesServices=y,this.dialogs=h,this.currentIndex=0,this.leaveNoticePeriodAction=e.Models.NoticePeriodAction,this.hasLeaveFeature=this.appContext.isFeaturePresent("LEAVES"),this.getEmployeeExitDetails(this.employeeId),this.steps=[new SharedModel.Step(0,"Exit Notice","exitNotice","",!0),new SharedModel.Step(1,"Pending Activities","pendingActivities","",!0)],this.appContext.isFeaturePresent("PAYROLL")?(this.steps.push(new SharedModel.Step(2,"Payables & Dues","payableDues","",!0)),this.steps.push(new SharedModel.Step(3,"Finalize Settlement","finalizeSettlement","",!0))):this.steps.push(new SharedModel.Step(2,"Finalize Settlement","finalizeSettlement","",!0)),this.currentOpenModalInstance||(this.currentOpenModalInstance=this.modalServiceInstance)}return t.prototype.onNavigateTo=function(e){e<this.steps.length-1&&e<this.currentIndex&&(this.currentIndex=e)},t.prototype.dismissModal=function(){var e=this;this.wizardCtrl.checkAnyPendingChanges()?this.dialogs.confirm("Please Confirm","You have modified this exit request. Close and lose changes?").result.then(function(){e.dismissModalAndRedirect()},function(){}):this.dismissModalAndRedirect()},t.prototype.goNext=function(){this.wizardCtrl&&this.wizardCtrl.next()},t.prototype.getEmployeeExitDetails=function(t){var i=this,n=[this.employeeExitService.getEmployee(this.employeeId),this.employeeExitService.getEmployeeExitInfo(this.employeeId)];this.qService.all(n).then(function(t){i.employeeDetails=t[0],i.exitSettings=t[1].exitSettings,i.exitRequest=new e.Models.ExitRequest(t[1].exitRequest),i.isEmployeeExit=2==i.employeeDetails.jobDetails.exitStatus,i.exitRequest.exitRequestStatus==e.Models.ExitRequestStatus.Settled?(i.defaultNoticePeriod=i.employeeDetails.jobDetails.noticePeriod.duration+" "+i.timeDuration.getById(i.employeeDetails.jobDetails.noticePeriod.unit).title,i.originalNoticeDays=i.getNoticePeriodInDays(i.employeeDetails.jobDetails.noticePeriod),i.originalNoticeDaysIncludeStartDate=i.originalNoticeDays>0?i.originalNoticeDays-1:0):(i.defaultNoticePeriod=t[1].defaultNoticePeriod.duration+" "+i.timeDuration.getById(t[1].defaultNoticePeriod.unit).title,i.originalNoticeDays=i.getNoticePeriodInDays(t[1].defaultNoticePeriod),i.originalNoticeDaysIncludeStartDate=i.originalNoticeDays>0?i.originalNoticeDays-1:0);var n=angular.copy(i.exitRequest.advanceNoticeDate);if(i.exitRequest.originalLastWorkingDate=new Date(n.setDate(n.getDate()+i.originalNoticeDaysIncludeStartDate)),i.exitRequest&&!i.exitRequest.lastWorkingDate){i.exitRequest.noticePeriodInDays=angular.copy(i.originalNoticeDays);n=angular.copy(i.exitRequest.advanceNoticeDate);var o=i.exitRequest.noticePeriodInDays>0?i.exitRequest.noticePeriodInDays-1:0;i.exitRequest.lastWorkingDate=new Date(n.setDate(n.getDate()+o))}i.hasLeaveFeature&&i.getLeaveStats()})},t.prototype.buildLeaveSummary=function(){var t=this;this.leaveStats.leaveSummary.typeSummary.forEach(function(i){var n=t.exitRequest.leaveActions.leaveRestrictions.find(function(e){return e.typeId==i.type.id});if(n){var o=t.exitRequest.leaveActions.leaveRestrictions.indexOf(n);o>-1&&(t.exitRequest.leaveActions.leaveRestrictions[o].balance=i.actualAvailableInDays,t.exitRequest.leaveActions.leaveRestrictions[o].canApplyLeave=t.leaveConfigLookup[i.type.id].leaveRestrictions.allowedDuringNoticePeriod,t.exitRequest.leaveActions.leaveRestrictions[o].hasUpperLimit=t.leaveConfigLookup[i.type.id].leaveQuota.hasUpperLimit)}else t.exitRequest.leaveActions.leaveRestrictions.push(new e.Models.LeaveTypeRestriction({typeId:i.type.id,balance:i.actualAvailableInDays,canApplyLeave:t.leaveConfigLookup[i.type.id].leaveRestrictions.allowedDuringNoticePeriod,noticePeriodExtensionInDays:0,action:t.leaveNoticePeriodAction.None,hasUpperLimit:t.leaveConfigLookup[i.type.id].leaveQuota.hasUpperLimit}))}),this.exitRequest.leaveActions.leaveRestrictions=this.exitRequest.leaveActions.leaveRestrictions.filter(function(e){return t.leaveConfigLookup[e.typeId]})},t.prototype.buildLeaveTypeLookup=function(){var e=this;this.leaveConfigLookup={},this.leaveStats.leavePlan.configuration.forEach(function(t){e.leaveConfigLookup[t.leaveType.id]=t})},t.prototype.cancelExitRequest=function(){this.cancelModalInstance=this.modalService.open({templateUrl:"exitRejectReason",scope:this.scope,windowClass:"structure-compare small-btn"})},t.prototype.submitReject=function(){var t=this;this.rejectForm.rejectExitRequest.$valid&&this.employeeExitService.cancelEmployeeExitRequest(this.exitRequest.employeeId,this.rejectComment).then(function(i){i.isDeleted?(t.notificationService.success("Exit request rejected successfully"),t.exitRequest.exitRequestStatus=e.Models.ExitRequestStatus.Canceled,t.cancelModalInstance.close(),t.currentOpenModalInstance.dismiss(t.exitRequest),t.rootScope.$broadcast("refreshPendingRequests",{request:t.exitRequest}),"employees.exitmanagement.inprogress.employee"==t.state.current.name?location.href="/ui/#/org/exits/inexitprocess":t.state.go("^")):(t.cancelModalInstance.close(),t.notificationService.error("An error occurred while rejecting exit request."))})},t.prototype.getLeaveStats=function(){var e=this;return this.employeeExitService.getEmployeeLeaveStats(this.employeeId,this.exitRequest.extendedLastWorkingDate?this.exitRequest.extendedLastWorkingDate.dateOnlyString():null).then(function(t){e.leaveStats=t,e.buildLeaveTypeLookup(),e.buildLeaveSummary()})},t.prototype.getNoticePeriodInDays=function(e){var t=0,i=e.duration;switch(e.unit){case this.timeDuration.days.id:t=i;break;case this.timeDuration.weeks.id:t=7*i;break;case this.timeDuration.months.id:var n=new Date,o=Math.abs(new Date(n.getFullYear(),n.getMonth()+i,n.getDate()).getTime()-n.getTime());if(30==n.getDate()||31==n.getDate()){var r=new Date(n.getFullYear(),n.getMonth()+i+1,0);n.getDate()>r.getDate()&&(o=Math.abs(r.getTime()-n.getTime()))}t=Math.ceil(o/864e5)}return t},t.prototype.updateNoticePeriod=function(){this.exitRequest.advanceNoticeDate&&this.exitRequest.lastWorkingDate&&this.exitRequest.lastWorkingDate>=this.exitRequest.advanceNoticeDate?this.exitRequest.noticePeriodInDays=Math.ceil(Math.abs(this.exitRequest.lastWorkingDate.getTime()-this.exitRequest.advanceNoticeDate.getTime())/864e5):this.exitRequest.noticePeriodInDays=0},t.prototype.updateLastWorkingDate=function(){if(this.exitRequest.noticePeriodInDays>0&&!isNaN(this.exitRequest.lastWorkingDate.getTime())){var e=new Date(this.exitRequest.advanceNoticeDate.valueOf()),t=this.exitRequest.noticePeriodInDays>0?this.exitRequest.noticePeriodInDays-1:0;e.setDate(e.getDate()+t),this.exitRequest.lastWorkingDate=angular.copy(e)}else this.exitRequest.lastWorkingDate=angular.copy(this.exitRequest.advanceNoticeDate),this.exitRequest.noticePeriodInDays=0},t.prototype.dismissModalAndRedirect=function(){this.currentOpenModalInstance.dismiss(),this.rootScope.$broadcast("refreshPendingRequests",{request:this.exitRequest}),"employees.exitmanagement.inprogress.employee"==this.state.current.name?location.href="/ui/#/org/exits/inexitprocess":"employees.exitmanagement.completed.employee"==this.state.current.name?location.href="/ui/#/org/exits/completed":this.state.go("^")},t.$inject=["EmployeeId","$q","EmployeesService","TimeDuration","EmployeeExitService","currentOpenModalInstance","AppContext","NotificationService","$uibModal","$scope","$uibModalInstance","$state","$rootScope","EmployeeLeavesServices","dialogs"],t}(),angular.module("employees").controller("SelfResignationController",i).controller("ExitSettingsController",n).controller("RMEmployeeExitController",o).controller("ExitManangementController",r).controller("PendingExitsManageController",s).controller("CompletedExitsManageController",l).controller("CanceledExitsManageController",p).controller("ExitProcessController",u).controller("SettledExitManageController",c).controller("SelfResignedExitsController",a)}(e.Exit||(e.Exit={}))}(Employee||(Employee={}));var Org,Inbox,Comments;__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(t){!function(t){var i=function(t){function i(){return t.call(this)||this}return __extends(i,t),Object.defineProperty(i.prototype,"blockPostToServer",{get:function(){return this.exitRequest.exitRequestStatus==e.Models.ExitRequestStatus.Settled},enumerable:!0,configurable:!0}),i}(SharedPatterns.WizardController),n=function(t){function i(i,n,o,r,a,s,l,c){var p=t.call(this)||this;return p.employeeExitService=i,p.notificationService=n,p.scopeService=o,p.rootScope=r,p.modalStackService=a,p.state=s,p.dialogService=l,p.appContext=c,p.leaveNoticePeriodAction=e.Models.NoticePeriodAction,p.noticePeriodLeaveActions=[{name:"None",id:p.leaveNoticePeriodAction.None},{name:"Extend",id:p.leaveNoticePeriodAction.Extend}],p.leaveAvailabilityOptions=[{name:"Can Apply Leave",value:!0},{name:"Can't Apply Leave",value:!1}],p.terminationReasonType=e.Models.TerminationReasonType,p.terminationReasons=[],p.appContext.currentUser().then(function(e){p.currentEmployee=e}),p.hasLeaveFeature=p.appContext.isFeaturePresent("LEAVES"),p}return __extends(i,t),i.prototype.$onInit=function(){var e=this;this.wizardCtrl=this;var t=this.scopeService.$watch("$ctrl.exitSettings",function(){e.exitSettings&&e.exitRequest&&(e.selectTerminationReasons(e.exitRequest.terminationType),e.previousLastWorkingDay=angular.copy(e.exitRequest.lastWorkingDate),t())})},i.prototype.$onChanges=function(e){this.exitSettings&&this.exitRequest&&this.selectTerminationReasons(this.exitRequest.terminationType)},i.prototype.lastWorkingDayChanged=function(){this.previousLastWorkingDay.getDate()==this.exitRequest.lastWorkingDate.getDate()&&this.previousLastWorkingDay.getMonth()==this.exitRequest.lastWorkingDate.getMonth()&&this.previousLastWorkingDay.getFullYear()==this.exitRequest.lastWorkingDate.getFullYear()?this.lastWorkingDateChanged=!1:this.lastWorkingDateChanged=!0},i.prototype.resetExtendNoticePeriodDays=function(){this.exitRequest.extendedDays=0,this.exitRequest.extendedLastWorkingDate=this.exitRequest.lastWorkingDate},i.prototype.next=function(){var e=this;if(this.blockPostToServer)return t.prototype.next.call(this);this.currentEmployee&&this.currentEmployee.id==this.employeeDetails.id?this.dialogService.notify("Application notification","Terminating yourself is not allowed since, it will block your access to the Keka application.",{keyboard:!1,backdrop:"static"}).result.finally(function(){e.modalStackService.dismissAll(),e.rootScope.$broadcast("refreshPendingRequests",{request:e.exitRequest}),e.state.go("^")}):this.lastWorkingDateChanged?this.dialogService.confirm("Last working date changed","Change in last working date requires you to finalize exit request again.").result.then(function(){e.saveAndUpdateExitRequest()}):this.saveAndUpdateExitRequest()},i.prototype.saveAndUpdateExitRequest=function(){var i=this;this.form.employeeExitDetailsForm.$submitted=!0,this.form.employeeExitDetailsForm.$valid?(this.isRequestInProgress=!0,this.employeeExitService.updateEmployeeExitRequest(this.employeeDetails.id,this.exitRequest).then(function(n){i.isRequestInProgress=!1,n.exitRequest?(i.exitRequest=new e.Models.ExitRequest(n.exitRequest),i.exitRequest.originalLastWorkingDate=i.originalLastWorkingDate,i.exitRequest.leaveActions.leaveRestrictions.forEach(function(e){var t=i.leaveTypeConfig[e.typeId];t&&(e.canApplyLeave=t.leaveRestrictions.allowedDuringNoticePeriod,e.hasUpperLimit=t.leaveQuota.hasUpperLimit)}),i.employeeDetails.jobDetails.exitStatus=i.exitRequest.isFutureRelieving?1:2,i.notificationService.success("Exit notice details updated successfully"),t.prototype.next.call(i)):i.notificationService.error("An error occurred while updating exit notice details.")})):this.notificationService.error("Please fill the required fields to proceed.")},i.prototype.selectTerminationReasons=function(t){this.terminationReasons=t==e.Models.TerminationReasonType.Voluntary?this.exitSettings.resignationReasons:this.exitSettings.terminationReasons},i.prototype.updateNoticePeriod=function(){if(this.exitRequest.advanceNoticeDate&&this.exitRequest.lastWorkingDate&&this.exitRequest.lastWorkingDate>=this.exitRequest.advanceNoticeDate?(this.exitRequest.noticePeriodInDays=Math.ceil(Math.abs(this.exitRequest.lastWorkingDate.getTime()-this.exitRequest.advanceNoticeDate.getTime())/864e5),this.exitRequest.noticePeriodInDays=this.exitRequest.noticePeriodInDays>=0?this.exitRequest.noticePeriodInDays+1:0):this.exitRequest.noticePeriodInDays=0,this.exitRequest.advanceNoticeDate){var e=angular.copy(this.exitRequest.advanceNoticeDate);this.exitRequest.originalLastWorkingDate=new Date(e.setDate(e.getDate()+(this.originalNoticeDays>0?this.originalNoticeDays-1:0)))}},i.prototype.updateLastWorkingDate=function(){if(this.exitRequest.noticePeriodInDays>0&&!isNaN(this.exitRequest.lastWorkingDate.getTime())){var e=new Date(this.exitRequest.advanceNoticeDate.valueOf()),t=this.exitRequest.noticePeriodInDays>0?this.exitRequest.noticePeriodInDays-1:0;e.setDate(e.getDate()+t),this.exitRequest.lastWorkingDate=angular.copy(e)}else this.exitRequest.lastWorkingDate=angular.copy(this.exitRequest.advanceNoticeDate),this.exitRequest.noticePeriodInDays=1},i.$inject=["EmployeeExitService","NotificationService","$scope","$rootScope","$uibModalStack","$state","dialogs","AppContext"],i}(i),o=function(t){function i(i,n,o,r,a,s,l,c,p,u,d,m){var y=t.call(this)||this;return y.qService=i,y.utilityService=n,y.employeesService=o,y.modalService=r,y.scope=a,y.notificationServices=s,y.publicProfileServices=l,y.employeeExitService=c,y.appSettings=p,y.appContext=u,y.blobContainers=d,y.appFeatures=m,y.employeeReportees=[],y.employeeLookup={},y.assetRecovery=e.Models.AssetStatus,y.assetActions=[],y.viewModelEmployees=[],y.assetReasons=[],y.assetConditions=[],y.taskLists=[],y.isAllowedTasksCountExceeded=!1,y.assetRecoveryOptions=[{id:e.Models.AssetStatus.Available,title:"Recovered"},{id:e.Models.AssetStatus.NotAvailable,title:"Not Available"}],y.setFileUploadSettings=function(){y.fileUploadSettings=angular.copy(y.appSettings.fileUploadSettings),y.fileUploadSettings.acceptFileTypes=/(\.|\/)(jpe?g|png|doc|docx|pdf|txt|xps|rtf|xls|xlsx|csv)$/i,y.fileUploadSettings.allowedFileTypes="png,jpg,jpeg,doc,docx,pdf,rtf,xps,txt,xls,xlsx,csv",y.fileUploadSettings.maxNumberOfFiles=4,y.fileUploadSettings.maxFileSize=4194304,y.fileUploadSettings.dragZone="#dragZone"},y}return __extends(i,t),i.prototype.$onInit=function(){var e=this;this.wizardCtrl=this,this.hasEmployeeOnboardFeature=this.appContext.isFeaturePresent("EMPLOYEEONBOARD"),this.isPayrollFeatureExists=this.appContext.isFeaturePresent(this.appFeatures.Payroll.title),this.reporteeTransitions=this.exitRequest.reporteeTransitions,this.setFileUploadSettings(),this.buildEmployeeProfileIds(),this.getAssetConditionsAndReasons(),this.qService.all([this.publicProfileServices.getEmployeeProfilesByIds(this.viewModelEmployees),this.employeeExitService.getEmployeeReportees(this.employeeDetails.id),this.employeeExitService.getExitPendingActivities(this.employeeDetails.id)]).then(function(t){t[0].forEach(function(t){e.employeeLookup[t.id]=t}),e.assetActions=e.buildAssetActions(t[2].assetActions,t[2].employeeAssets),e.employeeReportees=t[1],e.buildReportingTransitions(),e.bindEmployeeProfiles(),e.getTaskLists()})},i.prototype.getAssetConditionsAndReasons=function(){var e=this;this.hasAssetsFeature&&this.qService.all([this.employeeExitService.getAssetConditions(),this.employeeExitService.getAssetStatusReasons()]).then(function(t){e.assetConditions=t[0],e.assetReasons=t[1]})},i.prototype.getMatchedEmployees=function(e){if(e&&e.length>1){var t=this.qService.defer();return this.utilityService.getMatchedEmployees(e).then(function(e){0==e.length&&e.push({noResults:!0}),t.resolve(e)}),t.promise}},i.prototype.buildReportingTransitions=function(){var t=this;this.employeeReportees.forEach(function(i){t.employeeLookup[i.id]=i,t.reporteeTransitions.transitions.some(function(e){return e.employeeId==i.id})||t.reporteeTransitions.transitions.push(new e.Models.EmployeeAssignment({employeeId:i.id}))}),this.reporteeTransitions.transitions=this.reporteeTransitions.transitions.filter(function(e){return e.employeeId in t.employeeLookup})},i.prototype.getTaskLists=function(){var e=this;this.employeeExitService.getExitTaskLists().then(function(t){e.taskLists=t.filter(function(e){return e.totalTasks>0})})},i.prototype.getTaskTemplates=function(e){var t=this;this.isAllowedTasksCountExceeded=!1,this.taskTemplates=null,this.taskList=this.taskLists.find(function(t){return t.id===e}),this.employeeExitService.getExitTaskTemplates(this.taskList.id).then(function(e){t.taskTemplates=e;var i=t.taskTemplates.reduce(function(e,i){return e+(void 0===t.exitRequest.exitTasks.find(function(e){return e.templateIdentifier===i.identifier})?1:0)},0);!t.hasEmployeeOnboardFeature&&i+t.exitRequest.exitTasks.length>20&&(t.taskTemplates=null,t.isAllowedTasksCountExceeded=!0)})},i.prototype.getAssigneesNames=function(e){return e.map(function(e){return e.name}).join(", ")},i.prototype.removeAttachment=function(e){this.newExitTask.attachments=this.newExitTask.attachments.filter(function(t){return t.name!=e.name})},i.prototype.bindEmployeeProfiles=function(){var e=this;this.reporteeTransitions.assignIndividually?this.reporteeTransitions.transitions.forEach(function(t){t.reportingManagerId&&(t.reportingManager=e.employeeLookup[t.reportingManagerId])}):!this.reporteeTransitions.assignIndividually&&this.reporteeTransitions.assignTo>0&&(this.reporteeTransitions.assignToEmp=this.employeeLookup[this.reporteeTransitions.assignTo]),this.exitRequest.exitTasks.forEach(function(t){t.assignedTo&&(t.assignToEmp=e.employeeLookup[t.assignedTo])})},i.prototype.buildEmployeeProfileIds=function(){var e=this;this.exitRequest.exitTasks.forEach(function(t){t.assignedTo&&-1==e.viewModelEmployees.indexOf(t.assignedTo)&&e.viewModelEmployees.push(t.assignedTo)}),!this.reporteeTransitions.assignIndividually&&this.reporteeTransitions.assignTo>0&&this.viewModelEmployees.push(this.reporteeTransitions.assignTo),this.reporteeTransitions.transitions.forEach(function(t){t.reportingManagerId&&-1==e.viewModelEmployees.indexOf(t.reportingManagerId)&&e.viewModelEmployees.push(t.reportingManagerId)}),this.isEmployeeExit&&this.reporteeTransitions.transitions.forEach(function(t){t.employeeId&&-1==e.viewModelEmployees.indexOf(t.employeeId)&&e.viewModelEmployees.push(t.employeeId)})},i.prototype.addNewExitTask=function(){this.newExitTask=new e.Models.ExitTask({}),this.newExitTask.attachments=[],this.modalInstance=this.modalService.open({templateUrl:"addNewExitTaskTemplate",scope:this.scope,windowClass:"structure-compare small-btn exit-process-container"})},i.prototype.addNewExitTaskList=function(){this.modalInstance=this.modalService.open({templateUrl:"addNewExitTaskTemplateList",scope:this.scope,windowClass:"structure-compare small-btn exit-process-container"})},i.prototype.editExitTask=function(e){var t=this;this.employeeExitService.getExitTask(this.employeeDetails.id,e).then(function(i){t.newExitTask=i,t.newExitTask.id=i.taskId,t.newExitTask.dueOn=new Date(t.newExitTask.dueOn);var n=t.exitRequest.exitTasks.findIndex(function(t){return t.id==e});t.newExitTask.assignToEmp=t.exitRequest.exitTasks[n].assignToEmp,t.modalInstance=t.modalService.open({templateUrl:"addNewExitTaskTemplate",scope:t.scope,windowClass:"structure-compare small-btn exit-process-container"})})},i.prototype.respondForTask=function(e){var t;this.modalService.open({templateUrl:"task-respond",controller:(t=function(){return function(e,t,i){this.exitTask=e,this._modalInstance=t,this.commentItemType=i}}(),t.$inject=["exitTask","$uibModalInstance","CommentItemType"],t),controllerAs:"ctrl",resolve:{exitTask:function(){return e}}})},i.prototype.saveTask=function(){var t=this;this.taskForm.exitTaskForm.$valid&&(this.newExitTask.assignedTo=this.newExitTask.assignToEmp.id,this.newExitTask.id>0?this.employeeExitService.updateExitTask(this.employeeDetails.id,this.newExitTask.id,this.newExitTask).then(function(e){if(e.isUpdated){var i=t.exitRequest.exitTasks.findIndex(function(e){return e.id==t.newExitTask.id});t.exitRequest.exitTasks[i]=t.newExitTask,t.exitRequest.exitTasks[i].assignToEmp=t.newExitTask.assignToEmp,t.employeeExitService.updateEmployeeExitRequest(t.exitRequest.employeeId,t.exitRequest).then(function(e){t.notificationServices.success("Exit Tasks updated successfully"),t.modalInstance.close()})}else t.notificationServices.error("Exit task updating failed"),t.modalInstance.close()}):this.employeeExitService.saveEmployeeExitTask(this.exitRequest.id,new e.Models.ExitTask(this.newExitTask)).then(function(i){if(i.id){t.newExitTask.id=i.id,t.newExitTask.commentIdentifier=i.commentIdentifier;var n=new e.Models.ExitTask(t.newExitTask);n.assignToEmp=t.newExitTask.assignToEmp,t.exitRequest.exitTasks.push(n),t.notificationServices.success("Exit Tasks added successfully"),t.modalInstance.close()}else t.notificationServices.error("Exit task adding failed"),t.modalInstance.close()},function(e){t.notificationServices.error("Exit task adding failed"),t.modalInstance.close()}))},i.prototype.bulkSaveTasks=function(){var e=this;this.submitted=!0,this.taskGroupId&&this.employeeExitService.saveTaskListAsExitTasks(this.exitRequest.id,this.taskList.id).then(function(t){t?(e.notificationServices.success(t.exitTasks.length-e.exitRequest.exitTasks.length==0?"Task list was already added.":t.exitTasks.length-e.exitRequest.exitTasks.length+" task(s) added from the task list"),e.exitRequest=t,e.publicProfileServices.getEmployeeProfilesByIds(e.exitRequest.exitTasks.map(function(e){return e.assignedTo})).then(function(t){t.forEach(function(t){e.employeeLookup[t.id]=t}),e.bindEmployeeProfiles()}),e.taskGroupId=null,e.taskList=null,e.taskTemplates=null,e.modalInstance.close()):(e.notificationServices.error("Exit task adding failed"),e.modalInstance.close())})},i.prototype.next=function(){var i=this;if(this.blockPostToServer)return t.prototype.next.call(this);if(0==this.employeeReportees.length&&0==this.assetActions.length||this.form.reporteeTransitionsForm.$valid){!this.exitRequest.reporteeTransitions.assignIndividually&&this.employeeReportees.length>0&&(this.exitRequest.reporteeTransitions.assignTo=this.reporteeTransitions.assignToEmp.id),this.assetActions.forEach(function(e){var t=i.assetConditions.find(function(t){return t.id==e.assetConditionId});e.assetConditionName=t?t.name:e.assetConditionName;var n=i.assetReasons.find(function(t){return t.id==e.assetStatusReasonId});e.assetStatusReasonName=n?n.name:e.assetStatusReasonName});var n=new e.Models.ReporteeTransitions(this.reporteeTransitions);this.isRequestInProgress=!0,this.employeeExitService.saveExitPendingActivities(this.exitRequest.id,{reporteeTransitions:n,exitTasks:this.exitRequest.exitTasks,assetActions:this.assetActions}).then(function(e){i.isRequestInProgress=!1,i.notificationServices.success("Employee exit activities saved successfully"),i.exitRequest.reporteeTransitions=n,t.prototype.next.call(i)})}else this.reporteeTransitionsFormSubmitted=!0,this.notificationServices.success("Please fill the required details")},i.prototype.updateTaskStatus=function(e){var t=this;this.employeeExitService.updateExitTask(this.employeeDetails.id,e.id,e).then(function(i){i.isUpdated?t.notificationServices.success("Updated task status successfully"):(t.notificationServices.error("Failed to update task"),e.status=!e.status)})},Object.defineProperty(i.prototype,"hasAssetsFeature",{get:function(){return this.appContext.isFeaturePresent(this.appFeatures.Assets.title)},enumerable:!0,configurable:!0}),i.prototype.buildAssetActions=function(t,i){var n=this,o={};return t.forEach(function(e){return o[e.employeeAssetId]=e}),(i.map(function(e){return e.id in o&&(e.amountToRecover=o[e.id].amountToRecover,e.chargeDamages=o[e.id].chargeDamages,e.descriptionOfDamages=o[e.id].descriptionOfDamages,e.recoverStatus=o[e.id].recoverStatus==n.assetRecovery.Assigned?"":o[e.id].recoverStatus,e.recoveredOn=o[e.id].recoveredOn,e.recoverTaskId=o[e.id].recoverTaskId,e.assetStatusReasonId=o[e.id].assetStatusReasonId,e.assetConditionId=o[e.id].assetConditionId,e.assetConditionName=o[e.id].assetConditionName,e.assetStatusReasonName=o[e.id].assetStatusReasonName),e})||[]).map(function(t){return new e.Models.AssetsView(t)})},i.$inject=["$q","Utils","EmployeesService","$uibModal","$scope","NotificationService","PublicProfileServices","EmployeeExitService","AppSettings","AppContext","BlobContainers","AppFeatures"],i}(i),r=function(t){function i(i,n,o,r,a,s,l,c,p,u,d,m,y,h,f){var g=t.call(this)||this;return g.scope=i,g.qService=n,g.notificationService=o,g.employeePayrollExitService=r,g.payrollLookupService=a,g.employeeExitService=s,g.modalService=l,g.dialogs=c,g.filter=p,g.AppContext=u,g.expenseClaimApprovalStatus=d,g.AppFeatures=m,g.state=y,g.payrollLookUpService=h,g.PayrollModel=f,g.onetimeTransaction=new e.Models.OneTimeTransaction,g.oneTimeType=!0,g.componentClaimStatus=e.Models.ComponentClaimStatus,g.remunerationType=Payroll.Configuration.Model.RemunerationType,g.isNoticePeriodBuyOutAllowed=!0,g.lastTenMonthsSalaries=[],g.PayActionOptions=e.Models.PayAction.getAll(),g.expenseClaimOptions=[{id:e.Models.ExpenseClaimStatus.Approved,title:"Approve"},{id:e.Models.ExpenseClaimStatus.Rejected,title:"Reject"}],g.expensePaymentModes=[{id:e.Models.ExpenseClaimPaymentMode.PaidWithPayroll,title:"Inside Payroll"},{id:e.Models.ExpenseClaimPaymentMode.PaidOutsidePayroll,title:"Outside Payroll"}],g.oneTimePaymentOptions=e.Models.PaymentPayAction.getAll(),g.expensePaymentOptions=[{id:e.Models.PaymentPayAction.Void,title:"Void (Never Pay)"},{id:e.Models.PaymentPayAction.Pay,title:"Pay"},{id:e.Models.PaymentPayAction.PaidOutSideKekaPayroll,title:"Paid outside keka payroll"}],g.onHoldPayActionOptions=[{id:e.Models.SalaryPayAction.ReleasePayment,title:"Release salary payout"},{id:e.Models.SalaryPayAction.Pay,title:"Process as salary"},{id:e.Models.SalaryPayAction.PayAsArrear,title:"Process as arrears"},{id:e.Models.SalaryPayAction.Void,title:"Void salary processing"},{id:e.Models.SalaryPayAction.PaymentVoid,title:"Void Salary payout"},{id:e.Models.SalaryPayAction.AlreadyPaid,title:"Already Paid"}],g.revisionPayActionOptions=[{id:e.Models.SalaryPayAction.Pay,title:"Pay"},{id:e.Models.SalaryPayAction.Void,title:"Void (Never Pay)"}],g.componentClaimOptions=[{id:e.Models.ComponentClaimStatus.Pending,title:"Pending"},{id:e.Models.ComponentClaimStatus.Approved,title:"Approve"},{id:e.Models.ComponentClaimStatus.Rejected,title:"Reject"}],g.calPayPercentage=function(e){var t=100*e.payAmount/e.balanceAmount;e.payPercentage=t},g.goToLeaveEncashmentSettings=function(){g.AppContext.isFeaturePresent("PAYGROUPS")?g.state.go("settings.payroll.leaveEncashment"):g.state.go("settings.payroll.misc.leaveencashmentpolicies")},g.expenseClaimStatus=d,g}return __extends(i,t),Object.defineProperty(i.prototype,"blockPostToServer",{get:function(){return!(this.exitRequest.exitRequestStatus!=e.Models.ExitRequestStatus.Settled&&!this.payrollDisabled)||this.exitPayablesSummary&&!this.exitPayablesSummary.isPreviousCycleFinalized},enumerable:!0,configurable:!0}),i.prototype.$onInit=function(){var t=this;this.wizardCtrl=this,this.hasPayGroupFeature=this.AppContext.isFeaturePresent(this.AppFeatures.Paygroups.title),this.employeeExitService.getDeductiontypes().then(function(e){t.oneTimeDeductionTypes=e},function(e){}),this.noticePeriodBuyOutPolicies=[],this.qService.all([this.employeePayrollExitService.getExitPayables(this.employeeDetails.id),this.employeeExitService.getEmployeeLeaveStats(this.employeeDetails.id,this.exitRequest.extendedLastWorkingDate?this.exitRequest.extendedLastWorkingDate.dateOnlyString():null),this.employeeExitService.getNoticePeriodBuyOutPolicies(this.employeeDetails.id)]).then(function(i){if(i[0].payrollDisabled)t.payrollDisabled=!0;else{t.oneTimePaymentTypes=i[0].oneTimePaymentTypes,t.leaveEncashmentConfig=i[0].leaveEncashmentConfig;var n=i[1],o={};n.leavePlan.configuration.forEach(function(e){o[e.leaveType.id]=e});var r=i[0].exitPayables;if(r.typeSummary=n.leaveSummary.typeSummary,r.typeSummary.forEach(function(e){e.hasUpperLimit=o[e.type.id].leaveQuota.hasUpperLimit}),t.exitPayablesSummary=new e.Models.EmployeeExitPayablesSummary(r),t.exitPayablesSummary.currentSalaryStructure=new t.PayrollModel.SalaryStructure(r.currentSalaryStructure),t.noticePeriodBuyOutPolicies=i[2],t.exitRequest.isPreviousCycleFinalized=t.exitPayablesSummary.isPreviousCycleFinalized,t.leaveEncashmentConfig&&t.leaveEncashmentConfig.encashmentPolicies.length>0){var a=t.leaveEncashmentConfig.encashmentPolicies.find(function(e){return e.isDefault})||t.leaveEncashmentConfig.encashmentPolicies[0];t.exitPayablesSummary.leaveBalanceEncashments.forEach(function(e){e.encashmentPolicyId||(e.encashmentPolicyId=a.identifier)})}t.actualNoticePeriodInDays=t.getDateDifference(t.exitRequest.originalLastWorkingDate,t.exitRequest.advanceNoticeDate)+1,t.noticePeriodShortDays=t.actualNoticePeriodInDays-t.exitRequest.noticePeriodInDays,t.noticePeriodShortDays<0&&(t.noticePeriodShortDays=0),t.payGroupId=i[0].exitPayables.exitInCycle.payGroupId,0!=i[0].exitPayables.noticePeriodBuyOutInfo.buyOutConfigurationId?(t.noticePeriodBuyOutModel=new e.Models.NoticePeriodBuyOutInfo(i[0].exitPayables.noticePeriodBuyOutInfo),t.setNoticePeriodAmount(),i[0].exitPayables.noticePeriodBuyOutInfo.areDaysOverridden||(t.noticePeriodBuyOutModel.days=0)):t.noticePeriodBuyOutModel=new e.Models.NoticePeriodBuyOutInfo({}),t.lastTenMonthsSalaries=[],t.exitPayablesSummary.gratuityDetails.noOfyears=t.getDateDifference(new Date(t.employeeDetails.jobDetails.dateJoined),new Date(t.exitRequest.lastWorkingDate))/365,t.exitPayablesSummary.gratuityDetails.noOfyears=t.exitPayablesSummary.gratuityDetails.noOfyears<5?Number(t.exitPayablesSummary.gratuityDetails.noOfyears.toFixed(2)):Math.round(t.exitPayablesSummary.gratuityDetails.noOfyears),t.lastDrawnSalary=t.exitPayablesSummary.gratuityDetails.lastDrawnSalary,t.blockPostToServer||t.exitPayablesSummary.gratuityDetails.isEmployeeEligibleForGratuity&&t.exitPayablesSummary.gratuityDetails.lastDrawnSalary>0&&t.exitPayablesSummary.gratuityDetails.isEmployeeEligibleForGratuity&&t.exitPayablesSummary.gratuityDetails.lastTenMonthsSalary.length>0||t.updateGratuityDetails(),t.blockPostToServer||0!=t.exitPayablesSummary.leaveEncashmentDetails.lastTenMonthsSalary.length||(t.exitPayablesSummary.leaveEncashmentDetails.isManualCalculation=!1,t.updateLeaveEncashmentTaxExemption())}},function(e){t.errorMessage=e.data.message})},i.prototype.next=function(){var i=this;return this.blockPostToServer?t.prototype.next.call(this):this.exitPayablesSummary?this.exitPayablesSummary.componentClaims.filter(function(e){return e.status==i.componentClaimStatus.Pending}).length>0?this.notificationService.error("There are pending component claims. Please reject/aprrove them to proceed to the next step."):void(this.form.exitPayableDues.$valid&&null==this.errorMessage?(this.isRequestInProgress=!0,this.noticePeriodBuyOutModel.update(this.noticePeriodShortDays),this.noticePeriodBuyOutModel.isBuyOutApplicable?this.exitPayablesSummary.noticePeriodBuyOutInfo=this.noticePeriodBuyOutModel:this.exitPayablesSummary.noticePeriodBuyOutInfo=new e.Models.NoticePeriodBuyOutInfo({}),this.exitPayablesSummary.leaveEncashmentDetails.payableAmount=this.exitPayablesSummary.totalLeaveEncashmentAmount,this.exitPayablesSummary.leaveEncashmentDetails.creditedLeaves=this.exitPayablesSummary.totalPaidLeavesCount,this.employeePayrollExitService.saveExitPayables(this.exitPayablesSummary.forEmployeeId,this.exitPayablesSummary).then(function(e){e.isSaved&&i.qService.all([i.employeePayrollExitService.saveGratuityDetils(i.exitPayablesSummary.forEmployeeId,i.exitPayablesSummary.gratuityDetails),i.employeePayrollExitService.saveLeaveEncashmentDetails(i.exitPayablesSummary.forEmployeeId,i.exitPayablesSummary.leaveEncashmentDetails)]).then(function(e){i.isRequestInProgress=!1,i.notificationService.success("Employee payables and Dues saved successfully"),t.prototype.next.call(i)})},function(e){i.isRequestInProgress=!1,i.notificationService.error(e.data.message)})):this.notificationService.error("Please fill the required fields to proceed.")):this.notificationService.error("Salary is not added for this employee. Please add salary to proceed to the next step.")},i.prototype.getDateDifference=function(e,t){var i=Math.abs(e.getTime()-t.getTime());return Math.ceil(i/864e5)},i.prototype.calPayAmount=function(e){var t=e.balanceAmount*e.payPercentage/100;e.payAmount=Number(t.toFixed(2))},i.prototype.checkAnyPendingChanges=function(){return this.form&&this.form.exitPayableDues.$dirty},i.prototype.getPaymentOptions=function(e){return this.oneTimePaymentOptions.filter(function(t){return 1==e.processedType||2!=t.id})},i.prototype.getonHoldPayActionOptions=function(t){var i=t.year==this.exitPayablesSummary.exitInCycle.year&&t.month==this.exitPayablesSummary.exitInCycle.month,n=[e.Models.SalaryPayAction.ReleasePayment];return t.isPaymentOnHold?n=[e.Models.SalaryPayAction.Pay,e.Models.SalaryPayAction.Void,e.Models.SalaryPayAction.PayAsArrear]:i&&(n=[e.Models.SalaryPayAction.PayAsArrear,e.Models.SalaryPayAction.ReleasePayment]),this.onHoldPayActionOptions.filter(function(e){return!n.some(function(t){return t==e.id})})},i.prototype.updateGratuityDetails=function(){var t=this;this.exitPayablesSummary.gratuityDetails.isEmployeeEligibleForGratuity&&(this.exitPayablesSummary.gratuityDetails.isOrgEligibleForGratuityAct||0!=this.exitPayablesSummary.gratuityDetails.lastTenMonthsSalary.length?this.exitPayablesSummary.gratuityDetails.isOrgEligibleForGratuityAct&&0==this.exitPayablesSummary.gratuityDetails.lastDrawnSalary?this.employeePayrollExitService.getLastDrawnSalary(this.exitPayablesSummary.forEmployeeId).then(function(e){t.exitPayablesSummary.gratuityDetails.lastDrawnSalary=e.amount,t.lastDrawnSalary=e.amount,t.calculateGratuityDetails()},function(e){t.notificationService.error("Error occured while fetching the last drawn salary")}):this.calculateGratuityDetails():0==this.lastTenMonthsSalaries.length?this.employeePayrollExitService.getLastTenMonthsSalary(this.exitPayablesSummary.forEmployeeId).then(function(i){t.lastTenMonthsSalaries=(i||[]).map(function(t){return new e.Models.SalaryDetials(t)}),t.exitPayablesSummary.gratuityDetails.lastTenMonthsSalary=angular.copy(t.lastTenMonthsSalaries),t.calculateGratuityDetails()},function(e){t.notificationService.error("Error occured while fetching the last ten months salary")}):(this.exitPayablesSummary.gratuityDetails.lastTenMonthsSalary=angular.copy(this.lastTenMonthsSalaries),this.calculateGratuityDetails()))},i.prototype.calculateGratuityDetails=function(){var e=this;this.employeePayrollExitService.calculateGratuityDetils(this.exitPayablesSummary.forEmployeeId,this.exitPayablesSummary.gratuityDetails).then(function(t){e.exitPayablesSummary.gratuityDetails.autoCalculatedAmount=Number(t.autoCalculatedAmount.toFixed(2)),e.exitPayablesSummary.gratuityDetails.payableAmount=Number(t.payableAmount.toFixed(2)),e.exitPayablesSummary.gratuityDetails.taxExemptedAmount=Number(t.taxExemptedAmount.toFixed(2))},function(t){e.notificationService.error("Error while calculating gratuity")})},i.prototype.updateLeaveEncashmentTaxExemption=function(){var t=this;0==this.exitPayablesSummary.leaveBalanceEncashments.filter(function(e){return!e.isValid}).length&&(this.exitPayablesSummary.leaveEncashmentDetails.excludeFromTaxExemption||0!=this.exitPayablesSummary.leaveEncashmentDetails.lastTenMonthsSalary.length?this.calculateLeaveEncashmentExemption():0!=this.lastTenMonthsSalaries.length?(this.exitPayablesSummary.leaveEncashmentDetails.lastTenMonthsSalary=angular.copy(this.lastTenMonthsSalaries),this.calculateLeaveEncashmentExemption()):this.employeePayrollExitService.getLastTenMonthsSalary(this.exitPayablesSummary.forEmployeeId).then(function(i){t.lastTenMonthsSalaries=(i||[]).map(function(t){return new e.Models.SalaryDetials(t)}),t.exitPayablesSummary.leaveEncashmentDetails.lastTenMonthsSalary=angular.copy(t.lastTenMonthsSalaries),t.calculateLeaveEncashmentExemption()},function(e){t.notificationService.error("Error occured while fetching the last ten months salary")}))},i.prototype.calculateLeaveEncashmentExemption=function(){var e=this;this.exitPayablesSummary.leaveEncashmentDetails.payableAmount=this.exitPayablesSummary.totalLeaveEncashmentAmount,this.exitPayablesSummary.leaveEncashmentDetails.creditedLeaves=this.exitPayablesSummary.totalPaidLeavesCount,this.exitPayablesSummary.leaveEncashmentDetails.excludeFromTaxExemption?this.exitPayablesSummary.leaveEncashmentDetails.taxExemptedAmount=0:this.employeePayrollExitService.calculateLeaveEncashmentDetails(this.exitPayablesSummary.forEmployeeId,this.exitPayablesSummary.leaveEncashmentDetails).then(function(t){e.exitPayablesSummary.leaveEncashmentDetails.taxExemptedAmount=t.exemptedAmount,e.exitPayablesSummary.leaveEncashmentDetails.cashEquivalentLeave=t.cashEquivalentLeave})},i.prototype.setNoticePeriodAmount=function(){var e=this;if(!this.exitRequest.isSettlementComplete&&this.exitRequest.isPreviousCycleFinalized){var t=this.noticePeriodBuyOutModel.areDaysOverridden?this.noticePeriodBuyOutModel.days:this.noticePeriodShortDays;if(0!=this.noticePeriodBuyOutModel.buyOutConfigurationId){var i=this.noticePeriodBuyOutPolicies.find(function(t){return t.id==e.noticePeriodBuyOutModel.buyOutConfigurationId});if(i){var n=this.evaluateExpression(i.expression);if(n.isEvaluated){var o=n.result;this.noticePeriodBuyOutModel.actualAmount=parseFloat((o*t).toFixed(2))}}}}},i.prototype.updateLeaveEncashmentAmount=function(e,t){var i=this.exitPayablesSummary.leaveBalanceEncashments[t].encashmentPolicyId,n=this.leaveEncashmentConfig.encashmentPolicies.find(function(e){return e.identifier==i});if(n){var o=this.evaluateExpression(n.expression);if(o.isEvaluated){var r=o.result;this.exitPayablesSummary.leaveBalanceEncashments[t].amount=parseFloat((r*this.exitPayablesSummary.leaveBalanceEncashments[t].balance).toFixed(2))}else this.exitPayablesSummary.leaveBalanceEncashments[t].error=o.exception}},i.prototype.evaluateExpression=function(e){var t=this.exitPayablesSummary.currentSalaryStructure.ctc,i={ctc:t,gross:this.exitPayablesSummary.currentSalaryStructure.getInSideCtcComponentsOtherThanBenefits().reduce(function(e,t){return e+t.amount},0)||t};this.exitPayablesSummary.currentSalaryStructure.breakup.items.forEach(function(e){null==i[e.componentName]&&(i[e.componentName]=e.amount)});var n=new SharedServices.ExpressionParser(i);return n.evalMathExpression(e),n},i.prototype.openAddOnetimeTransaction=function(e){this.onetimeTransactionItem=angular.copy(e),this.modalInstance=this.modalService.open({templateUrl:"addPredefinedOnetimePayment",scope:this.scope,windowClass:"structure-compare small-btn exit-process-container"})},i.prototype.openPastSalaryDetails=function(){var e=this;this.modalService.open({templateUrl:"last-tenmonth-salary",controller:c,controllerAs:"ctrl",windowClass:"structure-compare small-btn",backdrop:"static",resolve:{monthlySalaries:function(){return angular.copy(e.exitPayablesSummary.gratuityDetails.lastTenMonthsSalary)},isFieldSetDisable:function(){return e.exitRequest.isSettlementComplete||!e.exitRequest.isPreviousCycleFinalized}}}).result.then(function(t){t&&(e.exitPayablesSummary.gratuityDetails.lastTenMonthsSalary=t,e.calculateGratuityDetails())})},i.prototype.openTenMonthsSalaryForLeaveEncashment=function(){var e=this;this.modalService.open({templateUrl:"last-tenmonth-salary",controller:c,controllerAs:"ctrl",windowClass:"structure-compare small-btn",backdrop:"static",resolve:{monthlySalaries:function(){return angular.copy(e.exitPayablesSummary.leaveEncashmentDetails.lastTenMonthsSalary)},isFieldSetDisable:function(){return e.exitRequest.isSettlementComplete||!e.exitRequest.isPreviousCycleFinalized}}}).result.then(function(t){t&&(e.exitPayablesSummary.leaveEncashmentDetails.lastTenMonthsSalary=t,e.calculateLeaveEncashmentExemption())})},i.prototype.updateOnetimeTransactionItem=function(){var e=this;this.employeePayrollExitService.updateOneTimeTransaction(this.exitPayablesSummary.forEmployeeId,this.onetimeTransactionItem).then(function(t){t.isUpdated?(e.form.exitPayableDues.$dirty=!0,e.exitPayablesSummary.updateOneTimeTransaction(e.onetimeTransactionItem),e.notificationService.success("One-Time Transaction updated successfully."),e.modalInstance.close()):(e.notificationService.error("An error occurred while updating one-time payment."),e.modalInstance.close())})},i.prototype.saveOnetimeTransactionItem=function(){var t=this;this.mapToModel(),this.employeePayrollExitService.saveOneTimeTransaction(this.exitPayablesSummary.forEmployeeId,this.exitPayablesSummary.exitInCycle.id,this.onetimeTransaction).then(function(i){i.id?(t.onetimeTransactionItem.oneTimePaymentId=i.id,t.exitPayablesSummary.pendingOneTimeTransactions.push(new e.Models.OneTimeTransactionView(t.onetimeTransactionItem)),t.selectedPaymentType=null,t.selectedDeductionType=null,t.oneTimeType=!0,t.notificationService.success("One-Time Transaction added successfully"),t.modalInstance.close(),t.form.exitPayableDues.$dirty=!0):(t.notificationService.error("An error occurred while adding a one-time payment."),t.modalInstance.close())})},i.prototype.deleteOneTimeTransaction=function(e){var t=this;this.dialogs.confirm("Please confirm","Are you sure want to delete "+e.title+" of amount "+e.amount+" ? ").result.then(function(){t.employeePayrollExitService.deleteOneTimeTransaction(t.exitPayablesSummary.forEmployeeId,e.oneTimePaymentId).then(function(i){t.form.exitPayableDues.$dirty=!0,i.isDeleted?(t.exitPayablesSummary.deleteOneTimeTransaction(e.oneTimePaymentId),t.notificationService.success("One-Time Transaction deleted successfully.")):t.notificationService.error("An error occurred while deleting one-time payment.")})},function(){})},i.prototype.addCustomPayment=function(){var t=this;this.customPayableItem=new e.Models.CustomDeductionView({oneTimePaymentId:0}),this.modalInstance=this.modalService.open({templateUrl:"addCustomOnetimePayment",scope:this.scope,windowClass:"structure-compare small-btn exit-process-container"}),this.modalInstance.result.then(function(){t.customPayableItem.identifier=Math.random().toString(36).substr(2,5),t.exitPayablesSummary.addCustomDeduction(t.customPayableItem),t.form.exitPayableDues.$dirty=!0},function(){})},i.prototype.editCustomPayment=function(e){var t=this;this.customPayableItem=angular.copy(e),this.modalInstance=this.modalService.open({templateUrl:"addCustomOnetimePayment",scope:this.scope,windowClass:"structure-compare small-btn exit-process-container"}),this.modalInstance.result.then(function(){t.form.exitPayableDues.$dirty=!0,t.exitPayablesSummary.updateCustomDeduction(t.customPayableItem)},function(){})},i.prototype.deleteCustomPayment=function(e){var t=this;this.dialogs.confirm("Please confirm","Are you sure want to delete "+e.title+" of amount "+e.amount+" ? ").result.then(function(){t.exitPayablesSummary.deleteCustomDeduction(e.identifier),t.form.exitPayableDues.$dirty=!0},function(){})},i.prototype.mapToModel=function(){if(this.onetimeTransaction.amount=this.onetimeTransactionItem.amount,this.onetimeTransaction.comment=this.onetimeTransactionItem.comment,this.onetimeTransaction.employeeId=this.exitPayablesSummary.forEmployeeId,this.onetimeTransaction.isDeleted=!1,this.onetimeTransactionItem.payAction=0,this.oneTimeType){this.onetimeTransaction.TypeIdentifier=this.selectedPaymentType,this.onetimeTransaction.transactionType=3,this.onetimeTransactionItem.isDeduction=!1;var e=this.filter("filter")(this.oneTimePaymentTypes,{componentName:this.selectedPaymentType})[0];this.onetimeTransactionItem.title=e.title}else{this.onetimeTransaction.TypeIdentifier=this.selectedDeductionType,this.onetimeTransaction.transactionType=2,this.onetimeTransactionItem.isDeduction=!0;e=this.filter("filter")(this.oneTimeDeductionTypes,{identifier:this.selectedDeductionType})[0];this.onetimeTransactionItem.title=e.name}},i.prototype.openLoanOverride=function(e){var t=this;!this.exitRequest.isSettlementComplete&&this.exitRequest.isPreviousCycleFinalized&&this.modalService.open({templateUrl:"employee-loan-override",controller:a,controllerAs:"ctrl",resolve:{loan:function(){return t.employeePayrollExitService.getEmployeeLoanOutStanding(t.exitPayablesSummary.pendingLoans[e].id,t.employeeDetails.id,t.exitPayablesSummary.exitInCycle.id).then(function(e){return new Payroll.loan.model.EmployeeLoanDetails(e)})},exitRequest:function(){return t.exitRequest}}})},i.$inject=["$scope","$q","NotificationService","EmployeePayrollExitService","PayrollLookUpService","EmployeeExitService","$uibModal","dialogs","$filter","AppContext","ExpenseClaimStatus","AppFeatures","$state","PayrollLookUpService","PayrollModel"],i}(i),a=function(){function e(e,t,i,n,o){var r=this;this.loan=e,this.notificationService=i,this.$uibModalInstance=n,this.employeePayrollExitService=o,this.model={},this.LoanOverrideType=Payroll.loan.model.LoanOverrideType,this.RepaymentMode=Payroll.loan.model.RepaymentMode.getAll(),this.exitRequest=t,this.currentMonth=this.loan.currentInstallment.monthAndYear,this.employeePayrollExitService.calculateInterest(this.loan.employeeId,this.loan).then(function(e){r.currentMonthInterest=e.interestAmount}).then(function(){r.model=new Payroll.loan.model.Prepay({loanId:r.loan.id,employeeId:r.loan.employeeId,amount:Math.round(r.maxprepayAmount),overrideType:Payroll.loan.model.LoanOverrideType.Prepayment,overrideOption:r.loan.remainingTerm>1?Payroll.loan.model.EMIOverrideOptions.AdjustEMIAmount:Payroll.loan.model.EMIOverrideOptions.AdjustLoanTerm}),null!=r.loan.currentMonthOverride&&(r.model.repaymentMode=angular.isUndefined(r.loan.currentMonthOverride.repaymentMode)?Payroll.loan.model.RepaymentMode.SalaryDeduction:r.loan.currentMonthOverride.repaymentMode,r.model.notes=r.loan.currentMonthOverride.notes)})}return Object.defineProperty(e.prototype,"maxprepayAmount",{get:function(){var e=this.currentMonthInterest+this.loan.outstandingAmount;return this.loan.repaymentStatus==Payroll.loan.model.RepaymentStatus.NotStarted&&(e+=this.loan.preEMIInterest),Math.round(e)},enumerable:!0,configurable:!0}),e.prototype.saveLoanOverride=function(){var e=this;this.form.loanOverrideForm.$valid&&(this.disableSubmitButton=!0,this.employeePayrollExitService.saveOrUpdateOverride(this.loan.id,this.model,this.exitRequest.employeeId).then(function(t){var i=e.model.id?"Loan overrides update successfully":"Loan overrides added successfully";e.notificationService.success(i),e.$uibModalInstance.close(t)},function(t){e.notificationService.error(t.data.message)}).finally(function(){e.disableSubmitButton=!1}))},e.prototype.closeModal=function(){this.$uibModalInstance.dismiss()},e.$inject=["loan","exitRequest","NotificationService","$uibModalInstance","EmployeePayrollExitService"],e}();t.EmployeeLoanOverrideController=a;var s=function(t){function i(i,n,o,r,a,s,l,c,p,u,d){var m=t.call(this)||this;return m.qService=i,m.notificationService=n,m.employeePayrollExitService=o,m.EmployeeFinanceServices=r,m.modalStackService=a,m.employeeExitService=s,m.appSettings=l,m.dialogService=c,m.state=p,m.rootScope=u,m.downloadService=d,m.exitPayableTypes=e.Models.ExitPayableType,m.payActionOptions=e.Models.PayAction.getAll(),m.payAdvicePreview=[],m.payActionLookup=e.Models.PayAction,m}return __extends(i,t),Object.defineProperty(i.prototype,"blockPostToServer",{get:function(){return this.exitRequest.exitRequestStatus==e.Models.ExitRequestStatus.Settled||this.exitRequest.exitRequestStatus==e.Models.ExitRequestStatus.Finalized||!this.payrollDisabled&&(!this.exitRequest.isPreviousCycleFinalized||this.settlementErrors)},enumerable:!0,configurable:!0}),i.prototype.$onInit=function(){var t=this;if(this.wizardCtrl=this,this.payrollDisabled||this.exitRequest.exitRequestStatus!=e.Models.ExitRequestStatus.Settled&&!this.exitRequest.isPreviousCycleFinalized)this.exitRequest.settlementDate||(this.exitRequest.settlementDate=this.exitRequest.extendedLastWorkingDate);else{var i=[this.EmployeeFinanceServices.getPendingCycles({id:this.exitRequest.employeeId},5),this.employeePayrollExitService.getsettlmentSummary(this.exitRequest.employeeId)];this.qService.all(i).then(function(i){t.settlementErrors=i[1].error,t.warningList=i[1].warnings||[],t.exitRequest.exitRequestStatus=i[1].exitRequestStatus,t.settlementErrors||(t.exitRequest.settlementSummary=new e.Models.ExitSettlementSummary(i[1].settlementSummary),t.isDownloadenable=i[1].isFinalStatement,t.payCurrentSalary=i[1].payAction,t.buildPayAdviceGridOptions(),t.exitRequest.isSettlementComplete||(t.pendingCycles=i[0],t.resetSettlement()))},function(e){t.notificationService.error(e.data.message)})}},i.prototype.equals=function(e,t){return e.getMonth()==t.getMonth()&&e.getYear()==t.getYear()&&e.getDate()==t.getDate()},i.prototype.checkAnyPendingChanges=function(){return this.form&&(this.payrollDisabled?this.form.settledEmployeeForm.$dirty:this.form.settledDateEmployeeForm.$dirty)||this.exitRequest.exitRequestStatus==e.Models.ExitRequestStatus.Approved},i.prototype.next=function(){if(this.blockPostToServer)return this.rootScope.$broadcast("refreshPendingRequests",{request:this.exitRequest}),"employees.exitmanagement.inprogress.employee"==this.state.current.name?location.href="/ui/#/org/exits/inexitprocess":"employees.exitmanagement.completed.employee"==this.state.current.name?location.href="/ui/#/org/exits/completed":this.state.go("^"),this.modalStackService.dismissAll();this.payrollDisabled?this.settledForPayrollDisable():this.finalizeSettlement()},i.prototype.downloadFFStatement=function(){this.downloadService.downloadFile("/api/payroll/exit/employee/"+this.exitRequest.employeeId+"/export/exitstatement/?processedCycle="+this.exitRequest.settlementDate.dateOnlyString())},i.prototype.resetSettlement=function(){var t=this;switch(this.payCurrentSalary){case e.Models.PayAction.Pay:var i=this.pendingCycles.find(function(e){return t.exitRequest.settlementDate&&t.equals(e.to,t.exitRequest.settlementDate)})||this.pendingCycles[0];this.exitRequest.settlementDate=i.to;break;case e.Models.PayAction.DontPay:this.exitRequest.settlementDate=this.pendingCycles[0].to;break;case e.Models.PayAction.AlreadyPaid:this.exitRequest.settlementDate=this.exitRequest.extendedLastWorkingDate}},i.prototype.buildPayAdviceGridOptions=function(){this.payAdviceGrid=angular.copy(this.appSettings.gridSettings),this.payAdviceGrid.columnDefs=[{field:"componentTitle",displayName:"Component",width:200,cellTooltip:!0},{field:"amount",displayName:"Amount",width:150,cellFilter:"currency: 'Rs.'",cellTooltip:!0}],this.payAdviceGrid.enableColumnMenus=!1,this.payAdviceGrid.enableFiltering=!1,this.payAdviceGrid.enableColumnResizing=!1,this.payAdviceGrid.showGridFooter=!1,this.payAdviceGrid.showFooter=!1,this.payAdviceGrid.enableGridMenu=!1,this.payAdviceGrid.rowHeight=30,this.payAdviceGrid.data="payable.components"},i.prototype.finalizeSettlement=function(){var t=this;(this.payCurrentSalary!=e.Models.PayAction.AlreadyPaid||this.form.settledDateEmployeeForm.$valid)&&this.dialogService.confirm("Confirm Finalization","Any change to salary or adding one time payments after finalization will not effect settlement amount. You need to Finalize again to get those changes effected.").result.then(function(){t.isRequestInProgress=!0,t.employeePayrollExitService.finalizeSettlement(t.exitRequest.employeeId,{processedCycle:t.exitRequest.settlementDate.dateOnlyString(),payAction:t.payCurrentSalary,comment:t.exitRequest.comments}).then(function(i){t.isRequestInProgress=!1,i.isFinalized?(t.notificationService.success("Employee settlement finalised successfully."),t.payCurrentSalary==e.Models.PayAction.AlreadyPaid?t.exitRequest.exitRequestStatus=e.Models.ExitRequestStatus.Settled:t.exitRequest.exitRequestStatus=e.Models.ExitRequestStatus.Finalized,t.modalStackService.dismissAll(),t.rootScope.$broadcast("refreshPendingRequests",{request:t.exitRequest,isFinalStatement:i.isFinalStatement}),"employees.exitmanagement.inprogress.employee"==t.state.current.name?location.href="/ui/#/org/exits/inexitprocess":"employees.exitmanagement.completed.employee"==t.state.current.name?location.href="/ui/#/org/exits/completed":t.state.go("^")):t.notificationService.error("An error occurred while finalizing employee settlement.")},function(e){t.isRequestInProgress=!1,t.notificationService.error(e.data.message)})})},i.prototype.settledForPayrollDisable=function(){var t=this;this.form.settledEmployeeForm.$valid&&this.dialogService.confirm("Confirm Settlement"," Are you sure want to complete Full and Final settlement?").result.then(function(){t.isRequestInProgress=!0,t.employeePayrollExitService.settledExitRequest(t.exitRequest.employeeId,t.exitRequest).then(function(i){t.isRequestInProgress=!1,i?(t.notificationService.success("Employee settlement successfully."),t.exitRequest.exitRequestStatus=e.Models.ExitRequestStatus.Settled,t.modalStackService.dismissAll(),t.rootScope.$broadcast("refreshPendingRequests",{request:t.exitRequest}),"employees.exitmanagement.inprogress.employee"==t.state.current.name?location.href="/ui/#/org/exits/inexitprocess":"employees.exitmanagement.completed.employee"==t.state.current.name?location.href="/ui/#/org/exits/completed":t.state.go("^")):t.notificationService.error("An error occurred while finalizing employee settlement.")},function(e){t.isRequestInProgress=!1,t.notificationService.error(e.data.message)})})},i.$inject=["$q","NotificationService","EmployeePayrollExitService","EmployeeFinanceServices","$uibModalStack","EmployeeExitService","AppSettings","dialogs","$state","$rootScope","FormDownloadService"],i}(i),l=function(t){function i(e,i,n,o,r,a,s,l){var c=t.call(this)||this;return c.qService=e,c.notificationService=i,c.modalStackService=n,c.employeeExitService=o,c.appSettings=r,c.dialogService=a,c.state=s,c.rootScope=l,c}return __extends(i,t),Object.defineProperty(i.prototype,"blockPostToServer",{get:function(){return!1},enumerable:!0,configurable:!0}),i.prototype.$onInit=function(){this.wizardCtrl=this,this.exitRequest.settlementDate||(this.exitRequest.settlementDate=new Date)},i.prototype.checkAnyPendingChanges=function(){return this.form&&this.form.settledEmployeeForm.$dirty||this.exitRequest.exitRequestStatus==e.Models.ExitRequestStatus.Approved},i.prototype.next=function(){if(this.blockPostToServer)return this.rootScope.$broadcast("refreshPendingRequests",{request:this.exitRequest}),"employees.exitmanagement.inprogress.employee"==this.state.current.name?location.href="/ui/#/org/exits/inexitprocess":"employees.exitmanagement.completed.employee"==this.state.current.name?location.href="/ui/#/org/exits/completed":this.state.go("^"),this.modalStackService.dismissAll();this.SettledEmployee()},i.prototype.SettledEmployee=function(){var t=this;this.form.settledEmployeeForm.$valid&&this.dialogService.confirm("Confirm Settlement"," Are you sure want to complete Full and Final settlement?").result.then(function(){t.isRequestInProgress=!0,t.employeeExitService.settledExitRequest(t.exitRequest.employeeId,t.exitRequest).then(function(i){t.isRequestInProgress=!1,i?(t.notificationService.success("Employee settlement successfully."),t.exitRequest.exitRequestStatus=e.Models.ExitRequestStatus.Settled,t.modalStackService.dismissAll(),t.rootScope.$broadcast("refreshPendingRequests",{request:t.exitRequest}),"employees.exitmanagement.inprogress.employee"==t.state.current.name?location.href="/ui/#/org/exits/inexitprocess":"employees.exitmanagement.completed.employee"==t.state.current.name?location.href="/ui/#/org/exits/completed":t.state.go("^")):t.notificationService.error("An error occurred while finalizing employee settlement.")},function(e){t.isRequestInProgress=!1,t.notificationService.error(e.data.message)})})},i.$inject=["$q","NotificationService","$uibModalStack","EmployeeExitService","AppSettings","dialogs","$state","$rootScope"],i}(i),c=function(){function t(e,t,i){this.modelInstance=e,this.monthlySalaries=t,this.isFieldSetDisable=i,this.intilize()}return t.prototype.intilize=function(){for(var t=this.monthlySalaries.length+1;t<10;t++)this.monthlySalaries.push(new e.Models.SalaryDetials({basic:0,dA:0}))},Object.defineProperty(t.prototype,"totalsalary",{get:function(){return this.monthlySalaries.reduce(function(e,t){return e+t.total},0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"averagesalaries",{get:function(){return this.totalsalary/10},enumerable:!0,configurable:!0}),t.prototype.save=function(){this.modelInstance.close(this.monthlySalaries)},t.$inject=["$uibModalInstance","monthlySalaries","isFieldSetDisable"],t}();t.ExitEmployeeLastTenMonthsSalaries=c,angular.module("employees").component("exitNotice",{templateUrl:"exitInitiateNotice",controller:n,bindings:{exitRequest:"=",employeeDetails:"=",leaveTypeConfig:"=",exitSettings:"=",wizardCtrl:"=",currentStepIndex:"=",isEmployeeExit:"=",currentModalInstance:"=",isRequestInProgress:"=",originalNoticeDays:"=",originalLastWorkingDate:"="}}).component("exitPendingTasks",{templateUrl:"exitPendingActivities",controller:o,bindings:{exitRequest:"=",exitSettings:"=",employeeDetails:"=",wizardCtrl:"=",currentStepIndex:"=",currentModalInstance:"=",isEmployeeExit:"=",isRequestInProgress:"="}}).component("exitPayableDues",{templateUrl:"exitPayableDues",controller:r,bindings:{exitRequest:"=",exitSettings:"=",employeeDetails:"=",wizardCtrl:"=",currentStepIndex:"=",leaveTypeConfig:"=",leaveStats:"=",isEmployeeExit:"=",isRequestInProgress:"=",settlementErrors:"=",warningList:"=",payrollDisabled:"="}}).component("payrollFinalizeSettlement",{templateUrl:"payrollfinalSettlement",controller:s,bindings:{exitRequest:"=",wizardCtrl:"=",currentStepIndex:"=",isEmployeeExit:"=",currentModalInstance:"=",isRequestInProgress:"=",settlementErrors:"=",warningList:"=",payrollDisabled:"="}}).component("nonpayrollFinalizeSettlement",{templateUrl:"nonPayrollSettlement",controller:l,bindings:{exitRequest:"=",wizardCtrl:"=",currentStepIndex:"=",isEmployeeExit:"=",currentModalInstance:"=",isRequestInProgress:"="}}).controller("ExitEmployeeLastTenMonthsSalary",c)}(t.Controllers||(t.Controllers={}))}(e.Exit||(e.Exit={}))}(Employee||(Employee={})),function(e){!function(e){var t=function(){function e(e,t){this.resource=e,this.q=t,this.org=this.resource("/api/organization/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getUsernameTypes=function(){return this.org.get({action:"usernametypes"}).$promise},e.prototype.getQuickLinkSettings=function(){return this.org.get({action:"coresettings"}).$promise},e.prototype.updateQuickLinkSettings=function(e){return this.org.update({action:"coresettings"},e).$promise},e.$inject=["$resource","$q"],e}();e.OrgService=t,angular.module("xhr").service("OrgService",t)}(e.Services||(e.Services={}))}(Org||(Org={})),function(e){!function(e){var t=function(){function e(e,t){var i=this;this.resource=e,this.q=t,this.inbox=this.resource("/api/inbox/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.inboxLeaves=this.resource("/api/inbox/leaves/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.inboxCompOff=this.resource("/api/inbox/compoff/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.inboxProfile=this.resource("/api/inbox/profile/changes/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.getPendingApprovalsCount=function(){return i.inbox.get({action:"pendingapprovalscount"}).$promise},this.getPendingLeaveRequests=function(){return i.inbox.get({action:"pendingleaverequests"}).$promise},this.approveLeaveRequest=function(e){return i.inboxLeaves.save({action:"approve",id:e}).$promise},this.approveSelectedLeaveRequests=function(e){return i.inboxLeaves.save({action:"bulkapprove"},e).$promise},this.rejectLeaveRequest=function(e,t){return i.inboxLeaves.save({action:"reject",id:e,rejectReason:t},{}).$promise},this.rejectSelectedLeaveRequests=function(e){return i.inboxLeaves.save({action:"bulkreject"},e).$promise},this.getPendingCompOffRequests=function(){return i.inbox.query({action:"pendingcompoffrequests"}).$promise},this.getPendingExitRequests=function(){return i.inbox.get({action:"pendingexitrequests"}).$promise},this.getPendingProfileRequests=function(){return i.inboxProfile.get({action:"pendingrequests"}).$promise},this.approveProfileChangeRequest=function(e,t){return i.inboxProfile.update({action:"approve",id:e},t).$promise},this.bulkApproveProfileChangeRequests=function(e){return i.inboxProfile.update({action:"bulkapprove"},e).$promise},this.rejectProfileChangeRequest=function(e,t){return i.inboxProfile.update({action:"reject",id:e},t).$promise},this.bulkRejectProfileChangeRequests=function(e){return i.inboxProfile.update({action:"bulkreject"},e).$promise}}return e.prototype.approveCompOffRequest=function(e){return this.inboxCompOff.save({action:"approve",id:e}).$promise},e.prototype.rejectCompOffRequest=function(e){return this.inboxCompOff.save({action:"reject",id:e}).$promise},e.$inject=["$resource","$q"],e}();e.InboxService=t;var i=function(){function e(e,t){var i=this;this.resource=e,this.q=t,this.inboxAttendance=this.resource("/api/inbox/attendance/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.inboxAttendanceApproval=this.resource("/api/inbox/attendance/:employeeId/:action/:id",{employeeId:"@employeeId",id:"@id",action:"@action"},{update:{method:"PUT"}}),this.getPendingRemoteClockInRequests=function(){return i.inboxAttendance.query({action:"pendingremoteclockinrequests"}).$promise},this.getPendingAdjustmentRequests=function(){return i.inboxAttendance.query({action:"pendingadjustmentrequests"}).$promise},this.getPendingWorkingRemotelyRequests=function(){return i.inboxAttendance.query({action:"pendingworkingremotelyrequests"}).$promise},this.approveRemoteClockInRequest=function(e,t){return i.inboxAttendanceApproval.save({action:"approveremoteclockin",id:t,employeeId:e}).$promise},this.rejectRemoteClockInRequest=function(e,t){return i.inboxAttendanceApproval.save({action:"rejectremoteclockin",id:t,employeeId:e}).$promise},this.approveAllRemoteClockInRequest=function(e){return i.inboxAttendance.update({action:"approveremoteclockin"},e).$promise},this.rejectAllRemoteClockInRequest=function(e){return i.inboxAttendance.update({action:"rejectremoteclockin"},e).$promise},this.approveAdjustmentRequest=function(e,t){return i.inboxAttendanceApproval.save({action:"approveadjustment",id:t,employeeId:e}).$promise},this.rejectAdjustmentRequest=function(e,t){return i.inboxAttendanceApproval.save({action:"rejectadjustment",id:t,employeeId:e}).$promise},this.approveAllAdjustmentRequest=function(e){return i.inboxAttendance.update({action:"approveadjustment"},e).$promise},this.rejectAllAdjustmentRequest=function(e){return i.inboxAttendance.update({action:"rejectadjustment"},e).$promise},this.approveWorkFromHomeRequest=function(e,t){return i.inboxAttendanceApproval.save({action:"approvewfh",id:t,employeeId:e}).$promise},this.rejectWorkFromHomeRequest=function(e,t){return i.inboxAttendanceApproval.save({action:"rejectwfh",id:t,employeeId:e}).$promise},this.approveOnDutyRequest=function(e,t){return i.inboxAttendanceApproval.save({action:"approveonduty",id:t,employeeId:e}).$promise},this.rejectOnDutyRequest=function(e,t){return i.inboxAttendanceApproval.save({action:"rejectonduty",id:t,employeeId:e}).$promise}}return e.$inject=["$resource","$q"],e}();e.InboxAttendanceService=i;var n=function(){function e(e,t){this.resource=e,this.payrollModel=t,this.expense=this.resource("/api/inbox/expense/:action/:claimId",{claimId:"@claimId",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getPendingExpenseRequests=function(){return this.expense.query({action:"pending"}).$promise},e.prototype.getExpenses=function(e){return this.expense.query({action:"expesnes",claimId:e}).$promise},e.prototype.getPendingExpenseRequest=function(e){return this.expense.get({action:"expenseclaim",claimId:e}).$promise},e.prototype.removeExpenseFromClaim=function(e){return this.expense.update({action:"expenseclaim",claimId:e.id},e).$promise},e.prototype.getPedingCycles=function(e){var t=this;return this.expense.query({action:"getPendingCycles",employeeId:e}).$promise.then(function(e){return e.map(function(e){return new t.payrollModel.PayrollCycle(e)})})},e.prototype.rejectExpenseClaim=function(e,t){return this.expense.update({action:"expesneclaim/reject",claimId:e,rejectReason:t},{}).$promise},e.prototype.saveApproverComment=function(e,t){return this.expense.save({action:"approverComment",claimId:e,comment:t},{}).$promise},e.prototype.approveExpenseClaim=function(e,t){return this.expense.update({action:"approve",id:t.employeeId,claimId:e},t).$promise},e.prototype.getExpensePolicy=function(e){return this.expense.get({action:"expensepolicy",employeeId:e}).$promise},e.$inject=["$resource","PayrollModel"],e}();e.InboxExpenseService=n;var o=function(){function e(e,t){this.resource=e,this.payrollModel=t,this.inboxLoan=this.resource("/api/inbox/loanrequest/:action/:loanRequestId/:employeeId",{action:"@action",loanRequestId:"@loanRequestId",employeeId:"@employeeId"},{update:{method:"PUT"}})}return e.prototype.getPendingLoanRequests=function(){return this.inboxLoan.query({action:"pending"}).$promise},e.prototype.approveLoanRequest=function(e,t,i){return this.inboxLoan.update({action:"approve",loanRequestId:e,employeeId:t},i).$promise},e.prototype.rejectLoanRequest=function(e,t){return this.inboxLoan.update({action:"reject",loanRequestId:e,employeeId:t}).$promise},e.prototype.updateComments=function(e,t){return this.inboxLoan.save({action:"comment",loanRequestId:e,comment:t},{}).$promise},e.prototype.getpendingcycles=function(e,t){return this.inboxLoan.query({action:"getpendingcycles",employeeId:e,count:t}).$promise},e.prototype.calculateEMI=function(e,t){return this.inboxLoan.save({action:"calculateemi",employeeId:e},t).$promise},e.$inject=["$resource","PayrollModel"],e}();e.InboxLoanService=o,angular.module("inbox").service("InboxService",t).service("InboxExpenseService",n).service("InboxAttendanceService",i).service("InboxLoanService",o)}(e.Services||(e.Services={}))}(Inbox||(Inbox={})),function(e){!function(t){var i=function(){function t(t,i){var n=this;this.commentService=t,this.notificationService=i,this.init=function(){n.comment=new e.Models.Comment({})},this.$onChanges=function(t){n.comment=new e.Models.Comment({})},this.saveComment=function(t){angular.isUndefined(n.comment.content)||(n.comment.parentCommentId=angular.isUndefined(t)?null:t,n.comment.linkedItemType=n.xhrCommentType,n.commentService.saveComment(n.comment,n.xhrCommentTypeId).then(function(t){n.notificationService.success("Comment posted successfully"),n.comment=new e.Models.Comment({}),n.commentsCount++},function(e){n.notificationService.error("An error occurred while posting a comment.")}))},this.init()}return t.$inject=["CommentService","NotificationService"],t}();t.SaveCommentController=i;var n=function(){function e(e,t){var i=this;this.commentService=e,this.publicProfileServices=t,this.comments=[],this.init=function(){i.loadComments()},this.$onChanges=function(e){i.loadComments()},this.loadComments=function(){angular.isUndefined(i.xhrCommentTypeId)||i.commentService.loadComments(i.xhrCommentTypeId).then(function(e){i.comments=e,null!=i.request&&(angular.isDefined(i.request.requestReason)&&i.comments.unshift(i.request.requestReason),angular.isDefined(i.request.approvalComments)&&i.request.approvalComments.length>0&&i.request.approvalComments.forEach(function(e){i.comments.push(e)}))},function(e){})},this.init()}return e.$inject=["CommentService","PublicProfileServices"],e}();t.LoadCommentsController=n;var o=function(){function e(e,t){if(""!=t.xhrCommentTemplateUrl)return t.xhrCommentTemplateUrl}return e.$inject=["$element","$attrs"],e}();angular.module("xhr").component("xhrPostComment",{templateUrl:o,controller:i,controllerAs:"ctrl",bindings:{commentsCount:"=",xhrCommentType:"<",xhrCommentTypeId:"<"}}).component("xhrLoadComments",{templateUrl:o,controller:n,controllerAs:"ctrl",bindings:{request:"=",commentsCount:"<",xhrCommentType:"<",xhrCommentTypeId:"<"}})}(e.Controllers||(e.Controllers={}))}(Comments||(Comments={})),function(e){!function(e){var t=function(){return function(e){this.id=e.id,this.content=e.content,this.parentCommentId=e.parentCommentId,this.linkedItemType=e.linkedItemType,this.commentedBy=e.commentedBy,this.authorName=e.authorName,this.profileImage=e.profileImage,this.commentedOn=e.commentOn}}();e.Comment=t,function(e){e[e.Article=0]="Article",e[e.Task=1]="Task",e[e.Leaves=2]="Leaves",e[e.TimeSheet=3]="TimeSheet",e[e.Attendance=4]="Attendance"}(e.CommentItemType||(e.CommentItemType={}))}(e.Models||(e.Models={}))}(Comments||(Comments={})),function(e){!function(e){var t=function(){function e(e,t){var i=this;this.resource=e,this.q=t,this.comment=this.resource("/api/comment/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.saveComment=function(e,t){return i.comment.save({action:"comments",commentIdentifier:t},e).$promise},this.loadComments=function(e){return i.comment.query({action:"comments",commentIdentifier:e}).$promise}}return e.$inject=["$resource","$q"],e}();e.CommentService=t,angular.module("xhr").service("CommentService",t)}(e.Services||(e.Services={}))}(Comments||(Comments={})),appRoot.factory("OrgSettingServices",["$resource",function(e){return{organization:e("/api/organization/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),legalentity:e("/api/organization/legalentity/:id/:action",{id:"@id",action:"@action"},{update:{method:"PUT"}}),getSettings:function(){return this.organization.get({action:"orgsettings"}).$promise},getOnboardTasks:function(){return this.organization.get({action:"onboardtasks"}).$promise},getTerminationReasons:function(){return this.organization.get({action:"terminationreasons"}).$promise},getTerminationSettings:function(){return this.organization.get({action:"terminationsettings"}).$promise},saveTerminationSettings:function(e){return this.organization.save({action:"terminationsettings"},e).$promise},getOrgLocations:function(){return this.organization.query({action:"locations"}).$promise},getLocationDetails:function(e){return this.organization.get({action:"locationdetails",id:e}).$promise},getEmployeeDefaultSettings:function(){return this.organization.get({action:"employeedefaultsettings"}).$promise},updateEmployeeNotificationEmails:function(e){return this.organization.update({action:"employeenotifcationemails"},e).$promise},updateEmployeeDefaultSettings:function(e){return this.organization.update({action:"employeedefaultsettings"},e).$promise},getLegalEntity:function(e){return this.organization.get({action:`legalentity/${e}/details`}).$promise},saveCompanyInfo:function(e,t){return this.organization.save({action:`legalentity/${e}/companyinfo/add`},t).$promise},saveItInfo:function(e,t){return this.organization.save({action:`legalentity/${e}/incometaxinfo/add`},t).$promise},savePfInfo:function(e,t){return this.organization.save({action:`legalentity/${e}/pfinfo/add`},t).$promise},saveEsiInfo:function(e,t){return this.organization.save({action:`legalentity/${e}/esiinfo/add`},t).$promise},savePtInfo:function(e,t){return this.organization.save({action:`legalentity/${e}/ptinfo/add`},t).$promise},saveLabourWelfareFundInfo:function(e,t){return this.organization.save({action:`legalentity/${e}/labourwelfarefund/add`},t).$promise},saveSignatory:function(e,t){return this.organization.save({action:`legalentity/${e}/signatory/add`},t).$promise},updateSignatory:function(e,t){return this.organization.update({action:`legalentity/${e}/signatory/update`},t).$promise},deleteSignatory:function(e,t){return this.organization.delete({action:`legalentity/${e}/signatory/delete`,identifier:t}).$promise},saveBankAccount:function(e,t){return this.legalentity.save({id:e,action:"bankaccount/add"},t).$promise},updateBankAccount:function(e,t){return this.legalentity.update({id:e,action:"bankaccount/update"},t).$promise},deleteBankAccount:function(e,t){return this.legalentity.delete({id:e,action:"bankaccount/delete",identifier:t}).$promise},getAuthenticationTypes:function(){return this.organization.get({action:"authentication/types"}).$promise},getAuthenticationMode:function(){return this.organization.get({action:"authenticationmode"}).$promise},enableAuthentication:function(e){return this.organization.save({action:"authentication/enable"},e).$promise},disableAuthentication:function(e){return this.organization.save({action:"authentication/disable"},e).$promise}}}]),appRoot.factory("OrgSettings",["$resource","$q",function(e,t){var i;return{getCurrent:function(){var n=t.defer();return i&&n.resolve(i),e("/api/organization/settings").get(function(e){i=angular.extend(new function(){this.hoursPerDay=null,this.inDays=function(e){return e/this.hoursPerDay},this.inHours=function(e){return e*this.hoursPerDay}},e),n.resolve(i)},function(e){n.reject(e)}),n.promise},settings:e("/api/organization/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),Documents:e("/api/organization/:action",null,{save:{method:"POST"},query:{method:"GET",isArray:!0},update:{method:"PUT"}})}}]),appRoot.controller("SettingsController",["$scope","$state","$q","LookupServices","NotificationService","$stateParams","AppSettings",function(e,t,i,n,o,r,a){e.vm={},e.appSettings=a,e.$on("settingsGuide",function(t,i){e.guideSettingsPage()}),e.completedEvent=function(){console.log("Event completed")},e.$on("$stateChangeSuccess",function(i,n,o,r,a){e.vm.state=t.current,r.parentState?r.parentState.contains("settings")||(e.vm.previousState=r,e.vm.previousStateParams=a):e.vm.previousState="home"}),e.goToPreviousState=function(){e.appSettings.isLeftNavVisible=!e.appSettings.isLeftNavVisible,t.go(e.vm.previousState,e.vm.previousStateParams)},e.introOptions={steps:[{element:document.querySelector("#generalSettings"),intro:"You can manage company settings, legal entities, locations, company documents, timesheet approval chaina and departments here",position:"right"},{element:document.querySelector("#leaves"),intro:"You can manage leave plans, types, holidays and policies here",position:"right"},{element:document.querySelector("#employeeRoles"),intro:"You can manage employee roles and leave plans assignment here",position:"right"},{element:document.querySelector("#timeAndAttendance"),intro:"You can manage Weekly offs, shifts, holidays and attendance tracking policies here",position:"right"}],showStepNumbers:!1,showBullets:!1,exitOnOverlayClick:!0,exitOnEsc:!0,nextLabel:"<strong>NEXT!</strong>",prevLabel:'<span style="color:green">Previous</span>',skipLabel:"Skip",doneLabel:"Done"}}]),appRoot.controller("CompanySettingsController",["$scope","$rootScope","$resource","$stateParams","$state","AppSettings","OrgSettingServices","NotificationService","$uibModal","LookupServices","$location",function(e,t,i,n,o,r,a,s,l,c,p){e.vm={},e.vm.fileUploadSettings=angular.copy(r.fileUploadSettings),e.vm.fileUploadSettings.acceptFileTypes=/(\.|\/)(gif|jpe?g|png)$/i,e.vm.fileUploadSettings.allowedFileTypes="png,jpg,jpeg,bmp",e.vm.logo={},e.$on("$stateChangeSuccess",function(t,i,n,r,a){e.vm.state=o.current});e.$watch("vm.logo",function(t,i){t!=i&&(e.model.logoPath=e.vm.logo.location)}),e.$watch("vm.backgroundImagePath",function(t,i){t!=i&&(e.model.backgroundImagePath=e.vm.backgroundImagePath.location)}),e.updateCompanyInfo=function(){e.companyInfo.$valid?(s.information("Updating company info.."),a.organization.update({action:"companyinfo"},e.model,function(i){t.$broadcast("companyInfoUpdate",{info:e.model}),s.success("Company information updated successfully")},function(e){s.error("An error occurred while updating company information.")})):e.submitted=!0},e.showLoginPreview=function(){l.open({templateUrl:"loginPreviewTemplate",windowClass:"wlecomescreen-preview login-preview-screen",scope:e})},a.organization.get({action:"companyinfo"},function(t){e.model=t},function(e){console.log(e)})}]),appRoot.controller("TimesheetGeneralInfoController",["$scope","OrgSettingServices","NotificationService","AttendanceHoursType",function(e,t,i,n){e.vm={},e.vm.attendanceHourTypes=n.getAll();e.updateGeneralInfo=function(){e.TimesheetSettings.$valid?(i.information("Updating Timesheet General info.."),t.organization.update({action:"timesheetgeneralsettings"},e.model,function(e){i.success("Timesheet general info updated successfully")},function(e){i.error("An error occurred while updating company information.")})):i.error("Please enter only whole numbers for hours.")},t.organization.get({action:"timesheetgeneralsettings"},function(t){e.model=t})}]),appRoot.controller("TimesheetSettingsController",["$scope","$resource","$stateParams","$state","$filter","$uibModal","$location","OrgSettingServices","AppSettings","AppContext","ApproverType","NotificationService","$q","TimesheetServices","$timeout","Utils",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h){var f=this;e.vm={},e.vm.approverTypes=p,e.approverGroups=[],e.filteredApprovers=[],e.model={},e.approverLevels=[],e.vm.timesheetSettings={},e.selectedRoles=[],e.vm.myProfile=c.myPublicProfile,e.ismodelChanged=!1,e.modelCopy=[],i.id&&(e.vm.id=i.id),this.$onInit=function(){e.vm.isProjectEditable=f.isProjectEditable},e.$on("projectLoaded",function(t,i){e.vm.project=i.project});var g,v,S=function(){e.vm.timesheetSettings.approvers=[],e.approverGroups=[],angular.forEach(e.vm.approverTypes.getAll(),function(t,i){if(i&&"Employee"!=t.title&&"None"!=t.title){var n={approverType:t.id,approverId:0,approverName:t.title,id:-t.id,category:" Roles"};e.approverGroups.push(n)}}),angular.forEach(e.approverLevels,function(t,i){e.vm.timesheetSettings.approvers=e.vm.timesheetSettings.approvers.concat(t.approvers),angular.forEach(t.approvers,function(i,n){i.approverType!=p.employee.id&&(t.approvers[n]=o("filter")(e.approverGroups,{approverType:i.approverType})[0],e.selectedRoles.push(t.approvers[n]))})}),e.filteredApprovers=o("xor")(e.approverGroups,e.selectedRoles,"approverType"),e.filteredApprovers=o("removeWith")(e.filteredApprovers,{approverType:99})};g=e.vm.id?m.project:s.organization,v=e.vm.id?{id:e.vm.id,action:"timesheetsettings"}:{action:"timesheetsettings"},g.get(v,function(t){t.approvalChain.approverLevels&&t.approvalChain.approverLevels.length&&(e.approverLevels=t.approvalChain.approverLevels,e.modelCopy=angular.copy(t.approvalChain.approverLevels)),S()});e.getFilteredEmployees=function(t){var i=h.getMatchedEmployees(t);return i&&angular.isFunction(i.then)?h.getMatchedEmployees(t).then(function(t){var i=o("xor")(e.approverGroups,e.selectedRoles,"approverType");i=o("removeWith")(i,{approverType:99}),angular.forEach(t,function(t){t.approverType&&function(t){return!!e.vm.timesheetSettings.approvers&&e.vm.timesheetSettings.approvers.filter(function(e){return e.approverId==t.id||e.id==t.id}).length>0}(t)||(t.approverType?t.category="Roles":(t.approverType=99,t.approverId=t.id,t.approverName=t.displayName,t.category="Employees"),i.push(t))}),e.filteredApprovers=i}):[]};var C=function(){angular.forEach(e.approverLevels,function(t,i){0==t.approvers.length&&e.approverLevels.splice(i,1)})};e.addApprover=function(){!e.approverLevels.length||e.approverLevels[e.approverLevels.length-1].approvers.length?(e.approverLevels.push(new function(){this.level=null,this.approvers=[]}),S()):u.error("Please select at least one approver.")},e.addNewApprover=function(){S()},e.updateApproverList=function(t,i,n){n?t.approverType?e.selectedRoles=o("removeWith")(e.selectedRoles,{approverType:t.approverType}):e.vm.timesheetSettings.approvers&&e.vm.timesheetSettings.approvers.length&&(e.vm.timesheetSettings.approvers=o("removeWith")(e.vm.timesheetSettings.approvers,{approverId:t.approverId})):t.approverType?e.selectedRoles.push(t):e.vm.timesheetSettings.approvers.push(t),S(),C()},e.$watch("approverLevels",function(t,i){if(i.length){e.ismodelChanged=!1;for(var n=e.modelCopy,r=0;r<t.length&&(n[r]&&t[r]);r++){if(n[r].approvers.length!=t[r].approvers.length){e.ismodelChanged=!0;break}if(0!=o("xor")(n[r].approvers,t[r].approvers,"approverId").length||0!=o("xor")(n[r].approvers,t[r].approvers,"approverType").length){e.ismodelChanged=!0;break}}(t[r]||n[r]).approvers.length>0&&(e.ismodelChanged=!0)}},!0),e.saveApprovalChain=function(){if(1!=e.approverLevels.length||e.approverLevels[e.approverLevels.length-1].approvers.length){C();var t=e.vm.id?m.project:s.organization,i=e.vm.id?{id:e.vm.id,action:"timesheetsettings"}:{action:"timesheetsettings"};e.ismodelChanged&&t[e.vm.id?"update":"save"](i,e.approverLevels,function(t){e.vm.timesheetSettings=t,e.modelCopy=angular.copy(e.approverLevels),e.ismodelChanged=!1,S(),u.success("Approval chain updated successfully.")},function(e){u.error("An error occurred while updating timesheet approvers.")})}else u.error("Please select at least one approver.")}}]),appRoot.controller("BillingClassificationsController",["$scope","$stateParams","$state","NotificationService","AppSettings","SettingsModel","OrgSettingServices","dialogs","TimesheetServices",function(e,t,i,n,o,r,a,s,l){e.vm={},e.vm.hideForm=!0,e.vm.modelOptions=o.modelBlurSettings,e.vm.form={},e.vm.disableSave=!1;e.addBillingClassification=function(){e.vm.form&&e.vm.form.billingClassification&&(e.vm.form.billingClassification.$setPristine(),e.vm.form.model={isEditable:!0},e.submitted=!1),e.vm.hideForm=!1},e.saveBillingClassification=function(){e.vm.form.billingClassification.$valid?(n.information("Saving new billing classification..."),l.billing.save({action:"billingclassification"},e.vm.form.model,function(t){0!=t.id?(n.success("Billing classification added Successfully."),e.vm.form.model.id=t.id,e.vm.billingClassifications.push(e.vm.form.model),e.vm.form.model=null,e.vm.hideForm=!0,e.submitted=!1):n.error("This billing classification already exists.")},function(e){n.error("An error occurred while saving billing classification.")})):e.submitted=!0},e.editBillingClassification=function(t){e.vm.hideForm=!1,e.model=angular.copy(t),e.vm.form.billingClassification.$setPristine()},e.updateBillingClassification=function(){e.vm.form.billingClassification.$valid?(e.vm.disableSave=!0,n.information("Updating billing classification..."),l.billing.update({action:"billingclassification",id:e.vm.form.model.id},e.vm.form.model,function(t){t.isUpdated?(n.success("Billing classification updated Successfully."),e.vm.billingClassifications=e.vm.billingClassifications.filter(function(t){return e.vm.form.model.id!=t.id}),e.vm.billingClassifications.push(e.vm.form.model),e.vm.form.model={},e.vm.hideForm=!0,e.submitted=!1):n.information("Billing classification with this name already exists."),e.vm.disableSave=!1},function(t){n.error("An error occurred while updating billing classification."),e.vm.disableSave=!1})):e.submitted=!0},e.deleteBillingClassification=function(t){s.confirm("Please Confirm","Are you sure want to delete this billing classification ?").result.then(function(){n.information("Deleting billing classification..."),l.billing.delete({action:"billingclassification",id:t.id},function(i){i.isDeleted?(n.success("Billing classification deleted successfully."),e.vm.billingClassifications=e.vm.billingClassifications.filter(function(e){return t.id!=e.id})):n.information(t.name+" billing classification cannot be deleted because it is used in employee timesheets.")},function(e){n.error("An error occurred while deleting the billing classification.")})})};l.billing.query({action:"billingclassification"},function(t){e.vm.billingClassifications=t}),e.gridOptions=angular.copy(o.gridSettings),e.gridOptions.columnDefs=[{field:"name",displayName:"NAME",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-class="{\'align-cell-text\': row.entity.description}"><ul class="list-unstyled"><li><span>{{row.entity.name}}</span></li><li><span>{{row.entity.description}}</span></li></ul></div>'},{field:"isBillable",displayName:"BILLABLE/NON-BILLABLE",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.isBillable ? "BILLABLE" : "NON-BILLABLE"}}</span></div>'},{name:"Actions",displayName:"ACTIONS",enableSorting:!1,cellClass:"ui-grid-cell cell-tooltip",cellTemplate:'<div class="ui-grid-cell-options ui-grid-cell-contents"><span class="plan-edit clearfix "><ul class="action-items"><li class="list-item"><a class="list-link" data-ng-click="grid.appScope.editBillingClassification(row.entity);"><span class="icon-pencil5" uib-tooltip="Edit" tooltip-placement="left"></span></a></li><li class="list-item" data-ng-if="row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.deleteBillingClassification(row.entity);"><span class="icon-remove3" uib-tooltip="Delete" tooltip-placement="right"></span></a></li></ul></span></div>'}],e.gridOptions.data="vm.billingClassifications",e.gridOptions.rowHeight=50}]),function(e){!function(t){!function(t){var i=function(){function e(e,t,i,n,o,r,a,s,l){var c=this;this.$state=e,this.$stateParams=t,this.$uibModal=i,this.orgSettingServices=n,this.notificationService=o,this.appSettings=r,this.settingsModel=a,this.dialogs=s,this.$scope=l,this.getAllLegalEntities(),this.$scope.$on("legalEntityUpdated",function(e,t){c.legalEntities.find(function(e){return e.id==t.id}).name=t.name}),this.$scope.$on("legalEntityDeleted",function(e){c.getAllLegalEntities()}),this.$scope.$on("$stateChangeStart",function(e,t,i,n,o){("settings.company.legalentities"==t.name||"settings.company.legalentities.legalentity"==t.name&&o.id==i.id)&&e.preventDefault()})}return e.prototype.addLegalEntity=function(){var e=this;this.$uibModal.open({templateUrl:"addLegalEnitity",controller:"AddOrUpdateLegalEnitity as ctrl",windowClass:"structure-compare small-btn",backdrop:"static",keyboard:!1,resolve:{legalEnitity:function(){return null}}}).result.then(function(t){t&&(e.legalEntities.push(t),e.$state.go("settings.company.legalentities.legalentity",{id:t.id}))})},e.prototype.getAllLegalEntities=function(){var e=this;this.orgSettingServices.organization.query({action:"legalentity/list"},function(t){e.legalEntities=t,e.$state.includes("settings.company.legalentities.legalentity")||e.gotoLegalEntity(e.$state.id)},function(e){})},e.prototype.gotoLegalEntity=function(e){(e||this.legalEntities&&this.legalEntities[0])&&this.$state.go("settings.company.legalentities.legalentity",{id:e||this.legalEntities[0].id})},e.$inject=["$state","$stateParams","$uibModal","OrgSettingServices","NotificationService","AppSettings","SettingsModel","dialogs","$scope"],e}();t.LegalEntityListController=i;var n=function(){function e(e,t,i,n,o,r,a,s,l){var c=this;this.appSettings=e,this.$stateParams=t,this.$uibModal=i,this.orgSettingServices=n,this.lookupServices=o,this.notificationService=r,this.legalEntityDetails=a,this.dialogs=s,this.$scope=l,this.niceScrollOptions=angular.copy(this.appSettings.scrollSettings),this.modelOptions=this.appSettings.modelBlurSettings,this.niceScrollOptions.zindex=1246,this.legalEntityId=this.$stateParams.id,this.lookupServices.lookup.query({id:"banks"},function(e){c.banks=angular.copy(e)}),this.legalEntityDetails=a}return e.prototype.editLegalEntity=function(){var e=this;this.$uibModal.open({templateUrl:"editLegalEnitity",controller:"AddOrUpdateLegalEnitity as ctrl",windowClass:"structure-compare small-btn",backdrop:"static",keyboard:!1,resolve:{legalEnitity:function(){return e.legalEntityDetails}}}).result.then(function(t){t&&(e.legalEntityDetails=t,e.$scope.$emit("legalEntityUpdated",e.legalEntityDetails))})},e.prototype.deleteLegalEntity=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure want to delete "+e.name+" ?").result.then(function(){t.notificationService.information("Deleting legal entity.."),t.orgSettingServices.organization.delete({action:"legalentity/"+e.id+"/delete"},function(e){e.isDeleted&&(t.notificationService.success("Legal entity deleted successfully"),t.$scope.$emit("legalEntityDeleted"))},function(e){t.notificationService.error(e.data.message)})})},e.prototype.addNewSignatory=function(){var e=this;this.$uibModal.open({templateUrl:"addNewSignatory",windowClass:"structure-compare small-btn",controller:"AddOrUpdateSignatory as ctrl",keyboard:!1,backdrop:"static",resolve:{signatory:function(){return null},legalEntityId:function(){return e.legalEntityId}}}).result.then(function(t){t&&e.legalEntityDetails.signatory.push(t)})},e.prototype.editSignatory=function(e){var t=this;this.$uibModal.open({templateUrl:"addNewSignatory",windowClass:"structure-compare small-btn",controller:"AddOrUpdateSignatory as ctrl",keyboard:!1,backdrop:"static",resolve:{signatory:function(){return e},legalEntityId:function(){return t.legalEntityId}}}).result.then(function(t){t&&e.update(t)})},e.prototype.deleteSignatory=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure want to delete "+e.name+" signatory ?").result.then(function(){t.orgSettingServices.deleteSignatory(t.legalEntityId,e.identifier).then(function(i){i.isDeleted?(t.legalEntityDetails.signatory=t.legalEntityDetails.signatory.filter(function(t){return t.identifier!=e.identifier}),t.notificationService.success("Signatory details deleted successfully")):t.notificationService.error("Deleting Signatory failed")},function(e){t.notificationService.error(e.data.message)})})},e.prototype.addNewBankAccount=function(){var e=this;this.$uibModal.open({templateUrl:"addBankAccount",windowClass:"structure-compare small-btn",controller:"AddOrUpdateBankAccount as ctrl",keyboard:!1,backdrop:"static",resolve:{bankAccount:function(){return null},banks:function(){return e.banks},legalEntityId:function(){return e.legalEntityId}}}).result.then(function(t){t&&e.legalEntityDetails.bankAccount.push(t)})},e.prototype.editBankAccount=function(e){var t=this;this.$uibModal.open({templateUrl:"addBankAccount",windowClass:"structure-compare small-btn",controller:"AddOrUpdateBankAccount as ctrl",keyboard:!1,backdrop:"static",resolve:{bankAccount:function(){return e},banks:function(){return t.banks},legalEntityId:function(){return t.legalEntityId}}}).result.then(function(t){t&&e.update(t)})},e.prototype.deleteBankAccount=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure want to delete bank Accounts of "+e.name+" ?").result.then(function(){t.orgSettingServices.deleteBankAccount(t.legalEntityId,e.identifier).then(function(i){i.isDeleted?(t.legalEntityDetails.bankAccount=t.legalEntityDetails.bankAccount.filter(function(t){return t.identifier!=e.identifier}),t.notificationService.success("Bank details deleted successfully")):t.notificationService.error("Deleting bank account failed")})})},e.$inject=["AppSettings","$stateParams","$uibModal","OrgSettingServices","LookupServices","NotificationService","legalEntityDetails","dialogs","$scope"],e}();t.LegalEntityController=n;var o=function(){function t(t,i,n,o,r,a){var s=this;this.scope=t,this.appSettings=i,this.$uibModalInstance=o,this.orgSettingServices=r,this.notificationService=a,this.datepickerOptions=angular.copy(this.appSettings.datepickerOptions),this.model=new e.Model.LegalEntity(n||{}),this.edit=null!=n,this.fileUploadSettings=angular.copy(this.appSettings.fileUploadSettings),this.fileUploadSettings.acceptFileTypes=/(\.|\/)(gif|jpe?g|png)$/i,this.fileUploadSettings.allowedFileTypes="png,jpg,jpeg,bmp",t.$watch("ctrl.logo",function(e,t){e!=t&&(s.model.logoPath=s.logo.location)})}return t.prototype.saveLegalEntity=function(){var e=this;this.form.legalEntity.$valid&&this.orgSettingServices.organization.save({action:"legalentity/add"},this.model,function(t){e.model.id=t.id,e.$uibModalInstance.close(e.model),e.notificationService.success("Legal Entity saved successfully.")},function(t){e.notificationService.error(t.data.exceptionMessage)})},t.prototype.updateLegalEntity=function(){var e=this;this.form.legalEntity.$valid&&this.orgSettingServices.organization.update({action:"legalentity/"+this.model.id+"/update"},this.model,function(t){e.$uibModalInstance.close(e.model),e.notificationService.success("Legal Entity updated successfully.")},function(t){e.notificationService.error(t.data.exceptionMessage)})},t.prototype.closeModal=function(){this.$uibModalInstance.close()},t.$inject=["$scope","AppSettings","legalEnitity","$uibModalInstance","OrgSettingServices","NotificationService"],t}();t.AddOrUpdateLegalEnitity=o;var r=function(){function t(t,i,n,o,r,a){this.appSettings=t,this.$uibModalInstance=n,this.orgSettingServices=o,this.notificationService=r,this.legalEntityId=a,this.edit=null!=i,this.model=new e.Model.Signatory(Object.assign({},i)||{})}return t.prototype.saveSignatory=function(){var t=this;this.form.addSignatoryForm.$valid&&(this.saveInProgresss=!0,this.orgSettingServices.saveSignatory(this.legalEntityId,this.model).then(function(i){i.signatory?(t.$uibModalInstance.close(new e.Model.Signatory(i.signatory)),t.notificationService.success("Signatory details added successfully")):t.notificationService.error("Adding signatory failed."),t.saveInProgresss=!1},function(e){t.notificationService.error("Error in saving Signatory details."),t.saveInProgresss=!1}))},t.prototype.updateSignatory=function(){var t=this;this.form.addSignatoryForm.$valid&&(this.saveInProgresss=!0,this.orgSettingServices.updateSignatory(this.legalEntityId,this.model).then(function(i){i.signatory?(t.$uibModalInstance.close(new e.Model.Signatory(i.signatory)),t.notificationService.success("Signatory details updated successfully")):t.notificationService.error("Updating signatory failed."),t.saveInProgresss=!1},function(e){t.notificationService.error("Failed to update Signatory details"),t.saveInProgresss=!1}))},t.prototype.closeModal=function(){this.$uibModalInstance.close()},t.$inject=["AppSettings","signatory","$uibModalInstance","OrgSettingServices","NotificationService","legalEntityId"],t}();t.AddOrUpdateSignatory=r;var a=function(){function t(t,i,n,o,r,a,s){this.appSettings=t,this.$uibModalInstance=n,this.orgSettingServices=o,this.notificationService=r,this.legalEntityId=a,this.banks=s,this.niceScrollOptions=angular.copy(this.appSettings.scrollSettings),i?(this.model=new e.Model.BankAccountDetails(i||{}),this.model.bank=this.banks.find(function(e){return e.name==i.name}),this.edit=!0):(this.model=new e.Model.BankAccountDetails({}),this.edit=!1)}return t.prototype.addBankAccount=function(){var t=this;this.form.bankDetails.$valid&&(this.saveInProgresss=!0,this.orgSettingServices.saveBankAccount(this.legalEntityId,this.model).then(function(i){i?(t.$uibModalInstance.close(new e.Model.BankAccountDetails(i)),t.notificationService.success("Bank details added successfully")):t.notificationService.error("Adding bank account failed"),t.saveInProgresss=!1},function(e){t.notificationService.error("Adding bank account failed"),t.saveInProgresss=!1}))},t.prototype.updateBankAccount=function(){var t=this;this.form.bankDetails.$valid&&(this.saveInProgresss=!0,this.orgSettingServices.updateBankAccount(this.legalEntityId,this.model).then(function(i){i.bankAccount?(t.$uibModalInstance.close(new e.Model.BankAccountDetails(i.bankAccount)),t.notificationService.success("Bank details updated successfully")):t.notificationService.error("Failed to update Bank details"),t.saveInProgresss=!1},function(e){t.notificationService.error("Failed to update Bank details"),t.saveInProgresss=!1}))},t.prototype.closeModal=function(){this.$uibModalInstance.close()},t.$inject=["AppSettings","bankAccount","$uibModalInstance","OrgSettingServices","NotificationService","legalEntityId","banks"],t}();t.AddOrUpdateBankAccount=a;var s=function(){function t(t,i,n,o,r,a){this.appSettings=t,this.$stateParams=i,this.orgSettingServices=o,this.notificationService=r,this.legalEntityDetails=a,this.companyTypes=n.getAll(),this.legalEntityId=this.$stateParams.id,this.model=new e.Model.CompanyInfo(a.companyInfo||{}),this.datepickerOptions=angular.copy(this.appSettings.datepickerOptions)}return t.prototype.saveCompanyInfo=function(){var t=this;this.form.companyInfo.$valid&&this.orgSettingServices.saveCompanyInfo(this.legalEntityId,this.model).then(function(i){i.isSaved?(t.notificationService.success("Company legal information saved successfully"),t.legalEntityDetails.companyInfo=new e.Model.CompanyInfo(t.model)):t.notificationService.error("Failed to save company information")},function(e){t.notificationService.error("Failed to save company information")})},t.prototype.clearForm=function(){this.model=new e.Model.CompanyInfo({}),this.form.companyInfo.$setPristine()},t.$inject=["AppSettings","$stateParams","CompanyType","OrgSettingServices","NotificationService","legalEntityDetails"],t}();t.CompanyInfoController=s,angular.module("xhr").controller("LegalEntityListController",i).controller("LegalEntityController",n).controller("AddOrUpdateLegalEnitity",o).controller("AddOrUpdateSignatory",r).controller("AddOrUpdateBankAccount",a).controller("CompanyInfoController",s)}(t.Controllers||(t.Controllers={}))}(e.LegalEntity||(e.LegalEntity={}))}(Settings||(Settings={})),function(e){!function(t){var i=function(){function e(e,t,i,n,o){var r=this;this._state=e,this.orgSettingServices=t,this.appSettings=i,this.notificationService=n,this.timesheetSettingsService=o,this.legalEntities=[],this.logo={},this.selectEntity=function(e){r.selectedEntity=e,r.logo={},r.submitted=!1,!r.selectedEntity.timesheetInvoiceInfo.billingAddress&&r.selectedEntity.companyInfo&&(r.selectedEntity.timesheetInvoiceInfo.billingAddress=angular.copy(r.selectedEntity.companyInfo.address)),r.selectedEntity.timesheetInvoiceInfo.logoPath&&(r.logo.location=r.selectedEntity.timesheetInvoiceInfo.logoPath)},this.logoUploaded=function(){r.selectedEntity.timesheetInvoiceInfo.logoPath=r.logo.location},this.udpateLegalEntityInfo=function(){r.invoiceHeaderForm.invoiceHeader.$valid&&r.timesheetSettingsService.saveLegalEntityInvoiceInfo(r.selectedEntity).then(function(e){r.notificationService.success("The details have been updated successfully.")},function(e){r.notificationService.error("An error has occurred while updating.")})},this.fileUploadSettings=angular.copy(this.appSettings.fileUploadSettings),this.fileUploadSettings.acceptFileTypes=/(\.|\/)(gif|jpe?g|png)$/i,this.fileUploadSettings.allowedFileTypes="png,jpg,jpeg,bmp",this.orgSettingServices.organization.query({action:"legalentity/list"},function(e){r.legalEntities=e,r.selectEntity(r.legalEntities[0])},function(e){})}return e.$inject=["$state","OrgSettingServices","AppSettings","NotificationService","TimesheetSettingsService"],e}();t.GeneralInvoiceSettingsController=i;var n=function(){function e(e,t,i,n,r,a){var s=this;this._modal=e,this._scope=t,this.orgSettingServices=i,this.notificationService=n,this.dialogs=r,this.timesheetSettingsService=a,this.legalEntities=[],this.taxGroups=[],this.getTaxGroups=function(e){s.timesheetSettingsService.getTaxGroups(s.selectedEntity.id).then(function(e){s.taxGroups=e},function(e){s.notificationService.error("Error in getting tax groups.")})},this.selectEntity=function(e){s.selectedEntity=e,s.getTaxGroups(e.id)},this.getTotalTaxRate=function(e){return e.taxComponents.map(function(e){return e.taxRate}).reduce(function(e,t){return e+t})},this.addTaxGroup=function(){s.modalInstance=s._modal.open({templateUrl:"addTaxGroup",controller:o,controllerAs:"ctrl",scope:s._scope,resolve:{TaxGroup:function(){return null},TaxGroups:function(){return s.taxGroups},LegalEntity:function(){return s.selectedEntity}}}),s.modalInstance.result.then(function(e){s.taxGroups.push(e.taxGroup)})},this.editTaxGroup=function(e){s.modalInstance=s._modal.open({templateUrl:"addTaxGroup",controller:o,controllerAs:"ctrl",scope:s._scope,resolve:{TaxGroup:function(){return e},TaxGroups:function(){return s.taxGroups},LegalEntity:function(){return s.selectedEntity}}}),s.modalInstance.result.then(function(t){var i=s.taxGroups.indexOf(e);s.taxGroups[i]=t.taxGroup})},this.deleteTaxGroup=function(e){s.dialogs.confirm("Please Confirm","Are you sure you want to delete this tax group?").result.then(function(){s.timesheetSettingsService.deleteTaxGroup(s.selectedEntity.id,e.id).then(function(t){s.notificationService.success("The tax group was deleted successfully.");var i=s.taxGroups.indexOf(e);s.taxGroups.splice(i,1)},function(e){s.notificationService.error("An error occurred while deleting the tax group.")})})},this.orgSettingServices.organization.query({action:"legalentity/list"},function(e){s.legalEntities=e,s.selectEntity(s.legalEntities[0])},function(e){s.notificationService.error("Error in getting legal entities")})}return e.$inject=["$uibModal","$scope","OrgSettingServices","NotificationService","dialogs","TimesheetSettingsService"],e}();t.TaxesSettingsController=n;var o=function(){function t(t,i,n,o,r,a,s){var l=this;this._modalInstance=t,this.notificationService=i,this.timesheetSettingsService=a,this.dialogs=s,this.saveTaxGroup=function(){l.isDuplicateTaxGroup=!1,l.taxGroupCreationForm.taxGroup.$valid&&l.areComponentNamesUnique()&&l.areTaxGroupNamesUnique()?l.taxGroup.id?l.timesheetSettingsService.updateTaxGroup(l.taxGroup).then(function(e){l.notificationService.success("Tax group has been updated successfully."),l._modalInstance.close({taxGroup:e})},function(e){l.notificationService.error("An error occurred while updating the tax group.")}):l.timesheetSettingsService.addTaxGroup(l.taxGroup,l.taxGroup.legalEntityId).then(function(e){l.notificationService.success("Tax group has been added successfully."),l._modalInstance.close({taxGroup:e})},function(e){l.notificationService.error("An error occurred while adding the tax group.")}):l.areComponentNamesUnique()?l.areTaxGroupNamesUnique()||(l.isDuplicateTaxGroup=!0):l.notificationService.error("Component names must not be duplicate.")},this.addTax=function(){l.taxGroup.taxComponents.push(new e.Model.InvoiceTax(l.taxGroup.id))},this.deleteTax=function(e){var t=l.taxGroup.taxComponents.indexOf(e);l.taxGroup.taxComponents.splice(t,1)},this.areTaxGroupNamesUnique=function(){return!l.taxGroups.filter(function(e){return e.code==l.taxGroup.code&&e.id!=l.taxGroup.id}).length},this.areComponentNamesUnique=function(){var e=!1;return l.taxGroup.taxComponents.forEach(function(t,i){l.taxGroup.taxComponents.forEach(function(n,o){t.name!=n.name||i==o||(e=!0)})}),!e},this.taxGroup=new e.Model.InvoiceTaxGroup,this.taxGroups=o,this.taxGroup.legalEntityId=r.id,this.taxGroup.taxComponents.push(new e.Model.InvoiceTax),n&&(this.taxGroup=angular.copy(n))}return t.$inject=["$uibModalInstance","NotificationService","TaxGroup","TaxGroups","LegalEntity","TimesheetSettingsService","dialogs"],t}();t.AddTaxGroupController=o;var r=function(){function e(e,t,i,n,o,r,s){var l=this;this._modal=e,this._scope=t,this.uiGridConstants=i,this.notificationService=n,this.dialogs=o,this.appSettings=r,this.timesheetSettingsService=s,this.paymentTerms=[],this.getPaymentTerms=function(){l.timesheetSettingsService.getPaymentTerms().then(function(e){l.paymentTerms=e},function(e){l.notificationService.error("An error occurred while getting the payment terms.")})},this.addPaymentTerm=function(){l._modal.open({templateUrl:"addPaymentTerm",controller:a,controllerAs:"ctrl",windowClass:"payment-term-adding-modal",scope:l._scope,resolve:{PaymentTerm:function(){return null}}}).result.then(function(e){l.paymentTerms.push(e.paymentTerm)})},this.editPaymentTerm=function(e){l._modal.open({templateUrl:"addPaymentTerm",controller:a,controllerAs:"ctrl",windowClass:"payment-term-adding-modal",scope:l._scope,resolve:{PaymentTerm:function(){return e}}}).result.then(function(t){var i=l.paymentTerms.indexOf(e);l.paymentTerms[i]=t.paymentTerm})},this.deletePaymentTerm=function(e){l.dialogs.confirm("Please Confirm","Are you sure you want to delete this payment term?").result.then(function(){l.timesheetSettingsService.deletePaymentTerm(e.id).then(function(t){var i=l.paymentTerms.indexOf(e);l.paymentTerms.splice(i,1),l.notificationService.success("The payment term was deleted successfully.")},function(e){l.notificationService.error("An error occurred while deleting the payment term.")})})},this.getPaymentTerms()}return e.$inject=["$uibModal","$scope","uiGridConstants","NotificationService","dialogs","AppSettings","TimesheetSettingsService"],e}();t.PaymentTermsController=r;var a=function(){function t(t,i,n,o){var r=this;this._modalInstance=t,this.notificationService=n,this.timesheetSettingsService=o,this.savePaymentTerm=function(){r.paymentTermCreationForm.paymentTerm.$valid?(r.paymentTerm.termType==e.Model.PaymentTermType.FixedPeriod?(r.paymentTerm.dayOfMonth=null,r.paymentTerm.daysToDueDate=null):r.paymentTerm.numberOfDays=null,r.paymentTerm.id?r.timesheetSettingsService.updatePaymentTerm(r.paymentTerm).then(function(e){r.notificationService.success("Payment term has been updated successfully."),r._modalInstance.close({paymentTerm:e})},function(e){r.notificationService.error("An error occurred while updating the payment term.")}):r.timesheetSettingsService.addPaymentTerm(r.paymentTerm).then(function(e){r.notificationService.success("Payment term has been added successfully."),r._modalInstance.close({paymentTerm:e})},function(e){r.notificationService.error("An error occurred while adding the payment term.")})):r.notificationService.error("Please enter valid data in the highlighted fields.")},this.paymentTerm=new e.Model.PaymentTerm,i&&(this.paymentTerm=angular.copy(i))}return t.$inject=["$uibModalInstance","PaymentTerm","NotificationService","TimesheetSettingsService"],t}();t.AddPaymentTermController=a;var s=function(){function t(e,t,i,n,o,r,a,s,l,c,p,u){var d=this;this._scope=e,this._location=t,this._stateParams=i,this._filter=n,this.appSettings=o,this.uiGridConstants=r,this._modal=a,this._q=s,this.dialogs=l,this.notificationService=c,this._orgService=p,this._state=u,this.initializeGridSettings=function(){d.quickLinkGridOptions=angular.copy(d.appSettings.gridSettings),d.quickLinkGridOptions.columnDefs=[{field:"label",displayName:"LABEL",cellClass:"ui-grid-cell",sort:{direction:d.uiGridConstants.ASC}},{field:"link",displayName:"LINK",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents" title="{{grid.getCellValue(row,col)}}"><span>{{grid.getCellValue(row,col)}}</span></div>'}],d.quickLinkGridOptions.rowHeight=50,d.quickLinkGridOptions.appScopeProvider=d},this.refreshData=function(e){d.quickLinkGridOptions.data=e,d.quickLinks=e},this.quickLinks=new Array,this.baseUrl=-1==this._state.current.name.indexOf("settings")?"/company":"/settings/company"}return t.prototype.$onInit=function(){var e=this;this._orgService.getQuickLinkSettings().then(function(t){e.quickLinkSettings=t,e.buildQuickLinkJsonObject(t.quickLinks),e.quickLinkGridOptions.data=e.quickLinks},function(t){e.notificationService.error("Error in getting quickLinks")}),this.initializeGridSettings()},t.prototype.buildQuickLinkJsonObject=function(t){for(var i=0,n=Object.entries(t);i<n.length;i++){var o=n[i],r=o[0],a=o[1];this.quickLinks.push(new e.Model.QuickLink(r,a))}},t.prototype.addEditQuickLink=function(){var e=this;this._modal.open({templateUrl:"add-quick-link-modal",backdrop:"static",windowClass:"structure-compare",controller:"AddQuickLinkController as addCtrl",resolve:{quickLinks:function(){return angular.copy(e.quickLinks)},quickLinkSettings:function(){return angular.copy(e.quickLinkSettings)}}}).result.then(function(t){e.refreshData(t)})},t.prototype.cancel=function(){this._location.path(this.baseUrl+"/quicklinksettings")},t.$inject=["$scope","$location","$stateParams","$filter","AppSettings","uiGridConstants","$uibModal","$q","dialogs","NotificationService","OrgService","$state"],t}();t.QuickLinkSettingsController=s;var l=function(){function t(e,t,i,n,o,r,a){this._scope=e,this._modalInstance=t,this.quickLinks=i,this.quickLinkSettings=n,this._notificationService=o,this._orgService=r,this._dialogs=a,this.isFormFiledValid=!0,this.isSaveInProgress=!1,this.isQuickLinkChanged=!1,this.model=angular.copy(n)}return t.prototype.saveQuickLink=function(){var e=this;if(!this.isSaveInProgress&&this.isQuickLinkChanged){this.isSaveInProgress=!0;for(var t={},i=0;i<this.quickLinks.length;i++){t[this.quickLinks[i].label]=this.quickLinks[i].link}this.model.quickLinks=t,this._orgService.updateQuickLinkSettings(this.model).then(function(t){e._modalInstance.close(e.quickLinks),e._notificationService.success("Quick Links added successfully.")},function(t){e.isSaveInProgress=!1,e._notificationService.error("Error Occured While Saving Quick Links Please Try After Some Time")})}else this.submitted=!0},t.prototype.addQuickLink=function(t,i){if(this.form.QuickLinkForm.$valid)if(this.checkDuplicateLabel(t))this._notificationService.error("Quick Link with same label already exists");else{if(this.quickLinks.length<4){var n=new e.Model.QuickLink(t,i);this.quickLinks.push(n)}this.label="",this.link="",this.isQuickLinkChanged=!0,this.form.QuickLinkForm.$setPristine(),this.isFormFiledValid=!0}else this.isFormFiledValid=!1},t.prototype.retainOldValue=function(e){this.quickLinkOld=angular.copy(e)},t.prototype.updateQuickLink=function(e,t){return e?(this.quickLinks[t].link=angular.copy(e),this.isQuickLinkChanged=!0,angular.copy(e)):(this.quickLinks[t]=angular.copy(this.quickLinkOld),this.quickLinkOld.link)},t.prototype.updateQuickLinkLabel=function(e,t){return e?(this.quickLinks[t].label=angular.copy(e),this.isQuickLinkChanged=!0,angular.copy(e)):(this.quickLinks[t]=angular.copy(this.quickLinkOld),this.quickLinkOld.label)},t.prototype.checkDuplicateLabel=function(e){return this.quickLinks.some(function(t){return t.label==e})},t.prototype.deleteQuickLink=function(e){this.quickLinks.splice(e,1),this.isQuickLinkChanged=!0},t.$inject=["$scope","$uibModalInstance","quickLinks","quickLinkSettings","NotificationService","OrgService","dialogs"],t}();t.AddQuickLinkController=l,angular.module("xhr").controller("GeneralInvoiceSettingsController",i).controller("TaxesSettingsController",n).controller("PaymentTermsController",r).controller("QuickLinkSettingsController",s).controller("AddQuickLinkController",l)}(e.Controllers||(e.Controllers={}))}(Settings||(Settings={})),function(e){var t,i,n;e.Controllers||(e.Controllers={}),t=function(){function t(t,i,n,o,r,a){var s=this;this._state=t,this.notificationService=i,this.businessUnitService=n,this.appSettings=o,this.dialogs=r,this._modal=a,this.businessUnits=[],this.refreshGrid=!1,this.parentState=-1==this._state.current.name.indexOf("settings")?"setup.org.businessunits":"settings.company",this.businessUnitService.getBusinessUnitListViews().then(function(t){t.forEach(function(t){s.businessUnitService.getBusinessHeads(t.id).then(function(i){t.businessHeads=s.getBusinessHeadsCSV(i),s.businessUnits.push(new e.Model.BusinessUnitListView(t))})})}),this.initGridOptions()}return t.prototype.initGridOptions=function(){this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.columnDefs=[{field:"name",displayName:"Business Unit",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><p class="clear-bottom">{{grid.getCellValue(row,col)}}</p></div>',sort:{direction:"asc",priority:1}},{field:"description",displayName:"Description",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span class="pull-left text-center"><span  data-ng-if="row.entity.description != null" >{{row.entity.description}}</span><span  data-ng-if="row.entity.description == null" >Not Available</span></span></div>'},{field:"businessHeads",displayName:"Business Head",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents" title="{{row.entity.businessHeads}}"><div class="inline-block text-center"><span>{{row.entity.businessHeads}}</span></div>'},{name:"actions",displayName:"Actions",cellClass:"ui-grid-cell cell-tooltip ui-grid-cell-contents",cellTemplate:'<div class="ui-grid-cell-options"><span class="clearfix "><ul class="action-items list-inline" style="position:relative"><li class="list-item"><a class="list-link"><span class="icon-pencil5" uib-tooltip="Edit" data-tooltip-placement="left" data-ui-sref="^.editbusinessunit({id: row.entity.id})"></span></a></li><li class="list-item"><a class="list-link"><span class="icon-remove3" uib-tooltip="Delete" data-tooltip-placement="right" data-ng-click="grid.appScope.ctrl.deleteBusinessUnit(row.entity)"></span></a></li><li class="list-item"><span class="icon-user sidebar-list-icon tooltip-grey node" uib-tooltip="Assign Business Unit Head" tooltip-placement="right" data-ng-click="grid.appScope.ctrl.assignBusinessUnitHead(row.entity.id);" style="position:absolute;top:6px"></span></li></ul></span></div>'}],this.gridSettings.rowHeight=70,this.gridSettings.data="ctrl.businessUnits"},t.prototype.deleteBusinessUnit=function(e){var t=this;this.dialogs.confirm("Confirm Deletion","Are you sure you want to delete '"+e.name+"' Business Unit.").result.then(function(){t.refreshGrid=!0,t.businessUnitService.deleteBusinessUnit(e.id).then(function(i){i.isDeleted?(t.notificationService.success("Business Unit deleted Successfully"),t.businessUnits=t.businessUnits.filter(function(t){return t.id!=e.id})):t.notificationService.information("Business unit cannot be deleted because it has child departments.")},function(e){t.notificationService.error("Failed to delete business unit.")}),t.refreshGrid=!1})},t.prototype.assignBusinessUnitHead=function(e){var t=this;this._modal.open({templateUrl:"editBusinessUnitHead",controller:"BusinessUnitHeadEditController",controllerAs:"ctrl",windowClass:"groupManager-edit",resolve:{groupId:function(){return e}}}).result.then(function(i){t.refreshGrid=!0,t.businessUnits.find(function(t){return t.id==e}).businessHeads=i.displayName,t.refreshGrid=!1})},t.prototype.getBusinessHeadsCSV=function(e){var t="";return e.forEach(function(i){t+=i.displayName,e.length>1&&(t+=", ")}),e.length>1?t.slice(0,t.length-2):t},t.$inject=["$state","NotificationService","BusinessUnitService","AppSettings","dialogs","$uibModal"],t}(),i=function(){function t(t,i,n,o,r,a,s){var l=this;this._modalInstance=t,this._q=i,this.appSettings=n,this.employeeLookupService=o,this.businessUnitService=r,this.notificationService=a,this.groupId=s,this.isBusinessUnitHeadExist=!1,this.disableButton=!0,this.groupManager=new e.Model.GroupManager({}),this.businessUnitService.getBusinessHeads(this.groupId).then(function(e){e.length>0&&(l.isBusinessUnitHeadExist=!0)})}return t.prototype.assignBusinessUnitHead=function(){var e=this;this.form.editBusinessUnitHeadForm.$valid&&(this.disableButton=!0,this.groupManager.groupId=this.groupId,this.groupManager.managerId=this.businessUnitHead.id,this.businessUnitService.saveBusinessUnitHead(this.groupId,this.groupManager).then(function(t){t.id&&t.id>0?(e._modalInstance.close(e.businessUnitHead),e.notificationService.success("Business Unit head saved successfully.")):(e.notificationService.information("Business Unit Head with this name already exists."),e.disableButton=!1)},function(t){e.notificationService.error("Failed to save business unit head."),e.disableButton=!1}))},t.prototype.getMatchedEmployee=function(e){if(e&&e.length>=2){var t=this._q.defer();return this.employeeLookupService.searchEmployees(e).then(function(e){0==e.length&&e.push({noResults:!0}),t.resolve(e)}),t.promise}},t.prototype.closeBusinessUnitHeadEditor=function(){this._modalInstance.dismiss()},t.$inject=["$uibModalInstance","$q","AppSettings","EmployeeLookupService","BusinessUnitService","NotificationService","groupId"],t}(),n=function(){function t(t,i,n,o,r,a,s){var l=this;if(this._state=t,this._stateParams=i,this.notificationService=n,this.businessUnitService=o,this.appSettings=r,this.qService=a,this.dialogs=s,this.isValid=!0,this.disableButton=!1,this.parentState=-1==this._state.current.name.indexOf("settings")?"setup.org.businessunits":"settings.company.businessunit",this.model=new e.Model.BusinessUnit({}),this.modelCopy=new e.Model.BusinessUnit({}),this._stateParams.id){var c=this._stateParams.id;this.businessUnitService.getBusinessUnit(c).then(function(e){l.model.id=e.id,l.model.name=e.name,l.model.description=e.description,l.modelCopy=angular.copy(l.model)})}}return t.prototype.addBusinessUnit=function(){var e=this;this.form.businessUnitForm.$valid&&this.isValid&&(this.disableButton=!0,this.businessUnitService.saveBusinessUnit(this.model).then(function(t){t.id&&t.id>0?(e.notificationService.success("Business unit saved successfully."),e._state.go(e.parentState)):(e.notificationService.information("Business Unit with same name already exists. Please use a different name."),e.disableButton=!1)},function(t){e.notificationService.error("Failed to save business unit."),e.disableButton=!1}))},t.prototype.updateBusinessUnit=function(){var e=this;this.form.businessUnitForm.$valid&&this.isValid&&(this.disableButton=!0,this.businessUnitService.updateBusinessUnit(this.model.id,this.model).then(function(t){t.isUpdated?(e.notificationService.success("Business unit updated successfully."),e._state.go(e.parentState)):(e.notificationService.information("Business Unit with same name already exists. Please use a different name."),e.disableButton=!1)},function(t){e.notificationService.error("Failed to update business unit."),e.disableButton=!1}))},t.prototype.isNameExist=function(e){var t=this;if(e){this.isValid=!1;var i=this.qService.defer();return this.model.id&&e.toLowerCase()==this.modelCopy.name.toLowerCase()?(this.isValid=!0,i.resolve(!0)):this.businessUnitService.doesNameExist(e).then(function(e){e.result?i.resolve(!1):(t.isValid=!0,i.resolve(!0))}),i.promise}},t.prototype.cancel=function(){this._state.go(this.parentState)},t.$inject=["$state","$stateParams","NotificationService","BusinessUnitService","AppSettings","$q","Utils","PublicProfileServices","dialogs"],t}(),angular.module("xhr").controller("BusinessUnitSettingsController",t).controller("BusinessUnitHeadEditController",i).controller("AddBusinessUnitController",n)}(Settings||(Settings={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){var t=function(){return function(e){this.id=e.id,this.name=e.name,this.description=e.description}}();e.BusinessUnit=t;var i=function(e){function t(t){var i=e.call(this,t)||this;return i.employeeCount=t.employeeCount,i.businessHeads=t.businessHeads,i}return __extends(t,e),t}(t);e.BusinessUnitListView=i;var n=function(){return function(e){this.id=e.id,this.groupId=e.groupId,this.managerId=e.managerId,this.employeeNumber=e.employeeNumber,this.displayName=e.displayName,this.profileImageUrl=e.profileImageUrl}}();e.BusinessHead=n}(e.Model||(e.Model={}))}(Settings||(Settings={})),function(e){var t,i;e.Controllers||(e.Controllers={}),t=function(){function t(t,i,n,o,r,a,s){var l=this;this._state=t,this._q=i,this.notificationService=n,this.OrgLocationService=o,this.lookupServices=r,this.appSettings=a,this.dialogs=s,this.orgLocations=[],this.countries=[],this.refreshGrid=!1,this.parentState=-1==this._state.current.name.indexOf("settings")?".locations":"settings.company",this.OrgLocationService.getOrgLocationListViews().then(function(t){for(var i=0,n=t;i<n.length;i++){var o=n[i];l.orgLocations.push(new e.Model.OrgLocationListItem(o))}}),this.lookupServices.lookup.query({id:"countries"}).$promise.then(function(e){l.countries=e}),this.initGridOptions()}return t.prototype.initGridOptions=function(){this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.columnDefs=[{field:"name",displayName:"NAME",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><h5>{{grid.getCellValue(row,col)}}</h5></div>',sort:{direction:"asc",priority:1}},{field:"orgLocationDetails",displayName:"Address",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-show="row.entity.orgLocationDetails.address.addressLine1"> {{ row.entity.orgLocationDetails.address.addressLine1 }}, </span><span data-ng-show="row.entity.orgLocationDetails.address.addressLine2">{{ row.entity.orgLocationDetails.address.addressLine2 }} </span> <br/><span data-ng-show="row.entity.orgLocationDetails.address.city"> {{ row.entity.orgLocationDetails.address.city }} </span> <br/><span data-ng-show="row.entity.orgLocationDetails.address.state"> {{ row.entity.orgLocationDetails.address.state }}, </span><span data-ng-show="grid.appScope.ctrl.getCountryName(row.entity.orgLocationDetails.address.countryCode)">{{ grid.appScope.ctrl.getCountryName(row.entity.orgLocationDetails.address.countryCode) }} </span></div>'},{field:"employeeCount   ",displayName:"APPLIES TO",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span class="pull-left" style="text-align:center;"><span>{{row.entity.employeeCount}}</span><p>Employees</p></span></div>'},{name:"Actions",displayName:"ACTIONS",enableSorting:!1,cellClass:"ui-grid-cell cell-tooltip",cellTemplate:'<div class="ui-grid-cell-options ui-grid-cell-contents"><span class="clearfix "><ul class="action-items list-inline"><li class="list-item"><a class="list-link" ui-sref="^.editlocation({id : row.entity.id})"><span class="icon-pencil5" uib-tooltip="Edit" tooltip-placement="left"></span></a></li><li class="list-item"><a class="list-link" data-ng-click="grid.appScope.ctrl.deleteLocation(row.entity);"><span class="icon-remove3" uib-tooltip="Delete" tooltip-placement="right"></span></a></li></ul></span></div>'}],this.gridSettings.rowHeight=80,this.gridSettings.data="ctrl.orgLocations"},t.prototype.deleteLocation=function(e){var t=this;this.dialogs.confirm("Confirm Deletion","Are you sure you want to delete '"+e.name+"' Location.").result.then(function(){t.refreshGrid=!0,t.OrgLocationService.deleteOrgLocation(e.id).then(function(i){i.isDeleted?(t.notificationService.success("Location deleted Successfully"),t.orgLocations=t.orgLocations.filter(function(t){return t.id!=e.id})):t.notificationService.error("Location cannot be deleted because it is assigned to employees.")},function(e){t.notificationService.error("An error occurred while deleting location.")}),t.refreshGrid=!1})},t.prototype.getCountryName=function(e){if(this.countries.length>0)return this.countries.find(function(t){return t.code==e}).name},t.$inject=["$state","$q","NotificationService","OrgLocationService","LookupServices","AppSettings","dialogs"],t}(),i=function(){function t(t,i,n,o,r,a,s,l,c){var p=this;if(this._state=t,this._stateParams=i,this.notificationService=n,this._location=o,this.orgLocationService=r,this.lookupServices=a,this.appSettings=s,this.qService=l,this.dialogs=c,this.orgLocations=[],this.locations=[],this.timezones=[],this.countries=[],this.states=[],this.isValid=!0,this.disableButton=!1,this.parentState=-1==this._state.current.name.indexOf("settings")?"setup.org.locations":"settings.company.locations",this.model=new e.Model.OrgLocation({}),this.modelCopy=new e.Model.OrgLocation({}),this.qService.all([this.lookupServices.lookup.query({id:"locations"}).$promise,this.lookupServices.lookup.query({id:"timezones"}).$promise,this.lookupServices.lookup.query({id:"countries"}).$promise,this.lookupServices.lookup.query({id:"states"}).$promise]).then(function(e){p.locations=e[0],p.timezones=e[1],p.countries=e[2],p.states=e[3],null==p.model.orgLocationDetails.timezoneId&&(p.model.orgLocationDetails.timezoneId=p.timezones[68].identifier,p.model.orgLocationDetails.address.countryCode="IN")}),this._stateParams.id){var u=this._stateParams.id;this.orgLocationService.getOrgLocation(u).then(function(e){p.model.id=e.id,p.model.name=e.name,p.model.description=e.description,p.model.email=e.email,p.model.orgLocationDetails=e.orgLocationDetails,p.modelCopy=angular.copy(p.model)})}}return t.prototype.addLocation=function(){var e=this;this.form.addLocationForm.$valid&&this.isValid&&(this.disableButton=!0,this.orgLocationService.saveOrgLocation(this.model).then(function(t){t.id&&t.id>0?(e.notificationService.success("Location saved successfully."),e._state.go(e.parentState)):(e.notificationService.error("Location with this name already exists."),e.disableButton=!1)},function(t){e.notificationService.error("Failed to save location."),e.disableButton=!1}))},t.prototype.updateLocation=function(){var e=this;this.form.addLocationForm.$valid&&this.isValid&&(this.disableButton=!0,this.orgLocationService.updateOrgLocation(this.model.id,this.model).then(function(t){t.isUpdated?(e.notificationService.success("Location updated successfully."),e._state.go(e.parentState)):(e.notificationService.error("Location with this name already exists."),e.disableButton=!1)},function(t){e.notificationService.error("Failed to update location."),e.disableButton=!1}))},t.prototype.isNameExist=function(e){var t=this;if(e){this.isValid=!1;var i=this.qService.defer();return this.model.id&&e.toLowerCase()==this.modelCopy.name.toLowerCase()?(this.isValid=!0,i.resolve(!0)):this.orgLocationService.doesNameExist(e).then(function(e){e.result?i.resolve(!1):(t.isValid=!0,i.resolve(!0))}),i.promise}},t.prototype.cancel=function(){this._state.go(this.parentState)},t.$inject=["$state","$stateParams","NotificationService","$location","OrgLocationService","LookupServices","AppSettings","$q","dialogs"],t}(),angular.module("xhr").controller("LocationSettingsController",t).controller("AddLocationController",i)}(Settings||(Settings={})),function(e){!function(e){var t=function(){return function(e){this.id=e.id,this.name=e.name,this.description=e.description,this.email=e.email,this.orgLocationDetails=e.orgLocationDetails?new n(e.orgLocationDetails):new n({})}}();e.OrgLocation=t;var i=function(){return function(e){this.id=e.id,this.name=e.name,this.email=e.email,this.orgLocationDetails=new n(e.orgLocationDetails),this.employeeCount=e.employeeCount}}();e.OrgLocationListItem=i;var n=function(){return function(e){this.address=e.address?new o(e.address):new o({}),this.timezoneId=e.timezoneId}}();e.OrgLocationDetails=n;var o=function(){return function(e){this.addressLine1=e.addressLine1,this.addressLine2=e.addressLine2,this.countryCode=e.countryCode,this.city=e.city,this.state=e.state,this.zip=e.zip,this.latitude=e.latitude,this.longitude=e.longitude}}();e.Address=o}(e.Model||(e.Model={}))}(Settings||(Settings={}));var Attendance,MyTeam;__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){var t=function(){return function(e){this.id=e.id,this.name=e.name,this.description=e.description,this.parentGroupId=e.parentGroupId,this.email=e.email}}();e.Department=t;var i=function(e){function t(t){var i=e.call(this,t)||this;return i.employeeCount=t.employeeCount,i.departmentHeads=t.departmentHeads,i}return __extends(t,e),t}(t);e.DepartmentListItem=i}(e.Model||(e.Model={}))}(Settings||(Settings={})),function(e){!function(t){var i=function(){function e(e,t,i,n,o,r,a){this._q=e,this.appSettings=t,this.departmentSettingsService=i,this.notificationService=n,this.dialogs=o,this._modal=r,this._state=a,this.departments=[],this.refreshGrid=!1,this.parentState=-1==this._state.current.name.indexOf("settings")?"setup.org.departments":"settings.company",this.init()}return e.prototype.init=function(){var e=this;this._q.all([this.departmentSettingsService.getDepartmentListItems(),this.departmentSettingsService.getDepartmentHeads()]).then(function(t){e.departments=t[0];var i=t[1];e.departments.forEach(function(t){var n=i.filter(function(e){return e.groupId==t.id})||"";t.departmentHeads=e.getDepartmentHeadsCSV(n);var o=e.departments.find(function(e){return e.id==t.parentGroupId});t.parentGroupName=null!=o?o.name:""})}),this.initializeDepartmentGridSettings()},e.prototype.initializeDepartmentGridSettings=function(){this.departmentListGridOptions=angular.copy(this.appSettings.gridSettings),this.departmentListGridOptions.columnDefs=[{field:"name",displayName:"NAME",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-class="{\'align-cell-text\': row.entity.description}"><ul class="list-unstyled"><li><span>{{row.entity.name}}</span></li><li><span>{{row.entity.description}}</span></li></ul></div>',sort:{direction:"asc",priority:1}},{field:"parentGroupName",displayName:"Parent Department",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents" title="{{row.entity.parentGroupName}}"><span class="text-center">{{row.entity.parentGroupName}}<p></p></span></div>'},{field:"employeeCount",displayName:"APPLIES TO",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span class="pull-left text-center"><span>{{grid.getCellValue(row,col)||0}}</span><p>Employees</p></span></div>'},{name:"heads",displayName:"Department Head",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents" title="{{row.entity.departmentHeads}}"><span class="text-center">{{row.entity.departmentHeads}}<p></p></span></div>'},{name:"Actions",displayName:"ACTIONS",enableSorting:!1,cellClass:"ui-grid-cell cell-tooltip ui-grid-cell-contents",cellTemplate:'<div class="ui-grid-cell-options"><span class="clearfix"><ul class="action-items list-inline" style="position:relative"><li class="list-item"><a data-ui-sref="^.editdepartment({id: row.entity.id})" class="list-link"><span class="icon-pencil5" uib-tooltip="Edit" tooltip-placement="left"></span></a></li><li class="list-item"><a class="list-link" data-ng-click="grid.appScope.ctrl.deleteDepartment(row.entity);"><span class="icon-remove3" uib-tooltip="Delete" tooltip-placement="right"></span></a></li><li class="list-item"><span class="icon-user sidebar-list-icon tooltip-grey node" uib-tooltip="Assign Department head" tooltip-placement="right" data-ng-click="grid.appScope.ctrl.assignDepartmentHead(row.entity.id);" style="position:absolute;top:6px"></span></li></ul></span></div>'}],this.departmentListGridOptions.data="ctrl.departments",this.departmentListGridOptions.rowHeight=60},e.prototype.deleteDepartment=function(e){var t=this;this.dialogs.confirm("Confirm Deletion","Are you sure you want to delete '"+e.name+"' Department.").result.then(function(){t.refreshGrid=!0,t.departmentSettingsService.deleteDepartment(e.id).then(function(i){i.isDeleted?(t.notificationService.success("Department deleted successfully"),t.departments=t.departments.filter(function(t){return t.id!=e.id})):t.notificationService.error("Can't delete the department which is assigned to employees or assigned as parent.")},function(e){t.notificationService.error("Failed to delete department.")}),t.refreshGrid=!1})},e.prototype.assignDepartmentHead=function(e){var t=this;this._modal.open({templateUrl:"editDepartmentHead",controller:"DepartmentHeadEditController",controllerAs:"ctrl",windowClass:"groupManager-edit",resolve:{groupId:function(){return e}}}).result.then(function(i){t.refreshGrid=!0,t.departments.find(function(t){return t.id==e}).departmentHeads=i.displayName,t.refreshGrid=!1})},e.prototype.getDepartmentHeadsCSV=function(e){var t="";return e.forEach(function(i){t+=i.displayName,e.length>1&&(t+=", ")}),e.length>1?t.slice(0,t.length-2):t},e.$inject=["$q","AppSettings","DepartmentSettingsService","NotificationService","dialogs","$uibModal","$state"],e}(),n=function(){function t(t,i,n,o,r,a,s){var l=this;this._modalInstance=t,this._q=i,this.appSettings=n,this.employeeLookupService=o,this.departmentSettingsService=r,this.notificationService=a,this.groupId=s,this.isDepartmentHeadExist=!1,this.disableButton=!0,this.groupManager=new e.Model.GroupManager({}),this.departmentSettingsService.getDepartmentHeads(this.groupId).then(function(e){e.length>0&&(l.isDepartmentHeadExist=!0)})}return t.prototype.assignDepartmentHead=function(){var e=this;this.form.editDepartmentHeadForm.$valid&&(this.disableButton=!0,this.groupManager.groupId=this.groupId,this.groupManager.managerId=this.departmentHead.id,this.departmentSettingsService.saveDepartmentHead(this.groupId,this.groupManager).then(function(t){t.id&&t.id>0?(e._modalInstance.close(e.departmentHead),e.notificationService.success("Department head saved successfully.")):(e.notificationService.error("Department Head with this name already exists."),e.disableButton=!1)},function(t){e.notificationService.error("Failed to save department head."),e.disableButton=!1}))},t.prototype.getMatchedEmployee=function(e){if(e&&e.length>=2){var t=this._q.defer();return this.employeeLookupService.searchEmployees(e).then(function(e){0==e.length&&e.push({noResults:!0}),t.resolve(e)}),t.promise}},t.prototype.closeDepartmentHeadEditor=function(){this._modalInstance.dismiss()},t.$inject=["$uibModalInstance","$q","AppSettings","EmployeeLookupService","DepartmentSettingsService","NotificationService","groupId"],t}(),o=function(){function t(t,i,n,o,r,a,s,l,c){var p=this;this._state=t,this._q=i,this.utilService=n,this.departmentSettingsService=o,this.notificationService=r,this.dialogs=a,this.appSettings=s,this._stateParams=l,this.publicProfileServices=c,this.isValid=!0,this.departments=[],this.disableButton=!1,this.parentState=-1==this._state.current.name.indexOf("settings")?"setup.org.departments":"settings.company.department",this.model=new e.Model.Department({}),this.modelCopy=angular.copy(this.model),this.departmentSettingsService.getAllDepartments().then(function(e){p.departments=e.filter(function(t){return!e.some(function(e){return e.id===t.parentGroupId})}),p.groupId=l.id,p.groupId&&p.departmentSettingsService.getDepartment(p.groupId).then(function(e){p.editDepartment(e)})})}return Object.defineProperty(t.prototype,"doesParentGroupExists",{get:function(){var e=this;return this.departments.some(function(t){return t.id===e.model.parentGroupId})},enumerable:!0,configurable:!0}),t.prototype.addDepartment=function(){var e=this;this.form.departmentForm.$inValid||this._q.all([this.isNameUnique(this.model)]).then(function(t){t[0]?e.form.departmentForm.$valid&&(e.disableButton=!0,e.departmentSettingsService.saveDepartment(e.model).then(function(t){t.id&&t.id>0?(e.notificationService.success("Department saved successfully."),e.resetForm()):(e.notificationService.error("Department with this name already exists."),e.disableButton=!1)},function(t){e.notificationService.error("Failed to save department."),e.disableButton=!1})):e.notificationService.success("Department with this name already exists.")})},t.prototype.editDepartment=function(e){var t=this;this.model=angular.copy(e),this.modelCopy=angular.copy(this.model),this.departments=this.departments.filter(function(e){return e.id!=t.model.id}),this.parentGroup=this.departments.find(function(e){return e.id==t.model.parentGroupId})},t.prototype.updateDepartment=function(){var e=this;this.form.departmentForm.$invalid||this._q.all([this.isNameUnique(this.model)]).then(function(t){t[0]&&e.form.departmentForm.$valid?(e.disableButton=!0,e.departmentSettingsService.updateDepartment(e.groupId,e.model).then(function(t){t.isUpdated?(e.notificationService.success("Department updated successfully."),e.resetForm()):(e.notificationService.error("Department with this name already exists."),e.disableButton=!1)},function(t){e.notificationService.error("Failed to update department."),e.disableButton=!1})):e.notificationService.success("Department with this name already exists.")})},t.prototype.isNameUnique=function(e){var t=this;if(null!=e){this.isValid=!1;var i=this._q.defer();this.model.id&&e.name.toLowerCase()==this.modelCopy.name.toLowerCase()&&e.parentGroupId==this.modelCopy.parentGroupId?(this.isValid=!0,i.resolve(!0)):this.departmentSettingsService.isDepartmentNameUnique(e).then(function(e){e.doesDepartmentNameExist?(t.parentGroupName=e.parentGroupName,t.isValid=!1,i.resolve(!1)):(t.isValid=!0,i.resolve(!0))})}return i.promise},t.prototype.resetForm=function(){this.model=null,this.form.departmentForm.$setPristine(),this._state.go(this.parentState)},t.$inject=["$state","$q","Utils","DepartmentSettingsService","NotificationService","dialogs","AppSettings","$stateParams","PublicProfileServices"],t}(),r=function(){function e(e,t,i,n,o,r,a,s){var l=this;this._stateParams=e,this._modalInstance=t,this._location=i,this.notificationService=n,this._state=o,this.appSettings=r,this.departmentSettingsService=a,this.fileDownloadService=s,this.steps=[],this.invalidDepartments=[],this.modalTitle="Import Department",this.setGridApi=function(e){l.gridApi=e},this.steps.push(new SharedModel.Step(1,"Upload Excel File","","excel-departments-import",!1)),this.steps.push(new SharedModel.Step(2,"Import","","departments-import-preview",!1)),this.currentStep=this.steps[0],this.baseUrl=-1==this._state.current.name.indexOf("settings")?"/old/#/leaves":"/old/#/settings/leaves",this.initializeGridSettings()}return e.prototype.closeModal=function(){this._modalInstance.close(!0)},e.prototype.downloadDepartmentImportSample=function(){this.fileDownloadService.downloadFile("/api/excel/template/departmentImport")},e.prototype.importDepartments=function(){var e=this;this.departmentSettingsService.importDepartments().then(function(t){0==t.validationResult.failures.length?(e.notificationService.error("Department information imported successfully."),e.closeModal()):e.notificationService.error("Error occured while processing excel file")},function(t){e.notificationService.error("Error occured while processing excel file")})},e.prototype.onFileUploaded=function(e){var t=this;e.result?this.departmentSettingsService.getImportDepartmentValidation().then(function(e){e.failures.length>0?(t.hideFileUpload=!0,t.invalidDepartments=angular.copy(e.failures)):(t.importedDepartments=e.successful,t.nextStep())},function(e){t.notificationService.error("Error occured while processing excel file")}):this.notificationService.error("Error occured while processing excel file")},e.prototype.nextStep=function(){var e=this;this.currentStep.valid=!0,this.currentStep=this.steps.filter(function(t){return t.index==e.currentStep.index+1})[0]},e.prototype.initializeGridSettings=function(){this.departmentsGridOptions=angular.copy(this.appSettings.gridSettings),this.departmentsGridOptions.rowHeight=50,this.departmentsGridOptions.columnDefs=[{field:"departmentName",cellClass:"ui-grid-cell",displayName:"Department Name"},{field:"description",cellClass:"ui-grid-cell",displayName:"Description"}],this.departmentsGridOptions.data="ctrl.importedDepartments",this.departmentsGridOptions.multiSelect=!0,this.departmentsGridOptions.onRegisterApi=this.setGridApi,this.departmentsGridOptions.beforeSelectionChange=function(e){return!0}},e.$inject=["$stateParams","$uibModalInstance","$location","NotificationService","$state","AppSettings","DepartmentSettingsService","FileDownloadService"],e}();t.ExcelImportDepartmentImportController=r,angular.module("xhr").controller("DepartmentHeadEditController",n).controller("DepartmentSettingsController",i).controller("AddDepartmentController",o).controller("ExcelImportDepartmentImportController",r)}(e.Controllers||(e.Controllers={}))}(Settings||(Settings={})),function(e){!function(e){!function(e){var t=function(){function e(e){this.resource=e,this.businessUnitResource=this.resource("/api/businessunit/:id/:action",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getBusinessUnit=function(e){return this.businessUnitResource.get({id:e}).$promise},e.prototype.getAllBusinessUnits=function(){return this.businessUnitResource.query({action:"all"}).$promise},e.prototype.getBusinessUnitListViews=function(){return this.businessUnitResource.query({action:"list"}).$promise},e.prototype.saveBusinessUnit=function(e){return this.businessUnitResource.save({action:"add"},e).$promise},e.prototype.saveBusinessUnitHead=function(e,t){return this.businessUnitResource.save({action:"addbusinessunithead",id:e},t).$promise},e.prototype.updateBusinessUnit=function(e,t){return this.businessUnitResource.update({id:e,action:"update"},t).$promise},e.prototype.deleteBusinessUnit=function(e){return this.businessUnitResource.delete({id:e,action:"delete"}).$promise},e.prototype.getBusinessHeads=function(e){return this.businessUnitResource.query({id:e,action:"businessheads"}).$promise},e.prototype.doesNameExist=function(e){return this.businessUnitResource.get({action:"doesnameexist",name:e}).$promise},e.$inject=["$resource"],e}();e.BusinessUnitService=t;var i=function(){function e(e){this.resource=e,this.orgLocationResource=this.resource("/api/orglocation/:id/:action",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getOrgLocations=function(){return this.orgLocationResource.query({action:"all"}).$promise},e.prototype.getOrgLocation=function(e){return this.orgLocationResource.get({id:e}).$promise},e.prototype.getOrgLocationListViews=function(){return this.orgLocationResource.query({action:"list"}).$promise},e.prototype.saveOrgLocation=function(e){return this.orgLocationResource.save({action:"add"},e).$promise},e.prototype.updateOrgLocation=function(e,t){return this.orgLocationResource.update({id:e,action:"update"},t).$promise},e.prototype.deleteOrgLocation=function(e){return this.orgLocationResource.delete({id:e,action:"delete"}).$promise},e.prototype.getOrgLocationHeads=function(e){return this.orgLocationResource.query({id:e,action:"heads"}).$promise},e.prototype.doesNameExist=function(e){return this.orgLocationResource.get({action:"doesnameexist",name:e}).$promise},e.$inject=["$resource"],e}();e.OrgLocationService=i;var n=function(){function e(e){this._resource=e,this.department=this._resource("/api/department/:id/:action",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getAllDepartments=function(){return this.department.query({action:"all"}).$promise},e.prototype.getDepartment=function(e){return this.department.get({id:e}).$promise},e.prototype.getDepartmentListItems=function(){return this.department.query({action:"list"}).$promise},e.prototype.getDepartmentHeads=function(){return this.department.query({action:"getallheads"}).$promise},e.prototype.saveDepartment=function(e){return this.department.save({action:"add"},e).$promise},e.prototype.saveDepartmentHead=function(e,t){return this.department.save({action:"adddepartmenthead",id:e},t).$promise},e.prototype.updateDepartment=function(e,t){return this.department.update({action:"update",id:e},t).$promise},e.prototype.deleteDepartment=function(e){return this.department.delete({action:"delete",id:e}).$promise},e.prototype.isDepartmentNameUnique=function(e){return this.department.get({action:"isdepartmentnameunique",name:e.name}).$promise},e.prototype.importDepartments=function(){return this.department.update({action:"import/departments"}).$promise},e.prototype.getImportDepartmentValidation=function(){return this.department.get({action:"import/departmentvalidation"}).$promise},e.$inject=["$resource"],e}();e.DepartmentSettingsService=n;var o=function(){function e(e){this._resource=e,this.costcenter=this._resource("/api/costcenter/:id/:action",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getAllCostCenters=function(){return this.costcenter.query({action:"all"}).$promise},e.prototype.getCostCenter=function(e){return this.costcenter.get({id:e}).$promise},e.prototype.saveCostCenter=function(e){return this.costcenter.save({action:"add"},e).$promise},e.prototype.updateCostCenter=function(e,t){return this.costcenter.update({action:"update",id:e},t).$promise},e.prototype.deleteCostCenter=function(e){return this.costcenter.delete({action:"delete",id:e}).$promise},e.prototype.doesCostCenterNameExists=function(e){return this.costcenter.get({action:"doesnameexist",name:e}).$promise},e.prototype.doesCostCenterCodeExists=function(e){return this.costcenter.get({action:"doescodeexist",code:e}).$promise},e.$inject=["$resource"],e}();e.CostCenterSettingsService=o,angular.module("xhr").service("BusinessUnitService",t).service("OrgLocationService",i).service("DepartmentSettingsService",n).service("CostCenterSettingsService",o)}(e.Services||(e.Services={}))}(e.OrgStructure||(e.OrgStructure={}))}(Settings||(Settings={})),appRoot.controller("LeaveSettingsController",["$scope","$resource","$stateParams","$state","$uibModal","$q","AppSettings","GetStartedSteps","DashboardServices","$location","TimeDuration","LookupServices","LeaveSettingsService","NotificationService","AppContext",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y){e.vm={},e.vm.timeDuration=p,e.$on("$stateChangeSuccess",function(t,i,o,r,a){e.vm.state=n.current});y.isOrgSetupComplete||l.updateOnBoardStep(s.LeavePlans.id).then(function(e){console.log(e)})}]),appRoot.controller("NotifyController",["$scope","$resource","$stateParams","$state","$uibModal","$q","NotificationService","TimeDuration","SpecialDays","SystemLeaveType","LeaveSettingsService","LeavesLimit","$location","OrgSettingServices","$filter","LookupServices",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h){e.vm={},e.vm.approvers=[],e.loadApproverDetails=function(t){e.vm.selectedLocation=t,m.organization.get({action:"LeaveNotificationRecipients",locationId:t.id},function(t){t.recipients?e.vm.approvers=t.recipients:e.vm.approvers=[]})};h.lookup.query({id:"locations"},function(t){e.vm.locations=t,e.vm.selectedLocation=t[0],e.loadApproverDetails(t[0])}),e.addEmployees=function(){o.open({templateUrl:"employee-list-template",controller:"EmployeeSearchController",windowClass:"employee-search-tmpl",resolve:{employees:function(){return angular.copy(e.vm.approvers)}}}).result.then(function(t){t&&y("xor")(t,e.vm.approvers,"id").length&&(e.vm.approvers=t,e.updateRecipientsList())},function(){})},e.removeEmployee=function(t){e.vm.approvers.length<=0||(e.vm.approvers=y("omit")(e.vm.approvers,"id=="+t),e.updateRecipientsList())},e.updateRecipientsList=function(){var t=[];angular.forEach(e.vm.approvers,function(e,i){t.push(e.id)}),m.organization.update({action:"LeaveNotificationRecipients",id:e.vm.selectedLocation.id},t,function(e){a.success("Recipients updated successfully")})}}]),appRoot.controller("EmployeeSearchController",["$scope","$resource","$stateParams","$state","$uibModal","$q","NotificationService","$filter","$uibModalInstance","LeavesLimit","$location","OrgSettings","EmployeeLookupService","employees",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m){e.vm={},e.employees=m,e.closeModal=function(){l.close()},e.employees&&e.employees.length||(e.employees=[]),e.searchEmployees=function(t){if(t&&t.length>=2){var i=r.defer();return d.searchEmployees(t).then(function(t){0==(t=s("omit")(t,e.filterById)).length&&t.push({noResults:!0}),i.resolve(t)}),i.promise}},e.filterById=function(t){var i=!1;return angular.forEach(e.employees,function(e){e.id==t.id&&(i=!0)}),i},e.updateSelectedList=function(){e.vm.member&&(e.employees.push(e.vm.member),e.vm.member=null)},e.removeMember=function(t){e.employees.splice(t,1)},e.filterEmployees=function(t){return-1!=e.employees.indexOf(t.id)},e.add=function(){l.close(e.employees)}}]),appRoot.factory("SettingsModel",["SharedModel",function(e){return{OrgLocation:function(t){this.name=t.name,this.id=t.id,this.orgId=t.orgId,this.timezoneId=t.timezoneId,this.orgAddress=new e.Address({})},LegalEntity:function(){this.id=null,this.name=null,this.financialYear=null,this.address=new e.Address({})},DocumentSet:function(e){this.id=e.id,this.name=e.name,this.folderId=e.folderId,this.description=e.description,this.requireVerification=e.requireVerification,this.visibleToManager=e.visibleToManager},DocumentType:function(e){this.id=e.id,this.name=e.name,this.folderId=e.folderId,this.description=e.description,this.remarks=e.remarks,this.requireVerification=e.requireVerification,this.visibility=e.visibility},DocumentFolder:function(e){this.id=e.id,this.name=e.name,this.description=e.description,this.documentTypes=e.documentTypes,this.locationId=e.locationId},Department:function(e){this.id=e.id,this.name=e.name,this.description=e.description,this.departmentHeads=e.departmentHeads||[],this.employeeCount=e.employeeCount,this.getDepartmentHeadsCsv=function(e){var t="";return e&&Object.keys(e).length>0&&this.departmentHeads.forEach(function(i){t.length>0?t+=", "+e[i].displayName:t=e[i].displayName}),t}}}}]),function(e){!function(e){var t=function(){function e(e){this.id=e.id,this.orgId=e.orgId,this.name=e.name,this.logoPath=e.logoPath,this.companyInfo=new o(e.companyInfo||{}),this.labourWelfareFund=new c(e.labourWelfareFund||{}),this.signatory=(e.signatory||[]).map(function(e){return new i(e)}),this.bankAccount=(e.bankAccount||[]).map(function(e){return new n(e)}),this.timesheetInvoiceInfo=e.timesheetInvoiceInfo}return e.prototype.toJSON=function(){return{id:this.id,name:this.name,logoPath:this.logoPath}},e}();e.LegalEntity=t;var i=function(){function e(e){this.identifier=e.identifier,this.name=e.name,this.email=e.email,this.designation=e.designation,this.fatherName=e.fatherName,this.panNumber=e.panNumber,this.address=e.address||{}}return e.prototype.update=function(e){this.constructor(e)},e}();e.Signatory=i;var n=function(){function e(e){this.id=e.id,this.name=e.name,this.identifier=e.identifier,this.accountNumber=e.accountNumber,this.branch=e.branch,this.ifscCode=e.ifscCode,this.corporateId=e.corporateId}return e.prototype.updateBank=function(){this.bank&&(this.id=this.bank.id,this.name=this.bank.name)},e.prototype.update=function(e){this.constructor(e)},e}();e.BankAccountDetails=n;var o=function(){function e(e){this.companyId=e.companyId,this.companyType=e.companyType,this.legalName=e.legalName,this.registrationDate=Date.getDateObj(e.registrationDate),this.address=e.address||{}}return e.prototype.toJSON=function(){var e=angular.copy(this);return e.registrationDate=this.registrationDate.dateOnlyString(),e},e}();e.CompanyInfo=o;var r=function(){return function(e){this.quickLinks=e.quickLinks}}();e.QuickLinkSettings=r;var a=function(){return function(e,t){this.label=e,this.link=t}}();e.QuickLink=a;var s=function(){function e(e){this.id=e.id,this.panNumber=e.panNumber,this.tanNumber=e.tanNumber,this.tanCircleNumber=e.tanCircleNumber,this.form16SignatoryId=e.form16SignatoryId,this.citLocation=e.citLocation}return e.prototype.valid=function(){return null!=this.panNumber&&null!=this.tanNumber&&null!=this.tanCircleNumber&&null!=this.form16SignatoryId&&null!=this.citLocation},e}();e.IncomeTaxInfo=s;var l=function(){function e(e){this.id=e.id,this.name=e.name,this.esiNumber=e.esiNumber,this.registrationDate=Date.getDateObj(e.registrationDate),this.signatoryId=e.signatoryId}return e.prototype.valid=function(){return null!=this.esiNumber&&null!=this.registrationDate&&null!=this.signatoryId},e.prototype.updateSignatory=function(e){this.signatoryId=e?e.identifier:null},e.prototype.toJSON=function(){var e=angular.copy(this);return e.registrationDate=this.registrationDate.dateOnlyString(),e},e}();e.ESIInfo=l;var c=function(){function e(e){this.id=e.id,this.stateCode=e.stateCode,this.signatory=e.signatory}return e.prototype.valid=function(){return null!=this.stateCode&&null!=this.signatory},e}();e.LabourWelfareFundInfo=c;var p=function(){function e(e){this.id=e.id,this.stateCode=e.stateCode,this.ptNumber=e.ptNumber,this.registrationDate=e.registrationDate?Date.getDateObj(e.registrationDate):e.registrationDate,this.signatory=e.signatory,this.otherApplicableStates=e.otherApplicableStates||[]}return e.prototype.valid=function(){return null!=this.stateCode&&null!=this.ptNumber&&null!=this.registrationDate&&null!=this.signatory},e.prototype.toJSON=function(){var e=angular.copy(this);return e.registrationDate&&(e.registrationDate=this.registrationDate.dateOnlyString()),e},e}();e.ProfessionalTaxInfo=p;var u=function(){function e(e){this.toJSON=function(){var e=angular.copy(this);return e.registrationDate=this.registrationDate.dateOnlyString(),e},this.id=e.id,this.pfNumber=e.pfNumber,this.name=e.name,this.registrationDate=Date.getDateObj(e.registrationDate),this.signatoryId=e.signatoryId}return e.prototype.valid=function(){return null!=this.pfNumber&&null!=this.registrationDate&&null!=this.signatoryId},e.prototype.updateSignatory=function(e){this.signatoryId=e?e.identifier:null},e}();e.ProvidentFundInfo=u;var d=function(){return function(e,t,i,n){this.headerNote=e,this.logoPath=t,this.paymentInstructions=i,this.billingAddress=n}}();e.TimesheetInvoiceInfo=d;var m=function(){return function(e,t,i,n,o){this.id=e,this.legalEntityId=t,this.code=i,this.description=n,this.taxComponents=o,this.taxComponents=new Array}}();e.InvoiceTaxGroup=m;var y=function(){return function(e,t,i,n){this.taxGroupId=e,this.id=t,this.name=i,this.taxRate=n}}();e.InvoiceTax=y;var h=function(){return function(e,t,i,n,o,r){this.id=e,this.name=t,this.termType=i,this.numberOfDays=n,this.dayOfMonth=o,this.daysToDueDate=r,this.termType=f.FixedPeriod}}();e.PaymentTerm=h;var f,g=function(){return function(e){this.id=e.id,this.identifier=e.identifier,this.name=e.name,this.description=e.description}}();e.MetricUnit=g,function(e){e[e.FixedPeriod=0]="FixedPeriod",e[e.FixedDayInMonth=1]="FixedDayInMonth"}(f=e.PaymentTermType||(e.PaymentTermType={}));var v=function(){return function(e){this.id=e.id,this.type=e.type||S.None,this.name=e.name,this.description=e.description,this.isDefault=e.isDefault,this.parentGroupId=e.parentGroupId,this.identifier=e.identifier,this.code=e.code,this.email=e.email}}();e.Group=v;var S,C=function(){return function(e){this.id=e.id,this.groupId=e.groupId,this.managerId=e.managerId,this.groupType=e.groupType}}();e.GroupManager=C,function(e){e[e.None=0]="None",e[e.BusinessUnit=1]="BusinessUnit",e[e.Department=2]="Department",e[e.OrgLocation=3]="OrgLocation",e[e.CostCenter=4]="CostCenter",e[e.Paygroup=5]="Paygroup",e[e.ProjectTeam=6]="ProjectTeam",e[e.Team=7]="Team",e[e.ClientTeam=8]="ClientTeam"}(S=e.GroupType||(e.GroupType={}))}(e.Model||(e.Model={}))}(Settings||(Settings={})),appRoot.controller("ExitReasonsController",["$scope","$stateParams","$state","OrgSettingServices","NotificationService","TerminationResonType","$uibModal","AppSettings","$filter","Utils","dialogs",function(e,t,i,n,o,r,a,s,l,c,p){e.vm={},e.vm.terminationResonTypes=r,e.vm.model={},e.vm.terminationReasons=[],e.vm.modelOptions=s.modelBlurSettings;e.addReason=function(){e.vm.model=new function(e){this.id=e.id||c.getGuid(),this.reason=e.reason,this.terminationReasonType=e.terminationReasonType}({}),e.vm.isEdit=!1,e.vm.submitted=!1;var t=a.open({templateUrl:"AddExitReasonTemplate",scope:e});e.modalInstance=t},e.editReason=function(t){e.vm.model=angular.copy(t),e.vm.isEdit=!0,e.vm.submitted=!1;var i=a.open({templateUrl:"AddExitReasonTemplate",scope:e});e.modalInstance=i},n.getTerminationReasons().then(function(t){t.terminationReasons&&(e.vm.terminationReasons=t.terminationReasons,angular.forEach(e.vm.terminationReasons,function(e,t){e.index=t}),e.vm.reasonsByType=l("groupBy")(t.terminationReasons,"terminationReasonType"))}),e.updateTerminationSettings=function(t){n.organization.update({action:"terminationreasons"},e.vm.terminationReasons,function(i){o.success(t.task+" "+t.action+" successfully."),e.vm.model=null,angular.forEach(e.vm.terminationReasons,function(e,t){e.index=t})},function(e){o.error("An error occurred while updating termination settings.")})},e.saveReason=function(){if(e.vm.form.TerminationReason.$valid){if(!e.vm.model.reason)return;e.vm.terminationReasons.push(e.vm.model),e.modalInstance.close(),e.updateTerminationSettings({action:"added",task:"Termination reason"})}else e.$broadcast("validateForm")},e.updateReason=function(){e.vm.model.reason&&(e.vm.terminationReasons[e.vm.model.index]=e.vm.model,e.modalInstance.close(),e.updateTerminationSettings({action:"updated",task:"Termination reason"}))},e.removeReason=function(t){p.confirm("Please Confirm","Are you sure want to delete this reason ?").result.then(function(){n.organization.get({action:"isterminationreasonused",id:t.id},e.vm.terminationReasons,function(i){i.isUsed?o.error(t.reason+" termination reason cannot be deleted because it is assigned to employees."):(e.vm.terminationReasons.splice(t.index,1),e.updateTerminationSettings({action:"deleted",task:"Termination reason"}))},function(e){o.error("An error occurred while updating exit settings.")})})},e.cancel=function(){e.modalInstance.close()}}]),appRoot.controller("ExitChecklistController",["$scope","$stateParams","$state","OrgSettingServices","NotificationService","TerminationResonType","$uibModal","AppSettings",function(e,t,i,n,o,r,a,s){}]),appRoot.controller("WelcomeScreenSettingsController",["$scope","$uibModal","EmployeeServices","AppSettings","OrgSettingServices","MyProfileServices","NotificationService","$q","$filter","PublicProfileServices",function(e,t,i,n,o,r,a,s,l,c){function p(e){this.welcomeMessage=e.message,this.helpDeskMembers=e.helpDeskMembers}e.model=new p({}),e.vm.selectedEmployees=[],e.vm.helpDeskMembers=[],e.vm.niceScrollOptions=angular.copy(n.scrollSettings);s.all([r.getPublicProfile(),o.organization.get({action:"welcomescreensettings"}).$promise,o.getSettings()]).then(function(t){t[1]&&(e.model=new p(t[1])),e.model.name=t[0].name,e.vm.systemTasks=t[1].systemTasks,e.vm.myPublicProfile=t[0],e.vm.helpDeskMembers=t[1].helpDeskMembers||[],e.vm.onboardTasks=t[1].onboardTasks||[],e.vm.systemTasks=t[1].systemTasks||[],e.vm.welcomeMessage=t[1].message}),e.$on("ngGridEventData",function(){angular.forEach(e.employees,function(t,i){angular.forEach(e.model.helpDeskMembers,function(n){t.id==n.id&&e.employeeGridOptions.selectItem(i,!0)})})}),e.vm.searchEmployees=function(t){if(t&&t.length>=2){var i=s.defer();return c.searchEmployees(t).then(function(t){0==(t=l("omit")(t,e.filterById)).length&&t.push({noResults:!0}),i.resolve(t)}),i.promise}},e.filterById=function(t){var i=!1;return angular.forEach(e.vm.helpDeskMembers,function(e){e.id==t.id&&(i=!0)}),i},e.vm.updateSelectedList=function(){e.vm.member&&(e.vm.helpDeskMembers.push(e.vm.member),e.vm.member=null)},e.vm.removeMember=function(t){e.vm.helpDeskMembers.splice(t,1)},e.filterEmployees=function(t){return-1!=e.model.helpDeskMembers.indexOf(t.id)},e.addEmployees=function(){t.open({templateUrl:"employee-list-template",controller:"EmployeeSearchController",windowClass:"employee-search-tmpl",resolve:{employees:function(){return angular.copy(e.vm.helpDeskMembers)}}}).result.then(function(t){t&&l("xor")(t,e.vm.helpDeskMembers,"id").length&&(e.vm.helpDeskMembers=t)},function(){})},e.preview=function(){e.showPreview=!0,e.modalInstance=t.open({scope:e,templateUrl:"welcome-screen-template",windowClass:"wlecomescreen-preview"})},e.closeModal=function(){e.modalInstance.close()},e.select=function(){},e.add=function(){e.modalInstance.close()},e.saveWelcomeStep=function(){e.model.helpDeskMembers=[],e.model.welcomeMessage=e.vm.welcomeMessage,angular.forEach(e.vm.helpDeskMembers,function(t,i){e.model.helpDeskMembers.push(t.id)}),o.organization.update({action:"welcomescreensettings"},e.model,function(e){a.success("Welcome screen Settings updated successfully.")},function(e){a.error("An error occurred while updating onboard settings.")})},e.removeEmployee=function(t){e.vm.helpDeskMembers.splice(t,1)}}]),appRoot.controller("OnboardingSettingsController",["$scope","$stateParams","$state","OrgSettingServices","$filter","NotificationService","dialogs",function(e,t,i,n,o,r,a){function s(){this.id=0,this.title=null,this.isHrTask=!1}e.model=new function(){this.hrTasks=[],this.employeeTasks=[],this.welcomeMessage="",this.helpDeskMembers=[]},e.vm.hrTask=new s,e.vm.employeeTask=new s,e.vm.isHrTaskAlreadyExists,e.vm.isEmployeeTaskAlreadyExists;n.getOnboardTasks().then(function(t){e.model.hrTasks=t.hrTasks||[],e.model.employeeTasks=t.employeeTasks||[],e.model.systemTasks=t.systemTasks||[]}),e.addOnboardTask=function(t){t.ishrTask?e.vm.form.hrTasksForm.$valid&&!e.isTaskAlreadyExists(t,null,-1)?(e.model.hrTasks.push(t),e.vm.hrTask=null,e.updateOnboardSettings({action:"added",task:"HR onboarding task"})):e.$broadcast("validateForm"):e.vm.form.employeeTasks.$valid&&!e.isTaskAlreadyExists(t,null,-1)?(e.model.employeeTasks.push(t),e.vm.employeeTask=null,e.updateOnboardSettings({action:"added",task:"Employee onboarding task"})):e.$broadcast("validateForm")},e.isTaskAlreadyExists=function(t,i,n){var o=null!=i?i:t.ishrTask?"HR":"EMPLOYEE";return e.vm.isHrTaskAlreadyExists=!1,e.vm.isEmployeeTaskAlreadyExists=!1,!(!angular.isUndefined(t.title)&&""!=t.title)||("HR"==o?e.model.hrTasks.filter(function(i,o){n==o||i.title.toLowerCase()!=t.title.toLowerCase()||(e.vm.isHrTaskAlreadyExists=!0)}):e.model.employeeTasks.filter(function(i,o){n==o||i.title.toLowerCase()!=t.title.toLowerCase()||(e.vm.isEmployeeTaskAlreadyExists=!0)}),1==e.vm.isHrTaskAlreadyExists||1==e.vm.isEmployeeTaskAlreadyExists)},e.updateOnboardSettings=function(t){n.organization.update({action:"onboardsettings"},e.model,function(e){r.success(t.task+" "+t.action+" successfully.")},function(e){r.error("An error occurred while updating onboard settings.")})},e.retainOldValue=function(e){e.oldValue=angular.copy(e.title)},e.updateTask=function(t,i,n){e.isTaskAlreadyExists(t,i,n)?t.title=t.oldValue:e.updateOnboardSettings({action:"updated",task:i+" onboarding task"})},e.deleteemployeeTasks=function(t){a.confirm("Please Confirm","Are you sure want to delete this employee task ?").result.then(function(){e.model.employeeTasks.splice(t,1),e.updateOnboardSettings({action:"deleted",task:"Employee onboarding task"})})},e.deletehrTasks=function(t){a.confirm("Please Confirm","Are you sure want to delete this HR task ?").result.then(function(){e.model.hrTasks.splice(t,1),e.updateOnboardSettings({action:"deleted",task:"HR onboarding task"})})}}]),appRoot.controller("RequiredDocumentsSettingsController",["$scope","$resource","$stateParams","$state","$filter","$uibModal","NotificationService","LookupServices","OrgSettingServices","AppSettings","SettingsModel","DocFolders","$location",function(e,t,i,n,o,r,a,s,l,c,p,u,d){e.vm={},e.vm.hideForm=!0,e.vm.disableAdd=!1;e.loadDocumentSets=function(t){t&&(e.vm.selectedLocation=t,l.organization.get({action:"documentsettings",id:e.vm.selectedLocation.id},function(t){e.vm.documentSetTypes=o("where")(t.documentSetTypes,{folderId:u.mandatoryDocuments.id})}))},e.addDocumentSet=function(){e.vm.editableForm=!0,e.mandatoryDocuments.$setPristine(),e.model=new p.DocumentSet({}),e.vm.hideForm=!1},e.saveDocument=function(){e.vm.disableAdd||(e.vm.disableAdd=!0,e.mandatoryDocuments.$valid?(e.model.folderId=u.mandatoryDocuments.id,l.organization.save({action:"documentsettings",id:e.vm.selectedLocation.id},e.model,function(t){e.model.id=t.id,e.vm.documentSetTypes.push(angular.copy(e.model)),a.success("Document set saved successfully."),e.vm.disableAdd=!1,e.cancel()},function(t){a.error("An error occurred while saving document set."),e.vm.disableAdd=!1})):(e.$broadcast("validateForm"),e.submitted=!0,e.vm.disableAdd=!1))},e.editDocument=function(t){e.vm.hideForm=!1,e.vm.editableForm=!0,e.mandatoryDocuments.$setPristine(),e.model=new p.DocumentSet(t)},e.updateDocument=function(){e.mandatoryDocuments.$valid?l.organization.update({action:"documentsettings",id:e.vm.selectedLocation.id},e.model,function(t){a.success("Document set updated successfully."),e.cancel()},function(e){a.error("An error occurred while updating document set.")}):(e.$broadcast("validateForm"),e.submitted=!0)},e.cancel=function(){e.mandatoryDocuments.$setPristine(),e.submitted=!1,e.vm.hideForm=!0,e.loadDocumentSets(e.vm.selectedLocation)},e.deleteDocument=function(t){dialogs.confirm("Please Confirm","Do you want to delete this document").result.then(function(){l.organization.delete({id:e.vm.selectedLocation.id,action:"documentsettings",docSetTypeId:t},function(i){angular.forEach(e.vm.documentSetTypes,function(i,n){t==i.id&&e.vm.documentSetTypes.splice(n,1)}),a.success("Document deleted successfully.")},function(e){a.error("An error occurred while deleting document set.")})})},l.organization.query({id:"locations"},function(t){e.vm.locations=t,e.vm.selectedLocation=t[0],e.loadDocumentSets(e.vm.selectedLocation)}),e.mandatoryDocListGridOptions=angular.copy(c.gridSettings),e.mandatoryDocListGridOptions.rowHeight=60,e.mandatoryDocListGridOptions.columnDefs=[{field:"name",displayName:"Document Name",cellTemplate:'<div class="ui-grid-cell-contents"><span class="icon-stack"> </span><span>{{grid.getCellValue(row,col)}}</span><br/><span>{{row.entity.description}}</span></div>',cellClass:"ui-grid-cell",sort:{direction:"asc",priority:1}},{field:"requireVerification",displayName:"Require Verification",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)==true ? "Yes" : "No" }} </span></div>',cellClass:"ui-grid-cell"},{name:"Actions",displayName:"Actions",enableSorting:!1,cellClass:"ui-grid-cell cell-tooltip",cellTemplate:'<div class="ui-grid-cell-options col-sm-12 clear-side-padding"><span class="plan-edit clearfix col-sm-12 clear-side-padding"><ul class="action-items"><li class="list-item"><a data-ng-click="grid.appScope.editDocument(row.entity);" class="list-link"><span class="icon-pencil5" uib-tooltip="Edit" tooltip-placement="left"></span></a></li><li class="list-item"><a ng-if="!row.entity.isDefault" data-ng-click="grid.appScope.deleteDocument(row.entity.id);" class="list-link"><span class="icon-remove3" uib-tooltip="Delete" tooltip-placement="right"></span></a></li></ul></span></div>'}],e.mandatoryDocListGridOptions.data="vm.documentSetTypes"}]),appRoot.factory("SystemRoleServices",["$resource","$q","$routeParams",function(e,t,i){return{role:e("/api/systemroles/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}})}}]),appRoot.controller("UserRolesController",["$scope","$resource","$q","$stateParams","$location","NotificationService","LookupServices","SystemRoleServices","AppContext","SystemRoleTypes","AppFeatures",function(e,t,i,n,o,r,a,s,l,c,p){e.vm={},e.vm.systemRoleTypes=c.getAll(),e.vm.validRoleNames=e.vm.systemRoleTypes.filter(function(e){return e.feature==p.HRIS.title||l.isFeaturePresent(e.feature)}).map(function(e){return e.name});e.getFilteredEmployees=function(t,i){var n=e.getMatchedEmployees(t);return n&&angular.isFunction(n.then)?e.getMatchedEmployees(t).then(function(e){var t=[];angular.forEach(e,function(e){(function(e,t){return!!t&&t.filter(function(t){return t.employeeId==e.id}).length>0})(e,i.roleMappings)||t.push(e)}),i.filteredEmployees=t}):[]},e.addRoleMapping=function(e,t){t.filteredEmployees=null;var i=new function(){this.employeeId=null,this.systemRoleId=null,this.displayName=null};i.employeeId=e.id,i.displayName=e.displayName,i.systemRoleId=t.id,s.role.save({action:"rolemapping"},i,function(n){i.id=n.id,t.roleMappings.splice(t.roleMappings.indexOf(e),1),t.roleMappings.push(i),r.success("Role Added Successfully")},function(i){r.error(i.data.message),t.roleMappings.splice(t.roleMappings.indexOf(e),1)})},e.removeRoleMapping=function(e,t){if(t.name==c.GlobalAdmin.name&&(0==t.roleMappings.length||e.employeeId==l.myPublicProfile.id))return r.error(0==t.roleMappings.length?"You cannot delete all users from Global Admin role":"As you are a Global Admin, you cannot remove your self from this role"),void t.roleMappings.push(e);s.role.delete({action:"rolemapping",id:e.id},function(e){r.success("Role Deleted Successfully")},function(i){r.error("An error has occurred."),t.roleMappings.push(e)})},i.all([s.role.query({action:"mappings"}).$promise,s.role.query({action:"roles"}).$promise]).then(function(t){e.vm.roleMappings=t[0],e.roleLevels=t[1],e.roleLevels=e.roleLevels.filter(function(t){return-1!=e.vm.validRoleNames.indexOf(t.name)}),angular.forEach(e.roleLevels,function(t){t.roleMappings=[],t.roleMappings=e.vm.roleMappings.filter(function(e){return e.systemRoleId==t.id})})})}]),function(e){!function(e){var t;!function(e){e[e.none=0]="none",e[e.requestToModify=1]="requestToModify",e[e.requestToAdd=2]="requestToAdd",e[e.requestToDelete=3]="requestToDelete",e[e.requestToAddWebLog=4]="requestToAddWebLog",e[e.requestToAddRemoteLog=5]="requestToAddRemoteLog"}(e.AttendanceModificationStatus||(e.AttendanceModificationStatus={})),function(e){e[e.WorkingDay=0]="WorkingDay",e[e.Holiday=1]="Holiday",e[e.FullDayWeeklyOff=2]="FullDayWeeklyOff",e[e.FirstHalfWeeklyOff=3]="FirstHalfWeeklyOff",e[e.SecondHalfWeeklyOff=4]="SecondHalfWeeklyOff"}(t=e.DayType||(e.DayType={})),function(e){e[e.NoEntriesLogged=0]="NoEntriesLogged",e[e.LogsRecorded=1]="LogsRecorded",e[e.WFH=2]="WFH"}(e.AttendanceDayStatus||(e.AttendanceDayStatus={})),function(e){e[e.None=0]="None",e[e.FullDayLeave=1]="FullDayLeave",e[e.FirstHalfLeave=2]="FirstHalfLeave",e[e.SecondHalfLeave=3]="SecondHalfLeave"}(e.LeaveDayStatus||(e.LeaveDayStatus={})),function(e){e[e.In=0]="In",e[e.Out=1]="Out",e[e.InWithOutMiss=2]="InWithOutMiss",e[e.OutWithInMiss=3]="OutWithInMiss",e[e.OutMiss=4]="OutMiss",e[e.LocationPunch=5]="LocationPunch",e[e.InvalidPunchState=99]="InvalidPunchState"}(e.PunchStatus||(e.PunchStatus={})),function(e){e[e.Device=0]="Device",e[e.Web=1]="Web",e[e.Mobile=2]="Mobile",e[e.API=3]="API"}(e.AttendanceLogSource||(e.AttendanceLogSource={})),function(e){e[e.None=0]="None",e[e.WebClockin=1]="WebClockin",e[e.WFH=2]="WFH",e[e.WFHFirstHalf=3]="WFHFirstHalf",e[e.WFHSecondHalf=4]="WFHSecondHalf",e[e.AttendanceAdjustment=5]="AttendanceAdjustment",e[e.RemoteClockIn=6]="RemoteClockIn",e[e.ForgotIDCard=7]="ForgotIDCard"}(e.AttendanceRequestType||(e.AttendanceRequestType={}));var i=function(){return function(e,t,i,n,o,r,a,s){this.addressLine1=e,this.addressLine2=t,this.countryCode=i,this.city=n,this.state=o,this.zip=r,this.latitude=a,this.longitude=s}}();e.Address=i,function(e){e[e.None=0]="None",e[e.WebClockIn=1]="WebClockIn",e[e.Adjustment=2]="Adjustment",e[e.RemoteClockin=3]="RemoteClockin",e[e.FullDayWFH=4]="FullDayWFH",e[e.FirstHalfWFH=5]="FirstHalfWFH",e[e.SecondHalfWFH=6]="SecondHalfWFH",e[e.ForgotIdCard=7]="ForgotIdCard",e[e.LocationPunch=8]="LocationPunch"}(e.ManualClockinType||(e.ManualClockinType={}));var n=function(){return function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g){void 0===m&&(m=!1),void 0===h&&(h=!1),void 0===f&&(f=!1),this.actualTimestamp=e,this.adjustedTimestamp=t,this.originalPunchStatus=i,this.modifiedPunchStatus=n,this.punchStatus=o,this.attendanceLogSource=r,this.premiseId=a,this.premiseName=s,this.pairSubSequentLogs=l,this.locationAddress=c,this.ipAddress=p,this.manualClockinType=u,this.isAdjusted=d,this.isDeleted=m,this.timestamp=y,this.isEditable=h,this.isManuallyAdded=f,this.note=g}}();e.AttendanceTimeEntry=n;var o=function(){return function(e,t,i){this.inTime=e,this.outTime=t,this.totalDuration=i}}();e.InOutPair=o;var r=function(){return function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S,C,w,b,P,T,D,I,A){this.id=e,this.employeeId=t,this.attendanceDate=i,this.dayType=n,this.attendanceDayStatus=o,this.leaveDayStatus=r,this.shiftSlotStartTime=a,this.shiftStartTime=s,this.shiftEndTime=l,this.validInOutPairs=c,this.timeEntries=p,this.totalEffectiveHours=u,this.effectiveHoursInHHMM=d,this.totalGrossHours=m,this.grossHoursInHHMM=y,this.totalBreakDuration=h,this.breakDurationInHHMM=f,this.lateArrivalDifference=g,this.hasLocation=v,this.arrivalMessage=S,this.isInMissing=C,this.isOnTime=w,this.isRequestPending=b,this.isRegularizationApproved=P,this.pendingRequestType=T,this.isRequestPartiallyApproved=D,this.firstLogOfTheDay=I,this.lastLogOfTheDay=A}}();e.AttendanceSummaryViewModel=r;var a=function(){return function(e,t,i,n){this.averageHoursPerDay=e,this.teamAverageHoursPerDay=t,this.onTimeArrival=i,this.teamOnTimeArrival=n}}();e.AttendanceStats=a;var s=function(){return function(e){var i=this;this.isWorkingDay=function(e){return i.getDayType(e)==t.WorkingDay},this.getDayType=function(e){var n=i.weekOffs.find(function(t){return t.dayOfWeek==e.getDay()}),o=Math.floor((e.getDate()-1)/7)+1;if(null==n||null==n.dayOffs)return t.WorkingDay;var r=new Date(e.getFullYear(),e.getMonth()+1,0);return n.dayOffs.find(function(e){return e.dayFrequencyType==c.All})?n.dayOffs.find(function(e){return e.dayFrequencyType==c.All}).dayType:n.dayOffs.find(function(e){return e.dayFrequencyType==o})?n.dayOffs.find(function(e){return e.dayFrequencyType==o}).dayType:n.dayOffs.find(function(e){return e.dayFrequencyType==c.Last})&&r.getDate()==e.getDate()?n.dayOffs.find(function(e){return e.dayFrequencyType==c.Last}).dayType:t.WorkingDay},this.id=e.id,this.versionIdentifier=e.versionIdentifier,this.name=e.name,this.weekOffs=null!=e&&null!=e.weekOffs?e.weekOffs:new Array,this.isDefault=e.isDefault}}();e.WeeklyOffPolicy=s;var l=function(){return function(e,t){this.dayOfWeek=e,this.dayOffs=t}}();e.WeekOff=l;var c,p=function(){return function(e,t){this.dayFrequencyType=e,this.dayType=t}}();e.DayOff=p,function(e){e[e.All=0]="All",e[e.First=1]="First",e[e.Second=2]="Second",e[e.Third=3]="Third",e[e.Fourth=4]="Fourth",e[e.Fifth=5]="Fifth",e[e.Last=6]="Last"}(c=e.DayFrequencyType||(e.DayFrequencyType={}));var u=function(){return function(e,t,i,n,o,r,a,s,l,c){this.Id=e,this.Identifier=t,this.Name=i,this.SlotStartTime=n,this.ShiftStartTime=o,this.ShiftEndTime=r,this.BreakDuration=a,this.IsShiftTimeDifferentForAllDays=s,this.ShiftTimes=l,this.IsDefault=c}}();e.ShiftPolicy=u;var d=function(){return function(e,t,i,n){this.DayOfWeek=e,this.SlotStartTime=t,this.ShiftStartTime=i,this.ShiftEndTime=n}}();e.ShiftTime=d;var m=function(){return function(){}}();e.DeductionRule=m;var y=function(){return function(){}}();e.CumulativeDeductionRule=y,function(e){e[e.FirstHalf=0]="FirstHalf",e[e.SecondHalf=1]="SecondHalf"}(e.SessionType||(e.SessionType={}));var h=function(){return function(){this.notifyTo=new Array}}();e.WorkingRemotelyRequest=h;var f=function(){return function(){}}();e.NotifyToEmployee=f}(e.Model||(e.Model={}))}(Attendance||(Attendance={})),appRoot.factory("MyTimeServices",["$resource",function(e){return{myProfile:e("/api/myprofile"),bindMyProfile:function(e){return new function(e){this.profileImage=e.profileImage,this.displayName=e.name,this.location=e.jobDetails.location.name,this.country=e.country.name,this.role=e.jobDetails.role,this.email=e.email,this.phone=e.contactInfo.mobilePhone}(e)},mytime:e("/api/mytime/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}})}}]),appRoot.controller("MyTimeController",["$scope","$state","$q","$rootScope","AppContext",function(e,t,i,n,o){e.vm={},e.$on("$stateChangeSuccess",function(i,n,o,r,a){e.vm.state=t.current,e.vm.isLeavesActive="mytime.leaves"==e.vm.state.name||"mytime.callsick"==e.vm.state.name||"mytime.callsickedit"==e.vm.state.name||"mytime.callleaverequest"==e.vm.state.name||"mytime.callleaverequestedit"==e.vm.state.name||"mytime.otherleave"==e.vm.state.name||"mytime.otherleaveedit"==e.vm.state.name});o.currentUser().then(function(t){e.vm.profile=t})}]),appRoot.factory("MyTimesheetServices",["$resource","$q",function(e,t){return{myTime:e("/api/mytime/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),getMyProjects:function(){return this.myTime.query({action:"myprojects"}).$promise},getProjectTasks:function(e){return this.myTime.query({id:e,action:"projecttasks"}).$promise},getSubmissionStatusAndTimesheetEntries:function(e){return this.myTime.get({fromDate:e,action:"timesheet"}).$promise},getTimesheetsDue:function(){return this.myTime.query({action:"timesheetsdue"}).$promise},getTimesheetsDueCount:function(){return this.myTime.get({action:"timesheetsduecount"}).$promise},getTimesheetsRejected:function(){return this.myTime.query({action:"timesheetsrejected"}).$promise},getTimesheetsRejectedCount:function(){return this.myTime.get({action:"timesheetsrejectedcount"}).$promise},getTimesheet:function(e){return this.myTime.get({fromDate:e,action:"employeetimesheet"}).$promise},getTimeoffData:function(){return this.myTime.get({action:"timeOffData"}).$promise},getResourceAllocation:function(){return this.myTime.query({action:"resourceallocation"}).$promise},getAttendanceSummary:function(e){return this.myTime.query({action:"attendanceDetails",fromDate:e}).$promise},getWeekTimeSummary:function(e,t){return this.myTime.query({action:"weektimesummary",fromDate:e.dateOnlyString(),toDate:t.dateOnlyString()}).$promise},getProjectTimeSummary:function(e){return this.myTime.query({action:"timeentries",id:e}).$promise},unSubmitTimesheet:function(e){return this.myTime.update({id:e,action:"unsubmitTimesheet"}).$promise}}}]),appRoot.controller("ProjectRequestController",["$scope","$resource","$state","$uibModal","$uibModalInstance","AppSettings","AppContext","NotificationService","EmployeeServices","MyTimesheetServices","EmployeeProfileService","Utils","$stateParams","requestUrl",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m){e.vm={},e.vm.publicProfile=e.vm&&e.vm.publicProfile?e.vm.publicProfile:a.myPublicProfile,e.vm.modelOptions=r.modelBlurSettings,e.model={},e.vm.notifyEmployeeList=[],e.vm.note=null,e.vm.ContextemployeeId=d.id;var y=function(){e.vm.publicProfile.reportingTo&&p.getEmployeeProfile(e.vm.publicProfile.reportingTo).then(function(t){e.vm.reportingManager=t,e.vm.notifyEmployeeList.push({id:e.vm.publicProfile.reportingTo,displayName:e.vm.publicProfile.reportingManager,email:e.vm.reportingManager.email})})};a.myPublicProfile.id!=e.vm.ContextemployeeId&&e.vm.ContextemployeeId?p.getEmployeeProfile(e.vm.ContextemployeeId).then(function(t){e.vm.publicProfile=t,y()}):(e.vm.publicProfile=a.myPublicProfile,y()),e.submitRequest=function(){if(e.requestProject.$valid&&e.vm.notifyEmployeeList.length>0){e.model={ContextemployeeId:e.vm.ContextemployeeId,contextEmployeeName:e.vm.publicProfile.displayName,notifyEmployeeList:e.vm.notifyEmployeeList,note:e.vm.note};var t=d.id?{action:"requestproject",id:d.id}:{action:"requestproject"};m.save(t,e.model,function(e){s.success("Your request has been submitted successfully"),o.close()},function(e){s.error("An error occurred while requesting project.")})}},e.cancel=function(){o.close()},e.getFilteredEmployees=function(t){if(t.length>2)return u.getMatchedEmployees(t).then(function(t){var i=[];return angular.forEach(t,function(t){(function(t){return!!e.vm.notifyEmployeeList&&e.vm.notifyEmployeeList.filter(function(e){return e.id==t.id}).length>0})(t)||i.push(t)}),i})},e.vm.selectEmployee=function(){e.vm.notifyEmployeeList.push({id:e.vm.notifyTo.id,displayName:e.vm.notifyTo.displayName,email:e.vm.notifyTo.email}),e.vm.notifyTo=null},e.vm.removeEmployee=function(t){e.vm.notifyEmployeeList.splice(t,1)}}]),function(e){var t,i=function(){function e(e,i,s,l,c,p,u,d,m,y,h,f,g,v,S,C,w,b,P,T,D,I,A,E,R,x,M,N,O){var k=this;this._q=e,this._filter=i,this._stateParams=s,this._state=l,this._modal=c,this._timeout=p,this._interval=u,this._cookies=d,this._location=m,this.myTimesheetServices=y,this.myAttendanceService=h,this.employeeTimesheetServices=f,this.employeeAttendanceService=g,this.sharedModel=v,this.appContext=S,this.appSettings=C,this.blobContainers=w,this.orgSettingServices=b,this.lookupServices=P,this.timesheetStatus=T,this.timeEntryStatus=D,this.notificationService=I,this.dialogs=A,this.momentPicker=E,this.appFeatures=R,this.attendanceHoursType=x,this.fileDownloadService=M,this.auditEventType=N,this.auditService=O,this.indexOfTimesheetToSubmit=0,this.timesheetDaysLimit=28,this.saveInterval=10,this.timesheetActivity=[],this.timeOffEntryList=[],this.vm={},this.dtpick={isOpen:!1},this.isTimeValid=!0,this.isValid=!0,this.weekDayValidity={},this.maxSequenceNumber=0,this.attendanceAvailableFrom=(new Date).setHours(0,0,0,0),this.hasAttendanceFeature=!1,this.timesheetSettings={},this.disableWeekScroll=!1,this.isSaveInProgress=!1,this.getMyProjects=function(){(k.isSelf?k.myTimesheetServices.getMyProjects():k.employeeTimesheetServices.getEmployeeProjects(k.id)).then(function(e){k.myProjects=e,k.updateAvailableTasks(),k.resetDropdown()})},this.getResourceAllocations=function(){(k.isSelf?k.myTimesheetServices.getResourceAllocation():k.employeeTimesheetServices.getProjectResourceAllocations(k.id)).then(function(e){k.resourceAllocations=e})},this.getTimesheetSettings=function(){k.orgSettingServices.organization.get({action:"timesheetgeneralsettings"},function(e){k.timesheetSettings=e})},this.getMyAttendanceSummary=function(){if(k.selectedDay.date.setHours(0,0,0,0)<=k.attendanceAvailableFrom){var e=k._q.defer();return k.attendanceAvailableFrom=angular.copy(k.selectedDay.date),k.attendanceAvailableFrom.setDate(k.attendanceAvailableFrom.getDate()-30),(k.isSelf?k.myAttendanceService.getAttendanceSummaryFrom(k.attendanceAvailableFrom.dateOnlyString()):k.employeeAttendanceService.getAttendanceSummaryFrom(k.id,k.attendanceAvailableFrom)).then(function(t){k.attendanceSummary=t,e.resolve(t)}),e.promise}},this.getAttendanceHours=function(e){if(k.attendanceSummary){var t=k.attendanceSummary.find(function(t){return new Date(t.attendanceDate).setHours(0,0,0,0)==e.setHours(0,0,0,0)});return t?k.timesheetSettings.attendanceHoursType==k.attendanceHoursType.totalHours.id?t.grossHoursInHHMM:t.effectiveHoursInHHMM:"0:00"}},this.bindCurrentTimesheet=function(e){k.loadTimesheetEntries(e).then(function(){k.updateAvailableTasks(),k.checkforComments(),k.updateWorkHours(),k.autoSaveTimeEntries()})},this.initializeTimesheets=function(){if(null==k.isSelf||null==k.myTimeOffData||null==k.myProjects||null==k.weekStartDay||null==k.myPublicProfile||null==k.billingClassifications||k.waitForTimesheetsToSubmit&&null==k.timesheetsToSubmit)k._timeout(k.initializeTimesheets,500);else if(k._timeout(function(){k.timesheetForm=k.timesheetForm.timesheetEntry},500),k.setMaxDate(),k.vm.baseUrl=k.isSelf?"/me":k._location.path().replace(/\/timesheet.*/,""),k.vm.billableTypes=k.billingClassifications?k.billingClassifications.filter(function(e){return e.isBillable}):[],k.vm.nonBillableTypes=k.billingClassifications?k.billingClassifications.filter(function(e){return!e.isBillable}):[],k.dateJoined=k.myPublicProfile&&k.myPublicProfile.dateJoined?k.myPublicProfile.dateJoined:null,k.vm.datepickerOptions.minDate=new Date(k.dateJoined),k.createTimeOffEntries(),k.computeShiftDuration(),k.waitForTimesheetsToSubmit&&k.timesheetsToSubmit){var e=k.timesheetsToSubmit[k.indexOfTimesheetToSubmit],t=e?e.startDate.stringToDate():null;k.loadWeekDays(t),k.bindCurrentTimesheet(t?t.dateOnlyString():null)}else{k.loadWeekDays();var i=new Date(k.weekDays[0].date);k.bindCurrentTimesheet(i.dateOnlyString()),k.vm.showTimesheet=!0}},this.getTaskViewModel=function(e){var t={};return t.employeeId=k.id,t.taskId=e.taskDetails.id,t.projectId=e.projectDetails.id,t.employeeTimesheetId=k.currentTimesheet.id,t.sequenceNumber=e.sequenceNumber,t},this.loadPreviousWeekTasks=function(){var e=angular.copy(k.weekDays[0].date),t=new Date(e.setDate(e.getDate()-7));k.loadTimesheetEntries(t.dateOnlyString()).then(function(){angular.forEach(k.tasks,function(e){var t=e.timesheetEntry;e.startTime={},e.endTime={},e.timesheetComments={},e.timesheetEntry={billingClassificationId:t.billingClassificationId,billable:t.billable,taskId:t.taskId,employeeId:t.employeeId,projectId:t.projectId,status:t.status},e.timesheetHours={}})})},this.loadTimesheetEntryModel=function(){var e=[],t=angular.copy(k.tasks),i=angular.copy(k.weekDays);return angular.forEach(t,function(t){angular.forEach(i,function(i){if(!isNaN(t.timesheetHours[i.key])||t.isTimerRunning[i.key]||t.timesheetComments[i.key]){var n=new r;n.id=t.timesheetId[i.key],n.employeeId=t.timesheetEntry?t.timesheetEntry.employeeId:0,n.employeeTimesheetId=t.timesheetEntry?t.timesheetEntry.employeeTimesheetId:0,n.date=k._filter("date")(i.date,"yyyy-MM-dd"),n.projectId=t.projectDetails.id,n.taskId=t.id,n.startTime=t.projectDetails.trackTimeForTask?t.startTime[i.key]:null,n.endTime=t.projectDetails.trackTimeForTask?t.endTime[i.key]:null,n.isTimerRunning=!!t.isTimerRunning[i.key],n.totalHours=t.timesheetHours[i.key]&&t.timesheetHours[i.key]<24?t.timesheetHours[i.key]:0,n.comments=t.timesheetComments[i.key],n.billable=t.timesheetEntry?t.timesheetEntry.billable:!!t.taskDetails&&t.taskDetails.billable,n.billingClassificationId=t.taskDetails?t.taskDetails.billingClassificationId:0,n.status=t.status||0,n.sequenceNumber=t.sequenceNumber,e.push(n)}})}),e},this.getNextWeek=function(){k.vm.timesheetLimitExceeded||k.vm.timesheetLimitExceeded||k.timesheetsToSubmit&&k.indexOfTimesheetToSubmit==k.timesheetsToSubmit.length-1||k.loadAdjacentTimesheet(!1)},this.getPreviousWeek=function(){k.vm.currentWeekPastDateJoined||k.vm.currentWeekPastDateJoined||k.timesheetsToSubmit&&0==k.indexOfTimesheetToSubmit||k.loadAdjacentTimesheet(!0)},this.loadAdjacentTimesheet=function(e){if(!k.disableWeekScroll){var t,i;if(k.disableWeekScroll=!0,k.timesheetsToSubmit&&k.timesheetsToSubmit.length){k.indexOfTimesheetToSubmit=k.indexOfTimesheetToSubmit+(e?-1:1);var n=k.timesheetsToSubmit[k.indexOfTimesheetToSubmit];i=(t=n?n.startDate.stringToDate():null).dateOnlyString()}else{k.saveTimeEntriesAsync(),k.vm.showTimesheet=!1,t=k.weekDays[0].date,i=new Date(t.setDate(t.getDate()+(e?-7:7))).dateOnlyString()}k.loadWeekDays(t),k.loadTimesheetEntries(i).then(function(){k.disableWeekScroll=!1,k.updateWorkHours(),k.checkforComments(),k.getMyProjects()})}},this.openTaskImportPopUp=function(){k._modal.open({templateUrl:"importOtherWeekTasks",windowClass:"full-screen-modal dark-modal action-content",controllerAs:"ctrl",controller:n,resolve:{projectTasks:function(){return angular.copy(k.tasks)},employeeId:function(){return angular.copy(k.id)},isSelf:function(){return angular.copy(k.isSelf)},currentTimesheet:function(){return angular.copy(k.currentTimesheet)},billingClassifications:function(){return angular.copy(k.billingClassifications)},timesheetMaxDate:function(){return angular.copy(k.timesheetMaxDate)},dateJoined:function(){return angular.copy(k.dateJoined)},weekDays:function(){return angular.copy(k.weekDays)}},keyboard:!1,backdrop:!1}).result.then(function(e){e.forEach(function(e){e.task.billingClassificationId=e.billingClassificationId,k.addProjectTask(e.task)})})},this.autoSaveTimeEntries=function(){k.isSaveInProgress||k.saveTimesheetEntries(),(k.isSelf||/^employee.time.timesheet.*/.test(k._state.current.name))&&(k.saveTimeout=k._timeout(k.autoSaveTimeEntries,1e3*k.saveInterval))},this.saveTimesheetEntries=function(e){var t=k._q.defer();if(k.timesheetSubmitRequest={timesheet:{startDate:k.weekDays[1].date},timesheetEntries:[]},k.timesheetForm&&k.timesheetForm.$dirty||k.vm.billingTypeUpdated){k.timesheetSubmitRequest.timesheetEntries=k.loadTimesheetEntryModel(),k.timesheetSubmitRequest.timesheet.attachments=k.timesheetAttachment;var i=k.isSelf?k.myTimesheetServices.myTime:k.employeeTimesheetServices.employeeTimesheet,n=k.isSelf?{action:"timesheet"}:{action:"timesheet",id:k.id};i.save(n,k.timesheetSubmitRequest,function(i){k.currentTimesheet=k.currentTimesheet||i.employeeTimesheet,k.vm.autosaveTime=new Date,k.timesheetForm.$setPristine(),k.vm.billingTypeUpdated=!1,k.vm.saveMessage="Auto saved",e&&(k.notificationService.information("Timesheet saved successfully"),k.vm.saveMessage="Saved"),t.resolve()},function(e){k.notificationService.error("An error occurred while saving timesheet.")})}return t.promise},this.saveTimeEntriesAsync=function(){if(k.timesheetForm&&k.timesheetForm.$dirty||k.vm.billingTypeUpdated){var e=k.loadTimesheetEntryModel(),t=k.isSelf?k.myTimesheetServices.myTime:k.employeeTimesheetServices.employeeTimesheet,i=k.isSelf?{action:"timesheet"}:{action:"timesheet",id:k.id};0!=e.length&&t.save(i,e,function(e){},function(e){})}},this.submit=function(){k.anyTimeEntries=k.tasks.find(function(e){return"{}"!=JSON.stringify(e.timesheetHours)}),(k.submitComment||k.tasks&&k.tasks.length>0&&k.anyTimeEntries)&&(k.timesheetForm.$setDirty(),k.saveTimesheetEntries(!0).then(function(){if(k.timesheetSubmitRequest.timesheetEntries=k.loadTimesheetEntryModel(),k.timesheetSubmitRequest.submitComment=k.submitComment,k.timesheetSubmitRequest.timesheet.attachments=k.timesheetAttachment,!k.vm.isTaskTimerRunning&&k.isTimesheetValid()&&k.isTimeValid){var e=k.isSelf?k.myTimesheetServices.myTime:k.employeeTimesheetServices.employeeTimesheet,t=k.isSelf?{action:"submittimesheet"}:{action:"submittimesheet",id:k.id};e.save(t,k.timesheetSubmitRequest,function(e){if(k.timesheetForm.$setPristine(),k.vm.billingTypeUpdated=!1,k.updateCount({action:"submit",currentTimesheet:k.currentTimesheet}),k.timesheetsToSubmit){k.timesheetsToSubmit.splice(k.indexOfTimesheetToSubmit,1),k.indexOfTimesheetToSubmit=k.indexOfTimesheetToSubmit>0?k.indexOfTimesheetToSubmit-1:0;var t=k.timesheetsToSubmit[k.indexOfTimesheetToSubmit],i=t?t.startDate.stringToDate():null;k.loadWeekDays(i),k.loadTimesheetEntries(i?i.dateOnlyString():null).then(function(){k.updateWorkHours()})}else{k.loadWeekDays(k.weekDays[0].date);var n=new Date(k.weekDays[0].date);k.loadTimesheetEntries(n.dateOnlyString()).then(function(){k.updateWorkHours()})}k.submitComment=null,k.notificationService.success("Timesheet submitted successfully."),k.auditService.trackEvent(k.auditEventType.TimeSheetSubmitted.title)},function(e){k.notificationService.success("Error in submitting timesheet.")})}else!k.isTimeValid&&k.isValid?k.notificationService.error("The time entries are invalid. Please check the entries in RED and try again."):k.vm.isTaskTimerRunning?k.notificationService.error("Timer is running for an entry. Please stop the timer before submitting."):"listview"==k.vm.selectedView?k.notificationService.error("Please enter the comments for the time entries which are shown as required."):k.notificationService.error("Please enter the comments for the time entries which are in RED.");k.vm.showSubmit=!0}))},this.unsubmit=function(){(k.isSelf?k.myTimesheetServices.unSubmitTimesheet(k.currentTimesheet.id):k.employeeTimesheetServices.unSubmitTimesheet(k.id,k.currentTimesheet.id)).then(function(e){k.updateCount({action:"unsubmit",currentTimesheet:k.currentTimesheet}),k.currentTimesheet.status=k.timesheetStatus.unSubmitted.id,k.notificationService.success("Timesheet unsubmitted successfully.");var t=new Date(k.weekDays[0].date);k.loadTimesheetEntries(t.dateOnlyString()),k.timesheetActivity=[]},function(e){k.notificationService.success("Error in unsubmitting timesheet.")}),k.vm.showUnSubmit=!0},this.rejectTimesheet=function(){k.isSelf||(k.rejectComment?(k.rejectComment=k.rejectComment.replace(/<(?:.|\n)*?>/gm,"").replace("&nbsp;"," "),k.employeeTimesheetServices.rejectTimesheet(k.id,k.currentTimesheet.id,k.rejectComment).then(function(e){k.updateCount({action:"reject",currentTimesheet:k.currentTimesheet}),k.currentTimesheet.status=k.timesheetStatus.rejected.id,k.notificationService.success("Timesheet rejected successfully."),k.timesheetActivity.push({dateTime:new Date,approverName:k.myPublicProfile.displayName,status:k.timesheetStatus.rejected,note:k.rejectComment}),k.rejectComment=null;var t=new Date(k.weekDays[0].date);k.loadTimesheetEntries(t.dateOnlyString())},function(e){k.notificationService.success("Error in rejecting timesheet.")}),k.vm.showReject=!0):k.notificationService.success("Comments are required to reject the timesheet"))},this.deleteTimesheetEntry=function(e,t){k.dialogs.confirm("Please Confirm","All the time entries of this task in this week will be deleted if you proceed. Are you sure you want to delete ?").result.then(function(){if(null!=k.currentTimesheet){var i=k.getTaskViewModel(e),n=k.isSelf?k.myTimesheetServices.myTime:k.employeeTimesheetServices.employeeTimesheet,o=k.isSelf?{action:"deletetimesheetentry"}:{action:"deletetimesheetentry",id:k.id};n.save(o,i,function(e){k.tasks.splice(t,1),k.notificationService.success("Timesheet entry deleted successfully."),k.updateAvailableTasks(),k.resetDropdown(),k.updateWorkHours()},function(e){})}else k.tasks.splice(t,1)})},this.getTask=function(e,t){var i=k.getProjectDetails(e);return i?i.projectTasks.find(function(e){return e.id===t}):{}},this.getProjectDetails=function(e){return angular.copy(k.myProjects.find(function(t){return t.id==e}))},this.getStartDate=function(e){var t=e.getDay()||7;return k.weekStartDay&&k.weekStartDay!=t&&e.setHours(-24*(t<k.weekStartDay?7+t-k.weekStartDay:t-k.weekStartDay)),e},this.setMaxDate=function(){var e=k.getStartDate(new Date);e.setDate(e.getDate()+k.timesheetDaysLimit-1),e.setTimeSpan({hours:0,minutes:0,seconds:0,ms:0}),k.vm.datepickerOptions.maxDate=k.timesheetMaxDate=e},this.updateAvailableTasks=function(){k.weekDays&&(k.myProjectsCopy=angular.copy(k.myProjects.filter(function(e){return!e.isResourceDeleted||new Date(e.dateDeleted)>new Date(k.weekDays[6])})),angular.forEach(k.tasks,function(e){var t=k.myProjectsCopy.find(function(t){return e.projectDetails&&t.id===e.projectDetails.id});t&&angular.forEach(t.projectTasks,function(i,n){e.id==i.id&&e.status==k.timeEntryStatus.approved.id&&t.projectTasks.splice(n,1)})}))},this.loadTimesheetEntries=function(e,t){e=e&&"Invalid Date"!=new Date(e).toString()?e:k.getStartDate(new Date).dateOnlyString();var i=k._q.defer();return k.vm.isTaskTimerRunning=!1,k.vm.timerRunningDayKey=k.vm.currentDayKey,t||(k.tasks=[]),(k.isSelf?k.myTimesheetServices.getSubmissionStatusAndTimesheetEntries(e):k.employeeTimesheetServices.getSubmissionStatusAndTimesheetEntries(k.id,e)).then(function(e){k.canSubmit=e.canSubmit;var t=e.entries,n=t.map(function(e){return e.sequenceNumber});k.maxSequenceNumber=n.length>0?Math.max.apply(Math,n):0,angular.forEach(t,function(e,t){var i=k.tasks.find(function(t){return t.id===e.taskId&&t.sequenceNumber==e.sequenceNumber}),n=k._filter("yyyymmddToDate")(e.date,"ddMMyyyy");if(i)i.timesheetId[n]=e.id,i.startTime[n]=e.startTime?e.startTime.split(":")[0]+":"+e.startTime.split(":")[1]:e.startTime,i.endTime[n]=e.endTime?e.endTime.split(":")[0]+":"+e.endTime.split(":")[1]:e.endTime,i.startTimestamp[n]=e.startTimestamp,i.endTimestamp[n]=e.endTimestamp,i.timesheetHours[n]=e.totalHours,i.timesheetComments[n]=e.comments,i.timesheetEntry=e,i.isTimerRunning[n]=e.isTimerRunning,i.isValid[n]=!0,e.isTimerRunning,i.taskDetails.billingClassificationId=k.getBillingClassificationId(e.billingClassificationId,i.taskDetails.billable),e.totalHours&&i.projectDetails.trackTimeForTask&&!e.startTime&&!e.endTime&&(i.startTime[n]="00:00",i.endTime[n]="00:00");else{var r=new o(e,k.getTask(e.projectId,e.taskId),k.getProjectDetails(e.projectId));r.status=e.status,r.timesheetId[n]=e.id,r.startTime[n]=e.startTime?e.startTime.split(":")[0]+":"+e.startTime.split(":")[1]:e.startTime,r.endTime[n]=e.endTime?e.endTime.split(":")[0]+":"+e.endTime.split(":")[1]:e.endTime,r.endTimestamp[n]=e.endTimestamp,r.timesheetHours[n]=e.totalHours,r.timesheetHours[n]=e.totalHours,r.timesheetComments[n]=e.comments,r.timesheetEntry=e,r.isTimerRunning[n]=e.isTimerRunning,r.isValid[n]=!0,r.taskDetails.billingClassificationId=k.getBillingClassificationId(e.billingClassificationId,e.billable),r.sequenceNumber=e.sequenceNumber,e.totalHours&&r.projectDetails.trackTimeForTask&&!e.startTime&&!e.endTime&&(r.startTime[n]="00:00",r.endTime[n]="00:00"),i=r,k.tasks.push(r)}if(e.isTimerRunning){k.vm.timerRunningDayKey=n,k.vm.isTaskTimerRunning=i.isTaskTimerRunning=!0;var a=new Date(e.startTimestamp),s=k.getTimeFromString(e.startTime);a.setHours(s.getHours()),a.setMinutes(s.getMinutes()),k.toggleTimer(i,!1,a)}}),k.vm.showTimesheet=!0,i.resolve()}),i.promise},this.computeShiftDuration=function(){k.vm.totalWorkDuration=0,k.myTimeOffData.shift.shiftTimes.forEach(function(e){if(!k.myTimeOffData.weeklyOffs.weekOffs.some(function(t){return t.dayOfWeek==e.dayOfWeek})){var t=new Date((new Date).setHours(e.shiftStartTime.hours,e.shiftStartTime.minutes,0,0)),i=new Date((new Date).setHours(e.shiftEndTime.hours,e.shiftEndTime.minutes,0,0));t>i&&i.setDate(i.getDate()+1),k.vm.totalWorkDuration+=Math.abs(i.getTime()-t.getTime())/6e4/60-e.breakDurationInHours}}),k.vm.totalShiftTime=k.convertToMin(60*k.vm.totalWorkDuration)},this.computeWeekOffDuration=function(){k.weekDays.forEach(function(e){var t=k.myTimeOffData.weeklyOffs.weekOffs.find(function(t){return t.dayOfWeek==e.date.getDay()}),i=k.myTimeOffData.shift.shiftTimes.find(function(t){return t.dayOfWeek==e.date.getDay()}),n=i.breakDurationInHours,o=new Date((new Date).setHours(i.shiftStartTime.hours,i.shiftStartTime.minutes,0,0)),r=new Date((new Date).setHours(i.shiftEndTime.hours,i.shiftEndTime.minutes,0,0));o>r&&r.setDate(r.getDate()+1),t&&(t.dayOffs.find(function(t){return 2!=t.dayType&&(t.dayFrequencyType==k.getNthWeekDayOfMonth(e.date)||!t.dayFrequencyType)})?k.vm.totalWorkDuration+=(Math.abs(r.getTime()-o.getTime())/6e4/60-n)/2:t.dayOffs.find(function(t){return t.dayFrequencyType==k.getNthWeekDayOfMonth(e.date)||!t.dayFrequencyType})||(k.vm.totalWorkDuration+=Math.abs(r.getTime()-o.getTime())/6e4/60-n)),k.vm.totalShiftTime=k.convertToMin(60*k.vm.totalWorkDuration)})},this.getNthWeekDayOfMonth=function(e){return e.getDate()<=7?1:Math.floor(e.getDate()/7)+1},this.convertToMin=function(e){return parseInt((e/60).toString())+":"+(0==Math.round(e%60)?"00":k._filter("number")(e%60,0))},this.loadWeekDays=function(e){k.weekDays=[],k.vm.showSubmit=!0,k.vm.showUnSubmit=!0,k.vm.showReject=!0;var t=e?new Date(e):k.getStartDate(new Date);for(k.vm.currentDayKey=k._filter("date")(new Date,"ddMMyyyy");k.weekDays.length<7;){var i=new Date(t),n={key:k._filter("date")(t,"ddMMyyyy"),date:i};k.weekDays.push(n),k.weekDayValidity[n.key]=!0,t.setDate(t.getDate()+1)}var o=new Date;k.vm.isCurrentWeek=k.weekDays[0].date<=o&&o<=k.weekDays[6].date,k.selectedDay=k.weekDays[0];var r=new Date(k.weekDays[0].date);k.loadCurrentTimesheet(r.dateOnlyString()),k.createTimeOffEntries(),k.checkforComments(),k.updateAvailableTasks(),k.hasAttendanceFeature&&k.timesheetSettings.showAttendanceHours&&k.getMyAttendanceSummary(),k.computeShiftDuration(),k.computeWeekOffDuration(),k.vm.timesheetLimitExceeded=k.weekDays[6].date>=k.timesheetMaxDate,k.vm.currentWeekPastDateJoined=k.weekDays[0].date<=new Date(k.dateJoined),k.segregateClients()},this.loadCurrentTimesheet=function(e){k.emptyTimesheetSubmitReason=null,e=e&&"Invalid Date"!=new Date(e).toString()?e:k.getStartDate(new Date).dateOnlyString(),(k.isSelf?k.myTimesheetServices.getTimesheet(e):k.employeeTimesheetServices.getEmployeeTimesheet(k.id,e)).then(function(e){k.currentTimesheet=e.id?e:null,k.timesheetActivity=[],k.currentTimesheet&&k.currentTimesheet.status>0&&(e.approverLogEntry&&0!=e.approverLogEntry.length&&e.approverLogEntry[0].status==k.timeEntryStatus.submitted.id||k.timesheetActivity.push({dateTime:e.dateSubmitted,approverName:k.myPublicProfile.displayName,status:k.timesheetStatus.submitted,note:""}),e.approverLogEntry.forEach(function(t){!k.emptyTimesheetSubmitReason&&t.comment&&(k.emptyTimesheetSubmitReason=t.comment),k.timesheetActivity.push({dateTime:t.timeStamp,approverName:t.approver.approverName,status:k.timesheetStatus.getById(t.status?t.status:e.status),note:t.comment})})),k.timesheetAttachment=e.attachments?e.attachments:[]})},this.getBillingClassificationId=function(e,t){if(e&&0!=e)return e;if(1==t||2==t){var i=k.vm.billableTypes.find(function(e){return!e.isEditable});return i?i.id:0}var n=k.vm.nonBillableTypes.find(function(e){return!e.isEditable});return n?n.id:0},this.createTimeOffEntries=function(){k.timeOffEntryList=[],angular.forEach(k.weekDays,function(e,i){var n=!k.myTimeOffData.weeklyOffs.isWorkingDay(e.date),o=k.myTimeOffData.orgHolidays.find(function(t){return new k.sharedModel.DateWithZeroTime(t.date).equals(new k.sharedModel.DateWithZeroTime(e.date))&&!t.isFloater}),r=k.myTimeOffData.employeeLeaveTransactions.find(function(t){return t.debitedOn.stringToDate().equals(new k.sharedModel.DateWithZeroTime(e.date))});k.timeOffEntryList.push(new a(!!n,!!o,!!r,!!r&&r.leaveDayStatus!=t.FullDayLeave))})},this.updateBillingTypes=function(e,t,i){e.timesheetEntry||(e.timesheetEntry={}),e.timesheetEntry.billable=t,e.taskDetails.billingClassificationId=i.id,k.vm.billingTypeUpdated=!0,k.updateWorkHours()},this.updateWorkHours=function(){k.vm.billableTasks=k.tasks.filter(function(e){return e.id&&(e.timesheetEntry?e.timesheetEntry.billable:e.taskDetails.billable||e.taskDetails.billable>0)}),k.vm.billableHours=k.computeWorkHours(k.vm.billableTasks),k.vm.unBillableTasks=k.tasks.filter(function(e){return e.id&&(e.timesheetEntry?!e.timesheetEntry.billable:!e.taskDetails.billable)}),k.vm.unBillableHours=k.computeWorkHours(k.vm.unBillableTasks)},this.computeWorkHours=function(e){var t=0;return angular.forEach(e,function(e){angular.forEach(k.weekDays,function(i){e.timesheetHours[i.key]&&("string"==typeof e.timesheetHours[i.key]&&(e.timesheetHours[i.key]=k._filter("timeFormatter")(e.timesheetHours[i.key],"decimal")),t+=e.timesheetHours[i.key])})}),parseFloat(t.toFixed(2))},this.checkWeekOffOrHoliday=function(e){var t=!k.myTimeOffData.weeklyOffs.isWorkingDay(e.date),i=k.myTimeOffData.orgHolidays.find(function(t){return t.date.stringToDate().equals(new k.sharedModel.DateWithZeroTime(e.date))&&!t.isFloater});return t||i},this.checkOnLeave=function(e){return k.myTimeOffData.employeeLeaveTransactions.find(function(t){return t.debitedOn.stringToDate().equals(new k.sharedModel.DateWithZeroTime(e.date))})},this.hasLessTimesheetHours=function(){var e=0;return angular.forEach(k.tasks,function(t){angular.forEach(k.weekDays,function(i){e+=t.timesheetHours[i.key]?t.timesheetHours[i.key]:0})}),e<k.timesheetSettings.hoursPerWeek},this.isTimesheetValid=function(){var e=!0;return angular.forEach(k.tasks,function(t){angular.forEach(k.weekDays,function(i){t.status==k.timeEntryStatus.approved.id||t.status==k.timeEntryStatus.submitted.id||t.status==k.timeEntryStatus.inApprovalProcess.id?isNaN(t.timesheetHours[i.key])||(e=e||!1):isNaN(t.timesheetHours[i.key])||!t.projectDetails.timesheetCommentsRequired||t.timesheetComments[i.key]&&null!==t.timesheetComments[i.key]||(e=!1)})}),k.isValid=e,e},this.checkforComments=function(){var e=0;angular.forEach(k.tasks,function(t){angular.forEach(t.timesheetComments,function(t,i){t&&(e+=1)})}),k.vm.showComments=0!=e},this.segregateClients=function(){var e=k.weekDays[0].date,t=k.weekDays[6].date,i=[];angular.forEach(k.myProjects,function(n){var o=n.startDate?n.startDate.stringToDate():null,r=n.endDate?n.endDate.stringToDate():null,a=null!=n.startDate?o<=e?null==n.endDate||r>=e:o<=t:null==n.endDate||r>=e;-1==i.indexOf(n.clientName)&&!n.isResourceDeleted&&a&&i.push(n.clientName)}),k.vm.myClients=i},this.getProjectsForClient=function(e){var t=k.weekDays[0].date,i=k.weekDays[6].date;k.vm.clientProjects=k.myProjectsCopy.filter(function(n){var o=n.startDate?n.startDate.stringToDate():null,r=n.endDate?n.endDate.stringToDate():null;return n.clientName==e&&(null!=n.startDate?o<=t?null==n.endDate||r>=t:o<=i:null==n.endDate||r>=t)}),k.vm.projectTasks&&(k.vm.projectTasks.length=0)},this.getTasksForProject=function(e){var t=k.weekDays[0].date,i=k.weekDays[6].date;k.vm.projectTasks=e.projectTasks.filter(function(e){var n=e.startDate?e.startDate.stringToDate():null,o=e.endDate?e.endDate.stringToDate():null;return null!=e.startDate?n<=t?null==e.endDate||o>=t:n<=i:null==e.endDate||o>=t})},this.addProjectTask=function(e){if(e){var t=new o({taskId:e.id,projectId:e.projectId},k.getTask(e.projectId,e.id),k.getProjectDetails(e.projectId));return e.status=k.timeEntryStatus.unSubmitted.id,t.sequenceNumber=k.maxSequenceNumber+1,t.taskDetails.billingClassificationId=e.billingClassificationId,k.maxSequenceNumber++,k.tasks.push(t),t}return null},this.closeDropdown=function(e){k.vm.taskSelect?k.resetDropdown():e.stopPropagation()},this.resetDropdown=function(){k.vm.clientSelect=k.vm.projectSelect=k.vm.taskSelect=null,k.vm.projectTasks=[],k.vm.clientProjects=[]},this.getTimeOffTotal=function(){var e=0;return angular.forEach(k.timeOffEntryList,function(t){t.leave&&(e+=t.isHalfDayLeave?4:8)}),e},this.getDateByKey=function(e){var t=k.weekDays.find(function(t){return t.key==e});return t?t.date:null},this.getKeys=function(e){return e instanceof Object?Object.keys(e):e},this.getTaskSubTotal=function(e){var t=0,i=0;return angular.forEach(k.weekDays,function(n){if(e.id&&e.timesheetHours[n.key]){var o=k._filter("timeFormatter")(e.timesheetHours[n.key],"hhmm");t+=parseInt(o.split(":")[0],10),(i+=parseFloat(o.split(":")[1]))>59&&(t+=1,i-=60)}}),i>9?t+":"+i:t+":0"+i},this.getDaySubTotal=function(e){var t=0,i=0;return angular.forEach(k.tasks,function(n){if(n.id&&n.timesheetHours[e]){var o=k._filter("timeFormatter")(n.timesheetHours[e],"hhmm");t+=parseInt(o.split(":")[0],10),(i+=parseFloat(o.split(":")[1]))>59&&(t+=1,i-=60)}}),i>9?t+":"+i:t+":0"+i},this.openCalendar=function(e){e.stopPropagation(),e.preventDefault(),k.dtpick.isOpen=!k.dtpick.isOpen},this.toggleDropdown=function(e){e.preventDefault(),e.stopPropagation(),k.vm.isOpen=!k.vm.isOpen},this.close=function(){k.modalInstance.close()},this.setActiveTimesheetEntry=function(e,t,i){null==i.isValid[t.key]&&(i.isValid[t.key]=!0),k.isTimeEntryEditable(t.date,i)&&(k.selectedDay=t,k.vm.activeTaskIndex=e,k.vm.activeWeekDayKey=t.key)},this.isTimeEntryEditable=function(e,t){var i,n,o;return!!(e&&t&&t.id)&&(k.resourceAllocations&&k.resourceAllocations.length&&(i=k.resourceAllocations.find(function(e){return e.projectId==t.projectDetails.id}))&&(n=i.startDate?new Date(i.startDate).dateOnlyString().stringToDate():null,o=i.endDate?new Date(i.endDate).dateOnlyString().stringToDate():null),e=new Date(e.setHours(0,0,0,0)),k.myProjectsCopy.some(function(e){return e.id==t.projectDetails.id})&&(null==k.currentTimesheet||k.currentTimesheet.status==k.timesheetStatus.unSubmitted.id||t.status==k.timeEntryStatus.unSubmitted.id||k.currentTimesheet.status==k.timesheetStatus.rejected.id&&(!t.status||t.status==k.timeEntryStatus.rejected.id))&&(null==t.taskDetails.startDate&&t.projectDetails&&(null==t.projectDetails.startDate||e>=t.projectDetails.startDate.stringToDate())||null!=t.taskDetails.startDate&&e>=t.taskDetails.startDate.stringToDate())&&(null==t.taskDetails.endDate&&t.projectDetails&&(null==t.projectDetails.endDate||e<=t.projectDetails.endDate.stringToDate())||null!=t.taskDetails.endDate&&e<=t.taskDetails.endDate.stringToDate())&&k.dateJoined.stringToDate()<=e&&(!i||t.projectDetails.assignedToAll||n&&o&&e>=n&&e<=o||!n&&o&&e<=o||!o&&n&&e>=n||!n&&!o))},this.getTaskStats=function(e){var t=0;return angular.forEach(e.timesheetHours,function(e){e&&(t+=e)}),t/k.vm.totalWorkDuration*100},this.getBillingClassification=function(e){var t=k.billingClassifications?k.billingClassifications.find(function(t){return t.id==e}):null;return null!=t?t.name:"Non-Billable"},this.requestProject=function(){k.modalInstance=k._modal.open({templateUrl:"requestProject",controller:"ProjectRequestController",resolve:{requestUrl:function(){return k.isSelf?k.myTimesheetServices.myTime:k.employeeTimesheetServices.employeeTimesheet}},controllerAs:"ctrl"}),k.modalInstance.result.then(function(e){console.log(e)})},this.exportTimesheet=function(e){var t=k.isSelf?"mytimesheet":"employeetimesheet";if(k.isSelf){var i="/api/mytime/export/timesheet?name="+t+"&format="+e+"&from="+(k.weekDays[0]?k.weekDays[0].date.dateOnlyString():"")+"&to="+(k.weekDays[6]?k.weekDays[6].date.dateOnlyString():"");k.fileDownloadService.downloadFile(i)}else{i="/api/employee/"+k.id+"/timesheet/export/exportemployeetimesheet?name="+t+"&format="+e+"&from="+(k.weekDays[0]?k.weekDays[0].date.dateOnlyString():"")+"&to="+(k.weekDays[6]?k.weekDays[6].date.dateOnlyString():"")+"&employeeId="+k.id;k.fileDownloadService.downloadFile(i)}},this.switchToDay=function(e){k.vm.daySwitched=!1,k.selectedDay=e,k._timeout(function(){k.vm.daySwitched=!0})},this.setView=function(e){"listview"==e&&(k.vm.subnavTab="timesheetActivity"),k.vm.selectedView=e,k._cookies.put("timesheet-view-name",e)},this.dateChanged=function(){k.vm.showTimesheet=!1;var e=k.getStartDate(k.vm.weekSelection);k.loadWeekDays(e),k.loadTimesheetEntries(e.dateOnlyString()).then(function(){k.updateWorkHours()})},this.updateTaskHours=function(e){var t=k.vm.activeWeekDayKey;"listview"==k.vm.selectedView&&(t=k.selectedDay.key),k.isTimeValid=e.isValid[t]=!0;var i=k.getTimeFromString(e.startTime[t]),n=k.getTimeFromString(e.endTime[t]);n<i&&n.setDate(n.getDate()+1),e.timesheetHours[t]=parseFloat(((n>i?n-i:0)/36e5).toFixed(2)),k.checkforComments(),k.updateWorkHours(),k.timesheetForm.$setDirty()},this.getTimeFromString=function(e){if(e){var t=e.split(":")[0],i=e.split(":")[1];return(new Date).setTimeSpan({hours:t,minutes:i,seconds:0,ms:0})}var n=new Date;return n.setHours(0,0,0,0),n},this.saveManually=function(){k.isSaveInProgress||(k.isSaveInProgress=!0,k.timesheetForm.$setDirty(),k.saveTimesheetEntries(!0).then(function(){k.isSaveInProgress=!1}))},this.toggleTimer=function(e,t,i){void 0===t&&(t=!1),void 0===i&&(i=null),k.vm.isTaskTimerRunning=!t,k.vm.timeToggled=i||new Date,k.vm.timeDifference=0;var n=k.vm.timeToggled.getHours(),o=k.vm.timeToggled.getMinutes(),r=(n>=10?n:"0"+n)+":"+(o>=10?o:"0"+o);if(t){k._interval.cancel(k.vm.timerInterval),e.endTime[k.vm.timerRunningDayKey]=r,e.endTimestamp[k.vm.timerRunningDayKey]=k.vm.timeToggled;var a=new Date(e.endTimestamp[k.vm.timerRunningDayKey]),s=new Date(e.startTimestamp[k.vm.timerRunningDayKey]);(a.getTime()-s.getTime())/36e5>=24?(e.endTime[k.vm.timerRunningDayKey]=null,k.isTimeValid=e.isValid[k.vm.timerRunningDayKey]=!1,e.timesheetHours[k.vm.timerRunningDayKey]=0,k.notificationService.error("Time is invalid since the timer was running for too long. Please check the invalid time entries.")):e.timesheetHours[k.vm.timerRunningDayKey]=parseFloat(((a.setSeconds(0)-s.setSeconds(0))/36e5).toFixed(2)),k.checkforComments(),k.updateWorkHours()}else{if(!i){var l=k.tasks.find(function(t){return t.id==e.id&&!t.startTime[k.vm.timerRunningDayKey]});e.startTime[k.vm.timerRunningDayKey]&&l?e=l:l||(e=k.addProjectTask({id:e.id,projectId:e.projectDetails.id}))}e.startTime[k.vm.timerRunningDayKey]=e.startTime[k.vm.timerRunningDayKey]||r,e.startTimestamp[k.vm.timerRunningDayKey]=k.vm.timeToggled,e.timesheetHours[k.vm.timerRunningDayKey]=0,k.vm.timerInterval=k._interval(function(){k.vm.timeDifference=(new Date).getTime()-k.vm.timeToggled.getTime()},1e3)}e.isTimerRunning[k.vm.timerRunningDayKey]=e.isTaskTimerRunning=k.vm.isTaskTimerRunning,i||(k.vm.timerRunningDayKey=k.vm.currentDayKey,k.timesheetForm.$setDirty(),k.saveTimesheetEntries())},this.isLastTaskOfDay=function(e){var t=k.tasks.filter(function(t){return t.id==e.id});return t.indexOf(e)==t.length-1},this.fileUploadSettings=angular.copy(C.fileUploadSettings),this.fileUploadSettings.acceptFileTypes=/(\.|\/)(jpe?g|png|doc|docx|pdf|txt|xps|rtf)$/i,this.fileUploadSettings.allowedFileTypes="png,jpg,jpeg,doc,docx,pdf,rtf,xps,txt",this.fileUploadSettings.maxNumberOfFiles=4,this.fileUploadSettings.maxFileSize=21e5}return Object.defineProperty(e.prototype,"today",{get:function(){var e=this;return this.weekDays.find(function(t){return t.key==e.vm.currentDayKey})},enumerable:!0,configurable:!0}),e.prototype.$onInit=function(){this.vm.datepickerOptions=angular.copy(this.appSettings.datepickerOptions),angular.extend(this.momentPicker,this.appSettings.timepickerOptions),this.id=this._stateParams.id,this.vm.daySwitched=!0,this.vm.saveMessage="Auto saved",this.hasAttendanceFeature=this.appContext.isFeaturePresent(this.appFeatures.Attendance.title),this.getTimesheetSettings();var e=this._cookies.get("timesheet-view-name");this.vm.selectedView=e||"gridview",this.vm.subnavTab=e&&"gridview"!=e?"timesheetActivity":"commentsSummary",this.getMyProjects(),this.getResourceAllocations(),this.initializeTimesheets()},e.prototype.$onDestroy=function(){this._timeout.cancel(this.saveTimeout)},e.$inject=["$q","$filter","$stateParams","$state","$uibModal","$timeout","$interval","$cookies","$location","MyTimesheetServices","MyAttendanceService","EmployeeTimesheetServices","EmployeeAttendanceService","SharedModel","AppContext","AppSettings","BlobContainers","OrgSettingServices","LookupServices","TimesheetStatus","TimeEntryStatus","NotificationService","dialogs","momentPicker","AppFeatures","AttendanceHoursType","FileDownloadService","AuditEventType","KekaAuditService"],e}(),n=function(){function e(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g){var v=this;this._q=e,this._filter=t,this._state=i,this._modal=n,this.myTimesheetServices=o,this.myAttendanceService=r,this.employeeTimesheetServices=a,this.employeeAttendanceService=s,this.notificationService=l,this.employeeId=c,this.isSelf=p,this.currentTimesheet=u,this.appSettings=d,this.billingClassifications=m,this._modalInstance=y,this.timesheetMaxDate=h,this.dateJoined=f,this.weekDays=g,this.taskById={},this.projectClientNames={},this.taskGridModel=[],this.getWeekData=function(e){v._q.all([v.isSelf?v.myTimesheetServices.getMyProjects():v.employeeTimesheetServices.getEmployeeProjects(v.employeeId),v.isSelf?v.myTimesheetServices.getSubmissionStatusAndTimesheetEntries(e):v.employeeTimesheetServices.getSubmissionStatusAndTimesheetEntries(v.employeeId,e),v.isSelf?v.myTimesheetServices.getTimesheet(e):v.employeeTimesheetServices.getEmployeeTimesheet(v.employeeId,e)]).then(function(e){v.myProjects=e[0],v.selectedWeekTimeEntries=e[1].entries,v.selectedWeekTimesheet=e[2],v.disableWeekScroll=!1,v.buildNames(),v.filterAllowableTasks(),v.buildClientProjectTaskModel()})},this.loadAdjacentTimesheet=function(e){if(!v.disableWeekScroll&&v.weekDays){var t,i;v.disableWeekScroll=!0,t=v.weekDays[0].date;var n=new Date(t.setDate(t.getDate()+(e?-7:7)));v.loadWeekDays(n),i=n.dateOnlyString(),v.getWeekData(i)}},this.getBillingClassification=function(e){var t=v.billingClassifications?v.billingClassifications.find(function(t){return t.id==e}):null;return null!=t?t.name:"Non-Billable"},this.getNextWeek=function(){v.timesheetLimitExceeded||v.loadAdjacentTimesheet(!1)},this.getPreviousWeek=function(){v.currentWeekPastDateJoined||v.loadAdjacentTimesheet(!0)},this.currentWeekDays=angular.copy(this.weekDays),this.init()}return e.prototype.init=function(){this.selectedWeekTimesheet=angular.copy(this.currentTimesheet),this.disableWeekScroll=!1,this.loadAdjacentTimesheet(!0)},e.prototype.filterAllowableTasks=function(){var e=this;this.selectedWeekTimeEntries=this.selectedWeekTimeEntries.filter(function(t){return(new Date(e.taskById[t.taskId].startDate)<e.currentWeekDays[6].date||!e.taskById[t.taskId].startDate)&&(new Date(e.taskById[t.taskId].endDate)>e.currentWeekDays[0].date||!e.taskById[t.taskId].endDate)&&!e.projectClientNames[t.projectId].isResourceDeleted})},e.prototype.buildNames=function(){var e=this;this.projectClientNames={},this.taskById={},this.myProjects.forEach(function(t){e.projectClientNames[t.id]=t,t.projectTasks.forEach(function(t){e.taskById[t.id]=t})})},e.prototype.buildClientProjectTaskModel=function(){var e=this;this.taskGridModel=[];var t=this.groupByProperty(this.selectedWeekTimeEntries,"sequenceNumber");angular.forEach(t,function(t,i){var n=t[0];e.taskGridModel.push({taskName:e.taskById[n.taskId].name,clientName:e.projectClientNames[n.projectId].clientName,projectName:e.projectClientNames[n.projectId].name,billable:e.getBillingClassification(n.billingClassificationId),task:e.taskById[n.taskId],billingClassificationId:n.billingClassificationId})},{}),this.initializeGridSettings()},e.prototype.initializeGridSettings=function(){var e=this;this.gridApi&&this.gridApi.selection.clearSelectedRows(),this.tasksGridOptions=angular.copy(this.appSettings.gridSettings),this.tasksGridOptions.rowHeight=65,this.tasksGridOptions.columnDefs=[{name:"taskName",displayName:"TASK NAME",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row, col)}}</span></div>',enableCellEdit:!1,allowCellFocus:!1,headerTooltip:!0},{name:"clientName",displayName:"CLIENT NAME",cellClass:"ui-grid-cell",enableCellEdit:!1,allowCellFocus:!1,headerTooltip:!0},{name:"projectName",displayName:"PROJECT NAME",cellClass:"ui-grid-cell",enableCellEdit:!1,allowCellFocus:!1,headerTooltip:!0},{name:"billable",displayName:"BILLING TYPE",enableCellEdit:!1,allowCellFocus:!1,headerTooltip:!0}],this.tasksGridOptions.multiSelect=!0,this.tasksGridOptions.data="ctrl.taskGridModel",this.tasksGridOptions.appScopeProvider=this,this.tasksGridOptions.onRegisterApi=function(t){e.gridApi=t}},e.prototype.loadWeekDays=function(e){this.weekDays=[];for(var t=angular.copy(e);this.weekDays.length<7;){var i=new Date(t),n={key:this._filter("date")(e,"ddMMyyyy"),date:i};this.weekDays.push(n),t.setDate(t.getDate()+1)}this.timesheetLimitExceeded=this.weekDays[6].date>=this.timesheetMaxDate,this.currentWeekPastDateJoined=this.weekDays[0].date<=new Date(this.dateJoined)},e.prototype.groupByProperty=function(e,t){return e.reduce(function(e,i){return(e[i[t]]=e[i[t]]||[]).push(i),e},{})},e.prototype.exportTasks=function(){var e=this.gridApi.selection.getSelectedRows();e.length>0?this._modalInstance.close(e):this.notificationService.success("Please select atleast one task")},e.$inject=["$q","$filter","$state","$uibModal","MyTimesheetServices","MyAttendanceService","EmployeeTimesheetServices","EmployeeAttendanceService","NotificationService","employeeId","isSelf","currentTimesheet","AppSettings","billingClassifications","$uibModalInstance","timesheetMaxDate","dateJoined","weekDays"],e}(),o=function(){return function(e,t,i){this.id=e.taskId,this.timesheetId={},this.taskDetails=t,this.projectDetails=i,this.startTime={},this.endTime={},this.startTimestamp={},this.endTimestamp={},this.timesheetHours={},this.timesheetComments={},this.isValid={},this.isTimerRunning={}}}(),r=function(){return function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h){this.id=e,this.projectId=t,this.taskId=i,this.employeeId=n,this.employeeTimesheetId=o,this.billingClassificationId=r,this.billable=a,this.totalHours=s,this.date=l,this.comments=c,this.approverLogEntry=p,this.status=u,this.startTime=d,this.endTime=m,this.sequenceNumber=y,this.isTimerRunning=h}}(),a=function(){return function(e,t,i,n){this.isweekOff=e,this.holiday=t,this.leave=i,this.isHalfDayLeave=n}}();!function(e){e[e.None=0]="None",e[e.FullDayLeave=1]="FullDayLeave",e[e.FirstHalfLeave=2]="FirstHalfLeave",e[e.SecondHalfLeave=3]="SecondHalfLeave"}(t||(t={})),angular.module("xhr").component("timesheetGrid",{controller:i,controllerAs:"ctrl",templateUrl:"/employeeTimesheet/timesheetgrid",bindings:{isSelf:"<",isMyTeam:"<",myPublicProfile:"<",weekStartDay:"<",myTimeOffData:"<",billingClassifications:"<",timesheetsToSubmit:"<",waitForTimesheetsToSubmit:"<",updateCount:"&"}})}(Timesheet||(Timesheet={})),function(e){var t=function(){function e(e,t,i,n,o,r,a,s,l,c,p,u,d){var m=this;this._stateParams=e,this._state=t,this._q=i,this.applicationModule=n,this.employeeTimesheetServices=o,this.publicProfileServices=r,this.notificationService=a,this.myTimesheetServices=s,this.orgSettingServices=l,this.appContext=c,this.lookupServices=p,this.timesheetServices=u,this.employeeProfileService=d,this.getTimesheetCount=function(){var e=m.isSelf?m.myTimesheetServices.getTimesheetsDueCount():m.employeeTimesheetServices.getUnSubmittedTimesheetCount(m.id),t=m.isSelf?m.myTimesheetServices.getTimesheetsRejectedCount():m.employeeTimesheetServices.getRejectedTimesheetCount(m.id);e.then(function(e){m.timesheetDueCount=e.timesheetCount}),t.then(function(e){m.timesheetRejectedCount=e.timesheetCount})},this.updateCount=function(e,t,i){var n=t?t.status:null,o=t?t.endDate.stringToDate():new Date,r=new Date;"submit"==e?"rejected"==i||("due"==i||"all"==i)&&3==n?(m.timesheetRejectedCount--,o<r&&m.timesheetDueCount--):("due"==i||"all"==i&&o<r)&&0==n&&m.timesheetDueCount--:"unsubmit"==e?o<r&&m.timesheetDueCount++:(o<r&&m.timesheetDueCount++,m.timesheetRejectedCount++),m.timesheetRejectedCount<0&&(m.timesheetRejectedCount=0),m.timesheetDueCount<0&&(m.timesheetDueCount=0)},this.id=parseInt(this._stateParams.id),this.id&&this.employeeTimesheetServices.getEmployeeModuleStatus(this.id).then(function(e){var t=e;m.isTimeSheetEnabled=t.some(function(e){return e.employeeId==m.id&&e.module==m.applicationModule.Timesheet.id&&e.enabled})}),this.isSelf=/^mytime.timesheets.*/.test(this._state.current.name);var y=this.isSelf?[this.appContext.currentUser(),this.orgSettingServices.getSettings(),this.myTimesheetServices.getTimeoffData(),this.lookupServices.lookup.query({id:"billingclassifications"}).$promise]:[this.employeeProfileService.getEmployeeProfile(this.id),this.orgSettingServices.getSettings(),this.employeeTimesheetServices.getEmployeeTimeoffData(this.id),this.lookupServices.lookup.query({id:"billingclassifications"}).$promise];this._q.all(y).then(function(e){m.myPublicProfile=e[0],m.weekStartDay=e[1].leave.weekStartDay,m.myTimeOffData=e[2],m.myTimeOffData.weeklyOffs?(m.myTimeOffData.weeklyOffs=new Attendance.Model.WeeklyOffPolicy(m.myTimeOffData.weeklyOffs),m.billingClassifications=e[3],m.getTimesheetCount()):m.weeklyOffNotAssigned=!0})}return e.$inject=["$stateParams","$state","$q","ApplicationModule","EmployeeTimesheetServices","PublicProfileServices","NotificationService","MyTimesheetServices","OrgSettingServices","AppContext","LookupServices","TimesheetServices","EmployeeProfileService"],e}();e.MyTimesheetController=t;var i=function(){function e(e){var t=this;this._timeout=e,this.gridCallback=function(e,i){t.updateCount({action:e,currentTimesheet:i,source:"all"})}}return e.$inject=["$timeout"],e}();e.AllTimesheetsController=i;var n=function(){function e(e,t,i,n,o){var r=this;this._stateParams=e,this._filter=t,this.myTimesheetServices=i,this.myTeamServices=n,this.employeeTimesheetServices=o,this.gridCallback=function(e,t){r.updateCount({action:e,currentTimesheet:t,source:"due"})},this.loadUnsubmittedTimesheets=function(){(r.isSelf?r.myTimesheetServices.getTimesheetsDue():r.employeeTimesheetServices.getUnSubmittedTimesheets(r.id)).then(function(e){r.unsubmittedTimesheets=r._filter("orderBy")(e,"startDate",!1)},function(e){})}}return e.prototype.$onInit=function(){this.id=this._stateParams.id,this.loadUnsubmittedTimesheets()},e.$inject=["$stateParams","$filter","MyTimesheetServices","MyTeamServices","EmployeeTimesheetServices"],e}();e.TimesheetsDueController=n;var o=function(){function e(e,t,i,n,o){var r=this;this._stateParams=e,this._filter=t,this.myTimesheetServices=i,this.myTeamServices=n,this.employeeTimesheetServices=o,this.gridCallback=function(e,t){r.updateCount({action:e,currentTimesheet:t,source:"rejected"})},this.loadRejectedTimesheets=function(){(r.isSelf?r.myTimesheetServices.getTimesheetsRejected():r.employeeTimesheetServices.getRejectedTimesheets(r.id)).then(function(e){r.rejectedTimesheets=r._filter("orderBy")(e,"startDate",!1)},function(e){})}}return e.prototype.$onInit=function(){this.id=this._stateParams.id,this.loadRejectedTimesheets()},e.$inject=["$stateParams","$filter","MyTimesheetServices","MyTeamServices","EmployeeTimesheetServices"],e}();e.TimesheetsRejectedController=o;var r=function(){function e(e,t,i,n,o,r,a){var s=this;this._stateParams=e,this.myTimesheetServices=t,this.myTeamServices=i,this.employeeTimesheetServices=n,this.notificationService=o,this.timesheetStatus=r,this.fileDownloadService=a,this.model={},this.weekTimeSummary=[],this.weekTimeSubmitted=!1,this.setCurrentMonthDates=function(){var e=new Date;s.model.fromDate=new Date(e.getFullYear(),e.getMonth(),1),s.model.toDate=new Date},this.isDateValid=function(e){return new Date(e).setHours(0,0,0,0)<=new Date(s.model.toDate).setHours(0,0,0,0)},this.weekTimeDateChanged=function(){s.weekTimeSubmitted=!1},this.getWeekTimeSummary=function(e,t){(s.weekTimeSubmitted=!0,e&&t)?(s.isSelf?s.myTimesheetServices.getWeekTimeSummary(e,t):s.employeeTimesheetServices.getWeekTimeSummary(s.id,e,t)).then(function(e){s.weekTimeSummary=e},function(e){s.notificationService.error("An error occurred while getting weekly time summary.")}):s.weekTimeSummary=[]},this.exportWeekTime=function(e){var t=s.isSelf?"weektimesummary":"employeeweektimesummary";if(s.isSelf){var i="/api/mytime/export/weektimesummary?name="+t+"&format="+e+"&from="+s.model.fromDate.dateOnlyString()+"&to="+s.model.toDate.dateOnlyString();s.fileDownloadService.downloadFile(i)}else{i="/api/employee/"+s.id+"/timesheet/export/employeeweektime?name="+t+"&format="+e+"&employeeId="+s.id+"&from="+s.model.fromDate.dateOnlyString()+"&to="+s.model.toDate.dateOnlyString();s.fileDownloadService.downloadFile(i)}}}return e.prototype.$onInit=function(){this.id=this._stateParams.id,this.setCurrentMonthDates(),this.getWeekTimeSummary(this.model.fromDate,this.model.toDate)},e.$inject=["$stateParams","MyTimesheetServices","MyTeamServices","EmployeeTimesheetServices","NotificationService","TimesheetStatus","FileDownloadService"],e}();e.WeekSummaryController=r;var a=function(){function e(e,t,i,n,o,r,a){var s=this;this._stateParams=e,this.myTimesheetServices=t,this.myTeamServices=i,this.employeeTimesheetServices=n,this.notificationService=o,this.timeEntryStatus=r,this.fileDownloadService=a,this.selectedProjectId=null,this.projectTimeEntries=[],this.getMyProjects=function(){(s.isSelf?s.myTimesheetServices.getMyProjects():s.employeeTimesheetServices.getEmployeeProjects(s.id)).then(function(e){s.myProjects=e})},this.getProjectTimeEntries=function(e){e?(s.isSelf?s.myTimesheetServices.getProjectTimeSummary(e):s.employeeTimesheetServices.getProjectTimeSummary(s.id,e)).then(function(e){s.projectTimeEntries=e},function(e){s.notificationService.error("Error occurred while getting project time entries.")}):s.projectTimeEntries=[]},this.exportProjectTime=function(e){var t=s.isSelf?"myprojecttime":"employeeprojecttime";if(s.isSelf){var i="/api/mytime/export/projecttime?name="+t+"&format="+e+"&projectId="+s.selectedProjectId;s.fileDownloadService.downloadFile(i)}else{i="/api/employee/"+s.id+"/timesheet/export/employeeprojecttime?name="+t+"&format="+e+"&employeeId="+s.id+"&projectId="+s.selectedProjectId;s.fileDownloadService.downloadFile(i)}}}return e.prototype.$onInit=function(){this.id=this._stateParams.id,this.getMyProjects()},e.$inject=["$stateParams","MyTimesheetServices","MyTeamServices","EmployeeTimesheetServices","NotificationService","TimeEntryStatus","FileDownloadService"],e}();e.ProjectTimeController=a,angular.module("xhr").controller("MyTimesheetController",t),angular.module("xhr").component("allTimesheets",{controller:i,controllerAs:"ctrl",templateUrl:"/employeetimesheet/alltimesheets",bindings:{isSelf:"<",isMyTeam:"<",myPublicProfile:"<",weekStartDay:"<",myTimeOffData:"<",billingClassifications:"<",updateCount:"&"}}).component("timesheetsDue",{controller:n,controllerAs:"ctrl",templateUrl:"/employeetimesheet/timesheetsdue",bindings:{isSelf:"<",isMyTeam:"<",myPublicProfile:"<",weekStartDay:"<",myTimeOffData:"<",billingClassifications:"<",updateCount:"&"}}).component("timesheetsRejected",{controller:o,controllerAs:"ctrl",templateUrl:"/employeetimesheet/rejectedtimesheets",bindings:{isSelf:"<",isMyTeam:"<",myPublicProfile:"<",weekStartDay:"<",myTimeOffData:"<",billingClassifications:"<",updateCount:"&"}}).component("weekSummary",{controller:r,controllerAs:"ctrl",templateUrl:"/employeetimesheet/weeksummary",bindings:{isSelf:"<",isMyTeam:"<"}}).component("projectTime",{controller:a,controllerAs:"ctrl",templateUrl:"/employeetimesheet/projecttime",bindings:{isSelf:"<",isMyTeam:"<"}})}(Timesheet||(Timesheet={})),appRoot.factory("TaskService",["$resource","$q",function(e,t){return{tasks:e("/api/tasks/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),getTasks:function(){return this.tasks.query({action:"default"}).$promise},getTaskFolders:function(){return this.tasks.query({action:"taskfolders"}).$promise},getPendingTasks:function(){return this.tasks.query({action:"pendingtasks"}).$promise}}}]),appRoot.filter("nameFormatter",["TaskTypes",function(){return function(e){return null!=e.split(new RegExp("-(.+)?"))[1]?e.split(new RegExp("-(.+)?"))[1]:e.split(new RegExp("-(.+)?"))[0]}}]),appRoot.controller("MyTasksController",["$scope","$state","$uibModal","$timeout","$filter","TaskStatus","PublicProfileServices","TaskPriorities","SystemTaskTypes","TaskService","NotificationService","EmployeeServices","MyProfileServices","AppSettings","CommentItemType","$q","SharedModel","TaskProcessTypes","$location","$window","dialogs",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S,C){function w(e){this.id=e.id,this.displayName=e.name||e.displayName}function b(e){this.title=e.title||"",this.assignedTo=e.assignedTo||0,this.attachments=e.attachments||[],this.commentIdentifier=e.commentIdentifier||"",this.description=e.description||"",this.dueOn=e.dueOn?e.dueOn.stringToDate():null,this.id=e.id,this.isFavourite=e.isFavourite,this.isSystemGenerated=e.isSystemGenerated||e.systemGenerated,this.notes=e.notes||"",this.otherAssignees=e.otherAssignees||[],this.ownerID=e.ownerID||0,this.priority=e.priority,this.status=e.status,this.subtasks=e.subtasks||[],this.taskFolderId=e.taskFolderId||0,this.assigneeName=e.assigneeName,this.ownerName=e.ownerName,this.regarding=e.regarding||[],this.employeeNumber=e.employeeNumber,this.systemTaskType=e.systemTaskType,this.taskProcessType=e.taskProcessType,this.createdOn=e.createdOn?new Date(e.createdOn):new Date}e.vm={},e.vm.tasks=[],e.vm.datepickerOptions=angular.copy(m.datepickerOptions),e.taskWatcherId,e.vm.taskFolders=[],e.vm.currentDate=new f.DateWithZeroTime,e.vm.selectedTask=null,e.vm.selectedFolderId=0,e.vm.selectedFolder={},e.vm.taskStatus=r,e.vm.taskPriorities=s,e.vm.SystemTaskTypes=l,e.vm.fileUploadSettings=angular.copy(m.fileUploadSettings),e.vm.fileUploadSettings.acceptFileTypes=/(\.|\/)(gif|jpe?g|png)$/i,e.vm.fileUploadSettings.allowedFileTypes="png,jpg,jpeg,doc,docx,xls,xlsx,pdf,txt,pptx",e.vm.fileUploadSettings.maxNumberOfFiles=10,e.vm.selectedFiles=[],e.vm.showAttachmentOption=!1,e.vm.showAddFolderForm=!1,e.vm.searchTitle="",e.vm.updateFolderModel={},e.vm.taskProcessTypes=g,e.vm.selectedTaskCopy=null,e.vm.taskUpdateStack={},e.isArray=angular.isArray,e.isTaskCreationInProgress=!1,e.vm.form={editTask:{}},e.dtpick={isOpen:!1},e.vm.predefinedColors=["#3F5D7D","#279B61","#008AB8","#993333","#4AA400","#5B74A8","#6d8330","#b1d9ed","#0099cb","#59bd7f","#7d6a60","#438483","#D63C00","#CC6699","#A0522D","#008B8B","#B8860B","#6495ED"],e.vm.taskFolderColors=["#4AC098","#ED8827","#159EE5","#8732FB","#FFC600","#D845C8","#DD2846","#2AAB79","#A56F4E","#68747B"],e.filterByTitle=function(t){if(!e.vm.searchTitle)return!0;return!!new RegExp("^"+e.vm.searchTitle,"ig").test(t.title)},e.filterById=function(t){var i=!1;return angular.forEach(e.vm.selectedTask.otherAssignees,function(e){e==t.id&&(i=!0)}),i},e.vm.searchEmployees=function(t){if(t&&t.length>=2){var i=h.defer();return a.searchEmployees(t).then(function(t){0==(t=o("omit")(t,e.filterById)).length&&t.push({noResults:!0}),i.resolve(t)}),i.promise}},e.addSubtask=function(t){t.name.length&&(e.vm.selectedTask.subtasks.push(new function(e){this.status=!1,this.name=e.name}(t)),e.vm.subtaskTitle="")},e.removeSubtask=function(t){e.vm.selectedTask.subtasks.splice(t,1),e.vm.form.editTask.$dirty=!0},e.$on("$stateChangeSuccess",function(i,n,o,r,a){e.vm.state=t.current}),e.$on("$locationChangeStart",function(t,i,n){e.isStateChanged=!0}),e.showTask=function(t){e.vm.selectedTask=t,t&&(e.vm.selectedTask.dueOn=null!=e.vm.selectedTask.dueOn&&"string"==typeof e.vm.selectedTask.dueOn?e.vm.selectedTask.dueOn.stringToDate():e.vm.selectedTask.dueOn,e.vm.isAssigneeSelected=!0,P(),T())},e.vm.updateSelectedTask=function(){e.vm.selectedTask.regarding.push({id:e.vm.regarding.id,name:e.vm.regarding.displayName}),e.vm.selectedTask.otherAssignees.push(e.vm.regarding.id),e.vm.regarding=null,e.vm.form.editTask.$dirty=!0},e.vm.removeUser=function(t){e.vm.selectedTask.otherAssignees.splice(t,1),e.vm.selectedTask.regarding.splice(t,1),e.vm.form.editTask.$dirty=!0};var P=function(){e.vm.selectedTask&&e.vm.selectedTask.assignedTo&&(e.vm.isAssigneeSelected?a.getEmployeeSearchResult(e.vm.selectedTask.assignedTo).then(function(t){t&&(e.vm.assignedTo=t,e.vm.currentAssignee=angular.copy(e.vm.assignedTo),e.vm.selectedTask.assignedTo=angular.copy(e.vm.assignedTo.id))}):(e.vm.currentAssignee||e.vm.selectedTask.assignedTo!=e.vm.myProfile.id?e.vm.assignedTo=new w(e.vm.currentAssignee):e.vm.assignedTo=new w(e.vm.myProfile),e.vm.currentAssignee=angular.copy(e.vm.assignedTo),e.vm.selectedTask.assignedTo=angular.copy(e.vm.assignedTo.id)),e.vm.showAssignedTo=!1)};e.vm.setAssignedToId=function(){e.vm.assignedTo&&e.vm.assignedTo.id&&(e.vm.selectedTask.assignedTo=e.vm.assignedTo.id),P()};var T=function(){e.vm.selectedTask&&e.vm.selectedTask.ownerID&&(e.vm.selectedTask.ownerID!=e.vm.myProfile.id?a.getEmployeeSearchResult(e.vm.selectedTask.ownerID).then(function(t){t&&(e.vm.owner=t,e.vm.selectedTask.ownerID=e.vm.owner.id)}):(e.vm.owner=new w(e.vm.myProfile),e.vm.selectedTask.ownerID=e.vm.myProfile.id))};e.changeIcon=function(){e.modalInstance=i.open({templateUrl:"icon-selector",scope:e})},e.close=function(){e.modalInstance.close()},e.filterTasks=function(t){e.vm.tasks=[],e.vm.selectedFolder=t;var i=[];i="All Tasks"==t.name?e.tasks:"System Tasks"==t.name?e.tasks.filter(function(e){return e.isSystemGenerated&&!e.ownerID}):"Uncategorized"==t.name?e.tasks.filter(function(e){return!e.isSystemGenerated&&0==e.taskFolderId}):e.tasks.filter(function(e){return e.taskFolderId==t.id}),e.startsWith=function(e,t){return e.substr(0,t.length).toLowerCase()==t.toLowerCase()},e.vm.selectedTask&&e.vm.selectedFolderId===t.id&&void 0!==i.find(t=>t.id===e.vm.selectedTask.id&&t.taskFolderId===e.vm.selectedFolderId)||(e.vm.selectedFolderId=t.id,e.vm.selectedTask=i?o("orderBy")(i,["status","dueOn"])[0]:null),e.showTask(e.vm.selectedTask),D(i)},e.getDue=function(t){if(!t)return null;var i=new f.DateWithZeroTime(t),n=Math.abs((e.vm.currentDate-i)/864e5);return 0===n?"today":1==n?e.vm.currentDate>i?"yesterday":"tomorrow":2==n?n-1+" day "+(e.vm.currentDate>i?" overdue":""):n-1+" days"+(e.vm.currentDate>i?" overdue":"")},e.addTask=function(){if(e.vm.taskTitle&&!e.isTaskCreationInProgress){e.isTaskCreationInProgress=!0;var t=new b({});t.title=e.vm.taskTitle,t.status=e.vm.taskStatus.todo.id,t.taskFolderId=e.vm.selectedFolderId,t.assignedTo=e.vm.myProfile.id,e.filterTasks(e.vm.selectedFolder),c.tasks.save({action:"default"},t,function(i){t.id=i.id,t.ownerID=e.vm.myProfile.id,t.commentIdentifier=i.commentIdentifier,e.vm.selectedTask=t,P(),T(),e.tasks.push(e.vm.selectedTask),e.vm.taskTitle="",e.filterTasks(e.vm.selectedFolder),p.success("Task added Successfully."),e.vm.taskAdded=!0,e.isTaskCreationInProgress=!1})}},e.updateTaskStatus=function(t){t.status;t.status==e.vm.taskStatus.todo.id?angular.forEach(t.subtasks,function(e){e.status=!1}):t.status==e.vm.taskStatus.done.id&&angular.forEach(t.subtasks,function(e){e.status=!0})},e.vm.getTaskColor=function(t){var i=e.vm.taskFolders.find(function(e){return e.id==t.taskFolderId});return i?i.color:"#000"},e.setTaskTitle=function(e){e.title.trim()||(e.title=e.oldTitle)},e.updateTask=function(t){if(t&&t.title.trim()){e.vm.selectedFiles.length>0&&angular.forEach(e.vm.selectedFiles,function(i){i.uploadedBy=e.vm.myProfile.id,i.uploadedOn=new Date,t.attachments.push(i)});var i=angular.copy(t);i.dueOn=i.dueOn&&"string"!=typeof i.dueOn?i.dueOn.dateOnlyString():t.dueOn,c.tasks.update({id:t.id,action:"default"},i,function(t){e.isStateChanged||p.success("Task updated Successfully."),e.vm.myProfile.id==t.ownerID?angular.forEach(e.vm.tasks[0],function(i,n){i.id==t.id&&(e.vm.tasks[0][n]=angular.copy(t))}):angular.forEach(e.vm.tasks[1],function(i,n){i.id==t.id&&(e.vm.tasks[1][n]=angular.copy(t))}),e.vm.selectedFiles=[],e.filterTasks(e.vm.selectedFolder)},function(t){e.isStateChanged||p.error("An error occurred while updating task.")})}},e.toggleEditFolderForm=function(t){e.vm.selectedFolder.id&&e.vm.selectedFolder.id!=t.id&&e.vm.showEditFolderForm&&(e.vm.showEditFolderForm=!e.vm.showEditFolderForm),e.vm.selectedFolder=t,e.filterTasks(t),e.vm.updateFolderModel={name:e.vm.selectedFolder.name,color:e.vm.selectedFolder.color},e.vm.showEditFolderForm=!e.vm.showEditFolderForm,e.vm.selectedFolder.isCollapsed=!0},e.toggleAddFolderForm=function(){e.vm.isDisabled=!1,e.vm.taskFolder={name:null,icon:"icon-folder",color:"#000000"},e.vm.showAddFolderForm&&(e.addTaskFolder.$setPristine(),e.vm.folderSubmit=!1),e.vm.showAddFolderForm=!e.vm.showAddFolderForm},e.addFolder=function(){e.addTaskFolder.$valid?c.tasks.save({action:"taskfolders"},e.vm.taskFolder,function(t){t.employeeId=e.vm.myProfile.id,e.vm.taskFolders.push(t),e.toggleAddFolderForm(),e.vm.folderSubmit=!1,e.filterTasks(t),p.success("Task folder added successfully.")},function(e){p.error("An error occurred while adding folder.")}):(e.vm.isDisabled=!1,e.vm.folderSubmit=!0)},e.updateFolder=function(t){if(e.vm.updateFolderModel.name&&e.vm.selectedFolder.id){var i=angular.copy(e.vm.selectedFolder);i.name=e.vm.updateFolderModel.name,i.color=e.vm.updateFolderModel.color,c.tasks.update({id:e.vm.selectedFolder.id,action:"taskfolders"},i,function(i){i.isCollapsed=!1,e.vm.taskFolders[t]=i,e.vm.selectedFolder=i,p.success("Task folder updated successfully.")},function(e){p.error("An error occurred while updating task folder.")})}},e.deleteFolder=function(t,i){c.tasks.delete({id:t,action:"taskFolders"},function(t){t.result?(e.vm.taskFolders.length>1?(e.vm.selectedFolder=e.vm.taskFolders[i-1]||e.vm.taskFolders[i+1],e.filterTasks(e.vm.selectedFolder)):e.filterTasks({id:0,name:"All Tasks",color:"#000",icon:"icon-list"}),e.vm.taskFolders.splice(i,1),p.success("Task Folder deleted successfully.")):p.information("Cannot delete folder which contains tasks.")},function(e){p.error("An error occurred while deleting task folder.")})},e.deleteTask=function(){C.confirm("Please Confirm","Do you want to delete this task ?").result.then(function(){e.vm.taskUpdateStack[e.vm.selectedTask.id]&&delete e.vm.taskUpdateStack[e.vm.selectedTask.id],c.tasks.delete({id:e.vm.selectedTask.id,action:"default"},function(t){var i=e.vm.myProfile.id==e.vm.selectedTask.assignedTo?0:1,n=o("orderBy")(o("where")(e.vm.tasks[i],{taskFolderId:e.vm.selectedTask.taskFolderId}),["status","dueOn"]);e.tasks=o("removeWith")(e.tasks,{id:e.vm.selectedTask.id}),e.vm.tasks[i]=o("removeWith")(e.vm.tasks[i],{id:e.vm.selectedTask.id}),e.showTask((n[0].id===e.vm.selectedTask.id?n[1]:n[0])||null),p.success("Task deleted successfully.")},function(e){p.error("An error occurred while deleting task.")})})},e.$watch("vm.selectedTask",function(t,i){if(t&&i&&!t.isSystemGenerated)if(e.vm.taskUpdateStack[e.vm.selectedTask.id]&&e.vm.taskUpdateStack[e.vm.selectedTask.id].copy){var n=e.vm.taskUpdateStack[e.vm.selectedTask.id].copy;e.vm.taskUpdateStack[e.vm.selectedTask.id]=angular.copy(e.vm.selectedTask),e.vm.taskUpdateStack[e.vm.selectedTask.id].copy=n}else t.id!=i.id||angular.equals(t,i)||(e.vm.taskUpdateStack[e.vm.selectedTask.id]=t,e.vm.taskUpdateStack[e.vm.selectedTask.id].copy=i)},!0),e.$watch("vm.selectedFolder",function(t,i){e.vm.searchTitle="",t&&t!=i&&(i.isCollapsed=!1)}),e.openCalendar=function(t){t.preventDefault(),t.stopPropagation(),e.dtpick.isOpen=!e.dtpick.isOpen},e.validateTask=function(){var t=!0;angular.forEach(e.vm.selectedTask.subtasks,function(e,i){e.status||(t=!1)}),e.vm.selectedTask.status=t?e.vm.taskStatus.done.id:e.vm.taskStatus.todo.id};var D=function(t){!function(t){e.vm.tasks=[];var i=[],n=[];t||(t=e.tasks),angular.forEach(t,function(t){e.vm.myProfile.id==t.ownerID&&e.vm.myProfile.id!=t.assignedTo?n.push(t):i.push(t)}),e.vm.tasks.push(i),e.vm.tasks.push(n)}(t)};e.taskWatcher=function(){(function(e){for(var t in e)if(e.hasOwnProperty(t))return!1;return!0})(e.vm.taskUpdateStack)||(angular.forEach(e.vm.taskUpdateStack,function(t,i){var n=t.copy;t.copy&&(delete t.copy,e.updateTask(t),angular.equals(t,n)&&delete e.vm.taskUpdateStack[t.id])}),e.vm.taskUpdateStack={}),"mytasks"!=t.current.name||e.isStateChanged||(e.taskWatcherId=n(e.taskWatcher,5e3))},e.$on("$destroy",function(t){e.taskWatcher(),n.cancel(e.taskWatcherId)}),e.getFilteredEmployees=function(t){if(t){var i=e.getMatchedEmployees(t);return i&&i.then||console.log("promise:"+i),i&&i.then?i.then(function(t){var i=[];return angular.forEach(t,function(t){t.id!=e.vm.selectedTask.assignedTo&&i.push(t)}),i}):void 0}},e.checkPendingChanges=function(){var t=angular.copy(e.vm.taskUpdateStack);for(var i in t){var n=t[i].copy;if(delete t[i].copy,!angular.equals(t[i],n))return!0}return!1},h.all([d.getPublicProfile(),c.getTasks(),c.getTaskFolders()]).then(function(t){e.vm.myProfile=t[0],e.vm.userProfilePic=t[0].profileImage,e.tasks=t[1].map(function(e){return new b(e)}),e.vm.taskFolders=t[2],e.filterTasks({id:0,name:"All Tasks",color:"#3f5d7d",icon:"icon-list"})}),e.taskWatcher()}]),appRoot.controller("MyTeamController",["$scope","$resource","$state","$q","$location","MyProfileServices","MyTeamServices","AppContext","JobTitleServices","NotificationService",function(e,t,i,n,o,r,a,s,l,c){e.vm={},e.$on("$stateChangeSuccess",function(t,n,o,r,a){e.vm.state=i.current});var p=function(t,i){angular.isDefined(i.timesheetApprovalCount)&&(e.vm.timesheetApprovalsCount=i.timesheetApprovalCount),angular.isDefined(i.leaveApprovalsCount)&&(e.vm.leaveApprovalsCount=i.leaveApprovalsCount),angular.isDefined(i.attendanceApprovalCount)&&(e.vm.attendanceApprovalCount=i.attendanceApprovalCount),angular.isDefined(i.profileChangeRequestsCount)&&(e.vm.profileChangeRequestsCount=i.profileChangeRequestsCount),e.vm.approvalsCount=e.vm.leaveApprovalsCount+e.vm.timesheetApprovalsCount+e.vm.attendanceApprovalCount+e.vm.expenseClaimApprovalsCount+e.vm.profileChangeRequestsCount};e.$on("pendingApprovalsCountChanged",function(t,i){angular.isDefined(i.pendingAttendanceRequestsCount)&&(e.vm.attendanceApprovalCount=i.pendingAttendanceRequestsCount)}),e.$on("expenseClaimsCountChanged",function(t,i){a.myTeam.get({action:"expenseClaimApprovalsCount"},function(t){e.vm.expenseClaimApprovalsCount=t.expenseClaimApprovalsCount})}),e.$on("timesheetApprovalsCountChanged",p),e.$on("leaveApprovalsCountchanged",p),e.$on("attendanceApprovalsCountChanged",p),e.$on("profileChangesApprovalCountChanged",p),a.myTeam.get({action:"pendingapprovalscount"},function(t){e.vm.approvalsCount=t.pendingCompOffRequests+t.leaveApprovalsCount+t.timesheetApprovalsCount+t.attendanceApprovalCount+t.expenseClaimApprovalsCount+t.profileChangeRequestsCount,e.vm.leaveApprovalsCount=t.leaveApprovalsCount+t.pendingCompOffRequests,e.vm.compOffApprovalsCount=t.pendingCompOffRequests,e.vm.timesheetApprovalsCount=t.timesheetApprovalsCount,e.vm.attendanceApprovalCount=t.attendanceRemoteClockInRequestCount+t.attendanceAdjustmentRequestCount+t.attendanceWorkingRemotelyRequestCount,e.vm.expenseClaimApprovalsCount=t.expenseClaimApprovalsCount,e.vm.profileChangeRequestsCount=t.profileChangeRequestsCount}),e.vm.canHoldSalary=s.payrollVisibilityPermission.canHoldSalary}]),appRoot.factory("MyTeamServices",["$resource","$q","$routeParams",function(e,t,i){return{myTeam:e("/api/myteam/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),myTeamAttendance:e("/api/myteam/:employeeId/:action/:id",{employeeId:"@employeeId",id:"@id",action:"@action"},{update:{method:"PUT"}}),myTeamAttendanceBulkActions:e("/api/myteam/attendance/requests/:action",{action:"@action"},{update:{method:"PUT"}}),leaveTypes:e("/api/leaves/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),orgSettings:e("/api/organization/:id/:action",{id:"@id",action:"@action"}),profileChanges:e("/api/myteam/profile/changes/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),getTeamMembers:function(e){return this.myTeam.query({id:e,action:"default"}).$promise},getProjectResources:function(){return this.myTeam.query({action:"projectresource"}).$promise},getProjectResource:function(e){return this.myTeam.get({id:e,action:"projectresource"}).$promise},getPendingTimesheets:function(){return this.myTeam.query({action:"pendingtimesheets"}).$promise},getEmployeePendingTimesheets:function(e){return this.myTeam.query({id:e,action:"pendingtimesheets"}).$promise},getPendingTimesheetSummary:function(){return this.myTeam.query({action:"pendingtimesheetsummary"}).$promise},getEmptyTimesheetPendingSummary:function(){return this.myTeam.query({action:"emptypendingtimesheetsummary"}).$promise},getTimesheetApprovers:function(){return this.myTeam.query({action:"timesheetapprovers"}).$promise},getAllTeamProjects:function(){return this.myTeam.query({action:"projects"}).$promise},getAllProjectClients:function(){return this.myTeam.query({action:"projectclients"}).$promise},getAllProjectTasks:function(){return this.myTeam.query({action:"projecttasks"}).$promise},getAllTimeEntries:function(){return this.myTeam.query({action:"pendingtimeentry"}).$promise},getPendingTimeEntries:function(e){return this.myTeamAttendance.query({id:e,action:"pendingtimeentries"}).$promise},approveWfhRequest:function(e,t){return this.myTeamAttendance.save({action:"approvewfh",employeeId:e,id:t}).$promise},rejectWfhRequest:function(e,t){return this.myTeamAttendance.save({action:"rejectwfh",employeeId:e,id:t}).$promise},approveRemoteClockInRequest:function(e,t){return this.myTeamAttendance.save({action:"approveremoteclockin",employeeId:e,id:t}).$promise},approveAllRemoteClockInRequests:function(e){return this.myTeamAttendanceBulkActions.update({action:"approveremoteclockin/all"},e).$promise},rejectRemoteClockInRequest:function(e,t){return this.myTeamAttendance.save({action:"rejectremoteclockin",employeeId:e,id:t}).$promise},rejectAllRemoteClockInRequests:function(e){return this.myTeamAttendanceBulkActions.update({action:"rejectremoteclockin/all"},e).$promise},approveAdjustmentRequest:function(e,t){return this.myTeamAttendance.save({action:"approveadjustmentrequest",employeeId:e,id:t}).$promise},approveAllAdjustmentRequest:function(e){return this.myTeamAttendanceBulkActions.update({action:"approveadjustmentrequest/all"},e).$promise},rejectAdjustmentRequest:function(e,t){return this.myTeamAttendance.save({action:"rejectadjustmentrequest",employeeId:e,id:t}).$promise},rejectAllAdjustmentRequest:function(e){return this.myTeamAttendanceBulkActions.update({action:"rejectadjustmentrequest/all"},e).$promise},cancleWfhRequest:function(e,t){return this.myTeamAttendance.save({action:"cancelwfh",employeeId:e,id:t}).$promise},approveOnDutyRequest:function(e,t){return this.myTeamAttendance.save({action:"approveonduty",employeeId:e,id:t}).$promise},rejectOnDutyRequest:function(e,t){return this.myTeamAttendance.save({action:"rejectonduty",employeeId:e,id:t}).$promise},cancelOnDutyRequest:function(e,t){return this.myTeamAttendance.save({action:"cancelonduty",employeeId:e,id:t}).$promise},getLeaveStats:function(e){return e.action="leaves/dashboard/data",this.myTeam.get(e).$promise},getLeaveRequest:function(e){return e.action="leaverequest",this.myTeam.get(e).$promise},saveLeaveRequest:function(e,t){return e.action="leaverequest",this.myTeam.save(e,t).$promise},updateLeaveRequest:function(e,t){return e.action="leaverequest",this.myTeam.update(e,t).$promise},getAttendanceRequests:function(e){return this.myTeamAttendance.query({action:"attendancerequests",id:e}).$promise},getTimesheetAttendanceDetails:function(e){return this.myTeamAttendance.query({action:"timesheetattendancedetails",id:e}).$promise},getEmployeeProjects:function(e){return this.myTeam.query({action:"employeeprojects",id:e}).$promise},getProjectTasks:function(e){return this.myTeam.query({id:e,action:"projecttasks"}).$promise},getTimesheetEntries:function(e,t){return this.myTeam.query({fromDate:e,id:t,action:"timesheet"}).$promise},getTimesheetsDue:function(e){return this.myTeam.query({action:"timesheetsdue",id:e}).$promise},getTimesheetsDueCount:function(e){return this.myTeam.get({action:"timesheetsduecount",id:e}).$promise},getTimesheetsRejected:function(e){return this.myTeam.query({action:"timesheetsrejected",id:e}).$promise},getTimesheetsRejectedCount:function(e){return this.myTeam.get({action:"timesheetsrejectedcount",id:e}).$promise},getTimesheet:function(e,t){return this.myTeam.get({fromDate:e,id:t,action:"employeetimesheet"}).$promise},getEmployeeTimeoffData:function(e){return this.myTeam.get({action:"timeOffData",id:e}).$promise},getEmployeeResourceAllocation:function(e){return this.myTeam.query({action:"resourceallocation",id:e}).$promise},getMonthAttendanceSummary:function(e,t){return this.myTeamAttendance.query({action:"summary",employeeId:e,id:t}).$promise},getAttendanceSummary:function(e){return this.myTeamAttendance.query({action:"summary",employeeId:e}).$promise},getTeamStats:function(e){return this.myTeamAttendance.get({action:"mystats",employeeId:e}).$promise},getTrackingPolicy:function(e){return this.myTeamAttendance.get({action:"trackingpolicy",employeeId:e}).$promise},getLeavePlan:function(e){return this.myTeamAttendance.get({action:"leaveplan",employeeId:e}).$promise},saveAttendanceRequest:function(e){return this.myTeamAttendance.save({action:"webclockin"},e).$promise},getAttendancerequests:function(e){return this.myTeamAttendance.query({action:"attendancerequests",employeeId:e}).$promise},getAttendanceCaptureScheme:function(e){return this.myTeamAttendance.get({action:"attendancecapturescheme",employeeId:e}).$promise},getAttendanceDayRequests:function(e){return this.myTeamAttendance.get({action:"attendancedayrequests",employeeId:e}).$promise},saveWFHRequest:function(e,t){return this.myTeamAttendance.save({action:"savewfh",employeeId:e},t).$promise},saveOnDutyRequest:function(e,t){return this.myTeamAttendance.save({action:"saveonduty",employeeId:e},t).$promise},saveAttendanceAdjustmentRequest:function(e,t){return this.myTeamAttendance.save({action:"saveattendanceadjustment",employeeId:e},t).$promise},getTeamJobInfo:function(){return this.myTeam.get({action:"jobinfo"}).$promise},bulkUpdateJobInfo:function(e){return this.myTeam.update({action:"bulkeditjobInfo"},e).$promise},getPendingProfileChangeRequests:function(){return this.profileChanges.get({action:"pending"}).$promise},getPendingProfileChangeRequestsCount:function(){return this.profileChanges.get({action:"pending/count"}).$promise},getPastProfileChangeRequests:function(){return this.profileChanges.get({action:"past"}).$promise},approveProfileChangeRequest:function(e,t){return this.profileChanges.update({action:"approve",id:e},t).$promise},bulkApproveProfileChangeRequests:function(e){return this.profileChanges.update({action:"bulkapprove"},e).$promise},rejectProfileChangeRequest:function(e,t){return this.profileChanges.update({action:"reject",id:e},t).$promise},bulkRejectProfileChangeRequests:function(e){return this.profileChanges.update({action:"bulkreject"},e).$promise},getAllPendingExitRequests:function(){return this.myTeam.get({action:"pendingexitrequests"}).$promise},getManagerCanAssignTimeAssignments:function(){return this.myTeam.get({action:"managerattendancesettings"}).$promise}}}]),appRoot.controller("TeamSummaryController",["$scope","$resource","$state","$q","$location","$routeParams","$filter","AppContext","EmployeeServices","JobTitleServices","MyTeamServices","CustomFieldService","LeaveRequestStatus","NotificationService","MyProfileServices","CommentItemType","LeaveRequestType","LeaveAttendanceService","AppFeatures","AppSettings","$uibModal","FieldPermissionRoles","FieldVisibility",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S,C,w,b){e.vm.pendingLeaveRequests=[],e.vm.compoffRequests=[],e.vm.commentItemType=h,e.vm.today=new Date,e.vm.leaveRequestTypes=f,e.vm.hasAttendanceFeature=s.isFeaturePresent(v.Attendance.title),e.vm.appContext=angular.copy(s),e.vm.filterText="",e.vm.fieldPermissionRoles=w,e.vm.fieldVisibility=b;var P=function(){angular.forEach(e.vm.calender,function(t){t.leaves=e.vm.leaveSummary.filter(function(e){return a("date")(e.debitedOn,"dd/MM/yyyy")==a("date")(t,"dd/MM/yyyy")}),t.leaves=t.leaves.reduce(function(e,t){return t&&!e.find(function(e,i){return e.employeeId==t.employeeId})&&e.push(t),e},[]),t.leaveCount=t.leaves.length,t.isHoliday=e.vm.orgHolidays.find(function(e){return a("date")(e.date,"dd/MM/yyyy")==a("date")(t,"dd/MM/yyyy")}),angular.forEach(t.leaves,function(e){t.employees.push(e.displayName)}),t.employees=t.employees.join(", ")})},T=function(){for(var t=[],i=["S","M","T","W","T","F","S"],n=new Date(e.vm.month.getFullYear(),e.vm.month.getMonth()+1,0).getDate(),o=1;o<=n;o++)t.push(new Date(e.vm.month.getFullYear(),e.vm.month.getMonth(),o));return angular.forEach(t,function(e){e.weekDay=i[e.getDay()],e.leaves=[],e.leaveCount=0,e.employees=[]}),t},D=function(t,i){e.vm.leaveSummary=t,e.vm.orgHolidays=i,e.vm.month=new Date,e.vm.calender=T(),P()},I=function(){"team.summary"==e.state.name?(e.vm.reportingManagerAssigned=!0,n.all([y.profile.get({action:"teamsummary"}).$promise,u.getView(1,"employeeprofile","employeeprofile")]).then(function(t){e.model=t[0],D(t[0].leaveSummary,t[0].holidays),e.vm.reportingManagerAssigned=null!=e.model.myReportingManager,e.vm.customFieldConfig=t[1],function(){e.vm.reportingManagerFieldVisibilityPermissions={};var t=e.vm.fieldPermissionRoles.ReportingManagerAndUp.id;e.vm.customFieldConfig.sections.forEach(function(i){i.fieldGroups.forEach(function(i){i.fields.forEach(function(i){var n=i.fieldPermissions.find(function(e){return e.role==t});e.vm.reportingManagerFieldVisibilityPermissions[i.name.toLowerCase()]=n.visibility!=e.vm.fieldVisibility.Hidden.id})})})}(),function(){e.vm.everyOneFieldVisibilityPermissions={};var t=e.vm.fieldPermissionRoles.EveryOne.id;e.vm.customFieldConfig.sections.forEach(function(i){i.fieldGroups.forEach(function(i){i.fields.forEach(function(i){var n=i.fieldPermissions.find(function(e){return e.role==t});e.vm.everyOneFieldVisibilityPermissions[i.name.toLowerCase()]=n.visibility!=e.vm.fieldVisibility.Hidden.id})})})}()})):"leaveattendance.dashboard"==e.state.name&&g.getLeaveSummarry().then(function(e){D(e.leaveSummary,e.holidays)})};I(),e.getPreviousMonthLeaveSummary=function(){e.vm.month=new Date(e.vm.month.getFullYear(),e.vm.month.getMonth(),0),e.vm.calender=T(),P()},e.getNextMonthLeaveSummary=function(){e.vm.month=new Date(e.vm.month.getFullYear(),e.vm.month.getMonth()+2,0),e.vm.calender=T(),P()},e.approveLeaveRequest=function(e){e.status=d.Approved.id,p.myTeam.update({id:e.id,action:"leaverequest"},e,function(){m.success("Leave request approved successfully."),resetPendingRequests(e.id)},function(e){m.error("An error occurred while approving leave request.")})},e.rejectLeaveRequest=function(e){e.status=d.Rejected.id,p.myTeam.update({id:e.id,action:"leaverequest"},e,function(){m.success("Leave request rejected successfully."),resetPendingRequests(e.id)},function(e){m.error("An error occurred while rejecting leave request.")})},e.openLeaveRequestImport=function(){C.open({templateUrl:"excelImport",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"ImportLeaveRequestController as ctrl"}).result.then(function(e){I()})}}]),appRoot.controller("TeamTimesheetsController",["$scope","$resource","$state","$q","$filter","EmployeeServices","MyTeamServices","MyProfileServices","NotificationService",function(e,t,i,n,o,r,a,s,l){e.$on("$stateChangeSuccess",function(t,n,o,r,a){e.vm.state=i.current})}]),appRoot.controller("TimesheetApprovalController",["$scope","$filter","$uibModal","MyTeamServices","NotificationService","TimesheetStatus",function(e,t,i,n,o,r){e.vm={},e.vm.bulkRejectComment=null,e.vm.timesheetStatus=r;n.getPendingTimesheetSummary().then(function(i){e.vm.timesheetDetails=i,e.vm.timesheetDetailsGroup=t("groupBy")(e.vm.timesheetDetails,"employeeId")}),e.$on("updateTimesheetStatus",function(i,n){var o,r;o=n,r=e.vm.timesheetDetails.map(function(e){return e.id}).indexOf(o.timesheetId),0==o.pendingEntries.length&&(e.vm.timesheetDetails.splice(r,1),e.$emit("timesheetApprovalsCountChanged",{timesheetApprovalCount:e.vm.timesheetDetails.length}),e.vm.timesheetDetailsGroup=t("groupBy")(e.vm.timesheetDetails,"employeeId"))});var a=function(){var i=e.vm.timesheetDetails.filter(function(e){return e.isSelected}).map(function(e){return e.id});e.vm.timesheetDetails=e.vm.timesheetDetails.filter(function(e){return-1==i.indexOf(e.id)}),e.vm.timesheetDetailsGroup=t("groupBy")(e.vm.timesheetDetails,"employeeId"),e.$emit("timesheetApprovalsCountChanged",{timesheetApprovalCount:e.vm.timesheetDetails.length}),e.vm.allSelected=!1,e.toggleAll()};e.approveTimesheets=function(){o.information("Approving selected timesheets");var t=e.vm.timesheetDetails.filter(function(e){return e.isSelected}).map(function(e){return e.id});n.myTeam.update({id:null,action:"approvetimesheets"},t,function(e){o.success("Selected timesheets approved successfully."),a()},function(e){o.error("An error occurred while approving selected timesheets.")})},e.rejectTimesheets=function(){if(e.vm.bulkRejectComment){e.vm.bulkRejectComment=e.vm.bulkRejectComment.replace(/<(?:.|\n)*?>/gm,"").replace("&nbsp;"," ");var t=e.vm.timesheetDetails.filter(function(e){return e.isSelected}).map(function(e){return e.id});o.information("Rejecting selected timesheets"),n.myTeam.update({id:null,action:"rejecttimesheets",rejectComment:e.vm.bulkRejectComment},t,function(t){o.success("Selected timesheets rejected successfully."),a(),e.vm.bulkRejectComment=null},function(e){o.error("An error occurred while rejecting selected timesheets.")})}else o.information("Comment required for rejecting timesheets.")},e.toggleAll=function(){angular.forEach(e.vm.timesheetDetails,function(t){t.isSelected=e.vm.allSelected}),e.vm.anySelected=angular.copy(e.vm.allSelected)},e.timesheetSelected=function(){e.vm.allSelected=e.vm.timesheetDetails.every(function(e){return e.isSelected}),e.vm.anySelected=e.vm.timesheetDetails.some(function(e){return e.isSelected})}}]),appRoot.controller("TeamTimesheetApprovalController",["$scope","$state","$q","profile","SharedModel","$filter","MyTeamServices","NotificationService","$rootScope","$uibModalInstance","LookupServices","OrgSettingServices","AppContext","AppFeatures","TimeEntryStatus","TimesheetStatus","AttendanceHoursType",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f){e.vm={},e.vm.id=t.params.employeeId,e.vm.profile=n,e.vm.weekStartDay=1,e.vm.task={},e.vm.timeEntryStatus=y,e.vm.timesheetStatus=h,e.vm.hasAttendanceFeature=d.isFeaturePresent(m.Attendance.title),e.vm.attendanceHoursType=f;var g=function(t){var i=e.vm.teamProjects.find(function(e){return e.id==t});return i&&i.startDate&&(i.startDate=new Date(i.startDate)),i},v=function(){e.vm.projectResource=new function(e){this.employeeId=null,this.employeeName=null,this.tasks=[],this.timesheets=[],this.currentTimesheetIndex=0,this.order=0},e.vm.projectResource.employeeId=e.vm.resource.id,e.vm.projectResource.employeeName=e.vm.resource.displayName,e.vm.projectResource.weeklyOffs=new Attendance.Model.WeeklyOffPolicy(e.vm.resource.weeklyOff),e.vm.projectResource.orgHolidays=e.vm.resource.orgHolidays,e.vm.projectResource.employeeLeaveRequests=e.vm.resource.employeeLeaveRequests,e.vm.projectResource.timesheets=e.vm.pendingTimesheets,angular.forEach(e.vm.projectResource.timesheets,function(t){t.tasks=[],t.startDate=t.startDate.stringToDate(),t.endDate=t.endDate.stringToDate();var i=e.vm.pendingTimeEntries.filter(function(i){return i.employeeId==e.vm.resource.id&&i.employeeTimesheetId==t.id});angular.forEach(i,function(e){var i=t.tasks.find(function(t){return t.id==e.taskId&&t.sequenceNumber==e.sequenceNumber}),n=r("yyyymmddToDate")(e.date,"ddMMyyyy");if(i)i.timesheetId[n]=e.id,i.startTime[n]=e.startTime,i.endTime[n]=e.endTime,i.timesheetHours[n]=e.totalHours,i.timesheetComments[n]=e.comments,i.approverLogEntry[n]=e.approverLogEntry,i.billingClassificationId||(i.billingClassificationId=e.billingClassificationId),i.selected=!1;else{var o=new function(e){this.id=e.taskId,this.projectDetails=g(e.projectId),this.taskDetails=this.projectDetails.projectTasks.find(function(t){return t.id==e.taskId}),this.nextApproverId=null,this.approverId=e.approverId,this.startTime={},this.endTime={},this.timesheetHours={},this.timesheetComments={},this.approverLogEntry={},this.timesheetId={},this.selected=!1,this.showComments=!1,this.sequenceNumber=null}(e);o.timesheetId[n]=e.id,o.startTime[n]=e.startTime,o.endTime[n]=e.endTime,o.timesheetHours[n]=e.totalHours,o.timesheetComments[n]=e.comments,o.approverLogEntry[n]=e.approverLogEntry,o.nextApproverId=e.nextApproverId,o.sequenceNumber=e.sequenceNumber,o.billingClassificationId||(o.billingClassificationId=e.billingClassificationId),t.tasks.push(o)}})})};i.all([a.getProjectResource(e.vm.id),a.getEmployeePendingTimesheets(e.vm.id),a.getAllTeamProjects(),a.getPendingTimeEntries(e.vm.id),a.getTimesheetApprovers(),p.lookup.query({id:"billingclassifications"}).$promise]).then(function(t){e.vm.resource=t[0],e.vm.pendingTimesheets=t[1],e.vm.teamProjects=t[2],e.vm.pendingTimeEntries=t[3],e.vm.timesheetApprovers=t[4],e.vm.billingClassifications=t[5],e.vm.pendingProjectTimesheetIds=[],e.vm.pendingTimesheets.forEach(function(t){var i=[],n=e.vm.timesheetApprovers.filter(function(e){return e.timesheetId==t.id});n=r("orderBy")(n,"approverLevel",!1),(n=r("unique")(n,"projectId",!1)).forEach(function(e){i.push(e.projectId)});var o={};o.timesheetId=t.id,o.pendingProjectIds=i,e.vm.pendingProjectTimesheetIds.push(o)}),v()}),e.vm.hasAttendanceFeature&&u.organization.get({action:"timesheetgeneralsettings"},function(t){e.vm.timesheetSettings=t,e.vm.timesheetSettings.showAttendanceHours&&a.getTimesheetAttendanceDetails(e.vm.id).then(function(t){e.vm.attendanceSummary=t})}),e.getAttendanceHours=function(t,i){if(e.vm.attendanceSummary){var n=e.vm.attendanceSummary.find(function(e){return e.employeeId==t&&new Date(e.attendanceDate).setHours(0,0,0,0)==i.setHours(0,0,0,0)}),o=n?e.vm.timesheetSettings.attendanceHoursType==e.vm.attendanceHoursType.totalHours.id?n.totalGrossHours:n.totalEffectiveHours:0;return o?r("timeFormatter")(o,"hhmm"):"0:00"}},e.getProjectTasksCount=function(e,t){return e.filter(function(e){return e.projectDetails.id==t}).length},e.showColumn=function(e,t,i,n){return r("groupBy")(e,"projectDetails.id")[t][0].id==n.id},e.getDaySubTotal=function(e,t){var i=0;return angular.forEach(e,function(e){e.timesheetHours[t]&&(i+=e.timesheetHours[t])}),i},e.vm.isTimesheetApproved=function(t,i){var n=!1;return e.vm.pendingProjectTimesheetIds.forEach(function(e){e.timesheetId==i&&(n=0==e.pendingProjectIds.filter(function(e){return e==t}).length)}),n},e.vm.showComments=function(t,i){t.showComments=!t.showComments,i.forEach(function(e){e.id!=t.id&&(e.showComments=!1)}),e.vm.task=t},e.getBillingClassification=function(t){var i=e.vm.billingClassifications?e.vm.billingClassifications.find(function(e){return e.id==t}):null;return null!=i?i.name:"Non-Billable"},e.getWeekType=function(e,t){var i=new Date((new Date).setHours(0,0,0,0));return i>=e&&i<=t?"Current":i<e?"Future":"Past Due"},e.loadWeekdays=function(e){e.weekDays=[];for(var t=new Date(e.startDate);e.weekDays.length<7;){var i=new Date(t),n={key:r("date")(t,"ddMMyyyy"),date:i};e.weekDays.push(n),t.setDate(t.getDate()+1)}},e.vm.checkWeekOffOrHoliday=function(e,t){var i=!t.weeklyOffs.isWorkingDay(e.date),n=t.orgHolidays.find(function(t){return new o.DateWithZeroTime(t.date).equals(new o.DateWithZeroTime(e.date))&&!t.isFloater});if(i||n)return!0},e.vm.checkOnLeave=function(e,t){return!!t.employeeLeaveRequests.find(function(t){return S(t.fromDate,t.toDate,e.date)&&3!=t.status&&4!=t.status})};var S=function(e,t,i){var n=e.stringToDate(),r=t.stringToDate(),a=new o.DateWithZeroTime(i);return a>=n&&a<=r};e.getTasksByProject=function(t){t=function(t){return angular.forEach(t.tasks,function(i,n){var o=e.vm.timesheetApprovers.find(function(n){return n.timesheetId==t.id&&n.projectId==i.projectDetails.id&&n.approverId==e.vm.profile.id}),r=!1;o&&(r=null==e.vm.timesheetApprovers.filter(function(e){return e.timesheetId==t.id&&e.projectId==i.projectDetails.id}).map(function(e){return e.approverLevel}).find(function(e){return e<o.approverLevel})),t.tasks[n].nextApprover=r}),t}(t);var i=r("groupBy")(t.tasks,"projectDetails.clientName"),n=[];return angular.forEach(i,function(e,i){var o=r("groupBy")(e,"projectDetails.id"),a=[];angular.forEach(o,function(e,t){a.push({projectId:t,tasks:e,rowspan:e.length,projectTitle:e[0].projectDetails.name||""})}),n.push({clientName:i,projects:a,timesheetId:t.id,employeeId:t.employeeId,weekDays:t.weekDays,rejectComment:""})}),n},e.getTaskSubTotal=function(e,t){var i=0;if(t)return angular.forEach(e,function(e){t.timesheetHours[e.key]&&(i+=t.timesheetHours[e.key])}),i};var C=function(t,i){var n=[];return angular.forEach(t.weekDays,function(o){angular.forEach(t.projects,function(t){angular.forEach(t.tasks,function(t){if(null!=t.timesheetHours[o.key]&&void 0!=t.timesheetHours[o.key]&&(!i||t.projectDetails.id==i)){var r=new function(){this.id=null,this.projectId=null,this.taskId=null,this.startTime=null,this.endTime=null,this.totalHours=null,this.date=null,this.comments=null,this.note=null,this.approverLogEntry=null,this.sequenceNumber=null};r.id=t.timesheetId[o.key],r.date=(a=o.date,s=60*a.getTimezoneOffset()*1e3,new Date(a.getTime()-s)),r.projectId=t.projectDetails.id,r.taskId=t.id,r.startTime=t.startTime[o.key],r.endTime=t.endTime[o.key],r.totalHours=t.timesheetHours[o.key],r.comments=t.timesheetComments[o.key],r.approverLogEntry=t.approverLogEntry[o.key],r.note=e.vm.note?e.vm.note:null,r.sequenceNumber=t.sequenceNumber,n.push(r)}var a,s})})}),n},w=function(t,i){var n=e.vm.projectResource.timesheets.map(function(e){return e.id}).indexOf(t.timesheetId),o=-1!=n?e.vm.projectResource.timesheets[n].tasks.filter(function(e){return e.nextApprover}):[];return{timesheetId:t.timesheetId,pendingEntries:o}},b=function(t,i){var n=e.vm.projectResource.timesheets.map(function(e){return e.id}).indexOf(t.timesheetId);e.vm.projectResource.timesheets[n].tasks.filter(function(e){return e.projectDetails.id!=i&&e.nextApprover}).length>0?(e.vm.projectResource.timesheets[n].tasks=e.vm.projectResource.timesheets[n].tasks.filter(function(e){return e.projectDetails.id!=i}),e.vm.projectResource.timesheets[n].tasksByGroup=e.getTasksByProject(e.vm.projectResource.timesheets[n])):e.vm.projectResource.timesheets.splice(n,1)};e.approveTask=function(e,t){var i=C(e,t);s.information("Approving Timesheet..."),a.myTeam.update({id:e.employeeId,employeeTimesheetId:e.timesheetId,action:"approvetimeentries"},i,function(i){s.success("Timesheet approved successfully."),b(e,t),l.$broadcast("updateTimesheetStatus",w(e))},function(e){s.error("An error occurred while approving timesheet.")})},e.rejectTask=function(e,t){var i=C(e,t),n=e.timesheetId;s.information("Rejecting Timesheet..."),a.myTeam.update({id:e.employeeId,employeeTimesheetId:n,rejectComment:e.rejectComment,action:"rejecttimeentries"},i,function(i){s.success("Timesheet rejected successfully."),b(e,t),l.$broadcast("updateTimesheetStatus",w(e))},function(e){s.error("An error occurred while rejecting timesheet.")})},e.rejectTimesheetEntry=function(t,i){t.rejectComment?(t.rejectComment=t.rejectComment.replace(/<(?:.|\n)*?>/gm,""),t.rejectComment=t.rejectComment.replace("&nbsp;"," "),e.rejectTask(t,i)):s.information("Comment required.")}}]),appRoot.controller("LeaveApprovalController",["$scope","$resource","$state","$q","$location","$routeParams","$uibModal","AppSettings","EmployeeServices","JobTitleServices","MyTeamServices","MyTeamLeavesServices","LeaveRequestStatus","NotificationService","MyProfileServices","CommentItemType","LeaveRequestType","LeaveAttendanceService","InboxService","SystemLeaveType",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S){e.vm={},e.vm.niceScrollOptions=angular.copy(s.scrollSettings),e.vm.state=i.current,e.vm.currentIndex=0,e.vm.commentItemType=h,e.vm.today=new Date,e.vm.leaveRequestTypes=f,e.vm.systemLeaveType=S,e.vm.approvalInProgress=!1;var C=function(t){var i=0,n=0;return angular.forEach(t,function(t){var o=e.vm.leaveTypes.find(function(e){return e.id==t.leaveTypeId});o&&o.systemLeaveType!=e.vm.systemLeaveType.floater.id?i+=t.count:n+=t.count}),{workingDays:i,floaterDays:n}},w=function(t){var i;if(angular.forEach(t,function(t){var n=null;t.count>0&&(n=e.vm.leaveTypes.find(function(e){return e.id==t.leaveTypeId})?e.vm.leaveTypes.find(function(e){return e.id==t.leaveTypeId}).name:""),n&&(i=i?i+", "+n:n)}),!i){var n=null;angular.forEach(e.vm.systemLeaveType,function(e){angular.forEach(t,function(t){(n=e.id==t.leaveTypeId?e.Name:"")&&(i=i?i+", "+n:n)})})}return i},b=function(t,i,n){e.vm.leaveTypes=t,e.vm.pendingLeaveRequests=[],angular.forEach(i,function(t){e.vm.pendingLeaveRequests.push(new function(e){this.id=e.id,this.employeeId=e.employeeId,this.requestedBy={employeeId:e.employeeId,displayName:e.displayName,profileImageUrl:e.profileImageUrl},this.fromDate=e.fromDate,this.toDate=e.toDate,this.fromSession=e.fromSession,this.toSession=e.toSession,this.days=C(e.selection),this.leaveType=w(e.selection),this.leaveRequestType=e.leaveRequestType,this.selection=e.selection,this.documentProofs=e.documentProofs,this.note=e.note,this.commentIdentifier=e.commentIdentifier,this.reportingTo=e.reportingTo,this.approvers=e.approvers,this.teamCount=e.teamCount,this.isCompOffRequest=!1,this.requestedOn=e.requestedOn,this.totalDays=e.totalDays}(t))}),angular.forEach(n,function(t){e.vm.pendingLeaveRequests.push(new function(e){this.id=e.id,this.employeeId=e.employeeId,this.requestedBy={employeeId:e.employeeId,displayName:e.displayName,profileImageUrl:e.profileImageUrl},this.fromDate=e.fromDate,this.toDate=e.toDate,this.isHalfDay=e.isHalfDay,this.note=e.note,this.commentIdentifier=e.commentIdentifier,this.documentProofs=e.documentProofs,this.reportingTo=e.reportingTo,this.approvers=e.approvers,this.isCompOffRequest=!0,this.requestedOn=e.requestedOn,this.totalDays=e.days}(t))}),e.vm.leaveRequest=e.vm.pendingLeaveRequests[e.vm.currentIndex]},P=function(t){angular.forEach(e.vm.pendingLeaveRequests,function(i,n){i.id===t.id&&i.isCompOffRequest==t.isCompOffRequest&&(e.vm.pendingLeaveRequests.splice(n,1),e.vm.currentIndex=e.vm.currentIndex%e.vm.pendingLeaveRequests.length,e.vm.leaveRequest=e.vm.pendingLeaveRequests[e.vm.currentIndex],e.$emit("leaveApprovalsCountchanged",{leaveApprovalsCount:e.vm.pendingLeaveRequests.length}))})};!function(){if(p.myTeam.get({action:"leaverequests"},function(e){b(e.leaveTypes,e.pendingLeaveRequests,e.pendingCompOffRequests)}),r.id){var t=r.id,i=null;angular.forEach(e.vm.pendingLeaveRequests,function(e){e.id==t&&(i=e)}),"approve"==r.status?e.approveLeaveRequest(i):e.rejectLeaveRequest(i),P(request),o.path("/team/summary")}}(),e.getPreviousRequest=function(){e.vm.currentIndex>0&&(e.vm.currentIndex-=1,e.vm.leaveRequest=e.vm.pendingLeaveRequests[e.vm.currentIndex])},e.getNextRequest=function(){e.vm.currentIndex<e.vm.pendingLeaveRequests.length-1&&(e.vm.currentIndex+=1,e.vm.leaveRequest=e.vm.pendingLeaveRequests[e.vm.currentIndex])},e.approveLeaveRequest=function(t){e.$broadcast("publishComment"),e.vm.approvalInProgress=!0,t.isCompOffRequest?u.approveCompOffRequest(t.employeeId,t.id).then(function(i){i.status?(P(t),m.success("Compensatory Off request approved successfully.")):m.error("An error occurred while approving compensatory off request."),e.vm.approvalInProgress=!1},function(t){e.vm.approvalInProgress=!1,m.error("An error occurred while approving compensatory off request.")}):v.approveLeaveRequest(t.id).then(function(i){m.success("Leave request approved successfully"),P(t),e.vm.approvalInProgress=!1},function(t){e.vm.approvalInProgress=!1,m.error("An error occurred while approving leave request.")})},e.rejectLeaveRequest=function(t){(t.isCompOffRequest||!t.isCompOffRequest&&e.vm.leaveAppovalForm.leaveRequestApprovalTemplate.$valid)&&(e.$broadcast("publishComment"),e.vm.approvalInProgress=!0,t.isCompOffRequest?u.rejectCompOffRequest(t.employeeId,t.id).then(function(i){i.status?(P(t),m.success("Compensatory Off request rejected successfully.")):m.error("An error occurred while rejecting compensatory off request."),e.vm.approvalInProgress=!1},function(t){e.vm.approvalInProgress=!1,m.error("An error occurred while rejecting compensatory off request.")}):v.rejectLeaveRequest(t.id,t.rejectReason).then(function(i){m.success("Leave request rejected successfully"),P(t),e.vm.approvalInProgress=!1},function(t){e.vm.approvalInProgress=!1,m.error("An error occurred while rejecting leave request.")}))},e.respondForLeave=function(t){a.open({scope:e,templateUrl:"dashboard-leave-request-widget",controller:["leaveRequest","CommentItemType",function(e,t){this.leaveRequest=e,this.commentItemType=t}],controllerAs:"vm",resolve:{leaveRequest:function(){return t}}})}}]),appRoot.controller("ClientTimeController",["$scope","TimesheetServices","TimeEntryStatus","FileDownloadService",function(e,t,i,n){e.vm={},e.vm.projectTimeEntries=[],e.vm.timeEntryStatus=i;e.filterProjects=function(t){e.vm.clientProjects=t?e.vm.projects.filter(function(e){return e.parentGroupId==t}):[],e.projectId=null,e.vm.projectTimeEntries=[]},e.getProjectTimeEntries=function(i){i?t.client.query({action:"timeentries",projectId:i,clientId:e.clientId}).$promise.then(function(t){e.vm.projectTimeEntries=t}):e.vm.projectTimeEntries=[]},e.exportProjectTime=function(t){if(e.vm.projectTimeEntries.length>0){var i="/api/client/export/projecttime?name=projecttime&format="+t+"&clientId="+e.clientId+"&projectId="+e.projectId;n.downloadFile(i)}},t.client.query({action:"default"}).$promise.then(function(t){e.vm.clients=t}),t.project.query({action:"managedprojects"}).$promise.then(function(t){e.vm.clientProjects=t,e.vm.projects=angular.copy(t)})}]),appRoot.controller("ProjectTimeController",["$scope","TimesheetServices","TimeEntryStatus","FileDownloadService",function(e,t,i,n){e.vm={},e.vm.projectTimeEntries=[],e.vm.timeEntryStatus=i;e.getProjectTimeEntries=function(i){i?t.project.query({action:"timeentries",projectId:i}).$promise.then(function(t){e.vm.projectTimeEntries=t}):e.vm.projectTimeEntries=[]},e.exportProjectTime=function(t){if(e.vm.projectTimeEntries.length>0){var i="/api/project/export/projecttime?name=projecttime&format="+t+"&projectId="+e.projectId;n.downloadFile(i)}},t.project.query({action:"managedprojects"}).$promise.then(function(t){e.vm.projects=t})}]),appRoot.controller("WeekTimeSummaryController",["$scope","MyTeamServices","TimesheetStatus","FileDownloadService",function(e,t,i,n){e.vm={},e.vm.weekTimeSummary=[],e.vm.timesheetStatus=i,e.weekTimeSubmitted=!1,e.model={};e.setCurrentMonthDates=function(){var t=new Date;e.model.fromDate=new Date(t.getFullYear(),t.getMonth(),1),e.model.toDate=new Date},e.isDateValid=function(t){return new Date(t).setHours(0,0,0,0)<=new Date(e.model.toDate).setHours(0,0,0,0)},e.weekTimeDateChanged=function(){e.weekTimeSubmitted=!1},e.compareDates=function(t){if(!t.$modelValue){var i=e.isDateValid(t.$viewValue);i&&t.$setValidity("dateFormat",i),e.model.fromDate=new Date(t.$viewValue)}},e.getWeekTimeSummary=function(i,n){e.weekTimeSubmitted=!0,i&&n&&i<n?t.myTeam.query({action:"weektimesummary",fromDate:i.dateOnlyString(),toDate:n.dateOnlyString()},function(t){e.vm.weekTimeSummary=t},function(e){NotificationService.error("An error occurred while getting weekly time summary.")}):e.vm.weekTimeSummary=[]},e.exportWeekTime=function(t){if(e.model.fromDate&&e.model.toDate){var i="/api/myteam/export/weektimesummary?name=weektimesummary&format="+t+"&from="+e.model.fromDate.dateOnlyString()+"&to="+e.model.toDate.dateOnlyString();n.downloadFile(i)}},e.setCurrentMonthDates(),e.getWeekTimeSummary(e.model.fromDate,e.model.toDate)}]),function(e){!function(e){var t=function(){function e(e){this.resource=e,this.leaves=this.resource("/api/myteam/leaves/:employeeId/:action/:id",{employeeId:"@employeeId",id:"@id",action:"@action"},{update:{method:"PUT"}}),this.compOffs=this.resource("/api/myteam/compOff/:employeeId/:action/:id",{employeeId:"@employeeId",id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getLeaveStats=function(e){return this.leaves.get({action:"stats",employeeId:e}).$promise},e.prototype.getLeaveRequests=function(e,t){return this.leaves.query({action:"requests",employeeId:e,fromDate:t}).$promise},e.prototype.getCompOffRequests=function(e){return this.leaves.query({action:"compoffrequests",employeeId:e}).$promise},e.prototype.getLeaveRequest=function(e,t){return this.leaves.get({action:"request",id:t,employeeId:e}).$promise},e.prototype.getCalendarEvents=function(e){return this.leaves.get({action:"calendarevents",employeeId:e}).$promise},e.prototype.saveLeaveRequest=function(e,t){return this.leaves.save({action:"request",employeeId:e},t).$promise},e.prototype.updateLeaveRequest=function(e,t,i){return this.leaves.update({action:"request",id:t,employeeId:e},i).$promise},e.prototype.cancelLeaveRequest=function(e,t,i){return this.leaves.update({action:"cancel",id:t,employeeId:e},i).$promise},e.prototype.deleteLeaveRequest=function(e,t){return this.leaves.delete({action:"request",id:t,employeeId:e}).$promise},e.prototype.updateLeaveRequestType=function(e,t,i){return this.leaves.update({action:"requestType",id:t,employeeId:e},i).$promise},e.prototype.updateLeaveRequestDates=function(e,t){return this.leaves.update({action:"requestdates",employeeId:e},t).$promise},e.prototype.approveLeaveRequest=function(e,t){return this.leaves.save({action:"approve",id:t,employeeId:e}).$promise},e.prototype.rejectLeaveRequest=function(e,t,i){return this.leaves.save({action:"reject",id:t,rejectReason:i,employeeId:e},{}).$promise},e.prototype.approveCompOffRequest=function(e,t){return this.compOffs.save({action:"approve",id:t,employeeId:e}).$promise},e.prototype.rejectCompOffRequest=function(e,t){return this.compOffs.save({action:"reject",id:t,employeeId:e}).$promise},e.prototype.cancelCompoffLeaveRequest=function(e,t,i){return this.compOffs.update({action:"cancel",id:t,employeeId:e},i).$promise},e.prototype.deleteCompOffRequest=function(e,t){return this.compOffs.delete({action:"delete",id:t,employeeId:e}).$promise},e.prototype.awardCompoff=function(e,t){return this.compOffs.save({action:"award",employeeId:e},t).$promise},e.prototype.getLeaveTypes=function(){return this.leaves.query({action:"leavetype"}).$promise},e.prototype.getLeaveValidationsForSellectedDate=function(e,t){return this.leaves.save({action:"validation",employeeId:e},t).$promise},e.$inject=["$resource"],e}();e.MyTeamLeavesServices=t,angular.module("leaves").service("MyTeamLeavesServices",t)}(e.Services||(e.Services={}))}(Leaves||(Leaves={})),function(e){!function(e){var t=function(){function e(e){this.resource=e,this.reportees=this.resource("/api/myteam/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.exitResource=this.resource("/api/myteam/:employeeId/exit/:action",{employeeId:"@employeeId",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getReporteeJobDetails=function(e){return this.reportees.get({action:"reportee/jobdetails",id:e}).$promise},e.prototype.getReporteeDetails=function(e){return this.reportees.get({action:"reportee/default",id:e}).$promise},e.prototype.getReporteeLeaveStats=function(e){return this.reportees.get({action:"leaves/stats",id:e}).$promise},e.prototype.getEmployeeModuleStatus=function(e){return this.reportees.query({action:"employeemodulestatus",id:e}).$promise},e.prototype.getMyReportees=function(){return this.reportees.query({action:"default"}).$promise},e.prototype.getExitDetails=function(e){return this.exitResource.get({action:"details",employeeId:e}).$promise},e.prototype.getEmployeeExitInfo=function(e){return this.exitResource.get({action:"info",employeeId:e}).$promise},e.prototype.saveEmployeeExitRequest=function(e,t){return this.exitResource.save({action:"request",employeeId:e},t).$promise},e.prototype.updateEmployeeExitRequest=function(e,t){return this.exitResource.update({action:"request",employeeId:e},t).$promise},e.prototype.cancelEmployeeExitRequest=function(e,t){return this.exitResource.delete({action:"request",employeeId:e,rejectComment:t}).$promise},e.$inject=["$resource"],e}();e.MyTeamEmployeeService=t,angular.module("leaves").service("MyTeamEmployeeService",t)}(e.Services||(e.Services={}))}(MyTeam||(MyTeam={})),function(e){!function(e){var t=function(){function e(e){this.resource=e,this.reportees=this.resource("/api/myteam/finance/:id/:action",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.searchReportees=function(e){return this.reportees.query({action:"searchemployees",searchKey:e}).$promise},e.prototype.getAllEmployeesOnHold=function(){return this.reportees.query({action:"all/reportees/holdSalary"}).$promise},e.prototype.getPendingCycles=function(e){return this.reportees.query({action:"getpendingcycles",count:e}).$promise},e.prototype.getPendingCyclesForEmployee=function(e,t){return this.reportees.query({action:"getpendingcycles",id:e,count:t}).$promise},e.prototype.updateSalaryAction=function(e,t){return this.reportees.save({action:"salaryAction",id:e},t).$promise},e.prototype.saveEmployeeOnHold=function(e,t){return this.reportees.save({action:"holdsalary",id:e},t).$promise},e.$inject=["$resource"],e}();e.MyTeamEmployeeFinanceServices=t,angular.module("leaves").service("MyTeamEmployeeFinanceServices",t)}(e.Services||(e.Services={}))}(MyTeam||(MyTeam={})),function(e){!function(e){!function(e){!function(e){var t=function(){function e(e,t){this.resource=e,this.payrollModel=t,this.expense=this.resource("/api/myteam/expense/:action/:id/:groupId/:employeeId",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.finance=this.resource("/api/myteam/:action/:id/:groupId/:employeeId",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getPendingExpenseClaims=function(e){return this.expense.query({action:"claims/pending",groupId:e}).$promise},e.prototype.getApprovedExpenseClaims=function(e){return this.expense.query({action:"claims/approved",groupId:e}).$promise},e.prototype.getPastExpenseClaims=function(e,t){return this.expense.query({action:"claims/past",fromDate:e,toDate:t}).$promise},e.prototype.getExpenseClaimDetails=function(e,t){return this.expense.get({id:t,action:"claim",employeeId:e}).$promise},e.prototype.approveExpenseClaim=function(e,t){return this.expense.update({action:"approve",id:t.employeeId,claimId:e},t).$promise},e.prototype.bulkApproveClaims=function(e){return this.expense.update({action:"bulkapprove",id:e[0].employeeId},e).$promise},e.prototype.payExpenseClaim=function(e,t){return this.expense.update({action:"pay",id:t.employeeId,claimId:e},t).$promise},e.prototype.rejectExpenseClaim=function(e,t){return this.expense.update({action:"reject",claimId:e.id,id:e.employeeId,rejectReason:t},{}).$promise},e.prototype.bulkRejectClaims=function(e,t){return this.expense.update({action:"bulkreject",id:e[0].employeeId,rejectReason:t},e).$promise},e.prototype.updateExpenseClaim=function(e,t){return this.expense.update({action:"claim",expenseClaimId:t.id},t).$promise},e.prototype.getAllPaygroups=function(){return this.finance.query({action:"paygroups"}).$promise},e.prototype.GetGroupPendingCycles=function(e,t){var i=this;return this.finance.query({action:"finance/getpendingcycles",count:t,groupId:e}).$promise.then(function(e){return e.map(function(e){return new i.payrollModel.PayrollCycle(e)})})},e.prototype.getEmployeePendingCycles=function(e,t){var i=this;return this.finance.query({action:"finance/"+e.id+"/getpendingcycles",count:t}).$promise.then(function(e){return e.map(function(e){return new i.payrollModel.PayrollCycle(e)})})},e.prototype.getExpense=function(e,t){return this.expense.get({action:"employee/"+e+"/bill/",id:t}).$promise},e.prototype.addReceipt=function(e,t){return this.expense.save({action:"employee/"+t+"/bill/receipt"},e).$promise},e.prototype.updateReceipt=function(e,t,i){return this.expense.update({action:"employee/"+e+"/bill/receipt",id:t},i).$promise},e.prototype.deleteReceipt=function(e,t){return this.expense.delete({action:"employee/"+e.employeeId+"/bill/deletereceipt",id:e.id,receiptId:t}).$promise},e.prototype.updateExpenseDetails=function(e,t){return this.expense.update({action:"employee/"+e+"/bill",id:t.id},t).$promise},e.$inject=["$resource","PayrollModel"],e}();e.MyTeamExpenseClaimServices=t,angular.module("payroll").service("MyTeamExpenseClaimServices",t)}(e.Services||(e.Services={}))}(e.ExpenseClaims||(e.ExpenseClaims={}))}(e.Finance||(e.Finance={}))}(payroll||(payroll={})),function(e){!function(t){var i=function(){function e(e,t,i,n,o,r){this._filter=e,this._appSettings=t,this._q=i,this._myTeamEmployeeFinanceServices=n,this._modal=o,this._notificationService=r,this.isNewOnhold=!1,this.getEmployeesOnHold()}return e.prototype.getEmployeesOnHold=function(){var e=this;this._myTeamEmployeeFinanceServices.getAllEmployeesOnHold().then(function(t){e.employeesOnHold=t,e.setOnHoldView()})},e.prototype.setOnHoldView=function(){var e=this;this.employeesOnHoldView=[],this.employeesOnHold=this._filter("orderBy")(this.employeesOnHold,["employeeId"]),this.employeesOnHold.forEach(function(t){var i=e.employeesOnHoldView.length-1;if(e.employeesOnHoldView.length>0&&e.employeesOnHoldView[i].employeeId==t.employeeId)e.employeesOnHoldView[i].onholdsCount+=1,e.employeesOnHoldView[i].totalAmountToPay+=t.totalAmountToPay,e.employeesOnHoldView[i].onholds.push(t);else{var n={};n.employeeId=t.employeeId,n.onholdsCount=1,n.employeeName=t.employeeName,n.totalAmountToPay=t.totalAmountToPay,n.onholds=[],n.employeeNumber=t.employeeNumber,n.onholds.push(t),e.employeesOnHoldView.push(n)}})},e.prototype.searchEmployees=function(e){if(e&&e.length>=2){var t=this._q.defer();return this._myTeamEmployeeFinanceServices.searchReportees(e).then(function(e){0==e.length&&e.push({noResults:!0}),t.resolve(e)}),t.promise}},e.prototype.onHoldEmployeeSalary=function(){var e=this;this.employee.id?this.getpendingCycles(this.employee.id,1).then(function(t){var i=t[0];e.employeesOnHold.some(function(t){return t.employeeId==e.employee.id&&t.month==i.month&&t.year==i.year})?e._notificationService.error(e.employee.displayName+" salary for "+i.monthNameYear+" is already onhold."):e._modal.open({templateUrl:"addEmployeeOnHold",backdrop:"static",keyboard:!1,windowClass:"structure-compare small-btn",controller:"HoldReporteeSalaryController as ctrl",resolve:{firstPendingCycle:function(){return i},forEmployee:function(){return e.employee}}}).result.then(function(){e.getEmployeesOnHold(),e.resetSearchForEmployeeToHold()},e.resetSearchForEmployeeToHold)},function(t){e._notificationService.error("Error occured")}):this.employee=null},e.prototype.resetSearchForEmployeeToHold=function(){this.isNewOnhold=!1,this.employee=null},e.prototype.actionOnSalaryOnHold=function(e,t){var i=this;this.getpendingCycles(t.employeeId,1).then(function(n){i._modal.open({templateUrl:"action-onSalaryOnHold",backdrop:"static",keyboard:!1,windowClass:"structure-compare small-btn",controller:"ReporteeSalaryActionController as ctrl",resolve:{pendingCycles:function(){return n},onHoldSalary:function(){return t},payAction:function(){return e}}}).result.then(function(){i.getEmployeesOnHold()})},function(e){i._notificationService.error("Error occured")})},e.prototype.getpendingCycles=function(e,t){return this._myTeamEmployeeFinanceServices.getPendingCyclesForEmployee(e,t)},e.$inject=["$filter","AppSettings","$q","MyTeamEmployeeFinanceServices","$uibModal","NotificationService"],e}();t.TeamSalariesOnholdController=i;var n=function(){function t(t,i,n,o,r){this.forEmployee=i,this.notificationService=n,this.modalInstance=o,this._myTeamEmployeeFinanceServices=r,this.onHoldRequest=new e.SalariesOnHold.Models.SalaryOnHoldRequest,this.onHoldRequest.onHoldInCycle=t}return t.prototype.saveOnHoldRequest=function(){var e=this;this.form.holdsalary.$valid&&(this.disableSubmitButton=!0,this._myTeamEmployeeFinanceServices.saveEmployeeOnHold(this.forEmployee.id,this.onHoldRequest).then(function(t){t&&e.notificationService.success("Salary OnHold added successfully."),e.modalInstance.close()},function(t){e.notificationService.error(t.data.message||"Error occurred while saving hold request."),e.modalInstance.close()}))},t.$inject=["firstPendingCycle","forEmployee","NotificationService","$uibModalInstance","MyTeamEmployeeFinanceServices"],t}();t.HoldReporteeSalaryController=n;var o=function(){function t(t,i,n,o,r,a){this.pendingCycles=t,this.onHoldSalary=i,this.notificationService=o,this.modalInstance=r,this._myTeamEmployeeFinanceServices=a,this.actionRequest=new e.SalariesOnHold.Models.SalaryAcitonRequest,this.actionRequest.onHoldInCycle=i.since,this.actionRequest.action=n,this.actionRequest.releasedInCycle=this.pendingCycles[0],this.modalTitle=1==n?"Void":"Release"}return t.prototype.updateSalaryAction=function(){var e=this;this.form.actionSalary.$valid&&(this.disableSubmitButton=!0,this._myTeamEmployeeFinanceServices.updateSalaryAction(this.onHoldSalary.employeeId,this.actionRequest).then(function(t){t&&e.notificationService.success("Updated salary action successfully."),e.modalInstance.close()},function(t){e.notificationService.error(t.data.message||"Error occurred while updating salary action."),e.modalInstance.close()}))},t.$inject=["pendingCycles","onHoldSalary","payAction","NotificationService","$uibModalInstance","MyTeamEmployeeFinanceServices"],t}();t.ReporteeSalaryActionController=o,angular.module("xhr").controller("TeamSalariesOnholdController",i).controller("HoldReporteeSalaryController",n).controller("ReporteeSalaryActionController",o)}(e.SalariesOnHold||(e.SalariesOnHold={}))}(MyTeam||(MyTeam={})),function(e){!function(e){!function(e){var t=function(){function e(){}return e.prototype.toJSON=function(){return{reason:this.reason,onHoldInCycle:this.onHoldInCycle.to}},e}();e.SalaryOnHoldRequest=t;var i=function(){function e(){}return e.prototype.toJSON=function(){return{reason:this.reason,releasedInCycle:this.releasedInCycle.to,action:this.action,onHoldInCycle:this.onHoldInCycle}},e}();e.SalaryAcitonRequest=i}(e.Models||(e.Models={}))}(e.SalariesOnHold||(e.SalariesOnHold={}))}(MyTeam||(MyTeam={}));var Timesheet;__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(t){var i=function(e){function t(t,i,n,o){var r=e.call(this,t,i)||this;return r._state=i,r.appSettings=n,r.myTeamGoalsService=o,r}return __extends(t,e),Object.defineProperty(t.prototype,"currentState",{get:function(){return this._state.current.name},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parentState",{get:function(){return this._state.current.parentState},enumerable:!0,configurable:!0}),t.$inject=["$scope","$state","AppSettings","MyTeamGoalsService"],t}(e.StateChangeHandleController);t.MyTeamPeformanceController=i;var n=function(){function t(e,t,i,n,o,r,a,s,l,c){var p=this;this._q=e,this._state=t,this._cookies=i,this.appContext=n,this.appSettings=o,this.myTeamEmployeeService=r,this.myTeamGoalsService=a,this.notificationService=s,this.pmsSettings=l,this.dateServices=c,this.selectedEmployee={},this.viewNames=["gridview","listview"],this.cookieName="my-team-goals-view-name",this.allEmployees=[],this.setStartAndEndDates=function(){var e=new Date;e.setDate(1),p.startDate=angular.copy(e),p.endDate=angular.copy(e),p.startDate.setMonth(p.startDate.getMonth()-1),p.endDate.setMonth(e.getMonth()+1),p.endDate.setDate(p.endDate.getDate()-1)},this.setView=function(e){p.selectedView=e,p._cookies.put(p.cookieName,e)},this.setStartAndEndDates(),this.myTeamEmployeeService.getMyReportees().then(function(e){var t;p.employees=e,p.allEmployees.push({id:0,displayName:"All Team "+p.pmsSettings.goalSettings.goalAliasPlural}),(t=p.allEmployees).push.apply(t,p.employees);var i=p.employees[0];null!=i&&p.getEmployeeGoals(i)});var u=this._cookies.get(this.cookieName);this.selectedView=u||this.viewNames[0]}return Object.defineProperty(t.prototype,"parentState",{get:function(){return this._state.current.parentState},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"selectedEmployeeId",{get:function(){return this.selectedEmployee?this.selectedEmployee.id:0},set:function(e){this.selectedEmployee=this.allEmployees.filter(function(t){return t.id==e})[0]},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"startDateString",{get:function(){return this.startDate?this.dateServices.dateOnlyString(this.startDate):null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"endDateString",{get:function(){return this.endDate?this.dateServices.dateOnlyString(this.endDate):null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"goalEmployee",{get:function(){return this.selectedEmployee.id?this.selectedEmployee:null},enumerable:!0,configurable:!0}),t.prototype.getGoals=function(){this.selectedEmployee.id==this.allEmployees[0].id?this.getAllTeamMemberGoals():this.getEmployeeGoals(this.selectedEmployee)},t.prototype.getAllTeamMemberGoals=function(){var t=this;this.selectedEmployee=angular.copy(this.allEmployees[0]),this.startDate&&this.endDate&&this.myTeamGoalsService.getAllReporteeGoals(this.startDateString,this.endDateString).then(function(i){t.goals=i.map(function(t){return new e.Model.GoalListItem(t)})})},t.prototype.getEmployeeGoals=function(t){var i=this;t&&t.id&&this.startDate&&this.endDate?(this.selectedEmployee=angular.copy(t),this.myTeamGoalsService.getEmployeeGoals(t.id,this.startDateString,this.endDateString).then(function(t){i.goals=t.map(function(t){return new e.Model.GoalListItem(t)})},function(e){i.notificationService.error("An error occured while fetching employee goals")})):this.getAllTeamMemberGoals()},t.$inject=["$q","$state","$cookies","AppContext","AppSettings","MyTeamEmployeeService","MyTeamGoalsService","NotificationService","PMSSettings","DateServices"],t}();t.MyTeamGoalsController=n;var o=function(){function e(e){var t=this;this._scope=e,this._scope.$on("$stateChangeSuccess",function(e,i,n,o,r){t.currentState=o.name,t.currentStateParams=r})}return e.$inject=["$scope"],e}();t.MyTeamMeetingDetailsStateController=o}(e.Controllers||(e.Controllers={}))}(PMS||(PMS={})),angular.module("PMS").controller("MyTeamPeformanceController",PMS.Controllers.MyTeamPeformanceController).controller("MyTeamGoalsController",PMS.Controllers.MyTeamGoalsController).controller("MyTeamMeetingDetailsStateController",PMS.Controllers.MyTeamMeetingDetailsStateController),function(e){!function(e){var t=function(){function e(e){this.resource=e,this.myTeamPerformance=this.resource("/api/myteam/performance/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getMyReportees=function(){return this.myTeamPerformance.query({action:"reportees"}).$promise},e.prototype.getGlobalRatingScale=function(){return this.myTeamPerformance.get({action:"globalratingscale"}).$promise},e.$inject=["$resource"],e}();e.MyTeamPerformanceService=t;var i=function(){function e(e){var t=this;this.resource=e,this.teamPerformance=this.resource("/api/myteam/performance/goal/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.getEmployeesBasicInfo=function(){return t.teamPerformance.query({action:"teamemployeesbasicinfo"}).$promise},this.saveGoal=function(e){return t.teamPerformance.save({action:"goal"},e).$promise},this.updateGoal=function(e,i){return t.teamPerformance.update({action:"goal",id:e},i).$promise},this.getGoal=function(e){return t.teamPerformance.get({action:"goal",id:e}).$promise},this.getGoalTemplates=function(){return t.teamPerformance.query({action:"goaltemplates"}).$promise},this.getGoalTemplateViewModel=function(e){return t.teamPerformance.get({action:"goaltemplateviewmodel",id:e}).$promise},this.checkInGoal=function(e,i){return t.teamPerformance.update({action:"goalcheckin",id:e},i).$promise},this.getDepartments=function(){return t.teamPerformance.query({action:"departments"}).$promise},this.getBusinessUnits=function(){return t.teamPerformance.query({action:"businessunits"}).$promise},this.markGoalAsComplete=function(e){return t.teamPerformance.update({action:"markcomplete",id:e},null).$promise},this.markGoalAsIncomplete=function(e){return t.teamPerformance.update({action:"markincomplete",id:e},null).$promise},this.deleteGoal=function(e){return t.teamPerformance.update({action:"deletegoal",id:e},null).$promise},this.getGoalCategories=function(){return t.teamPerformance.query({action:"categories"}).$promise},this.getGroupsAssignedToGoal=function(e){return t.teamPerformance.query({action:"groupsassignedto",id:e}).$promise},this.getKeyResults=function(e){return t.teamPerformance.query({action:"keyresults",id:e}).$promise},this.cloneGoals=function(e,i){return t.teamPerformance.update({action:"clone",id:e},i).$promise},this.closeGoalsInBulk=function(e){return t.teamPerformance.save({action:"bulk/close"},e).$promise},this.reopenGoalsInBulk=function(e){return t.teamPerformance.save({action:"bulk/reopen"},e).$promise}}return e.prototype.getEmployeeGoals=function(e,t,i){return this.teamPerformance.query({action:"employeegoals",id:e,startDate:t,endDate:i}).$promise},e.prototype.getAllReporteeGoals=function(e,t){return this.teamPerformance.query({action:"reporteegoals",startDate:e,endDate:t}).$promise},e.prototype.getAllCompetencies=function(){return this.teamPerformance.query({action:"competency/all"}).$promise},e.prototype.getGoalsToAssign=function(){return this.teamPerformance.query({action:"goalstoassign"}).$promise},e.prototype.assignGoalsToEmployees=function(e){return this.teamPerformance.save({action:"assigngoals"},e).$promise},e.$inject=["$resource"],e}();e.MyTeamGoalsService=i;var n=function(){function e(e){var t=this;this.resource=e,this.myTeamEmployee=this.resource("/api/myteam/performance/employee/:id/:action/:skillid",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.getEmployeeProfile=function(e){return t.myTeamEmployee.get({action:"pmsprofile",id:e}).$promise},this.getEmployeeTalentDetails=function(e){return t.myTeamEmployee.get({action:"performance/details",id:e}).$promise},this.getEmployeeActiveGoals=function(e){return t.myTeamEmployee.query({action:"activegoals",id:e}).$promise},this.getAllCompetenciesList=function(e){return t.myTeamEmployee.query({action:"competencies",id:e}).$promise}}return e.prototype.getCompetencyBehaviours=function(e,t){return this.myTeamEmployee.query({action:"competency/behaviour",id:t,skillid:e}).$promise},e.$inject=["$resource"],e}();e.MyTeamEmployeePerformanceService=n;var o=function(){function e(e){var t=this;this.resource=e,this.teamReviews=this.resource("/api/myteam/performance/review/:action/:id/:stepIdentifier/:employeeId",{id:"@id",action:"@action",stepIdentifier:"@stepIdentifier",employeeId:"@employeeId"},{update:{method:"PUT"}}),this.teamMeeting=this.resource("/api/myteam/performance/review/:employeeId/:action/:cycleId",{employeeId:"@employeeId",action:"@action",cycleId:"@cycleId"},{update:{method:"PUT"}}),this.getCurrentReviews=function(e){return t.teamReviews.query({action:"currentreviews",reviewerType:e}).$promise},this.getPastReviews=function(e){return t.teamReviews.query({action:"pastreviews",reviewerType:e}).$promise},this.getEmployeeSubordinatePastReviewsCount=function(){return t.teamReviews.get({action:"subordinates/pastreviews/count"}).$promise},this.getEmployeeSubordinateCurrentReviewsCount=function(){return t.teamReviews.get({action:"subordinates/currentreviews/count"}).$promise},this.getReviewerAverageRatings=function(e){return t.teamReviews.query({action:"reviewers/averagerating",reviewIds:e}).$promise},this.getEmployeesNeedMyReview=function(){return t.teamReviews.query({action:"pendingmyreview"}).$promise}}return e.$inject=["$resource"],e}();e.MyTeamReviewService=o;var r=function(){function e(e){var t=this;this.resource=e,this.teamEmployeeReview=this.resource("/api/myteam/performance/employee/:employeeId/review/:cycleId/:reviewId/:action/:stepIdentifier",{employeeId:"@employeeId",cycleId:"@cycleId",reviewId:"@reviewId",action:"@action",stepIdentifier:"@stepIdentifier"},{update:{method:"PUT"}}),this.teamMeeting=this.resource("/api/myteam/performance/employee/:employeeId/review/:cycleId/:action",{employeeId:"@employeeId",cycleId:"@cycleId",action:"@action"},{update:{method:"PUT"}}),this.getEmployeeReviewSummary=function(e,i,n){return t.teamEmployeeReview.get({action:"pastreviewsummary",employeeId:e,cycleId:i,reviewerType:n}).$promise},this.getNominationConfigurationDetails=function(e,i){return t.teamEmployeeReview.get({action:"nominationconfigurationdetails",employeeId:i,cycleId:e}).$promise},this.getNominationRequestDetails=function(e,i){return t.teamEmployeeReview.get({action:"nominationrequests",employeeId:i,cycleId:e}).$promise},this.saveNominationRequests=function(e,i,n){return t.teamEmployeeReview.save({action:"nominationrequests",employeeId:e,cycleId:i},n).$promise},this.approveNominationRequests=function(e,i,n){return t.teamEmployeeReview.save({action:"approvenominations",employeeId:e,cycleId:i},n).$promise},this.getReviewMeetingParticipants=function(e,i){return t.teamEmployeeReview.query({action:"meetingparticipants",employeeId:i,cycleId:e}).$promise},this.saveReviewMeeting=function(e,i,n){return t.teamMeeting.save({action:"reviewmeeting",employeeId:i,cycleId:e},n).$promise},this.draftReviewMeeting=function(e,i,n){return t.teamMeeting.save({action:"reviewmeeting/draft",employeeId:i,cycleId:e},n).$promise},this.getOngoingMeetingSummary=function(e,i){return t.teamEmployeeReview.get({action:"ongoingmeetingsummary",employeeId:i,cycleId:e}).$promise},this.getEmployeeProfile=function(e){return t.teamEmployeeReview.get({action:"pmsprofile",employeeId:e}).$promise}}return e.prototype.getReviewMeetingSummary=function(e,t,i){return this.teamEmployeeReview.get({action:"meeting",employeeId:e,reviewId:t,stepIdentifier:i}).$promise},e.prototype.getPastReviewSummary=function(e,t,i){return this.teamEmployeeReview.get({action:"pastreview/summary",employeeId:e,cycleId:t,reviewerType:i}).$promise},e.prototype.getPastNominationsSummary=function(e,t,i){return this.teamEmployeeReview.get({action:"pastnominationssummary",employeeId:e,cycleId:t,reviewerType:i}).$promise},e.prototype.draftReviewRatingTransactions=function(e,t,i){return this.teamEmployeeReview.save({action:"reviewrating/draft",employeeId:i,cycleId:e},t).$promise},e.prototype.saveReviewRatingTransactions=function(e,t,i){return this.teamEmployeeReview.save({action:"reviewrating",employeeId:i,reviewId:e},t).$promise},e.prototype.sendReminders=function(e,t){return this.teamEmployeeReview.update({action:"remind",employeeId:e,reviewId:t}).$promise},e.$inject=["$resource"],e}();e.MyTeamEmployeeReviewService=r;var a=function(){function e(e){var t=this;this.resource=e,this.teamFeedback=this.resource("/api/myteam/feedback/:action/:id/",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.getFeedbackSetting=function(){return t.teamFeedback.get({action:"feedbacksettings"}).$promise},this.saveFeedbackSetting=function(e){return t.teamFeedback.save({action:"savefeedbacksettings"},e).$promise},this.getTeamFeedback=function(){return t.teamFeedback.query({action:"feedback"}).$promise},this.getRoles=function(){return t.teamFeedback.query({action:"feedbackroles"}).$promise},this.saveFeedback=function(e){return t.teamFeedback.save({action:"savefeedback"},e).$promise},this.getFeedbacks=function(e){return t.teamFeedback.query({action:"teamemployee/feedback",id:e}).$promise},this.getEmployeeActiveFeedback=function(e){return t.teamFeedback.query({action:"teamemployee/activefeedback",id:e}).$promise},this.getEmployeeProfile=function(e){return t.teamFeedback.get({action:"pmsprofile",id:e}).$promise}}return e.prototype.getCoreValuesAndCompetencies=function(){return this.teamFeedback.get({action:"corevaluesandcompetencies"}).$promise},e.$inject=["$resource"],e}();e.MyTeamFeedbackService=a}(e.Services||(e.Services={}))}(PMS||(PMS={})),angular.module("PMS").service("MyTeamPerformanceService",PMS.Services.MyTeamPerformanceService).service("MyTeamGoalsService",PMS.Services.MyTeamGoalsService).service("MyTeamEmployeePerformanceService",PMS.Services.MyTeamEmployeePerformanceService).service("MyTeamReviewService",PMS.Services.MyTeamReviewService).service("MyTeamEmployeeReviewService",PMS.Services.MyTeamEmployeeReviewService).service("MyTeamFeedbackService",PMS.Services.MyTeamFeedbackService),appRoot.controller("TimesheetController",["$scope","$state","$q","$rootScope","$location","AppContext",function(e,t,i,n,o,r){e.vm={},e.$on("$stateChangeSuccess",function(i,n,o,r,a){e.vm.state=t.current});e.vm.publicProfile=r.myPublicProfile}]),appRoot.factory("TimesheetServices",["$resource","$q","$routeParams",function(e,t,i){return{client:e("/api/client/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),project:e("/api/project/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),billing:e("/api/billing/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),timesheets:e("/api/timesheet/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),orgSettings:e("/api/organization/:action/:id",{id:"@id",action:"@action"}),timesheetReports:e("/api/timesheet/reports/:action/:id",{id:"@id",action:"@action"}),getTimesheetReports:function(e){return this.timesheetReports.query({fromDate:e,action:"employeetimesheets"}).$promise},getTimesheetsWithRunningTimer:function(){return this.timesheetReports.query({action:"runningtimers"}).$promise},getTimesheetReportsBetween:function(e,t){return this.timesheetReports.query({fromDate:e,toDate:t,action:"employeetimesheetstatus"}).$promise},getTimesheetEntries:function(e,t){return this.timesheetReports.query({fromDate:e,toDate:t,action:"employeetimeentries"}).$promise},getDayTimesheetEntries:function(e){return this.timesheetReports.query({date:e,action:"employeedaytimeentries"}).$promise},getAllManagers:function(){return this.timesheetReports.query({action:"allprojectmanagers"}).$promise},getTaskWorkHours:function(e,t){return this.timesheetReports.query({fromDate:e,toDate:t,action:"taskworkhours"}).$promise},getResourceWorkHours:function(e,t){return this.timesheetReports.query({fromDate:e,toDate:t,action:"resourceworkhours"}).$promise},getAllEmployees:function(){return this.timesheetReports.query({action:"allemployees"}).$promise},getTimesheetsStatusReport:function(e,t){return this.timesheetReports.query({fromDate:e,toDate:t,action:"timesheetstatus"}).$promise},getClientContact:function(e){return this.client.get({id:e,action:"clientcontact"}).$promise},getClientContacts:function(e){return this.client.query({id:e,action:"clientContacts"}).$promise},getManagedProjects:function(){return this.project.query({action:"managedprojects"}).$promise},getClientCount:function(){return this.project.get({action:"clientcount"}).$promise},getProjectImportValidations:function(){return this.timesheets.get({action:"import/validateprojects"}).$promise},getImportedProjects:function(){return this.timesheets.query({action:"import/previewprojects"}).$promise},importExcelProjects:function(){return this.timesheets.save({action:"import/projects"}).$promise},getProjectTaskImportValidations:function(){return this.timesheets.get({action:"import/validateprojecttasks"}).$promise},getImportedProjectTasks:function(){return this.timesheets.query({action:"import/previewprojecttasks"}).$promise},importExcelProjectTasks:function(){return this.timesheets.save({action:"import/projecttasks"}).$promise},getProjectResourceImportValidations:function(){return this.timesheets.get({action:"import/validateprojectresources"}).$promise},getRepositoryTasksImportValidations:function(){return this.timesheets.get({action:"import/validaterepositorytask"}).$promise},getImportedProjectResources:function(){return this.timesheets.query({action:"import/previewprojectresources"}).$promise},getImportedRepositoryTasks:function(){return this.timesheets.query({action:"import/previewrepositorytasks"}).$promise},importExcelProjectResources:function(){return this.timesheets.save({action:"import/projectresources"}).$promise},importExcelRepositoryTasks:function(){return this.timesheets.save({action:"import/repositorytasks"}).$promise},getPendingTimesheetSummary:function(){return this.timesheets.query({action:"pendingtimesheetsummary"}).$promise},getEmptyTimesheetPendingSummary:function(){return this.timesheets.query({action:"emptypendingtimesheetsummary"}).$promise},getProjectResource:function(e){return this.timesheets.get({id:e,action:"projectresource"}).$promise},getEmployeePendingTimesheets:function(e){return this.timesheets.query({id:e,action:"pendingtimesheets"}).$promise},getAllTeamProjects:function(){return this.timesheets.query({action:"timesheetprojects"}).$promise},getPendingTimeEntries:function(e){return this.timesheets.query({id:e,action:"pendingtimeentries"}).$promise},getTimesheetAttendanceDetails:function(e){return this.timesheets.query({action:"timesheetattendancedetails",id:e}).$promise}}}]),appRoot.controller("TimesheetReportController",["$scope","$state","$q","$rootScope","$location",function(e,t,i,n,o){e.vm={},e.vm.state=t.current,e.$on("$stateChangeSuccess",function(i,n,o,r,a){e.vm.state=t.current})}]),appRoot.controller("TimesheetSummaryController",["$scope","$q","TimesheetServices","AppSettings","AppContext","$filter",function(e,t,i,n,o,r){e.vm={},e.vm.showClientResources=!0,e.vm.showMonthlyHours=!0;var a=0,s=0,l=0,c=["#90CC6D","#E3D850","#FFB272","#FF7C7C","#C888FD","#2EB059","#555555","#483D8B","#2F4F4F","#4F4F2F","#008B8B"],p=angular.copy(n.donutChartOptions);p.donutRatio=.4,p.growOnHover=!1;e.chartOptions=angular.copy(n.multiBarChartOptions);getSummary=function(){var e=t.defer();return o.isBillingManager?i.billing.get({action:"summary"},function(t){e.resolve(t)}):i.timesheets.get({action:"summary"},function(t){e.resolve(t)}),e.promise};getSummary().then(function(t){e.vm.timesheetSummary=t,angular.forEach(e.vm.timesheetSummary.workHoursSummary,function(e,t){a+=e.totalHours,e.color=null!=c[t]?c[t]:"#"+("000000"+((1<<24)*Math.random()|0).toString(16)).slice(-6)}),angular.forEach(e.vm.timesheetSummary.clientResources,function(e,t){l+=e.resources,e.color=null!=c[t]?c[t]:"#"+("000000"+((1<<24)*Math.random()|0).toString(16)).slice(-6)}),angular.forEach(e.vm.timesheetSummary.projectResources,function(e,t){s+=e.resources,e.color=null!=c[t]?c[t]:"#"+("000000"+((1<<24)*Math.random()|0).toString(16)).slice(-6)}),e.vm.isBillingManager=o.isBillingManager,e.vm.workHoursDonutChart={chart:p},e.vm.workHoursDonutChart.chart.height=200,e.vm.billingClassifications=[],a>0?e.vm.timesheetSummary.workHoursSummary.forEach(function(t){var i=Math.round(t.totalHours/a*100);e.vm.billingClassifications.push({key:t.name+" - "+t.totalHours,y:i,color:t.color})}):e.vm.billingClassifications.push({key:"0 hours",y:100,color:"#8B8970"}),e.vm.clientResourcesDonutChart={chart:p},e.vm.clientResourcesDonutChart.chart.height=383,e.vm.clients=[],l>0?e.vm.timesheetSummary.clientResources.forEach(function(t){var i=Math.round(t.resources/l*100);e.vm.clients.push({key:t.clientName+" - "+t.resources,y:i,color:t.color})}):e.vm.clients.push({key:"0 resources",y:100,color:"#8B8970"}),e.vm.projectResourcesDonutChart={chart:p},e.vm.projectResourcesDonutChart.chart.height=383,e.vm.projects=[],s>0?e.vm.timesheetSummary.projectResources.forEach(function(t){var i=Math.round(t.resources/s*100);e.vm.projects.push({key:t.name+" - "+t.resources,y:i,color:t.color})}):e.vm.projects.push({key:"0 resources",y:100,color:"#8B8970"}),e.vm.weeklyHours=function(){for(var t=[],i=[],n=0;n<e.vm.timesheetSummary.weeklyHoursSummary.length;n++){var o=e.vm.timesheetSummary.weeklyHoursSummary[n],a=r("date")(o.fromDate,"dd MMM");(o.billableHours&&0!=o.billableHours||o.nonBillableHours&&0!=o.nonBillableHours)&&(t.push({x:a,y:o.billableHours?o.billableHours:0}),i.push({x:a,y:o.nonBillableHours?o.nonBillableHours:0}))}return[{key:"Billable",color:"#009bce",values:t},{key:"Non-Billable",color:"#95cfec",values:i}]},e.vm.monthlyHours=function(){for(var t=[],i=[],n=0;n<e.vm.timesheetSummary.monthlyHoursSummary.length;n++){var o=e.vm.timesheetSummary.monthlyHoursSummary[n],r=o.monthName.substr(0,3);t.push({x:r,y:o.billableHours?o.billableHours:0}),i.push({x:r,y:o.nonBillableHours?o.nonBillableHours:0})}return[{key:"Billable",color:"#32a751",values:t},{key:"Non-Billable",color:"#9dd5ac",values:i}]}})}]),function(e){!function(t){var i=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d){var m=this;this._q=t,this._location=i,this._state=n,this._stateParams=o,this._modal=r,this._timeout=a,this.timesheetServices=s,this.notificationService=l,this.ClientDetails=c,this.employeeServices=p,this.appSettings=u,this.utilityService=d,this.model=new e.Model.Client,this.newClient={},this.originalModel=new e.Model.Client,this.submitted=!1,this.wizard={steps:[new SharedModel.Step(1,"CREATE CLIENT","createclient","clientInfo",!1,!1),new SharedModel.Step(2,"BILLING RATES","billingrates","billingInfo",!1,!1)]},this.loadCurrencies=function(){m.appSettings.currencies?(m.currencies=angular.copy(m.appSettings.currencies),angular.forEach(m.currencies,function(e){e.name=e.code+" - "+e.name})):m._timeout(m.loadCurrencies,200)},this.initializeGridSettings=function(){m.billingRoleGridOptions=angular.copy(m.appSettings.gridSettings),m.billingRoleGridOptions.columnDefs=[{field:"name",enableSorting:!1,displayName:"BILLING ROLE",cellTemplate:'<div class="ui-grid-cell-contents"><input type="text" ng-model="row.entity.name" class="form-control billing-role" data-ng-focus="grid.appScope.addRow(row.entity)"></div>',cellClass:"ui-grid-cell"},{field:"hourlyRate",enableSorting:!1,displayName:"HOURLY RATE",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.appScope.selectedCurrency">{{grid.appScope.selectedCurrency.code}}</span><input type="number" class="form-control billing-rate" ng-model="row.entity.hourlyRate" data-ng-focus="grid.appScope.addRow(row.entity)" data-ng-class="{\'invalid-input-field\' : grid.appScope.isNumber(row.entity.hourlyRate), \'currency-selected\': grid.appScope.selectedCurrency }"></div>',cellClass:"ui-grid-cell"},{field:"weeklyRate",enableSorting:!1,displayName:"WEEKLY RATE",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.appScope.selectedCurrency">{{grid.appScope.selectedCurrency.code}}</span><input type="number" class="form-control billing-rate" ng-model="row.entity.weeklyRate" data-ng-focus="grid.appScope.addRow(row.entity)" data-ng-class="{\'invalid-input-field\' : grid.appScope.isNumber(row.entity.weeklyRate), \'currency-selected\': grid.appScope.selectedCurrency }"></div>',cellClass:"ui-grid-cell"},{field:"monthlyRate",enableSorting:!1,displayName:"MONTHLY RATE ",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.appScope.selectedCurrency">{{grid.appScope.selectedCurrency.code}}</span><input type="number" class="form-control billing-rate" ng-model="row.entity.monthlyRate" data-ng-focus="grid.appScope.addRow(row.entity)" data-ng-class="{ \'invalid-input-field\' : grid.appScope.isNumber(row.entity.monthlyRate), \'currency-selected\': grid.appScope.selectedCurrency }"></div>',cellClass:"ui-grid-cell"}],m.billingRoleGridOptions.rowHeight=60,m.billingRoleGridOptions.appScopeProvider=m,m.billingRoleGridOptions.data=m.billingRoles},this.gotoStep=function(e){var t=m.wizard.steps.find(function(t){return t.index==e-1});(null==t||t.valid)&&(m.currentStep=m.wizard.steps.find(function(t){return t.index==e}))},this.setClientManagerId=function(){m.model.accountManagerId=m.newClient.clientManager.id},this.setAccountManagerId=function(){m.model.accountManagerId=m.accountManager.id},this.addRow=function(t){t.isLastRow&&(t.isLastRow=!1,m.billingRoles.push(new e.Model.BillingRole))},this.saveClientDetails=function(){m._q.all([m.doesNameExist(m.model.name),m.doesCodeExist(m.model.code)]).then(function(e){e[0]&&e[1]&&m.form.newClient.$valid?m.model.id?m.timesheetServices.client.update({id:m.model.id,action:"default"},m.model,function(e){m.originalModel=angular.copy(m.model),m.gotoStep(m.currentStep.index+1),m.notificationService.success("Client updated Successfully.")},function(e){m.notificationService.error("Error in updating client.")}):m.timesheetServices.client.save({action:"default"},m.model,function(e){e.id>0?(m.submitted=!1,m.model.id=e.id,m.originalModel=angular.copy(m.model),m.currentStep.valid=!0,m.gotoStep(m.currentStep.index+1),m.notificationService.success("Client added Successfully.")):m.notificationService.success("Client with same name already exists")},function(e){m.notificationService.error("Error in adding client.")}):m.submitted=!0})},this.saveBillingRateDetails=function(){if(m.form.clientBilling.$valid)if(null==m.billingRoles.find(function(e){return null!=e.hourlyRate&&isNaN(e.hourlyRate)||null!=e.weeklyRate&&isNaN(e.weeklyRate)||null!=e.weeklyRate&&isNaN(e.monthlyRate)})){m.billingRoles=m.billingRoles.filter(function(e){return null!=e.name||null!=e.hourlyRate||null!=e.monthlyRate||null!=e.weeklyRate});var t=new e.Model.BillingInfo(m.selectedCurrency.id,JSON.stringify(m.billingRoles));m.timesheetServices.client.update({id:m.model.id,action:"clientbillinginfo"},t,function(e){m._location.path("/timesheet/client/details/"+m.model.id+"/summary"),m.notificationService.success("Client Billing Information added Successfully.")},function(e){m.notificationService.error("An error occurred while adding client billing information.")})}else m.notificationService.error("Please enter valid billing role data.");else m.selectedCurrency?m.notificationService.error("Please enter valid billing role data."):m.notificationService.error("Please select a currency")},this.updateClient=function(){m._q.all([m.doesNameExist(m.model.name),m.doesCodeExist(m.model.code)]).then(function(e){e[0]&&e[1]&&m.form.clientEdit.$valid?m.timesheetServices.client.update({id:m.model.id,action:"default"},m.model,function(e){m._modal.close(m.model),m.notificationService.success("Client updated Successfully.")},function(e){m.notificationService.error("Error in updating client.")}):m.submitted=!0})},this.cancel=function(){m._modal.close()},this.doesCodeExist=function(e){var t=m._q.defer();return!e||m.originalModel&&m.originalModel.code==e?t.resolve(!0):m.timesheetServices.client.get({action:"doesclientcodeexist",code:e.toString()},function(e){e.result?t.resolve(!1):t.resolve(!0)}),t.promise},this.doesNameExist=function(e){var t=m._q.defer();return!e||m.originalModel&&m.originalModel.name==e?t.resolve(!0):m.timesheetServices.client.get({action:"doesclientnameexist",name:e.toString()},function(e){e.result?t.resolve(!1):t.resolve(!0)}),t.promise},this.isNumber=function(e){return!!e&&isNaN(e)},c?(this.model=Object.assign(this.model,c),this.originalModel=angular.copy(this.model),this.model.accountManagerId&&this.employeeServices.publicProfile.get({id:this.model.accountManagerId,action:"searchemployee"},function(e){m.accountManager=e.id?e:null,m.model.accountManagerId=e.id})):(this.model=new e.Model.Client,this.billingRoles=new Array,this.billingRoles.push(new e.Model.BillingRole)),this.modelOptions=u.modelBlurSettings,this.currentStep=this.wizard.steps[0],this.loadCurrencies(),this.initializeGridSettings()}return t.$inject=["$q","$location","$state","$stateParams","$uibModalInstance","$timeout","TimesheetServices","NotificationService","ClientDetails","EmployeeServices","AppSettings","Utils"],t}();t.CreateClientController=i;var n=function(){function e(e,t,i,n,o){var r=this;this._filter=e,this.timesheetServices=t,this.notificationService=i,this.appSettings=n,this.dialogs=o,this.clients=[],this.initializeGridSettings=function(){r.clientGridOptions=angular.copy(r.appSettings.gridSettings),r.clientGridOptions.columnDefs=[{field:"name",displayName:"NAME",cellTemplate:'<div class="ui-grid-cell-contents"><span><a href="/old/#/timesheet/client/details/{{row.entity.id}}/summary">{{grid.getCellValue(row,col)}}</a></span></div>',cellClass:"ui-grid-cell"},{field:"accountManager",displayName:"CLIENT MANAGER",cellClass:"ui-grid-cell"},{field:"code",displayName:"Code",cellClass:"ui-grid-cell"},{field:"billingCurrency",displayName:"Billing Currency",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.getCellValue(row,col)}}</div>',cellClass:"ui-grid-cell"},{name:"Actions",displayName:"ACTIONS",cellClass:"ui-grid-cell cell-tooltip",cellTemplate:'<div class="ui-grid-cell-options ui-grid-cell-contents"><span class="clearfix"><ul class="action-items list-inline"><li class="list-item"><a class="list-link" data-ng-click="grid.appScope.deleteClient(row.entity.id);"><span class="icon-remove3" uib-tooltip="Delete" tooltip-placement="right"></span></a></li></ul></span></div>'}],r.clientGridOptions.rowHeight=50,r.clientGridOptions.data=r.clients,r.clientGridOptions.appScopeProvider=r},this.deleteClient=function(e){r.dialogs.confirm("Please Confirm","Do you want to delete this client").result.then(function(){r.notificationService.information("Deleting client"),r.timesheetServices.client.delete({action:"default",id:e},function(t){t.isDeleted?(r.clients=r.clients.filter(function(t){return t.id!=e}),r.clientGridOptions.data=r.clients,r.notificationService.success("Client deleted successfully")):r.notificationService.information("Client cannot be deleted because it is associated with projects.")},function(e){r.notificationService.error("Error in deleting client")})})},this.refreshData=function(){r.clientGridOptions.data=r._filter("filter")(r.clients,r.filterText,!1)},this.timesheetServices.client.query({action:"default"},function(e){r.clients=e,r.initializeGridSettings()})}return e.$inject=["$filter","TimesheetServices","NotificationService","AppSettings","dialogs"],e}();t.ClientsListController=n;var o=function(){function e(e,t,i){var n=this;this._state=e,this.timesheetServices=t,this.notificationService=i,this.clients=[],this.timesheetServices.client.query({action:"default"},function(e){n.clients=e},function(e){n.notificationService("Failed to get clients data.")})}return e.$inject=["$state","TimesheetServices","NotificationService"],e}();t.ClientLeftNavController=o;var r=function(){function e(e,t,i,n,o,r,a){var s=this;this._stateParams=e,this._state=t,this._modal=i,this._timeout=n,this.timesheetServices=o,this.employeeProfileService=r,this.appSettings=a,this.loadClientData=function(){s.clients&&s.clients.length>0&&s.appSettings.currencies?(s.client=s.clients.find(function(e){return s.id==e.id}),s.client.accountManagerId&&s.loadAccountManager(s.client.accountManagerId),s.loadCurrencies()):s._timeout(s.loadClientData,200)},this.loadCurrencies=function(){s.appSettings.currencies?(s.currencies=angular.copy(s.appSettings.currencies),s.currency=s.currencies.find(function(e){return e.id==s.client.billingCurrencyId})):s._timeout(s.loadCurrencies,500)},this.loadAccountManager=function(e){s.employeeProfileService.getEmployeeProfile(e).then(function(e){s.accountManager=e.id?e:null})},this.editClient=function(){s._modal.open({templateUrl:"editClient",controller:"CreateClientController",controllerAs:"ctrl",resolve:{ClientDetails:function(){return angular.copy(s.client)}}}).result.then(function(e){if(e){var t=s.currency?s.currency.id:0,i=s.clients.indexOf(s.client);s.client=e,s.clients[i]=s.client,s.loadAccountManager(s.client.accountManagerId),s.currency=s.currencies.find(function(e){return e.id==s.client.billingCurrencyId}),"timesheet.client.details.ratecard"==s._state.current.name&&t!=s.currency.id&&s._state.reload()}})},this.id=this._stateParams.id,this.loadClientData()}return e.$inject=["$stateParams","$state","$uibModal","$timeout","TimesheetServices","EmployeeProfileService","AppSettings"],e}();t.ClientDetailsController=r;var a=function(){function e(e,t,i,n,o,r){var a=this;this._stateParams=e,this._timeout=t,this.months=i,this.timesheetServices=n,this.appSettings=o,this.notificationService=r,this.currentView="month",this.dataYears=new Array,this.getChartData=function(e){var t;return a.statistics.clientStatistics.forEach(function(i){i.month==e&&i.year==a.selectedYear&&(t=i)}),t},this.changeStatastics=function(e){a.selectedYear=e,a.billingData(),a.revenueData(),null!=a.billableChartApi&&null!=a.revenueChartApi&&(a.billableChartApi.refresh(),a.revenueChartApi.refresh())},this.billingData=function(){for(var e=[],t=[],i=0;i<a.months.length;i++){var n=a.getChartData(i+1);e.push({x:a.months[i].name,y:n?n.billinghours:0}),t.push({x:a.months[i].name,y:n?n.nonbillinghours:0})}return[{key:"Billable",color:"#009bce",values:e},{key:"Non-Billable",color:"#95cfec",values:t}]},this.revenueData=function(){for(var e=[],t=0;t<a.months.length;t++){var i=a.getChartData(t+1);e.push({x:a.months[t].name,y:i?i.billing:0})}return[{key:"PAID",color:"#32a751",values:e}]},this.loadCurrency=function(e){a.appSettings.currencies?a.currency=a.appSettings.currencies.find(function(t){return t.id==e.currencyId}):a._timeout(function(){a.loadCurrency(e)},500)},this.id=this._stateParams.id,this.id&&this.loadClientStatistics(),this.chartOptions=angular.copy(this.appSettings.multiBarChartOptions),this.chartOptions.chart.height=250,this.chartOptions.chart.width=400}return e.prototype.loadClientStatistics=function(){var e=this;this.timesheetServices.client.get({id:this.id,action:"clientstatistics"},function(t){e.statistics=t,e.loadCurrency(t),e.statistics.clientStatistics.forEach(function(t){e.dataYears.indexOf(t.year)<0&&e.dataYears.push(t.year)}),e.selectedYear=e.dataYears?e.dataYears[0]:0},function(t){e.notificationService.error("Error while loading client statistics.")})},e.$inject=["$stateParams","$timeout","Months","TimesheetServices","AppSettings","NotificationService"],e}();t.ClientSummaryController=a;var s=function(){function e(e,t,i,n,o,r){var a=this;this._stateParams=e,this.appSettings=t,this.appContext=i,this.timesheetServices=n,this.projectStatus=o,this.billingType=r,this.initializeGridSettings=function(){a.clientProjectOptions=angular.copy(a.appSettings.gridSettings),a.clientProjectOptions.columnDefs=[{field:"name",displayName:"PROJECT NAME",cellTemplate:'<div class="ui-grid-cell-contents"><span><a href="/old/#/timesheet/project/{{row.entity.id}}/summary">{{grid.getCellValue(row,col)}}</a></span></div>',cellClass:"ui-grid-cell",sort:{direction:"asc"}},{field:"status",displayName:"STATUS",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.projectStatus.getById(grid.getCellValue(row,col)).title}}</span></div>',cellClass:"ui-grid-cell"},{field:"billingType",displayName:"BILLING",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{ grid.appScope.billingType.getById(grid.getCellValue(row,col)).title }}</span></div>',cellClass:"ui-grid-cell"},{field:"startDate",displayName:"START DATE",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{ grid.getCellValue(row,col) | date:'mediumDate'}}</span></div>",cellClass:"ui-grid-cell"}],a.clientProjectOptions.rowHeight=50,a.clientProjectOptions.data=a.clientProjects,a.clientProjectOptions.appScopeProvider=a},this.publicProfile=this.appContext.myPublicProfile,this.id=this._stateParams.id,this.timesheetServices.client.query({id:this.id,action:"clientproject"},function(e){a.clientProjects=e,a.initializeGridSettings()},function(e){})}return e.$inject=["$stateParams","AppSettings","AppContext","TimesheetServices","ProjectStatus","BillingType"],e}();t.ClientProjectsController=s;var l=function(){function t(t,i,n,o,r,a){var s=this;this._stateParams=t,this._modal=i,this._timeout=n,this.appSettings=o,this.timesheetServices=r,this.notificationService=a,this.initializeGridSettings=function(){s.clientBillingRoleOptions=angular.copy(s.appSettings.gridSettings),s.clientBillingRoleOptions.columnDefs=[{field:"name",displayName:"Billing Role",cellTemplate:'<div class="ui-grid-cell-contents"><input data-ng-if="row.entity.isEditable" type="text" ng-model="row.entity.name" placeholder="Name" class="form-control billing-role" data-ng-focus="grid.appScope.addRow(row.entity)" data-ng-class="{\'invalid-input-field\' : row.entity.isSubmitted && ! row.entity.name.length }"><span data-ng-if="!row.entity.isEditable">{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell"},{field:"hourlyRate",enableSorting:!1,displayName:"HOURLY RATE",cellTemplate:'<div class="ui-grid-cell-contents"><input data-ng-if="row.entity.isEditable" type="text" class="form-control billing-rate" ng-model="row.entity.hourlyRate" data-ng-focus="grid.appScope.addRow(row.entity)" data-ng-class="{\'invalid-input-field\' : row.entity.isSubmitted && !grid.appScope.isNumber(row.entity.hourlyRate, row.entity.id), \'currency-selected\': grid.appScope.currency.code }"><span data-ng-if="!row.entity.isEditable"><span>{{grid.getCellValue(row,col)}}</span><span ng-if="grid.getCellValue(row,col)==null">0</span></span><span> {{grid.appScope.currency.code}}</span></div>',cellClass:"ui-grid-cell"},{field:"weeklyRate",enableSorting:!1,displayName:"WEEKLY RATE",cellTemplate:'<div class="ui-grid-cell-contents"><input data-ng-if="row.entity.isEditable" type="text" class="form-control billing-rate" ng-model="row.entity.weeklyRate" data-ng-focus="grid.appScope.addRow(row.entity)" data-ng-class="{\'invalid-input-field\' : row.entity.isSubmitted && !grid.appScope.isNumber(row.entity.weeklyRate, row.entity.id), \'currency-selected\': grid.appScope.currency.code }"><span data-ng-if="!row.entity.isEditable"><span>{{grid.getCellValue(row,col)}} </span><span ng-if="grid.getCellValue(row,col) == null">0</span></span><span> {{grid.appScope.currency.code}}</span></div>',cellClass:"ui-grid-cell"},{field:"monthlyRate",enableSorting:!1,displayName:"MONTHLY RATE ",cellTemplate:'<div class="ui-grid-cell-contents"><input data-ng-if="row.entity.isEditable" type="text" class="form-control billing-rate" ng-model="row.entity.monthlyRate" data-ng-focus="grid.appScope.addRow(row.entity)" data-ng-class="{\'invalid-input-field\' : row.entity.isSubmitted && !grid.appScope.isNumber(row.entity.monthlyRate, row.entity.id), \'currency-selected\': grid.appScope.currency.code }"><span data-ng-if="!row.entity.isEditable"><span>{{grid.getCellValue(row,col)}} </span><span ng-if="grid.getCellValue(row,col) == null">0</span></span><span> {{grid.appScope.currency.code}}</span></div>',cellClass:"ui-grid-cell"},{name:"Actions",displayName:"ACTIONS",enableSorting:!1,cellClass:"ui-grid-cell cell-tooltip",cellTemplate:'<div class="ui-grid-cell-options ui-grid-cell-contents"><span class="clearfix"><ul class="action-items list-inline"><li class="list-item" data-ng-if="!row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.editBillingRole(row.entity);"><span class="icon-pencil5" uib-tooltip="Edit" tooltip-placement="left"></span></a></li><li class="list-item" data-ng-if="!row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.deleteBillingRole(row.entity);"><span class="icon-remove3" uib-tooltip="Delete" tooltip-placement="right"></span></a></li><li class="list-item" data-ng-if="row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.saveBillingRole(row.entity)"><span class="icon-checkmark-circle" uib-tooltip="Save" tooltip-placement="left"></span></a></li><li class="list-item" data-ng-if="row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.cancelEdit(row.entity)"><span class="icon-cancel-circle" uib-tooltip="cancel" tooltip-placement="right"></span></a></li></ul></span></div>'}],s.clientBillingRoleOptions.data=s.clientBillingRoles,s.clientBillingRoleOptions.rowHeight=60,s.clientBillingRoleOptions.appScopeProvider=s},this.loadCurrency=function(e){s.appSettings.currencies&&e?null!=s.client.billingCurrencyId&&(s.currency=s.appSettings.currencies.find(function(t){return t.id==e.billingCurrencyId})):s._timeout(function(){s.loadCurrency(s.client)},500)},this.loadBillingRoles=function(){s.timesheetServices.client.query({id:s.id,action:"clientbillingroles"},function(t){s.clientBillingRoles=t,s.initializeGridSettings(),s.clientBillingRoles.push(new e.Model.BillingRole)})},this.addRow=function(t){t.isLastRow&&(t.isLastRow=!1,s.clientBillingRoles.push(new e.Model.BillingRole))},this.editBillingRole=function(e){s.activeBillingRole=angular.copy(e),e.isEditable=!0,e.isSubmitted=!1},this.cancelEdit=function(t){var i=s.clientBillingRoles.indexOf(t);t.id?(t=angular.copy(s.activeBillingRole),s.clientBillingRoles.splice(i,1,t)):(s.clientBillingRoles.splice(i,1),t.isLastRow&&s.clientBillingRoles.push(new e.Model.BillingRole))},this.saveBillingRole=function(e){(e.isSubmitted=!0,e.name&&e.name.length>0)?!isNaN(e.hourlyRate?e.hourlyRate:"null")&&(!isNaN(e.monthlyRate?e.monthlyRate:"null")&&!isNaN(e.weeklyRate?e.weeklyRate:"null"))?(s.notificationService.information("Saving Billing role.."),s.timesheetServices.client[e.id?"update":"save"]({id:s.id,action:"clientbillingrole"},e,function(t){e.id?s.notificationService.success("Billing role updated successfully"):(e.id=t.id,s.notificationService.success("Billing role added successfully")),e.isEditable=!1},function(e){s.notificationService.error("Error in saving billing role.")})):s.notificationService.error("Please enter valid billing rates information."):s.notificationService.error("Please fill required fields.")},this.deleteBillingRole=function(e){s.notificationService.information("Deleting billing role.."),s.timesheetServices.client.delete({action:"clientbillingrole",id:e.id},function(t){t.isDeleted?(s.notificationService.success("Billing role deleted successfully"),angular.copy(s.clientBillingRoles.filter(function(t){return t.id!=e.id}),s.clientBillingRoles)):s.notificationService.information("Billing role cannot be deleted because it is associated with project resource.")},function(e){s.notificationService.error("Error in deleting billing role")})},this.isNumber=function(e){return!!e&&(!isNaN(e)&&e>=0)},this.id=this._stateParams.id,this.loadBillingRoles(),this.loadCurrency(this.client)}return t.$inject=["$stateParams","$uibModal","$timeout","AppSettings","TimesheetServices","NotificationService"],t}();t.ClientBillingRolesController=l;var c=function(){function t(t,i,n,o){var r=this;this._stateParams=t,this.appSettings=i,this.timesheetServices=n,this.notificationService=o,this.clientContacts=[],this.initializeGridSettings=function(){r.gridOptions=angular.copy(r.appSettings.gridSettings),r.gridOptions.columnDefs=[{field:"name",displayName:"NAME",cellTemplate:'<div class="ui-grid-cell-contents"><input data-ng-if="row.entity.isEditable" type="text" ng-model="row.entity.name" placeholder="Name" class="form-control" data-ng-focus="grid.appScope.addRow(row.entity)" data-ng-class="{\'invalid-input-field\' : row.entity.isSubmitted && ! row.entity.name.length }"><span data-ng-if="!row.entity.isEditable" title="{{grid.getCellValue(row,col)}}" class="cellToolTip">{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell"},{field:"email",displayName:"EMAIL",cellTemplate:'<div class="ui-grid-cell-contents"><input data-ng-if="row.entity.isEditable" type="text" ng-model="row.entity.email" placeholder="Email" class="form-control" data-ng-focus="grid.appScope.addRow(row.entity)"><span data-ng-if="!row.entity.isEditable">{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell"},{field:"phone",displayName:"PHONE",cellTemplate:'<div class="ui-grid-cell-contents"><input data-ng-if="row.entity.isEditable" type="text" ng-model="row.entity.phone" placeholder="Phone" class="form-control" data-ng-focus="grid.appScope.addRow(row.entity)"><span data-ng-if="!row.entity.isEditable">{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell"},{name:"Actions",displayName:"ACTIONS",enableSorting:!1,cellClass:"ui-grid-cell cell-tooltip",cellTemplate:'<div class="ui-grid-cell-options ui-grid-cell-contents"><span class="plan-edit clearfix"><ul class="action-items"><li class="list-item" data-ng-if="!row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.editContatct(row.entity)"><span class="icon-pencil5" uib-tooltip="Edit" tooltip-placement="left"></span></a></li><li class="list-item" data-ng-if="!row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.deleteClientContact(row.entity);"><span class="icon-remove3" uib-tooltip="Delete" tooltip-placement="right"></span></a></li><li class="list-item" data-ng-if="row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.saveContact(row.entity)"><span class="icon-checkmark-circle" uib-tooltip="Save" tooltip-placement="left"></span></a></li><li class="list-item" data-ng-if="row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.cancelEdit(row.entity)"><span class="icon-cancel-circle" uib-tooltip="cancel" tooltip-placement="right"></span></a></li></ul></span></div>'}],r.gridOptions.data=r.clientContacts,r.gridOptions.rowHeight=60,r.gridOptions.appScopeProvider=r},this.addRow=function(t){t.isLastRow&&(t.isLastRow=!1,r.clientContacts.push(new e.Model.ClientContact))},this.saveContact=function(e){e.isSubmitted=!0,e.name.length>0?(r.notificationService.information("Saving Client Contact.."),r.timesheetServices.client[e.id?"update":"save"]({id:r.id,action:"clientcontact"},e,function(t){e.id?(r.clientContacts=r.clientContacts.filter(function(t){return t.id!=e.id}),r.notificationService.success("Contact updated successfully")):(e.id=t.id,r.notificationService.success("Contact Added successfully")),e.isEditable=!1},function(e){r.notificationService.error("Error in saving Contact.")})):r.notificationService.error("Please Fill required fields")},this.editContatct=function(e){r.activeContact=angular.copy(e),e.isEditable=!0,e.isSubmitted=!1},this.cancelEdit=function(e){var t=r.clientContacts.indexOf(e);e.id?(e=angular.copy(r.activeContact),r.clientContacts.splice(t,1,e)):e.isLastRow||r.clientContacts.splice(t,1)},this.deleteClientContact=function(e){r.notificationService.information("Deleting client contact.."),r.timesheetServices.client.delete({action:"clientcontact",id:e.id},function(t){r.notificationService.success("Client contact deleted successfully"),angular.copy(r.clientContacts.filter(function(t){return t.id!=e.id}),r.clientContacts)},function(e){r.notificationService.error("Error in deleting the contact")})},this.id=this._stateParams.id,this.timesheetServices.client.query({id:this.id,action:"clientcontacts"},function(t){t.push(new e.Model.ClientContact),angular.copy(t,r.clientContacts)}),this.initializeGridSettings()}return t.$inject=["$stateParams","AppSettings","TimesheetServices","NotificationService"],t}();t.ClientContactsController=c,angular.module("xhr").controller("ClientsListController",n).controller("CreateClientController",i),angular.module("xhr").component("clientLeftNav",{templateUrl:"/client/leftnav",controller:o,controllerAs:"ctrl"}).component("clientDetails",{templateUrl:"/client/details",controller:r,controllerAs:"ctrl",bindings:{clients:"="}}).component("clientRatecard",{templateUrl:"/client/ratecard",controller:l,controllerAs:"ctrl",bindings:{client:"=",editClient:"&"}}).component("clientSummary",{templateUrl:"/client/summary",controller:a,controllerAs:"ctrl"}).component("clientProjects",{templateUrl:"/client/projects",controller:s,controllerAs:"ctrl"}).component("clientContacts",{templateUrl:"/client/contacts",controller:c,controllerAs:"ctrl"})}(e.Controllers||(e.Controllers={}))}(Timesheet||(Timesheet={})),function(e){!function(t){var i=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y,h){var f=this;this._state=t,this._q=i,this._filter=n,this._location=o,this._stateParams=r,this._rootScope=a,this._timeout=s,this._modal=l,this.appSettings=c,this.appContext=p,this.sharedModel=u,this.projectStatus=d,this.timesheetServices=m,this.notificationService=y,this.utilityService=h,this.gotoStep=function(e){var t=f.wizardSteps.find(function(t){return t.index==e-1});(!t||t&&t.valid)&&(4==e&&f.id&&f.goBack(),f.currentStep=f.wizardSteps.find(function(t){return t.index==e}))},this.goBack=function(){f.clientId?window.history.back():f._state.go(f._state.current.parentState,{})},this.saveProjectDetails=function(){f.projectForm[f.formName].$setSubmitted(),f._q.all([f.doesNameExist(f.project.name),f.doesCodeExist(f.project.code)]).then(function(e){e[0]&&e[1]&&f.projectForm[f.formName].$valid?(f.project.parentGroupId=f.client.id,f.project.enableTimer=f.project.trackTimeForTask&&f.project.enableTimer,f.project.accountManagerId=f.client.accountManagerId,f.wizardSteps.find(function(e){return e.index==f.currentStep.index}).valid=!0,f.gotoStep(f.currentStep.index+1)):e[0]?e[1]||f.notificationService.information("A project with same code already exists."):f.notificationService.information("A project with same name already exists in the selected client.")})},this.updateProject=function(){f._q.all([f.doesNameExist(f.project.name),f.doesCodeExist(f.project.code)]).then(function(e){if(e[0]&&e[1]&&f.projectForm.projectEdit.$valid){f.notificationService.information("Updating the project details"),f.project.parentGroupId=f.client.id,f.project.enableTimer=f.project.trackTimeForTask&&f.project.enableTimer,f.project.assignedToAll&&(f.project.billingType=0,f.project.isBillable=!1);var t=angular.copy(f.project);t.startDate=f._filter("date")(t.startDate,"yyyy-MM-dd"),t.endDate=f._filter("date")(t.endDate,"yyyy-MM-dd"),f.timesheetServices.project.update({action:"default",id:f.project.id},t,function(e){f.project.startDate=null==t.startDate?null:t.startDate.stringToDate(),f.project.endDate=null==t.endDate?null:t.endDate.stringToDate(),f.notificationService.information("Project details updated successfully"),f._modal.close(f.project)},function(e){f.notificationService.error("Error in updating the project details")})}})},this.cancel=function(){f.project=angular.copy(f.originalProject),f._modal.close()},this.doesCodeExist=function(e){var t=f._q.defer();return!e||f.id&&e==f.originalProject.code?t.resolve(!0):f.timesheetServices.project.get({action:"doesprojectcodeexist",code:e.toString()},function(e){t.resolve(!e.result)}),t.promise},this.doesNameExist=function(e){var t=f._q.defer();return!(e&&f.client&&f.client.id>0)||f.id&&e==f.originalProject.name?(f.isNameExists=!1,t.resolve(!0)):f.timesheetServices.project.get({action:"doesprojectnameexist",name:e.toString(),clientId:f.client.id},function(e){f.isNameExists=e.result,f.projectForm[f.formName].name.$valid=!e.result,t.resolve(!e.result)}),t.promise},this.saveBillingDetails=function(){f.projectForm.billing.$valid&&(f.wizardSteps.find(function(e){return e.index==f.currentStep.index}).valid=!0,f.gotoStep(f.currentStep.index+1))},this.timesheetSettingUpdated=function(){f.project.assignedToAll&&f.project.isBillable&&(f.project.assignedToAll=!1,f.notificationService.information("This project is billable. Please change the billable type before assigning this project to all the employees."))},this.saveTimesheetDetails=function(){if(f.project.assignedToAll&&f.project.isBillable)f.project.assignedToAll=!1,f.notificationService.information("This project is billable. Please change the billable type before assigning this project to all the employees.");else{f.wizardSteps.find(function(e){return e.index==f.currentStep.index}).valid=!0;var e=f.project.id?{id:f.project.id,action:"default"}:{action:"default"},t=f.timesheetServices.project;f.notificationService.information("Saving project details");var i=angular.copy(f.project);i.startDate=f._filter("date")(i.startDate,"yyyy-MM-dd"),i.endDate=f._filter("date")(i.endDate,"yyyy-MM-dd"),t[f.project.id?"update":"save"](e,i,function(e){f.project.id||0!=e.id?(f.project.id&&f.id?f.gotoStep(f.currentStep.index+1):(f.project.id=e.id,f.gotoStep(f.currentStep.index+1)),f.notificationService.success("Project saved successfully.")):f.notificationService.success("Project with same name already exists in the selected client.")},function(e){f.notificationService.error("Error in saving project.")})}},this.id=this._stateParams.id,this.clientId=this._stateParams.clientId,this.publicProfile=this.appContext.myPublicProfile,this.project=new e.Model.Project,this.wizardSteps=[new SharedModel.Step(1,"Create Project","createproject","projectInfo",!1),new SharedModel.Step(2,"Billing Settings","billing","projectBilling",!1),new SharedModel.Step(3,"Timesheet Settings","timesheet","timesheetSettings",!1),new SharedModel.Step(4,"Project Managers","managers","projectManagers",!1)],this.id?(this.wizardSteps.splice(this.wizardSteps.length-1,1),this.formName="projectEdit"):this.formName="createProject",this.currentStep=this.wizardSteps[0],this.niceScrollOptions=angular.copy(this.appSettings.scrollSettings),this.modelOptions=this.appSettings.modelBlurSettings,this.timesheetServices.client.query({action:"default"},function(e){f.clients=f._filter("orderBy")(e,"name",!1),f.id?f._q.all([f.timesheetServices.project.get({id:f.id,action:"default"}).$promise,f.timesheetServices.project.get({id:f.id,action:"projectmanager"}).$promise]).then(function(e){f.project=e[0],f.originalProject=angular.copy(f.project),f.project.startDate=f.project.startDate?f.project.startDate.stringToDate():null,f.project.endDate=f.project.endDate?f.project.endDate.stringToDate():null,f.projectManager=e[1],f.client=f.clients.find(function(e){return e.id==f.project.parentGroupId})}):f.clientId&&(f.client=f.clients.find(function(e){return e.id==f.clientId}))},function(e){f.notificationService.error("Failed to get clients data")})}return t.$inject=["$state","$q","$filter","$location","$stateParams","$rootScope","$timeout","$uibModalInstance","AppSettings","AppContext","SharedModel","ProjectStatus","TimesheetServices","NotificationService","Utils"],t}();t.ProjectCreationController=i;var n=function(){function t(t,i,n,o,r,a,s,l){var c=this;this._stateParams=t,this._location=i,this._filter=n,this._timeout=o,this.appContext=r,this.notificationService=a,this.timesheetServices=s,this.utilityService=l,this.tableHeaders=[new SharedModel.TableHeader("employeeName","MANAGER",!1),new SharedModel.TableHeader("","PRIVILEGES",!1)],this.currentSortingElement=this.tableHeaders[0],this.loadManagers=function(){c.publicProfile=c.appContext.myPublicProfile,c.publicProfile?c.timesheetServices.project.query({id:c.project.id||c.id,action:"projectmanagers"},function(e){c.managers=angular.copy(e),c.id?(c.publicProfile.id==c.project.accountManagerId||c.isProjectEditable)&&c.setProjectManagers():c.setProjectManagers()}):c._timeout(c.loadManagers,500)},this.setProjectManagers=function(){var t=new e.Model.Manager;t.projectManager=null,t.projectId=c.project.id,c.managers.push(t)},this.saveManagers=function(){if(!c.disableSave){c.disableSave=!0,c.notificationService.information("Saving project manager details");var e="/timesheet/project/"+c.project.id+"/summary",t=angular.copy(c.managers);t.splice(t.length-1,1),t.forEach(function(e){e.manageFinancials&&(e.viewFinancials=!0)}),c.timesheetServices.project.save({action:"projectmanagers"},t,function(e){c.managers.forEach(function(t,i){t.id||(t.id=e.managers[i]?e.managers[i].id:null)}),c.disableSave=!1,c.notificationService.success("Project manager details saved successfully")},function(e){c.notificationService.error("Error in saving project manager details")}),c.id||c._location.path(e)}},this.doesEmployeeExist=function(e){return!!c.managers&&c.managers.filter(function(t){return t.projectManager?t.projectManager.id==e.id:t.employeeId==e.id}).length>0},this.getFilteredEmployees=function(e){if(e.length>2)return c.utilityService.getMatchedEmployees(e).then(function(e){var t=[];return angular.forEach(e,function(e){c.doesEmployeeExist(e)||t.push(e)}),t=c._filter("limitTo")(t,8),1!=e.length||e[0].id?t:e})},this.addRow=function(t,i){if(c.managers[t].employeeId=i.id,c.managers[t].employeeName=i.displayName,c.managers.every(function(e){return e.employeeId})){var n=new e.Model.Manager;n.projectManager=null,n.projectId=c.project.id,c.managers.push(n)}},this.deleteManager=function(e){if(c.notificationService.information("Deleting project manager"),e.id)c.timesheetServices.project.delete({id:e.id,action:"projectmanagers"},function(t){var i=c.managers.map(function(e){return e.id}).indexOf(e.id);c.managers.splice(i,1),c.notificationService.success("Project manager deleted successfully")},function(e){c.notificationService.error("An error occurred while deleting project manager.")});else{var t=c.managers.indexOf(e);c.managers.splice(t,1),c.notificationService.error("Project manager deleted successfully")}},this.sortTableData=function(e){c.currentSortingElement=e,c.sortType=e.name,e.sortReverse=!e.sortReverse,c.sortReverse=e.sortReverse}}return t.prototype.$onInit=function(){this.id=this._stateParams.id,this.loadManagers()},t.$inject=["$stateParams","$location","$filter","$timeout","AppContext","NotificationService","TimesheetServices","Utils"],t}();t.ProjectManagersController=n;var o=function(){function e(e,t,i,n,o,r,a){var s=this;this._filter=e,this.appSettings=t,this.timesheetServices=i,this.notificationService=n,this.dialogs=o,this.projectStatus=r,this.billingType=a,this.projects=[],this.initializeGridSettings=function(){s.projectGridOptions=angular.copy(s.appSettings.gridSettings),s.projectGridOptions.columnDefs=[{field:"name",displayName:"PROJECT",cellTemplate:'<div class="ui-grid-cell-contents"><span><a href="/old/#/timesheet/project/{{row.entity.id}}/summary">{{grid.getCellValue(row,col)}}</a></span></div>',cellClass:"ui-grid-cell"},{field:"clientName",displayName:"CLIENT",cellClass:"ui-grid-cell"},{field:"code",displayName:"PROJECT CODE",cellClass:"ui-grid-cell"},{field:"status",displayName:"STATUS",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.projectStatus.getById(grid.getCellValue(row,col)).title}}</span></div>',cellClass:"ui-grid-cell"},{field:"billingType",displayName:"BILLING",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.billingType.getById(grid.getCellValue(row,col)).title}}</span></div>',cellClass:"ui-grid-cell"},{field:"startDate",displayName:"START DATE",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{ grid.getCellValue(row,col) | yyyymmddToDate:'mediumDate'}}</span></div>",cellClass:"ui-grid-cell"},{name:"Actions",displayName:"ACTIONS",enableSorting:!1,cellClass:"ui-grid-cell cell-tooltip ui-grid-cell-contents",cellTemplate:'<div class="ui-grid-cell-options "><span class="clearfix"><ul class="action-items list-inline"><li class="list-item"><a class="list-link" data-ng-click="grid.appScope.deleteProject(row.entity.id);"><span class="icon-remove3" uib-tooltip="Delete" tooltip-placement="right"></span></a></li></ul></span></div>'}],s.projectGridOptions.rowHeight=50,s.projectGridOptions.appScopeProvider=s},this.refreshData=function(){s.projectGridOptions.data=s._filter("filter")(s.projects,s.filterText,!1)},this.deleteProject=function(e){s.dialogs.confirm("Please Confirm","Are you sure you want to delete resources also ? ").result.then(function(){s.notificationService.information("Deleting project"),s.timesheetServices.project.delete({action:"default",id:e},function(t){t.isDeleted?(s.notificationService.success("Project deleted successfully"),s.projects=s.projects.filter(function(t){return t.id!=e}),s.projectGridOptions.data=s.projects):s.notificationService.error("This project cannot be deleted as it is associated with time entries")},function(e){s.notificationService.error("Error in deleting the project")})})}}return e.prototype.$onInit=function(){var e=this;this.initializeGridSettings(),this.timesheetServices.getManagedProjects().then(function(t){e.projects=t,e.projectGridOptions.data=e.projects},function(t){e.notificationService.error("Error in getting projects")}),this.timesheetServices.getClientCount().then(function(t){e.clientcount=t.count},function(e){})},e.$inject=["$filter","AppSettings","TimesheetServices","NotificationService","dialogs","ProjectStatus","BillingType"],e}();t.ProjectsListController=o;var r=function(){function t(t,n,o,r,a){var s=this;this._stateParams=t,this._modal=n,this._q=o,this.appContext=r,this.timesheetServices=a,this.projectManager={},this.manageTasksAndTeam=!0,this.project=new e.Model.Project,this.editProject=function(e){s._modal.open({templateUrl:"editProject",controller:i,controllerAs:"ctrl",resolve:{projectId:function(){return e}}}).result.then(function(e){e&&(s.project=angular.copy(e),s.timesheetServices.project.get({id:s.project.id,action:"clientbyprojectid"},function(e){s.client=e}))})}}return t.prototype.$onInit=function(){var e=this;this.id=this._stateParams.id,this.publicProfile=this.appContext.myPublicProfile,this._q.all([this.timesheetServices.project.get({id:this.id,action:"default"}).$promise,this.timesheetServices.project.get({id:this.id,action:"projectmanager"}).$promise]).then(function(t){e.project=t[0],e.project.startDate=e.project.startDate?e.project.startDate.stringToDate():null,e.project.endDate=e.project.endDate?e.project.endDate.stringToDate():null,e.projectManager=t[1],e.isProjectEditable=e.isProjectEditable||e.project.accountManagerId==e.publicProfile.id})},t.$inject=["$stateParams","$uibModal","$q","AppContext","TimesheetServices"],t}();t.ProjectDetailsController=r;var a=function(){function e(e,t,i,n,o,r,a){var s=this;this._stateParams=e,this._filter=t,this.appSettings=i,this.billingTypeService=n,this.billingRateUnitService=o,this.notificationService=r,this.timesheetServices=a,this.submitted=!1,this.updateBillingDetails=function(){s.billingForm.billing.$valid&&(s.notificationService.information("Updating billing details"),s.project.billingType==s.billingType.noBilling.id?s.project.isBillable=!1:s.project.isBillable=!0,s.timesheetServices.project.update({action:"billing",id:s.project.id},s.project,function(e){s.notificationService.success("Billing details updated successfully")},function(e){s.notificationService.error("Error in saving project details")}))}}return e.prototype.$onInit=function(){this.id=this._stateParams.id,this.billingType=angular.copy(this.billingTypeService)},e.$inject=["$stateParams","$filter","AppSettings","BillingType","BillingRateUnit","NotificationService","TimesheetServices"],e}();t.ProjectDashboardBillingController=a;var s=function(){function e(e,t,i,n,o,r,a,s){var l=this;this._stateParams=e,this.timesheetServices=t,this.lookupServices=i,this.projectStatus=n,this.billingType=o,this.months=r,this.notificationService=a,this.appSettings=s,this.projectStatistics=[],this.topPerformers=[],this.dataYears=new Array,this.changeStatastics=function(e){l.selectedYear=e,l.billingData(),l.revenueData(),null!=l.billableChartApi&&null!=l.revenueChartApi&&(l.billableChartApi.refresh(),l.revenueChartApi.refresh())},this.getChartData=function(e){var t;return l.projectStatistics.forEach(function(i){i.month==e&&i.year==l.selectedYear&&(t=i)}),t},this.billingData=function(){for(var e=[],t=[],i=0;i<l.months.length;i++){var n=l.getChartData(i+1);e.push({x:l.months[i].name,y:n&&n.billingHours?n.billingHours:0}),t.push({x:l.months[i].name,y:n&&n.nonBillingHours?n.nonBillingHours:0})}return[{key:"Billable",color:"#009bce",values:e},{key:"Non-Billable",color:"#95cfec",values:t}]},this.revenueData=function(){for(var e=[],t=0;t<l.months.length;t++){var i=l.getChartData(t+1);e.push({x:l.months[t].name,y:i&&i.billing?i.billing:0})}return[{key:"REVENUE GENERATED IN MONTH",color:"#32a751",values:e}]},this.onProjectNotBillable=function(e){e||(l.model.allowNonBillableHours=!1)}}return e.prototype.$onInit=function(){var e=this;this.id=this._stateParams.id,this.showFinancials=this.isProjectEditable||this.projectManager.viewFinancials,this.chartOptions=angular.copy(this.appSettings.multiBarChartOptions),this.chartOptions.chart.width=400,this.id&&(this.timesheetServices.project.get({id:this.id,action:"default"},function(t){e.model=t}),this.timesheetServices.project.get({action:"projectstatistics",id:this.id},function(t){e.projectStatistics=t.projectStatistics,e.topPerformers=t.topPerformers,e.billingData(),e.revenueData(),e.projectStatistics.forEach(function(t){e.dataYears.indexOf(t.year)<0&&e.dataYears.push(t.year)}),e.selectedYear=e.dataYears[0],e.lookupServices.lookup.query({id:"currencies"},function(i){e.currency=i.find(function(e){return e.id==t.currencyId})})},function(t){e.notificationService.error("Error while loading currencies.")}))},e.$inject=["$stateParams","TimesheetServices","LookupServices","ProjectStatus","BillingType","Months","NotificationService","AppSettings"],e}();t.ProjectController=s;var l=function(){function t(t,i,n,o,r,a,s,l,p,u){var d=this;this._stateParams=t,this._filter=i,this._timeout=n,this.appSettings=o,this.appContext=r,this.timesheetServices=a,this.notificationService=s,this.dialogs=l,this.taskBillingTypeService=p,this.modalService=u,this.projectTasks=[],this.projectTasksCopy=[],this.taskBillingTypes=[],this.manageTasks=!0,this.numRows=50,this.tableHeaders=[new SharedModel.TableHeader("name","TASK NAME",!1),new SharedModel.TableHeader("startDate","START DATE",!1),new SharedModel.TableHeader("endDate","END DATE",!1),new SharedModel.TableHeader("billable","BILLABLE",!1)],this.currentSortingElement=this.tableHeaders[0],this.initializeGridSettings=function(){d.tasksGridOptions=angular.copy(d.appSettings.gridSettings),d.tasksGridOptions.columnDefs=[{field:"name",displayName:"TASK NAME",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-class=" { \'ui-grid-cell-contents-edit\' : row.entity.isEditable }"><input data-ng-if="row.entity.isEditable" type="text" ng-model="row.entity.name" placeholder="Name" class="form-control" data-ng-focus="grid.appScope.addTask(row.entity)" data-ng-class="{\'invalid-input-field\' : row.entity.isSubmitted && ! row.entity.name.length }"/><span data-ng-if="!row.entity.isEditable" title="{{grid.getCellValue(row,col)}}" class="cellToolTip">{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell"},{field:"startDate",displayName:"START DATE",cellTemplate:'<div class="ui-grid-cell-contents"  data-ng-class=" { \'ui-grid-cell-contents-edit\' : row.entity.isEditable }"> <div data-ng-if="row.entity.isEditable"><div class="datepicker-align"><label class=" icon-calendar3 align-icon-2 input-group-icon" data-ng-click="startDate = startDate ? false:true;"></label><input  type="text" custom-class="grid.appScope.getDayClass(date, mode)" datepicker-append-to-body="true" class="datepicking form-control input-group-field" data-is-open="startDate" data-ng-click="startDate = startDate ? false:true;" placeholder="Start Date" data-uib-datepicker-popup="dd MMMM yyyy"data-datepicker-options="{showWeeks:false, minDate:grid.appScope.project.startDate, maxDate:row.entity.endDate !=null ? row.entity.endDate : grid.appScope.project.endDate}" data-ng-model="row.entity.startDate" readonly="readonly"  data-show-weeks="false"   /></div></div><span data-ng-if="!row.entity.isEditable">{{grid.getCellValue(row,col) | date:\'mediumDate\'}}</span></div>',cellClass:"ui-grid-cell"},{field:"endDate",displayName:"END DATE",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-class=" { \'ui-grid-cell-contents-edit\' : row.entity.isEditable }"> <div data-ng-if="row.entity.isEditable"><div class="datepicker-align"><label class="icon-calendar3 align-icon-2 input-group-icon" data-ng-click="endDate = endDate ? false:true;"></label><input  type="text" datepicker-append-to-body="true" class="datepicking form-control input-group-field" data-is-open="endDate" data-ng-click="endDate = endDate ? false:true;" placeholder="End Date" data-uib-datepicker-popup="dd MMMM yyyy"data-datepicker-options="{showWeeks:false, minDate:row.entity.startDate !=null ? row.entity.startDate : grid.appScope.project.startDate, maxDate: grid.appScope.project.endDate}" data-ng-model="row.entity.endDate" readonly="readonly"  data-show-weeks="false"   /></div></div><span data-ng-if="!row.entity.isEditable">{{grid.getCellValue(row,col) | date:\'mediumDate\'}}</span></div>',cellClass:"ui-grid-cell"},{field:"billable",displayName:"BILLABLE",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-class=" { \'ui-grid-cell-contents-edit\' : row.entity.isEditable }"><div data-ng-if="row.entity.isEditable"><select ng-model="row.entity.billable" data-ng-if="grid.appScope.taskBillingTypes.length > 1" class="form-control" data-ng-options="billingType.id as billingType.title for billingType in grid.appScope.taskBillingTypes" data-ng-class="{\'invalid-input-field\' : row.entity.isSubmitted && row.entity.billable == null}" data-ng-focus="grid.appScope.addTask(row.entity)"><option value=""> Select billing type </option> </select><label class="" data-ng-if="grid.appScope.taskBillingTypes.length <= 1" data-ng-init="row.entity.billable = grid.appScope.taskBillingTypes[0].id">{{grid.appScope.taskBillingTypes[0].title}}</label></div><div data-ng-if="!row.entity.isEditable" class="" data-ng-bind="grid.appScope.taskBillingTypeService.getById(row.entity.billable).title"></div></div>'}],d.manageTasks&&d.tasksGridOptions.columnDefs.push({name:"Actions",displayName:"ACTIONS",enableSorting:!1,cellClass:"ui-grid-cell cell-tooltip",cellTemplate:'<div class="ui-grid-cell-options ui-grid-cell-contents"><span class="clearfix"><ul class="action-items list-inline"><li class="list-item" data-ng-if="!row.entity.isEditable"><a class="list-link" data-ng-click="row.entity.isEditable=true;row.entity.isSubmitted=false;"><span class="icon-pencil5" title="Edit"></span></a></li><li class="list-item" data-ng-if="!row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.deleteTask(row.entity);"><span class="icon-remove3" title="Delete"></span></a></li><li class="list-item" data-ng-if="row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.saveTask(row.entity)"><span class="icon-checkmark-circle" title="Save"></span></a></li><li class="list-item" data-ng-if="row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.cancel(row.entity, rowRenderIndex)"><span class="icon-cancel-circle" title="cancel"></span></a></li></ul></span></div>'}),d.tasksGridOptions.data="ctrl.projectTasks",d.tasksGridOptions.appScopeProvider=d,d.tasksGridOptions.totalItems=d.projectTasks.length,d.tasksGridOptions.showGridFooter=!0,d.tasksGridOptions.gridFooterTemplate='<div class="ui-grid-footer-info ui-grid-grid-footer ng-scope"><span>Total Items: {{grid.appScope.totalCount}}</span>',d.tasksGridOptions.onRegisterApi=function(e){d.gridApi=e}},this.updateProjectDates=function(e){e&&(d.project.startDate=e.startDate?e.startDate:null,d.project.endDate=e.endDate?e.endDate:null)},this.convertTaskDates=function(){angular.forEach(d.projectTasks,function(e){e.startDate=e.startDate?e.startDate.stringToDate():null,e.endDate=e.endDate?e.endDate.stringToDate():null})},this.loadTasks=function(){d.timesheetServices.project.query({id:d.id,action:"projecttasks"},function(t){if(d.projectTasks=t,d.projectTasksCopy=angular.copy(d.projectTasks),d.convertTaskDates(),d.initializeGridSettings(),d.manageTasks){var i=new e.Model.Task;d._timeout(function(){i.startDate=angular.copy(d.project.startDate),i.endDate=angular.copy(d.project.endDate),d.projectTasks.push(i)})}},function(e){d.notificationService.error("Error while getting project tasks.")})},this.updateTaskDates=function(e,t){angular.forEach(d.projectTasks,function(i){i.startDate=i.startDate>e&&i.startDate<t?i.startDate:e,i.endDate=i.endDate<t&&i.endDate>e?i.endDate:t})},this.openExportTaskPopUp=function(){d.modalService.open({templateUrl:"exportrepositorytasks",windowClass:"full-screen-modal dark-modal action-content",controllerAs:"ctrl",controller:c,resolve:{projectTasks:function(){return d.projectTasks},project:function(){return d.project},taskBillingTypes:function(){return d.taskBillingTypes},taskBillingTypeService:function(){return d.taskBillingTypeService}},keyboard:!1,backdrop:!1}).result.then(function(t){if(d.projectTasks=t,d.projectTasksCopy=angular.copy(t),d.convertTaskDates(),d.manageTasks){var i=new e.Model.Task;i.startDate=d.project.startDate?angular.copy(d.project.startDate):null,i.endDate=d.project.endDate?angular.copy(d.project.endDate):null,d.projectTasks.push(i),d.projectTasksCopy.push(i)}d.gridApi.core.refresh()})},this.addTask=function(t){if(t.isLastRow){t.isLastRow=!1;var i=new e.Model.Task;i.startDate=d.project.startDate?angular.copy(d.project.startDate):null,i.endDate=d.project.endDate?angular.copy(d.project.endDate):null,d.projectTasks.push(i),d.projectTasksCopy.push(i)}},this.cancel=function(e,t){var i=d.projectTasksCopy.find(function(t){return t.id==e.id});null!=e.id?(e.isEditable=!1,d.projectTasks[t]=angular.copy(i)):t!=d.projectTasks.length-1&&d.projectTasks.splice(t,1),d.queueGridRefresh()},this.saveTask=function(e){if(e.isSubmitted=!0,e.name&&null!=e.billable&&!e.disableSave)if(!!e.name&&-1!=d.projectTasks.map(function(t){if(t.id>0&&t.id!=e.id)return t.name?t.name.toLowerCase():t.name}).indexOf(e.name.toLowerCase()))d.notificationService.information("A task with given name already exists in the same project, please give a different name.");else{e.disableSave=!0,d.notificationService.information("Saving task..");var t=d.projectTasks.indexOf(e),i=angular.copy(e);i.startDate=d._filter("date")(i.startDate,"yyyy-MM-dd"),i.endDate=d._filter("date")(i.endDate,"yyyy-MM-dd"),d.timesheetServices.project[e.id?"update":"save"]({id:d.id,action:"projecttask"},i,function(i){e.id||(e.id=i.id),e.isEditable=!1,e.disableSave=!1,d.projectTasksCopy[t]=angular.copy(e),d.notificationService.success("Task saved successfully")})}else d.notificationService.error("Please fill all the fields")},this.editTask=function(e){d.projectTasks[e].isEditable=!0,d.projectTasks[e].isSubmitted=!1},this.deleteTask=function(e){d.dialogs.confirm("Please Confirm","Are you sure want to delete this task ? ").result.then(function(){var t=d.projectTasks.indexOf(e);d.notificationService.information("Deleting task.."),d.timesheetServices.project.delete({action:"projecttask",id:e.id},function(e){e.isDeleted?(d.projectTasks.splice(t,1),d.notificationService.success("Task deleted successfully")):d.notificationService.error("This task cannot be deleted as it is associated with the time entries")},function(e){d.notificationService.error("Error in deleting task")})})},this.sortTableData=function(e){d.currentSortingElement=e,d.sortType=e.name,e.sortReverse=!e.sortReverse,d.sortReverse=e.sortReverse}}return t.prototype.$onInit=function(){var e=this;this.id=this._stateParams.id,this._timeout(function(){e.publicProfile=e.appContext.myPublicProfile,e.project.isBillable?e.project.allowNonBillableHours?e.taskBillingTypes=e.taskBillingTypeService.getAll():e.taskBillingTypes.push(e.taskBillingTypeService.Billable):e.taskBillingTypes.push(e.taskBillingTypeService.NonBillable),e.manageTasks=!(!e.isProjectEditable&&!e.projectManager.manageTasks&&e.project.accountManagerId!=e.publicProfile.id),e.loadTasks()})},Object.defineProperty(t.prototype,"totalCount",{get:function(){return this.projectTasks.filter(function(e){return!!e.id}).length},enumerable:!0,configurable:!0}),t.prototype.queueGridRefresh=function(){this.gridApi&&this.gridApi.grid.queueGridRefresh()},t.$inject=["$stateParams","$filter","$timeout","AppSettings","AppContext","TimesheetServices","NotificationService","dialogs","TaskBillingType","$uibModal"],t}();t.ProjectTasksController=l;var c=function(){function e(e,t,i,n,o,r,a,s,l,c,p,u,d,m){var y=this;void 0===c&&(c=[]),void 0===u&&(u=[]),this._stateParams=e,this._filter=t,this._timeout=i,this.appSettings=n,this.appContext=o,this.timesheetServices=r,this.notificationService=a,this.dialogs=s,this.modalService=l,this.projectTasks=c,this.project=p,this.taskBillingTypes=u,this.taskBillingTypeService=d,this._modalInstance=m,this.exportableTasks=[],this.manageTasks=!0,this.numRows=50,this.timesheetServices.project.query({action:"repositorytask"},function(e){y.tasks=e,y.exportableTasks=y.filterExportableTasks(),y.initializeGridSettings()})}return e.prototype.filterExportableTasks=function(){var e=this;return angular.copy(this.tasks.filter(function(t){return t.startDate=e.project.startDate,t.endDate=e.project.endDate,e.taskBillingTypes.length<=1&&(t.billable=e.taskBillingTypes[0].id),!e.projectTasks.find(function(e){return e.name===t.name})}))},e.prototype.initializeGridSettings=function(){var e=this;this.tasksGridOptions=angular.copy(this.appSettings.gridSettings),this.tasksGridOptions.rowHeight=65,this.tasksGridOptions.columnDefs=[{name:"name",displayName:"TASK NAME",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row, col)}}</span></div>',enableCellEdit:!1,allowCellFocus:!1,headerTooltip:!0},{name:"startDate",displayName:"START DATE",cellTemplate:'<div class="ui-grid-cell-contents ui-grid-cell-contents-edit"> <div ><div class="datepicker-align vertical-margin"><label class=" icon-calendar3 align-icon-2 input-group-icon" data-ng-click="startDate = startDate ? false:true;"></label><input  type="text" custom-class="grid.appScope.getDayClass(date, mode)" datepicker-append-to-body="true" class="datepicking form-control input-group-field" data-is-open="startDate" data-ng-click="startDate = startDate ? false:true;" placeholder="Start Date" data-uib-datepicker-popup="dd MMMM yyyy"data-datepicker-options="{showWeeks:false, minDate:grid.appScope.project.startDate, maxDate:row.entity.endDate !=null ? row.entity.endDate : grid.appScope.project.endDate}" data-ng-model="row.entity.startDate" readonly="readonly"  data-show-weeks="false"   /></div></div></div>',cellClass:"ui-grid-cell",enableCellEdit:!1,allowCellFocus:!1,headerTooltip:!0},{name:"endDate",displayName:"END DATE",cellTemplate:'<div class="ui-grid-cell-contents ui-grid-cell-contents-edit"> <div ><div class="datepicker-align vertical-margin"><label class="icon-calendar3 align-icon-2 input-group-icon" data-ng-click="endDate = endDate ? false:true;"></label><input  type="text" datepicker-append-to-body="true" class="datepicking form-control input-group-field" data-is-open="endDate" data-ng-click="endDate = endDate ? false:true;" placeholder="End Date" data-uib-datepicker-popup="dd MMMM yyyy"data-datepicker-options="{showWeeks:false, minDate:row.entity.startDate !=null ? row.entity.startDate : grid.appScope.project.startDate, maxDate: grid.appScope.project.endDate}" data-ng-model="row.entity.endDate" readonly="readonly"  data-show-weeks="false"   /></div></div></div>',cellClass:"ui-grid-cell",enableCellEdit:!1,allowCellFocus:!1,headerTooltip:!0},{name:"billable",displayName:"BILLING TYPE",cellTemplate:'<div class="ui-grid-cell-contents ui-grid-cell-contents-edit"><div><select ng-model="row.entity.billable" data-ng-if="grid.appScope.taskBillingTypes.length > 1" class="form-control vertical-margin" data-ng-options="billingType.id as billingType.title for billingType in grid.appScope.taskBillingTypes" data-ng-class="{\'invalid-input-field\' : row.entity.billable == null && row.isSelected}" data-ng-focus="grid.appScope.addTask(row.entity)"><option value=""> Select billing type </option> </select><label class="" data-ng-if="grid.appScope.taskBillingTypes.length <= 1">{{grid.appScope.taskBillingTypes[0].title}}</label></div> ',enableCellEdit:!1,allowCellFocus:!1,headerTooltip:!0}],this.tasksGridOptions.multiSelect=!0,this.tasksGridOptions.data="ctrl.exportableTasks",this.tasksGridOptions.appScopeProvider=this,this.tasksGridOptions.onRegisterApi=function(t){e.gridApi=t}},e.prototype.exportTasks=function(){var e=this;this.projectForm.projectTasks.$submitted=!0;var t=this.gridApi.selection.getSelectedRows();this.projectForm.projectTasks.$valid&&!t.find(function(e){return null==e.billable})?t.length>0?(t.forEach(function(t){t.startDate=e._filter("date")(t.startDate,"yyyy-MM-dd"),t.endDate=e._filter("date")(t.endDate,"yyyy-MM-dd")}),this.timesheetServices.project.save({id:this.project.id,action:"projecttasks"},t,function(t){e.notificationService.success("Tasks Exported successfully"),e._modalInstance.close(t.projectTasks)})):this.notificationService.success("Please select atleast one task"):this.notificationService.success("Please select required fields")},e.$inject=["$stateParams","$filter","$timeout","AppSettings","AppContext","TimesheetServices","NotificationService","dialogs","$uibModal","projectTasks","project","taskBillingTypes","taskBillingTypeService","$uibModalInstance"],e}();t.RepositoryTasksExportController=c;var p=function(){function t(t,i,n,o,r,a,s,l,c,p){var u=this;this._stateParams=t,this._filter=i,this._q=n,this._timeout=o,this.appSettings=r,this.appContext=a,this.timesheetServices=s,this.notificationService=l,this.utilityService=c,this.billingRateUnit=p,this.billingRoles=[],this.projectTeam=[],this.projectTeamCopy=[],this.resources=[],this.manageTeam=!0,this.tableHeaders=[new SharedModel.TableHeader("employeeName","NAME",!1),new SharedModel.TableHeader("billingRoleId","BILLING ROLE",!1),new SharedModel.TableHeader("billingRate","BILLING RATE",!1)],this.currentSortingElement=this.tableHeaders[0],this.initializeGridSettings=function(){u.gridElement=angular.element(window.document.querySelector("#projectTeamGridContainer")),u.teamGridOptions=angular.copy(u.appSettings.gridSettings),u.teamGridOptions.columnDefs=[{field:"employeeName",displayName:"NAME",cellTemplate:'<div class="ui-grid-cell-contents"><div data-ng-if="row.entity.isEditable" class="form-group col-lg-12 col-md-12 col-sm-12 manager-search clear-side-padding "><div class="employee-search-typeahead"><input type="text" ng-model="row.entity.employee"uib-typeahead="name as name.displayName for name in grid.appScope.getFilteredEmployees($viewValue)" data-ng-class="{\'invalid-input-field\' : row.entity.isSubmitted && ! row.entity.employeeId }"     typeahead-on-select="grid.appScope.updateEmpDetails(row.entity)" data-ng-focus="grid.appScope.addResource(row.entity)" typeahead-wait-ms="750" typeahead-template-url="itemTpl.html" typeahead-popup-template-url="emppopupTpl.html" typeahead-append-to-body="true" placeholder="Start typing employee name" class="form-control input-group-field" name="notifyTo"typeahead-editable="false" autocomplete="off" />                                               <span class="icon-user3 input-group-icon align-icon-2"></span>                                 </div>                                </div><div data-ng-if="!row.entity.isEditable" >{{grid.getCellValue(row,col)}}</div></div>',cellClass:"ui-grid-cell"},{field:"startDate",displayName:"START DATE",cellTemplate:'<div class="ui-grid-cell-contents" > <div data-ng-if="row.entity.isEditable"><div class="datepicker-align"><label class=" icon-calendar3 align-icon-2 input-group-icon" data-ng-click="startDate = startDate ? false:true;"></label><input  type="text" custom-class="grid.appScope.getDayClass(date, mode)" datepicker-append-to-body="true" class="datepicking form-control input-group-field" data-is-open="startDate" data-ng-click="startDate = startDate ? false:true;" placeholder="Start Date" data-uib-datepicker-popup="dd MMMM yyyy"data-datepicker-options="{showWeeks:false, minDate:grid.appScope.project.startDate, maxDate:row.entity.endDate !=null ? row.entity.endDate : grid.appScope.project.endDate}" data-ng-model="row.entity.startDate" readonly="readonly"  data-show-weeks="false"   /></div></div><span data-ng-if="!row.entity.isEditable">{{grid.getCellValue(row,col) | date:\'mediumDate\'}}</span></div>',cellClass:"ui-grid-cell"},{field:"endDate",displayName:"END DATE",cellTemplate:'<div class="ui-grid-cell-contents"> <div data-ng-if="row.entity.isEditable"><div class="datepicker-align"><label class="icon-calendar3 align-icon-2 input-group-icon" data-ng-click="endDate = endDate ? false:true;"></label><input  type="text" datepicker-append-to-body="true" class="datepicking form-control input-group-field" data-is-open="endDate" data-ng-click="endDate = endDate ? false:true;" placeholder="End Date" data-uib-datepicker-popup="dd MMMM yyyy"data-datepicker-options="{showWeeks:false, minDate:row.entity.startDate !=null ? row.entity.startDate : grid.appScope.project.startDate, maxDate: grid.appScope.project.endDate}" data-ng-model="row.entity.endDate" readonly="readonly"  data-show-weeks="false"   /></div></div><span data-ng-if="!row.entity.isEditable">{{grid.getCellValue(row,col) | date:\'mediumDate\'}}</span></div>',cellClass:"ui-grid-cell"},{field:"billingRoleName",displayName:"BILLING ROLE",cellTemplate:' <div class="ui-grid-cell-contents"><div data-ng-if="!row.entity.isEditable && !row.entity.createBillingRole" data-ng-bind="grid.appScope.getBillingRole(row.entity.billingRoleId)"></div> <div data-ng-if="row.entity.isEditable && !row.entity.createBillingRole" class="form-group col-lg-12 col-md-12 col-sm-12 clear-side-padding clear-text-transformation" data-ng-class="{\'invalid-input-field\' : row.entity.isSubmitted && row.entity.billingRole == null }">     <ui-select data-ng-model="row.entity.billingRole" on-select="grid.appScope.getBillingRate(row.entity)" name="billingRole" id="billingRole" theme="bootstrap" data-ng-disabled="disabled" append-to-body="true" class="client-select" data-ng-click="grid.appScope.addResource(row.entity)" required>         <ui-select-match placeholder="Select a billing role">{{$select.selected.name}}</ui-select-match>         <ui-select-choices class="action-button" repeat="role in grid.appScope.billingRoles | filter: {name : $select.search}" data-ng-nicescroll="" data-nice-option="grid.appScope.niceScrollOptions">             <span ng-if="role.id == 0 && grid.appScope.isProjectEditable" class="add-client" data-ng-click="row.entity.createBillingRole=true; $event.preventDefault();">Create a new Billing role</span>             <span ng-if="role.id != 0" data-ng-bind-html="role.name | highlight: $select.search"></span>         </ui-select-choices>     </ui-select> </div> <div data-ng-if="row.entity.isEditable && row.entity.createBillingRole">      <input type="text" class="form-control" name="bilingRoleName" data-set-focus="true" placeholder="Enter new billing role here" id="billingRoleName" data-ng-model="row.entity.newBillingRole.name" data-ng-class="{\'invalid-input-field\' : row.entity.isSubmitted && ! row.entity.newBillingRole.name.length }" /> </div></div>',cellClass:"ui-grid-cell"}],u.showFinancials&&u.teamGridOptions.columnDefs.push({field:"billingRate",displayName:"BILLING RATE"+(u.project.isBillable?" ("+u.billingRateUnit.getById(u.project.billingRate).title+")":""),cellTemplate:'<div class="ui-grid-cell-contents"><div data-ng-if="row.entity.isEditable && !row.entity.createBillingRole && grid.appScope.manageFinancials"> <input type="text" class="form-control" data-ng-model="row.entity.rate" name="billingRate" id="billingRate" data-ng-class="{\'invalid-input-field\' : row.entity.isSubmitted && (!row.entity.rate || grid.appScope.isNumber(row.entity.rate)) }" data-ng-focus="grid.appScope.addResource(row.entity)" /> </div> <div data-ng-if="row.entity.isEditable && row.entity.createBillingRole && grid.appScope.manageFinancials">     <input type="text" class="form-control" data-ng-model="row.entity.newBillingRole.rate" name="rate" id="rate" data-ng-class="{\'invalid-input-field\' : row.entity.isSubmitted && (!row.entity.newBillingRole.rate || grid.appScope.isNumber(row.entity.newBillingRole.rate))}" /> </div> <div data-ng-if="(!row.entity.isEditable && !row.entity.createBillingRole) || !grid.appScope.manageFinancials" data-ng-bind="row.entity.rate"></div></div>',cellClass:"ui-grid-cell"}),u.manageTeam&&u.teamGridOptions.columnDefs.push({name:"Actions",displayName:"ACTIONS",enableSorting:!1,cellClass:"ui-grid-cell cell-tooltip",cellTemplate:'<div class="ui-grid-cell-options ui-grid-cell-contents"><span><ul class="action-items list-inline"><li class="list-item" data-ng-if="!row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.editResource(row.entity); row.entity.isEditable=true;row.entity.isSubmitted=false;"><span class="icon-pencil5" uib-tooltip="Edit" tooltip-placement="left"></span></a></li><li class="list-item" data-ng-if="!row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.deleteResource(row.entity);"><span class="icon-remove3" uib-tooltip="Delete" tooltip-placement="right"></span></a></li><li class="list-item" data-ng-if="row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.saveResource(row.entity)"><span class="icon-checkmark-circle" uib-tooltip="Save" tooltip-placement="left"></span></a></li><li class="list-item" data-ng-if="row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.cancel(row.entity)"><span class="icon-cancel-circle" uib-tooltip="cancel" tooltip-placement="right"></span></a></li></ul></span></div>'}),u.teamGridOptions.data=u.projectTeam,u.teamGridOptions.appScopeProvider=u,u.teamGridOptions.rowHeight=60,u.teamGridOptions.showGridFooter=!0,u.teamGridOptions.gridFooterTemplate='<div class="ui-grid-footer-info ui-grid-grid-footer ng-scope"><span>Total Items: {{grid.appScope.totalCount}}</span>',u.teamGridOptions.onRegisterApi=function(e){u.gridApi=e}},this.loadBillingRoles=function(t){t?u.timesheetServices.project.query({id:t,action:"clientbillingroles"},function(t){if(u.billingRoles=t,u.isProjectEditable){var i=new e.Model.BillingRole;i.id=0,i.name="Create a new billing role",u.billingRoles.unshift(i)}}):u._timeout(function(){u.loadBillingRoles(u.project.parentGroupId)},500)},this.loadTeam=function(){u.timesheetServices.project.query({id:u.id,action:"projectresources"},function(t){u.projectTeam=t,u.projectTeam.forEach(function(e){e.rate=e.billingRate,e.startDate=u._filter("date")(e.startDate,"yyyy-MM-dd"),e.endDate=u._filter("date")(e.endDate,"yyyy-MM-dd")}),u.manageTeam&&(u.projectTeam.push(new e.Model.Resource),u.projectTeam[u.projectTeam.length-1].startDate=angular.copy(u.project.startDate),u.projectTeam[u.projectTeam.length-1].endDate=angular.copy(u.project.endDate)),u.projectTeamCopy=angular.copy(u.projectTeam),u.initializeGridSettings()})},this.updateEmpDetails=function(e){e.employeeId=e.employee.id,e.employeeName=e.employee.displayName},this.addResource=function(t){t.isLastRow&&(t.isLastRow=!1,u.projectTeam.push(new e.Model.Resource),u.projectTeam[u.projectTeam.length-1].startDate=angular.copy(u.project.startDate),u.projectTeam[u.projectTeam.length-1].endDate=angular.copy(u.project.endDate),u.projectTeamCopy.push(new e.Model.Resource))},this.getBillingRole=function(e){return null!=e&&u.billingRoles&&u.billingRoles.length>0?u.billingRoles.filter(function(t){return t.id==e})[0].name:null},this.saveProjectResource=function(t){if(t.employeeId&&null!=t.billingRoleId&&""!==t.billingRate&&!isNaN(t.billingRate)){t.disableSave=!0;var i=u.projectTeam.indexOf(t);t.billingRoleId=t.billingRole.id,t.billingRate=t.rate,u.timesheetServices.project[t.id?"update":"save"]({id:u.id,startDate:t.startDate,endDate:t.endDate,action:"projectresources"},t,function(n){t.id||(t.id=n.id),t.disableSave=!1,t.isEditable=!1,t.createBillingRole=!1,t.newBillingRole=new e.Model.BillingRole,u.projectTeamCopy[i]=angular.copy(t),u.notificationService.success("Resource Assigned Successfully.")},function(e){u.notificationService.error("Error in saving resource.")})}else u.notificationService.error("Please fill all the fields")},this.doesEmployeeExist=function(e){return!!u.projectTeam&&u.projectTeam.filter(function(t){return t.employee?t.employee.id==e.id:t.employeeId==e.id}).length>0},this.getFilteredEmployees=function(e){return u.utilityService.getMatchedEmployees(e).then(function(e){var t=[];return angular.forEach(e,function(e){u.doesEmployeeExist(e)||t.push(e)}),t=u._filter("limitTo")(t,8),1!=e.length||e[0].id?t:e})},this.isNumber=function(e){return isNaN(e)},this.saveResource=function(e){e.isSubmitted=!0,!e.createBillingRole||!e.employeeId||e.disableSave||e.billingRole&&0==e.billingRole.id?e.disableSave||e.billingRole&&0==e.billingRole.id||(e.billingRoleId=e.billingRole?e.billingRole.id:null,e.billingRate=e.rate,u.saveProjectResource(e)):(e.disableSave=!0,null==e.newBillingRole.name||null==e.newBillingRole.rate||""==e.newBillingRole.rate||isNaN(e.newBillingRole.rate)?e.newBillingRole.rate&&""!=e.newBillingRole.rate&&isNaN(e.newBillingRole.rate)?(e.disableSave=!1,u.notificationService.error("Please enter valid billing rate")):(e.disableSave=!1,u.notificationService.error("Please fill all the fields")):(u.project.billingRate==u.billingRateUnit.hour.id?e.newBillingRole.hourlyRate=e.newBillingRole.rate:u.project.billingRate==u.billingRateUnit.week.id?e.newBillingRole.weeklyRate=e.newBillingRole.rate:e.newBillingRole.monthlyRate=e.newBillingRole.rate,e.billingRate=e.newBillingRole.rate,e.rate=e.newBillingRole.rate,e.newBillingRole.clientId=u.project.parentGroupId,u.timesheetServices.client.save({id:e.newBillingRole.clientId,action:"clientbillingrole"},e.newBillingRole,function(t){e.newBillingRole.id=t.id,e.billingRoleId=t.id,e.billingRole=angular.copy(e.newBillingRole),u.billingRoles.push(e.newBillingRole),u.saveProjectResource(e)})))},this.editResource=function(e){var t=u.projectTeam.indexOf(e);e.billingRole=u.billingRoles.filter(function(t){return t.id==e.billingRoleId})[0],e.employee={displayName:e.employeeName},e.startDate="string"==typeof e.startDate?e.startDate.stringToDate():e.startDate,e.endDate="string"==typeof e.endDate?e.endDate.stringToDate():e.endDate,u.projectTeam[t].isEditable=!0,u.projectTeam[t].isSubmitted=!1},this.deleteResource=function(e){u.notificationService.information("Deleting resource..");var t=u.projectTeam.indexOf(e);u.timesheetServices.project.delete({action:"projectresources",id:e.id},function(e){e.isDeleted?(u.projectTeam.splice(t,1),u.projectTeamCopy.splice(t,1),u.notificationService.success("Project resource deleted successfully")):u.notificationService.error("An error occurred while deleting resource.")},function(e){u.notificationService.error("An error occurred while deleting resource.")})},this.cancel=function(e){var t=u.projectTeam.indexOf(e);null!=(e=u.projectTeamCopy.find(function(t){return t.id==e.id})).id?e.isEditable=!1:t!=u.projectTeam.length-1&&(u.projectTeam.splice(t,1),u.projectTeamCopy.splice(t,1)),u.projectTeam[t]=angular.copy(e)},this.getBillingRate=function(e){var t=e.billingRole;e.rate=u.project.billingRate==u.billingRateUnit.hour.id?t.hourlyRate:u.project.billingRate==u.billingRateUnit.week.id?t.weeklyRate:t.monthlyRate},this.getBillingRateName=function(){return u.project.billingRate>0?" ("+u.billingRateUnit.getById(u.project.billingRate).title+")":""},this.sortTableData=function(e){u.currentSortingElement=e,u.sortType=e.name,e.sortReverse=!e.sortReverse,u.sortReverse=e.sortReverse}}return t.prototype.$onInit=function(){var e=this;this.id=this._stateParams.id,this._timeout(function(){e.niceScrollOptions=angular.copy(e.appSettings.scrollSettings),e.publicProfile=e.appContext.myPublicProfile,e.manageTeam=e.isProjectEditable||e.projectManager.manageTeam||e.project.accountManagerId==e.publicProfile.id,e.showFinancials=e.isProjectEditable||e.projectManager.viewFinancials,e.manageFinancials=e.isProjectEditable||e.projectManager.manageFinancials||e.project.accountManagerId==e.publicProfile.id,e.loadBillingRoles(e.project.parentGroupId),e.loadTeam()})},Object.defineProperty(t.prototype,"totalCount",{get:function(){return this.projectTeam.filter(function(e){return!!e.id}).length},enumerable:!0,configurable:!0}),t.$inject=["$stateParams","$filter","$q","$timeout","AppSettings","AppContext","TimesheetServices","NotificationService","Utils","BillingRateUnit"],t}();t.ProjectTeamController=p;var u=function(){function e(e,t,i,n,o,r,a){var s=this;this._stateParams=e,this._filter=t,this._timeout=i,this.appSettings=n,this.timesheetServices=o,this.notificationService=r,this.fileDownloadService=a,this.model={},this.submitted=!1,this.initializeGridSettings=function(){s.gridOptions=angular.copy(s.appSettings.gridSettings),s.gridOptions.columnDefs=[{field:"employeeName",displayName:"Employee",cellTemplate:'<div class="ui-grid-cell-contents"><span><a uib-tooltip="{{grid.getCellValue(row,col)}}" tooltip-placement="right" target="_blank" data-ui-sref="employee.summary({id: row.entity.employeeId})">{{grid.getCellValue(row,col)}}</a></span></div>',cellClass:"ui-grid-cell"},{field:"billableHours",displayName:"Billable Hours",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>'},{field:"nonBillableHours",displayName:"Non Billable Hours",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>'},{field:"totalHours",displayName:"Total Hours",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>'}],s.gridOptions.rowHeight=50,s.gridOptions.onRegisterApi=function(e){s.gridApi=e}},this.getResourceWorkHours=function(e,t){e<t?(s.timesheetServices.project.query({action:"resourceworkhours",id:s.id,fromDate:e.dateOnlyString(),toDate:t.dateOnlyString()}).$promise.then(function(e){s.gridOptions.data=e,s._timeout(function(){s.gridDataSource=e})},function(e){s.notificationService.error("Failed to get projects data.")}),s.submitted=!1):s.gridDataSource=[]},this.setCurrentMonthDates=function(){var e=new Date;s.model.fromDate=new Date(e.getFullYear(),e.getMonth(),1),s.model.toDate=new Date((new Date).setHours(23,59,59,999))},this.isDateValid=function(){return new Date(s.model.fromDate).setHours(0,0,0,0)<=new Date(s.model.toDate).setHours(0,0,0,0)},this.refreshData=function(){s.gridOptions.data=s._filter("filter")(s.gridDataSource,s.filterText,!1)},this.exportReport=function(e){s.gridOptions.data.length>0&&s.fileDownloadService.downloadFile("/api/project/export/resourceworkhours?name=resourceworkhours&format="+e+"&projectId="+s.id+"&from="+s.model.fromDate.dateOnlyString()+"&to="+s.model.toDate.dateOnlyString()+"&searchKey="+(s.filterText?s.filterText.trim():""))}}return e.prototype.$onInit=function(){this.id=this._stateParams.id,this.initializeGridSettings(),this.setCurrentMonthDates(),this.getResourceWorkHours(this.model.fromDate,this.model.toDate)},e.$inject=["$stateParams","$filter","$timeout","AppSettings","TimesheetServices","NotificationService","FileDownloadService"],e}();t.ProjectResourceWorkHoursController=u;var d=function(){function e(e,t,i,n,o,r,a){var s=this;this._stateParams=e,this._filter=t,this._timeout=i,this.appSettings=n,this.timesheetServices=o,this.notificationService=r,this.fileDownloadService=a,this.model={},this.submitted=!1,this.initializeGridSettings=function(){s.gridOptions=angular.copy(s.appSettings.gridSettings),s.gridOptions.columnDefs=[{field:"taskName",displayName:"Task",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell"},{field:"billableHours",displayName:"Billable Hours",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>'},{field:"nonBillableHours",displayName:"Non Billable Hours",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>'},{field:"totalHours",displayName:"Total Hours",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>'}],s.gridOptions.rowHeight=50,s.gridOptions.onRegisterApi=function(e){s.gridApi=e}},this.getTaskWorkHours=function(e,t){e<t?(s.timesheetServices.project.query({action:"taskworkhours",id:s.id,fromDate:e.dateOnlyString(),toDate:t.dateOnlyString()}).$promise.then(function(e){s.gridOptions.data=e,s._timeout(function(){s.gridDataSource=e})},function(e){s.notificationService.error("Failed to get projects data.")}),s.submitted=!1):s.gridDataSource=[]},this.setCurrentMonthDates=function(){var e=new Date;s.model.fromDate=new Date(e.getFullYear(),e.getMonth(),1),s.model.toDate=new Date((new Date).setHours(23,59,59,999))},this.isDateValid=function(){return new Date(s.model.fromDate).setHours(0,0,0,0)<=new Date(s.model.toDate).setHours(0,0,0,0)},this.refreshData=function(){s.gridOptions.data=s._filter("filter")(s.gridDataSource,s.filterText,!1)},this.exportReport=function(e){s.gridOptions.data.length>0&&s.fileDownloadService.downloadFile("/api/project/export/taskworkhours?name=taskworkhours&format="+e+"&projectId="+s.id+"&from="+s.model.fromDate.dateOnlyString()+"&to="+s.model.toDate.dateOnlyString()+"&searchKey="+(s.filterText?s.filterText.trim():""))},this.id=this._stateParams.id,this.initializeGridSettings(),this.setCurrentMonthDates(),this.getTaskWorkHours(this.model.fromDate,this.model.toDate)}return e.$inject=["$stateParams","$filter","$timeout","AppSettings","TimesheetServices","NotificationService","FileDownloadService"],e}();t.ProjectTaskWorkHoursController=d;var m=function(){function e(e,t,i){this._stateParams=e,this.appSettings=t,this.timesheetServices=i}return e.$inject=["$stateParams","AppSettings","TimesheetServices"],e}();t.ProjectExpensesController=m,angular.module("xhr").controller("ProjectCreationController",i).controller("ProjectResourceWorkHoursController",u).controller("ProjectTaskWorkHoursController",d),angular.module("xhr").component("projectList",{templateUrl:"/project/index",controller:o,controllerAs:"ctrl"}).component("projectDetails",{templateUrl:"/project/details",controller:r,controllerAs:"ctrl"}).component("projectSummary",{templateUrl:"/project/summary",controller:s,controllerAs:"ctrl",bindings:{projectManager:"=",isProjectEditable:"="}}).component("projectTasks",{templateUrl:"/project/tasks",controller:l,controllerAs:"ctrl",bindings:{project:"=",projectManager:"=",isProjectEditable:"="}}).component("projectTeam",{templateUrl:"/project/team",controller:p,controllerAs:"ctrl",bindings:{project:"=",projectManager:"=",isProjectEditable:"="}}).component("projectBillingDashboard",{templateUrl:"/project/billingdashboard",controller:a,controllerAs:"ctrl",bindings:{project:"=",isProjectEditable:"="}}).component("projectManagers",{templateUrl:"/project/managers",controller:n,controllerAs:"ctrl",bindings:{project:"=",isProjectEditable:"="}}).component("projectTimesheetApprovers",{templateUrl:"/project/timesheetapprovers",controller:"TimesheetSettingsController",bindings:{isProjectEditable:"="}}).component("projectExpenses",{templateUrl:"/project/expenses",controller:m,controllerAs:"ctrl",bindings:{project:"="}})}(e.Controllers||(e.Controllers={}))}(Timesheet||(Timesheet={})),function(e){!function(e){var t=function(){function e(e,t,i,n,o,r,a,s,l,c,p,u,d,m){void 0===u&&(u=!0),void 0===d&&(d=!0),void 0===m&&(m=!0),this.id=e,this.name=t,this.shortName=i,this.accountManagerId=n,this.code=o,this.description=r,this.billingRateUnit=a,this.billingCurrencyId=s,this.currencyCode=l,this.mailingAddress=c,this.billingAddress=p,this.hourlyBilled=u,this.weeklyBilled=d,this.monthlyBilled=m}return e.prototype.getAddress=function(){if(this.mailingAddress){if(this.mailingAddress.state&&this.mailingAddress.countryCode)return this.mailingAddress.state+", "+this.mailingAddress.countryCode;if(this.mailingAddress.state)return this.mailingAddress.state;if(this.mailingAddress.countryCode)return this.mailingAddress.countryCode}return null},e}();e.Client=t;var i=function(){return function(e){this.clientId=e.clientId,this.clientName=e.clientName}}();e.ClientBilling=i;var n=function(){return function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g){void 0===o&&(o=v.InProgress),void 0===l&&(l=S.NoBilling),void 0===c&&(c=!1),void 0===p&&(p=!1),void 0===u&&(u=!1),void 0===d&&(d=!1),void 0===m&&(m=!1),void 0===y&&(y=!1),void 0===h&&(h=C.Hour),void 0===f&&(f=0),this.id=e,this.name=t,this.code=i,this.parentGroupId=n,this.status=o,this.startDate=r,this.endDate=a,this.description=s,this.billingType=l,this.assignedToAll=c,this.isBillable=p,this.timesheetCommentsRequired=u,this.allowNonBillableHours=d,this.trackTimeForTask=m,this.enableTimer=y,this.billingRate=h,this.accountManagerId=f,this.timesheetSettings=g}}();e.Project=n;var o=function(){return function(e,t,i,n,o,r,a,s,l){void 0===s&&(s=!0),void 0===l&&(l=!0),this.id=e,this.projectId=t,this.name=i,this.billable=n,this.billableType=o,this.startDate=r,this.endDate=a,this.isLastRow=s,this.isEditable=l}}();e.Task=o;var r=function(){return function(e,t,i,n,o,r,a){void 0===r&&(r=!0),void 0===a&&(a=!0),this.id=e,this.projectId=t,this.employeeId=i,this.billingRoleId=n,this.billingRate=o,this.isLastRow=r,this.isEditable=a}}();e.Resource=r;var a=function(){return function(e,t,i,n,o,r,a,s,l,c){this.id=e,this.projectId=t,this.employeeId=i,this.employeeName=n,this.manageTasks=o,this.manageTeam=r,this.approveTimesheets=a,this.viewFinancials=s,this.manageFinancials=l,this.projectManager=c}}();e.Manager=a;var s=function(){return function(e,t,i,n,o,r){void 0===o&&(o=!0),void 0===r&&(r=!0),this.id=e,this.name=t,this.email=i,this.phone=n,this.isEditable=o,this.isLastRow=r}}();e.ClientContact=s;var l=function(){return function(e,t,i,n,o,r,a){void 0===r&&(r=!0),void 0===a&&(a=!0),this.id=e,this.name=t,this.hourlyRate=i,this.weeklyRate=n,this.monthlyRate=o,this.isEditable=r,this.isLastRow=a}}();e.BillingRole=l;var c=function(){return function(e,t,i,n,o){void 0===i&&(i=!0),void 0===n&&(n=!0),void 0===o&&(o=!0),this.billingCurrencyId=e,this.billingRoles=t,this.hourlyBilled=i,this.weeklyBilled=n,this.monthlyBilled=o}}();e.BillingInfo=c;var p=function(){return function(e,t,i,n,o,r,a,s,l){void 0===i&&(i=[]),void 0===n&&(n=[]),void 0===o&&(o=0),void 0===r&&(r=0),this.employeeId=e,this.employeeName=t,this.tasks=i,this.timesheets=n,this.currentTimesheetIndex=o,this.order=r,this.weeklyOff=a,this.orgHolidays=s,this.employeeLeaveRequests=l}}();e.ProjectResource=p;var u=function(){return function(){}}();e.TaskRepositoryItem=u;var d=function(){return function(e){this.startTime={},this.endTime={},this.timesheetHours={},this.timesheetComments={},this.approverLogEntry={},this.timesheetId={},this.selected=!1,this.showComments=!1,this.sequenceNumber=0,this.billingClassificationId=0,this.id=e.taskId,this.projectDetails=e.projectDetails,this.taskDetails=this.projectDetails.projectTasks.find(function(t){return t.id==e.taskId}),this.nextApproverId=e.nextApproverId,this.approverId=e.approverId,this.sequenceNumber=e.sequenceNumber,this.billingClassificationId=e.billingClassificationId}}();e.TimesheetTask=d;var m=function(){return function(e,t,i,n,o,r,a,s,l,c,p){this.id=e,this.projectId=t,this.taskId=i,this.startTime=n,this.endTime=o,this.totalHours=r,this.date=a,this.comments=s,this.note=l,this.approverLogEntry=c,this.sequenceNumber=p}}();e.TimesheetEntry=m;var y=function(){return function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,g,v,S,C,b,P,T,D,I,A,E,R,x,M){void 0===h&&(h=new Date),void 0===g&&(g=new Date),void 0===v&&(v=new Date),void 0===S&&(S=new f),void 0===C&&(C=null),void 0===D&&(D=new w),this.id=e,this.title=t,this.clientId=i,this.clientName=n,this.clientContactId=o,this.clientContactName=r,this.billToAddress=a,this.legalEntityId=s,this.legalEntityName=l,this.legalEntityAddress=c,this.legalEntityLogo=p,this.invoiceHeader=u,this.invoiceNumber=d,this.poNumber=m,this.paymentInstructions=y,this.fromDate=h,this.toDate=g,this.dateInvoiced=v,this.paymentTerm=S,this.dueDate=C,this.datePaid=b,this.status=P,this.paymentStatus=T,this.currency=D,this.subtotal=I,this.totalTaxAmount=A,this.discountPercentage=E,this.totalDiscountAmount=R,this.totalAmount=x,this.invoiceLineItems=M,this.currency=new w,this.invoiceLineItems=new Array}}();e.Invoice=y;var h=function(){return function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S,C,w,b,P,T){void 0===P&&(P=!1),void 0===T&&(T=!1),this.id=e,this.projectId=t,this.invoiceId=i,this.projectName=n,this.projectCode=o,this.lineItemTitle=r,this.taskId=a,this.taskName=s,this.employeeId=l,this.employeeName=c,this.isOtherLineItem=p,this.billingRoleId=u,this.billingRole=d,this.itemDescription=m,this.lineItemGroupBy=y,this.ratePerHour=h,this.totalHours=f,this.taxGroupId=g,this.totalAmountWithoutTax=v,this.taxPercentage=S,this.totalTax=C,this.totalAmount=w,this.taxGroup=b,this.isHoursOverridden=P,this.isRateOverridden=T}}();e.InvoiceLineItem=h;var f=function(){return function(e,t,i,n,o,r){this.id=e,this.name=t,this.termType=i,this.numberOfDays=n,this.dayOfMonth=o,this.daysToDueDate=r}}();e.PaymentTerm=f;var g=function(){return function(e,t,i,n,o){this.id=e,this.legalEntityId=t,this.code=i,this.description=n,this.taxComponents=o}}();e.InvoiceTaxGroup=g;var v,S,C,w=function(){return function(e,t,i,n){this.id=e,this.code=t,this.name=i,this.symbol=n}}();e.Currency=w,function(e){e[e.InProgress=0]="InProgress",e[e.Completed=1]="Completed",e[e.Canceled=2]="Canceled"}(v=e.ProjectStatus||(e.ProjectStatus={})),function(e){e[e.NoBilling=0]="NoBilling",e[e.FixedBid=1]="FixedBid",e[e.TimeAndMaterials=2]="TimeAndMaterials"}(S=e.BillingType||(e.BillingType={})),function(e){e[e.Hour=0]="Hour",e[e.Week=1]="Week",e[e.Month=2]="Month"}(C=e.BillingRateUnit||(e.BillingRateUnit={})),function(e){e[e.NonBillable=0]="NonBillable",e[e.Billable=1]="Billable",e[e.Any=2]="Any"}(e.TaskBillingType||(e.TaskBillingType={})),function(e){e[e.Created=0]="Created",e[e.Sent=1]="Sent",e[e.Cancelled=2]="Cancelled"}(e.InvoiceStatus||(e.InvoiceStatus={})),function(e){e[e.Due=0]="Due",e[e.PartialPaid=1]="PartialPaid",e[e.PaidInFull=2]="PaidInFull"}(e.PaymentStatus||(e.PaymentStatus={})),function(e){e[e.FixedPeriod=0]="FixedPeriod",e[e.FixedDayInMonth=1]="FixedDayInMonth"}(e.PaymentTermType||(e.PaymentTermType={}))}(e.Model||(e.Model={}))}(Timesheet||(Timesheet={})),appRoot.controller("BillingController",["$scope","$state","$q","$rootScope","TimesheetServices","AppSettings","$uibModal",function(e,t,i,n,o,r,a){e.vm={},e.vm.niceScrollOptions=angular.copy(r.scrollSettings),e.vm.datepickerOptions=angular.copy(r.datepickerOptions),e.$on("$stateChangeSuccess",function(i,n,o,r,a){e.vm.state=t.current});e.createInvoice=function(t){e.modalInstance=a.open({templateUrl:"createInvoice",controller:"CreateInvoiceController",resolve:{ClientId:function(){return t}}})},o.billing.query({action:"clientbilling"},function(t){e.billingDetailsList=t},function(e){console.log("Failed to get clients data.")})}]),appRoot.controller("ProjectBillingController",["$scope","$state","$q","$rootScope","$stateParams","TimesheetServices","AppSettings",function(e,t,i,n,o,r,a){e.vm={},e.vm.id=o.id,e.$on("$stateChangeSuccess",function(i,n,o,r,a){e.vm.state=t.current});e.projectBillingOptions=angular.copy(a.gridSettings),e.projectBillingOptions.columnDefs=[{field:"projectName",displayName:"PROJECT",cellTemplate:'<div class="ui-grid-cell-contents"><span><a href="/old/#/invoice/client/{{row.entity.clientId}}/add">{{grid.getCellValue(row,col)}}</a></span></div>',cellClass:"ui-grid-cell"},{field:"billableHours",displayName:"BILLABLE HOURS",cellClass:"ui-grid-cell"},{field:"nonBillableHours",displayName:"NON BILLABLE HOURS",cellClass:"ui-grid-cell"},{field:"totalHours",displayName:"TOTAL HOURS",cellClass:"ui-grid-cell"},{field:"totalAmount",displayName:"TOTAL AMOUNT",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)| currency}}</span></div>',cellClass:"ui-grid-cell"}],e.projectBillingOptions.data="projectBilling",e.projectBillingOptions.rowHeight=50,r.billing.query({id:e.vm.id,action:"projectBilling"},function(t){e.projectBilling=t},function(e){console.log("Failed to get clients data.")})}]),function(e){!function(t){var i=function(){function e(){}return e.$inject=[],e}();t.TimesheetBillingController=i;var n=function(){function e(){}return e.$inject=[],e}();t.TimesheetBillingSummaryController=n;var o=function(){function e(e,t,i,n,o,r,a){var s=this;this._modalService=e,this._filter=t,this.uiGridConstants=i,this.timesheetServices=n,this.appSettings=o,this.uiGridGroupingConstants=r,this.uiGridExtensions=a,this.initializeGridSettings=function(){s.gridOptions=angular.copy(s.appSettings.gridSettings),s.gridOptions.showColumnFooter=!0,s.gridOptions.columnDefs=[{field:"clientName",displayName:"Client",cellTemplate:'<div class="ui-grid-cell-contents"><span data-uib-tooltip="{{ grid.getCellValue(row,col) }}" data-tooltip-placement="right" data-tooltip-append-to-body="true">{{ grid.getCellValue(row,col) }}</span></div>',enableGrouping:!1},{field:"billableHours",displayName:"Billable Hours",cellClass:"ui-grid-cell",treeAggregationType:s.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=s.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1},{field:"nonBillableHours",displayName:"Non Billable Hours",cellClass:"ui-grid-cell",treeAggregationType:s.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=s.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1},{field:"totalHours",displayName:"Total Hours",cellClass:"ui-grid-cell",cellFilter:"number: 2",treeAggregationType:s.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=s.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1},{field:"notInvoicedHours",displayName:"Not Invoiced Hours",cellClass:"ui-grid-cell",cellFilter:"number: 2",treeAggregationType:s.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=s.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1},{field:"lastInvoiced",displayName:"Last Invoiced On",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="!row.entity.lastInvoiced">Never Invoiced</span><span data-ng-if="row.entity.lastInvoiced">{{ row.entity.lastInvoiced | date:"mediumDate" }}</span></div>',enableGrouping:!1},{displayName:"Actions",name:"Actions",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span><a href="" data-ng-click="grid.appScope.openInvoice(row.entity)">Invoice Now</a></span></div>',enableGrouping:!1}],s.gridOptions.data=s.billingDetailsList,s.gridOptions.appScopeProvider=s},this.search=function(){s.gridOptions.data=s._filter("filter")(s.billingDetailsList,s.filterText,!1)}}return e.prototype.$onInit=function(){var e=this;this.timesheetServices.billing.query({action:"clientbilling"},function(t){e.billingDetailsList=t,e.initializeGridSettings()})},e.prototype.openInvoice=function(e){this._modalService.open({templateUrl:"timesheetbilling/createinvoice",windowClass:"full-screen-modal dark-modal action-content invoice-modal no-scroll-x",controller:"CreateTimesheetInvoiceController",controllerAs:"ctrl",resolve:{Client:function(){return e},Invoice:function(){return null}}})},e.$inject=["$uibModal","$filter","uiGridConstants","TimesheetServices","AppSettings","uiGridGroupingConstants","UiGridExtensions"],e}();t.TimesheetToInvoiceController=o;var r=function(){function t(e,t,i,n,o,r,a,s,l){var c=this;this._modalService=e,this._filter=t,this.appSettings=i,this.timesheetServices=n,this.dialogs=o,this.notificationService=r,this.uiGridGroupingConstants=a,this.uiGridExtensions=s,this.fileDownloadService=l,this.initializeGridSettings=function(){c.gridOptions=angular.copy(c.appSettings.gridSettings),c.gridOptions.showColumnFooter=!0,c.gridOptions.columnDefs=[{field:"invoiceNumber",displayName:"Invoice Number",groupingShowAggregationMenu:!1},{field:"clientName",displayName:"Client",groupingShowAggregationMenu:!1},{field:"title",displayName:"Invoice Name",groupingShowAggregationMenu:!1},{field:"invoicePeriod",displayName:"Invoice Period",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.fromDate | date: "MMM dd, yyyy"}} - {{row.entity.toDate | date: "MMM dd, yyyy"}}</span></div>',width:200,enableGrouping:!1,sortingAlgorithm:function(e,t,i,n,o){var r=new Date(i.entity.fromDate),a=new Date(n.entity.fromDate);return r==a?0:r<a?-1:1}},{field:"totalAmount",displayName:"Invoice Amount",treeAggregationType:c.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=c.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1,cellFilter:"number: 2"},{field:"dueDate",displayName:"Due Date",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{ grid.getCellValue(row,col) | date: "MMM dd, yyyy" }}</span></div>',enableGrouping:!1},{field:"status",displayName:"Status",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-class="{ \'draft-text\' : row.entity.status == 0, \'sent-text\' : row.entity.status == 1 }">{{ row.entity.status == 0 ? "Drafted" : "Sent" }}</span></div>',filters:[],enableGrouping:!1},{displayName:"Actions",name:"Actions",cellTemplate:'<div class="ui-grid-cell-contents"><span class="icon-pencil5" uib-tooltip="Change" data-ng-click="grid.appScope.changeInvoiceStatus(row.entity)" tooltip-append-to-body="true" tooltip-class="information-tooltip tooltip-grey" tooltip-placement="top"></span><span class="icon-pencil5 icon-file-download horizontal-margin vertical-margin inline-block" uib-tooltip="Download PDF" data-ng-click="grid.appScope.downloadInvoice(row.entity)" tooltip-append-to-body="true" tooltip-class="information-tooltip tooltip-grey" tooltip-placement="top"></span><span class="icon-pencil5 icon-cancel-circle2 vertical-margin inline-block" uib-tooltip="Cancel" data-ng-click="grid.appScope.cancelInvoice(row.entity)" tooltip-append-to-body="true" tooltip-class="information-tooltip tooltip-grey" tooltip-placement="top"></span></div>',filters:[],enableGrouping:!1}],c.gridOptions.data=c.invoicesDue,c.gridOptions.appScopeProvider=c,c.gridOptions.onRegisterApi=function(e){c.gridApi=e}},this.search=function(){c.gridOptions.data=c._filter("filter")(c.invoicesDue,c.filterText,!1)},this.downloadInvoice=function(e){c.fileDownloadService.downloadFile("/api/billing/export/invoice?name=timesheetinvoice&format=pdfform&invoiceId="+e.id+"&clientId="+e.clientId)},this.cancelInvoice=function(e){c.dialogs.confirm("Please Confirm","Do you want to cancel this invoice?").result.then(function(){c.timesheetServices.billing.update({action:"cancelinvoice",id:e.id},e,function(t){var i=c.invoicesDue.map(function(e){return e.id}).indexOf(e.id);c.invoicesDue.splice(i,1),c.notificationService.success("Invoice cancelled successfully")})})}}return t.prototype.$onInit=function(){var t=this;this.timesheetServices.billing.query({action:"invoicesdue"},function(e){t.invoicesDue=e,t.initializeGridSettings()}),this.timesheetServices.billing.query({action:"clientbilling"},function(i){t.clients=i&&i.length?i.map(function(t){return new e.Model.ClientBilling(t)}):[]})},t.prototype.changeInvoiceStatus=function(t){var i=this;this._modalService.open({templateUrl:"timesheetbilling/invoicestatus",keyboard:!1,windowClass:"side-screen-modal",controller:a,controllerAs:"ctrl",resolve:{Invoice:function(){return t},Client:function(){return i.clients.find(function(e){return e.clientId==t.clientId})}}}).result.then(function(t){if(t){var n=i.invoicesDue.map(function(e){return e.id}).indexOf(t.id);t.paymentStatus==e.Model.PaymentStatus.PaidInFull?i.invoicesDue.splice(n,1):i.invoicesDue[n]=t}})},t.$inject=["$uibModal","$filter","AppSettings","TimesheetServices","dialogs","NotificationService","uiGridGroupingConstants","UiGridExtensions","FileDownloadService"],t}();t.TimesheetInvoicesDueController=r;var a=function(){function t(t,i,n,o,r,a,s){var l=this;this._modalService=t,this._modalInstance=i,this.timesheetServices=n,this.notificationService=o,this.invoiceStatus=r,this.Invoice=a,this.subContinentCurrencies=["INR","BDT","LKR","NPR","PKR","MMK"],this.vm={},this.saveInvoiceStatus=function(){var t=!1;l.vm.invoiceStatus==l.invoiceStatus.paidInFull.id?(l.invoice.status=e.Model.InvoiceStatus.Sent,l.invoice.paymentStatus=e.Model.PaymentStatus.PaidInFull,l.invoice.datePaid=l.vm.datePaid.dateOnlyString(),t=!0):(l.invoice.status=e.Model.InvoiceStatus[l.invoiceStatus.getById(l.vm.invoiceStatus).name],l.invoice.paymentStatus=e.Model.PaymentStatus.Due,l.invoice.datePaid=null),t&&!l.vm.datePaid||l.timesheetServices.billing.update({action:"updateinvoicestatus",id:l.invoice.id},{invoice:l.invoice},function(e){l.notificationService.success("Invoice status updated successfully"),l._modalInstance.close(l.invoice)})},this.getCultureSpecificNumber=function(e){"string"==typeof e&&(e=parseFloat(e));var t=l.invoice.currency&&l.invoice.currency.code?l.invoice.currency.code:l.client.currencyCode||"INR",i="en-US";return l.subContinentCurrencies.indexOf(t.trim())>=0&&(i="en-IN"),e?parseFloat(e.toFixed(2)).toLocaleString(i):"0.00"},this.client=angular.copy(s),this.invoice=angular.copy(a),this.vm.invoiceStatus=this.invoice.paymentStatus||this.invoice.status,this.vm.datePaid=this.invoice.datePaid?new Date(this.invoice.datePaid.toString()):new Date,this.vm.dateInvoiced=new Date(this.invoice.dateInvoiced.toString())}return t.prototype.openInvoice=function(){var e=this;this._modalService.open({templateUrl:"timesheetbilling/createinvoice",windowClass:"full-screen-modal dark-modal action-content invoice-modal no-scroll-x",controller:"CreateTimesheetInvoiceController",controllerAs:"ctrl",resolve:{Client:function(){return e.client},Invoice:function(){return e.invoice}}}).result.then(function(t){e._modalInstance.close(t)})},t.$inject=["$uibModal","$uibModalInstance","TimesheetServices","NotificationService","TimesheetInvoiceStatus","Invoice","Client"],t}();t.InvoiceStatusController=a;var s=function(){function e(e,t,i,n,o,r){var a=this;this._filter=e,this.appSettings=t,this.timesheetServices=i,this.uiGridGroupingConstants=n,this.uiGridExtensions=o,this.fileDownloadService=r,this.initializeGridSettings=function(){a.gridOptions=angular.copy(a.appSettings.gridSettings),a.gridOptions.showColumnFooter=!0,a.gridOptions.columnDefs=[{field:"invoiceNumber",displayName:"Invoice Number",groupingShowAggregationMenu:!1},{field:"clientName",displayName:"Client",groupingShowAggregationMenu:!1},{field:"title",displayName:"Invoice Name",groupingShowAggregationMenu:!1},{field:"invoicePeriod",displayName:"Invoice Period",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.fromDate | date: "MMM dd, yyyy"}} - {{row.entity.toDate | date: "MMM dd, yyyy"}}</span></div>',width:200,enableGrouping:!1,sortingAlgorithm:function(e,t,i,n,o){var r=new Date(i.entity.fromDate),a=new Date(n.entity.fromDate);return r==a?0:r<a?-1:1}},{field:"totalAmount",displayName:"Invoice Amount",cellFilter:"number: 2",type:"number",treeAggregationType:a.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=a.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1},{field:"dueDate",displayName:"Due Date",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{ grid.getCellValue(row,col) | date: "MMM dd, yyyy" }}</span></div>',groupingShowAggregationMenu:!1},{field:"status",displayName:"Status",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-class="{ \'cancelled-text\' : row.entity.status == 2, \'paid-text\' : row.entity.paymentStatus == 2 }">{{ row.entity.status == 2 ? "Cancelled" : row.entity.paymentStatus == 2 ? "Paid" : "" }}</span></div>',enableGrouping:!1},{field:"datePaid",displayName:"Date Paid",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{ grid.getCellValue(row,col) | date: "MMM dd, yyyy" }}</span></div>',enableGrouping:!1},{displayName:"Actions",name:"Actions",cellTemplate:'<div class="ui-grid-cell-contents"><span class="icon-pencil5 icon-file-download horizontal-margin vertical-margin inline-block" uib-tooltip="Download PDF" data-ng-click="grid.appScope.downloadInvoice(row.entity)" tooltip-placement="top"></span></div>',enableGrouping:!1}],a.gridOptions.data=a.invoicesClosed,a.gridOptions.appScopeProvider=a},this.search=function(){a.gridOptions.data=a._filter("filter")(a.invoicesClosed,a.filterText,!1)},this.downloadInvoice=function(e){a.fileDownloadService.downloadFile("/api/billing/export/invoice?name=timesheetinvoice&format=pdfform&invoiceId="+e.id+"&clientId="+e.clientId)},this.timesheetServices.billing.query({action:"invoicesclosed"},function(e){a.invoicesClosed=e,a.initializeGridSettings()})}return e.$inject=["$filter","AppSettings","TimesheetServices","uiGridGroupingConstants","UiGridExtensions","FileDownloadService"],e}();t.TimesheetInvoicesClosedController=s;var l=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S,C){var w=this;this._q=t,this._filter=i,this._timeout=n,this._state=o,this._scope=r,this._modal=a,this._modalInstance=s,this.timesheetServices=l,this.appSettings=c,this.appContext=p,this.orgSettingServices=u,this.lineItemType=d,this.timesheetSettingsService=m,this.notificationService=y,this.sharedModel=h,this.lookupServices=f,this.formDownloadService=g,this.dialogs=v,this.invoice=S,this.vm={},this.model=new e.Model.Invoice,this.clients=[],this.paymentTerms=[],this.legalEntities=[],this.clientContacts=[],this.invoiceTaxes=[],this.projects=[],this.tasks=[],this.resources=[],this.billingRoles=[],this.selectedProjects=[],this.invoiceTaskSummary=[],this.invoiceLineItems=[],this.otherLineItems=[],this.isDisabled=!1,this.subContinentCurrencies=["INR","BDT","LKR","NPR","PKR","MMK"],this.goToNextStep=function(){!w.generateInvoiceForm||w.generateInvoiceForm.generateInvoiceForm.$valid||w.currentStep!=w.wizardSteps[0]?w.vm.paymentTermId&&w.invoiceTaxes.length?(w.selectedProjects=w.projects.filter(function(e){return e.selected}),w.currentStep=w.wizardSteps[1],w.groupLineItems()):w.invoiceTaxes.length?w.dialogs.notify("Application notification","No payment terms have been created."+(w.appContext.isGlobalAdmin?' Please create one from <a href="/old/#/settings/timesheet/invoicing/paymentterms">here</a>.':""),{keyboard:!1,backdrop:"static"}):w.dialogs.notify("Application notification","No taxes have been created."+(w.appContext.isGlobalAdmin?' Please create one from <a href="/old/#/settings/timesheet/invoicing/taxes">here</a>.':""),{keyboard:!1,backdrop:"static"}):w.notificationService.error("Please fill required fields")},this.goToPreviousStep=function(){w.currentStep=w.wizardSteps[0]},this.projectChecked=function(){w.vm.allProjectsSelected=w.projects.filter(function(e){return e.selected}).length==w.projects.length},this.selectAllProjects=function(e){w.projects.forEach(function(t){t.selected=e})},this.setCurrentMonthDates=function(){var e=new Date;w.invoice&&w.invoice.fromDate||(w.model.fromDate=new Date(e.getFullYear(),e.getMonth(),1),w.model.toDate=new Date)},this.getTaxGroups=function(){w.timesheetSettingsService.getTaxGroups(w.model.legalEntityId).then(function(e){w.vm.taxGroups=e,w.vm.taxGroups.push({code:"No tax",id:0,taxComponents:[]})},function(e){w.notificationService.error("Error in getting tax groups.")})},this.getInvoiceData=function(){w._q.all([w.timesheetServices.billing.query({action:"paymentterms"}).$promise,w.timesheetServices.billing.query({action:"invoicetaxes",id:w.model.legalEntityId}).$promise,w.timesheetServices.project.query({action:"projecttasks"}).$promise,w.timesheetServices.project.query({action:"allprojectresources"}).$promise,w.lookupServices.lookup.query({id:"countries"})]).then(function(e){w.paymentTerms=e[0],w.invoiceTaxes=e[1],w.tasks=e[2],w.resources=e[3],w.vm.countries=e[4],w.model.paymentTerm.id&&null==w.paymentTerms.find(function(e){return e.id==w.model.paymentTerm.id})&&w.paymentTerms.push(w.model.paymentTerm),w.vm.paymentTermId=w.model.paymentTerm&&w.model.paymentTerm.id?w.model.paymentTerm.id:w.paymentTerms.length?w.paymentTerms[0].id:null,w.model.id?(w.model.dateInvoiced=new w.sharedModel.DateWithZeroTime(w.model.dateInvoiced),w.model.dueDate=new Date(w.model.dueDate.toString())):w.calculateDueDate(w.paymentTerms.find(function(e){return e.id==w.vm.paymentTermId})),w.vm.areTaxesAndTermsFetched=!0,w.getProjectHours(),w.getClientContacts(),w.getClientBillingRoles()})},this.getClientContacts=function(){w.timesheetServices.billing.query({action:"clientcontacts",id:w.model.clientId},function(e){w.clientContacts=e})},this.getClientBillingRoles=function(){w.timesheetServices.client.query({id:w.model.clientId,action:"clientbillingroles"},function(e){w.billingRoles=e})},this.getInvoiceLineItems=function(){var e=w.model.id?{action:"invoicelineitems",id:w.model.id}:{action:"clientlineitems",id:w.model.clientId,fromDate:w.model.fromDate.dateOnlyString(),toDate:w.model.toDate.dateOnlyString()};w.timesheetServices.billing.get(e,function(e){w.invoiceLineItems=angular.copy(e.invoiceLineItems),w.model.invoiceNumber=w.model.invoiceNumber||e.defualtInvoiceNumber,w.model.id?(w.vm.lineItemGroupingType=w.invoiceLineItems[0].lineItemGroupBy,w.invoiceLineItems.forEach(function(e){e.taxGroupId&&null==w.invoiceTaxes.find(function(t){return t.id==e.taxGroupId})&&w.invoiceTaxes.push(e.taxGroup)}),w.goToNextStep()):w.getProjectTasks()})},this.getProjectHours=function(){w.timesheetServices.billing.query({action:"projectinvoicehours",id:w.model.clientId,fromDate:w.model.fromDate.dateOnlyString(),toDate:w.model.toDate.dateOnlyString()},function(e){w.projects=w._filter("orderBy")(e,"name",!1),w.vm.allProjectsSelected=!1,w.getInvoiceLineItems()})},this.getProjectTasks=function(){w.timesheetServices.billing.query({action:"invoicetasksummary",fromDate:w.model.fromDate.dateOnlyString(),toDate:w.model.toDate.dateOnlyString(),clientId:w.client.id},function(e){w.invoiceTaskSummary=e})},this.updateClient=function(){w.client=w.clients.find(function(e){return e.id==w.model.clientId}),w.getProjectHours(),w.getClientContacts(),w.getClientBillingRoles(),w.model.currency=w.loadCurrency(w.client.billingCurrencyId)},this.updateLegalEntity=function(){w.legalEntity=w.legalEntities.find(function(e){return e.id==w.model.legalEntityId})},this.groupLineItems=function(){var e=w._filter("groupBy")(w.tasks,"projectId"),t=w._filter("groupBy")(w.resources,"projectId");if(w.model.id){w.otherLineItems=w.invoiceLineItems.filter(function(e){return e.isOtherLineItem&&!e.projectId}),w.otherLineItems.forEach(function(e){return w.calculateTotalLineItemAmount(e)});var i=angular.copy(w.invoiceLineItems);w.selectedProjects=w.projects.filter(function(e){return w.invoiceLineItems.map(function(e){return e.projectId}).indexOf(e.projectId)>-1});w._filter("groupBy")(i,w.lineItemType.getById(w.vm.lineItemGroupingType).propertyKey);w.selectedProjects.forEach(function(i){i.tasks=e[i.projectId],i.resources=t[i.projectId],i.hoursLineItems=w.invoiceLineItems.filter(function(e){return!e.isOtherLineItem&&e.projectId==i.projectId}),i.otherLineItems=w.invoiceLineItems.filter(function(e){return e.isOtherLineItem&&e.projectId==i.projectId}),i.hoursLineItems.forEach(function(e){return w.calculateTotalLineItemAmount(e)}),i.otherLineItems.forEach(function(e){return w.calculateTotalLineItemAmount(e)})})}else w.initializeLineItems(e,t)},this.initializeLineItems=function(t,i){var n=w._filter("groupBy")(w.invoiceTaskSummary,"projectId");w.selectedProjects.forEach(function(o){o.tasks=t[o.projectId],o.resources=i[o.projectId];var r=w._filter("groupBy")(n[o.projectId],w.lineItemType.getById(w.vm.lineItemGroupingType).propertyKey),a=new Array;angular.forEach(r,function(t,i){var n=new e.Model.InvoiceLineItem;n[w.lineItemType.getById(w.vm.lineItemGroupingType).propertyKey]=i?parseInt(i):0,n.totalHours=t.map(function(e){return e.approvedUnInvoicedHours}).reduce(function(e,t){return e+t}),n.ratePerHour=w.vm.lineItemGroupingType==w.lineItemType.task.id||w.vm.lineItemGroupingType==w.lineItemType.billingRole.id?0!=n.totalHours?t.map(function(e){return e.actualCost}).reduce(function(e,t){return e+t})/n.totalHours:0:t[0].billingRate,w.calculateTotalLineItemAmount(n),n.totalHours>0&&a.push(n)}),o.hoursLineItems=a})},this.addLineItem=function(t,i){void 0===i&&(i=!1),w.submit=!1;var n=new e.Model.InvoiceLineItem;n.isOtherLineItem=i,t?(t.hoursLineItems&&angular.isArray(t.hoursLineItems)||(t.hoursLineItems=[]),t.otherLineItems&&angular.isArray(t.otherLineItems)||(t.otherLineItems=[]),n.projectId=t.id,n.projectCode=t.projectCode,n.projectName=t.projectName,n.taskId=t.tasks&&t.tasks.length?t.tasks[0].id:0,n.employeeId=t.resources&&t.resources.length?t.resources[0].employeeId:0,n.billingRoleId=w.billingRoles&&w.billingRoles.length?w.billingRoles[0].id:0,i?t.otherLineItems.push(n):t.hoursLineItems.push(n)):w.otherLineItems.push(n),w.calculateTotalLineItemAmount(n)},this.addClientContact=function(){w.vm.newClientContact=new e.Model.ClientContact,w._modalInstance=w._modal.open({templateUrl:"newClientContact",scope:w._scope})},this.addClientAddress=function(){w.vm.newClient=angular.copy(w.client),w._modalInstance=w._modal.open({templateUrl:"clientAddress",scope:w._scope})},this.saveClientContact=function(){w.clientForm.clientContactForm.$valid&&w.timesheetServices.client.save({id:w.client.id,action:"clientContact"},w.vm.newClientContact,function(e){w.vm.newClientContact.id=e.id,w.notificationService.success("New client contact has been added"),w.clientContacts.push(w.vm.newClientContact),w._modalInstance.close(w.vm.newClientContact)})},this.saveClientAddress=function(){w.clientForm.clientAddressForm.$valid&&w.timesheetServices.client.update({id:w.client.id,action:"default"},w.vm.newClient,function(e){w.client.billingAddress=w.vm.newClient.billingAddress,w._modalInstance.close()})},this.deleteLineItem=function(e,t,i){void 0===i&&(i=!1),e?i?e.otherLineItems.splice(t,1):e.hoursLineItems.splice(t,1):w.otherLineItems.splice(t,1)},this.calculateDueDate=function(t){w.paymentTerms.length&&(t||(t=w.paymentTerms[0]),w.model.paymentTerm=t,"string"==typeof w.model.dateInvoiced&&(w.model.dateInvoiced=new w.sharedModel.DateWithZeroTime(w.model.dateInvoiced)),w.model.dueDate=angular.copy(new w.sharedModel.DateWithZeroTime(w.model.dateInvoiced)),t.termType==e.Model.PaymentTermType.FixedPeriod?w.model.dueDate.setHours(w.model.dueDate.getHours()+24*t.numberOfDays):(w.model.dueDate.setDate(t.dayOfMonth),w.model.dateInvoiced.getDate()>t.dayOfMonth&&w.model.dueDate.setMonth(w.model.dueDate.getMonth()+1),Math.round(Math.abs((w.model.dateInvoiced.getTime()-w.model.dueDate.getTime())/864e5))<=t.daysToDueDate&&w.model.dueDate.setMonth(w.model.dueDate.getMonth()+1)))},this.setPaymentTerm=function(){w.model.paymentTerm=angular.copy(w.paymentTerms.find(function(e){return e.id==w.vm.paymentTermId})),w.calculateDueDate(w.model.paymentTerm)},this.calculateTotalLineItemAmount=function(e){0==e.taxGroupId?e.taxGroup=null:null==e.taxGroupId&&e.id?(e.taxGroupId=0,e.taxGroup&&(e.taxGroupId=e.taxGroup.id)):null!=e.taxGroupId||e.id||(e.taxGroupId=0);var t=w.vm.taxGroups.find(function(t){return t.id==e.taxGroupId});e.taxPercentage=t&&t.taxComponents.length?t.taxComponents.map(function(e){return e.taxRate}).reduce(function(e,t){return e+t}):0,e.totalAmountWithoutTax=e.ratePerHour*e.totalHours,e.totalTax=e.totalAmountWithoutTax*(e.taxPercentage/100),e.totalAmount=e.totalAmountWithoutTax+e.totalTax},this.isNumber=function(e){return w.vm.isInvoiceValid=null!=e&&!isNaN(e)&&""!==e},this.getCultureSpecificNumber=function(e){"string"==typeof e&&(e=parseFloat(e));var t=w.model.currency&&w.model.currency.code?w.model.currency.code:w.client.currencyCode||"INR",i="en-US";return w.subContinentCurrencies.indexOf(t.trim())>=0&&(i="en-IN"),e?parseFloat(e.toFixed(2)).toLocaleString(i):"0.00"},this.getAllLineItems=function(){var e=new Array;return w.otherLineItems&&w.otherLineItems.length&&w.otherLineItems.forEach(function(t){t.lineItemGroupBy=w.vm.lineItemGroupingType,e.push(t)}),w.selectedProjects.forEach(function(t){t.hoursLineItems&&t.hoursLineItems.length&&t.hoursLineItems.forEach(function(i){i.lineItemTitle=w.vm.lineItemGroupingType==w.lineItemType.task.id?w.tasks.filter(function(e){return e.id==i.taskId})[0].name:w.vm.lineItemGroupingType==w.lineItemType.resource.id?w.resources.filter(function(e){return e.employeeId==i.employeeId})[0].employeeName:w.billingRoles.filter(function(e){return e.id==i.billingRoleId})[0].name,i.projectId=t.projectId,i.projectName=t.projectName,i.projectCode=t.projectCode,i.lineItemGroupBy=w.vm.lineItemGroupingType,e.push(i)}),t.otherLineItems&&t.otherLineItems.length&&t.otherLineItems.forEach(function(i){i.projectId=t.projectId,i.projectName=t.projectName,i.projectCode=t.projectCode,i.lineItemGroupBy=w.vm.lineItemGroupingType,e.push(i)})}),e.filter(function(e){return!isNaN(e.totalAmount)})},this.getTotalAmount=function(){return w.getAllLineItems().map(function(e){return e.totalAmount}).reduce(function(e,t){return e+t})},this.getSubTotal=function(){return w.getAllLineItems().map(function(e){return e.totalAmountWithoutTax}).reduce(function(e,t){return e+t})},this.getTaxGroup=function(e){return w.vm.taxGroups.find(function(t){return t.id==e.taxGroupId})},this.getSelectedTaxGroups=function(){var e=w.getAllLineItems();return w.vm.taxGroups.filter(function(t){return e.map(function(e){return e.taxGroupId}).indexOf(t.id)>-1})},this.getTotalGroupTax=function(e){return e.taxComponents.map(function(e){return e.taxRate}).reduce(function(e,t){return e+t})},this.getTotalTaxAmount=function(e){return w.getAllLineItems().filter(function(t){return t.taxGroupId==e.id}).map(function(e){return e.totalTax}).reduce(function(e,t){return e+t})},this.getClientContact=function(){return w.clientContacts.find(function(e){return e.id==w.vm.clientContactId})},this.previewInvoice=function(){var e=w.getAllLineItems();w._q.all([w.doesInvoiceNumberExist(w.model.invoiceNumber)]).then(function(t){t[0]&&(w.invoiceFormController.invoiceForm.$valid&&w.client.billingAddress&&w.client.billingAddress.addressLine1&&e.length&&w.vm.isInvoiceValid?(w.selectedProjects.forEach(function(e){e.hoursLineItems&&e.hoursLineItems.length&&e.hoursLineItems.forEach(function(t){t.lineItemTitle=w.vm.lineItemGroupingType==w.lineItemType.task.id?w.tasks.filter(function(e){return e.id==t.taskId})[0].name:w.vm.lineItemGroupingType==w.lineItemType.resource.id?w.resources.filter(function(e){return e.employeeId==t.employeeId})[0].employeeName:w.billingRoles.filter(function(e){return e.id==t.billingRoleId})[0].name,t.projectId=e.projectId,t.projectName=e.projectName,t.lineItemGroupBy=w.vm.lineItemGroupingType})}),w._modal.open({templateUrl:"previewInvoice",windowClass:"full-screen-modal dark-modal action-content invoice-modal no-scroll-x",scope:w._scope})):w.client.billingAddress&&w.client.billingAddress.addressLine1?e.length?w.vm.isInvoiceValid?w.notificationService.error("Please check all the fields that are shown as invalid."):w.notificationService.error("Please enter valid data in all fields."):w.notificationService.error("Please add at least one line item."):w.notificationService.error("Please add a client address."))})},this.saveInvoice=function(){var e=w.getAllLineItems();w.isDisabled=!0,w._q.all([w.doesInvoiceNumberExist(w.model.invoiceNumber)]).then(function(t){if(t[0])if(w.invoiceFormController.invoiceForm.$valid){var i=w.generateInvoiceModel();w.client.billingAddress&&w.client.billingAddress.addressLine1&&i.invoiceLineItems.length&&w.vm.isInvoiceValid?w.model.id?(w.model.totalAmount=i.totalAmount,w.timesheetServices.billing.update({action:"updateinvoice",id:w.model.id},{invoice:i},function(e){w.notificationService.success("Invoice updated successfully"),w._modalInstance.close(w.model)})):w.timesheetServices.billing.update({action:"saveinvoice"},{invoice:i},function(e){w.notificationService.success("Invoice saved successfully"),w._modalInstance.close(),w._state.reload()}):w.client.billingAddress&&w.client.billingAddress.addressLine1?e.length?w.vm.isInvoiceValid||w.notificationService.error("Please enter valid data in all fields."):w.notificationService.error("Please add at least one line item."):w.notificationService.error("Please add a client address.")}else w.notificationService.error("Please check all the fields that are shown as invalid.");w.isDisabled=!1})},this.generateInvoiceModel=function(){var e=angular.copy(w.model);e.invoiceNumber=e.invoiceNumber.trim(),e.clientName=w.client.name,e.clientContactId=w.getClientContact().id,e.clientContactName=w.getClientContact().name,e.legalEntityName=w.legalEntity.name,e.legalEntityAddress=w.legalEntity.timesheetInvoiceInfo.billingAddress,e.legalEntityLogo=w.legalEntity.timesheetInvoiceInfo.logoPath,e.billToAddress=w.client.billingAddress,e.currency=e.currency||w.loadCurrency(w.client.billingCurrencyId),e.datePaid=e.datePaid?new Date(e.datePaid.toString()).dateOnlyString():null,e.dueDate=e.dueDate?new Date(e.dueDate.toString()).dateOnlyString():null,e.fromDate=e.fromDate?new Date(e.fromDate.toString()).dateOnlyString():null,e.toDate=e.toDate?new Date(e.toDate.toString()).dateOnlyString():null,e.dateInvoiced=e.dateInvoiced?new Date(e.dateInvoiced.toString()).dateOnlyString():null;var t=w.getAllLineItems();return t.forEach(function(e){e.taxGroup=w.vm.taxGroups.find(function(t){return e.taxGroupId&&t.id==e.taxGroupId})}),e.invoiceLineItems=t,t.length&&(e.subtotal=t.map(function(e){return e.totalAmountWithoutTax}).reduce(function(e,t){return e+t}),e.totalTaxAmount=t.map(function(e){return e.totalTax}).reduce(function(e,t){return e+t}),e.totalAmount=t.map(function(e){return e.totalAmount}).reduce(function(e,t){return e+t})),e},this.loadCurrency=function(e){if(w.appSettings.currencies)return e?w.appSettings.currencies.find(function(t){return t.id==e}):w.appSettings.currencies.find(function(e){return"INR"==e.code.trim()});w._timeout(function(){w.loadCurrency(e)},500)},this.downloadPreviewPdf=function(){var e=w.generateInvoiceModel();return w.formDownloadService.downloadFileWithPost("/api/billing/export/invoicepreview",e)},this.doesInvoiceNumberExist=function(e){var t=w._q.defer();return!e||w.model.id&&e.trim()==w.vm.invoiceBackup.invoiceNumber.trim()?t.resolve(!0):w.timesheetServices.billing.get({action:"doesinvoicenumberexist",invoiceNumber:e.trim()},function(e){t.resolve(!e.result)}),t.promise},this.wizardSteps=[new SharedModel.Step(1,"Generate Invoice","createInvoice","generateInvoice",!1),new SharedModel.Step(2,"Create Line Items","createLineItems","createInvoiceLineItems",!1)],this.currentStep=this.wizardSteps[0],this.vm.lineItemGroupingType=this.lineItemType.task.id,this.model.clientId=C.clientId||C.id,S&&(this.model=angular.copy(S),this.vm.invoiceBackup=angular.copy(S),this.vm.clientContactId=this.model.clientContactId,S.fromDate&&(this.model.fromDate=new Date(S.fromDate.toString())),S.toDate&&(this.model.toDate=new Date(S.toDate.toString()))),this.timesheetServices.billing.query({action:"clients"},function(e){w.clients=e,C&&C.clientId&&(w.client=w.clients.find(function(e){return e.id==C.clientId}),w.model.currency=w.loadCurrency(w.client.billingCurrencyId))}),this.timesheetServices.billing.query({action:"legalentity/list"},function(e){w.legalEntities=e,w.legalEntity=w.legalEntities[0],w.model.legalEntityId=w.legalEntity.id,w.model.invoiceHeader=w.legalEntity.timesheetInvoiceInfo.headerNote,w.model.paymentInstructions=w.legalEntity.timesheetInvoiceInfo.paymentInstructions,w.getInvoiceData(),w.getTaxGroups()},function(e){}),this.setCurrentMonthDates()}return t.$inject=["$q","$filter","$timeout","$state","$scope","$uibModal","$uibModalInstance","TimesheetServices","AppSettings","AppContext","OrgSettingServices","InvoiceLineItemType","TimesheetSettingsService","NotificationService","SharedModel","LookupServices","FormDownloadService","dialogs","Invoice","Client"],t}();t.CreateTimesheetInvoiceController=l,angular.module("xhr").controller("TimesheetBillingController",i).controller("TimesheetBillingSummaryController",n).controller("TimesheetToInvoiceController",o).controller("TimesheetInvoicesDueController",r).controller("TimesheetInvoicesClosedController",s).controller("CreateTimesheetInvoiceController",l)}(e.Controllers||(e.Controllers={}))}(Timesheet||(Timesheet={})),appRoot.controller("CreateInvoiceController",["$scope","$filter","$q","AppSettings","TimesheetServices","InvoiceServices","NotificationService","$location","$uibModalInstance","ClientId",function(e,t,i,n,o,r,a,s,l,c){e.vm={},e.model={},e.model.clientId=c,e.vm.modelOptions=angular.copy(n.modelBlurSettings),e.vm.datepickerOptions=angular.copy(n.datepickerOptions);e.vm.cancel=function(){l.close()},e.vm.createInvoice=function(){e.invoice.$valid&&(e.model.projectName=e.vm.projects.find(function(t){return t.id==e.model.projectId}).name,r.setProject(e.model),l.close(),s.path("/invoice/add"))},o.billing.query({action:"clients"},function(i){e.vm.clients=t("orderBy")(i,"name",!1)}),o.billing.query({action:"managedprojects"},function(i){e.vm.projects=t("orderBy")(i,"name",!1)})}]),appRoot.controller("InvoiceController",["$scope","$state","$q","$rootScope","$stateParams","$uibModal","$location","NotificationService","TimesheetServices","AppSettings","OrgSettings","OrgSettingServices","PaymentTerms","LineItemType","invoiceProject","$filter",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h){e.vm={},e.vm.clientId=o.Id,e.vm.paymentTerms=d,e.vm.lineItemType=m,e.vm.invoiceProject=y,e.vm.datepickerOptions=angular.copy(c.datepickerOptions),e.vm.lineItems=[],e.$on("$stateChangeSuccess",function(i,n,o,r,a){e.vm.state=t.current});var f,g;f=e.vm.invoiceProject.projectId,l.project.get({id:f,action:"default"},function(t){e.vm.project=t,S(t)}),g=e.vm.invoiceProject.clientId,l.billing.get({id:g,action:"client"},function(t){e.vm.client=t}),function(t){l.getClientContacts(t).then(function(t){e.vm.clientContacts=t})}(e.vm.invoiceProject.clientId),function(t){l.client.query({id:t,action:"clientbillingroles"},function(t){e.vm.clientBillingRoles=t})}(e.vm.invoiceProject.clientId),u.organization.get({action:"companyinfo"},function(t){e.vm.OrgDetails=t}),p.settings.query({action:"legalentity/list"},function(t){e.vm.legalEntities=t}),e.addAttention=function(){e.vm.newAttention={},e.attentionModalInstance=r.open({templateUrl:"newAttention",scope:e})},e.saveClientContact=function(){if(e.vm.addAttentionForm.attentionForm.$valid){var t={clientId:e.vm.client.id,name:e.vm.addAttentionForm.newAttention.name,email:e.vm.addAttentionForm.newAttention.email,phone:e.vm.addAttentionForm.newAttention.phone};l.client.save({id:e.vm.client.id,action:"clientContact"},t,function(i){s.success("New Attention has been added"),e.vm.clientContacts.push(t),e.attentionModalInstance.close()})}},e.closeAttention=function(){e.attentionModalInstance.dismiss()},e.vm.updateSubTotals=function(){v()};var v=function(){var t=0;angular.forEach(e.vm.invoiceProject.lineItems,function(e){t+=e.ratePerHour*e.totalHours+e.tax/100*(e.ratePerHour*e.totalHours)||0}),e.vm.invoiceSubTotal=t},S=function(t){i.all([l.project.query({id:t.id,action:"projecttasks"}).$promise,l.project.query({id:t.id,action:"allprojectresources"}).$promise,l.billing.query({id:t.id,fromDate:C(e.vm.invoiceProject.fromDate),toDate:C(e.vm.invoiceProject.toDate),action:"invoicelineitems"}).$promise]).then(function(t){e.vm.invoiceProject.projectTasks=t[0],e.vm.invoiceProject.projectResources=t[1],e.vm.lineItems=t[2],e.groupItemsByField(e.vm.lineItemType.resource.id)})},C=function(e){var t=new Date(e);return t.getMonth()+1+"/"+t.getDate()+"/"+t.getFullYear()};e.close=function(){e.projectModalInstance.close()},e.cancelInvoice=function(){a.path("/billing/client/"+e.vm.clientId+"/projects")},e.saveAndExit=function(){e.saveInvoice()},e.previewInvoice=function(){},e.groupItemsByField=function(t){e.vm.currentLineItemType=t;var i=[],n=e.vm.lineItemType.getById(t).propertyKey,o=h("groupBy")(e.vm.lineItems,n);angular.forEach(o,function(o,r){var a=o.map(function(e){return e.totalHours}).reduce(function(e,t){return e+t}),s={ratePerHour:t==e.vm.lineItemType.task.id?0:o[0].ratePerHour,tax:0,totalHours:a};s[n]=r?parseInt(r):0,i.push(s)}),e.vm.invoiceProject.lineItems=i,v()};e.saveInvoice=function(){if(e.invoiceCreator.$valid){var t=(i=e.model,n=e.vm.legalEntities.find(function(t){return t.id==e.model.legalEntityId}),i.clientContactName=e.vm.clientContacts.find(function(t){return t.id==e.model.attention.id}).name,i.legalEntityName=n.name,i.clientAddress=e.model.toAddress,i.legalEntityAddress=n.address||e.model.fromAddress,angular.forEach(e.vm.invoiceProject.lineItems,function(t){var i=e.vm.invoiceProject.projectTasks.find(function(e){return e.id==t.taskId});t.taskName=i?i.name:null,t.type=e.vm.currentLineItemType,t.totalAmount=t.totalHours*t.ratePerHour+t.totalHours*t.ratePerHour*(t.tax/100)}),{invoice:i,invoiceProject:e.vm.invoiceProject});l.billing.save({action:"saveinvoice"},t,function(e){a.path("/billing")},function(e){console.log(e)})}else e.submitted=!0;var i,n},e.deleteLineItem=function(t){e.vm.invoiceProject.lineItems.splice(t,1),v()},e.addTask=function(){e.vm.invoiceProject.lineItems.push({})}}]),function(e){!function(t){var i=function(){function e(e,t,i,n,o,r,a){var s=this;this._filter=e,this._modal=t,this._scope=i,this.timesheetServices=n,this.notificationService=o,this.timesheetStatus=r,this.onlyEmptyTimesheets=a,this.bulkRejectComment=null,this.allSelected=!1,this.anySelected=!1,this.loadTimesheetSummary=function(e){e?s.loadEmptyTimesheetPendingSummary():s.loadPendingTimesheetSummary()},this.loadEmptyTimesheetPendingSummary=function(){s.timesheetServices.getEmptyTimesheetPendingSummary().then(function(e){s.timesheetDetails=e,s.timesheetDetailsGroup=s._filter("groupBy")(s.timesheetDetails,"employeeId")})},this.loadPendingTimesheetSummary=function(){s.timesheetServices.getPendingTimesheetSummary().then(function(e){s.timesheetDetails=e,s.timesheetDetailsGroup=s._filter("groupBy")(s.timesheetDetails,"employeeId",!1)})},this.updateTimesheetData=function(e){var t=s.timesheetDetails.map(function(e){return e.id}).indexOf(e.timesheetId);0==e.pendingEntries.length&&(s.timesheetDetails.splice(t,1),s.timesheetDetailsGroup=s._filter("groupBy")(s.timesheetDetails,"employeeId"))},this.updateTimesheets=function(){var e=s.timesheetDetails.filter(function(e){return e.isSelected}).map(function(e){return e.id});s.timesheetDetails=s.timesheetDetails.filter(function(t){return-1==e.indexOf(t.id)}),s.timesheetDetailsGroup=s._filter("groupBy")(s.timesheetDetails,"employeeId"),s.allSelected=!1,s.toggleAll(),s.loadTimesheetSummary(s.onlyEmptyTimesheets)},this.approveTimesheets=function(){s.notificationService.information("Approving selected timesheets");var e=s.timesheetDetails.filter(function(e){return e.isSelected}).map(function(e){return e.id});s.timesheetServices.timesheets.update({id:null,action:"approvetimesheets"},e,function(e){s.notificationService.success("Selected timesheets approved successfully."),s.updateTimesheets()},function(e){s.notificationService.error("Error in approving selected timesheets.")})},this.rejectTimesheets=function(){if(s.bulkRejectComment){s.bulkRejectComment=s.bulkRejectComment.replace(/<(?:.|\n)*?>/gm,"").replace("&nbsp;"," ");var e=s.timesheetDetails.filter(function(e){return e.isSelected}).map(function(e){return e.id});s.notificationService.information("Rejecting selected timesheets"),s.timesheetServices.timesheets.update({id:null,action:"rejecttimesheets",rejectComment:s.bulkRejectComment},e,function(e){s.notificationService.success("Selected timesheets rejected successfully."),s.updateTimesheets(),s.bulkRejectComment=null},function(e){s.notificationService.error("Error in rejecting selected timesheets.")})}else s.notificationService.information("Comment required for rejecting timesheets.")},this.toggleAll=function(){s.timesheetDetails.forEach(function(e){e.isSelected=s.allSelected}),s.anySelected=angular.copy(s.allSelected)},this.timesheetSelected=function(){s.allSelected=s.timesheetDetails.every(function(e){return e.isSelected}),s.anySelected=s.timesheetDetails.some(function(e){return e.isSelected})},this.loadTimesheetSummary(a),this._scope.$on("$stateChangeSuccess",function(e,t,i,n,o){"timesheet.employeetimesheets.approvals.view"==n.name&&"timesheet.employeetimesheets.approvals"==t.name&&s.loadTimesheetSummary(a)})}return e.prototype.findEmptyTimesheetSubmitReason=function(e){var t=e.find(function(e){return e.comment});return t?t.comment:"NO COMMENT SUBMITTED BY EMPLOYEE"},e.$inject=["$filter","$uibModal","$scope","TimesheetServices","NotificationService","TimesheetStatus","onlyEmptyTimesheets"],e}();t.AllTimesheetsApprovalController=i;var n=function(){function e(e,t,i,n,o){var r=this;this._filter=e,this.timesheetServices=t,this.notificationService=i,this.appSettings=n,this.dialogs=o,this.tasks=[],this.initializeGridSettings=function(){r.repositoryTasksGridOptions=angular.copy(r.appSettings.gridSettings),r.repositoryTasksGridOptions.columnDefs=[{field:"name",displayName:"TASK NAME",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-class=" { \'ui-grid-cell-contents-edit\' : row.entity.isEditable }"><input data-ng-if="row.entity.isEditable" type="text" ng-model="row.entity.copyName" placeholder="Name" class="form-control" data-ng-focus="grid.appScope.addTask(row.entity)" data-ng-class="{\'invalid-input-field\' : row.entity.isSubmitted && ! row.entity.name.length }"/><span data-ng-if="!row.entity.isEditable" title="{{grid.getCellValue(row,col)}}" class="cellToolTip">{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell"},{name:"Actions",displayName:"ACTIONS",cellClass:"ui-grid-cell cell-tooltip",cellTemplate:'<div class="ui-grid-cell-options ui-grid-cell-contents"><span class="clearfix"><ul class="action-items list-inline"><li class="list-item" data-ng-if="!row.entity.isEditable"><a class="list-link" data-ng-click="row.entity.isEditable=true;row.entity.isSubmitted=false;row.entity.copyName = row.entity.name;"><span class="icon-pencil5" uib-tooltip="Edit" tooltip-placement="left"></span></a></li><li class="list-item" data-ng-if="!row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.deleteRepositoryTasks(row.entity);"><span class="icon-remove3" uib-tooltip="Delete" tooltip-placement="right"></span></a></li><li class="list-item" data-ng-if="row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.updateRepositoryTasks(row.entity)"><span class="icon-checkmark-circle" uib-tooltip="Save" tooltip-placement="left"></span></a></li><li class="list-item" data-ng-if="row.entity.isEditable"><a class="list-link" data-ng-click="row.entity.isEditable=false;"><span class="icon-cancel-circle" uib-tooltip="cancel" tooltip-placement="right"></span></a></li></ul></span></div>'}],r.repositoryTasksGridOptions.rowHeight=50,r.repositoryTasksGridOptions.data=r.tasks,r.repositoryTasksGridOptions.onRegisterApi=function(e){r.gridApi=e},r.repositoryTasksGridOptions.appScopeProvider=r},this.refreshData=function(){r.repositoryTasksGridOptions.data=r._filter("filter")(r.tasks,r.filterText,!1)},this.timesheetServices.timesheets.query({action:"repositorytask"},function(e){r.tasks=e,r.initializeGridSettings()})}return e.prototype.deleteRepositoryTasks=function(e){var t=this;this.dialogs.confirm("Please Confirm",'Are you sure you want to delete task "'+e.name+'" ?').result.then(function(){t.timesheetServices.timesheets.delete({action:"repositorytask",id:e.id},function(i){i?(t.notificationService.success("Task "+e.name+" deleted successfully."),t.tasks=t.tasks.filter(function(t){return t.id!=e.id}),t.refreshData()):t.notificationService.error("Unable to delete task"+e.name+".")})})},e.prototype.checkDuplicateTaskName=function(e){return e.name!=e.copyName&&(!!this.tasks.find(function(t){return t.name.toLowerCase()==e.copyName.toLowerCase()})&&(this.notificationService.error("Task with Name "+e.copyName+" already exists."),!0))},e.prototype.updateRepositoryTasks=function(e){var t=this;this.checkDuplicateTaskName(e)||(e.name=e.copyName,this.timesheetServices.timesheets.update({action:"repositorytask",id:e.id},e,function(i){i?(t.notificationService.success("Task "+e.name+" Updated successfully."),e.isEditable=!1,t.refreshData()):t.notificationService.error("Unable to Update task"+e.name+".")}))},e.$inject=["$filter","TimesheetServices","NotificationService","AppSettings","dialogs"],e}();t.RepositoryListController=n;var o=function(){function t(t,i,n,o,r,a,s){var l=this;this._filter=t,this.timesheetServices=i,this.notificationService=n,this.appSettings=o,this.dialogs=r,this._location=a,this._modalInstance=s,this.tasks=[],this.createdRepositoryTasks=new Array,this.initializeGridSettings=function(){l.repositoryTasksGridOptions=angular.copy(l.appSettings.gridSettings),l.repositoryTasksGridOptions.columnDefs=[{field:"name",displayName:"TASK NAME",cellTemplate:'<div class="ui-grid-cell-contents ui-grid-cell-contents-edit" ><input type="text" ng-model="row.entity.name" data-ng-change="row.entity.isNameExist = grid.appScope.checkNameAvailability(row.entity)"placeholder="Name" class="form-control" data-ng-focus="grid.appScope.addTask(row.entity)" data-ng-class="{\'invalid-input-field\' : (grid.appScope.isSubmitted && (grid.appScope.isSubmitted == true) && (!row.entity.name.length || row.entity.name.length == 0)) || row.entity.isNameExist }"/> </div>',cellClass:"ui-grid-cell"},{name:"Actions",displayName:"ACTIONS",cellClass:"ui-grid-cell cell-tooltip",cellTemplate:'<div class="ui-grid-cell-options ui-grid-cell-contents"><span class="clearfix"><ul class="action-items list-inline"><li class="list-item" data-ng-if="!row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.deleteRepositoryTasks(grid.renderContainers.body.visibleRowCache.indexOf(row));"><span class="icon-remove3" uib-tooltip="Delete" tooltip-placement="right"></span></a></li></ul></span></div>'}],l.repositoryTasksGridOptions.rowHeight=50,l.repositoryTasksGridOptions.data=l.createdRepositoryTasks,l.repositoryTasksGridOptions.appScopeProvider=l,l.repositoryTasksGridOptions.onRegisterApi=function(e){l.gridApi=e}},this.addTaskRepositoryItem=function(){l.createdRepositoryTasks.push(new e.Model.TaskRepositoryItem)},this.saveRepositoryTasks=function(){l.isSubmitted=!0,0==l.createdRepositoryTasks.filter(function(e){return e.isNameExist||!e.name}).length?l.timesheetServices.timesheets.update({action:"repositorytask"},l.createdRepositoryTasks,function(e){e.areAdded&&l._modalInstance.close()}):l.notificationService.error("Please enter valid task name")},this.timesheetServices.timesheets.query({action:"repositorytask"},function(t){l.tasks=t,l.createdRepositoryTasks.push(new e.Model.TaskRepositoryItem),l.initializeGridSettings()})}return t.prototype.checkNameAvailability=function(e){var t=this.tasks.find(function(t){return t.name.toUpperCase()==e.name.toUpperCase()}),i=this.createdRepositoryTasks.filter(function(t){return t.name.toUpperCase()==e.name.toUpperCase()});return(t||i.length>1)&&this.notificationService.error("Task With Same Name Already Exists"),!!(t||i.length>1)},t.prototype.deleteRepositoryTasks=function(e){this.createdRepositoryTasks.splice(e,1),this.gridApi.queueGridRefresh()},t.$inject=["$filter","TimesheetServices","NotificationService","AppSettings","dialogs","$location","$uibModalInstance"],t}();t.CreateRepositoryTaskController=o;var r=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f){var g=this;this._stateParams=t,this._q=i,this._filter=n,this._rootScope=o,this.modalInstance=r,this.profile=a,this.sharedModel=s,this.timesheetServices=l,this.notificationService=c,this.lookupServices=p,this.orgSettingServices=u,this.appContext=d,this.appFeatures=m,this.TimeEntryStatus=y,this.TimesheetStatus=h,this.AttendanceHoursType=f,this.weekStartDay=1,this.task={},this.projectResource=new e.Model.ProjectResource,this.note=null,this.getTeamAttendanceDetails=function(){g.timesheetServices.getTimesheetAttendanceDetails(g.id).then(function(e){g.attendanceSummary=e})},this.getProjectDetails=function(e){var t=g.teamProjects.find(function(t){return t.id==e});return t&&t.startDate&&(t.startDate=new Date(t.startDate)),t},this.loadViewModel=function(){g.projectResource=new e.Model.ProjectResource,g.projectResource.employeeId=g.resource.id,g.projectResource.employeeName=g.resource.displayName,g.projectResource.weeklyOff=new Attendance.Model.WeeklyOffPolicy(g.resource.weeklyOff),g.projectResource.orgHolidays=g.resource.orgHolidays,g.projectResource.employeeLeaveRequests=g.resource.employeeLeaveRequests,g.projectResource.timesheets=g.pendingTimesheets,g.projectResource.timesheets.forEach(function(t){t.tasks=[],t.startDate=t.startDate.stringToDate(),t.endDate=t.endDate.stringToDate(),g.pendingTimeEntries.filter(function(e){return e.employeeId==g.resource.id&&e.employeeTimesheetId==t.id}).forEach(function(i){var n=t.tasks.find(function(e){return e.id==i.taskId&&e.sequenceNumber==i.sequenceNumber}),o=g._filter("yyyymmddToDate")(i.date,"ddMMyyyy");if(n)n.timesheetId[o]=i.id,n.startTime[o]=i.startTime,n.endTime[o]=i.endTime,n.timesheetHours[o]=i.totalHours,n.timesheetComments[o]=i.comments,n.approverLogEntry[o]=i.approverLogEntry,n.billingClassificationId||(n.billingClassificationId=i.billingClassificationId),n.selected=!1;else{i.projectDetails=g.getProjectDetails(i.projectId);var r=new e.Model.TimesheetTask(i);r.timesheetId[o]=i.id,r.startTime[o]=i.startTime,r.endTime[o]=i.endTime,r.timesheetHours[o]=i.totalHours,r.timesheetComments[o]=i.comments,r.approverLogEntry[o]=i.approverLogEntry,t.tasks.push(r)}})})},this.getAttendanceHours=function(e,t){if(g.attendanceSummary){var i=g.attendanceSummary.find(function(e){return e.employeeId==g.id&&new Date(e.attendanceDate).setHours(0,0,0,0)==t.setHours(0,0,0,0)}),n=i?g.timesheetSettings.attendanceHoursType==g.AttendanceHoursType.totalHours.id?i.totalGrossHours:i.totalEffectiveHours:0;return n?g._filter("timeFormatter")(n,"hhmm"):"0:00"}},this.getProjectTasksCount=function(e,t){return e.filter(function(e){return e.projectDetails.id==t}).length},this.showColumn=function(e,t,i,n){return g._filter("groupBy")(e,"projectDetails.id")[t][0].id==n.id},this.getDaySubTotal=function(e,t){var i=0;return e.forEach(function(e){e.timesheetHours[t]&&(i+=e.timesheetHours[t])}),i},this.isTimesheetApproved=function(e,t){return g.pendingTimeEntries.every(function(i){return i.projectId==e&&i.employeeTimesheetId==t&&2==i.status})},this.showComments=function(e,t){e.showComments=!e.showComments,t.forEach(function(t){t.id!=e.id&&(t.showComments=!1)}),g.task=e},this.getBillingClassification=function(e){var t=g.billingClassifications?g.billingClassifications.find(function(t){return t.id==e}):null;return null!=t?t.name:"Non-Billable"},this.getWeekType=function(e,t){var i=new Date((new Date).setHours(0,0,0,0));return i>=e&&i<=t?"Current":i<e?"Future":"Past Due"},this.loadWeekdays=function(e){e.weekDays=[];for(var t=new Date(e.startDate);e.weekDays.length<7;){var i=new Date(t.toString()),n={key:g._filter("date")(t,"ddMMyyyy"),date:i};e.weekDays.push(n),t.setDate(t.getDate()+1)}},this.checkWeekOffOrHoliday=function(e,t){var i=!t.weeklyOff.isWorkingDay(e.date),n=t.orgHolidays.find(function(t){return new g.sharedModel.DateWithZeroTime(t.date).equals(new g.sharedModel.DateWithZeroTime(e.date))&&!t.isFloater});if(i||n)return!0},this.checkOnLeave=function(e,t){return t.employeeLeaveRequests.find(function(t){return g.existsBetweenRange(t.fromDate,t.toDate,e.date)&&3!=t.status&&4!=t.status})},this.existsBetweenRange=function(e,t,i){var n=e.stringToDate(),o=t.stringToDate(),r=new g.sharedModel.DateWithZeroTime(i);return r>=n&&r<=o},this.getTasksByProject=function(e){var t=g._filter("groupBy")(e.tasks,"projectDetails.clientName"),i=[];return angular.forEach(t,function(t,n){var o=g._filter("groupBy")(t,"projectDetails.id"),r=[];angular.forEach(o,function(e,t){r.push({projectId:t,tasks:e,rowspan:e.length,projectTitle:e[0].projectDetails.name||""})}),i.push({clientName:n,projects:r,timesheetId:e.id,employeeId:e.employeeId,weekDays:e.weekDays,rejectComment:""})}),i},this.getTaskSubTotal=function(e,t){var i=0;if(t)return e.forEach(function(e){t.timesheetHours[e.key]&&(i+=t.timesheetHours[e.key])}),i},this.getOffsetDate=function(e){var t=60*e.getTimezoneOffset()*1e3;return new Date(e.getTime()-t)},this.loadTimeEntriesModel=function(t,i){var n=[];return t.weekDays.forEach(function(o){t.projects.forEach(function(t){t.tasks.forEach(function(t){if(null!=t.timesheetHours[o.key]&&void 0!=t.timesheetHours[o.key]&&(!i||t.projectDetails.id==i)){var r=new e.Model.TimesheetEntry;r.id=t.timesheetId[o.key],r.date=g.getOffsetDate(o.date),r.projectId=t.projectDetails.id,r.taskId=t.id,r.startTime=t.startTime[o.key],r.endTime=t.endTime[o.key],r.totalHours=t.timesheetHours[o.key],r.comments=t.timesheetComments[o.key],r.approverLogEntry=t.approverLogEntry[o.key],r.note=g.note?g.note:null,r.sequenceNumber=t.sequenceNumber,n.push(r)}})})}),n},this.getEntriesPostAction=function(e,t){var i=g.pendingTimeEntries.filter(function(i){return i.employeeTimesheetId==e.timesheetId&&i.projectId!=t&&i.nextApproverId==g.profile.id});return{timesheetId:e.timesheetId,pendingEntries:i}},this.updateResourceTimesheets=function(e,t){var i=g.pendingTimeEntries.filter(function(i){return i.employeeTimesheetId==e.timesheetId&&i.projectId!=t});g.pendingTimeEntries=g.pendingTimeEntries.filter(function(i){return i.employeeTimesheetId==e.timesheetId&&i.projectId!=t||i.employeeTimesheetId!=e.timesheetId});var n=g.projectResource.timesheets.map(function(e){return e.id}).indexOf(e.timesheetId);if(i.length>0){g.projectResource.timesheets[n].tasks=g.projectResource.timesheets[n].tasks.filter(function(e){return e.projectDetails.id!=t});var o=e.projects.map(function(e){return e.projectId}).indexOf(t);if(e.projects.splice(o,1),!e.projects.length){var r=g.projectResource.timesheets[n].tasksByGroup.indexOf(e);g.projectResource.timesheets[n].tasksByGroup.splice(r,1)}}else g.projectResource.timesheets.splice(n,1)},this.approveTask=function(e,t){var i=g.loadTimeEntriesModel(e,t);g.notificationService.information("Approving Timesheet..."),g.timesheetServices.timesheets.update({id:e.employeeId,employeeTimesheetId:e.timesheetId,action:"approvetimeentries"},i,function(i){g.notificationService.success("Timesheet approved successfully."),g.updateResourceTimesheets(e,t)},function(e){g.notificationService.error("Error in approving Timesheet.")})},this.rejectTask=function(e,t){var i=g.loadTimeEntriesModel(e,t),n=e.timesheetId;g.notificationService.information("Rejecting Timesheet..."),g.timesheetServices.timesheets.update({id:e.employeeId,employeeTimesheetId:n,rejectComment:e.rejectComment,action:"rejecttimeentries"},i,function(i){g.notificationService.success("Timesheet rejected successfully."),g.updateResourceTimesheets(e,t),e.rejectComment=null},function(e){g.notificationService.error("Error in rejecting Timesheet.")})},this.rejectTimesheetEntry=function(e,t){e.rejectComment?(e.rejectComment=e.rejectComment.replace(/<(?:.|\n)*?>/gm,""),e.rejectComment=e.rejectComment.replace("&nbsp;"," "),g.rejectTask(e,t)):g.notificationService.information("Comment required.")},this.id=this._stateParams.employeeId,this.hasAttendanceFeature=this.appContext.isFeaturePresent(this.appFeatures.Attendance.title),this._q.all([this.timesheetServices.getProjectResource(this.id),this.timesheetServices.getEmployeePendingTimesheets(this.id),this.timesheetServices.getAllTeamProjects(),this.timesheetServices.getPendingTimeEntries(this.id),this.lookupServices.lookup.query({id:"billingclassifications"}).$promise]).then(function(e){g.resource=e[0],g.pendingTimesheets=e[1],g.teamProjects=e[2],g.pendingTimeEntries=e[3],g.billingClassifications=e[4],g.loadViewModel()}),this.hasAttendanceFeature&&this.orgSettingServices.organization.get({action:"timesheetgeneralsettings"},function(e){g.timesheetSettings=e,g.timesheetSettings.showAttendanceHours&&g.getTeamAttendanceDetails()})}return t.$inject=["$stateParams","$q","$filter","$rootScope","$uibModalInstance","profile","SharedModel","TimesheetServices","NotificationService","LookupServices","OrgSettingServices","AppContext","AppFeatures","TimeEntryStatus","TimesheetStatus","AttendanceHoursType"],t}();angular.module("xhr").controller("AllTimesheetsApprovalController",i).controller("RepositoryListController",n).controller("CreateRepositoryTaskController",o).controller("EmployeeTimesheetApprovalController",r)}(e.Controllers||(e.Controllers={}))}(Timesheet||(Timesheet={})),appRoot.factory("ReportServices",["$resource","$q","$routeParams",function(e,t,i){return e("/api/reports/:action/:id",{action:"@action",id:"@id"},{update:{method:"PUT"}})}]),appRoot.factory("TimesheetReportServices",["$resource","$q","$routeParams",function(e,t,i){return e("/api/timesheet/reports/:action/:id",{action:"@action",id:"@id"},{update:{method:"PUT"}})}]),appRoot.controller("ReportsController",["$scope","$state",function(e,t){e.vm={},e.$on("$stateChangeSuccess",function(){e.vm.state=t.current})}]),appRoot.controller("PendingApprovalDocumentsReportController",["$scope","$uibModal","AppSettings","uiGridConstants","EmployeeServices","DocumentSetStatus","NotificationService","LookupServices","EmployeeDocumentService","$filter",function(e,t,i,n,o,r,a,s,l,c){e.vm={},e.vm.documentSetStatus=r;e.expandTreeRow=function(t){t.groupHeader&&e.gridApi.treeBase.toggleRowTreeState(t)};e.$on("docApprovalComplete",function(t,i){i.documents&&angular.forEach(i.documents,function(t,i){if(t.status!=e.vm.documentSetStatus.Submitted.id){i=e.vm.pendingDocumentsets.map(function(e){return e.id}).indexOf(t.id);e.vm.pendingDocumentsets.splice(i,1)}})}),e.vm.verifyEmployeeDocuments=function(i,n){var o=[];i||o.push(n);var r=t.open({templateUrl:"verify-document-template",windowClass:"fullscreen-modal",backdrop:!1,controller:"DocumentVerificationController",resolve:{EmployeeDocuments:function(){return{sets:i?e.vm.pendingDocumentsets:o,currentDocument:i?e.vm.pendingDocumentsets[0]:n}}}});e.modalInstance=r,r.result.then(function(t){t&&angular.forEach(t,function(t,i){if(t.status!=e.vm.documentSetStatus.Submitted.id){i=e.vm.pendingDocumentsets.map(function(e){return e.id}).indexOf(t.id);e.vm.pendingDocumentsets.splice(i,1)}})})},e.pendingDocListGridOptions=angular.copy(i.gridSettings),e.pendingDocListGridOptions.rowTemplate='<div data-ng-click="grid.appScope.expandTreeRow(row)" data-ng-repeat="col in colContainer.renderedColumns track by col.colDef.name" class="ui-grid-cell" ui-grid-cell></div>',e.pendingDocListGridOptions.columnDefs=[{field:"displayName",displayName:"Employee name",cellTemplate:'<div class="file-set ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell",groupingShowAggregationMenu:!1,sort:{direction:n.ASC,priority:0}},{field:"documentType",displayName:"Document Type",cellClass:"ui-grid-cell",groupingShowAggregationMenu:!1},{field:"files",displayName:"Files",cellTemplate:'<div class="file-set ui-grid-cell-contents"><div data-ng-repeat="file in grid.getCellValue(row,col)"><a target="_self" href="{{file.location | privateStorageAccountUrl}}" download="{{file.name}}" class="file-name"><span class="icon-file-download2 ng-scope" title="Add attachment"></span>{{file.name}}</a></div></div>',cellClass:"ui-grid-cell",enableGrouping:!1},{field:"employeeId",displayName:"verify",cellTemplate:'<div class="file-set ui-grid-cell-contents" data-ng-if="!row.groupHeader"><div><a class="btn btn-sm-info" data-ui-sref=".view({id: row.entity.id, sets: [row.entity], currentDocument: row.entity})">Verify</a></div></div>',cellClass:"ui-grid-cell",enableGrouping:!1}],e.pendingDocListGridOptions.data="vm.pendingDocumentsets",e.pendingDocListGridOptions.rowHeight=100,e.pendingDocListGridOptions.onRegisterApi=function(t){e.gridApi=t},l.getPendingApprovals().then(function(t){e.vm.pendingDocumentsets=c("orderBy")(t,"displayName",!1)})}]),appRoot.controller("DocumentVerificationController",["$scope","AppSettings","NotificationService","EmployeeServices","DocumentCollectionType","InputType","DocumentSetStatus","EmployeeDocumentService","$filter","EmployeeDocuments","$uibModalInstance","$rootScope",function(e,t,i,n,o,r,a,s,l,c,p,u){e.vm={},e.vm.activeFileIndex=0,e.vm.documentCollectionType=o,e.vm.documentSetStatus=a,e.vm.isNextDocumentAvailable=!0,e.vm.isPreviousDocumentAvailable=!0,e.vm.inputType=r;var d=function(){e.pageNum=1;var t=e.vm.currentDocument.files[e.vm.activeFileIndex].location.replace(/\..+$/,"").replace("documents/","documents/converted/")+".pdf";e.pdfUrl=l("privateStorageAccountUrl")(t)},m=function(){e.vm.activeFileIndex+1<e.vm.currentDocument.files.length?e.vm.isNextDocumentAvailable=!0:e.vm.activeDocumentIndex+1==e.vm.employeeDocuments.length&&(e.vm.isNextDocumentAvailable=!1)},y=function(){e.vm.activeFileIndex-1>=0?e.vm.isPreviousDocumentAvailable=!0:e.vm.activeDocumentIndex-1<0&&(e.vm.isPreviousDocumentAvailable=!1)},h=function(){var t=null;if(e.vm.currentDocument.collectionType==e.vm.documentCollectionType.None.id){t=e.vm.currentDocument.details;var i=e.vm.currentDocument.metaData;angular.forEach(t,function(e){var t=i.find(function(t){return t.id==e.id});e.name=t.name,e.type=t.type})}else t=e.vm.currentDocument.particulars.find(function(t){return t.Id==e.vm.currentDocument.linkedItemId});e.vm.currentDocument.details=angular.copy(t)};e.approveDocument=function(){i.information("Approving document..."),s.approveDocument(e.vm.currentDocument).then(function(t){e.vm.currentDocument.status=e.vm.documentSetStatus.SubmittedAndVerified.id,e.vm.employeeDocuments[e.vm.activeDocumentIndex].status=e.vm.documentSetStatus.SubmittedAndVerified.id,e.vm.getNextDocument(),i.success("Document approved successfully")},function(e){i.error("An error occurred while updating the document.")})},e.rejectDocument=function(){i.information("Rejecting document..."),s.rejectDocument(e.vm.currentDocument).then(function(t){e.vm.currentDocument.status=e.vm.documentSetStatus.Rejected.id,e.vm.employeeDocuments[e.vm.activeDocumentIndex].status=e.vm.documentSetStatus.Rejected.id,e.vm.getNextDocument(),i.success("Document rejected successfully")},function(e){i.error("An error occurred while rejecting document.")})},e.vm.getNextDocument=function(){if(0==e.vm.employeeDocuments.filter(function(t){return t.status!=e.vm.documentSetStatus.SubmittedAndVerified.id&&t.status!=e.vm.documentSetStatus.Rejected.id}).length)return u.$broadcast("docApprovalComplete",{documents:e.vm.employeeDocuments}),void e.vm.close();if(e.vm.isNextDocumentAvailable){var t=e.vm.activeFileIndex+1;if(t<e.vm.currentDocument.files.length)e.vm.activeFileIndex=t,e.vm.isPreviousDocumentAvailable=!0,m(),d();else{var i=e.vm.activeDocumentIndex+1;if(i==e.vm.employeeDocuments.length)return;e.vm.activeDocumentIndex=i,e.vm.currentDocument=angular.copy(e.vm.employeeDocuments[e.vm.activeDocumentIndex]),e.vm.activeFileIndex=0,e.vm.isPreviousDocumentAvailable=!0,m(),h(),d()}}},e.vm.getPreviousDocument=function(){if(e.vm.isPreviousDocumentAvailable){var t=e.vm.activeFileIndex-1;if(t>=0)e.vm.activeFileIndex=t,e.vm.isNextDocumentAvailable=!0,y(),d();else{var i=e.vm.activeDocumentIndex-1;if(i<0)return;e.vm.activeDocumentIndex=i,e.vm.currentDocument=angular.copy(e.vm.employeeDocuments[e.vm.activeDocumentIndex]),e.vm.activeFileIndex=e.vm.currentDocument.files.length-1,e.vm.isNextDocumentAvailable=!0,y(),h(),d()}}},e.vm.close=function(){p.close(e.vm.employeeDocuments)},e.vm.employeeDocuments=c.sets,e.vm.currentDocument=c.currentDocument,e.vm.activeDocumentIndex=e.vm.employeeDocuments.indexOf(e.vm.currentDocument),h(),m(),y(),d()}]),appRoot.controller("SubmittedDocumentsReportController",["$scope","AppSettings","uiGridConstants","EmployeeServices","EmployeeDocumentService","FileDownloadService","$filter",function(e,t,i,n,o,r,a){e.vm={};e.downloadDocument=function(e,t,i){r.downloadFile(a("privateStorageAccountUrl")(e),t.replace(/\./g,"_")+"-"+i)},e.expandTreeRow=function(t){t.groupHeader&&e.gridApi.treeBase.toggleRowTreeState(t)};e.submittedDocListGridOptions=angular.copy(t.gridSettings),e.submittedDocListGridOptions.rowTemplate='<div data-ng-click="grid.appScope.expandTreeRow(row)" data-ng-repeat="col in colContainer.renderedColumns track by col.colDef.name" class="ui-grid-cell" ui-grid-cell></div>',e.submittedDocListGridOptions.columnDefs=[{field:"displayName",displayName:"Employee name",cellTemplate:'<div class="file-set ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell",sort:{direction:i.ASC,priority:0}},{field:"documentType",displayName:"Document Type",cellClass:"ui-grid-cell"},{field:"files",displayName:"Files",cellTemplate:'<div class="file-set ui-grid-cell-contents"><div data-ng-repeat="file in grid.getCellValue(row,col)"><a data-ng-click="grid.appScope.downloadDocument(file.location, row.entity.displayName, row.entity.documentType);" class="file-name"><span class="icon-file-download2 ng-scope" title="Add attachment"></span>{{file.name}}</a></div></div>',cellClass:"ui-grid-cell"}],e.submittedDocListGridOptions.data="vm.submittedDocumentsets",e.submittedDocListGridOptions.rowHeight=100,e.submittedDocListGridOptions.onRegisterApi=function(t){e.gridApi=t},o.getSubmittedDocuments().then(function(t){e.vm.submittedDocumentsets=a("orderBy")(t,"displayName",!1)})}]),appRoot.controller("EmployeePendingLeaveRequestReportController",["$scope","$filter","AppSettings","ReportServices",function(e,t,i,n){e.vm={};var o=function(){n.query({action:"pendingleaverequests"}).$promise.then(function(t){angular.forEach(t,function(e){e.leaveTypes=e.leaveTypes.replace(/\,$/,"")}),e.EmployeesLeaveRequests=t,r(a(e.EmployeesLeaveRequests,e.vm.GridOptions.pagingOptions.pageSize,e.vm.GridOptions.pagingOptions.currentPage,e.vm.GridOptions.filterOptions.filterText))})},r=function(t){e.gridDataSource=t.page,e.vm.GridOptions.totalPages=t.totalPages},a=function(e,t,i,n){var o=angular.copy(e);if(n){var r=n.toLowerCase();o=o.filter(function(e){return-1!=JSON.stringify(e).toLowerCase().indexOf(r)})}return{page:o.slice((i-1)*t,i*t),totalPages:o.length%t==0?o.length/t:Math.floor(o.length/t)+1}};(function(){e.vm.GridOptions=angular.copy(i.gridSettings),e.vm.GridOptions.enableSorting=!0,e.vm.GridOptions.enableRowSelection=!0,e.vm.GridOptions.showGroupPanel=!0,e.vm.GridOptions.jqueryUIDraggable=!0,e.vm.GridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ngCellText"><span>{{row.getProperty(col.field)}}</span></div>',cellClass:"plain-gridcell"},{field:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ngCellText"><span>{{row.getProperty(col.field)}}</span></div>',cellClass:"plain-gridcell"},{field:"reportingManager",displayName:"Reporting Manager",cellTemplate:'<div class="ngCellText"><span>{{row.getProperty(col.field)}}</span></div>',cellClass:"plain-gridcell"},{field:"fromDate",displayName:"From Date",cellTemplate:'<div class="ngCellText"><span>{{row.getProperty(col.field)|date}}</span></div>',cellClass:"plain-gridcell"},{field:"toDate",displayName:"To Date",cellTemplate:'<div class="ngCellText"><span>{{row.getProperty(col.field)|date}}</span></div>',cellClass:"plain-gridcell"},{field:"totalDays",displayName:"Total Days",cellTemplate:'<div class="ngCellText"><span>{{row.getProperty(col.field)}}</span></div>',cellClass:"plain-gridcell"},{field:"leaveTypes",displayName:"Leave types",cellTemplate:'<div class="ngCellText"><span>{{row.getProperty(col.field)}}</span></div>',cellClass:"plain-gridcell"}],e.vm.GridOptions.data="gridDataSource",e.gridDataSource=[],e.vm.GridOptions.selectedItems=[]})(),o(),e.$watch("vm.GridOptions.pagingOptions",function(t,i){t!=i&&r(a(e.EmployeesLeaveRequests,e.vm.GridOptions.pagingOptions.pageSize,e.vm.GridOptions.pagingOptions.currentPage,e.vm.GridOptions.filterOptions.filterText))},!0),e.$watch("vm.GridOptions.filterOptions",function(t,i){t!=i&&r(a(e.EmployeesLeaveRequests,e.vm.GridOptions.pagingOptions.pageSize,e.vm.GridOptions.pagingOptions.currentPage,e.vm.GridOptions.filterOptions.filterText))},!0)}]),appRoot.controller("EmployeeTimesheetsController",["$scope","$state","$q","$rootScope","$filter","AppSettings","TimesheetServices","TimesheetStatus","uiGridConstants","uiGridExporterConstants","uiGridGroupingConstants","UiGridExtensions","FileDownloadService",function(e,t,i,n,o,r,a,s,l,c,p,u,d){e.vm={},e.vm.timesheetStatus=[],e.vm.ReportWeeksLimit=8;function m(e){this.startDate=new Date(e),this.endDate=new Date(e),this.endDate.setDate(this.startDate.getDate()+6)}e.$on("$stateChangeSuccess",function(i,n,o,r,a){e.vm.state=t.current});var y=function(e){var t=i.defer(),n=e||h(new Date);return a.getTimesheetReports(n.dateOnlyString()).then(function(e){t.resolve(e)},function(e){console.log("Failed to get timesheet reports...")}),t.promise},h=function(t){var i=t.getDay()||7;return i!=e.vm.weekStartDay&&t.setHours(-24*(i<e.vm.weekStartDay?7+i-e.vm.weekStartDay:i-e.vm.weekStartDay)),t};e.$watch("vm.selectedWeek",function(e,t){e!=t&&y(e).then(function(e){g(e)})},!0),e.$watch("vm.selectedStatus",function(t,i){t!=i&&(e.timesheetData=e.reports.filter(function(e){return e.timesheetStatus==t}),e.timesheetGridOptions.data=e.timesheetData,t||(e.timesheetData=e.reports,e.timesheetGridOptions.data=e.timesheetData))},!0);e.vm.refreshData=function(){e.timesheetGridOptions.data=o("filter")(e.timesheetData,e.vm.filterText,!1)},e.exportReport=function(t){d.downloadFile("/api/reports/ExportTimesheetSummary?name=employeetimesheets&format="+t+"&from="+e.vm.selectedWeek.dateOnlyString()+"&searchKey="+(e.vm.filterText?e.vm.filterText.trim():""))},e.getApproverNames=function(e){var t="";return e&&e.length>0&&e.forEach(function(i,n){t+=i.approverName,n<e.length-1&&(t+=", ")}),t};var f,g=function(t){e.reports=[],e.vm.timesheetStatus=[],e.vm.selectedStatus=null,angular.forEach(t,function(t){var i=t;i.timesheetStatus=s.getById(t.timesheetStatus).title,-1==e.vm.timesheetStatus.indexOf(i.timesheetStatus)&&e.vm.timesheetStatus.push(i.timesheetStatus),e.reports.push(i)}),e.timesheetData=e.reports,e.timesheetGridOptions.data=e.timesheetData};e.timesheetGridOptions=angular.copy(r.gridSettings),e.timesheetGridOptions.showColumnFooter=!0,e.timesheetGridOptions.columnDefs=[{field:"employeeName",displayName:"Name",cellTemplate:'<div class="ui-grid-cell-contents"><span><a target="_blank" uib-tooltip="{{grid.getCellValue(row,col)}}" tooltip-placement="right" data-ui-sref="employee.summary({id: row.entity.employeeId})">{{grid.getCellValue(row,col)}}</a></span></div>',enableGrouping:!1},{field:"billableHours",displayName:"Billable hours",filters:[{condition:l.filter.GREATER_THAN,placeholder:"Greater Than"},{condition:l.filter.LESS_THAN,placeholder:"Less Than"}],treeAggregationType:p.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=u.formatAggregation(e)},groupingShowGroupingMenu:!1},{field:"nonBillableHours",displayName:"Non-Billable hours",cellClass:"ui-grid-cell",filters:[{condition:l.filter.GREATER_THAN,placeholder:"Greater Than"},{condition:l.filter.LESS_THAN,placeholder:"Less Than"}],treeAggregationType:p.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=u.formatAggregation(e)},groupingShowGroupingMenu:!1},{field:"timesheetStatus",displayName:"Status",groupingShowAggregationMenu:!1},{field:"pendingApprovers",displayName:"Pending Approvers",cellTemplate:'<div class="ui-grid-cell-contents" uib-tooltip="{{grid.appScope.getApproverNames(row.entity.pendingApprovers)}}" tooltip-placement="left"><span data-ng-repeat = "a in row.entity.pendingApprovers"><a target="_blank" data-ui-sref="employee.summary({id: a.approverId})">{{a.approverName}}</a><span ng-if = "row.entity.pendingApprovers.length > 1 && !$last">, </span></span></div>',groupingShowAggregationMenu:!1}],e.timesheetGridOptions.onRegisterApi=function(t){e.vm.gridApi=t},(f=i.defer(),a.orgSettings.get({action:"settings"},function(e){f.resolve(e)},function(e){console.log("Failed to get org settings...")}),f.promise).then(function(t){e.vm.weekStartDay=t.leave.weekStartDay,function(){e.vm.weeks=[];for(var t=h(new Date);e.vm.weeks.length<e.vm.ReportWeeksLimit;)e.vm.weeks.push(new m(t)),t.setDate(t.getDate()-7)}(),e.vm.selectedWeek=e.vm.weeks[0].startDate,y().then(function(e){g(e)})})}]),appRoot.factory("JobTitleServices",["$resource","$q","$routeParams",function(e,t,i){return{jobTitle:e("/api/jobtitle/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),leaveplan:e("/api/leaves/:action/:id",{id:"@id",action:"@action"}),getRoles:function(){return this.role.query({}).$promise}}}]),appRoot.controller("EmployeeDefaultsController",["$scope","AppSettings","WorkerType","TimeType","TimeDuration","NotificationService","GetStartedSteps","AppContext","OrgSettingServices","DashboardServices",function(e,t,i,n,o,r,a,s,l,c){e.model={},e.vm={},e.vm.modelOptions=t.modelBlurSettings,e.vm.workerType=i,e.vm.timeType=n,e.vm.timeDuration=o,e.vm.isEditable=!0,e.isDataResolved=!1,e.vm.duration=[],e.vm.endProbationManually=!0,angular.forEach(o.getAll(),function(t,i){t.id!=o.hours.id&&t.id!=o.none.id&&t.id!=o.halfYear.id&&t.id!=o.year.id&&t.id!=o.quarterly.id&&(t.index=i,e.vm.duration.push(t))});s.isOrgSetupComplete||c.updateOnBoardStep(a.EmployeeDefaults.id).then(function(e){}),l.getEmployeeDefaultSettings().then(function(t){t.probationPeriod&&(e.vm.isEditable=!1,e.model=t,e.vm.endProbationManually=!e.model.endProbationManually,e.model.probationPeriod.unit=e.model.probationPeriod.unit,e.model.noticePeriod.duration=e.model.noticePeriod.duration?e.model.noticePeriod.duration:0)},function(e){r.error("An error occurred while getting employee default settings.")}).finally(function(t){e.isDataResolved=!0}),e.saveSettings=function(){e.vm.form.empSettings.$valid?(e.model.endProbationManually=!e.vm.endProbationManually,l.updateEmployeeDefaultSettings(e.model).then(function(i){r.success("Employee Default Settings updated Successfully"),e.vm.isEditable=!e.vm.isEditable,t.employeeDefaultSettings=angular.copy(e.model)},function(t){e.vm.submitted=!1,r.error("An error occurred while updating employee default settings.")})):(e.$broadcast("validateForm"),e.vm.submitted=!1)},e.cancelSettings=function(){e.vm.isEditable=!e.vm.isEditable,e.model=e.modelCopy},e.editSettings=function(){e.modelCopy=angular.copy(e.model),e.vm.form&&e.vm.form.empSettings&&e.vm.form.empSettings.$setPristine()},e.$watch("model",function(t,i){t&&t.probationPeriod&&(e.model.probationPeriod.duration=1*e.model.probationPeriod.duration)},!0)}]),function(e){!function(e){var t=function(){function e(e,t){this.resource=e,this.q=t,this.attendance=this.resource("/api/attendance/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getOrgLocations=function(){return this.attendance.query({action:"locations"}).$promise},e.prototype.getWeekoffs=function(){return this.attendance.query({action:"weekoffs"}).$promise},e.prototype.getShifts=function(){return this.attendance.query({action:"shift"}).$promise},e.prototype.getAttendanceDevice=function(){return this.attendance.get({action:"devices"}).$promise},e.prototype.getWFH=function(){return this.attendance.get({action:"wfh"}).$promise},e.prototype.saveWeekOffs=function(e){return this.attendance.save({action:"weekoffs"},e).$promise},e.prototype.updateWeekOffs=function(e){return this.attendance.update({action:"weekoffs"},e).$promise},e.prototype.deleteWeekOffs=function(e){return this.attendance.delete({action:"weekoffs",id:e}).$promise},e.prototype.changeDefaultWeekOffs=function(e){return this.attendance.update({action:"changedefault"},e).$promise},e.prototype.saveShift=function(e){return this.attendance.save({action:"shift"},e).$promise},e.prototype.updateShift=function(e){return this.attendance.update({action:"shift"},e).$promise},e.prototype.changeDefaultShift=function(e){return this.attendance.update({action:"changedefaultshift"},e).$promise},e.prototype.deleteShift=function(e){return this.attendance.delete({action:"shift",id:e}).$promise},e.prototype.getWebClockIn=function(){return this.attendance.get({action:"webclockin"}).$promise},e.prototype.saveWebClockIn=function(e){return this.attendance.save({action:"webclockin"},e).$promise},e.prototype.updateWebClockIn=function(e){return this.attendance.update({action:"webclockin"},e).$promise},e.prototype.getRemoteClockIn=function(){return this.attendance.get({action:"remoteClockin"}).$promise},e.prototype.saveRemoteClockIn=function(e){return this.attendance.save({action:"remoteClockin"},e).$promise},e.prototype.updateRemoteClockIn=function(e){return this.attendance.update({action:"remoteClockin"},e).$promise},e.prototype.saveWFH=function(e){return this.attendance.save({action:"wfh"},e).$promise},e.prototype.updateWFH=function(e){return this.attendance.update({action:"wfh"},e).$promise},e.prototype.getAttendanceSettings=function(){return this.attendance.get({action:"attendancesettings"}).$promise},e.prototype.updateAttendanceSettings=function(e){return this.attendance.update({action:"attendancesettings"},e).$promise},e.$inject=["$resource","$q"],e}();e.AttendanceService=t;var i=function(){function e(e){this.resource=e,this.attendancetrackingpolicy=this.resource("/api/attendance/trackingpolicy/:id/:action",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getTimingPolicies=function(){return this.attendancetrackingpolicy.query({action:"all"}).$promise},e.prototype.changeDefaultTrackingPolicy=function(e){return this.attendancetrackingpolicy.update({action:"setdefaulttrackingpolicy",id:e.identifier},e).$promise},e.prototype.deleteTrackingPolicy=function(e){return this.attendancetrackingpolicy.delete({action:"delete",id:e}).$promise},e.prototype.updateTrackingPolicy=function(e){return this.attendancetrackingpolicy.update({action:"update",id:e.id},e).$promise},e.prototype.saveTrackingPolicy=function(e){return this.attendancetrackingpolicy.save({action:"create"},e).$promise},e.prototype.runLeaveDeductions=function(){return this.attendancetrackingpolicy.save({action:"runleavededuction"}).$promise},e.prototype.getLeaveDeductionStatus=function(){return this.attendancetrackingpolicy.get({action:"leavedeductionstatus"}).$promise},e.prototype.getTrackingPolicyEmployees=function(e){return this.attendancetrackingpolicy.query({action:"employees",id:e}).$promise},e.prototype.updateLeaveDeductionConfig=function(e,t){return this.attendancetrackingpolicy.update({action:"deductionConfig",id:e},t).$promise},e.prototype.getLeaveDeductionConfig=function(e){return this.attendancetrackingpolicy.get({action:"deductionConfig",id:e}).$promise},e.$inject=["$resource"],e}();e.AttendanceTrackingPolicyService=i;var n=function(){function e(e){this.resource=e,this.attendance=this.resource("/api/attendance/synctoolnetwork/:id/:action",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getAll=function(){return this.attendance.query({action:"all"}).$promise},e.prototype.getDevices=function(){return this.attendance.query({action:"devices"}).$promise},e.prototype.save=function(e){return this.attendance.save({action:"create"},e).$promise},e.prototype.saveReInstallation=function(e){return this.attendance.save({action:"reinstall",id:e}).$promise},e.prototype.generateSynctoolPassword=function(e){return this.attendance.update({action:"generatesynctoolpassword",id:e}).$promise},e.$inject=["$resource"],e}();e.AttendanceSyncToolNetworkService=n}(e.Services||(e.Services={}))}(AttendanceSettings||(AttendanceSettings={})),angular.module("xhr").service("AttendanceService",AttendanceSettings.Services.AttendanceService),angular.module("xhr").service("AttendanceTrackingPolicyService",AttendanceSettings.Services.AttendanceTrackingPolicyService),angular.module("xhr").service("AttendanceSyncToolNetworkService",AttendanceSettings.Services.AttendanceSyncToolNetworkService),function(e){!function(t){var i=function(){function e(e,t,i,n,o,r,a,s){this._state=e,this.q=t,this.modal=i,this.appSettings=n,this._dialogs=o,this.notificationService=r,this.filter=a,this.attendanceSettingsService=s,this.attendanceSchemes=[],this.baseUrl=-1==this._state.current.name.indexOf("settings")?"/attendance":"/settings/timeattendance",this.getattendanceCaptureSchemas(),this.initializeGridSettings()}return e.prototype.getattendanceCaptureSchemas=function(){var e=this;this.attendanceSettingsService.getAttendanceCaptureSchemes().then(function(t){e.attendanceSchemes=t,e.attendanceSchemes=e.filter("orderBy")(e.attendanceSchemes,"name")})},e.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.columnDefs=[{field:"name",displayName:"Name",cellTemplate:'<div class="ui-grid-cell-contents"><p><span>{{grid.getCellValue(row,col)}}</span></p><p>{{row.entity.description}}</p></div>',cellClass:"ui-grid-cell"},{field:"totalEmployees",displayName:"APPLIES TO",cellTemplate:'<div class="ui-grid-cell-contents text-center"><a data-ng-click="grid.appScope.viewEmployees(row.entity);" data-ng-if="grid.getCellValue(row,col) > 0" title="Click to view employees"><div>{{grid.getCellValue(row,col)}}</div><div>Employees</div></a><div data-ng-if="grid.getCellValue(row,col) == 0"><div>{{grid.getCellValue(row,col)}}</div><div>Employees</div></div></div>',cellClass:"ui-grid-cell"},{field:"isDefault",enableSorting:!1,displayName:"DEFAULT",cellTemplate:'<div class="default-plan ui-grid-cell-contents inline-action-menu"><a class="anchor-sm pull-down" data-ng-click="grid.appScope.setAsDefault(row.entity)" data-ng-if="!row.entity.isDefault"><span class="icon-checkmark-circle icon-grey information-tooltip tooltip-grey" uib-tooltip="Set as default" tooltip-placement="right"></span></a><a class="anchor-sm pull-down" data-ng-if="row.entity.isDefault"><span class="icon-checkmark-circle information-tooltip tooltip-grey" uib-tooltip="This is Default Capture Scheme" tooltip-placement="right"></span></a></div>',cellClass:"ui-grid-cell"},{name:"Actions",enableSorting:!1,displayName:"ACTIONS",cellTemplate:'<div class="ui-grid-cell-options ui-grid-cell-contents"><span class="plan-edit clearfix col-sm-12 clear-side-padding"><ul class="action-items"><li class="list-item"><a class="btn btn-sm-info clear-right-margin" href="#{{grid.appScope.baseUrl}}/attendancecapturescheme/{{row.entity.id}}/config">Setup</a></li><li class="list-item"><a class="list-link" href="#{{grid.appScope.baseUrl}}/attendancecapturescheme/edit/{{row.entity.id}}"><span class="icon-pencil5" uib-tooltip="Edit" tooltip-placement="left"></span></a></li><li class="list-item"><a class="list-link" data-ng-if="!row.entity.isDefault" data-ng-click="grid.appScope.deleteCaptureScheme(row.entity)"><span class="icon-remove3" uib-tooltip="Delete" tooltip-placement="right"></span></a></li></ul></span></div>',cellClass:"ui-grid-cell cell-tooltip"}],this.gridOptions.rowHeight=65,this.gridOptions.data="ctrl.attendanceSchemes",this.gridOptions.enableRowSelection=!0,this.gridOptions.appScopeProvider=this},e.prototype.setAsDefault=function(e){var t=this;this.attendanceSettingsService.setDefaultattendanceCaptureScheme(e.id).then(function(i){t.attendanceSchemes.forEach(function(e){e.isDefault=!1}),e.isDefault=!0,t.notificationService.success(e.name+" is set as default Capture Scheme.")},function(i){t.notificationService.error("Error in setting "+e.name+" as default Capture Scheme.")})},e.prototype.deleteCaptureScheme=function(e){var t=this;this._dialogs.confirm("Please Confirm","Are you sure want to delete "+e.name+" ?").result.then(function(){t.notificationService.information("Deleting capture Scheme"),t.attendanceSettingsService.deleteAttendanceCaptureScheme(e.id).then(function(i){i.isDeleted?(t.notificationService.success(e.name+" deleted successfully"),t.attendanceSchemes.splice(t.attendanceSchemes.indexOf(e),1)):t.notificationService.error(e.name+" cannot be deleted because it is assigned to employees.")},function(i){t.notificationService.error("Error in deleting "+e.name)})})},e.prototype.viewEmployees=function(e){var t=this;this.attendanceSettingsService.getCaptureSchemeEmployees(e.id).then(function(i){t.modal.open({templateUrl:"viewEmployees",controller:r,controllerAs:"ctrl",resolve:{ConfigName:function(){return e.name},Employees:function(){return i}}})},function(e){t.notificationService.error("Error occured while retrieving employees")})},e.$inject=["$state","$q","$uibModal","AppSettings","dialogs","NotificationService","$filter","AttendanceSettingsService"],e}();t.AttendanceCaptureSchemeController=i;var n=function(){function t(t,i,n,o,r){var a=this;this._location=t,this._stateParams=i,this._state=n,this.notificationService=o,this.attendanceSettingsService=r,this._stateParams.id?(this.schemeId=this._stateParams.id,this.attendanceSettingsService.getAttendanceCaptureScheme(this.schemeId).then(function(e){a.captureScheme=e,a.captureSchemeCopy=angular.copy(a.captureScheme)})):this.captureScheme=new e.Models.AttendanceCaptureScheme({}),this.attendanceSettingsService.getAttendanceCaptureSchemes().then(function(e){a.captureSchemeList=e}),this.baseUrl=-1==this._state.current.name.indexOf("settings")?"/attendance":"/settings/timeattendance"}return t.prototype.saveCaptureScheme=function(e){var t=this;this.form.attendanceCaptureForm.$valid&&this.attendanceSettingsService.saveAttendanceCaptureScheme(e).then(function(e){t.notificationService.success("Capture scheme added successfully."),t.cancel()},function(e){t.notificationService.error("Error in adding capture scheme")})},t.prototype.updateCaptureScheme=function(e){var t=this;this.form.attendanceCaptureForm.$valid&&this.attendanceSettingsService.updateAttendanceCaptureScheme(e).then(function(e){t.notificationService.success("Capture scheme updated Successfully."),t.cancel()},function(e){t.notificationService.error("An error occurred while updating capture scheme.")})},t.prototype.cancel=function(){this._location.path(this.baseUrl+"/attendancecapturescheme")},t.prototype.doesCaptureSchemeExists=function(e){return!!(this.captureSchemeCopy&&this.captureSchemeCopy.id&&this.captureSchemeCopy.id>0&&this.captureSchemeCopy.name.toUpperCase()==e.toUpperCase())||!this.captureSchemeList.find(function(t){return t.name.toUpperCase()==e.toUpperCase()})},t.$inject=["$location","$stateParams","$state","NotificationService","AttendanceSettingsService"],t}();t.AddAttendanceCaptureSchemeController=n;var o=function(){function e(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f){this._state=e,this.q=t,this.modal=i,this.scope=n,this.filter=o,this.appSettings=r,this.notificationService=a,this.attendanceService=s,this.attendanceSettingsService=l,this.dialogs=c,this.appContext=p,this.dashboardServices=u,this.timeDuration=d,this.systemLeaveType=m,this.leaveSettingsService=y,this.leaveDeductionStatus=h,this.timeout=f,this.vm={},this.timingPoliciesGridOptions={},this.model={},this.index=0,this.paidLeaveTypes=[],this.vm.isTimingPolicyAdded=!1,this.eventType=Audit.Model.AuditEventType.AttendanceTrackingPolicy,this.init()}return e.prototype.initializeGridSettings=function(){this.timingPoliciesGridOptions=angular.copy(this.appSettings.gridSettings),this.timingPoliciesGridOptions.rowHeight=65,this.timingPoliciesGridOptions.columnDefs=[{field:"name",displayName:"POLICY NAME",cellClass:"ui-grid-cell"},{field:"employeeCount",displayName:"APPLIES TO",width:120,cellTemplate:'<div class="ui-grid-cell-contents text-center"><a data-ng-click="grid.appScope.$parent.ctrl.viewEmployees(row.entity);" data-ng-if="grid.getCellValue(row,col) > 0" title="Click to view employees"><div>{{grid.getCellValue(row,col)}}</div><div>Employees</div></a><div data-ng-if="grid.getCellValue(row,col) == 0"><div>{{grid.getCellValue(row,col)}}</div><div>Employees</div></div></div>',cellClass:"ui-grid-cell"},{field:"isDefault",enableSorting:!1,displayName:"DEFAULT",cellTemplate:'<div class="default-plan ui-grid-cell-contents inline-action-menu text-center"><a class="anchor-sm pull-down" data-ng-click="grid.appScope.$parent.ctrl.changeDefaultPolicy(row.entity);" data-ng-if="!row.entity.isDefault"><span class="icon-checkmark-circle icon-grey information-tooltip tooltip-grey" uib-tooltip="Set as default" tooltip-placement="right"></span></a><a class="anchor-sm pull-down" data-ng-if="row.entity.isDefault"><span class="icon-checkmark-circle information-tooltip tooltip-grey" uib-tooltip="This is default policy" tooltip-placement="right"></span></a></div>',width:120,cellClass:"ui-grid-cell"},{name:"Actions",enableSorting:!1,displayName:"ACTIONS",cellClass:"ui-grid-cell cell-tooltip",cellTemplate:'<div class="ui-grid-cell-options ui-grid-cell-contents"><span><ul class="action-items list-inline"><li class="list-item"><a data-ng-click="grid.appScope.$parent.ctrl.editPolicy(row.entity);" class="list-link"><span class="icon-pencil5" uib-tooltip="Edit" tooltip-placement="left"></span></a></li><li class="list-item"><a ng-if="!row.entity.isDefault" data-ng-click="grid.appScope.$parent.ctrl.deletePolicy(row.entity);" class="list-link"><span class="icon-remove3" uib-tooltip="Delete" tooltip-placement="right"></span></a></li></ul></span></div>'}],this.timingPoliciesGridOptions.data="ctrl.vm.timingPoliciesList"},e.prototype.intializeLateTolerance=function(e){e?(this.vm.lateTolerance=e,this.vm.allowLateTolerance=!0,this.vm.allowlateFrequency=!!e.monthLateFrequencyLimit,this.vm.allowMissingSwipeFrequency=!!e.monthMissingSwipesLimit,this.vm.allowpercentageOfEffectiveHours=!!e.percentageOfEffectiveHours):(this.vm.allowLateTolerance=this.vm.allowlateFrequency=this.vm.allowpercentageOfEffectiveHours=this.vm.allowMissingSwipeFrequency=!1,this.vm.lateTolerance={deductFromPaidLeave:!1})},e.prototype.isTimingPoliciyModelValid=function(){if(this.vm.allowLateTolerance){if(!(this.vm.allowlateFrequency||this.vm.allowpercentageOfEffectiveHours||this.vm.lateTolerance.onNoAttendanceLogged||this.vm.allowMissingSwipeFrequency))return!1;if(this.vm.allowpercentageOfEffectiveHours&&(!this.vm.lateTolerance.percentageOfEffectiveHours||this.vm.lateTolerance.percentageOfEffectiveHours<=0||this.vm.lateTolerance.percentageOfEffectiveHours>100))return!1;if(this.vm.allowlateFrequency&&(!this.vm.lateTolerance.monthLateFrequencyLimit||this.vm.lateTolerance.monthLateFrequencyLimit<1||this.vm.lateTolerance.monthLateFrequencyLimit>30))return!1;if(this.vm.allowMissingSwipeFrequency&&(!this.vm.lateTolerance.monthMissingSwipesLimit||this.vm.lateTolerance.monthMissingSwipesLimit<1||this.vm.lateTolerance.monthMissingSwipesLimit>30))return!1}return!0},e.prototype.getDeductionConfig=function(){return this.vm.allowpercentageOfEffectiveHours||(this.vm.lateTolerance.percentageOfEffectiveHours=0),this.vm.allowlateFrequency||(this.vm.lateTolerance.monthLateFrequencyLimit=0),this.vm.allowMissingSwipeFrequency||(this.vm.lateTolerance.monthMissingSwipesLimit=0),this.vm.lateTolerance},e.prototype.resetForm=function(){this.vm.form.timingpolicy.$setPristine(),this.vm.submitted=!1,this.vm.hideForm=!0,this.loadTimingPolicies()},e.prototype.loadTimingPolicies=function(){var e=this;this.attendanceService.getTimingPolicies().then(function(t){e.vm.timingPolicies=t;var i=e.filter("groupBy")(t,"identifier");e.vm.timingPoliciesList=[],angular.forEach(i,function(t){if(t.length>1){var i=t.filter(function(t){return t.effectiveFrom.stringToDate()<=e.vm.currentDate});if(i){var n=e.filter("orderBy")(i,"effectiveFrom")[i.length-1];n&&e.vm.timingPoliciesList.push(n)}}else e.vm.timingPoliciesList.push(t[0]);e.vm.timingPoliciesList=e.filter("orderBy")(e.vm.timingPoliciesList,"name")})})},e.prototype.viewEmployees=function(e){var t=this;this.attendanceService.getTrackingPolicyEmployees(e.identifier).then(function(i){t.modal.open({templateUrl:"viewEmployees",controller:r,controllerAs:"ctrl",resolve:{ConfigName:function(){return e.name},Employees:function(){return i}}})},function(e){t.notificationService.error("Error occured while retrieving employees")})},e.prototype.setupLeaveDeductionConfig=function(e){var t=this,i=angular.copy(e);i.isEditable=this.model.isEditable,this.modal.open({templateUrl:"attendancesettings/TimingPolicyConfiguration",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"TimingPolicyConfigurationController as configCtrl",resolve:{config:function(){return{timingPolicy:i,leaveDeductionConfig:i.leaveDeductionConfig,isEditable:i.isEditable}},paidLeaveTypes:function(){return t.paidLeaveTypes}}}).result.finally(function(){t.attendanceService.getLeaveDeductionConfig(i.id).then(function(t){e.leaveDeductionConfig=t})})},e.prototype.changeDefaultPolicy=function(e){var t=this;this.attendanceService.changeDefaultTrackingPolicy(e).then(function(i){angular.forEach(t.vm.timingPolicies,function(t){t.isDefault=!1,t.id===e.id&&(t.isDefault=!0)}),t.notificationService.success(e.name+" is set as default attendance tracking policy.")},function(e){t.notificationService.error("Error in changing default attendance tracking policy.")})},e.prototype.editPolicy=function(e){var t=this,i=this.filter("where")(this.vm.timingPolicies,{identifier:e.identifier});this.vm.previousTimingPolicyVersions=[],this.vm.currentTimingPolicyVersions=[],angular.forEach(i,function(e){e.effectiveFrom.stringToDate()<=t.vm.currentDate&&t.vm.previousTimingPolicyVersions.push(e),t.vm.currentTimingPolicyVersions.push(e)}),this.vm.currentTimingPolicy=this.filter("orderBy")(this.vm.previousTimingPolicyVersions,"name")[0],this.vm.currentTimingPolicyVersions=angular.copy(this.filter("orderBy")(this.vm.currentTimingPolicyVersions,"name")),this.updateCurrentSelected(e),this.vm.hideForm=!1},e.prototype.updateCurrentSelected=function(e){var t=new Date((new Date).setHours(0,0,0,0));t.setDate(t.getDate()-1),this.model=e,this.model.effectiveFrom="string"==typeof e.effectiveFrom?e.effectiveFrom.stringToDate():e.effectiveFrom,e.effectiveFrom<=t?(e.isEditable=!1,this.model.isEditable=!1):(e.isEditable=!0,this.model.isEditable=!0),this.vm.selectedTimingPolicy=e},e.prototype.getTimingPolicyEffectiveFrom=function(e){return e?"string"==typeof e?e.stringToDateWithTime():e:null},e.prototype.deletePolicy=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure want to delete this attendance tracking policy ?").result.then(function(){e.isDefault?t.notificationService.information("Default attendance tracking policy cannot be deleted."):e.employeeCount>0?t.notificationService.error(e.name+" policy cannot be deleted because it is assigned to employees"):t.attendanceService.deleteTrackingPolicy(e.identifier).then(function(i){t.vm.timingPoliciesList=t.vm.timingPoliciesList.filter(function(t){return t.id!=e.id}),t.notificationService.success("Attendance tracking policy deleted successfully")})})},e.prototype.doesRevisionExist=function(e){var t=this,i=new Date(e),n=this.filter("date")(i,"ddMMyyyy");return null==this.vm.currentTimingPolicyVersions.find(function(e,i,o){return t.vm.selectedTimingPolicy.id!=e.id&&t.filter("yyyymmddToDate")(e.effectiveFrom,"ddMMyyyy")===n})},e.prototype.saveTimingPolicy=function(){var e=this;if(this.vm.currentDate=new Date((new Date).setHours(0,0,0,0)),this.vm.inValidEffectiveFromDate=this.model.effectiveFrom<this.vm.currentDate,!this.vm.inValidEffectiveFromDate&&this.vm.form.timingpolicy.$valid)if(this.model.id){var t=angular.copy(this.model);t.effectiveFrom=t.effectiveFrom.dateOnlyString(),this.attendanceService.updateTrackingPolicy(t).then(function(t){e.vm.isTimingPolicyAdded=!0,e.loadTimingPolicies(),e.resetForm(),e.vm.hideForm=!0,e.notificationService.success("Attendance tracking policy updated Successfully.")},function(t){e.vm.isTimingPolicyAdded=!1})}else this.model.effectiveFrom=this.vm.currentDate,this.model.effectiveFrom.setDate(this.vm.currentDate.getDate()+1),this.attendanceService.saveTrackingPolicy(this.model).then(function(t){t.isEditable=!0,e.vm.isTimingPolicyAdded=!0,e.vm.timingPolicies.unshift(t),t.employeeCount=0,e.vm.timingPoliciesList.unshift(t),e.resetForm(),e.vm.hideForm=!0,e.notificationService.success("Attendance tracking policy added Successfully.")},function(t){e.vm.isTimingPolicyAdded=!1})},e.prototype.onChangeTolerance=function(){this.vm.allowLateTolerance||this.intializeLateTolerance(null)},e.prototype.addTimingPolicy=function(){this.vm.hideForm=!1,this.vm.allowLateTolerance=!1,this.model={},this.intializeLateTolerance(null)},e.prototype.runLeaveDeductions=function(){var e=this;this.isDeductionPending?this.notificationService.error("Pending run attendance leave deductions request exists"):this.dialogs.confirm("Please Confirm",'Are you sure want to run <span class="text-bold">LEAVE DEDUCTIONS</span>?').result.then(function(){e.isDeductionPending=!0,e.attendanceService.runLeaveDeductions(),e.getRunLeaveDeductionStatus()})},e.prototype.getRunLeaveDeductionStatus=function(){var e=this;this.attendanceService.getLeaveDeductionStatus().then(function(t){e.isDeductionPending=t.isRequestPending,e.isDeductionPending?e.leaveDeductionTimer=e.timeout(function(){e.getRunLeaveDeductionStatus()},3e4):e.timeout.cancel(e.leaveDeductionTimer)})},e.prototype.getPaidLeaveTypes=function(){var e=this;this.leaveSettingsService.getPaidLeaveTypes().then(function(t){e.paidLeaveTypes=t})},e.prototype.cancel=function(){this.resetForm()},e.prototype.openHistoryPopup=function(){this.modal.open({template:'<audit-component identifier="ctrl.model.identifier" audit-title="\'Attendance Tracking Policy\'" event-type="ctrl.eventType" dismiss="$dismiss(\'true\')"> </audit-component>',windowClass:"right-side-modal field-audit-template-right-side-modal",backdrop:!0,keyboard:!1,scope:this.scope})},e.prototype.init=function(){this.vm.hideForm=!0,this.vm.roles=["ReportingManager","Hradmin"],this.vm.modelOptions=angular.copy(this.appSettings.modelBlurSettings),this.vm.datepickerOptions=angular.copy(this.appSettings.datepickerOptions),this.vm.interval=this.timeDuration,this.vm.hideForm=!0,this.vm.timingPoliciesList=[],this.vm.leaveRequestTypes=this.systemLeaveType.getAll(),this.vm.SystemLeaveType=this.systemLeaveType,this.vm.effectiveFromMinDate=new Date((new Date).setHours(0,0,0,0)),this.vm.currentDate=new Date((new Date).setHours(0,0,0,0)),this.vm.inValidEffectiveFromDate=!1,this.getPaidLeaveTypes(),this.loadTimingPolicies(),this.initializeGridSettings(),this.getRunLeaveDeductionStatus()},e.$inject=["$state","$q","$uibModal","$scope","$filter","AppSettings","NotificationService","AttendanceTrackingPolicyService","AttendanceSettingsService","dialogs","AppContext","DashboardServices","TimeDuration","SystemLeaveType","LeaveSettingsService","RecalculationStatus","$timeout"],e}();t.TimingPoliciesSettingsController=o;var r=function(){function e(e,t,i,n,o){this.attendanceSettingsService=e,this.configName=t,this.employees=i,this.notificationService=n,this.appSettings=o}return e.prototype.$onInit=function(){this.initializeGridSettings()},e.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee No.",cellClass:"ui-grid-cell"},{field:"displayName",displayName:"Employee Name",cellClass:"ui-grid-cell"},{field:"department",displayName:"Department",cellClass:"ui-grid-cell"},{field:"jobTitle",displayName:"Job Title",cellClass:"ui-grid-cell"},{field:"location",displayName:"Location",cellClass:"ui-grid-cell"}],this.gridOptions.data="ctrl.employees | filter : ctrl.filterText"},e.$inject=["AttendanceSettingsService","ConfigName","Employees","NotificationService","AppSettings"],e}();t.ViewAttendanceEmployees=r;var a=function(){function t(e,t){this.notificationService=e,this.attendanceService=t}return t.prototype.$onInit=function(){var t=this;this.attendanceService.getAttendanceSettings().then(function(i){t.attendanceSettings=new e.Models.AttendanceSettings(i),t.attendanceSettings.enableAttendanceVisualSwitch?t.attendanceView=e.Models.AttendanceView.Both:t.attendanceView=t.attendanceSettings.defaultAttendanceView},function(e){t.notificationService.error("Error occured while retrieving attendance settings")})},t.prototype.saveConfiguration=function(){var t=this;this.attendanceView==e.Models.AttendanceView.Both?this.attendanceSettings.enableAttendanceVisualSwitch=!0:(this.attendanceSettings.defaultAttendanceView=this.attendanceView,this.attendanceSettings.enableAttendanceVisualSwitch=!1),this.attendanceService.updateAttendanceSettings(this.attendanceSettings).then(function(e){t.notificationService.success("Attendance settings updated successfully")},function(e){t.notificationService.error("Error occured while saving attendance settings")})},t.$inject=["NotificationService","AttendanceService"],t}();t.AttendanceViewSettingsController=a}(e.Controllers||(e.Controllers={}))}(AttendanceSettings||(AttendanceSettings={})),angular.module("xhr").controller("TimingPoliciesSettingsController",AttendanceSettings.Controllers.TimingPoliciesSettingsController),angular.module("xhr").controller("AttendanceCaptureSchemeController",AttendanceSettings.Controllers.AttendanceCaptureSchemeController),angular.module("xhr").controller("AttendanceViewSettingsController",AttendanceSettings.Controllers.AttendanceViewSettingsController),angular.module("xhr").controller("AddAttendanceCaptureSchemeController",AttendanceSettings.Controllers.AddAttendanceCaptureSchemeController),angular.module("xhr").controller("ViewTrackingPolicyEmployees",AttendanceSettings.Controllers.ViewAttendanceEmployees);var HolidaySettings,Settings,StatutorySettings;__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){var t=function(){return function(e){this.id=e.id,this.name=e.name,this.description=e.description,this.isDefault=e.isDefault}}();e.HolidayList=t;var i=function(e){function t(t){var i=e.call(this,t)||this;return i.totalEmployees=t.totalEmployees,i.years=t.years,i}return __extends(t,e),t}(t);e.HolidayListView=i;var n=function(){function e(e){this.id=e.id,this.date=e.date,this.name=e.name,this.description=e.description,this.isFloater=e.isFloater,this.holidayListId=e.holidayListId,this.date&&"string"==typeof this.date&&(this.date=e.date.stringToDate())}return e.prototype.toJSON=function(){return this.date=this.date.dateOnlyString(),this},e}();e.Holiday=n}(e.Models||(e.Models={}))}(HolidaySettings||(HolidaySettings={})),function(e){!function(t){var i=function(){function e(e,t,i,n,o,r,a,s,l){this._state=e,this.holidaySettingsService=t,this.modal=i,this.filter=n,this.appSettings=o,this.notificationService=r,this.dialogs=a,this._scope=s,this._location=l,this.isCallInProgress=!1,this.baseUrl=-1==this._state.current.name.indexOf("setup")?"/settings/leaves":"/leaves",this.getHolidayLists()}return e.prototype.getHolidayLists=function(){var e=this;this.holidaySettingsService.getHolidayLists().then(function(t){e.holidayLists=t,e.holidayLists=e.filter("orderBy")(e.holidayLists,"name"),e.selectedHolidayList=e.holidayLists[0],e._location.path(e.baseUrl+"/holidaylist/"+e.selectedHolidayList.id+"/details")})},e.prototype.selectHolidayList=function(e){this.selectedHolidayList=this.holidayLists.find(function(t){return t.id==e}),this._location.path(this.baseUrl+"/holidaylist/"+e+"/details")},e.prototype.deleteHolidayList=function(e){var t=this;this.isCallInProgress||(this.isCallInProgress=!0,this.holidaySettingsService.deleteHolidayList(e.id).then(function(i){if(i.isDeleted){var n=t.holidayLists.indexOf(e);t.holidayLists.splice(n,1),t.holidayLists=t.filter("orderBy")(t.holidayLists,"name"),t.notificationService.success("Holiday list deleted successfully"),t._location.path(t.baseUrl+"/holidaylist/"+t.holidayLists[0].id+"/details")}else t.notificationService.error("Holiday list "+e.name+" cannot be deleted because it is assigned to employees.");t.isCallInProgress=!1},function(i){t.isCallInProgress=!1,t.notificationService.error("Error in deleting "+e.name)}))},e.prototype.addholidaylist=function(){this._location.path(this.baseUrl+"/addholidaylist")},e.prototype.editholidaylist=function(e){this._location.path(this.baseUrl+"/editholidaylist/"+e)},e.prototype.setDefaultHolidayList=function(e){var t=this;this.holidaySettingsService.setDefaultHolidayList(e.id).then(function(i){t.getHolidayLists(),t.notificationService.success(e.name+" is set as default holiday list")},function(i){t.notificationService.error("Error in setting "+e.name+" as default holiday list")})},e.$inject=["$state","HolidaySettingsService","$uibModal","$filter","AppSettings","NotificationService","dialogs","$scope","$location"],e}();t.HolidayListsController=i;var n=function(){function e(e,t,i,n,o,r,a,s,l){var c=this;this._state=e,this.holidaySettingsService=t,this.modal=i,this.filter=n,this.appSettings=o,this.notificationService=r,this.dialogs=a,this._scope=s,this._location=l,this.pastYears=[],this.holidays=[],this.currentDate=new Date((new Date).setHours(0,0,0,0)),this.setGridApi=function(e){c.gridApi=e},this.baseUrl=-1==this._state.current.name.indexOf("setup")?"/settings/leaves/holidaylist":"/leaves/holidaylist",this.initializeGridSettings(),this.holidaySettingsService.getHolidayListById(this._state.params.id).then(function(e){c.selectedHolidayList=e,c.pastYears=c.selectedHolidayList.years.length>4?c.selectedHolidayList.years.filter(function(e,t){if(t>3)return e}):[],c.holidays=[],c.selectedHolidayList.years.length>0&&c.getHolidays(c.selectedHolidayList.years[0])})}return e.prototype.initializeGridSettings=function(){this.hollidaysGridOptions=angular.copy(this.appSettings.gridSettings),this.hollidaysGridOptions.rowHeight=50,this.hollidaysGridOptions.columnDefs=[{field:"name",cellClass:"ui-grid-cell",displayName:"Name",cellTemplate:'<div data-ng-class="{\'align-cell-text\': row.entity.description }" class="ui-grid-cell-contents"><ul class="list-unstyled"><li class="overflowEllipsis"><span>{{grid.getCellValue(row,col)}} <span data-ng-if="row.entity.isFloater"> - Floating Holiday</span></span></li><li  class="overflowEllipsis">{{row.entity.description}}</li></ul></div>'},{field:"date",cellClass:"ui-grid-cell",displayName:"Date",cellTemplate:'<div class="ui-grid-cell-contents" ><span>{{grid.getCellValue(row, col) | yyyymmddToDate:"mediumDate" }}</span></div>'},{name:"Actions",enableSorting:!1,displayName:"Actions",cellClass:"ui-grid-cell cell-tooltip ui-grid-cell-contents",cellTemplate:'<div class="ui-grid-cell-options"><span class="plan-edit clearfix "><ul class="action-items"><li class="list-item"><a data-ng-if="grid.appScope.isExpired(row.entity)" data-ng-click="grid.appScope.editHoliday(row.entity.id)" class="list-link"><span class="icon-pencil5" uib-tooltip="Edit" tooltip-placement="left"></span></a></li><li class="list-item"><a data-ng-if="grid.appScope.isExpired(row.entity) || grid.appScope.isCustomerSupportLogin" data-ng-click="grid.appScope.deleteHoliday(row.entity);" class="list-link"><span class="icon-remove3" uib-tooltip="Delete" tooltip-placement="right"></span></a></li></ul></span></div>'}],this.hollidaysGridOptions.data="$ctrl.holidays",this.hollidaysGridOptions.multiSelect=!0,this.hollidaysGridOptions.onRegisterApi=this.setGridApi,this.hollidaysGridOptions.appScopeProvider=this,this.hollidaysGridOptions.beforeSelectionChange=function(e){return!0}},e.prototype.deleteHoliday=function(e){var t=this;this.holidaySettingsService.deleteHoliday(e.id,this.selectedHolidayList.id).then(function(e){e.isDeleted?(t.notificationService.success("Holiday Deleted Successfully."),t.getHolidays(t.activeYear)):t.notificationService.error("Past holiday cannot be deleted")},function(e){t.notificationService.error()}),this.gridApi.selection.clearSelectedRows()},e.prototype.deleteSelected=function(){var e=this;this.gridApi.selection.getSelectedRows().length?this.dialogs.confirm("Please Confirm","Are you sure want to delete selected holidays ?").result.then(function(){var t=[];angular.forEach(e.gridApi.selection.getSelectedRows(),function(e,i){t.push(e.id)}),e.holidaySettingsService.deleteHolidays(t,e.selectedHolidayList.id).then(function(t){t.isDeleted?(e.notificationService.success("Selected holidays deleted successfully."),e.gridApi.selection.clearSelectedRows(),e.getHolidays(e.activeYear)):e.notificationService.error("Error in deleting holidays.")})}):this.notificationService.error("No rows selected to delete")},e.prototype.isExpired=function(e){return this.currentDate<e.date.stringToDate()},e.prototype.getHolidays=function(e){var t=this;this.isShowPastYear=!1,this.activeYear=e,this.holidaySettingsService.getHolidays(this.selectedHolidayList.id,e).then(function(e){t.holidays=e,t.isPastYearActive=t.pastYears.find(function(e){return e==t.activeYear}),t.isShowPastYear=!1})},e.prototype.addHoliday=function(){this._location.path(this.baseUrl+"/"+this.selectedHolidayList.id+"/addholiday")},e.prototype.editHoliday=function(e){this._location.path(this.baseUrl+"/"+this.selectedHolidayList.id+"/editholiday/"+e)},e.$inject=["$state","HolidaySettingsService","$uibModal","$filter","AppSettings","NotificationService","dialogs","$scope","$location"],e}();t.HolidayListDetailsController=n;var o=function(){function e(e,t,i,n,o){var r=this;this.holidaySettingsService=e,this.modal=t,this.modalInstance=i,this.stateParams=n,this.notificationService=o,this.isRequestInProgress=!1,this.holidaySettingsService.getHolidayLists().then(function(e){r.holidayLists=e}),this.stateParams.holidayListId?this.holidaySettingsService.getHolidayListById(this.stateParams.holidayListId).then(function(e){r.model=e}):this.model={}}return e.prototype.save=function(){var e=this;this.form.holidayList.$valid&&!this.isRequestInProgress&&(this.isRequestInProgress=!0,this.holidaySettingsService.saveHolidayList(this.model).then(function(t){e.modalInstance.close({id:t.id}),e.notificationService.success("Holiday list added successfully.")},function(t){e.isRequestInProgress=!1,e.notificationService.error(t&&t.message?t.message:"Error in adding holiday list.")}))},e.prototype.doesHolidayListNameExists=function(e){var t=this;return!this.holidayLists.find(function(i){return!(t.model.id>0&&i.id==t.model.id||i.name.toUpperCase()!=e.toUpperCase())})},e.prototype.update=function(){var e=this;this.form.holidayList.$valid&&!this.isRequestInProgress&&(this.isRequestInProgress=!0,this.holidaySettingsService.updateHolidayList(this.model).then(function(t){e.modalInstance.close({isModified:!0}),e.notificationService.success("Holiday list updated successfully.")},function(t){e.isRequestInProgress=!1,e.notificationService.error("Error in updating holiday list.")}))},e.$inject=["HolidaySettingsService","$uibModal","$uibModalInstance","$stateParams","NotificationService"],e}();t.AddHolidayListController=o;var r=function(){function e(e,t,i,n,o,r,a){var s=this;this._stateParams=e,this._modalInstance=t,this._location=i,this.notificationService=n,this.holidaySettingsService=o,this._state=r,this.appSettings=a,this.steps=[],this.invalidHolidays=[],this.modalTitle="Import Holidays",this.setGridApi=function(e){s.gridApi=e},this.steps.push(new SharedModel.Step(1,"Upload Excel File","","excel-holidays-import",!1)),this.steps.push(new SharedModel.Step(2,"Import","","holidays-import-preview",!1)),this.currentStep=this.steps[0],this.baseUrl=-1==this._state.current.name.indexOf("setup")?"/old/#/settings/leaves":"/old/#/leaves",this.initializeGridSettings()}return e.prototype.closeModal=function(){this._modalInstance.close(!0)},e.prototype.importHolidays=function(){var e=this;this.holidaySettingsService.importHolidays(this._stateParams.holidayListId).then(function(t){0==t.validationResult.failures.length?(e.notificationService.error("Holidays information imported successfully."),e.closeModal()):e.notificationService.error("Error occured while processing excel file")},function(t){e.notificationService.error("Error occured while processing excel file")})},e.prototype.onFileUploaded=function(e){var t=this;e.result?this.holidaySettingsService.getImportHolidaysValidation(this._stateParams.holidayListId).then(function(e){e.failures.length>0?(t.hideFileUpload=!0,t.invalidHolidays=angular.copy(e.failures)):(t.importedHolidays=e.successful,t.nextStep())},function(e){t.notificationService.error("Error occured while processing excel file")}):this.notificationService.error("Error occured while processing excel file")},e.prototype.nextStep=function(){var e=this;this.currentStep.valid=!0,this.currentStep=this.steps.filter(function(t){return t.index==e.currentStep.index+1})[0]},e.prototype.initializeGridSettings=function(){this.hollidaysGridOptions=angular.copy(this.appSettings.gridSettings),this.hollidaysGridOptions.rowHeight=50,this.hollidaysGridOptions.columnDefs=[{field:"name",cellClass:"ui-grid-cell",displayName:"Name",cellTemplate:'<div data-ng-class="{\'align-cell-text\': row.entity.description }" class="ui-grid-cell-contents"><ul class="list-unstyled"><li class="overflowEllipsis"><span>{{grid.getCellValue(row,col)}} <span data-ng-if="row.entity.isFloater"> - Floating Holiday</span></span></li><li  class="overflowEllipsis">{{row.entity.description}}</li></ul></div>'},{field:"date",cellClass:"ui-grid-cell",displayName:"Date",cellTemplate:'<div class="ui-grid-cell-contents" ><span>{{grid.getCellValue(row, col) | yyyymmddToDate:"mediumDate" }}</span></div>'}],this.hollidaysGridOptions.data="ctrl.importedHolidays",this.hollidaysGridOptions.multiSelect=!0,this.hollidaysGridOptions.onRegisterApi=this.setGridApi,this.hollidaysGridOptions.appScopeProvider=this,this.hollidaysGridOptions.beforeSelectionChange=function(e){return!0}},e.$inject=["$stateParams","$uibModalInstance","$location","NotificationService","HolidaySettingsService","$state","AppSettings"],e}();t.ExcelImportHolidaysController=r;var a=function(){function t(t,i,n,o,r){var a=this;this.holidaySettingsService=t,this.modal=i,this.modalInstance=n,this.stateParam=o,this.notificationService=r,this.isRequestInProgress=!1,this.stateParam.holidayId?this.holidaySettingsService.getHolidaysById(this.stateParam.holidayListId,this.stateParam.holidayId).then(function(t){a.model=new e.Models.Holiday(t)}):this.model=new e.Models.Holiday({})}return t.prototype.save=function(){var e=this;if(this.form.manageHolidays.$valid&&!this.isRequestInProgress){this.isRequestInProgress=!0;var t=angular.copy(this.model);this.holidaySettingsService.saveHoliday(this.stateParam.holidayListId,t).then(function(t){e.modalInstance.close({isModified:!0}),e.notificationService.success("Holiday added successfully.")},function(t){e.isRequestInProgress=!1,e.notificationService.error("Error in adding holiday list.")})}},t.prototype.update=function(){var e=this;if(this.form.manageHolidays.$valid&&!this.isRequestInProgress){this.isRequestInProgress=!0,this.model.holidayListId=this.stateParam.holidayListId;var t=angular.copy(this.model);this.holidaySettingsService.updateHoliday(t).then(function(t){e.modalInstance.close({isModified:!0}),e.notificationService.success("Holiday updated successfully.")},function(t){e.isRequestInProgress=!1,e.notificationService.error("Error in updating holiday.")})}},t.$inject=["HolidaySettingsService","$uibModal","$uibModalInstance","$stateParams","NotificationService"],t}();t.AddHolidayController=a}(e.Controllers||(e.Controllers={}))}(HolidaySettings||(HolidaySettings={})),angular.module("xhr").component("holidayListDetails",{templateUrl:"holiday-list-details",controller:HolidaySettings.Controllers.HolidayListDetailsController,bindings:{}}),angular.module("xhr").controller("HolidayListsController",HolidaySettings.Controllers.HolidayListsController),angular.module("xhr").controller("ExcelImportHolidaysController",HolidaySettings.Controllers.ExcelImportHolidaysController),angular.module("xhr").controller("AddHolidayListController",HolidaySettings.Controllers.AddHolidayListController),angular.module("xhr").controller("AddHolidayController",HolidaySettings.Controllers.AddHolidayController),function(e){!function(e){var t=function(){function e(e,t){this.resource=e,this.q=t,this.holidays=this.resource("/api/holiday/settings/:action/:id/",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.holidayYearList=this.resource("/api/holiday/settings/holidayList/:listId/:action/:id/",{id:"@id",action:"@action",listId:"@listId"})}return e.prototype.getHolidayLists=function(){return this.holidays.query({action:"holidaylist"}).$promise},e.prototype.getHolidayListById=function(e){return this.holidayYearList.get({listId:e,action:"holidays"}).$promise},e.prototype.saveHolidayList=function(e){return this.holidays.save({action:"holidaylist"},e).$promise},e.prototype.updateHolidayList=function(e){return this.holidays.update({action:"holidaylist",id:e.id},e).$promise},e.prototype.deleteHolidayList=function(e){return this.holidays.delete({action:"holidaylist",id:e}).$promise},e.prototype.setDefaultHolidayList=function(e){return this.holidays.save({action:"holidaylist/default",id:e}).$promise},e.prototype.getHolidays=function(e,t){return this.holidayYearList.query({action:"holiday/year",listId:e,id:t}).$promise},e.prototype.getHolidaysById=function(e,t){return this.holidayYearList.get({action:"holiday",listId:e,id:t}).$promise},e.prototype.saveHoliday=function(e,t){return this.holidays.save({action:"holiday",id:e},t).$promise},e.prototype.updateHoliday=function(e){return this.holidays.update({action:"holiday",id:e.id},e).$promise},e.prototype.deleteHoliday=function(e,t){return this.holidays.delete({action:"holiday/"+e+"/"+t}).$promise},e.prototype.getImportHolidaysValidation=function(e){return this.holidays.get({action:"import/holidaysvalidation",id:e}).$promise},e.prototype.importHolidays=function(e){return this.holidays.update({action:"import/holidays",id:e}).$promise},e.prototype.deleteHolidays=function(e,t){return this.holidays.delete({action:"holidays",holidayIds:e,holidayListId:t}).$promise},e.$inject=["$resource","$q"],e}();e.HolidaySettingsService=t,angular.module("xhr").service("HolidaySettingsService",t)}(e.Services||(e.Services={}))}(HolidaySettings||(HolidaySettings={})),function(e){!function(e){var t=function(){function e(e,t){var i=this;this.resource=e,this.q=t,this.timesheetSettings=this.resource("/api/timesheetsettings/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.saveLegalEntityInvoiceInfo=function(e){return i.timesheetSettings.save({action:"legalentity",id:e.id},e).$promise},this.getTaxGroups=function(e){return i.timesheetSettings.query({action:"gettaxes",id:e}).$promise},this.addTaxGroup=function(e,t){return i.timesheetSettings.save({action:"addtaxgroup",id:t},e).$promise},this.updateTaxGroup=function(e){return i.timesheetSettings.save({action:"updatetaxgroup",id:e.id},e).$promise},this.deleteTaxGroup=function(e,t){return i.timesheetSettings.update({action:"deletetaxgroup",id:t},{id:e}).$promise},this.getPaymentTerms=function(){return i.timesheetSettings.query({action:"paymentterms"}).$promise},this.addPaymentTerm=function(e){return i.timesheetSettings.update({action:"addpaymentterm"},e).$promise},this.updatePaymentTerm=function(e){return i.timesheetSettings.save({action:"updatepaymentterm",id:e.id},e).$promise},this.deletePaymentTerm=function(e){return i.timesheetSettings.save({action:"deletepaymentterm",id:e}).$promise}}return e.$inject=["$resource","$q"],e}();e.TimesheetSettingsService=t,angular.module("xhr").service("TimesheetSettingsService",t)}(e.Services||(e.Services={}))}(Settings||(Settings={})),function(e){!function(t){var i=function(){function t(e,t,i,n){this._attendanceService=e,this._modal=t,this._filter=i,this._sharedModel=n,this.premises=[],this.locationGroups=[],this.locations=[],this.model=[],this.unMappedDevices=[],this.getDeviceDetails()}return t.prototype.getDeviceDetails=function(){var e=this;this._attendanceService.getAttendanceDevice().then(function(t){e.devices=t.devices,e.apiKey=t.apiKey,e.locationGroups=t.locatinGroups,e.locations=t.locations,e.premises=t.premises,e.setLocationGroupViewModel()},function(e){})},t.prototype.setLocationGroupViewModel=function(){var t=this,i=new Array;this.locations.forEach(function(e){var n=t.premises.filter(function(t){return t.locationId==e.id});n.length>0&&n.forEach(function(e){i.push(e)})});var n=new Array;i.forEach(function(i){var o=new e.Models.AttendancePremiseView(i);o.devices=t.devices.filter(function(e){return e.premiseId==i.id&&(e.isMapped=!0,!0)}),o.devices.length>0&&n.push(o)},this);var o=[];this.locations.forEach(function(t){var i=new e.Models.LocationView(t);i.premises=n.filter(function(e){return e.locationId==t.id}),i.premises.length>0&&o.push(i)},this),this.model=[],this.locationGroups.forEach(function(i){var n=new e.Models.LocationGroupView(i);i.locationIds.forEach(function(e){var t=o.filter(function(t){return t.id==e})[0];t&&(t.grouped=!0,n.locations.push(t))}),n.locations.length>0&&t.model.push(n)},this),o.forEach(function(i){if(!i.grouped&&i.premises.length>0){var n=new e.Models.LocationGroupView(new e.Models.LocationGroup(i.name,i.id,[i.id]));n.locations=[i],t.model.push(n)}},this),this.unMappedDevices=this.devices.filter(function(e){return!e.isMapped})},t.prototype.getDeviceSDKType=function(t){return e.Models.DeviceSDKType[parseInt(t)]},t.prototype.getDeviceConnectivityType=function(t){return e.Models.DeviceLogConnectivityType[parseInt(t)]},t.prototype.getStringToDateTime=function(e){return null!=e?this._sharedModel.StringToDate(e):e},t.prototype.setAccessArea=function(e){var t=this;this._modal.open({templateUrl:"setAccessArea",controllerAs:"ctrl",backdrop:!1,keyboard:!1,controller:n,bindToController:!0,resolve:{locations:function(){return t.locations},premises:function(){return t.premises},device:function(){return e}}}).result.then(function(e){t.getDeviceDetails()})},t.prototype.manageAccessGroups=function(){var e=this;this._modal.open({templateUrl:"manageLocationGroups",windowClass:"full-screen-modal no-scroll-x",controllerAs:"ctrl",backdrop:!1,keyboard:!1,controller:a,bindToController:!0,resolve:{locationGroups:function(){return e.locationGroups},locations:function(){return e.locations}}}).result.finally(function(){e.getDeviceDetails()})},t.prototype.managePremises=function(){var e=this;this._modal.open({templateUrl:"managePremises",windowClass:"full-screen-modal no-scroll-x",controllerAs:"ctrl",backdrop:!1,keyboard:!1,controller:o,bindToController:!0,resolve:{locations:function(){return e.locations},premises:function(){return e.premises}}}).result.finally(function(){e.getDeviceDetails()})},t.$inject=["AttendanceService","$uibModal","$filter","SharedModel"],t}();t.DeviceClockingController=i;var n=function(){function t(t,i,n,o,r,a,s,l){var c=this;this._attendanceSettingsService=t,this._modal=i,this._modalInstance=n,this._notificationService=o,this.lookupService=r,this.locations=a,this.premises=s,this.device=l,this.premiseModel=new e.Models.AttendancePremise(0,"",0),this.locationPremises=[],this.punchState=e.Models.DevicePunchState,this.lookupService.getTimezones().then(function(e){c.timezones=e})}return t.prototype.$onInit=function(){var e=this;this.premiseModel.id=0,1==this.locations.length?(this.premiseModel.locationId=this.locations[0].id,this.locationPremises=this.premises.filter(function(t){return t.locationId==e.locations[0].id},this)):this.device.locationId&&this.device.locationId>0&&(this.locationPremises=this.premises.filter(function(t){return t.locationId==e.device.locationId},this)),!this.device.locationId&&this.locations.length>0&&(this.device.locationId=this.locations[0].id,this.locationPremises=this.premises.filter(function(t){return t.locationId==e.device.locationId},this),this.device.deviceLogPunchStatus=1),this.locationPremises.unshift(this.premiseModel)},t.prototype.savePremise=function(){var t=this;this.premiseModel.name.length>0&&(1==this.locations.length||this.device.locationId>0)?(this.premiseModel.locationId=1==this.locations.length?this.locations[0].id:this.device.locationId,this._attendanceSettingsService.savePremise(this.premiseModel).then(function(i){i.id?(t.premiseModel.id=i.id,t.premises.push(t.premiseModel),t.addNewPremise=!1,t.device.locationId=t.premiseModel.locationId,t.device.premiseId=t.premiseModel.id,t.premiseModel=new e.Models.AttendancePremise(0,"",0),t.locationPremises.unshift(t.premiseModel),t._notificationService.success("Access Area Added Successfully.")):t._notificationService.error("Error while adding access area. Access area with same name already Exists.")},function(e){t._notificationService.error("Error while adding access area.")})):1==this.locations.length||this.device.locationId>0?this._notificationService.error("Please give name for the premise"):this._notificationService.error("Please give name for the premise and select a location to which you want to add premise")},t.prototype.updateDevice=function(){var e=this;this.form.deviceInfo.$valid?this.device.locationId>0&&this.device.premiseId>0?this._attendanceSettingsService.updateDevice(this.device).then(function(t){e._notificationService.success("Device updated successfully"),e._modalInstance.close()},function(t){e._notificationService.error("Error in updating Device.")}):0==this.device.premiseId&&this._notificationService.error("Please save access area."):this._notificationService.error("Please fill all the fields.")},t.prototype.setPremises=function(){var e=this;this.locationPremises=this.premises.filter(function(t){return e.device.locationId>0&&t.locationId==e.device.locationId},this),this.locationPremises.unshift(this.premiseModel),this.device.premiseId=0},t.prototype.cancelAddNewPremise=function(){this.addNewPremise=!1,this.premiseModel.name="",this.premiseModel.locationId=0},t.$inject=["AttendanceSettingsService","$uibModal","$uibModalInstance","NotificationService","LookupService","locations","premises","device"],t}();t.UpdateDeviceController=n;var o=function(){function e(e,t,i,n,o,r,a){var s=this;this._attendanceSettingsService=e,this._modal=t,this._modalInstance=i,this.locations=n,this.premises=o,this._notificationService=r,this._dialogs=a,this.selectedLocation=this.locations[0],this.locationPremises=this.premises.filter(function(e){return e.locationId==s.selectedLocation.id},this)}return e.prototype.getPremisesByLocation=function(e){var t=this;this.selectedLocation=e,this.locationPremises=this.premises.filter(function(e){return e.locationId==t.selectedLocation.id},this)},e.prototype.openAddPremise=function(e){var t=this;this._modal.open({templateUrl:"addPremise",controllerAs:"ctrl",backdrop:!1,keyboard:!1,controller:r,bindToController:!0,resolve:{location:function(){return t.selectedLocation},premise:function(){return angular.copy(e)}}}).result.then(function(e){if(e.isAdd)t.premises.push(e.premise),t.locationPremises.push(e.premise);else{var i=0;t.locationPremises.forEach(function(t,n){e.premise.id==t.id&&(i=n)},t),t.locationPremises.splice(i,1,e.premise),t.premises=t.premises.filter(function(t){return t.id!=e.premise.id},t),t.premises.push(e.premise)}})},e.prototype.deletePremise=function(e){var t=this;0==e.devicesCount?this._dialogs.confirm("Please Confirm","Are you sure want to delete this premise group?").result.then(function(){t._attendanceSettingsService.deletePremise(e.id).then(function(i){if(i.isDeleted){t._notificationService.success("Access Area deleted Successfully.");var n=t.locationPremises.indexOf(e);t.locationPremises.splice(n,1);t.premises.indexOf(e);t.premises.splice(n,1)}else t._notificationService.error("Error while deleting access area. Access area linked with devices.")},function(e){t._notificationService.error("Error while deleting access area.")})}):this._notificationService.error("This access area cannot be deleted because it is assigned to devices")},e.$inject=["AttendanceSettingsService","$uibModal","$uibModalInstance","locations","premises","NotificationService","dialogs"],e}();t.ManagePremisesController=o;var r=function(){function t(t,i,n,o,r,a,s){this._attendanceSettingsService=t,this._modal=i,this._modalInstance=n,this.location=o,this.premiseModel=r,this._notificationService=a,this._dialogs=s,null==this.premiseModel&&(this.premiseModel=new e.Models.AttendancePremise(0,"",this.location.id))}return t.prototype.addPremise=function(){var e=this;this.premiseModel.name.length>0?(this.premiseModel.locationId=this.location.id,this._attendanceSettingsService.savePremise(this.premiseModel).then(function(t){t.id?(e.premiseModel.id=t.id,e._modalInstance.close({isAdd:!0,premise:e.premiseModel}),e._notificationService.success("Access Area Added Successfully.")):e._notificationService.error("Error while adding access area. Access area with same name already Exists.")},function(t){e._notificationService.error("Error while adding access area.")})):this._notificationService.error("Please give name for access area")},t.prototype.updatePremise=function(){var e=this;this.premiseModel.name.length>0?(this.premiseModel.locationId=this.location.id,this._attendanceSettingsService.updatePremise(this.premiseModel).then(function(t){t.isUpdated?(e._notificationService.success("Access Area updated Successfully."),e._modalInstance.close({isAdd:!1,premise:e.premiseModel})):e._notificationService.error("Error while updating access area. Access area with same name already Exists.")},function(t){e._notificationService.error("Error while updating access area.")})):this._notificationService.error("Please give name for access area")},t.$inject=["AttendanceSettingsService","$uibModal","$uibModalInstance","location","premise","NotificationService","dialogs"],t}();t.AddPremiseController=r;var a=function(){function t(t,i,n,o,r,a,s){var l=this;this._attendanceSettingsService=t,this._modal=i,this._modalInstance=n,this.locationGroups=o,this.locations=r,this._notificationService=a,this._dialogs=s,this.unGroupedLocations=[],this.locationGroupViews=[],this.locationViews=[],this.locationGroupModel=new e.Models.LocationGroupView(new e.Models.LocationGroup),this.locations.forEach(function(t){l.locationViews.push(new e.Models.LocationView(t))}),this.locationGroups.forEach(function(t,i){var n=new e.Models.LocationGroupView(t);t.locationIds.forEach(function(e){var t=l.locationViews.filter(function(t){return t.id==e})[0];t.grouped=!0,t.isSelected=!0,n.locations.push(t)}),0==i&&(l.currentLocationGroup=angular.copy(n)),l.locationGroupViews.push(n)},this),this.unGroupedLocations=this.locationViews.filter(function(e){return!e.grouped})}return t.prototype.updateLocationGroup=function(){var t=this;this.locationGroupModel.name.length>0&&(this.setLocationIds(this.locationGroupModel),this.locationGroupModel.id?this._attendanceSettingsService.updateLocationGroup(this.locationGroupModel).then(function(e){if(e.isUpdated){t._notificationService.success("Location Group Updated Successfully"),t.setLocations(t.locationGroupModel);var i=0;t.locationGroupViews.forEach(function(e,n){t.locationGroupModel.id==e.id&&(i=n)},t),t.addNewGroup=!1,t.currentLocationGroup=t.locationGroupModel,t.locationGroupViews.splice(i,1,t.locationGroupModel)}else t._notificationService.error("Error while updating location group. Location group with the same name already exists.")},function(e){t._notificationService.error("Error while updating location group.")}):this._attendanceSettingsService.saveLocationGroup(this.locationGroupModel).then(function(i){i.id?(t._notificationService.success("Location Group Added Successfully"),t.locationGroupModel.id=i.id,t.setLocations(t.locationGroupModel),t.locationGroupViews.push(t.locationGroupModel),t.currentLocationGroup=t.locationGroupModel,t.locationGroupModel=new e.Models.LocationGroupView(new e.Models.LocationGroup),t.addNewGroup=!1):t._notificationService.error("Error while adding location group. Location group with the same name already exists.")},function(e){t._notificationService.error("Error while adding location group.")}))},t.prototype.add=function(){this.addNewGroup=!0,this.locationGroupModel=new e.Models.LocationGroupView(new e.Models.LocationGroup),this.unGroupedLocations.forEach(function(e){e.isSelected=!1})},t.prototype.cancel=function(){this.addNewGroup=!1,this.locationGroupModel=new e.Models.LocationGroupView(new e.Models.LocationGroup)},t.prototype.edit=function(e){this.addNewGroup=!0,this.locationGroupModel=angular.copy(e),this.unGroupedLocations.forEach(function(e){e.isSelected=!1})},t.prototype.delete=function(e){var t=this;this._dialogs.confirm("Please Confirm","Are you sure want to delete this location group?").result.then(function(){t._attendanceSettingsService.deleteLocationGroup(e.id).then(function(i){i.isDeleted?(t.locationGroupViews=t.locationGroupViews.filter(function(t){return e.id!=t.id}),t.unGroupedLocations=t.unGroupedLocations.concat(e.locations.map(function(e){return e.isSelected=!1,e})),t.currentLocationGroup=t.locationGroupViews.length>0?t.locationGroupViews[0]:null,t._notificationService.success("Location Group Updated Successfully")):t._notificationService.error("Error while updating location group. Location group with the same name already exists.")},function(e){t._notificationService.error("Error while updating location group.")})})},t.prototype.getLocationGroupDetails=function(e){this.cancel(),this.currentLocationGroup=e},t.prototype.setLocationIds=function(e){e.locationIds=[],e.locations.forEach(function(t){t.isSelected&&e.locationIds.push(t.id)}),this.unGroupedLocations.forEach(function(t){t.isSelected&&e.locationIds.push(t.id)})},t.prototype.setLocations=function(e){var t=e.locations.filter(function(e){return!e.isSelected}),i=this.unGroupedLocations.filter(function(e){return e.isSelected});this.unGroupedLocations=this.unGroupedLocations.filter(function(e){return!e.isSelected}),e.locations=e.locations.filter(function(e){return e.isSelected}),e.locations=e.locations.concat(i),this.unGroupedLocations=this.unGroupedLocations.concat(t)},t.$inject=["AttendanceSettingsService","$uibModal","$uibModalInstance","locationGroups","locations","NotificationService","dialogs"],t}();t.ManageLocationGroupsController=a;var s=function(){return function(){}}();t.AttendanceDevicesController=s;var l=function(){function t(e,t,i,n,o,r,a){this._attendanceService=e,this.attendanceSyncToolNetworkService=t,this._modal=i,this.filter=n,this.dialogs=o,this.fileDownloadService=r,this._sharedModel=a,this.premises=[],this.locationGroups=[],this.locations=[],this.vm={},this.vm.model=[],this.getDeviceDetails()}return t.prototype.getDeviceDetails=function(){var e=this;this._attendanceService.getAttendanceDevice().then(function(t){e.devices=t.devices,e.locationGroups=t.locatinGroups,e.locations=t.locations,e.premises=t.premises},function(e){}),this.attendanceSyncToolNetworkService.getAll().then(function(t){e.networkLocations=t,e.attendanceSyncToolNetworkService.getDevices().then(function(t){e.networkDevices=t,e.setNetworkLocationsView()})})},t.prototype.setNetworkLocationsView=function(){var e=this;this.vm.model=[],angular.forEach(this.networkLocations,function(t,i){e.vm.model.push(t);var n=e.networkDevices.filter(function(e){return e.syncToolNetworkId==t.id});e.vm.model[i].devices=[],angular.forEach(n,function(t){e.vm.model[i].devices.push(t)})})},t.prototype.deleteSyncToolInstallation=function(e){this.dialogs.confirm("Do you want to delete").result.then(function(e){})},t.prototype.getSyncTool=function(){this.fileDownloadService.downloadFile("/api/attendance/synctoolnetwork/download")},t.prototype.getSyncToolActivationDoc=function(){this.fileDownloadService.downloadFile("/api/attendance/synctoolnetwork/documentation")},t.prototype.addNetworkInstallation=function(e){var t=this;this._modal.open({templateUrl:"addNetworkInstallation",windowClass:"full-screen-modal no-scroll-x",controllerAs:"ctrl",backdrop:!1,keyboard:!1,controller:c,bindToController:!0,resolve:{locations:function(){return t.locations},networkLocations:function(){return t.networkLocations},networkInstallation:function(){return e}}}).result.finally(function(){t.getDeviceDetails()})},t.prototype.generateSynctoolPassword=function(e){var t=this;this._modal.open({templateUrl:"generateSynctoolPassword",controllerAs:"ctrl",backdrop:!1,keyboard:!1,controller:p,bindToController:!0,resolve:{network:function(){return e}}}).result.finally(function(){t.getDeviceDetails()})},t.prototype.getDeviceSDKType=function(t){return e.Models.DeviceSDKType[parseInt(t)]},t.prototype.getDeviceConnectivityType=function(t){return e.Models.DeviceLogConnectivityType[parseInt(t)]},t.prototype.getStringToDateTime=function(e){return null!=e?this._sharedModel.StringToDate(e):e},t.$inject=["AttendanceService","AttendanceSyncToolNetworkService","$uibModal","$filter","dialogs","FileDownloadService","SharedModel"],t}();t.AttendanceSyncToolInstallation=l;var c=function(){function e(e,t,i,n,o,r,a,s,l){this.scope=e,this.attendanceSyncToolNetworkService=t,this._modal=i,this.modalInstance=n,this.locations=o,this.networkLocations=r,this.networkInstallation=a,this.notificationService=s,this.fileDownloadService=l,this.vm={},this.model={},this.networkInstallation?(this.vm.selectedLocationId=this.networkInstallation.id,this.vm.isReinstallation=!0):this.vm.isReinstallation=!1}return e.prototype.addNetworkConfiguration=function(){var e=this;if(this.vm.selectedLocationId&&this.vm.isReinstallation){if(!this.networkLocations.filter(function(t){return t.id==e.vm.selectedLocationId},this)[0].isActivated)return void this.notificationService.success("This sync tool network is not yet activated!, You can use existing API key for activation.");this.attendanceSyncToolNetworkService.saveReInstallation(this.vm.selectedLocationId).then(function(t){t?(e.notificationService.success("Network Re - Installation requested successfully, Please use following API key to activate new Synctool."),e.previewNetworkInstallation(t)):e.notificationService.error("Network re-installation request is failed")})}else this.form.addNewNetworkInstallation.$valid&&this.attendanceSyncToolNetworkService.save(this.model).then(function(t){t.id?(e.notificationService.success("Network Re - Installation requested successfully, Please use following API key to activate new Synctool."),e.previewNetworkInstallation(t.id)):e.notificationService.error("Network re-installation request is failed")})},e.prototype.previewNetworkInstallation=function(e){this.vm.selectedInstallation=e},e.prototype.getSyncToolActivationDoc=function(){this.fileDownloadService.downloadFile("/api/attendance/synctoolactivationdoc")},e.prototype.close=function(){this.modalInstance.close(!0)},e.$inject=["$scope","AttendanceSyncToolNetworkService","$uibModal","$uibModalInstance","locations","networkLocations","networkInstallation","NotificationService","FileDownloadService"],e}();t.AddNetworkInstallatonController=c;var p=function(){function e(e,t,i,n,o,r){this.scope=e,this.attendanceSyncToolNetworkService=t,this._modal=i,this.modalInstance=n,this.network=o,this.notificationService=r,this.init()}return e.prototype.init=function(){var e=this;this.attendanceSyncToolNetworkService.generateSynctoolPassword(this.network.id).then(function(t){e.synctoolPassword=t.password})},e.$inject=["$scope","AttendanceSyncToolNetworkService","$uibModal","$uibModalInstance","network","NotificationService"],e}();t.GenerateSynctoolPasswordController=p;var u=function(){function e(e,t,i,n,o,r,a,s,l){this.scope=e,this.utilsService=t,this._filter=i,this.locationService=n,this.notificationService=o,this.attendanceService=r,this.appSettings=a,this.recalculationStatus=s,this.timeout=l,this.selectedEmployees=[],this.filteredEmployees=[],this.disableAddNew=!1,this.disableSubmit=!1,this.isOrgRecalculation=!1,this.isOrgRecalculation=!!this.locationService.path().contains("orgs"),this.maxDaysToRecalculate=this.isOrgRecalculation?10:30,this.maxRecalculationAllowDate=new Date,this.maxRecalculationAllowDate.setDate(this.maxRecalculationAllowDate.getDate()+2),this.minRecalculationAllowDate=new Date,this.minRecalculationAllowDate.setDate(this.minRecalculationAllowDate.getDate()-60),this.getRecalculationRequests()}return e.prototype.getFilteredEmployees=function(e){var t=this;if(e&&e.length>=2)return this.utilsService.getMatchedEmployees(e).then(function(e){var i=[];angular.forEach(e,function(e){i.push(e)}),i=t._filter("limitTo")(i,8),t.filteredEmployees=1!=e.length||e[0].id?i:e})},e.prototype.addEmployee=function(e){this.disableAddNew=!0},e.prototype.removeEmployee=function(e){var t=this.selectedEmployees.indexOf(e);this.selectedEmployees.slice(t,1),this.disableAddNew=!1},e.prototype.recalculateEmployeeSummary=function(){var e=this;if(!this.isInvalidDateTime()&&!this.exceedsMaxRange()&&this.selectedEmployees.length>0&&this.validateMinDate()){this.disableSubmit=!0;var t={from:null,to:null};t.from=this.fromDate.dateOnlyString(),t.to=this.toDate.dateOnlyString(),this.attendanceService.recalculateEmployeeAttendanceSummary(this.selectedEmployees[0].id,t).then(function(t){e.notificationService.success("Successfully re-calculated attendance summary."),e.getRecalculationRequests(),e.selectedEmployees=[],e.disableAddNew=!1,e.disableSubmit=!1},function(t){e.disableSubmit=!1,e.records.find(function(t){return t.recalculationStatus==e.recalculationStatus.Pending.id||t.recalculationStatus==e.recalculationStatus.Processing.id})?e.notificationService.error("Pending/processing re-calculation request exists"):e.notificationService.error("Unable to re-calculate attendance summary")})}else this.notificationService.error("Please check all the details you entered")},e.prototype.recalculateOrgSummary=function(){var e=this;if(this.isInvalidDateTime()||this.exceedsMaxRange()||!this.validateMinDate())this.notificationService.error("Please check all the details you entered");else{this.disableSubmit=!0;var t={from:null,to:null};t.from=this.fromDate.dateOnlyString(),t.to=this.toDate.dateOnlyString(),this.attendanceService.recalculateOrgAttendanceSummary(t).then(function(t){e.notificationService.success("Successfully re-calculated attendance summary."),e.getRecalculationRequests(),e.disableSubmit=!1},function(t){e.disableSubmit=!1,e.records.find(function(t){return t.recalculationStatus==e.recalculationStatus.Pending.id||t.recalculationStatus==e.recalculationStatus.Processing.id})?e.notificationService.error("Pending/processing re-calculation request exists"):e.notificationService.error("Unable to re-calculate attendance summary")})}},e.prototype.exceedsMaxRange=function(){if(this.fromDate&&this.toDate)return!(this.fromDate<=this.toDate)||Math.ceil(Math.abs(this.fromDate.getTime()-this.toDate.getTime())/864e5)>this.maxDaysToRecalculate},e.prototype.isInvalidDateTime=function(){return!(!this.fromDate&&!this.toDate)&&(this.fromDate>this.maxRecalculationAllowDate||this.toDate>this.maxRecalculationAllowDate)},e.prototype.validateMinDate=function(){return!(!this.fromDate&&!this.toDate)&&(this.fromDate>=this.minRecalculationAllowDate&&this.toDate>=this.minRecalculationAllowDate)},e.prototype.getRecalculationRequests=function(){var e=this;this.isOrgRecalculation?this.attendanceService.getOrgRecalculationRequests().then(function(t){e.records=t,e.initializeGridSettings(),e.pendingRequest=e.records.find(function(t){return t.recalculationStatus==e.recalculationStatus.Pending.id||t.recalculationStatus==e.recalculationStatus.Processing.id}),e.pendingRequest&&(e.recalculationTimer=e.timeout(function(){e.getRecalculationStatus()},3e4))}):this.attendanceService.getEmployeesRecalculationRequests().then(function(t){e.records=t,e.initializeGridSettings(),e.pendingRequest=e.records.find(function(t){return t.recalculationStatus==e.recalculationStatus.Pending.id||t.recalculationStatus==e.recalculationStatus.Processing.id}),e.pendingRequest&&(e.recalculationTimer=e.timeout(function(){e.getRecalculationStatus()},5e3))})},e.prototype.initializeGridSettings=function(){var e=this;this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.columnDefs=[],this.gridOptions.columnDefs=[{field:"fromDate",displayName:"From Date",cellFilter:"stringToDate:'mediumDate'",cellClass:"ui-grid-cell"},{field:"toDate",displayName:"To Date",cellFilter:"stringToDate:'mediumDate'",cellClass:"ui-grid-cell"},{field:"requestedBy",displayName:"Requested By",cellClass:"ui-grid-cell"},{field:"initiatedOn",displayName:"Initiated On",cellFilter:"date:'MMM dd, yyyy  hh:mm a'",cellClass:"ui-grid-cell"},{field:"completedOn",displayName:"Completed On",cellFilter:"date:'MMM dd, yyyy  hh:mm a'",cellClass:"ui-grid-cell"},{field:"recalculationStatus",displayName:"Status",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.recalculationStatus == grid.appScope.recalculationStatus.Completed.id || row.entity.recalculationStatus == grid.appScope.recalculationStatus.Failed.id" class="">{{grid.appScope.recalculationStatus.getById(row.entity.recalculationStatus).title}}</span><span data-ng-if="row.entity.recalculationStatus == grid.appScope.recalculationStatus.Processing.id || row.entity.recalculationStatus == grid.appScope.recalculationStatus.Pending.id"><div class="loading-small line-scale-pulse-out inline-block v-align-middle left-padding-10"><div></div><div></div><div></div><div></div><div></div></div></span></div>'}],this.isOrgRecalculation||this.gridOptions.columnDefs.unshift({field:"employeeName",displayName:"Employee Name",cellClass:"ui-grid-cell"}),this.gridOptions.data=this.records,this.gridOptions.appScopeProvider=this,this.gridOptions.enableHorizontalScrollbar=!0,this.gridOptions.rowHeight=60,this.gridOptions.onRegisterApi=function(t){e.gridApi=t}},e.prototype.getRecalculationStatus=function(){var e=this;this.attendanceService.getRecalculationRequestStatus(this.pendingRequest.id).then(function(t){e.pendingRequest.recalculationStatus=t.recalculationStatus,e.pendingRequest.completedOn=t.completedOn,t.recalculationStatus==e.recalculationStatus.Failed.id||t.recalculationStatus==e.recalculationStatus.Completed.id?e.timeout.cancel(e.recalculationTimer):e.recalculationTimer=e.timeout(function(){e.getRecalculationStatus()},e.isOrgRecalculation?3e4:5e3)})},e.$inject=["$scope","Utils","$filter","$location","NotificationService","AttendanceRecalculationService","AppSettings","RecalculationStatus","$timeout"],e}();t.RecalculateAttendanceSummary=u;var d=function(){function e(e,t,i,n,o,r){if(this.scope=e,this.utilsService=t,this._filter=i,this.locationService=n,this.notificationService=o,this.leaveDeductionService=r,this.selectedEmployees=[],this.filteredEmployees=[],this.disableAddNew=!1,this.disableSubmit=!1,this.isOrgLeaveDeductions=!1,this.isOrgLeaveDeductions=!!this.locationService.path().contains("org"),this.isLeaveDeletion=!!this.locationService.path().contains("delete"),this.isLeaveDeletion){var a=new Date;this.minDate=new Date(a.getFullYear(),a.getMonth()-1,1)}}return e.prototype.getFilteredEmployees=function(e){var t=this;if(e&&e.length>=2)return this.utilsService.getMatchedEmployees(e).then(function(e){var i=[];angular.forEach(e,function(e){i.push(e)}),i=t._filter("limitTo")(i,8),t.filteredEmployees=1!=e.length||e[0].id?i:e})},e.prototype.addEmployee=function(e){this.disableAddNew=!0},e.prototype.removeEmployee=function(e){var t=this.selectedEmployees.indexOf(e);this.selectedEmployees.slice(t,1),this.disableAddNew=!1},e.prototype.employeeLeaveDeductions=function(){var e=this;if(!this.exceedsMaxRange()&&this.selectedEmployees.length>0){this.disableSubmit=!0;var t={from:null,to:null};t.from=this.fromDate.dateOnlyString(),t.to=this.toDate.dateOnlyString(),this.isLeaveDeletion?this.leaveDeductionService.deleteEmployeeLeaveDeductions(this.selectedEmployees[0].id,t).then(function(t){e.notificationService.success("Successfully deleted leave deductions."),e.selectedEmployees=[],e.disableAddNew=!1,e.disableSubmit=!1},function(t){e.disableSubmit=!1,e.notificationService.error("Unable to delete leave deductions")}):this.leaveDeductionService.cancelEmployeeLeaveDeductions(this.selectedEmployees[0].id,t).then(function(t){e.notificationService.success("Successfully cancelled leave deductions."),e.selectedEmployees=[],e.disableAddNew=!1,e.disableSubmit=!1},function(t){e.disableSubmit=!1,e.notificationService.error("Unable to cancel leave deductions")})}else this.notificationService.error("Please check all the details you entered")},e.prototype.orgLeaveDeductions=function(){var e=this;if(this.exceedsMaxRange())this.notificationService.error("Please check all the details you entered");else{this.disableSubmit=!0;var t={from:null,to:null};t.from=this.fromDate.dateOnlyString(),t.to=this.toDate.dateOnlyString(),this.isLeaveDeletion?this.leaveDeductionService.deleteOrgLeaveDeductions(t).then(function(t){e.notificationService.success("Successfully deleted leave deductions."),e.disableSubmit=!1},function(t){e.disableSubmit=!1,e.notificationService.error("Unable to delete leave deductions")}):this.leaveDeductionService.cancelOrgLeaveDeductions(t).then(function(t){e.notificationService.success("Successfully cancelled leave deductions."),e.disableSubmit=!1},function(t){e.disableSubmit=!1,e.notificationService.error("Unable to cancel leave deductions")})}},e.prototype.exceedsMaxRange=function(){if(this.fromDate&&this.toDate)return!(this.fromDate<=this.toDate)||Math.ceil(Math.abs(this.fromDate.getTime()-this.toDate.getTime())/864e5)>30},e.$inject=["$scope","Utils","$filter","$location","NotificationService","LeaveDeductionService"],e}();t.LeaveDeductionController=d}(e.Controllers||(e.Controllers={}))}(AttendanceSettings||(AttendanceSettings={})),angular.module("xhr").controller("DeviceClockingController",AttendanceSettings.Controllers.DeviceClockingController),angular.module("xhr").controller("AttendanceSyncToolInstallation",AttendanceSettings.Controllers.AttendanceSyncToolInstallation),angular.module("xhr").controller("AddNetworkInstallatonController",AttendanceSettings.Controllers.AddNetworkInstallatonController),angular.module("xhr").controller("AttendanceDevicesController",AttendanceSettings.Controllers.AttendanceDevicesController),angular.module("xhr").controller("RecalculateAttendanceSummary",AttendanceSettings.Controllers.RecalculateAttendanceSummary),angular.module("xhr").controller("LeaveDeduction",AttendanceSettings.Controllers.LeaveDeductionController),angular.module("xhr").controller("GenerateSynctoolPasswordController",AttendanceSettings.Controllers.GenerateSynctoolPasswordController),function(e){!function(t){angular.module("xhr").directive("attendanceDevices",function(){return{controller:"AttendanceDevicesController",controllerAs:"ctrl",templateUrl:"/attendancesettings/deviceclocking"}}),angular.module("xhr").directive("attendanceSyncToolInstallation",function(){return{controller:"AttendanceSyncToolInstallation",controllerAs:"ctrl",templateUrl:"attendanceSyncToolInstallation"}}),angular.module("xhr").directive("attendanceDevicesSummary",function(){return{controller:"DeviceClockingController",controllerAs:"ctrl",templateUrl:"attendanceDevicesSummary"}}),angular.module("xhr").directive("recalculateSummary",function(){return{controller:e.Controllers.RecalculateAttendanceSummary,controllerAs:"ctrl",templateUrl:"/attendancesettings/RecalculatAttendanceSummary"}}),angular.module("xhr").directive("leaveDeductions",function(){return{controller:e.Controllers.LeaveDeductionController,controllerAs:"ctrl",templateUrl:"/attendancesettings/leavededuction"}})}(e.Components||(e.Components={}))}(AttendanceSettings||(AttendanceSettings={})),function(e){!function(e){var t=function(){function e(e,t){this.resource=e,this.q=t,this.statutoryInfoService=this.resource("/api/payroll/config/paygroup/:payGroupId/:action/",{payGroupId:"@payGroupId",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getPfInfo=function(e){return this.statutoryInfoService.query({payGroupId:e,action:"pfinfo"}).$promise},e.prototype.savePfInfo=function(e,t){return this.statutoryInfoService.save({payGroupId:e,action:"pfinfo"},t).$promise},e.prototype.updatePfInfo=function(e,t,i){return this.statutoryInfoService.update({payGroupId:e,action:"pfinfo/"+t},i).$promise},e.prototype.deletePfInfo=function(e,t){return this.statutoryInfoService.delete({payGroupId:e,action:"pfinfo/"+t}).$promise},e.prototype.getEsiInfo=function(e){return this.statutoryInfoService.query({payGroupId:e,action:"esiinfo"}).$promise},e.prototype.saveEsiInfo=function(e,t){return this.statutoryInfoService.save({payGroupId:e,action:"esiinfo"},t).$promise},e.prototype.updateEsiInfo=function(e,t,i){return this.statutoryInfoService.update({payGroupId:e,action:"esiinfo/"+t},i).$promise},e.prototype.deleteEsiInfo=function(e,t){return this.statutoryInfoService.delete({payGroupId:e,action:"esiinfo/"+t}).$promise},e.prototype.getItInfo=function(e){return this.statutoryInfoService.get({payGroupId:e,action:"itinfo"}).$promise},e.prototype.saveOrUpdateItInfo=function(e,t){return this.statutoryInfoService.save({payGroupId:e,action:"itinfo"},t).$promise},e.prototype.getPtInfo=function(e){return this.statutoryInfoService.query({payGroupId:e,action:"ptinfo"}).$promise},e.prototype.savePtInfo=function(e,t){return this.statutoryInfoService.save({payGroupId:e,action:"ptinfo"},t).$promise},e.prototype.updatePTInfo=function(e,t,i){return this.statutoryInfoService.update({payGroupId:e,action:"ptinfo/"+t},i).$promise},e.prototype.deletePTInfo=function(e,t){return this.statutoryInfoService.delete({payGroupId:e,action:"ptinfo/"+t}).$promise},e.prototype.getLabourWelfareInfo=function(e){return this.statutoryInfoService.get({payGroupId:e,action:"labourwelfareinfo"}).$promise},e.prototype.saveLabourWelfareFundInfo=function(e,t){return this.statutoryInfoService.save({payGroupId:e,action:"labourwelfareinfo"},t).$promise},e.$inject=["$resource","$q"],e}();e.StatutorySettingsService=t,angular.module("xhr").service("StatutorySettingsService",t)}(e.Services||(e.Services={}))}(StatutorySettings||(StatutorySettings={})),function(e){!function(e){var t=function(){function e(e,t){this.resource=e,this.q=t,this.attendance=this.resource("/api/attendance/:action/:id",{action:"@action"},{update:{method:"PUT"}}),this.captureScheme=this.resource("/api/attendance/capturescheme/:id/:action",{},{update:{method:"PUT"}})}return e.prototype.getAttendanceCaptureSchemes=function(){return this.attendance.query({action:"capturescheme/all"}).$promise},e.prototype.getAttendanceCaptureScheme=function(e){return this.attendance.get({action:"capturescheme",id:e}).$promise},e.prototype.saveAttendanceCaptureScheme=function(e){return this.attendance.save({action:"capturescheme"},e).$promise},e.prototype.updateAttendanceCaptureScheme=function(e){return this.captureScheme.update({id:e.id},e).$promise},e.prototype.deleteAttendanceCaptureScheme=function(e){return this.captureScheme.delete({id:e},{}).$promise},e.prototype.setDefaultattendanceCaptureScheme=function(e){return this.captureScheme.save({action:"default",id:e},{}).$promise},e.prototype.getIPNetworks=function(){return this.attendance.query({action:"ipnetwork"}).$promise},e.prototype.getIPNetwork=function(e){return this.attendance.get({action:"ipnetwork",id:e}).$promise},e.prototype.getCurrentIP=function(){return this.attendance.get({action:"currentIp"}).$promise},e.prototype.saveIPNetwork=function(e){return this.attendance.save({action:"ipnetwork"},e).$promise},e.prototype.updateIPNetwork=function(e){return this.attendance.update({action:"ipnetwork",id:e.id},e).$promise},e.prototype.deleteIPNetwork=function(e){return this.attendance.delete({action:"ipnetwork",id:e},{}).$promise},e.prototype.getLocationGroups=function(){return this.attendance.query({action:"locationgroup"}).$promise},e.prototype.saveLocationGroup=function(e){return this.attendance.save({action:"locationgroup"},e).$promise},e.prototype.updateLocationGroup=function(e){return this.attendance.update({action:"locationgroup"},e).$promise},e.prototype.deleteLocationGroup=function(e){return this.attendance.delete({action:"locationgroup",id:e}).$promise},e.prototype.getPrmises=function(){return this.attendance.query({action:"premise"}).$promise},e.prototype.savePremise=function(e){return this.attendance.save({action:"premise"},e).$promise},e.prototype.updatePremise=function(e){return this.attendance.update({action:"premise"},e).$promise},e.prototype.deletePremise=function(e){return this.attendance.delete({action:"premise",id:e}).$promise},e.prototype.updateDevice=function(e){return this.attendance.update({action:"device"},e).$promise},e.prototype.getCaptureSchemeEmployees=function(e){return this.attendance.query({action:"captureschemeemployees",id:e}).$promise},e.$inject=["$resource","$q"],e}();e.AttendanceSettingsService=t;var i=function(){function e(e,t){var i=this;this.resource=e,this.q=t,this.attendance=this.resource("/api/mytime/attendance/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.attendanceSummary=this.resource("/api/mytime/attendance/:action/:fromDate",{action:"@action"},{update:{method:"PUT"}}),this.heartBeat=this.resource("/api/heartbeat/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.getAttendanceRegularizationStatus=function(e,t){return i.attendance.get({action:"regularizationstatus",date:t}).$promise}}return e.prototype.getAttendanceSummary=function(e){return this.attendance.query({action:"summary"}).$promise},e.prototype.getAttendanceRequests=function(e){return this.attendance.get({action:"attendancerequests"}).$promise},e.prototype.getMonthAttendanceSummary=function(e,t){return this.attendanceSummary.query({action:"summary",employeeId:e,fromDate:t}).$promise},e.prototype.getAttendanceSummaryFrom=function(e){return this.attendanceSummary.query({action:"attendancedetails",fromDate:e}).$promise},e.prototype.getAttendanceStats=function(e){return this.attendance.get({action:"mystats"}).$promise},e.prototype.getTrackingPolicy=function(e){return this.attendance.get({action:"trackingpolicy"}).$promise},e.prototype.getLeavePlan=function(){return this.attendance.get({action:"leaveplan"}).$promise},e.prototype.saveWebclockinAttendanceRequest=function(e){return this.attendance.save({action:"webclockin"},e).$promise},e.prototype.saveRemoteClockinAttendanceRequest=function(e){return this.attendance.save({action:"remoteclockin"},e).$promise},e.prototype.saveAttendanceAdjustmentRequest=function(e,t){return this.attendance.save({action:"saveattendanceadjustment"},t).$promise},e.prototype.saveForgotIDCardRequest=function(e){return this.attendance.save({action:"forgotidcard"},e).$promise},e.prototype.saveWfhRequest=function(e,t){return this.attendance.save({action:"savewfh"},t).$promise},e.prototype.saveOnDutyRequest=function(e,t){return this.attendance.save({action:"saveonduty"},t).$promise},e.prototype.getAttendanceDayRequests=function(e){return this.attendance.get({action:"attendancedayrequests"}).$promise},e.prototype.getAttendanceCaptureScheme=function(e){return this.attendance.get({action:"attendancecapturescheme"}).$promise},e.prototype.cancleWfhRequest=function(e,t){return this.attendance.save({action:"cancelwfh",id:t}).$promise},e.prototype.approveWFHRequest=function(e,t){return this.attendance.save({action:"approvewfh",id:e,requestId:t}).$promise},e.prototype.rejectWFHRequest=function(e,t){return this.attendance.save({action:"rejectwfh",id:e,requestId:t}).$promise},e.prototype.approveOnDutyRequest=function(e,t){return this.attendance.save({action:"approveonduty",id:e,requestId:t}).$promise},e.prototype.rejectOnDutyRequest=function(e,t){return this.attendance.save({action:"rejectonduty",id:e,requestId:t}).$promise},e.prototype.cancelOnDutyRequest=function(e,t){return this.attendance.save({action:"cancelonduty",id:t}).$promise},e.prototype.getAttendanceClockView=function(){return this.attendance.get({action:"clockview"}).$promise},e.prototype.getServerTime=function(e){return this.attendance.get({action:"servertime"}).$promise},e.prototype.getAttendanceSettings=function(e){return this.attendance.get({action:"attendancesettings"}).$promise},e.$inject=["$resource","$q"],e}();e.MyAttendanceService=i;var n=function(){function e(e,t){this.resource=e,this.q=t,this.attendance=this.resource("/api/employee/attendance/:action/:id/",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getOrgStats=function(){return this.attendance.get({action:"orgstats"}).$promise},e.$inject=["$resource","$q"],e}();e.OrgAttendanceService=n;var o=function(){function e(e,t){this.resource=e,this.q=t,this.leaveDeduction=this.resource("/api/leavededuction/:action/:id/",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.cancelEmployeeLeaveDeductions=function(e,t){return this.leaveDeduction.save({action:"cancelemployeeleavedeductions",id:e},t).$promise},e.prototype.cancelOrgLeaveDeductions=function(e){return this.leaveDeduction.save({action:"cancelorgleavedeductions"},e).$promise},e.prototype.deleteEmployeeLeaveDeductions=function(e,t){return this.leaveDeduction.save({action:"deleteemployeeleavedeductions",id:e},t).$promise},e.prototype.deleteOrgLeaveDeductions=function(e){return this.leaveDeduction.save({action:"deleteorgleavedeductions"},e).$promise},e.$inject=["$resource","$q"],e}();e.LeaveDeductionService=o;var r=function(){function e(e,t){this.resource=e,this.q=t,this.attendanceRecalculate=this.resource("/api/attendance/recalculate/:action/:id",{action:"@action"},{update:{method:"PUT"}})}return e.prototype.recalculateEmployeeAttendanceSummary=function(e,t){return this.attendanceRecalculate.save({action:"employee",id:e},t).$promise},e.prototype.recalculateOrgAttendanceSummary=function(e){return this.attendanceRecalculate.save({action:"org"},e).$promise},e.prototype.getOrgRecalculationRequests=function(){return this.attendanceRecalculate.query({action:"requests/org"}).$promise},e.prototype.getEmployeesRecalculationRequests=function(){return this.attendanceRecalculate.query({action:"requests/employee"}).$promise},e.prototype.getRecalculationRequestStatus=function(e){return this.attendanceRecalculate.get({action:"requeststatus",id:e}).$promise},e.$inject=["$resource","$q"],e}();e.AttendanceRecalculationService=r}(e.Services||(e.Services={}))}(AttendanceSettings||(AttendanceSettings={})),angular.module("xhr").service("AttendanceSettingsService",AttendanceSettings.Services.AttendanceSettingsService),angular.module("xhr").service("MyAttendanceService",AttendanceSettings.Services.MyAttendanceService),angular.module("xhr").service("OrgAttendanceService",AttendanceSettings.Services.OrgAttendanceService),angular.module("xhr").service("AttendanceRecalculationService",AttendanceSettings.Services.AttendanceRecalculationService),angular.module("xhr").service("LeaveDeductionService",AttendanceSettings.Services.LeaveDeductionService),function(e){var t=function(){function e(e,t,i,n,o,r,a){this._filter=e,this._modalInstance=t,this._notificationService=i,this._attendanceSettingsService=n,this.attendanceTrackingPolicyService=o,this.config=r,this.paidLeaveTypes=a,this.steps=[],this.steps.push(new SharedModel.Step(1,"No Attendance","","",!1)),this.steps.push(new SharedModel.Step(2,"Late Arrival","","",!1)),this.steps.push(new SharedModel.Step(3,"Work Hours","","",!1)),this.steps.push(new SharedModel.Step(4,"Missing Swipes","","",!1)),this.currentStep=this.steps[0],this.model=r.leaveDeductionConfig,this.timingPolicy=r.timingPolicy,this.isEditable=r.isEditable}return e.prototype.setConfigurationStep=function(e){(this.currentStep.index>e||!this.isEditable)&&(this.currentStep=this.steps.filter(function(t){return t.index==e})[0])},e.prototype.gotoNextStep=function(){4==this.currentStep.index?this._modalInstance.close():this.setConfigurationStep(this.currentStep.index+1)},e.prototype.saveAndContinue=function(){var e=this;this.attendanceTrackingPolicyService.updateLeaveDeductionConfig(this.timingPolicy.id,this.model).then(function(t){if(t.isUpdated)e.currentStep.valid=!0,4==e.currentStep.index&&e._modalInstance.close(),e._notificationService.success(e.currentStep.title+" info for "+e.timingPolicy.name+" saved successfully"),e.currentStep=e.steps.filter(function(e){return e.index==this.currentStep.index+1},e)[0];else{var i=e._filter("date")(e.timingPolicy.effectiveFrom,"mediumDate");e._notificationService.error("Past version of attendance tracking policy cannot be edited whose effective date is "+i+".")}},function(t){e._notificationService.error("An error occurred while saving "+e.currentStep.title+" information for "+e.timingPolicy.name+".")})},e.$inject=["$filter","$uibModalInstance","NotificationService","AttendanceSettingsService","AttendanceTrackingPolicyService","config","paidLeaveTypes"],e}(),i=function(){function t(){this.leaveOverLappingType=e.Models.LeaveOverLappingType,this.availableLeaveTypes=[],this.selectedLeaveTypes=[]}return t.prototype.$onInit=function(){var e=this;this.model.missingAttendance.deductFromPaidLeave?(this.paidMinGapDaysToDeduct=this.model.missingAttendance.minGapDaysToDeduct,this.unPaidMinGapDaysToDeduct=2):(this.paidMinGapDaysToDeduct=2,this.unPaidMinGapDaysToDeduct=this.model.missingAttendance.minGapDaysToDeduct),this.model.missingAttendance.deductBasedOnOrder?(this.model.missingAttendance.leaveTypeIds.forEach(function(t){var i=e.paidLeaveTypes.find(function(e){return e.id==t});i&&e.selectedLeaveTypes.push(i)}),this.availableLeaveTypes=this.paidLeaveTypes.filter(function(t){return e.model.missingAttendance.leaveTypeIds.indexOf(t.id)<0})):this.availableLeaveTypes=angular.copy(this.paidLeaveTypes)},t.prototype.saveCurrentStep=function(){if(this.model.missingAttendance.deductBasedOnOrder&&this.model.missingAttendance.deductFromPaidLeave){if(0==this.selectedLeaveTypes.length)return;this.model.missingAttendance.leaveTypeIds=this.selectedLeaveTypes.map(function(e){return e.id})}this.form.missingAttendance.$valid&&(this.model.missingAttendance.deductFromPaidLeave?this.model.missingAttendance.minGapDaysToDeduct=this.paidMinGapDaysToDeduct:this.model.missingAttendance.minGapDaysToDeduct=this.unPaidMinGapDaysToDeduct,this.saveAndContinue())},t}(),n=function(){function e(e,t,i){this.notificationService=e,this.dialogs=t,this.cumulativePeriodOptions=i,this.timeDuration=Leaves.Model.TimeDuration,this.availableLeaveTypes=[],this.selectedLeaveTypes=[],this.checkDuplicate=function(e,t){var i=!1,n={};return t.map(function(t){var o=t[e];null!=o&&o in n?(n[o].duplicate=!0,t.duplicate=!0,i=!0):(n[o]=t,delete t.duplicate)}),i},this.hourOptions=[{title:"Effective Hours",v:!1},{title:"Gross Hours",v:!0}],this.periodOptions=[{title:"Select",v:null},{title:"Week",v:this.timeDuration.Weeks},{title:"Month",v:this.timeDuration.Months}]}return e.prototype.$onInit=function(){var e=this;this.model.lateArrival.deductFromPaidLeave?(this.paidMinGapDaysToDeduct=this.model.lateArrival.minGapDaysToDeduct,this.unPaidMinGapDaysToDeduct=2):(this.paidMinGapDaysToDeduct=2,this.unPaidMinGapDaysToDeduct=this.model.lateArrival.minGapDaysToDeduct),this.model.lateArrival.deductBasedOnOrder?(this.model.lateArrival.leaveTypeIds.forEach(function(t){var i=e.paidLeaveTypes.find(function(e){return e.id==t});i&&e.selectedLeaveTypes.push(i)}),this.availableLeaveTypes=this.paidLeaveTypes.filter(function(t){return e.model.lateArrival.leaveTypeIds.indexOf(t.id)<0})):this.availableLeaveTypes=angular.copy(this.paidLeaveTypes),0==this.model.lateArrival.cumulativeConfig.cumulativeDeductionRules.length&&(this.model.lateArrival.cumulativeConfig.cumulativePeriod=this.cumulativePeriodOptions.Day.id,this.addDeductionRule()),this.changePeriod()},e.prototype.updateDeductionRule=function(){var e=this;this.model.lateArrival.deductBasedOnCumulative&&this.model.lateArrival.cumulativeConfig.cumulativePeriod!=this.cumulativePeriodOptions.Day.id&&this.dialogs.confirm("Warning!","You have cumulative hours configuration enabled for late arrival penalization based on Week/Month.In case you wish to enable incident based penalization for late arrival also, the cumulative hours needs to be configured at a day level.<br /><br />If you choose to proceed, the action will remove the existing week / month configuration for cumulative hours, you will have to reconfigure it based on cumulative hours for penalization on a day.").result.then(function(){e.model.lateArrival.cumulativeConfig.cumulativePeriod=e.cumulativePeriodOptions.Day.id,e.model.lateArrival.cumulativeConfig.cumulativeDeductionRules=[],e.changePeriod(),e.addDeductionRule()},function(){e.model.lateArrival.deductBasedOnIncidents=!1}),this.changePeriod()},e.prototype.addDeductionRule=function(){this.model.lateArrival.cumulativeConfig.cumulativeDeductionRules.push(new Attendance.Model.CumulativeDeductionRule)},e.prototype.deleteDeductionRule=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure want to delete ?").result.then(function(){t.notificationService.information("Deduction Rule Deleted Successfully..."),t.model.lateArrival.cumulativeConfig.cumulativeDeductionRules.splice(e,1)})},e.prototype.changePeriod=function(){this.period=this.cumulativePeriodOptions.getById(this.model.lateArrival.cumulativeConfig.cumulativePeriod).title.toLowerCase()},e.prototype.getMaxDays=function(e){return e==this.timeDuration.Weeks?7:(this.timeDuration.Months,30)},e.prototype.saveCurrentStep=function(){if(this.model.lateArrival.deductBasedOnOrder&&this.model.lateArrival.deductFromPaidLeave){if(0==this.selectedLeaveTypes.length)return;this.model.lateArrival.leaveTypeIds=this.selectedLeaveTypes.map(function(e){return e.id})}this.form.lateArrival.$valid&&!this.checkDuplicate("requiredHours",this.model.lateArrival.cumulativeConfig.cumulativeDeductionRules)&&(this.model.lateArrival.deductFromPaidLeave?this.model.lateArrival.minGapDaysToDeduct=this.paidMinGapDaysToDeduct:this.model.lateArrival.minGapDaysToDeduct=this.unPaidMinGapDaysToDeduct,this.saveAndContinue())},e.$inject=["NotificationService","dialogs","PeriodOptions"],e}(),o=function(){function e(e,t,i){this.notificationService=e,this.dialogs=t,this.periodOptions=i,this.timeDuration=Leaves.Model.TimeDuration,this.availableLeaveTypes=[],this.selectedLeaveTypes=[],this.checkDuplicate=function(e,t){var i=!1,n={};return t.map(function(t){var o=t[e];o in n?(n[o].duplicate=!0,t.duplicate=!0,i=!0):(n[o]=t,delete t.duplicate)}),i},this.hourOptions=[{title:"Effective Hours",v:!1},{title:"Gross Hours",v:!0}]}return e.prototype.$onInit=function(){var e=this;this.model.effectiveHoursPenality.deductFromPaidLeave?(this.paidMinGapDaysToDeduct=this.model.effectiveHoursPenality.minGapDaysToDeduct,this.unPaidMinGapDaysToDeduct=2):(this.paidMinGapDaysToDeduct=2,this.unPaidMinGapDaysToDeduct=this.model.effectiveHoursPenality.minGapDaysToDeduct),this.model.effectiveHoursPenality.deductBasedOnOrder?(this.model.effectiveHoursPenality.leaveTypeIds.forEach(function(t){var i=e.paidLeaveTypes.find(function(e){return e.id==t});i&&e.selectedLeaveTypes.push(i)}),this.availableLeaveTypes=this.paidLeaveTypes.filter(function(t){return e.model.effectiveHoursPenality.leaveTypeIds.indexOf(t.id)<0})):this.availableLeaveTypes=angular.copy(this.paidLeaveTypes),0==this.model.effectiveHoursPenality.attendanceDeductionRules.length?(this.model.effectiveHoursPenality.periodForAverageHours=null,this.addDeductionRule()):this.changePeriod()},e.prototype.addDeductionRule=function(){this.model.effectiveHoursPenality.attendanceDeductionRules.push(new Attendance.Model.DeductionRule)},e.prototype.deleteDeductionRule=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure want to delete ?").result.then(function(){t.notificationService.information("Deduction Rule Deleted Successfully..."),t.model.effectiveHoursPenality.attendanceDeductionRules.splice(e,1)})},e.prototype.changePeriod=function(){this.period=this.periodOptions.getById(this.model.effectiveHoursPenality.periodForAverageHours).title.toLowerCase()},e.prototype.saveCurrentStep=function(){if(this.model.effectiveHoursPenality.deductBasedOnOrder&&this.model.effectiveHoursPenality.deductFromPaidLeave){if(0==this.selectedLeaveTypes.length)return;this.model.effectiveHoursPenality.leaveTypeIds=this.selectedLeaveTypes.map(function(e){return e.id})}this.form.effectiveHours.$valid&&!this.checkDuplicate("requiredPercentage",this.model.effectiveHoursPenality.attendanceDeductionRules)&&(this.model.effectiveHoursPenality.deductLeave||this.resetConfig(),this.model.effectiveHoursPenality.deductFromPaidLeave?this.model.effectiveHoursPenality.minGapDaysToDeduct=this.paidMinGapDaysToDeduct:this.model.effectiveHoursPenality.minGapDaysToDeduct=this.unPaidMinGapDaysToDeduct,this.saveAndContinue())},e.prototype.resetConfig=function(){this.model.effectiveHoursPenality.attendanceDeductionRules=[],this.model.effectiveHoursPenality.periodForAverageHours=0,this.model.effectiveHoursPenality.lateComingDayBehaviour=0,this.model.effectiveHoursPenality.applyOnGrossHours=!1,this.model.effectiveHoursPenality.deductFromPaidLeave=!1},e.$inject=["NotificationService","dialogs","PeriodOptions"],e}(),r=function(){function e(){this.timeDuration=Leaves.Model.TimeDuration,this.availableLeaveTypes=[],this.selectedLeaveTypes=[],this.hourOptions=[{title:"Effective Hours",v:!1},{title:"Gross Hours",v:!0}],this.periodOptions=[{title:"Select",v:null},{title:"Week",v:this.timeDuration.Weeks},{title:"Month",v:this.timeDuration.Months}]}return e.prototype.$onInit=function(){var e=this;this.model.missingSwipes.deductFromPaidLeave?(this.paidMinGapDaysToDeduct=this.model.missingSwipes.minGapDaysToDeduct,this.unPaidMinGapDaysToDeduct=2):(this.paidMinGapDaysToDeduct=2,this.unPaidMinGapDaysToDeduct=this.model.missingSwipes.minGapDaysToDeduct),this.resetConfig(),this.model.missingSwipes.deductBasedOnOrder?(this.model.missingSwipes.leaveTypeIds.forEach(function(t){var i=e.paidLeaveTypes.find(function(e){return e.id==t});i&&e.selectedLeaveTypes.push(i)}),this.availableLeaveTypes=this.paidLeaveTypes.filter(function(t){return e.model.missingSwipes.leaveTypeIds.indexOf(t.id)<0})):this.availableLeaveTypes=angular.copy(this.paidLeaveTypes)},e.prototype.resetConfig=function(){this.model.missingSwipes.deductLeave?this.model.missingSwipes.isDeductBasedOnIncidents?(this.daysToBeDeductedForIncidents=this.model.missingSwipes.daysToBeDeducted,this.daysToBeDeducted=null):(this.daysToBeDeducted=this.model.missingSwipes.daysToBeDeducted,this.daysToBeDeductedForIncidents=null,this.model.missingSwipes.noofInstances=null):(this.model.missingSwipes.maxAllowedDays.duration=null,this.model.missingSwipes.daysToBeDeducted=null,this.model.missingSwipes.noofInstances=null),this.model.missingSwipes.ignoreMissingSwipes||(this.model.missingSwipes.desiredHoursPercentageToIgnoreMissingSwipes=null),this.maxNoOfInstances=this.model.missingSwipes.maxAllowedDays.unit==this.timeDuration.Weeks?7:30},e.prototype.saveCurrentStep=function(){if(this.model.missingSwipes.deductBasedOnOrder&&this.model.missingSwipes.deductFromPaidLeave){if(0==this.selectedLeaveTypes.length)return;this.model.missingSwipes.leaveTypeIds=this.selectedLeaveTypes.map(function(e){return e.id})}this.model.missingSwipes.ignoreMissingSwipes||(this.model.missingSwipes.desiredHoursPercentageToIgnoreMissingSwipes=null),this.form.missingSwipes.$valid&&(this.model.missingSwipes.deductFromPaidLeave?this.model.missingSwipes.minGapDaysToDeduct=this.paidMinGapDaysToDeduct:this.model.missingSwipes.minGapDaysToDeduct=this.unPaidMinGapDaysToDeduct,this.model.missingSwipes.daysToBeDeducted=this.model.missingSwipes.isDeductBasedOnIncidents?this.daysToBeDeductedForIncidents:this.model.missingSwipes.deductLeave?this.daysToBeDeducted:0,this.model.isSetupComplete=!0,this.saveAndContinue())},e}(),a=function(){function t(e,t,i,n,o){this._filter=e,this._modalInstance=t,this._stateParams=i,this._notificationService=n,this.attendanceSettingsService=o,this.steps=[],this.restrictionDays=[],this.steps.push(new SharedModel.Step(1,"Attendance Capture","","",!1)),this.steps.push(new SharedModel.Step(2,"Remote Punches","","",!1)),this.steps.push(new SharedModel.Step(3,"Work From Home/On Duty","","",!1)),this.currentStep=this.steps[0]}return t.prototype.$onInit=function(){var t=this;this.attendanceSettingsService.getAttendanceCaptureScheme(this._stateParams.schemeId).then(function(i){t.captureScheme=new e.Models.AttendanceCaptureScheme(i),t.model=t.captureScheme.configuration},function(e){}),this.setRestrictionDays()},t.prototype.setConfigurationStep=function(e){this.currentStep.index>e&&(this.currentStep=this.steps.filter(function(t){return t.index==e})[0])},t.prototype.setRestrictionDays=function(){for(var e=1;e<=28;e++)this.restrictionDays.push({id:e,title:e.toString()});this.restrictionDays.push({id:-1,title:"Last day of the month"})},t.prototype.gotoNextStep=function(){3==this.currentStep.index?this._modalInstance.close():this.setConfigurationStep(this.currentStep.index+1)},t.prototype.saveAndContinue=function(){var e=this;this.captureScheme.configuration.attendanceCapture.allowMissingSwipeAdjustment||(this.captureScheme.configuration.attendanceCapture.missingSwipeAdjustmentApprovalSettings.requireApproval=!1),this.attendanceSettingsService.updateAttendanceCaptureScheme(this.captureScheme).then(function(t){e.currentStep.valid=!0,3==e.currentStep.index&&e._modalInstance.close(),e._notificationService.success(e.currentStep.title+" information for "+e.captureScheme.name+" saved successfully"),e.currentStep=e.steps.filter(function(e){return e.index==this.currentStep.index+1},e)[0]},function(t){e._notificationService.error("An error occurred while saving "+e.currentStep.title+" information for "+e.captureScheme.name+".")})},t.$inject=["$filter","$uibModalInstance","$stateParams","NotificationService","AttendanceSettingsService"],t}();e.AttendanceCaptureSchemeConfigurationController=a;var s=function(){function e(e){this.timeDuration=e,this.durations=e.getAll()}return e.prototype.saveCurrentStep=function(){!this.form.wfhConfig.$valid||this.isWorkFromHomeApprovalSettingsValid||this.isOnDutyApprovalSettingsValid||this.saveAndContinue()},e.$inject=["TimeDuration"],e}(),l=function(){function t(e,t,i,n){this.timeDuration=e,this.modal=t,this.notificationService=i,this.dialogs=n,this.durations=e.getAll()}return t.prototype.saveCurrentStep=function(){this.form.remotePunchConfig.$valid&&!this.isApprovalSettingsValid&&this.saveAndContinue()},t.prototype.addLocation=function(){this.model.remotePunch.allowedRemoteLocations.push(new e.Models.LatLongCoordinates)},t.prototype.pickRestrictLocation=function(e){var t=this;this.modal.open({templateUrl:"/attendancesettings/restrictlocationmap",controller:c,controllerAs:"ctrl",windowClass:"full-screen-modal no-scroll structure-compare modal-map-view",resolve:{Model:function(){return t.model},RestrictedLocation:function(){return t.model.remotePunch.allowedRemoteLocations[e]}}}).result.then(function(i){t.model.remotePunch.allowedRemoteLocations[e]=angular.copy(i)})},t.prototype.deleteLocation=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure want to delete ?").result.then(function(){t.notificationService.information("Restricted Location Deleted Successfully..."),t.model.remotePunch.allowedRemoteLocations.splice(e,1)})},t.$inject=["TimeDuration","$uibModal","NotificationService","dialogs"],t}(),c=function(){function e(e,t,i,n){this._uiGmapGoogleMapApi=e,this.model=t,this.restrictedLocation=i,this.modal=n,this.showMap=!0,this.init()}return e.prototype.init=function(){var e=this;this.model.remotePunch.allowedRemoteLocations=this.model.remotePunch.allowedRemoteLocations||[],this.mapMarker=angular.copy(this.restrictedLocation),this.mapMarker.latitude=this.mapMarker.latitude||17.385044,this.mapMarker.longitude=this.mapMarker.longitude||78.486671,this.mapMarker.radius=this.mapMarker.radius||30,this.map={control:{},center:{latitude:this.mapMarker.latitude,longitude:this.mapMarker.longitude},zoom:19,bounds:{}},this.options={scrollwheel:!0},this.marker={id:0,coords:{latitude:this.mapMarker.latitude,longitude:this.mapMarker.longitude},options:{draggable:!0},events:{dragend:function(t,i,n){e.mapMarker.latitude=t.getPosition().lat(),e.mapMarker.longitude=t.getPosition().lng(),e.marker.options={draggable:!0}}}},this.circle={options:{draggable:!0},center:this.marker.coords,fill:{color:"#FF0000",opacity:.5},stroke:{color:"#FF0000",weight:2,opacity:.7},editable:!1,visible:!0},this.searchBox={template:"searchBox.template.html",parentdiv:"searchBoxParent",options:{autocomplete:!0},events:{places_changed:function(t){var i=t.getPlaces();e.marker.coords.latitude=i[0].geometry.location.lat(),e.marker.coords.longitude=i[0].geometry.location.lng(),e.mapMarker.locationName=i[0].name,e.mapMarker.latitude=e.marker.coords.latitude,e.mapMarker.longitude=e.marker.coords.longitude,e.map.control.refresh(e.marker.coords)}}}},e.prototype.pickLocation=function(){this.modal.close(this.mapMarker)},e.$inject=["uiGmapGoogleMapApi","Model","RestrictedLocation","$uibModalInstance"],e}();e.RestrictLocationMapController=c;var p=function(){function e(e,t,i){this.timeDuration=e,this._modal=t,this.attendanceSettingsService=i,this.durations=e.getAll(),this.setIPNetworks()}return e.prototype.openAddIPNetwork=function(){var e=this;this._modal.open({templateUrl:"/attendancesettings/addipnetwork",windowClass:"full-screen-modal no-scroll",controllerAs:"ctrl",backdrop:!1,keyboard:!1,controller:"AddIPNetworkController",bindToController:!0,resolve:{IPNetworkId:function(){return 0}}}).result.finally(function(){e.setIPNetworks()})},e.prototype.changeForgotIdNetwork=function(e){e.isSelected?this.model.attendanceCapture.restrictedNetworksForForgotId.push(e.id):this.model.attendanceCapture.restrictedNetworksForForgotId=this.model.attendanceCapture.restrictedNetworksForForgotId.filter(function(t){return t!=e.id})},e.prototype.changeManulaPunchNetwork=function(e){e.isSelected?this.model.attendanceCapture.manualClockinRestrictedNetworks.push(e.id):this.model.attendanceCapture.manualClockinRestrictedNetworks=this.model.attendanceCapture.manualClockinRestrictedNetworks.filter(function(t){return t!=e.id})},e.prototype.setIPNetworks=function(){var e=this;this.attendanceSettingsService.getIPNetworks().then(function(t){e.ipNetworks=t||[],e.manualPunchLinkedNetworks=[],e.forgotIdLinkedNetworks=[],e.ipNetworks.forEach(function(t){e.model.attendanceCapture.manualClockinRestrictedNetworks&&null!=e.model.attendanceCapture.manualClockinRestrictedNetworks.find(function(e){return e==t.id})?t.isSelected=!0:t.isSelected=!1,e.manualPunchLinkedNetworks.push(angular.copy(t)),e.model.attendanceCapture.restrictedNetworksForForgotId&&null!=e.model.attendanceCapture.restrictedNetworksForForgotId.find(function(e){return e==t.id})?t.isSelected=!0:t.isSelected=!1,e.forgotIdLinkedNetworks.push(angular.copy(t))})})},e.prototype.saveCurrentStep=function(){!this.form.attendanceCapture.$valid||this.isApprovalSettingsValid||this.model.attendanceCapture.manualWebClockinEnabled&&this.model.attendanceCapture.ipRestrictedForManualClockin&&!(this.model.attendanceCapture.manualClockinRestrictedNetworks.length>0)||this.model.attendanceCapture.allowForgotIdCard&&this.model.attendanceCapture.ipRestrictedForForgotId&&!(this.model.attendanceCapture.restrictedNetworksForForgotId.length>0)||this.saveAndContinue()},e.$inject=["TimeDuration","$uibModal","AttendanceSettingsService","AppContext","$filter","NotificationService","Utils","ApproverType"],e}(),u=function(){function e(e){this.appSettings=e,this.availableLeaveTypes=[],this.selectedLeaveTypes=[]}return e.prototype.$onInit=function(){this.niceScrollOptions=angular.copy(this.appSettings.scrollSettings)},e.prototype.swapToSelectedLeaveTypes=function(e){this.availableLeaveTypes=this.availableLeaveTypes.filter(function(t){return t.id!=e});var t=this.paidLeaveTypes.find(function(t){return t.id==e});this.selectedLeaveTypes.push(t)},e.prototype.swapToAvailableLeaveTypes=function(e){this.selectedLeaveTypes=this.selectedLeaveTypes.filter(function(t){return t.id!=e});var t=this.paidLeaveTypes.find(function(t){return t.id==e});this.availableLeaveTypes.push(t)},e.prototype.canMoveUp=function(e){return 0!=e&&this.selectedLeaveTypes[e-1]},e.prototype.canMoveDown=function(e){return e+1!=this.selectedLeaveTypes.length&&this.selectedLeaveTypes[e+1]},e.prototype.changeLeaveTypePosition=function(e,t){var i=this.selectedLeaveTypes[t],n=this.selectedLeaveTypes.indexOf(e);i&&!i.readOnly&&-1!=n&&(this.selectedLeaveTypes[t]=e,this.selectedLeaveTypes[n]=i)},e.$inject=["AppSettings"],e}();angular.module("xhr").component("attendanceMissing",{controller:i,controllerAs:"ctrl",bindings:{model:"=",isEditable:"=",paidLeaveTypes:"=",saveAndContinue:"&",gotoNextStep:"&"},templateUrl:"/attendancesettings/missingattendanceconfiguration"}).component("lateArrival",{controller:n,controllerAs:"ctrl",bindings:{model:"=",isEditable:"=",paidLeaveTypes:"=",saveAndContinue:"&",gotoNextStep:"&"},templateUrl:"/attendancesettings/latearrivalconfiguration"}).component("effectiveHours",{controller:o,controllerAs:"ctrl",bindings:{model:"=",isEditable:"=",paidLeaveTypes:"=",saveAndContinue:"&",gotoNextStep:"&"},templateUrl:"/attendancesettings/effectiveHoursconfiguration"}).component("missingSwipes",{controller:r,controllerAs:"ctrl",bindings:{model:"=",isEditable:"=",paidLeaveTypes:"=",saveAndContinue:"&",gotoNextStep:"&"},templateUrl:"/attendancesettings/missingswipesconfiguration"}).component("attendanceCapture",{controller:p,controllerAs:"ctrl",bindings:{model:"=",saveAndContinue:"&",gotoNextStep:"&",restrictionDays:"="},templateUrl:"attendancesettings/attendanceCaptureconfiguration"}).component("remotePunches",{controller:l,controllerAs:"ctrl",bindings:{model:"=",saveAndContinue:"&",gotoNextStep:"&"},templateUrl:"/attendancesettings/remotepunchesconfiguration"}).component("workFromHome",{controller:s,controllerAs:"ctrl",bindings:{model:"=",saveAndContinue:"&",gotoNextStep:"&",restrictionDays:"="},templateUrl:"/attendancesettings/workfromhomeconfiguration"}).component("orderLeaveTypes",{controller:u,controllerAs:"ctrl",bindings:{paidLeaveTypes:"=",availableLeaveTypes:"=",selectedLeaveTypes:"=",isEditable:"="},templateUrl:"orderLeaveTypeTemplate"}),angular.module("xhr").controller("TimingPolicyConfigurationController",t).controller("AttendanceCaptureSchemeConfigurationController",a).controller("RestrictLocationMapController",c).controller("OrderLeaveTypesController",u)}(AttendanceSettings||(AttendanceSettings={}));var AttendanceSettings;__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){!function(e){e[e.None=0]="None",e[e.ZkemSDK=1]="ZkemSDK",e[e.CosecSDk=2]="CosecSDk",e[e.FPClockSDK=3]="FPClockSDK",e[e.SBXPCSDK=4]="SBXPCSDK",e[e.FKAttendSDK=5]="FKAttendSDK",e[e.FK524PXNSDK=6]="FK524PXNSDK",e[e.SecureEye=7]="SecureEye"}(e.DeviceSDKType||(e.DeviceSDKType={})),function(e){e[e.SDK=0]="SDK",e[e.Log=1]="Log",e[e.SQL=2]="SQL"}(e.DeviceLogConnectivityType||(e.DeviceLogConnectivityType={})),function(e){e[e.None=0]="None",e[e.InAndOut=1]="InAndOut",e[e.InOnly=2]="InOnly",e[e.OutOnly=3]="OutOnly"}(e.DevicePunchState||(e.DevicePunchState={})),function(e){e[e.None=0]="None",e[e.LeaveBetweenTwoDays=1]="LeaveBetweenTwoDays",e[e.LeaveBeforeDay=2]="LeaveBeforeDay",e[e.LeaveAfterDay=3]="LeaveAfterDay",e[e.LeaveEitherBeforeOrAfter=4]="LeaveEitherBeforeOrAfter"}(e.LeaveOverLappingType||(e.LeaveOverLappingType={}));var t=function(){return function(e){this.id=e.id,this.name=e.name,this.description=e.description,this.isDefault=e.isDefault,this.totalEmployees=e.totalEmployees}}();e.AttendanceCaptureSchemeListItem=t;var i=function(){return function(e){this.id=e.id,this.name=e.name,this.description=e.description,this.isDefault=e.isDefault,this.configuration=new n(e.configuration||{})}}();e.AttendanceCaptureScheme=i;var n=function(){return function(e){this.attendanceCapture=new r(e.attendanceCapture||{}),this.remotePunch=new a(e.remotePunch||{}),this.workFromHome=new l(e.workFromHome||{}),this.onDuty=new c(e.onDuty||{})}}();e.AttendanceCaptureSchemeConfiguration=n,function(e){e[e.None=0]="None",e[e.OnlyForFirstClockInOfTheDay=1]="OnlyForFirstClockInOfTheDay",e[e.OnlyDuringClockIns=2]="OnlyDuringClockIns",e[e.OnlyDuringClockOuts=3]="OnlyDuringClockOuts",e[e.EveryPunchInAndOut=4]="EveryPunchInAndOut"}(e.PunchDataCaptureType||(e.PunchDataCaptureType={}));var o=function(e){function t(t){var i=e.call(this,t||{})||this;return i.approvalRequestType=ApprovalChain.ApprovalRequestType.Attendance,i}return __extends(t,e),t}(ApprovalChain.ApprovalSettings);e.AttendanceApprovalSettings=o;var r=function(){return function(e){this.showFirstAndLastLogOnly=e.showFirstAndLastLogOnly,this.biometricEnabled=e.biometricEnabled,this.manualWebClockinEnabled=e.manualWebClockinEnabled,this.requireCommentForManualClockin=e.requireCommentForManualClockin,this.requireCommentType=e.requireCommentType,this.ipRestrictedForManualClockin=e.ipRestrictedForManualClockin,this.manualClockinRestrictedNetworks=e.manualClockinRestrictedNetworks||[],this.allowForgotIdCard=e.allowForgotIdCard,this.ipRestrictedForForgotId=e.ipRestrictedForForgotId,this.restrictedNetworksForForgotId=e.restrictedNetworksForForgotId||[],this.allowMissingSwipeAdjustment=e.allowMissingSwipeAdjustment,this.missingSwipeAdjustmentExceedLimit=e.missingSwipeAdjustmentExceedLimit,this.missingSwipeAdjustmentExceedDuration=e.missingSwipeAdjustmentExceedDuration,this.maxAllowedAdjustmentsEnabled=e.maxAllowedAdjustmentsEnabled,this.maxAllowedMissingSwipeAdjustments=e.maxAllowedMissingSwipeAdjustments,this.maxAllowedMissingSwipeAdjustmentDuration=e.maxAllowedMissingSwipeAdjustmentDuration,this.missingSwipeAdjustmentApprovalSettings=new o(e.missingSwipeAdjustmentApprovalSettings),this.retrictPastDayAdjustments=e.retrictPastDayAdjustments,this.dayOfTheMonth=e.dayOfTheMonth||null,this.isLastDayOfTheMonth=e.isLastDayOfTheMonth}}();e.AttendanceCapture=r;var a=function(){return function(e){this.enableMobilePunch=e.enableMobilePunch,this.enableWebPunch=e.enableWebPunch,this.requireComment=e.requireComment,this.requireCommentType=e.requireCommentType,this.restrictToSpecifiedLocations=e.restrictToSpecifiedLocations,this.allowedRemoteLocations=e.allowedRemoteLocations,this.requireAttachment=e.requireAttachment,this.requireAttachmentType=e.requireAttachmentType,this.latLongCoords=new s,this.remotePunchApprovalSettings=new o(e.remotePunchApprovalSettings)}}();e.RemotePunch=a;var s=function(){return function(){}}();e.LatLongCoordinates=s;var l=function(){return function(e){this.allowWorkFromHome=e.allowWorkFromHome,this.requireApprovalLimit=e.requireApprovalLimit,this.requireApprovalLimitDuration=e.requireApprovalLimitDuration,this.maxAllowedWorkFromHomeEnabled=e.maxAllowedWorkFromHomeEnabled,this.maxAllowedWorkFromHomeLimit=e.maxAllowedWorkFromHomeLimit,this.maxAllowedWorkFromHomeLimitDuration=e.maxAllowedWorkFromHomeLimitDuration,this.allowHalfDayWorkFromHome=e.allowHalfDayWorkFromHome,this.workFromHomeApprovalSettings=new o(e.workFromHomeApprovalSettings),this.retrictPastDayWFH=e.retrictPastDayWFH,this.dayOfTheMonth=e.dayOfTheMonth,this.isLastDayOfTheMonth=e.isLastDayOfTheMonth}}();e.WorkFromHome=l;var c=function(){return function(e){this.allowOnDuty=e.allowOnDuty,this.requireApprovalLimit=e.requireApprovalLimit,this.requireApprovalLimitDuration=e.requireApprovalLimitDuration,this.maxAllowedOnDutyEnabled=e.maxAllowedOnDutyEnabled,this.maxAllowedOnDutyLimit=e.maxAllowedOnDutyLimit,this.maxAllowedOnDutyLimitDuration=e.maxAllowedOnDutyLimitDuration,this.allowHalfDayOnDuty=e.allowHalfDayOnDuty,this.onDutyApprovalSettings=new o(e.onDutyApprovalSettings),this.retrictPastDayOnDuty=e.retrictPastDayOnDuty,this.dayOfTheMonth=e.dayOfTheMonth,this.isLastDayOfTheMonth=e.isLastDayOfTheMonth}}();e.OnDuty=c;var p=function(){return function(e,t,i,n,o){void 0===n&&(n=0),void 0===o&&(o=!1),this.id=e,this.name=t,this.locationId=i,this.devicesCount=n,this.pairSubSequentLogs=o}}();e.AttendancePremise=p;var u=function(){return function(e,t){this.name=e,this.id=t}}();e.Location=u;var d=function(){return function(e,t,i){void 0===i&&(i=[]),this.name=e,this.id=t,this.locationIds=i}}();e.LocationGroup=d;var m=function(e){function t(t){return e.call(this,t.id,t.name,t.locationId)||this}return __extends(t,e),t}(p);e.AttendancePremiseView=m;var y=function(e){function t(t){var i=e.call(this,t.name,t.id,t.locationIds)||this;return i.locations=[],i}return __extends(t,e),t}(d);e.LocationGroupView=y;var h=function(e){function t(t){var i=e.call(this,t.name,t.id)||this;return i.premises=[],i}return __extends(t,e),t}(u);e.LocationView=h;var f=function(){return function(){}}();e.TimingPolicy=f;var g=function(){return function(e,t,i,n,o){this.isSetupComplete=e,this.missingAttendance=t,this.lateArrival=i,this.effectiveHours=n,this.missingSwipes=o}}();e.LeaveDeductionConfig=g;var v=function(){return function(e,t,i,n,o){this.deductLeave=e,this.daysToBeDeducted=t,this.minGapDaysToDeduct=i,this.deductFromPaidLeave=n,this.interveningDays=o}}();e.MissingAttendance=v;var S=function(){return function(e,t,i,n){this.holidayOverLappingType=e,this.weekOffOverLappingType=t,this.holidaysCalendarDaysLimit=i,this.weeklyOffsCalendarDaysLimit=n}}();e.InterveningDays=S;var C=function(){return function(e,t,i,n,o,r){this.deductLeave=e,this.lateToleranceInMinutes=t,this.maxAllowedDays=i,this.noofInstances=n,this.daysToBeDeducted=o,this.deductFromPaidLeave=r}}();e.LateArrival=C;var w=function(){return function(e,t,i,n,o,r,a,s,l){this.deductLeave=e,this.deductForDay=t,this.requiredPercentage=i,this.daysToBeDeducted=n,this.periodForAverageHours=o,this.noofInstances=r,this.lateComingDayBehaviour=a,this.applyOnGrossHours=s,this.deductFromPaidLeave=l}}();e.EffectiveHours=w;var b=function(){return function(e,t,i,n,o,r){this.deductLeave=e,this.daysToBeDeducted=t,this.maxAllowedDays=i,this.applyEffectiveHoursRuleOnMissingSwipeDay=n,this.applyLateComingRuleOnFirstSwipeMissDay=o,this.deductFromPaidLeave=r}}();e.MissingSwipes=b;var P=function(){return function(e){this.enableAttendanceVisualSwitch=e.enableAttendanceVisualSwitch,this.defaultAttendanceView=e.defaultAttendanceView,this.showOnlyGrossHours=e.showOnlyGrossHours,this.showFirstInLastOut=e.showFirstInLastOut,this.showMissingSwipes=e.showMissingSwipes,this.showLateArrivals=e.showLateArrivals}}();e.AttendanceSettings=P,function(e){e[e.ListView=0]="ListView",e[e.CalendarView=1]="CalendarView",e[e.Both=2]="Both"}(e.AttendanceView||(e.AttendanceView={}));var T=function(){function e(){}return e.WFH="WFH",e.OnDuty="OnDuty",e.Late="Late",e.Pending="Pending",e.OnLeave="OnLeave",e.Holiday="Holiday",e.ClockIn="ClockIn",e.Missing="Missing",e.WeeklyOff="WeeklyOff",e.NoTimeEntries="NoTimeEntries",e.WorkedOnHoliday="WorkedOnHoliday",e.FullDayWeeklyOff="FullDayWeeklyOff",e.FirstHalfWeeklyOff="FirstHalfWeeklyOff",e.SecondHalfWeeklyOff="SecondHalfWeeklyOff",e.PartiallyApproved="PartiallyApproved",e.RegularizationApproved="Attendance Regularized",e}();e.AttendanceCalendarEvents=T}(e.Models||(e.Models={}))}(AttendanceSettings||(AttendanceSettings={})),appRoot.factory("ArticleService",["$resource","$q",function(e,t){return{article:e("/api/article/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),getAllArticles:function(){return this.article.query({action:"default"}).$promise},getAllCategories:function(){return this.article.query({action:"category"}).$promise},getArticleDetails:function(e){return this.article.get({action:"articledetails",id:e}).$promise},getArticle:function(e){return this.article.get({action:"articles",id:e}).$promise},getMatchedTags:function(e){return this.article.query({action:"searchtags",searchKey:e}).$promise},getPublishedArticles:function(){return this.article.query({action:"publishedarticles"}).$promise},getDraftedArticles:function(){return this.article.query({action:"draftedarticles"}).$promise},getAllPublishedArticles:function(){return this.article.query({action:"allpublishedarticles"}).$promise},getAllDraftedArticles:function(){return this.article.query({action:"alldraftarticles"}).$promise},getTaggedArticles:function(e){return this.article.get({action:"taggedarticles",id:e}).$promise},getCategoryArticles:function(e){return this.article.get({action:"categoryarticles",id:e}).$promise},getRecentArticles:function(){return this.article.query({action:"recentarticles"}).$promise},getPopularArticles:function(){return this.article.query({action:"populararticles"}).$promise},getParentCategories:function(){return this.article.query({action:"parentcategories"}).$promise},getDashboardArticles:function(){return this.article.get({action:"dashboardarticles"}).$promise}}}]),appRoot.controller("ArticleController",["$scope","$sce","ArticleService",function(e,t,i){e.vm={};i.getDashboardArticles().then(function(t){e.vm.recentArticles=t.recentArticles,e.vm.popularArticles=t.popularArticles,e.vm.categoryArticles=t.parentCategories})}]),appRoot.controller("ViewArticleController",["$scope","$uibModal","$stateParams","$rootScope","$filter","ArticleService","NotificationService","CommentService","FileDownloadService","CommentItemType","EmploymentStatus",function(e,t,i,n,o,r,a,s,l,c,p){e.vm={},e.vm.id=i.id,e.vm.commentItemType=c,e.vm.showReplay=!1,e.vm.employmentStatus=p,e.vm.fileDownloadService=l,e.updateLikeCount=function(){var t={id:e.vm.id,likeCount:e.vm.articleDetails.likeCount+1};r.article.update({action:"articlelikes"},t,function(t){t.liked&&(e.vm.articleDetails.likeCount+=1)},function(e){})},e.vm.downloadArticleAttachment=function(t,i){e.vm.fileDownloadService.downloadFileFromBlob(t,i)};r.getArticleDetails(e.vm.id).then(function(t){var i,n,r;t.articleDetails.content=(i=t.articleDetails.content,n=!1,r=$("<div>"+i+"</div>"),$("img",r).each(function(e){var t=$(this).attr("src");n?$(this).attr("src",getPathName(t)):$(this).attr("src",o("storageAccountUrl")(t))}),r.html()),e.vm.articleDetails=angular.copy(t.articleDetails),t.articleDetails.tags&&(e.vm.tags=t.articleDetails.tags)})}]),appRoot.controller("CreateArticleController",["$scope","$state","$rootScope","$uibModal","$sce","$stateParams","$q","$filter","ArticleService","AppSettings","NotificationService","ArticleStatus","dialogs","BlobContainers",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m){e.vm={},e.model={},e.vm.selectedImageUrl={},e.vm.imageUploadSettings=angular.copy(c.fileUploadSettings),e.vm.imageUploadSettings.allowedFileTypes="png,jpg,jpeg",e.vm.fileUploadSettings=angular.copy(c.fileUploadSettings),e.vm.fileUploadSettings.allowedFileTypes="png,jpg,jpeg,doc,docx,pdf,rtf,xps,txt,xls,xlsx,csv,ppt,pptx",e.vm.fileUploadSettings.maxNumberOfFiles=20,e.vm.fileUploadSettings.maxFileSize=2097153,e.vm.articleId=r.id,e.vm.submitted=!1,e.vm.tinyMceImageUrl=[],e.vm.articleStatus=u,e.vm.attachments=[],e.vm.blobContainers=m,e.$on("$stateChangeSuccess",function(i,n,o,r,a){e.vm.state=t.current,e.vm.disableButton=!1});var y=function(){l.getAllCategories().then(function(t){e.vm.categories=t})},h=function(e,t){var i=$("<div>"+e+"</div>");return $("img",i).each(function(e){var i=$(this).attr("src");t?$(this).attr("src",f(i)):$(this).attr("src",s("storageAccountUrl")(i))}),i.html()},f=function(e){var t=document.createElement("a");return t.href=e,t.pathname.split("/").splice(2,3).join("/")},g=function(){a.all([l.getAllCategories(),l.getArticle(e.vm.articleId)]).then(function(t){e.model=t[1].article,e.model.tags=t[1].tags,e.model.content=h(e.model.content,!1),e.model.categoryIdList&&angular.forEach(t[0],function(t){e.model.categoryIdList.indexOf(t.id)>=0&&(t.selected=!0)}),e.vm.categories=t[0],e.vm.selectedImageUrl.location=e.model.featuredImage,e.vm.attachments=e.model.attachments,e.vm.article=angular.copy(e.model)})};e.filterParentCategory=function(t){return e.model.category.id?null==t.parentCategoryId&&t.id!=e.model.category.id:null==t.parentCategoryId},e.getTagIdList=function(){var t=[];return angular.forEach(e.model.tags,function(e){t.push(e.id)}),t},e.getCategoryIdList=function(){var t=[];return angular.forEach(e.vm.categories,function(e){e.selected&&t.push(e.id),angular.forEach(e.childCategories,function(e){e.selected&&t.push(e.id)})}),t};var v=function(){var t={id:e.vm.articleId||0,title:e.model.title,content:e.model.content,featuredImage:e.vm.selectedImageUrl?e.vm.selectedImageUrl.location:null,categoryIdList:e.getCategoryIdList(),tagIdList:e.getTagIdList()||null,excerpt:e.model.plainText,attachments:e.vm.attachments,disableComments:e.model.disableComments};return t.content=h(t.content,!0),t};e.publishArticle=function(){e.vm.submitted=!0,e.vm.disableButton||e.model.title&&e.getCategoryIdList().length>0&&e.getTagIdList().length>0&&e.model.content&&(e.vm.disableButton=!0,l.article.save({action:"publisharticle"},v(),function(e){p.success("Article published successfully."),t.go("^.managearticle.published")},function(t){p.error("An error occurred while publishing an article."),e.vm.disableButton=!1}))};e.addNewCategory=function(){e.model.category=new function(){this.id=null,this.name=null,this.parentCategoryId=null,this.description=null},S()},e.editCategory=function(t){e.model.category=angular.copy(t),S()},e.deleteCategory=function(t){d.confirm("Please Confirm","Are you sure want to delete this category ?").result.then(function(){p.information("Deleting Category.."),l.article.delete({action:"category",id:t.id},function(i){i.isDeleted?(p.success("Category deleted successfully"),e.vm.categories=e.vm.categories.filter(function(e){return e.id!=t.id})):0==e.vm.categories.filter(function(e){return e.parentCategoryId==t.id}).length?p.information("Category cannot be deleted because it is assigned to an article."):p.information("Category cannot be deleted because it has sub categories.")},function(e){p.error("An error occurred while deleting category.")})})};var S=function(){e.vm.submit=!1,e.categoryModal=n.open({templateUrl:"article-category",scope:e})};e.cancel=function(){e.vm.submit=!1,e.vm.form.category.$setPristine(),e.categoryModal.close()},e.saveCategory=function(){e.vm.form.category.$valid?e.model.category.id?l.article.update({action:"category",id:e.model.category.id},e.model.category,function(t){angular.forEach(e.vm.categories,function(t,i){e.model.category.id==t.id&&(e.vm.categories[i]=e.model.category)}),p.success("Category updated successfully"),e.categoryModal.close()}):l.article.save({action:"category"},e.model.category,function(t){p.success("Category added successfully."),t.id&&(e.model.category.id=t.id,e.vm.categories.push(e.model.category)),e.categoryModal.close()}):e.$broadcast("validateForm")},e.getMatchedTags=function(t){var i=a.defer();return l.getMatchedTags(t).then(function(t){var n=[];0!=e.model.tags.length?(angular.forEach(t,function(t){0==e.model.tags.filter(function(e){return e.id==t.id}).length&&n.push(t)}),i.resolve(n)):i.resolve(t)}),i.promise},e.previewArticle=function(){e.model.title?e.preview=n.open({templateUrl:"preview-article",scope:e}):e.vm.submitted=!0},e.saveArticle=function(){e.vm.submitted=!0,e.vm.disableButton||e.model.title&&e.getCategoryIdList().length>0&&e.getTagIdList().length>0&&e.model.content&&(e.vm.disableButton=!0,e.vm.articleId?l.article.update({action:"articles"},v(),function(e){p.success("Article updated successfully."),t.go("^.managearticle.drafted")},function(t){p.error("An error occurred while updating article."),e.vm.disableButton=!1}):l.article.save({action:"articles"},v(),function(e){p.success("Article saved successfully."),t.go("^.managearticle.drafted")},function(t){p.error("An error occurred while saving an article."),e.vm.disableButton=!1}))},e.addTag=function(){if(e.vm.tag)if(e.vm.tag.id)e.model.tags.push(e.vm.tag);else if(0==e.model.tags.filter(function(t){return t.name.toUpperCase()===e.vm.tag.toUpperCase()}).length){var t={name:e.vm.tag};(function(e){return l.article.save({action:"tags"},e).$promise})(t).then(function(i){t.id=i.id,e.model.tags.push(t)})}e.vm.tag=null},e.removeTag=function(t){e.model.tags=e.model.tags.filter(function(e){return e.id!=t.id})},e.closePreview=function(){e.preview.close()},e.removeAttachment=function(t){e.vm.attachments=e.vm.attachments.filter(function(e){return e.name!=t.name})},e.model.tags=[],e.vm.articleId?g():y()}]),appRoot.controller("ManageArticleController",["$scope","$state",function(e,t){e.vm={},e.$on("$stateChangeSuccess",function(i,n,o,r,a){e.vm.state=t.current})}]),appRoot.controller("PublishedArticleController",["$scope","$state","AppSettings","AppContext","ArticleService","NotificationService","dialogs",function(e,t,i,n,o,r,a){e.vm={};e.deleteArticle=function(t){a.confirm("Please Confirm","Are you sure want to delete this article ?").result.then(function(){r.information("Deleting article .. "),o.article.delete({action:"articles",id:t.id},function(i){r.success("Article deleted successfully"),e.vm.publishedArticles=e.vm.publishedArticles.filter(function(e){return e.id!=t.id})},function(e){r.error("An error occurred while deleting the article.")})})},e.editArticle=function(e){t.go("^.^.editarticle",{id:e.id})},e.articleGridOptions=angular.copy(i.gridSettings),e.articleGridOptions.columnDefs=[{field:"title",displayName:"Article Title",cellTemplate:'<div class="ui-grid-cell-contents"><span><a data-ng-click="grid.appScope.editArticle(row.entity)">{{grid.getCellValue(row,col)}}</a></span></div>',cellClass:"ui-grid-cell"},{field:"authorName",displayName:"Author Name",cellClass:"ui-grid-cell"},{field:"createdOn",displayName:"Created Date",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{grid.getCellValue(row,col) | date:'mediumDate'}}</span></div>",cellClass:"ui-grid-cell",sort:{direction:"asc"}},{field:"publishedOn",displayName:"Published Date",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{grid.getCellValue(row,col) | date:'mediumDate'}}</span></div>",cellClass:"ui-grid-cell"},{name:"Actions",displayName:"Actions",enableSorting:!1,enableFiltering:!1,cellClass:"ui-grid-cell cell-tooltip",cellTemplate:'<div class="ui-grid-cell-options ui-grid-cell-contents"><span class="clearfix"><ul class="action-items list-inline"><li class="list-item"><a data-ng-click="grid.appScope.editArticle(row.entity);" class="list-link"><span class="icon-pencil5" uib-tooltip="Edit" tooltip-placement="left"></span></a></li><li class="list-item"><a data-ng-click="grid.appScope.deleteArticle(row.entity);" class="list-link"><span class="icon-remove3 " uib-tooltip="Delete" tooltip-placement="right"></span></a></li></ul></span></div>'}],e.articleGridOptions.data="vm.publishedArticles",e.articleGridOptions.rowHeight=50,o.getPublishedArticles().then(function(t){e.vm.publishedArticles=t,e.vm.showGrid=t.length>0})}]),appRoot.controller("DraftedArticleController",["$scope","$state","AppSettings","AppContext","ArticleService","NotificationService","dialogs",function(e,t,i,n,o,r,a){e.vm={};e.deleteArticle=function(t){a.confirm("Please Confirm","Are you sure want to delete this article ?").result.then(function(){r.information("Deleting article .. "),o.article.delete({action:"articles",id:t.id},function(i){r.success("Article deleted successfully"),e.vm.draftedArticles=e.vm.draftedArticles.filter(function(e){return e.id!=t.id})},function(e){r.error("An error occurred while deleting the article.")})})},e.editArticle=function(e){t.go("^.^.editarticle",{id:e.id})},e.articleGridOptions=angular.copy(i.gridSettings),e.articleGridOptions.columnDefs=[{field:"title",displayName:"Article Title",cellTemplate:'<div class="ui-grid-cell-contents"><span><a data-ng-click="grid.appScope.editArticle(row.entity);">{{grid.getCellValue(row,col)}}</a></span></div>',cellClass:"ui-grid-cell"},{field:"authorName",displayName:"Author Name",cellClass:"ui-grid-cell"},{field:"createdOn",displayName:"Created Date",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{grid.getCellValue(row,col) | date:'mediumDate'}}</span></div>",cellClass:"ui-grid-cell",sort:{direction:"asc"}},{name:"Actions",displayName:"Actions",enableSorting:!1,enableFiltering:!1,cellClass:"ui-grid-cell cell-tooltip",cellTemplate:'<div class="ui-grid-cell-options ui-grid-cell-contents"><span class=" clearfix"><ul class="action-items list-inline"><li class="list-item"><a data-ng-click="grid.appScope.editArticle(row.entity);" class="list-link"><span class="icon-pencil5" uib-tooltip="Edit" tooltip-placement="left"></span></a></li><li class="list-item"><a data-ng-click="grid.appScope.deleteArticle(row.entity);" class="list-link"><span class="icon-remove3" uib-tooltip="Delete" tooltip-placement="right"></span></a></li></ul></span></div>'}],e.articleGridOptions.data="vm.draftedArticles",e.articleGridOptions.rowHeight=50,o.getDraftedArticles().then(function(t){e.vm.draftedArticles=t,e.vm.showGrid=t.length>0})}]),appRoot.controller("TaggedArticleController",["$scope","$state","$stateParams","ArticleService",function(e,t,i,n){e.vm={},e.vm.id=i.id;n.getTaggedArticles(e.vm.id).then(function(t){e.vm.taggedArticles=t.articleDetails,e.vm.tagName=t.tagName[0].name})}]),appRoot.controller("CategoryController",["$scope","$stateParams","ArticleService",function(e,t,i){e.vm={},e.vm.id=t.id;i.getCategoryArticles(e.vm.id).then(function(t){e.vm.categoryDetails=t})}]),appRoot.controller("EngageController",["$scope","$location","$state",function(e,t,i){e.vm={},e.$on("$stateChangeSuccess",function(t,n,o,r,a){e.vm.state=i.current})}]),appRoot.factory("QuestionAnswerService",["$resource","$q","NotificationService",function(e,t,i){return{qa:e("/api/qanda/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),getAllQuestions:function(){return this.qa.query({action:"question"}).$promise},getQuestionDetails:function(e){return this.qa.get({action:"questiondetails",id:e}).$promise},getAllAnswers:function(e){return this.qa.get({action:"answer",id:e}).$promise},voteForAnswer:function(e){var n=t.defer();return this.qa.save({action:"answervotecount"},e,function(e){n.resolve(e.voted)},function(e){i.error("An error occurred while saving vote.")}),n.promise},voteForQuestion:function(e){var n=t.defer();return this.qa.save({action:"questionvotecount"},e,function(e){n.resolve(e.voted)},function(e){i.error("An error occurred while saving vote.")}),n.promise}}}]),appRoot.controller("QuestionListController",["$scope","$location","$filter","QuestionAnswerService","NotificationService","myProfile","AppContext","dialogs",function(e,t,i,n,o,r,a,s){e.vm={},e.myPublicProfile=r,e.myPublicProfile.isGlobalAdmin=a.isGlobalAdmin;e.deleteQuestion=function(t){s.confirm("Please Confirm","Are you sure want to delete this Q&A entry ?").result.then(function(){n.qa.delete({action:"question",id:t},function(i){e.vm.allQuestions=e.vm.allQuestions.filter(function(e){return e.id!==t}),o.success("Question deleted successfully.")},function(e){o.error("An error occurred while deleting question.")})})},n.getAllQuestions().then(function(t){e.vm.allQuestions=i("orderBy")(t,"createdOn",!0)})}]),appRoot.controller("ViewQuestionController",["$scope","$stateParams","AppSettings","QuestionAnswerService","NotificationService","$state",function(e,t,i,n,o,r){e.vm={},e.vm.modelOptions=angular.copy(i.modelBlurSettings),e.fileUploadSettings=angular.copy(i.fileUploadSettings),e.model={},e.vm.id=t.id,e.vm.state=r,e.vm.tinyMceImageUrl=[];e.saveAnswer=function(){e.answer.$valid&&e.model.excerpt.trim()&&e.submitted&&(e.submitted=!1,e.model.questionId=e.vm.id,n.qa.save({action:"answer"},e.model,function(t){e.vm.answers.push(t),e.model.content="",o.success("Answer saved successfully")}),e.submitted=!1)},e.voteUp=function(t){var i={};t?(i.id=t.id,i.voteCount=t.voteCount+1,n.voteForAnswer(i).then(function(e){e&&(t.voteCount+=1)})):(i.id=e.vm.questionDetails.id,i.voteCount=e.vm.questionDetails.voteCount+1,n.voteForQuestion(i).then(function(t){t&&(e.vm.questionDetails.voteCount+=1)}))},e.voteDown=function(t){var i={};t?(i.id=t.id,i.voteCount=t.voteCount-1,n.voteForAnswer(i).then(function(e){e&&(t.voteCount-=1)})):(i.id=e.vm.questionDetails.id,i.voteCount=e.vm.questionDetails.voteCount-1,n.voteForQuestion(i).then(function(t){t&&(e.vm.questionDetails.voteCount-=1)}))},n.getAllAnswers(e.vm.id).then(function(t){e.vm.questionDetails=t.questionDetails,e.vm.answers=t.answers})}]),appRoot.controller("AskQuestionController",["$scope","$state","$location","$q","$stateParams","AppSettings","QuestionAnswerService","NotificationService","ArticleService",function(e,t,i,n,o,r,a,s,l){e.vm={},e.vm.id=o.id,e.vm.modelOptions=angular.copy(r.modelBlurSettings),e.model={},e.model.tags=[],e.vm.selectedTag=null,e.fileUploadSettings=angular.copy(r.fileUploadSettings),e.vm.tinyMceImageUrl=[],e.$on("$stateChangeSuccess",function(i,n,o,r,a){e.vm.state=t.current});e.saveQuestion=function(){e.question.$valid&&e.model.tags.length>0&&(e.vm.id?a.qa.update({action:"question"},e.model,function(e){s.success("Question successfully updated."),t.go("^.questions")},function(e){s.error("An error occurred while updating question.")}):a.qa.save({action:"question"},e.model,function(e){s.success("Question successfully saved."),t.go("^.questions")},function(e){s.error("An error occurred while saving question.")}))},e.addTag=function(){if(e.vm.selectedTag)if(e.vm.selectedTag.id)e.model.tags.push(e.vm.selectedTag);else if(0==e.model.tags.filter(function(t){return t.name.toUpperCase()===e.vm.selectedTag.toUpperCase()}).length){var t={name:e.vm.selectedTag};(function(e){return l.article.save({action:"tags"},e).$promise})(t).then(function(i){t.id=i.id,e.model.tags.push(t)})}e.vm.selectedTag=null},e.getMatchedTags=function(t){var i=n.defer();return l.getMatchedTags(t).then(function(t){var n=[];0!=e.model.tags.length?(angular.forEach(t,function(t){0==e.model.tags.filter(function(e){return e.id==t.id}).length&&n.push(t)}),i.resolve(n)):i.resolve(t)}),i.promise},e.removeTag=function(t){e.model.tags=e.model.tags.filter(function(e){return e.id!=t.id})},e.vm.id&&a.getQuestionDetails(e.vm.id).then(function(t){e.model=t})}]),function(e){!function(e){var t=function(){return function(e){this.employeeNumber=e.employeeNumber,this.employeeName=e.employeeName,this.month=e.month}}();e.LeaveConsumedImportItem=t;var i=function(){function e(e,t,i,n,o,r,a,s,l,c,p,u,d,m){var y=this;this._scope=e,this._stateParams=t,this._filter=i,this._timeOut=n,this._modalInstance=o,this._location=r,this._notificationService=a,this._leaveSettingService=s,this._state=l,this._appSettings=c,this._windowService=p,this._uiGridConstant=u,this._uiGridExtension=d,this.fileDownloadService=m,this.steps=[],this.leaveTypes=[],this.unIdentifiedLeaveTypes=[],this.modalTitle="Import Leave Summary",this.steps.push(new SharedModel.Step(1,"Upload Excel File","","leaves-summary-file-upload",!1)),this.steps.push(new SharedModel.Step(2,"Confirm Import","","leave-summary-preview",!1)),this.currentStep=this.steps[0],this._leaveSettingService.getLeaveTypes().then(function(e){y.leaveTypes=e}),this.baseUrl=-1==this._state.current.name.indexOf("settings")?"/leaves":"/settings/leaves"}return e.prototype.closeModal=function(){this._modalInstance.close(!0)},e.prototype.onFileUploaded=function(e){var t=this;e.exception?this._notificationService.error(e.exception.Message):this._leaveSettingService.getLeaveSummaryInvalidTypes().then(function(e){e.length>0?(t.hideFileUpload=!0,t.unIdentifiedLeaveTypes=e):t.showPreview()},function(e){e.data?t._notificationService.error(e.data.exceptionMessage):t._notificationService.error("Error occured while processing excel file")})},e.prototype.nextStep=function(){var e=this;this.currentStep.valid=!0,this.currentStep=this.steps.filter(function(t){return t.index==e.currentStep.index+1})[0]},e.prototype.initializeGridSettings=function(){var e=this;this.gridOptions={},this.gridOptions.headerTemplate="header-templat";var t=[{name:"Employee",visible:!0,pinned:"left",displayName:"Employee"}];angular.forEach(this.typeHeaders,function(e,i){t.push({name:e,visible:!0,pinned:"body",displayName:e})}),this.gridOptions.category=t,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell ",category:"Employee",pinnedLeft:!0,width:180,enableGrouping:!1},{field:"employeeName",displayName:"Employee Name",cellTemplate:'<div title="{{grid.getCellValue(row,col)}}" class="ui-grid-cell-contents"><a target="_blank" data-ui-sref="employee.time.leaves({id: row.entity.employeeId})"><span>{{grid.getCellValue(row,col)}}</span></a></div>',cellClass:"ui-grid-cell",category:"Employee",pinnedLeft:!0,width:180,enableGrouping:!1},{field:"month",displayName:"Month",cellTemplate:'<div title="{{grid.getCellValue(row,col)}}" class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell",category:"Employee",pinnedLeft:!0,enableGrouping:!1}],this.gridOptions.columnDefs=this.gridOptions.columnDefs.concat(this.customRows),this.gridOptions.showColumnFooter=!0,this.gridOptions.rowHeight=60,this.gridOptions.data="ctrl.leaveConsumedImportItems",this.gridOptions.enableHorizontalScrollbar=!0,this.gridOptions.exporterHeaderFilterUseName=!0,this.gridOptions.columnVirtualizationThreshold=100,this.gridOptions.onRegisterApi=function(t){e.gridApi=t},this._windowService.innerWidth>100*this.gridOptions.columnDefs.length?(this.gridOptions.enableHorizontalScrollbar=!1,angular.forEach(this.gridOptions.columnDefs,function(e,t){e.width="*"})):(this.gridOptions.enableHorizontalScrollbar=!0,angular.forEach(this.gridOptions.columnDefs,function(e,t){e.width=180})),this.gridApi&&(this.gridApi.grid.options.category=t)},e.prototype.createHeadCategories=function(){var e=this;this.headCategories=[],angular.forEach(this.typeHeaders,function(t,i){e.headCategories.push({head:t,category:"Imported",id:i}),e.headCategories.push({head:t,category:"Current",id:i})})},e.prototype.extractTypeHeaders=function(){var e=this;this.typeHeaders=[],angular.forEach(Object.keys(this.uploadedDetails[0].importedLeaveTypeBalances),function(t){e.typeHeaders.push(t)})},e.prototype.parseLeaveComsumedImportedItems=function(){var e=this;this.leaveConsumedImportItems=[],angular.forEach(this.uploadedDetails,function(i,n){var o=new t(i),r=i.savedLeaveTypeBalances,a=i.importedLeaveTypeBalances,s=0;angular.forEach(a,function(e,t){o[t.replace(/ /g,"")+"Current"+s]=r[t],o[t.replace(/ /g,"")+"Imported"+s]=e,s++}),e.leaveConsumedImportItems.push(o)}),this.customRows=[],angular.forEach(this.typeHeaders,function(t,i){var n={field:t.replace(/ /g,"")+"Imported"+i,displayName:" New Leave Count",cellClass:"ui-grid-cell  boder-lt text-center",category:t,treeAggregationType:e._uiGridConstant.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e._uiGridExtension.formatAggregation(t)},groupingShowGroupingMenu:!1},o={field:t.replace(/ /g,"")+"Current"+i,displayName:" Current Leave Count",cellClass:"ui-grid-cell text-center",category:t,treeAggregationType:e._uiGridConstant.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e._uiGridExtension.formatAggregation(t)},groupingShowGroupingMenu:!1};e.customRows.push(o),e.customRows.push(n)})},e.prototype.importLeaveBalances=function(){var e=this;this._leaveSettingService.importLeaveBalances().then(function(t){e.importComplete=!0,e._notificationService.success("Consumed/Availed leave information imported successfully")},function(t){e._notificationService.error("Error occured while importing")})},e.prototype.showPreview=function(){var e=this;this._leaveSettingService.getImportedleaveBalances().then(function(t){e.uploadedDetails=t,e.extractTypeHeaders(),e.createHeadCategories(),e.parseLeaveComsumedImportedItems(),e.initializeGridSettings(),e.nextStep()},function(t){e._notificationService.error(t.data.exceptionMessage)})},e.prototype.abondonAndAddLeaveType=function(){this._modalInstance.close(),this._location.path(this.baseUrl+"/plans")},e.prototype.goToLeaveAdjustments=function(){var e=this;this.closeModal(),this._timeOut(function(){e._location.path("/timeattendance/leaves/adjustments")},500)},e.prototype.downloadImportFormat=function(){this.fileDownloadService.downloadFile("/api/excel/template/leavesummaryimport")},e.$inject=["$scope","$stateParams","$filter","$timeout","$uibModalInstance","$location","NotificationService","LeaveSettingsService","$state","AppSettings","$window","uiGridGroupingConstants","UiGridExtensions","FileDownloadService"],e}(),n=function(){function e(e,t,i,n,o,r,a,s,l){var c=this;this._scope=e,this._stateParams=t,this._filter=i,this._modalInstance=n,this._location=o,this._notificationService=r,this._leaveSettingService=a,this._state=s,this.fileDownloadService=l,this.steps=[],this.leaveTypes=[],this.unIdentifiedLeaveTypes=[],this.modalTitle="Import Carryover Balance",this.steps.push(new SharedModel.Step(1,"Upload Excel File","","carryover-balance-file-upload",!1)),this.steps.push(new SharedModel.Step(2,"Import","","carryover-import",!1)),this.currentStep=this.steps[0],this._leaveSettingService.getLeaveTypes().then(function(e){c.leaveTypes=e}),this.baseUrl=-1==this._state.current.name.indexOf("settings")?"/leaves":"/settings/leaves"}return e.prototype.closeModal=function(){this._modalInstance.close(!0)},e.prototype.onFileUploaded=function(e){var t=this;e.exception?this._notificationService.error(e.exception.Message):this._leaveSettingService.getCarryoverInvalidTypes().then(function(e){e.length>0?(t.hideFileUpload=!0,t.unIdentifiedLeaveTypes=e):t.nextStep()},function(e){t._notificationService.error("There are no records in excel or Invalid data")})},e.prototype.nextStep=function(){var e=this;this.currentStep.valid=!0,this.currentStep=this.steps.filter(function(t){return t.index==e.currentStep.index+1})[0]},e.prototype.abondonAndAddLeaveType=function(){this._modalInstance.close(),this._location.path(this.baseUrl+"/plans")},e.prototype.importLeaveBalances=function(){var e=this;this._leaveSettingService.importCarryoverLeaveBalances().then(function(t){e.importComplete=!0,e._notificationService.success("Leave Carryover balance Information Imported successfully")},function(t){e._notificationService.error("Error occured while importing")})},e.prototype.downloadImportFormat=function(){this.fileDownloadService.downloadFile("/api/excel/template/leavescarryoverimport")},e.$inject=["$scope","$stateParams","$filter","$uibModalInstance","$location","NotificationService","LeaveSettingsService","$state","FileDownloadService"],e}(),o=function(){function e(e,t,i,n,o,r,a,s,l,c){var p=this;this._scope=e,this._stateParams=t,this._filter=i,this._modalInstance=n,this._location=o,this._notificationService=r,this._leaveSettingService=a,this._myTeamLeavesServices=s,this._state=l,this.fileDownloadService=c,this.steps=[],this.invalidEmployees=[],this.unknownErrors=[],this.validationErrors=[],this.leaveTypes=[],this.unIdentifiedLeaveTypes=[],this.modalTitle="Import Leave Requests",this.steps.push(new SharedModel.Step(1,"Upload Excel File","","leaves-request-file-upload",!1)),this.steps.push(new SharedModel.Step(2,"Import","","leave-request-import",!1)),this.currentStep=this.steps[0],this._leaveSettingService.getLeaveTypes().then(function(e){p.leaveTypes=e}),this.isReportingManager=-1==this._state.current.name.indexOf("team")}return e.prototype.closeModal=function(){this._modalInstance.close(!0)},e.prototype.onFileUploaded=function(e){var t=this;e.exception?this._notificationService.error(e.exception.Message):this._leaveSettingService.getLeaveRequestImportErrors().then(function(e){e.length>0?(t.hideFileUpload=!0,t.unIdentifiedLeaveTypes=e):t.nextStep()},function(e){t._notificationService.error("Error occured while processing excel file")})},e.prototype.nextStep=function(){var e=this;this.currentStep.valid=!0,this.currentStep=this.steps.filter(function(t){return t.index==e.currentStep.index+1})[0]},e.prototype.importLeaveRequests=function(){var e=this;this._leaveSettingService.importLeaveRequests().then(function(t){e.importResult=t,e.importResult.failures.forEach(function(t){"These employees are not your reportees."==t.error?e.invalidEmployees.push(t):"There is an exception while importing leave request"==t.error?e.unknownErrors.push(t):(t.errorMessage=[],angular.forEach(t.error.split("\n"),function(e){e&&e.length>0&&t.errorMessage.push(e)}),e.validationErrors.push(t))}),e.importComplete=!0},function(t){e._notificationService.error("Error occured while importing")})},e.prototype.abondonAndAddLeaveType=function(){this._modalInstance.close()},e.prototype.downloadImportFormat=function(){this.fileDownloadService.downloadFile("/api/excel/template/leaverequestimport")},e.$inject=["$scope","$stateParams","$filter","$uibModalInstance","$location","NotificationService","LeaveSettingsService","MyTeamLeavesServices","$state","FileDownloadService"],e}();angular.module("leaves").controller("ImportLeaveSummaryController",i),angular.module("leaves").controller("ImportCarryoverBalanceController",n),angular.module("leaves").controller("ImportLeaveRequestController",o)}(e.Controllers||(e.Controllers={}))}(Leaves||(Leaves={}));var NumberSeries,NumbserSeries,Leaves;__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){var t,i=function(){return function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y){this.id=e,this.name=t,this.code=i,this.description=n,this.isPaid=o,this.isSick=r,this.isStatutory=a,this.isRestrictedToGender=s,this.restrictedGender=l,this.isRestrictedToMaritalStatus=c,this.restrictedMaritalStatus=p,this.systemLeaveType=u,this.isSystemGenerated=d,this.isReasonRequired=m,this.reasons=y}}();e.LeaveType=i,function(e){e[e.NotSpecified=0]="NotSpecified",e[e.Male=1]="Male",e[e.Female=2]="Female",e[e.Other=3]="Other"}(e.Gender||(e.Gender={})),function(e){e[e.None=0]="None",e[e.Floater=1]="Floater",e[e.Special=2]="Special",e[e.Compoff=3]="Compoff"}(e.SystemLeaveType||(e.SystemLeaveType={})),function(e){e[e.None=0]="None",e[e.Hours=1]="Hours",e[e.Days=2]="Days",e[e.Weeks=3]="Weeks",e[e.Months=4]="Months",e[e.HalfYear=5]="HalfYear",e[e.Year=6]="Year",e[e.Quarterly=7]="Quarterly",e[e.Minutes=8]="Minutes"}(e.TimeDuration||(e.TimeDuration={})),function(e){e[e.None=0]="None",e[e.Monthly=1]="Monthly",e[e.Quarterly=2]="Quarterly",e[e.HalfYearly=3]="HalfYearly",e[e.SemiMonthly=4]="SemiMonthly"}(e.LeaveAccrualRate||(e.LeaveAccrualRate={})),function(e){e[e.None=0]="None",e[e.RoundToNearestHalfDay=1]="RoundToNearestHalfDay",e[e.RoundToNearestFullDay=2]="RoundToNearestFullDay",e[e.RoundToNextAvailableHalfDay=3]="RoundToNextAvailableHalfDay",e[e.RoundToNextAvailableFullDay=4]="RoundToNextAvailableFullDay",e[e.RoundToPreviousAvailableHalfDay=5]="RoundToPreviousAvailableHalfDay"}(e.RoundOffType||(e.RoundOffType={})),function(e){e[e.None=0]="None",e[e.LeaveBetweenTwoDays=1]="LeaveBetweenTwoDays",e[e.LeaveBeforeDay=2]="LeaveBeforeDay",e[e.LeaveAfterDay=3]="LeaveAfterDay",e[e.LeaveEitherBeforeOrAfter=4]="LeaveEitherBeforeOrAfter",e[e.DayBetweenTwoLeaves=5]="DayBetweenTwoLeaves"}(e.LeaveOverLappingType||(e.LeaveOverLappingType={})),function(e){e[e.AllLeavesExpire=0]="AllLeavesExpire",e[e.PayAll=1]="PayAll",e[e.CarryForwardAll=2]="CarryForwardAll",e[e.PayAndCarry=3]="PayAndCarry",e[e.CarryAndPay=4]="CarryAndPay"}(e.YearEndProcessingType||(e.YearEndProcessingType={})),function(e){e[e.NullifyAndReset=0]="NullifyAndReset",e[e.DeductFromSalary=1]="DeductFromSalary",e[e.CarryForward=2]="CarryForward"}(t=e.NegativeBalanceProcessingType||(e.NegativeBalanceProcessingType={})),function(e){e[e.NotProcessed=0]="NotProcessed",e[e.Processed=1]="Processed"}(e.YearEndProcessStatus||(e.YearEndProcessStatus={})),function(e){e[e.AfterJoining=0]="AfterJoining",e[e.AfterProbation=1]="AfterProbation"}(e.LeaveAccrualStartPeriod||(e.LeaveAccrualStartPeriod={}));var n=function(){return function(e,t,i,n,o,r,a,s,l,c){this.id=e,this.name=t,this.description=i,this.configuration=n,this.restrictedLeaveTypePairs=o,this.isDefault=r,this.yearStartDate=a,this.showKekaLeavePolicyExplanation=s,this.addCustomLeavePolicyDocument=l,this.leavePolicyDocument=c,this.yearStartDate&&"string"==typeof this.yearStartDate&&(this.yearStartDate=this.yearStartDate.stringToDate())}}();e.LeavePlan=n;var o=function(){return function(e,t,i,n,o,r,a){this.id=e,this.location=t,this.size=i,this.contentType=n,this.name=o,this.uploadedBy=r,this.uploadedOn=a,this.uploadedOn&&"string"==typeof this.uploadedOn&&(this.uploadedOn=this.uploadedOn.stringToDate())}}();e.Document=o;var r=function(){return function(e,t){this.leaveTypeId=e,this.restrictedLeaveTypeId=t}}();e.RestrictedLeaveTypePair=r;var a=function(){return function(e,t,i,n,o,r,a,s,l,c){this.leaveType=e,this.isSetupComplete=t,this.allowedDays=i,this.leaveQuota=n,this.leaveAccrual=o,this.applyingLeave=r,this.leaveRestrictions=a,this.interveningHolidays=s,this.leaveApproval=l,this.yearEndProcessing=c}}();e.LeaveTypeConfig=a;var s=function(){return function(e,t,i,n,o,r,a,s,l,c,p,u){this.hasUpperLimit=e,this.timePeriod=t,this.isProRated=i,this.joinedOnOrBeforeDay=n,this.availBeyondAnnualQuota=o,this.canEmployeeRequestCompoff=r,this.compoffRestrictionDays=a,this.availabilityBeyondAnnualQuotaInDays=s,this.allowReportingManagerToGiveCredit=l,this.compoffRequestInstancesAllowed=c,this.restrictComoffRequestInstances=p,this.compoffRequestInstanceRestrictionDuration=u}}();e.LeaveQuota=s;var l=function(){return function(e,t){this.unit=e,this.duration=t}}();e.TimePeriod=l;var c=function(){return function(e,t,i,n){this.duringProbation=e,this.yearsFromJoining=t,this.daysPerGivenPeriod=i,this.totalDaysPerYear=n}}();e.AccrualRate=c;var p=function(){return function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S){this.limitToAnnual=e,this.accrualRate=t,this.initialPeriodAccrualBeginDay=i,this.midPeriodAccrualBeginDay=n,this.accrualBasedOnExperience=o,this.accrualRates=r,this.projectedLeaveBalanceToApplyLeave=a,this.isAllowedBeyondAccruedBalance=s,this.maxAllowedBeyondAccrual=l,this.leaveBalanceRoundOff=c,this.isAccrualBalanceCapped=p,this.cappedAccrualBalanceInDays=u,this.isAccrualStoppedInLongLeave=d,this.isAccrualStoppedInNoticePeriod=m,this.totalLongLeavesLimitInDays=y,this.creditedLeaveExpires=h,this.creditedLeaveExpiresInDays=f,this.accrualStartsFrom=g,this.daysToStartAccrualAfterJoining=v,this.daysToStartAccrualAfterProbation=S}}();e.LeaveAccrual=p;var u=function(){return function(e,t,i,n,o,r,a,s,l,c,p,u){this.allowHalfDay=e,this.allowEmployeeToApply=t,this.priorNoticeRanges=i,this.requireMaxPriorNotice=n,this.maxPriorNoticeDays=o,this.allowApplyingPreviousLeaves=r,this.maxAllowedDaysForPreviousLeave=a,this.requireNote=s,this.requireDocumentProof=l,this.hasRestrictionOnPastDatedLeave=c,this.pastDatedRestrictionDayOfTheMonth=p,this.documentProofExceedDays=u}}();e.ApplyingLeave=u;var d=function(){return function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S,C,w,b,P,T,D,I,A){this.applyAfterProbation=e,this.daysAfterProbation=t,this.daysAfterJoiningDate=i,this.limitToConsecutiveDays=n,this.maxConsecutiveDaysAllowed=o,this.limitMaxLeaveConsumption=r,this.maxLeaveConsumptionDays=a,this.requireGapBetweenLeaveRequests=s,this.restrictLeavesPerYear=l,this.restrictLeavesPerCalendarMonth=c,this.minGapInDays=p,this.allowedInstancesPerYear=u,this.allowedInstancesPerCalendarMonth=d,this.limitMinLeaveConsumption=m,this.minLeaveConsumptionDays=y,this.balanceRequiredToLimitMinLeaveDays=h,this.restrictCombiningLeaveType=f,this.restrictIfBalanceInOtherLeaveTypes=g,this.restrictedLeaveTypesOnBalance=v,this.allowedDuringNoticePeriod=S,this.noticePeriodExtensionInstances=C,this.allowManagerToOverrideRules=w,this.limitLeaveDaysInProbation=b,this.maxLeaveDaysInProbation=P,this.allowedLeaveInstancesForTenure=T,this.restrictLeaveInstancesForTenure=D,this.leaveAvailingRestrictionDay=I,this.restrictEmployeeAvailingLeave=A}}();e.LeaveRestrictions=d;var m=function(){return function(e,t,i,n,o,r,a,s){this.holidayOverLappingType=e,this.weekOffOverLappingType=t,this.weeklyOffsCalendarDaysLimit=i,this.holidaysCalendarDaysLimit=n,this.considerLeaveDaysForHoliday=o,this.considerLeaveDaysForWeekoff=r,this.doNotconsiderHalfDayLeaveForHoliday=a,this.doNotconsiderHalfDayLeaveForWeekoff=s}}();e.InterveningHolidays=m;var y=function(){return function(e){this.requireApproval=e}}();e.LeaveApproval=y;var h=function(){return function(e,t,i,n,o){this.yearEndProcessingType=e,this.negativeBalanceProcessingType=t,this.yearEndProcessingRanges=i,this.doesCarryoverLeavesExpire=n,this.carryoverLeavesExpireInDays=o}}();e.YearEndProcessing=h;var f=function(){return function(e){var t=this;this.leaveTypeYearEndTransactions=[],this.id=e.id,this.employeeId=e.employeeId,this.payGroupId=e.payGroupId,this.payGroupName=e.payGroupName,this.displayName=e.displayName,this.leavePlanId=e.leavePlanId,this.employeeNumber=e.employeeNumber,this.processedYear=e.processedYear,this.leaveYearEndProcessId=e.leaveYearEndProcessId,this.leaveTypeYearEndTransactions=(e.leaveTypeYearEndTransactions||[]).map(function(i){return i.displayName=t.displayName,i.employeeNumber=e.employeeNumber,new g(i)})}}();e.YearEndTransaction=f;var g=function(){function e(e){this.leaveTypeId=e.leaveTypeId,this.leaveTypeName=e.leaveTypeName,this.totalBalance=Number(e.totalBalance.toFixed(2)),this.actualCarryForwardDays=e.actualCarryForwardDays,this.overrideCarryForwardDays=e.overrideCarryForwardDays,this.overriddenCarryForwardDays=e.overriddenCarryForwardDays,this.actualEncashedDays=e.actualEncashedDays,this.overrideEncashableDays=e.overrideEncashableDays,this.overriddenEncashedDays=e.overriddenEncashedDays,this.leaveEncashmentPolicyId=e.leaveEncashmentPolicyId,this.payableAmount=e.payableAmount,this.overridePayableAmount=e.overridePayableAmount,this.overriddenPayableAmount=e.overriddenPayableAmount,this.payableOn=e.payableOn?Date.getDateObj(e.payableOn):null,this.displayName=e.displayName,this.employeeNumber=e.employeeNumber,this.negativeBalanceProcessingType=e.negativeBalanceProcessingType}return Object.defineProperty(e.prototype,"encashableDays",{get:function(){return this.overrideEncashableDays?this.overriddenEncashedDays:this.actualEncashedDays},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"carryForwardDays",{get:function(){return this.overrideCarryForwardDays?this.overriddenCarryForwardDays:this.actualCarryForwardDays},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"totalExpired",{get:function(){return this.negativeBalanceProcessingType==t.CarryForward&&this.totalBalance<0?+Math.min(this.totalBalance-(this.carryForwardDays?this.carryForwardDays:0),0).toFixed(4):+Math.max(this.totalBalance-(this.carryForwardDays?this.carryForwardDays:0)-(this.encashableDays?this.encashableDays:0),0).toFixed(4)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isValidTransaction",{get:function(){return this.negativeBalanceProcessingType==t.CarryForward?this.totalBalance<0?this.totalBalance<=(this.overrideCarryForwardDays?this.overriddenCarryForwardDays:this.carryForwardDays)&&(this.overrideCarryForwardDays?this.overriddenCarryForwardDays:this.carryForwardDays)<=0&&0==(this.overrideEncashableDays?this.overriddenEncashedDays:this.actualEncashedDays):+this.totalBalance.toFixed(3)>=+((this.overrideEncashableDays?this.overriddenEncashedDays:this.actualEncashedDays)+(this.overrideCarryForwardDays?this.overriddenCarryForwardDays:this.carryForwardDays)).toFixed(3)&&(this.overrideCarryForwardDays?this.overriddenCarryForwardDays:this.carryForwardDays)>=0:this.totalBalance<0?0==+((this.overrideEncashableDays?this.overriddenEncashedDays:this.actualEncashedDays)+(this.overrideCarryForwardDays?this.overriddenCarryForwardDays:this.carryForwardDays)).toFixed(3)&&(this.overrideCarryForwardDays?this.overriddenCarryForwardDays:this.carryForwardDays)>=0:+this.totalBalance.toFixed(3)>=+((this.overrideEncashableDays?this.overriddenEncashedDays:this.actualEncashedDays)+(this.overrideCarryForwardDays?this.overriddenCarryForwardDays:this.carryForwardDays)).toFixed(3)&&(this.overrideCarryForwardDays?this.overriddenCarryForwardDays:this.carryForwardDays)>=0},enumerable:!0,configurable:!0}),e}();e.TypeYearEndTransaction=g;var v=function(){return function(e,t,i){this.leaveDurationInCalendarDays=e,this.priorNoticeCalendarDays=t,this.priorNoticeWorkingDays=i}}();e.PriorNoticeRange=v;var S=function(){return function(e,t,i){this.leaveBalanceInDays=e,this.carryForwardDays=t,this.payableDays=i}}();e.CarryoverRange=S;var C=function(){function e(e){void 0===e&&(e={}),this.id=e.id,this.fromDate=e.fromDate,this.toDate=e.toDate,this.availFloaterLeave=e.availFloaterLeave,this.availSpecialLeave=e.availSpecialLeave,this.creatingEmployeeId=e.creatingEmployeeId,this.note=e.note,this.documentProofs=e.documentProofs,this.fromSession=e.fromSession,this.toSession=e.toSession,this.leaveRequestType=e.leaveRequestType,this.selection=e.selection,this.reason=e.reason,this.notifyTo=e.notifyTo,this.overrideRestrictions=e.overrideRestrictions,this.overriddenRules=e.overriddenRules,this.leaveApprovalLogs=e.leaveApprovalLogs,this.toDate&&"string"==typeof this.toDate&&(this.toDate=this.toDate.stringToDate()),this.fromDate&&"string"==typeof this.fromDate&&(this.fromDate=this.fromDate.stringToDate())}return e.prototype.toJSON=function(){return this.fromDate=this.fromDate.dateOnlyString(),this.toDate=this.toDate.dateOnlyString(),this},e}();e.LeaveRequest=C;var w=function(e){function t(t){void 0===t&&(t={});var i=e.call(this,t)||this;return i.status=t.status,i.approvers=t.approvers,i.totalDays=t.totalDays,i.leaveTypes=t.leaveTypes,i.displayName=t.displayName,i.employeeId=t.employeeId,i}return __extends(t,e),t}(C);e.LeaveRequestView=w;var b=function(){return function(e,t,i,n,o,r,a,s){this.date=e,this.isNonWorkingDay=t,this.isNonWorkingHalfDay=i,this.isHoliday=n,this.isFloater=o,this.isHalfDay=r,this.whichHalf=a,this.holidayInfo=s}}();e.LeaveDay=b;var P=function(){function e(e){this.leaveDays=e,this.leaveDays=e,this.holidayCount=this.getHolidayCount,this.floaterCount=this.getFloaterCount,this.totalDays=this.getTotalDays,this.nonWorkingDays=this.getNonWorkingDays,this.nonWorkingHalfDays=this.getNonWorkingHalfDays,this.halfDays=this.getHalfDays,this.workingDays=this.getWorkingDays}return Object.defineProperty(e.prototype,"getHolidayCount",{get:function(){return this.leaveDays.filter(function(e){return e.isHoliday&&!e.isFloater}).length},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"getFloaterCount",{get:function(){return this.leaveDays.filter(function(e){return e.isFloater}).length},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"getTotalDays",{get:function(){return this.leaveDays.length},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"getNonWorkingDays",{get:function(){return this.leaveDays.filter(function(e){return e.isNonWorkingDay&&!e.isNonWorkingHalfDay&&!e.isHoliday}).length},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"getNonWorkingHalfDays",{get:function(){return this.leaveDays.filter(function(e){return e.isNonWorkingHalfDay&&!e.isHoliday}).length},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"getHalfDays",{get:function(){return this.leaveDays.filter(function(e){return!e.isNonWorkingDay&&e.isHalfDay&&!e.isHoliday}).length},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"getWorkingDays",{get:function(){return this.leaveDays.filter(function(e){return!e.isNonWorkingDay&&!e.isHalfDay&&!e.isHoliday}).length},enumerable:!0,configurable:!0}),e}();e.LeavePeriodSummary=P;var T=function(){return function(e){this.id=e.id,this.status=e.status,this.isReadyToProcess=e.isReadyToProcess,this.leavePlanId=e.leavePlanId,this.leavePlanName=e.leavePlanName,this.month=e.month-1,this.monthName=void 0!=this.month?SharedModel.monthNames[this.month].name:"",this.year=e.year,this.employeesCount=e.employeesCount,this.processedOn=e.processedOn&&"string"===e.processedOn?e.processedOn.stringToDate():e.processedOn,this.yearEndProcessingAvailableDate=e.yearEndProcessingAvailableDate}}();e.LeaveYearEndProcess=T;var D=function(){return function(e){this.date=e.debitedOn?e.debitedOn:e.creditedFor,this.typeId=e.typeId,this.debitedHours=e.days,this.creditedHours=e.creditedDays,this.balance=e.balance,this.creditSource=e.creditSource}}();e.LeaveHistoryDetail=D;var I=function(){return function(e){this.leaveYearEndTransactions=[],this.typeYearEndTransactions=[],this.groupId=e.groupId,this.pendingCycles=e.pendingCycles,this.leaveYearEndTransactions=e.leaveYearEndTransactions,this.typeYearEndTransactions=e.typeYearEndTransactions,this.gridSettings=e.gridSettings,this.gridApi=e.gridApi}}();e.GroupyearEndEncashments=I;var A=function(){return function(e){this.groupId=e.groupId,this.groupName=e.groupName}}();e.payGroup=A}(e.Model||(e.Model={}))}(Leaves||(Leaves={})),function(e){!function(t){var i=function(){function t(t,i,n,o,r,a,s,l,c){this._scope=t,this._filter=i,this._modal=n,this._dialogs=o,this._notificationService=r,this._leaveSettingsService=a,this._leaveAccrualRate=s,this._state=l,this._location=c,this.timeDuration=e.Model.TimeDuration,this.systemLeaveType=e.Model.SystemLeaveType,this.init()}return t.prototype.init=function(){var e=this;this._leaveSettingsService.getLeavePlans().then(function(t){e.leavePlans=t}),this._leaveSettingsService.getLeaveTypes().then(function(t){e.leaveTypes=t}),this.baseUrl=-1==this._state.current.name.indexOf("settings")?"/old/#/leaves":"/old/#/settings/leaves",this._scope.$on("$stateChangeSuccess",function(t,i,n,o,r){if(o.name.contains(".configuration")&&r.planId){var a=e.leavePlans.findIndex(function(e){return e.id==r.planId});a>-1&&e._leaveSettingsService.getLeavePlan(r.planId).then(function(t){e.leavePlans[a]=t})}})},t.prototype.setupLeaveTypeConfig=function(e,t){var i=this,n=e.configuration.map(function(e){return e.leaveType}),o=this.leaveTypes;this._modal.open({templateUrl:"leavesettings/typeconfiguration",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"LeaveConfigurationController as configCtrl",resolve:{config:function(){return{plan:e,leaveTypeConfig:t,assignedLeaveTypes:n,allLeaveTypes:o}}}}).result.finally(function(){var t=i.leavePlans.indexOf(e);i._leaveSettingsService.getLeavePlan(e.id).then(function(e){i.leavePlans[t]=e})})},t.prototype.deleteLeavePlan=function(e){var t=this;this._dialogs.confirm("Please Confirm","Are you sure you want to delete the "+e.name+" ?").result.then(function(){t._notificationService.information("Deleting leaveplan"),t._leaveSettingsService.deleteLeavePlan(e.id).then(function(i){i.isDeleted?(t._notificationService.success(e.name+" deleted successfully"),t.leavePlans.splice(t.leavePlans.indexOf(e),1)):t._notificationService.error(e.name+" cannot be deleted because it is assigned to employees.")},function(i){t._notificationService.error("Error in deleting "+e.name)})})},t.prototype.cloneLeavePlan=function(e){var t=this;this._modal.open({templateUrl:"clone-leave-plan-modal",backdrop:"static",windowClass:"structure-compare",controller:"CloneLeaveTypesController as ctrl",resolve:{planId:function(){return e}}}).result.then(function(e){"clone"==e&&t.init()})},t.prototype.cloneLeaveType=function(e,t){var i=this;this._modal.open({templateUrl:"clone-leave-type-modal",backdrop:"static",windowClass:"structure-compare",controller:"CloneLeaveTypeConfigController as ctrl",resolve:{selectedPlanId:function(){return e},typeConfig:function(){return t}}}).result.then(function(e){"clone"==e&&i.init()})},t.prototype.deleteLeaveTypeConfig=function(e,t){var i=this;this._dialogs.confirm("Please Confirm","Are you sure you want to delete "+t.leaveType.name+" configuration from the "+e.name+" ?").result.then(function(){i._leaveSettingsService.deleteLeaveTypeConfig(e.id,t.leaveType.id).then(function(n){e.configuration.splice(e.configuration.indexOf(t),1),i._notificationService.success(t.leaveType.name+" configuration deleted successfully from "+e.name)},function(i){this._notificationService.error("Error in deleting "+t.leaveType.name+" config from "+e.name)})})},t.prototype.getAccrualRateMessage=function(e){if(!e.leaveQuota.hasUpperLimit||e.leaveAccrual.limitToAnnual)return"None ";if(e.leaveAccrual.accrualBasedOnExperience)return"Accrual varies based on experience ";if(e.leaveAccrual.accrualRate){var t=parseFloat((e.leaveQuota.timePeriod.duration/this._leaveAccrualRate.getById(e.leaveAccrual.accrualRate).instancesInaYear).toFixed(3));return"Accrue "+t+(1==t?" day ":" days ")+this._leaveAccrualRate.getById(e.leaveAccrual.accrualRate).title}},t.prototype.getYearEndProcessMessage=function(t){return t.leaveQuota.hasUpperLimit?t.yearEndProcessing.yearEndProcessingType==e.Model.YearEndProcessingType.AllLeavesExpire?"All Leave Expires ":t.yearEndProcessing.yearEndProcessingType==e.Model.YearEndProcessingType.CarryForwardAll?"All Leave Carry Forward ":t.yearEndProcessing.yearEndProcessingType==e.Model.YearEndProcessingType.PayAll?"All Leave Paid ":t.yearEndProcessing.yearEndProcessingType==e.Model.YearEndProcessingType.PayAndCarry?"Pay first and Carry forward remaining":t.yearEndProcessing.yearEndProcessingType==e.Model.YearEndProcessingType.CarryAndPay?"Carry forward first and Pay remaining":void 0:"None"},t.prototype.setAsDefault=function(e){var t=this;this._leaveSettingsService.setDefaultLeavePlan(e.id).then(function(i){t.leavePlans.forEach(function(e){e.isDefault=!1}),e.isDefault=!0,t._notificationService.success(e.name+" is set as default leave plan")},function(i){t._notificationService.error("Error in setting "+e.name+" as default leave plan")})},t.prototype.getYearEndDate=function(e){var t=e.stringToDate();return t.setDate(t.getDate()-1)},t.$inject=["$scope","$filter","$uibModal","dialogs","NotificationService","LeaveSettingsService","LeaveAccrualRate","$state","$location"],t}(),n=function(){function t(t,i,n,o,r,a,s,l){var c=this;this._scope=t,this._stateParams=i,this._state=n,this._location=o,this._notificationService=r,this._leaveSettingsService=a,this.blobContainers=s,this.appSettings=l,this.isSaveInProgress=!1,this.fileUploadSettings=angular.copy(l.fileUploadSettings),this.fileUploadSettings.allowedFileTypes="png,jpg,jpeg,doc,docx,pdf,rtf,xps,txt",this._stateParams.id?(this.planId=this._stateParams.id,this._leaveSettingsService.getLeavePlan(this.planId).then(function(e){c.plan=e,c.plan.yearStartDate&&"string"==typeof c.plan.yearStartDate&&(c.plan.yearStartDate=c.plan.yearStartDate.stringToDate()),c.planCopy=angular.copy(c.plan)})):(this.plan=new e.Model.LeavePlan,this.plan.showKekaLeavePolicyExplanation=!0,this.plan.leavePolicyDocument=new e.Model.Document),this._leaveSettingsService.getLeavePlans().then(function(e){c.leavePlanList=e}),this.baseUrl=-1==this._state.current.name.indexOf("settings")?"/leaves":"/settings/leaves"}return t.prototype.saveLeavePlan=function(e){var t=this;if(!this.isSaveInProgress&&this.form.leavePlanForm.$valid){if(this.plan.addCustomLeavePolicyDocument&&!this.plan.leavePolicyDocument.name)return void this._notificationService.error("Please upload leave policy document");this.isSaveInProgress=!0;var i=angular.copy(e);i.yearStartDate=i.yearStartDate.dateOnlyString(),this._leaveSettingsService.saveLeavePlan(i).then(function(e){t._notificationService.success("Leave plan added successfully."),t._location.path(t.baseUrl+"/plan/assign/"+e.id)},function(e){this._notificationService.error("Error in adding Leave Plan."),this.isSavingInProgress=!1})}else this.submitted=!0},t.prototype.updateLeavePlan=function(e){var t=this;if(this.form.leavePlanForm.$valid){if(this.plan.addCustomLeavePolicyDocument&&!this.plan.leavePolicyDocument.name)return void this._notificationService.error("Please upload leave policy document");var i=angular.copy(e);i.yearStartDate=i.yearStartDate.dateOnlyString(),this._leaveSettingsService.updateLeavePlan(i).then(function(e){t._notificationService.success("Leave plan updated Successfully."),t.cancel()},function(e){this._notificationService.error("Error in updating Leave Plan.")})}else this.submitted=!0},t.prototype.removeDocument=function(){this.plan.leavePolicyDocument=new e.Model.Document},t.prototype.cancel=function(){this._location.path(this.baseUrl+"/plans")},t.prototype.doesLeavePlanExists=function(e){return!!(this.planCopy&&this.planCopy.id&&this.planCopy.id>0&&this.planCopy.name.toUpperCase()==e.toUpperCase())||!this.leavePlanList.find(function(t){return t.name.toUpperCase()==e.toUpperCase()})},t.$inject=["$scope","$stateParams","$state","$location","NotificationService","LeaveSettingsService","BlobContainers","AppSettings"],t}(),o=function(){function t(e,t,i,n,o,r,a,s,l){var c=this;this._scope=e,this._location=t,this._stateParams=i,this._modal=n,this._q=o,this._dialogs=r,this._notificationService=a,this._leaveSettingsService=s,this._state=l,this.isAssignmentInProgress=!1,this.planId=this._stateParams.id,this._q.all([this._leaveSettingsService.getLeavePlan(this.planId),this._leaveSettingsService.getLeaveTypes()]).then(function(e){c.leavePlan=e[0],c.leaveTypes=e[1],angular.forEach(c.leaveTypes,function(e){null!=this.leavePlan.configuration.find(function(t){return t.leaveType.id==e.id||e.isSelected})&&(e.isSelected=!0,e.isDisabled=!0)},c)}),this.baseUrl=-1==this._state.current.name.indexOf("settings")?"/leaves":"/settings/leaves"}return t.prototype.assignLeaveTypes=function(){var e=this;this.isAssignmentInProgress||(this.isAssignmentInProgress=!0,this.newlyAddedLeaveTypes=this.leaveTypes.filter(function(e){return e.isSelected&&!e.isDisabled}),this._leaveSettingsService.assignLeaveTypes(this.planId,this.newlyAddedLeaveTypes).then(function(t){e._location.path(e.baseUrl+"/plans"),e._notificationService.error("Leave types assigned successfully")},function(t){e.isAssignmentInProgress=!1,e._notificationService.error("Error in assigning leave types")}))},t.prototype.addEditLeaveType=function(t){var i=this,n=new e.Model.LeaveType;n.isPaid=!0,t&&(0==(n=angular.copy(t)).restrictedGender&&(n.restrictedGender=null),0==n.restrictedMaritalStatus&&(n.restrictedMaritalStatus=null)),this._modal.open({templateUrl:"add-leave-type-modal",backdrop:"static",windowClass:"structure-compare",controller:"AddLeaveTypeController as addCtrl",resolve:{leaveType:function(){return n},leaveTypeList:function(){return angular.copy(i.leaveTypes)}}}).result.then(function(e){t?angular.forEach(i.leaveTypes,function(i,n){i.id==t.id&&(e.isSelected=t.isSelected,this.leaveTypes[n]=e)},i):i.leaveTypes.push(e)})},t.prototype.cancel=function(){this._location.path(this.baseUrl+"/plans")},t.$inject=["$scope","$location","$stateParams","$uibModal","$q","dialogs","NotificationService","LeaveSettingsService","$state"],t}(),r=function(){function t(e,t,i,n,o,r,a,s,l,c,p,u){var d=this;this._scope=e,this._location=t,this._stateParams=i,this._filter=n,this.appSettings=o,this.uiGridConstants=r,this._modal=a,this._q=s,this.dialogs=l,this.notificationService=c,this._leaveSettingsService=p,this._state=u,this.initializeGridSettings=function(){d.leaveTypeGridOptions=angular.copy(d.appSettings.gridSettings),d.leaveTypeGridOptions.columnDefs=[{field:"name",displayName:"Leave Type",cellClass:"ui-grid-cell",sort:{direction:d.uiGridConstants.ASC}},{field:"code",displayName:"Code",cellClass:"ui-grid-cell"},{field:"description",displayName:"Description",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents" title="{{grid.getCellValue(row,col)}}"><span>{{grid.getCellValue(row,col)}}</span></div>'},{name:"Actions",displayName:"Actions",enableSorting:!1,cellClass:"ui-grid-cell cell-tooltip ui-grid-cell-contents",cellTemplate:'<div class="ui-grid-cell-options "><span class="clearfix"><ul class="action-items list-inline">\n                        <li class="list-item">\n                            <a class="list-link" data-ng-click="grid.appScope.addEditLeaveType(row.entity);"><span class="icon-pencil5" uib-tooltip="Edit" tooltip-placement="right"></span></a>\n                        </li>\n                        </ul></span></div>'}],d.leaveTypeGridOptions.rowHeight=50,d.leaveTypeGridOptions.appScopeProvider=d},this.deleteLeaveType=function(e){d.dialogs.confirm("Please Confirm","Are you sure you want to delete leave type ? ").result.then(function(){d.notificationService.information("Deleting leave type"),d._leaveSettingsService.deleteLeaveType(e).then(function(t){t.isDeleted?(d.notificationService.success("Leave type deleted successfully"),d.leaveTypes=d.leaveTypes.filter(function(t){return t.id!=e}),d.leaveTypeGridOptions.data=d.leaveTypes):d.notificationService.error("This Leave type can't be deleted as it is assigned to leave plans")},function(e){d.notificationService.error("Error in deleting the leave type")})})},this.refreshData=function(){d.leaveTypeGridOptions.data=d._filter("filter")(d.leaveTypes,d.filterText,!1)},this._leaveSettingsService.getLeaveTypes().then(function(e){d.leaveTypes=e}),this.baseUrl=-1==this._state.current.name.indexOf("settings")?"/leaves":"/settings/leaves"}return t.prototype.$onInit=function(){var e=this;this.initializeGridSettings(),this._leaveSettingsService.getLeaveTypes().then(function(t){e.leaveTypes=t,e.leaveTypeGridOptions.data=e.leaveTypes},function(t){e.notificationService.error("Error in getting leave types")})},t.prototype.addEditLeaveType=function(t){var i=this,n=new e.Model.LeaveType;n.isPaid=!0,t&&(0==(n=angular.copy(t)).restrictedGender&&(n.restrictedGender=null),0==n.restrictedMaritalStatus&&(n.restrictedMaritalStatus=null)),this._modal.open({templateUrl:"add-leave-type-modal",backdrop:"static",windowClass:"structure-compare",controller:"AddLeaveTypeController as addCtrl",resolve:{leaveType:function(){return n},leaveTypeList:function(){return angular.copy(i.leaveTypes)}}}).result.then(function(e){t?angular.forEach(i.leaveTypes,function(i,n){i.id==t.id&&(e.isSelected=t.isSelected,this.leaveTypes[n]=e)},i):i.leaveTypes.push(e),i.refreshData()})},t.prototype.cancel=function(){this._location.path(this.baseUrl+"/plans")},t.$inject=["$scope","$location","$stateParams","$filter","AppSettings","uiGridConstants","$uibModal","$q","dialogs","NotificationService","LeaveSettingsService","$state"],t}(),a=function(){function e(e,t,i,n,o,r,a,s){this._scope=e,this._modalInstance=t,this.leaveType=i,this.leaveTypeList=n,this.gender=o,this._notificationService=r,this._leaveSettingsService=a,this._dialogs=s,this.validationClass="",this.isSaveInProgress=!1,this.maritalStatus={Single:{id:1,name:"Single"},Married:{id:2,name:"Married"}},this.model=angular.copy(i),void 0==this.model.reasons&&(this.model.reasons=new Array)}return e.prototype.save=function(e){var t=this;if(!this.isSaveInProgress&&this.form.leaveTypeForm.$valid)if(this.model.isReasonRequired&&0==this.model.reasons.length)this._notificationService.error("No reasons added.");else{this.isSaveInProgress=!0,this.model.code=this.model.code.toUpperCase();var i=angular.copy(this.model);this.model.isReasonRequired&&(i.reasons=this.removeDuplicates(this.model.reasons)),this._leaveSettingsService.saveLeaveType(i).then(function(n){e.id=n.id,e.isPaid=e.isPaid||!1,e.isSick=e.isSick||!1,e.isStatutory=e.isStatutory||!1,e.systemLeaveType=0,e.reasons=i.reasons,t._modalInstance.close(e),t._notificationService.success("Leave type added successfully.")},function(e){t.isSaveInProgress=!1,t._notificationService.error("Leave type with same name/code already exists")})}else this.submitted=!0},e.prototype.update=function(e){var t=this;if(this.form.leaveTypeForm.$valid)if(this.model.isReasonRequired&&0==this.model.reasons.length)this._notificationService.information("At least one reason is required.");else{this.model.code=this.model.code.toUpperCase();var i=angular.copy(this.model);this.model.isReasonRequired&&(i.reasons=this.removeDuplicates(this.model.reasons)),this._leaveSettingsService.updateLeaveType(i.id,i).then(function(e){t._modalInstance.close(i),t._notificationService.success("Leave type updated successfully.")},function(e){t._notificationService.error("Leave type with same name/code already exists")})}else this.submitted=!0},e.prototype.removeDuplicates=function(e){var t=[];return e.map(function(e){return e.toLowerCase()}).forEach(function(i,n,o){n==o.indexOf(i)&&t.push(e[n])}),t},e.prototype.doesLeaveTypeExists=function(e){return!!(this.model.id&&this.model.id>0&&this.leaveType.name.toUpperCase()==e.toUpperCase())||!this.leaveTypeList.find(function(t){return t.name.toUpperCase()==e.toUpperCase()})},e.prototype.doesLeaveTypeCodeExists=function(e){return!!(this.model.id&&this.model.id>0&&null!=this.leaveType.code&&this.leaveType.code.toUpperCase()==e.toUpperCase())||!this.leaveTypeList.find(function(t){return null!=t.code&&t.code.toUpperCase()==e.toUpperCase()})},e.prototype.retainOldValue=function(e){this.reasonOld=angular.copy(e)},e.prototype.updateReason=function(e,t){return e?(this.model.reasons[t]=angular.copy(e),angular.copy(e)):(this.model.reasons[t]=angular.copy(this.reasonOld),this.reasonOld)},e.prototype.addLeaveReason=function(e,t){e&&""!=e?(this.model.reasons.push(e),this.leaveReason=""):this.validationClass="invalid-input-field"},e.prototype.deleteReason=function(e,t){var i=this;this._dialogs.confirm("Please Confirm","Do you want to delete this reason ?").result.then(function(){i.model.reasons.splice(e,1)})},e.$inject=["$scope","$uibModalInstance","leaveType","leaveTypeList","Gender","NotificationService","LeaveSettingsService","dialogs"],e}(),s=function(){function e(e,t,i,n,o,r){this._filter=e,this._modalInstance=t,this._notificationService=i,this._leaveSettingsService=n,this.stateParams=o,this.qService=r,this.steps=[],this.steps.push(new SharedModel.Step(1,"Leave Quota","","",!1)),this.steps.push(new SharedModel.Step(2,"Leave Accrual","","",!1)),this.steps.push(new SharedModel.Step(3,"Applying For Leave","","",!1)),this.steps.push(new SharedModel.Step(4,"Leave Restrictions","","",!1)),this.steps.push(new SharedModel.Step(5,"Holidays & Weekoffs","","",!1)),this.steps.push(new SharedModel.Step(6,"Leave Approval","","",!1)),this.steps.push(new SharedModel.Step(7,"Year End Processing","","",!1)),this.currentStep=this.steps[0]}return e.prototype.$onInit=function(){var e=this;this.qService.all([this._leaveSettingsService.getLeavePlan(this.stateParams.planId),this._leaveSettingsService.getLeaveTypes()]).then(function(t){e.leavePlan=t[0],e.leaveTypes=t[1],e.model=e.leavePlan.configuration.find(function(t){return t.leaveType.id==e.stateParams.typeId}),e.assignedLeaveTypes=e.leavePlan.configuration.map(function(e){return e.leaveType}),e.leaveTypes=e.leaveTypes.reduce(function(e,t,i){return e[t.id]=t,e},{})})},e.prototype.setConfigurationStep=function(e){this.currentStep.index>e&&(this.currentStep=this.steps.filter(function(t){return t.index==e})[0])},e.prototype.saveAndContinue=function(){var e=this;this._leaveSettingsService.updateLeaveTypeConfig(this.leavePlan.id,this.model,this.leavePlan.restrictedLeaveTypePairs).then(function(t){e.currentStep.valid=!0,7==e.currentStep.index&&e._modalInstance.close(),e._notificationService.success(e.currentStep.title+" information for "+e.model.leaveType.name+" saved successfully"),e.currentStep=e.steps.filter(function(e){return e.index==this.currentStep.index+1},e)[0]},function(t){e._notificationService.error("Error in saving "+e.currentStep.title+" information for "+e.model.leaveType.name)})},e.$inject=["$filter","$uibModalInstance","NotificationService","LeaveSettingsService","$stateParams","$q"],e}(),l=function(){function e(e,t,i){this._notificationService=e,this._leaveSettingsService=t,this._location=i,this.disableLeaveAccrual=!1}return e.prototype.calculateLeaveAccrual=function(){var e=this;this.disableLeaveAccrual=!0;var t=angular.copy(this.startDate);t=t?t.dateOnlyString():"",this._leaveSettingsService.calculateAccrual(t).then(function(t){e._location.path("/dashboard"),e._notificationService.success("Leave accruals for all employees are generated successfully!")},function(t){e.disableLeaveAccrual=!1,e._notificationService.error("Error in re calculating leave accruals")})},e.$inject=["NotificationService","LeaveSettingsService","$location"],e}(),c=function(){function t(t,i,n,o,r,a,s,l,c,p,u){var d=this;this._scope=t,this._modalInstance=i,this._location=n,this._stateParams=o,this._modal=r,this._q=a,this._dialogs=s,this._notificationService=l,this._leaveSettingsService=c,this._state=p,this.planId=u,this.isCloneInProgress=!1,this.newPlanName="",this.newPlanDescription="",this.newPlan=new e.Model.LeavePlan,this._q.all([this._leaveSettingsService.getLeavePlan(this.planId),this._leaveSettingsService.getLeavePlans()]).then(function(e){d.leavePlan=e[0],d.leavePlans=e[1],d.leaveTypes=new Array,d.leavePlan.configuration.forEach(function(e){d.leaveTypes.push(e.leaveType)})}),this.baseUrl=-1==this._state.current.name.indexOf("settings")?"/leaves":"/settings/leaves"}return t.prototype.doesLeavePlanExists=function(e){return null==e?(this.valid=!1,!1):(this.valid=!this.leavePlans.find(function(t){return t.name.toUpperCase()==e.toUpperCase()}),this.valid)},t.prototype.cloneLeaveTypes=function(){var e=this;!this.isCloneInProgress&&this.form.leavePlanForm.$valid?(this.isCloneInProgress=!0,this.selectedLeaveTypes=this.leaveTypes.filter(function(e){return e.isSelected&&!e.isDisabled}),this.newPlan.name=this.newPlanName,this.newPlan.description=this.newPlanDescription,this.newPlan.showKekaLeavePolicyExplanation=this.leavePlan.showKekaLeavePolicyExplanation,this.newPlan.addCustomLeavePolicyDocument=this.leavePlan.addCustomLeavePolicyDocument,this.newPlan.leavePolicyDocument=this.leavePlan.leavePolicyDocument,this.newPlan.yearStartDate=this.leavePlan.yearStartDate,this.newPlan.configuration=this.leavePlan.configuration.filter(function(t){return e.selectedLeaveTypes.includes(t.leaveType)}),this._leaveSettingsService.saveLeavePlan(this.newPlan).then(function(t){e._modalInstance.close("clone"),e._notificationService.error("Leave plan cloned successfully")},function(t){e.isCloneInProgress=!1,e._notificationService.error("Error in cloning leave plan")})):this.submitted=!0},t.$inject=["$scope","$uibModalInstance","$location","$stateParams","$uibModal","$q","dialogs","NotificationService","LeaveSettingsService","$state","planId"],t}(),p=function(){function t(e,t,i,n,o,r,a,s,l){var c=this;this._scope=e,this._modalInstance=t,this._modal=i,this._q=n,this._dialogs=o,this._notificationService=r,this._leaveSettingsService=a,this.selectedPlanId=s,this.typeConfig=l,this.isCloneInProgress=!1,this.filteredLeaveTypes=[],this.leaveTypes=[],this._q.all([this._leaveSettingsService.getLeavePlans(),this._leaveSettingsService.getLeaveTypes()]).then(function(e){c.leavePlans=e[0],c.leaveTypes=e[1],c.currentLeavePlan=c.leavePlans.find(function(e){return e.id==c.currentPlanId}),c.leavePlans=c.leavePlans.filter(function(e){return e.id!=c.currentPlanId}),c.setLeaveTypeConfigs()}),this.isPaidConfigCloned=this.typeConfig.leaveType.isPaid,this.isStatutoryConfigCloned=this.typeConfig.leaveType.isStatutory,this.currentPlanId=this.selectedPlanId,this.cloneToAnotherPlan=!1,this.isCloneInProgress=!1}return t.prototype.resetConfig=function(){this.filteredLeaveTypes=[],this.selectedPlanId=null,this.selectedLeaveType=null,this.showLeaveQuotaMessage=!1,this.showYearEndProcessingMessage=!1,this.setLeaveTypeConfigs()},t.prototype.setLeaveTypeConfigs=function(){var t=this;!this.cloneToAnotherPlan||this.selectedPlanId?(this.cloneToAnotherPlan?this.selectedLeavePlan=this.leavePlans.find(function(e){return e.id==t.selectedPlanId}):(this.selectedPlanId=this.currentPlanId,this.selectedLeavePlan=this.currentLeavePlan),this.filteredLeaveTypes=[],this.filteredLeaveTypes=this.leaveTypes.filter(function(i){return i.systemLeaveType!=e.Model.SystemLeaveType.Floater&&i.systemLeaveType!=e.Model.SystemLeaveType.Special&&null==t.selectedLeavePlan.configuration.find(function(e){return e.leaveType.id==i.id&&e.isSetupComplete})})):this.filteredLeaveTypes=[]},t.prototype.cloneLeaveType=function(){var t=this;this.isPaidConfigCloned&&!this.selectedLeaveType.isPaid&&(this.typeConfig.yearEndProcessing.yearEndProcessingType=e.Model.YearEndProcessingType.AllLeavesExpire,this.typeConfig.leaveQuota.allowReportingManagerToGiveCredit=!1),this.typeConfig.leaveType=this.selectedLeaveType,this.isCloneInProgress||this._leaveSettingsService.updateLeaveTypeConfig(this.selectedPlanId,this.typeConfig,this.selectedLeavePlan.restrictedLeaveTypePairs).then(function(e){t.isCloneInProgress=!1,t._modalInstance.close("clone"),t._notificationService.error("Leave type cloned successfully")},function(e){t._notificationService.error("Error in cloning leave type")})},t.prototype.updateTypeCloningWarnings=function(){var e=this.selectedLeaveType.isPaid,t=this.selectedLeaveType.isStatutory;this.selectedLeaveType&&(this.isPaidConfigCloned!=e&&!this.isStatutoryConfigCloned&&!t||this.isStatutoryConfigCloned&&e||this.isPaidConfigCloned&&t?this.showLeaveQuotaMessage=!0:this.showLeaveQuotaMessage=!1,this.isPaidConfigCloned&&!e||this.isStatutoryConfigCloned&&!e?this.showYearEndProcessingMessage=!0:this.showYearEndProcessingMessage=!1)},t.$inject=["$scope","$uibModalInstance","$uibModal","$q","dialogs","NotificationService","LeaveSettingsService","selectedPlanId","typeConfig"],t}();angular.module("leaves").directive("leavePlans",function(){return{restrict:"E",templateUrl:"leavesettings/plans",controller:i,controllerAs:"vm"}}),angular.module("leaves").controller("LeavePlansController",i),angular.module("leaves").controller("LeaveTypesController",r),angular.module("leaves").controller("AddLeavePlanController",n),angular.module("leaves").controller("AssignLeaveTypesController",o),angular.module("leaves").controller("CloneLeaveTypesController",c),angular.module("leaves").controller("CloneLeaveTypeConfigController",p),angular.module("leaves").controller("AddLeaveTypeController",a),angular.module("leaves").controller("LeaveConfigurationController",s),angular.module("leaves").controller("LeaveAccrualCalculatorController",l)}(e.Controllers||(e.Controllers={}))}(Leaves||(Leaves={})),function(e){!function(t){var i=function(){function t(t,i,n,o,r,a){this._filter=t,this._modal=i,this._dialogs=n,this._notificationService=o,this._leaveYearEndProcessService=r,this._state=a,this.yearEndProcessStatus=e.Model.YearEndProcessStatus,this.getAll()}return t.prototype.getAll=function(){var t=this;this._leaveYearEndProcessService.getPendingYearEndProcesses().then(function(i){t.plans=i.map(function(t){return new e.Model.LeaveYearEndProcess(t)},[])})},t.prototype.openProcessWizard=function(e){var t=this;this._modal.open({templateUrl:"year-end-processing",windowClass:"full-screen-modal dark-modal employee-exit-modal wizard-head action-content year-end-process-modal",backdrop:!1,keyboard:!1,controller:"YearEndProcessController as processCtrl",resolve:{plan:function(){return e}}}).result.finally(function(){t.getAll()})},t.$inject=["$filter","$uibModal","dialogs","NotificationService","LeaveYearEndProcessService","$state"],t}(),n=function(){function e(e,t,i,n,o,r,a,s){this._filter=e,this._modalInstance=t,this._dialogs=i,this._notificationService=n,this._leaveYearEndProcessService=o,this.plan=r,this.appContext=a,this.appFeatures=s,this.steps=[],this.hasPayrollFeature=this.appContext.isFeaturePresent(this.appFeatures.Payroll.title),this.steps.push(new SharedModel.Step(1,"PENDING LEAVE REQUESTS","","year-end-pending-leaves",!1)),this.steps.push(new SharedModel.Step(2,"LEAVE BALANCE ACTIONS","","year-end-leave-balances",!1)),this.hasPayrollFeature?this.steps.push(new SharedModel.Step(3,"ENCASHMENT SETTINGS","","year-end-encashment-settings",!1)):this.steps.push(new SharedModel.Step(3,"ENCASHMENT","","year-end-encashment-WithoutPayroll",!1)),this.steps.push(new SharedModel.Step(4,"FINALIZE PROCESS","","year-end-finalize-process",!1)),this.currentIndex=this.steps[0].index,this.currentStep=this.steps[0]}return e.prototype.gotoStep=function(e){if(e<this.currentIndex){var t=this.steps.find(function(t){return t.index==e});t&&(this.currentStep=t,this.currentIndex=t.index)}},e.prototype.nextStep=function(){var e=this;if(4==this.currentIndex)this._modalInstance.close();else{var t=this.steps.find(function(t){return t.index==e.currentIndex+1});t&&(this.currentStep=t,this.currentIndex=t.index)}},e.$inject=["$filter","$uibModalInstance","dialogs","NotificationService","LeaveYearEndProcessService","plan","AppContext","AppFeatures"],e}();var o=function(){function t(e,t,i,n,o,r,a,s,l){var c=this;this.modal=e,this._filter=t,this.appSettings=i,this.notificationService=n,this._leaveYearEndProcessService=o,this.payrollLeaveActions=r,this.leaveRequestStatus=a,this.uiGridGroupingConstants=s,this.uiGridExtensions=l,this.selectedRequests=[],this.setGridApi=function(e){c.gridApi=e,c.gridApi.selection.on.rowSelectionChanged(null,function(e){c.selectedRequests=c.gridApi.selection.getSelectedRows()}),c.gridApi.selection.on.rowSelectionChangedBatch(null,function(e){c.selectedRequests=c.gridApi.selection.getSelectedRows()})}}return t.prototype.$onInit=function(){this.getPendingLeaveRequests(),this.payrollLeaveActionsList=this.payrollLeaveActions.getAll(),this.initializeGridSettings()},t.prototype.getPendingLeaveRequests=function(){var t=this;this._leaveYearEndProcessService.getPendingLeaveRequests(this.plan).then(function(i){t.pendingLeaveRequests=i.map(function(t){return new e.Model.LeaveRequestView(t)})})},t.prototype.initializeGridSettings=function(){var e=this;this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.showColumnFooter=!0,this.gridOptions.columnDefs=[{name:"fromDate",displayName:"Date",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{row.entity.fromDate | date: 'MMM dd' }}</span><span data-ng-if= \"row.entity.totalDays > 1\"> - {{row.entity.toDate | date: 'MMM dd' }} </span></div>",cellClass:"ui-grid-cell",enableCellEdit:!1,groupingShowAggregationMenu:!1},{field:"totalDays",displayName:"Total Days",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.totalDays}}</span></div>',cellClass:"ui-grid-cell",enableCellEdit:!1,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{name:"fullName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.displayName}}</span></div>',cellClass:"ui-grid-cell",enableCellEdit:!1,groupingShowAggregationMenu:!1},{name:"leaveTypes",field:"leaveTypes",displayName:"Leave Type",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.leaveTypes}}</span></div>',cellClass:"ui-grid-cell",enableCellEdit:!1,groupingShowAggregationMenu:!1},{name:"status",displayName:"Status",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.status == grid.appScope.leaveRequestStatus.Approved.id" class="text-success">Approved</span><span data-ng-if="row.entity.status == grid.appScope.leaveRequestStatus.Pending.id" class="text-danger">Waiting for approval</span><span data-ng-if="row.entity.status == grid.appScope.leaveRequestStatus.InApprovalProcess.id" class="text-danger">Partially Approved</span><span data-ng-if="row.entity.status == grid.appScope.leaveRequestStatus.Rejected.id" class="text-danger">Rejected</span></div>',cellClass:"ui-grid-cell",enableCellEdit:!1,groupingShowAggregationMenu:!1},{name:"approvers",displayName:"Approver",cellClass:"ui-grid-cell",enableCellEdit:!1,groupingShowAggregationMenu:!1},{name:"action",displayName:"Actions",cellTemplate:'<div data-ng-if="row.entity.status != grid.appScope.leaveRequestStatus.Approved.id && row.entity.status != grid.appScope.leaveRequestStatus.Rejected.id" class="ui-grid-cell-options cell-tooltip align-cell-text"><ui-select data-ng-model="row.entity.action" on-select="grid.appScope.performAction(row.entity)" theme="bootstrap" class="client-select on-modal-zindex" append-to-body="true"><ui-select-match placeholder="Actions">{{$select.selected.name}}</ui-select-match><ui-select-choices class="action-button" repeat="action in grid.appScope.payrollLeaveActionsList | filter: { name : $select.search }" data-ng-nicescroll="" data-nice-option="grid.appScope.niceScrollOptions"><span ng-bind-html="action.title | highlight: $select.search"></span></ui-select-choices></ui-select></div>',cellClass:"ui-grid-cell cell-tooltip align-cell-text ",allowCellFocus:!1,enableCellEdit:!1,enableGrouping:!1}],this.gridOptions.rowHeight=50,this.gridOptions.data="ctrl.pendingLeaveRequests",this.gridOptions.appScopeProvider=this,this.gridOptions.multiSelect=!0,this.gridOptions.onRegisterApi=this.setGridApi},t.prototype.next=function(){this.pendingLeaveRequests.length>0?this.notificationService.error("Take action on existing leave request"):this.nextStep()},t.prototype.openModal=function(){var e=this;this.leaveActionModal=this.modal.open({templateUrl:"payrollLeaveTemplate",controller:r,controllerAs:"ctrl",resolve:{parentCtrl:function(){return e}}})},t.prototype.updateLeaveRequests=function(e,t){var i=this;if(angular.isDefined(this.batchAction)){this.updatedLeaveRequests=[];var n=this.batchAction.id==this.payrollLeaveActions.Approve.id?this.leaveRequestStatus.Approved.id:this.leaveRequestStatus.Rejected.id;this.selectedRequests.forEach(function(e){e.status=n,e.note=e.note||"",i.updatedLeaveRequests.push(e)})}this.notificationService.information("updating leave requests");var o=this.updatedLeaveRequests.map(function(t){return t.note.concat("approver note: "+angular.copy(e)),angular.copy(t)});this._leaveYearEndProcessService.updateLeaveRequests(o,t||"").then(function(e){i.batchAction="",i.getPendingLeaveRequests(),i.notificationService.success("Leave requests updated successfully"),i.leaveActionModal.close()},function(e){i.notificationService.error("Error in updating leave request(s)")})},t.prototype.performAction=function(e){var t=angular.copy(e);this.updatedLeaveRequests=[],this.currentAction=t.action;var i=t.action.id==this.payrollLeaveActions.Approve.id?this.leaveRequestStatus.Approved.id:this.leaveRequestStatus.Rejected.id;t.status=i,this.updatedLeaveRequests.push(t),this.openModal()},t.prototype.performBulkAction=function(){this.selectedRequests.length>0?(this.currentAction=angular.copy(this.batchAction),this.openModal()):this.notificationService.error("Please select atleast one leave request")},t.$inject=["$uibModal","$filter","AppSettings","NotificationService","LeaveYearEndProcessService","PayrollLeaveActions","LeaveRequestStatus","uiGridGroupingConstants","UiGridExtensions"],t}(),r=function(){function e(e){this.vm=e}return e.prototype.updateLeaveRequests=function(){this.form.leaveRequestApprovalTemplate.$valid&&this.vm.updateLeaveRequests(this.vm.note,this.vm.rejectReason)},e.$inject=["parentCtrl"],e}();var a=function(){function t(t,i,n,o,r,a,s){this.modal=t,this._filter=i,this.appSettings=n,this.notificationService=o,this._leaveYearEndProcessService=r,this.payrollLeaveActions=a,this.leaveRequestStatus=s,this.typeYearEndTransactions=[],this.yearEndProcessStatus=e.Model.YearEndProcessStatus}return t.prototype.$onInit=function(){var t=this;this.initGridSettings(),this._leaveYearEndProcessService.getLeaveYearEndBlances(this.plan).then(function(i){t.yearEndTrasactions=i.map(function(t){return new e.Model.YearEndTransaction(t)}),t.buildGridData(t.yearEndTrasactions)})},t.prototype.initGridSettings=function(){this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.columnDefs=[{name:"employeeNumber",displayName:"Employee Number",groupingShowAggregationMenu:!1},{name:"displayName",displayName:"Employee",groupingShowAggregationMenu:!1},{name:"leaveTypeName",displayName:"Leave Type",groupingShowAggregationMenu:!1},{name:"totalBalance",displayName:"Balance(X)",enableGrouping:!1},{name:"actualEncashedDays",displayName:"Days Encashed(Y)",cellClass:"days-ctrl",width:300,cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.groupHeader"><label>                         <input type="checkbox" data-ng-model="row.entity.overrideEncashableDays" data-ng-change="row.entity.overriddenEncashedDays = 0" />                         <span class="check-overlay large node"></span>                         <span> Other </span>                         </label>                         <label class="horizontal-margin-sm">                         <input class="form-control number-text-box"                             name= "encashDaysOverride{{rowRenderIndex}}{{$index}}"                             placeholder="Amount" min="0" type="number"                             data-ng-class="{\'invalid-input-field\': !row.entity.isValidTransaction}"                             data-ng-model="row.entity.overriddenEncashedDays"                             data-ng-disabled="!row.entity.overrideEncashableDays" />                     </label> </div> <div class="ui-grid-cell-contents" data-ng-if="row.groupHeader"></div>',enableGrouping:!1},{name:"daysCarryForward",displayName:"Days Carried Forward(Z)",cellClass:"days-ctrl",width:300,cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.groupHeader"><label>                    <input type="checkbox" data-ng-model="row.entity.overrideCarryForwardDays" data-ng-change="row.entity.overriddenCarryForwardDays = 0" />                     <span class="check-overlay large node"></span>                     <span> Other </span>                     </label>                     <label class="horizontal-margin-sm" >                     <input type="number" name= "actualEncashedDays{{rowRenderIndex}}{{$index}}"                           placeholder="Amount"                           data-ng-model="row.entity.overriddenCarryForwardDays"                           data-ng-class="{\'invalid-input-field\': !row.entity.isValidTransaction}"                           class="number-text-box form-control"                           data-ng-disabled="!row.entity.overrideCarryForwardDays" />                     </label></div> <div class="ui-grid-cell-contents" data-ng-if="row.groupHeader"></div>',enableGrouping:!1},{name:"totalExpired",displayName:"Days To Expire(X-Y-Z)",cellTemplate:"",enableGrouping:!1}],this.gridSettings.data="ctrl.typeYearEndTransactions | filter: ctrl.searchText",this.gridSettings.enableFiltering=!1},t.prototype.buildGridData=function(e){var t=this;this.typeYearEndTransactions=[],e.forEach(function(e){e.leaveTypeYearEndTransactions.forEach(function(i){i.employeeId=e.employeeId,t.typeYearEndTransactions.push(i)})})},t.prototype.saveYearEndTransactions=function(e){var t=this;0==e?(this.submitted=!0,this.form.yearEndBalances.$valid&&this.isTransactionsValid()?(this.yearEndTrasactions.forEach(function(e){e.leaveTypeYearEndTransactions=t.typeYearEndTransactions.filter(function(t){return t.employeeId==e.employeeId})}),this._leaveYearEndProcessService.saveLeaveYearEndBalances(this.plan,this.yearEndTrasactions).then(function(e){t.notificationService.success("Leave balances saved successfully."),t.nextStep()},function(e){t.notificationService.error("Error while saving leave balances.")})):this.form.yearEndBalances.$valid?this.notificationService.error("Override values should not be greater than the actual balance."):this.notificationService.error("Please enter valid numbers.")):this.nextStep()},t.prototype.isTransactionsValid=function(){return null==this.yearEndTrasactions.find(function(e){return e.leaveTypeYearEndTransactions.some(function(e){return!e.isValidTransaction})})},t.$inject=["$uibModal","$filter","AppSettings","NotificationService","LeaveYearEndProcessService","PayrollLeaveActions","LeaveRequestStatus"],t}();var s=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m){var y=this;this.qService=t,this.modal=i,this._filter=n,this.appSettings=o,this.notificationService=r,this._leaveYearEndProcessService=a,this._employeesFinanceServices=s,this.payrollLeaveActions=l,this.leaveRequestStatus=c,this.AppContext=p,this.state=u,this.PayrollModel=d,this.appFeatures=m,this.form=[],this.payableToDates=[],this.bulkProcessedCycle=[],this.bulkEncashmentPolicyId=[],this.typeYearEndTransactions=[],this.yearEndProcessStatus=e.Model.YearEndProcessStatus,this.PayGroups=[],this.yearEndEncashmentsGroupWise=[],this.enableNext=!1,this.goToLeaveEncashmentSettings=function(){y.AppContext.isFeaturePresent("PAYGROUPS")?y.state.go("settings.payroll.leaveEncashment"):y.state.go("settings.payroll.misc.leaveencashmentpolicies")},this.hasPayGroupsFeature=this.AppContext.isFeaturePresent(this.appFeatures.Paygroups.title)}return t.prototype.$onInit=function(){var t=this;this.qService.all([this._leaveYearEndProcessService.getLeaveYearEndEncashments(this.plan),this._employeesFinanceServices.getLeaveEncashmentSettings(null),this._employeesFinanceServices.getPendingCyclesGroupWise(4)]).then(function(i){t.yearEndEncashments=i[0],t.yearEndEncashments.leaveYearEndTransactions=i[0].leaveYearEndTransactions.map(function(t){return new e.Model.YearEndTransaction(t)}),t.encashmentPolicies=i[1],t.pendingCycles=i[2],t.defaultEncashmentPolicy=t.encashmentPolicies.length?t.encashmentPolicies.find(function(e){return e.isDefault})||t.encashmentPolicies[0]:null,t.leaveYearEndTransactionsGroupby=t._filter("groupBy")(t.yearEndEncashments.leaveYearEndTransactions,"payGroupId"),Object.keys(t.leaveYearEndTransactionsGroupby).forEach(function(i){return t.PayGroups.push(new e.Model.payGroup({groupId:parseInt(i),groupName:t.leaveYearEndTransactionsGroupby[parseInt(i)][0].payGroupName}))}),t.PayGroups.forEach(function(i,n){t.pendingCycles[i.groupId]=t.pendingCycles[i.groupId].map(function(e){return new t.PayrollModel.PayrollCycle(e)}),t.yearEndEncashmentsGroupWise.push(new e.Model.GroupyearEndEncashments({groupId:i.groupId,pendingCycles:t.pendingCycles[i.groupId],leaveYearEndTransactions:t.leaveYearEndTransactionsGroupby[i.groupId]})),t.buildGridData(t.yearEndEncashmentsGroupWise[n].leaveYearEndTransactions,n),t.buildGroupData(n),t.buildGridSettings(n)}),t.enableNext=!0})},t.prototype.buildGroupData=function(e){var t=this;this.defaultEncashmentPolicy&&!this.bulkEncashmentPolicyId[e]&&(this.bulkEncashmentPolicyId[e]=this.defaultEncashmentPolicy.identifier),this.yearEndEncashmentsGroupWise[e].leaveYearEndTransactions.forEach(function(i){i.leaveTypeYearEndTransactions.forEach(function(n){var o=t.yearEndEncashmentsGroupWise[e].pendingCycles.find(function(e){return n.payableOn&&e.to.getMonth()==n.payableOn.getMonth()&&e.to.getFullYear()==n.payableOn.getFullYear()});o&&(n.payableOn=o.to),t.defaultEncashmentPolicy&&!n.leaveEncashmentPolicyId&&(n.leaveEncashmentPolicyId=t.defaultEncashmentPolicy.identifier),t.plan.status==t.yearEndProcessStatus.NotProcessed&&t.updateEncashmentAmount(n,i.employeeId)})})},t.prototype.buildGridSettings=function(e){var t=this;this.yearEndEncashmentsGroupWise[e].gridSettings=angular.copy(this.appSettings.gridSettings),this.yearEndEncashmentsGroupWise[e].gridSettings.columnDefs=[{name:"employeeNumber",displayName:"Employee Number",groupingShowAggregationMenu:!1},{name:"displayName",displayName:"Employee",groupingShowAggregationMenu:!1},{name:"leaveTypeName",displayName:"Leave Type",groupingShowAggregationMenu:!1},{name:"encashableDays",displayName:"Encashment Days",minWidth:150,enableGrouping:!1},{name:"leaveEncashmentPolicy",displayName:"Leave Encashment Policy",cellClass:"days-ctrl",minWidth:200,cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.groupHeader"><select class="form-control" data-ng-options="policy.identifier as policy.name for policy in grid.appScope.ctrl.encashmentPolicies"                                     data-ng-change="grid.appScope.ctrl.updateEncashmentAmount(row.entity, row.entity.employeeId);" data-ng-model="row.entity.leaveEncashmentPolicyId"                                     name="policy{{rowRenderIndex}}{{$index}}" data-ng-class="{\'invalid-input-field\' : !grid.appScope.leaveEncashementForm'+e+"['policy'+ rowRenderIndex + $index].$valid && (grid.appScope.leaveEncashementForm"+e+'[\'policy\'+ rowRenderIndex + $index].$dirty || grid.appScope.ctrl.submitted) }" required>                         <option value="">Select Encashment</option>                     </select></div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader"></div>',enableGrouping:!1},{name:"payAmount",displayName:"Total Amount To Be Paid",cellClass:"days-ctrl",minWidth:350,cellTemplate:'<div class="ui-grid-cell-contents col-sm-12" data-ng-if="!row.groupHeader">                                        <label class="horizontal-margin-sm col-sm-2 clear-side-padding">                                         {{row.entity.payableAmount}}                                     </label>                                 <label class="horizontal-margin-sm col-sm-3 clear-side-padding">                                 <input type="checkbox" data-ng-model="row.entity.overridePayableAmount" data-ng-value="true" />                                     <span class="check-overlay large node"></span>                                     <span class="horizontal-margin-sm">Other</span>                                     </label>                                     <label class="col-sm-6 clear-side-padding">                                     <input class="form-control" placeholder="Amount" data-ng-required="row.entity.overridePayableAmount" name="overrideAmount{{rowRenderIndex}}{{$index}}"                                     data-ng-model="row.entity.overriddenPayableAmount" data-ng-disabled="!row.entity.overridePayableAmount" type="number" min="0"                                     data-ng-class="{\'invalid-input-field\' : !grid.appScope.leaveEncashementForm'+e+"['overrideAmount'+ rowRenderIndex + $index].$valid && (grid.appScope.leaveEncashementForm"+e+'[\'overrideAmount\'+ rowRenderIndex + $index].$dirty || grid.appScope.ctrl.submitted) }" />                                 </label></div> <div class="ui-grid-cell-contents" data-ng-if="row.groupHeader"></div>',enableGrouping:!1},{name:"payCycle",displayName:"Month To Encash",cellClass:"days-ctrl",minWidth:150,cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.groupHeader"> <select class="form-control" data-ng-model="row.entity.payableOn" name="payableCycleOn{{rowRenderIndex}}{{ $index }}"                                     data-ng-options="cycle.to as cycle.monthNameYear() for cycle in grid.appScope.ctrl.yearEndEncashmentsGroupWise['+e+"].pendingCycles\"                                     data-ng-class=\"{'invalid-input-field' : !grid.appScope.leaveEncashementForm"+e+"['payableCycleOn'+ rowRenderIndex + $index].$valid && (grid.appScope.leaveEncashementForm"+e+'[\'payableCycleOn\'+ rowRenderIndex + $index].$dirty || grid.appScope.ctrl.submitted) }" required>                                     <option value="">Select Cycle</option>                                     </select></div> <div class="ui-grid-cell-contents" data-ng-if="row.groupHeader"></div>',enableGrouping:!1}],this.yearEndEncashmentsGroupWise[e].gridSettings.data="ctrl.yearEndEncashmentsGroupWise["+e+"].typeYearEndTransactions | filter: ctrl.searchText",this.yearEndEncashmentsGroupWise[e].gridSettings.enableFiltering=!1,this.yearEndEncashmentsGroupWise[e].gridSettings.enableRowSelection=!0,this.yearEndEncashmentsGroupWise[e].gridSettings.multiSelect=!0,this.yearEndEncashmentsGroupWise[e].gridSettings.enableSelectAll=!0,this.yearEndEncashmentsGroupWise[e].gridSettings.onRegisterApi=function(i){t.yearEndEncashmentsGroupWise[e].gridApi=i}},t.prototype.buildGridData=function(e,t){var i=this;this.typeYearEndTransactions=[],e.forEach(function(e){e.leaveTypeYearEndTransactions.forEach(function(t){t.employeeId=e.employeeId,i.typeYearEndTransactions.push(t)})}),this.yearEndEncashmentsGroupWise[t].typeYearEndTransactions=this.typeYearEndTransactions},t.prototype.updateEncashmentAmount=function(e,t){if(e.encashableDays>0){var i=this.yearEndEncashments.salaries[t],n=this.encashmentPolicies.find(function(t){return t.identifier==e.leaveEncashmentPolicyId});if(i&&n){var o=i.breakup.items.filter(function(e){return!e.outsideCTC&&!e.isBenefit&&2!==e.componentType&&8!=e.componentType}).reduce(function(e,t){return e+t.amount},0)||i.ctc,r={ctc:i.ctc,gross:o};i.breakup.items.forEach(function(e){return r[e.componentName]=e.amount}),this.expressionParsesr=new SharedServices.ExpressionParser(r),this.expressionParsesr.evalMathExpression(n.expression),this.expressionParsesr.isEvaluated?e.payableAmount=Math.round(this.expressionParsesr.result*e.encashableDays):e.payableAmount=0}}else e.payableAmount=0},t.prototype.isAllFormsValid=function(){var e=this,t=!0;return this.yearEndEncashmentsGroupWise.forEach(function(i,n){e.form[n]&&!e.form[n]["leaveEncashementForm"+n].$valid&&(t=!1)}),t},t.prototype.saveEncashed=function(e){var t=this;if(0==e)if(this.submitted=!0,this.isAllFormsValid()&&this.enableNext){this.typeYearEndTransactions=[];var i=[];this.yearEndEncashmentsGroupWise.forEach(function(e,n){e.leaveYearEndTransactions.forEach(function(e){i.push(e)}),e.typeYearEndTransactions.forEach(function(e){t.typeYearEndTransactions.push(e)})}),i.forEach(function(e){e.leaveTypeYearEndTransactions=angular.copy(t.typeYearEndTransactions.filter(function(t){return t.employeeId==e.employeeId})),e.leaveTypeYearEndTransactions.forEach(function(e){e.payableOn=e.payableOn.dateOnlyString()})}),this._leaveYearEndProcessService.saveLeaveYearEndEncashments(this.plan,i).then(function(e){t.notificationService.success("Encashment changes saved successfully"),t.nextStep()})}else this.notificationService.error("Please fill required fields to proceed");else this.nextStep()},t.prototype.updateBulkDayAmount=function(e){var t=this;this.bulkEncashmentPolicyId[e]&&(this.yearEndEncashmentsGroupWise[e].gridApi.selection.getSelectedRows().forEach(function(i){i.leaveEncashmentPolicyId=t.bulkEncashmentPolicyId[e]}),this.yearEndEncashmentsGroupWise[e].gridApi.selection.getSelectedRows().forEach(function(e){return t.updateEncashmentAmount(e,e.employeeId)}))},t.prototype.updateBulkProcessedCycle=function(e){var t=this;this.bulkProcessedCycle[e]&&this.yearEndEncashmentsGroupWise[e].gridApi.selection.getSelectedRows().forEach(function(i){i.payableOn=t.bulkProcessedCycle[e]})},t.$inject=["$q","$uibModal","$filter","AppSettings","NotificationService","LeaveYearEndProcessService","EmployeesFinanceServices","PayrollLeaveActions","LeaveRequestStatus","AppContext","$state","PayrollModel","AppFeatures"],t}(),l=function(){function t(t,i,n,o,r,a,s,l,c,p,u){this.qService=t,this.modal=i,this._filter=n,this.appSettings=o,this.notificationService=r,this._leaveYearEndProcessService=a,this._employeesFinanceServices=s,this.payrollLeaveActions=l,this.leaveRequestStatus=c,this.AppContext=p,this.state=u,this.payableToDates=[],this.typeYearEndTransactions=[],this.yearEndProcessStatus=e.Model.YearEndProcessStatus}return t.prototype.$onInit=function(){var t=this;this.buildGridSettings(),this._leaveYearEndProcessService.getLeaveYearEndEncashments(this.plan).then(function(i){t.yearEndEncashments=i,t.yearEndEncashments.leaveYearEndTransactions=i.leaveYearEndTransactions.map(function(t){return new e.Model.YearEndTransaction(t)}),t.buildGridData(t.yearEndEncashments.leaveYearEndTransactions)})},t.prototype.buildGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.columnDefs=[{name:"employeeNumber",displayName:"Employee Number",groupingShowAggregationMenu:!1},{name:"displayName",displayName:"Employee",groupingShowAggregationMenu:!1},{name:"leaveTypeName",displayName:"Leave Type",groupingShowAggregationMenu:!1},{name:"encashableDays",displayName:"Encashment Days",width:150,enableGrouping:!1},{name:"payAmount",displayName:"Total Amount To Be Paid",cellClass:"days-ctrl",width:350,cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.groupHeader">                                        <label class="horizontal-margin-sm">                                         {{row.entity.payableAmount}}                                     </label>                                 <label class="horizontal-margin-sm">                                 <input type="checkbox" data-ng-model="row.entity.overridePayableAmount" data-ng-value="true" />                                     <span class="check-overlay large node"></span>                                     <span class="horizontal-margin-sm">Other</span>                                     </label>                                     <label>                                     <input class="form-control" placeholder="Amount" data-ng-required="row.entity.overridePayableAmount" name="overrideAmount{{rowRenderIndex}}{{$index}}"                                     data-ng-model="row.entity.overriddenPayableAmount" data-ng-disabled="!row.entity.overridePayableAmount" type="number" min="0"                                     data-ng-class="{\'invalid-input-field\' : !grid.appScope.leaveEncashementForm[\'overrideAmount\'+ rowRenderIndex + $index].$valid && (grid.appScope.leaveEncashementForm[\'overrideAmount\'+ rowRenderIndex + $index].$dirty || grid.appScope.ctrl.submitted) }" />                                 </label></div> <div class="ui-grid-cell-contents" data-ng-if="row.groupHeader"></div>',enableGrouping:!1}],this.gridSettings.data="ctrl.typeYearEndTransactions | filter: ctrl.searchText",this.gridSettings.enableFiltering=!1,this.gridSettings.enableRowSelection=!0,this.gridSettings.multiSelect=!0,this.gridSettings.enableSelectAll=!0,this.gridSettings.onRegisterApi=function(t){e.gridApi=t}},t.prototype.buildGridData=function(e){var t=this;e.forEach(function(e){e.leaveTypeYearEndTransactions.forEach(function(i){i.employeeId=e.employeeId,t.typeYearEndTransactions.push(i)})})},t.prototype.saveEncashed=function(e){var t=this;if(0==e)if(this.submitted=!0,this.form.leaveEncashementForm.$valid){var i=angular.copy(this.yearEndEncashments.leaveYearEndTransactions);i.forEach(function(e){e.leaveTypeYearEndTransactions=angular.copy(t.typeYearEndTransactions.filter(function(t){return t.employeeId==e.employeeId}))}),this._leaveYearEndProcessService.saveLeaveYearEndEncashments(this.plan,i).then(function(e){t.notificationService.success("Encashment changes saved successfully"),t.nextStep()})}else this.notificationService.error("Please fill required fields to proceed");else this.nextStep()},t.$inject=["$q","$uibModal","$filter","AppSettings","NotificationService","LeaveYearEndProcessService","EmployeesFinanceServices","PayrollLeaveActions","LeaveRequestStatus","AppContext","$state"],t}();var c=function(){function t(t,i,n,o,r,a,s,l){this.modal=t,this._filter=i,this.appSettings=n,this.notificationService=o,this.dialogService=r,this._leaveYearEndProcessService=a,this.payrollLeaveActions=s,this.leaveRequestStatus=l,this.yearEndProcessStatus=e.Model.YearEndProcessStatus}return t.prototype.finalize=function(){var e=this;this.dialogService.confirm("Please Confirm",'Once the year end process is finalized, <span class="error">it cannot be reverted back</span> and the data cannot be edited. Are you sure, you want to continue ?').result.then(function(){e._leaveYearEndProcessService.finalizeYearEndProcess(e.plan).then(function(t){e.notificationService.success("This leave plan year end process is completed."),e.nextStep()},function(t){e.notificationService.error("Error while finalizing year end process.")})})},t.prototype.rollBackYearEndProcess=function(){var e=this;this.dialogService.confirm("Please Confirm","The year-end process will be rolled back!").result.then(function(){e._leaveYearEndProcessService.rollBackYearEndProcess(e.plan).then(function(t){e.notificationService.success("This leave plan year end process has been rollback."),e.nextStep()},function(t){e.notificationService.error("Error while rollback year end process.")})})},t.prototype.canRollBackYearEndProcess=function(){return(new Date).getFullYear()-1<=this.plan.year&&this.plan.status==this.yearEndProcessStatus.Processed},t.$inject=["$uibModal","$filter","AppSettings","NotificationService","dialogs","LeaveYearEndProcessService","PayrollLeaveActions","LeaveRequestStatus"],t}();angular.module("leaves").controller("YearEndProcessController",n).controller("YearEndProcessDetailsController",i),angular.module("leaves").component("yearEndPendingLeave",{controller:o,controllerAs:"ctrl",bindings:{plan:"=",nextStep:"&"},templateUrl:"year-end-pending-leaves"}).component("yearEndLeaveBalance",{controller:a,controllerAs:"ctrl",bindings:{plan:"=",nextStep:"&"},templateUrl:"year-end-leave-balances"}).component("yearEndEncashment",{controller:s,controllerAs:"ctrl",bindings:{plan:"=",nextStep:"&"},templateUrl:"year-end-encashment-settings"}).component("yearEndEncashmentWithoutPayroll",{controller:l,controllerAs:"ctrl",bindings:{plan:"=",nextStep:"&"},templateUrl:"year-end-encashment-WithoutPayroll"}).component("yearEndFinalize",{controller:c,controllerAs:"ctrl",bindings:{plan:"=",nextStep:"&"},templateUrl:"year-end-finalize-process"})}(e.components||(e.components={}))}(Leaves||(Leaves={})),function(e){!function(e){var t=function(){function e(e){this.id=e.id,this.orgId=e.orgId,this.name=e.name,this.description=e.description,this.prefix=e.prefix||"",this.suffix=e.suffix||"",this.noOfDigits=null==e.noOfDigits?1:e.noOfDigits,this.nextNumber=e.nextNumber,this.isEnabled=null==e.isEnabled||e.isEnabled,this.isDefault=e.isDefault}return e.prototype.getPreviewNumber=function(){if(this.nextNumber){var e=angular.copy(this.nextNumber.toString());return this.noOfDigits>1&&String(this.nextNumber).length<this.noOfDigits&&(e=Array(this.noOfDigits-String(this.nextNumber).length+1).join("0")+this.nextNumber.toString()),this.prefix+e+this.suffix}return""},e}();e.NumberSeries=t}(e.Model||(e.Model={}))}(NumberSeries||(NumberSeries={})),function(e){!function(e){var t=function(){function e(e,t){this.resource=e,this.q=t,this.numberSeries=this.resource("/api/organization/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getAllNumberSeries=function(){return this.numberSeries.query({action:"employeenumberseries"}).$promise},e.prototype.getNumberSeries=function(e){return this.numberSeries.get({action:"employeenumberseries",id:e}).$promise},e.prototype.addNumberSeries=function(e){return this.numberSeries.save({action:"employeenumberseries"},e).$promise},e.prototype.updateNumberSeries=function(e,t){return this.numberSeries.update({action:"employeenumberseries",id:e},t).$promise},e.prototype.setDefultNumberSeries=function(e){return this.numberSeries.update({action:"changedefaultnumberseries",id:e}).$promise},e.$inject=["$resource","$q"],e}();e.NumberSeriesService=t}(e.Services||(e.Services={}))}(NumberSeries||(NumberSeries={})),function(e){!function(e){var t=function(){function e(e,t,i,n,o){this._modal=e,this.appSettings=t,this.notificationService=i,this._dialogs=n,this.numberSeriesService=o,this.loadNumberSeries()}return e.prototype.addNewSeries=function(e){var t=this;this._modal.open({templateUrl:"employee-number-series",controller:"ManageEmployeeSeriesController",controllerAs:"ctrl",resolve:{numberSeries:function(){return new NumberSeries.Model.NumberSeries(e||{})},numberSeriesList:function(){return t.numberSeriesList}}}).result.then(function(e){t.loadNumberSeries()})},e.prototype.loadNumberSeries=function(){var e=this;this.numberSeriesService.getAllNumberSeries().then(function(t){e.numberSeriesList=t})},e.prototype.setDefaultNumberSeries=function(e){var t=this;this.numberSeriesService.setDefultNumberSeries(e.id).then(function(i){t.notificationService.success(e.name+" is set as default Employee Number Series."),t.loadNumberSeries()},function(e){t.notificationService.error("An error occurred while setting default employee number series.")})},e.$inject=["$uibModal","AppSettings","NotificationService","dialogs","NumberSeriesService"],e}();e.EmployeeNumberSeriesController=t;var i=function(){function e(e,t,i,n,o,r){this._modalInstance=e,this.model=t,this.numberSeriesList=i,this.appSettings=n,this.notificationService=o,this.numberSeriesService=r,this.numberDigits=[],this.generateNumberDigits(),this.setPreviewNumber()}return e.prototype.saveNumberSeries=function(){var e=this;this.form.employeeNumberSettings.$valid&&this.numberSeriesService.addNumberSeries(this.model).then(function(t){t.id?(e.notificationService.success("Employee Number Series Saved Successfully."),e._modalInstance.close()):e.notificationService.success("Unable to save Employee Number Series")},function(t){e.errorMessage=t.data.message,e.notificationService.error("An error occurred while updating employee number series.")})},e.prototype.updateNumberSeries=function(){var e=this;this.form.employeeNumberSettings.$valid&&this.numberSeriesService.updateNumberSeries(this.model.id,this.model).then(function(t){e.notificationService.success("Employee number series updated successfully."),e._modalInstance.close()},function(t){e.errorMessage=t.data.message,e.notificationService.error("An error occurred while updating employee number series.")})},e.prototype.setPreviewNumber=function(){this.previewNumber=this.model.getPreviewNumber()},e.prototype.doesNumberSeriesExists=function(e){var t=this;return!this.numberSeriesList.find(function(i){return t.model.id!=i.id&&i.name.toUpperCase()==e.toUpperCase()})},e.prototype.generateNumberDigits=function(){for(var e=1;e<=10;e++)this.numberDigits.push({id:e,title:1==e?e+" digit":e+" digits"})},e.$inject=["$uibModalInstance","numberSeries","numberSeriesList","AppSettings","NotificationService","NumberSeriesService"],e}();e.ManageEmployeeSeriesController=i}(e.Controllers||(e.Controllers={}))}(NumbserSeries||(NumbserSeries={})),angular.module("employees").service("NumberSeriesService",NumberSeries.Services.NumberSeriesService),angular.module("employees").controller("EmployeeNumberSeriesController",NumbserSeries.Controllers.EmployeeNumberSeriesController),angular.module("employees").controller("ManageEmployeeSeriesController",NumbserSeries.Controllers.ManageEmployeeSeriesController),function(e){!function(e){var t=function(){function e(e,t){this.resource=e,this.q=t,this.leaves=this.resource("/api/leaves/settings/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"},delete:{method:"DELETE"}}),this.leaveImport=this.resource("/api/leaves/import/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getLeaveTypes=function(){return this.leaves.query({action:"leavetype"}).$promise},e.prototype.getPaidLeaveTypes=function(){return this.leaves.query({action:"paidleavetype"}).$promise},e.prototype.getLeaveType=function(e){return this.leaves.get({action:"leavetype",id:e}).$promise},e.prototype.saveLeaveType=function(e){return this.leaves.save({action:"leavetype"},e).$promise},e.prototype.updateLeaveType=function(e,t){return this.leaves.update({action:"leavetype",id:e},t).$promise},e.prototype.deleteLeaveType=function(e){return this.leaves.delete({action:"leavetype",id:e}).$promise},e.prototype.getLeavePlans=function(){return this.leaves.query({action:"leaveplan"}).$promise},e.prototype.getLeavePlan=function(e){return this.leaves.get({action:"leaveplan",id:e}).$promise},e.prototype.saveLeavePlan=function(e){return this.leaves.save({action:"leaveplan"},e).$promise},e.prototype.updateLeavePlan=function(e){return this.leaves.update({action:"leaveplan",id:e.id},e).$promise},e.prototype.deleteLeavePlan=function(e){return this.leaves.delete({action:"leaveplan",id:e}).$promise},e.prototype.setDefaultLeavePlan=function(e){return this.leaves.update({action:"leaveplan/"+e+"/default"}).$promise},e.prototype.assignLeaveTypes=function(e,t){return this.leaves.update({action:"leaveplan/"+e+"/assign"},t).$promise},e.prototype.updateLeaveTypeConfig=function(e,t,i){return this.leaves.update({action:"leaveplan/"+e+"/config"},{typeConfig:t,restrictedLeaveTypePairs:i}).$promise},e.prototype.deleteLeaveTypeConfig=function(e,t){return this.leaves.delete({action:"leaveplan/"+e+"/config/"+t}).$promise},e.prototype.getLeaveSettings=function(){return this.leaves.get({action:"leavesettings"}).$promise},e.prototype.getLeaveSummaryInvalidTypes=function(){return this.leaveImport.query({action:"leavesummary/invalidtypes"}).$promise},e.prototype.getCarryoverInvalidTypes=function(){return this.leaveImport.query({action:"carryover/invalidtypes"}).$promise},e.prototype.getLeaveRequestImportErrors=function(){return this.leaveImport.query({action:"leaverequest/invalidtypes"}).$promise},e.prototype.importLeaveBalances=function(){return this.leaveImport.save({action:"leavesummary"}).$promise},e.prototype.importCarryoverLeaveBalances=function(){return this.leaveImport.save({action:"carryoverbalances"}).$promise},e.prototype.importLeaveRequests=function(){return this.leaveImport.save({action:"leaverequests"}).$promise},e.prototype.getImportedleaveBalances=function(){return this.leaveImport.query({action:"previewleavesummary"}).$promise},e.prototype.calculateAccrual=function(e){return this.leaves.save({action:"calculate/accrual",startDate:e},{}).$promise},e.$inject=["$resource","$q"],e}();e.LeaveSettingsService=t;var i=function(){function e(e,t){this.resource=e,this.q=t,this.leaveYearEndProcess=this.resource("/api/leaves/yearendprocess/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getPendingYearEndProcesses=function(){return this.leaveYearEndProcess.query({action:"pending"}).$promise},e.prototype.getPendingLeaveRequests=function(e){return this.leaveYearEndProcess.query({action:"pending/leaverequests",planId:e.leavePlanId,year:e.year}).$promise},e.prototype.updateLeaveRequests=function(e,t){return this.leaveYearEndProcess.update({action:"pending/leaverequests",rejectReason:t},e).$promise},e.prototype.getLeaveYearEndBlances=function(e){return this.leaveYearEndProcess.query({action:"yearendbalances",planId:e.leavePlanId,year:e.year}).$promise},e.prototype.saveLeaveYearEndBalances=function(e,t){return this.leaveYearEndProcess.save({action:"yearendbalances",planId:e.leavePlanId,year:e.year},t).$promise},e.prototype.getLeaveYearEndEncashments=function(e){return this.leaveYearEndProcess.get({action:"yearendencashments",planId:e.leavePlanId,year:e.year}).$promise},e.prototype.saveLeaveYearEndEncashments=function(e,t){return this.leaveYearEndProcess.save({action:"yearendencashments",planId:e.leavePlanId,year:e.year},t).$promise},e.prototype.finalizeYearEndProcess=function(e){return this.leaveYearEndProcess.save({action:"finalize",planId:e.leavePlanId,year:e.year},{}).$promise},e.prototype.rollBackYearEndProcess=function(e){return this.leaveYearEndProcess.update({action:"rollback"},{id:e.id,leavePlanId:e.leavePlanId,year:e.year}).$promise},e.prototype.getLeaveYearEndProcessReport=function(e,t){return this.leaveYearEndProcess.query({action:"report",id:e,year:t}).$promise},e.$inject=["$resource","$q"],e}();e.LeaveYearEndProcessService=i,angular.module("leaves").service("LeaveSettingsService",t).service("LeaveYearEndProcessService",i)}(e.Services||(e.Services={}))}(Leaves||(Leaves={})),appRoot.controller("CommentController",["$scope","$route","$state","$stateParams","$rootScope","$location","AppSettings","CommentService","NotificationService","CommentItemType","AppContext",function(e,t,i,n,o,r,a,s,l,c,p){e.vm={},e.vm.niceScrollOptions=angular.copy(a.scrollSettings),e.vm.disableScroll=!!e.xhrDisableScroll,e.vm.commentItemType=c,e.vm.myPublicProfile=p.myPublicProfile,e.vm.reloadComments=!1;var u=!1;function d(){this.id=null,this.linkedItemId=null,this.content=null,this.parentCommentId=null}e.loadComments=function(){s.loadComments(e.xhrCommentTypeId).then(function(t){var i,n,o;e.vm.comments&&e.vm.reloadComments&&(i=t.length,n=e.vm.comments.length,0==(o=i-n)?l.success("No new comments"):1==o?l.success(o+" new comment added"):o>1&&l.success(o+" new comments added"),e.vm.reloadComments=!1),e.vm.comments=t},function(e){})},e.reloadComments=function(){e.vm.reloadComments=!0,e.loadComments()},e.vm.newComment=new d,e.vm.newCommentReply=new d,e.$watch("xhrCommentTypeId",function(t,i){null!=t&&e.loadComments()}),e.saveComment=function(t,i){u||null==t.content||""==t.content||(u=!0,t.parentCommentId=void 0==i?null:i,t.linkedItemType=e.xhrCommentType,s.comment.save({action:"comments",commentIdentifier:e.xhrCommentTypeId},t,function(t){l.success("Comment posted successfully"),e.vm.comments.push(t),e.vm.newComment=new d,e.vm.newCommentReply=new d,u=!1},function(e){l.error("An error occurred while posting a comment."),u=!1}))},e.$on("publishComment",function(t,i){e.saveComment(e.vm.newComment)})}]),appRoot.factory("LeaveAttendanceService",["$resource","$q",function(e,t){return{leaveAttendance:e("/api/leaveattendance/:action/:id",{action:"@action",id:"@id"},{update:{method:"PUT"}}),getLeaveSummarry:function(){return this.leaveAttendance.get({action:"leavesummary"}).$promise},getBarData:function(e,t){var i=e.split(",");items=[0,0,0,0,0,0,0],angular.forEach(i,function(e,t){var i=e.split("-");items[i[1]-1]=i[0]});var n=[];return angular.forEach(items,function(e,i){var o={label:i,value:Math.abs(parseFloat(e)),color:t};n.push(o)}),[{key:" hrs",values:n}]},getAttendanceStats:function(){return this.leaveAttendance.get({action:"attendancestats"}).$promise},getAttendanceSummaryStats:function(e){return this.leaveAttendance.get({action:"attendancesummarystats",period:e}).$promise},getTopSlackers:function(e,t){return this.leaveAttendance.query({action:"topslackers",fromDate:e,toDate:t}).$promise},getAverageHours:function(e,t){return this.leaveAttendance.query({action:"averagehours",fromDate:e,toDate:t}).$promise},getLateComers:function(e,t){return this.leaveAttendance.query({action:"latecomers",fromDate:e,toDate:t}).$promise},getEarlyLeavers:function(e,t){return this.leaveAttendance.query({action:"earlyleavers",fromDate:e,toDate:t}).$promise},getMissingSwipes:function(e,t){return this.leaveAttendance.query({action:"missingswipes",fromDate:e,toDate:t}).$promise},getOverTimeDetails:function(e,t){return this.leaveAttendance.query({action:"overtime",fromDate:e,toDate:t}).$promise},getFrequentBreaks:function(e,t){return this.leaveAttendance.query({action:"frequentbreaks",fromDate:e,toDate:t}).$promise},getMissingDatesEmployees:function(e,t){return this.leaveAttendance.query({action:"noshows",fromDate:e,toDate:t}).$promise},getPendingRequests:function(){return this.leaveAttendance.get({action:"pendingattendancerequests"}).$promise},approveRequest:function(e){return this.leaveAttendance.save({action:"approvewfh",id:e}).$promise},rejectRequest:function(e){return this.leaveAttendance.save({action:"rejectwfh",id:e}).$promise},cancleWfhRequest:function(e){return this.leaveAttendance.save({action:"cancelwfh",id:e}).$promise},approveOnDutyRequest:function(e){return this.leaveAttendance.save({action:"approveonduty",id:e}).$promise},rejectOnDutyRequest:function(e){return this.leaveAttendance.save({action:"rejectonduty",id:e}).$promise},cancleOnDutyRequest:function(e){return this.leaveAttendance.save({action:"cancelonduty",id:e}).$promise},getMusterReport:function(e){return this.leaveAttendance.get({action:"musterreport",forDate:e}).$promise},getMustePrerequsities:function(e){return this.leaveAttendance.get({action:"musterprerequisites",forDate:e}).$promise},getMonthlyPerformances:function(e){return this.leaveAttendance.query({action:"monthlyperformance",forDate:e}).$promise},getMonthlyOverTime:function(e){return this.leaveAttendance.query({action:"monthlyovertime",forDate:e}).$promise},getLeaveExceptionLogs:function(e){return this.leaveAttendance.get({action:"leaveexceptionlogs"}).$promise},getAttendanceExceptionLogs:function(e){return this.leaveAttendance.get({action:"attendanceexceptionlogs"}).$promise},getAttendancePenalityLeaves:function(e,t){return this.leaveAttendance.get({action:"attendancepenalityleaves",fromDate:e,toDate:t}).$promise},getWFHRequestLogs:function(e,t){return this.leaveAttendance.get({action:"wfhrequestlogs",fromDate:e,toDate:t}).$promise},getDailyPerformances:function(e,t){return this.leaveAttendance.query({action:"dailyperformance",fromDate:e,toDate:t}).$promise},getLeaveTypeCodes:function(){return this.leaveAttendance.get({action:"getleavetypecodes"}).$promise},getLeaveBalanceExpirySummary:function(e,t,i){return this.leaveAttendance.query({action:"leaveexpirysummary",fromDate:e,toDate:t,leavePlanId:i}).$promise}}}]),appRoot.controller("AttendanceRequestController",["$scope","$uibModal","SharedModel","AppSettings","LeaveAttendanceService","AttendanceModificationStatus","AttendanceRequestType","MyTeamServices","NotificationService","$rootScope","dialogs","EmployeeServices","AttendanceRequestStatus",function(e,t,i,n,o,r,a,s,l,c,p,u,d){e.vm={},e.vm.attendanceRequestType=a,e.vm.attendanceModificationStatus=r,e.vm.attendanceRequestStatus=d,e.vm.isAllAdjustmentRequestsSelected=!1,e.vm.isAllRemoteClockRequestsSelected=!1,e.vm.niceScrollOptions=angular.copy(n.scrollSettings),e.vm.isReportingManagerView="team.attendance.approvals"==e.state.name,e.attendanceService=e.vm.isReportingManagerView?s:u,e.vm.getLogTime=function(e){return new i.StringToDate(e)};var m=function(t){e.vm.wfhRequests=t.wfhRequests,e.vm.onDutyRequests=t.onDutyRequests,angular.forEach(t.wfhRequests,function(e){e.totalDays=y(e)}),angular.forEach(t.onDutyRequests,function(e){e.totalDays=y(e)}),angular.forEach(t.adjustmentRequests,function(e){e.selected=!1,e.timeEntries.length>0&&(e.modifiedLog=e.timeEntries.filter(function(e){return e.isAdjusted||e.isManuallyAdded})),angular.forEach(e.modifiedLog,function(t){var i=e.timeEntries.filter(function(e){return e.actualTimeStamp==t.actualTimeStamp&&(e.isManuallyAdded||e.modifiedPunchStatus==Attendance.Model.PunchStatus.InWithOutMiss||e.modifiedPunchStatus==Attendance.Model.PunchStatus.OutWithInMiss||e.modifiedPunchStatus==Attendance.Model.PunchStatus.OutMiss)});t.isRequestedToAdd=i.length>0})}),angular.forEach(t.remoteClockInRequests,function(e){e.selected=!1,e.timeEntries.length>0&&(e.modifiedLog=e.timeEntries),angular.forEach(e.modifiedLog,function(t){var i=e.timeEntries.filter(function(e){return e.actualTimeStamp==t.actualTimeStamp&&(e.isManuallyAdded||e.modifiedPunchStatus==Attendance.Model.PunchStatus.InWithOutMiss||e.modifiedPunchStatus==Attendance.Model.PunchStatus.OutWithInMiss||e.modifiedPunchStatus==Attendance.Model.PunchStatus.OutMiss)});t.isRequestedToAdd=i.length>0})}),e.vm.adjustmentRequests=t.adjustmentRequests,e.vm.remoteClockInRequests=t.remoteClockInRequests,e.vm.activeRequest=e.vm.adjustmentRequests.length>0?e.vm.adjustmentRequests[0]:e.vm.remoteClockInRequests[0],e.$emit("pendingApprovalsCountChanged",{pendingAttendanceRequestsCount:e.vm.adjustmentRequests.length+e.vm.wfhRequests.length+e.vm.remoteClockInRequests.length+e.vm.onDutyRequests.length})},y=function(e){var t=Math.abs(new Date(e.toDate).getTime()-new Date(e.fromDate).getTime())/864e5+1;return 0==e.fromSession&&1==e.toSession||(1==e.fromSession&&0==e.toSession?t-=1:t-=.5),t},h=function(t,i){5==i&&"team.attendance.approvals"!=e.state.name||function(t){switch(t.requestType){case e.vm.attendanceRequestType.webClockin.id:case e.vm.attendanceRequestType.forgotIdCard.id:case e.vm.attendanceRequestType.attendanceAdjustment.id:case e.vm.attendanceRequestType.attendanceRegularization.id:e.vm.adjustmentRequests=e.vm.adjustmentRequests.filter(function(e){return e.id!=t.id}),e.vm.activeRequest={};break;case e.vm.attendanceRequestType.remoteClockIn.id:e.vm.remoteClockInRequests=e.vm.remoteClockInRequests.filter(function(e){return e.id!=t.id}),e.vm.activeRequest={};break;case e.vm.attendanceRequestType.wfh.id:e.vm.wfhRequests=e.vm.wfhRequests.filter(function(e){return e.id!=t.id});break;case e.vm.attendanceRequestType.onDuty.id:e.vm.onDutyRequests=e.vm.onDutyRequests.filter(function(e){return e.id!=t.id})}}(t),f(t,e.vm.attendanceRequestStatus.getById(i).title),!e.vm.isReportingManagerView||5==i&&"team.attendance.approvals"!=e.state.name||e.$emit("attendanceApprovalsCountChanged",{attendanceApprovalCount:--e.vm.attendanceApprovalCount})},f=function(t,i){switch(t.requestType){case e.vm.attendanceRequestType.webClockin.id:case e.vm.attendanceRequestType.forgotIdCard.id:case e.vm.attendanceRequestType.attendanceAdjustment.id:l.success("Attendance regularization request "+i+" successfully.");break;case e.vm.attendanceRequestType.remoteClockIn.id:l.success("Remote clock-in request "+i+" successfully.");break;case e.vm.attendanceRequestType.wfh.id:l.success("WFH request "+i+" successfully.");break;case e.vm.attendanceRequestType.onDuty.id:l.success("On Duty request "+i+" successfully.");break;default:l.success("Attendance regularization request "+i+" successfully.")}};e.$watch("vm.wfhRequests.length + vm.adjustmentRequests.length + vm.remoteClockInRequests.length + vm.onDutyRequests.length",function(t,i){i&&c.$broadcast("pendingApprovalsCountChanged",{pendingAttendanceRequestsCount:e.vm.adjustmentRequests.length+e.vm.wfhRequests.length+e.vm.remoteClockInRequests.length+e.vm.onDutyRequests.length})}),e.toggleAllAdjustmentRequests=function(){angular.forEach(e.vm.adjustmentRequests,function(t){t.selected=e.vm.isAllAdjustmentRequestsSelected})},e.toggleAllRemoteClockInRequests=function(){angular.forEach(e.vm.remoteClockInRequests,function(t){t.selected=e.vm.isAllRemoteClockRequestsSelected})},e.remoteClockInRequrestOptionToggled=function(){e.vm.isAllRemoteClockRequestsSelected=e.vm.remoteClockInRequests.every(function(e){return e.selected})},e.adjustmentRequestOptionToggled=function(){e.vm.isAllAdjustmentRequestsSelected=e.vm.adjustmentRequests.every(function(e){return e.selected})},e.vm.getRequestDetails=function(t){e.vm.activeRequest=angular.copy(t)},e.vm.performBulkAction=function(t){if(0!=e.vm.bulkAction){var i=t?e.vm.adjustmentRequests.filter(function(e){return e.selected}):e.vm.remoteClockInRequests.filter(function(e){return e.selected});if(0==i.length)return l.information("Please select at least one request."),void(e.vm.bulkAction="");p.confirm("Please Confirm","Are you sure want to "+(1==e.vm.bulkAction?"approve":"reject")+" all "+(t?"regularization":"remote clock-in")+" requests ?").result.then(function(){t?(1==e.vm.bulkAction?e.attendanceService.approveAllAdjustmentRequest(i.map(function(e){return e.id})):e.attendanceService.rejectAllAdjustmentRequest(i.map(function(e){return e.id}))).then(function(t){e.vm.adjustmentRequests=e.vm.adjustmentRequests.filter(function(e){return!e.selected}),e.vm.bulkAction="",l.success("Regularization requests updated successfully"),e.vm.isReportingManagerView&&e.$emit("attendanceApprovalsCountChanged",{attendanceApprovalCount:e.vm.attendanceApprovalCount-i.length})}):(1==e.vm.bulkAction?e.attendanceService.approveAllRemoteClockInRequests(i.map(function(e){return e.id})):e.attendanceService.rejectAllRemoteClockInRequests(i.map(function(e){return e.id}))).then(function(t){e.vm.remoteClockInRequests=e.vm.remoteClockInRequests.filter(function(e){return!e.selected}),e.vm.bulkAction="",l.success("Clock-In requests updated successfully"),e.vm.isReportingManagerView&&e.$emit("attendanceApprovalsCountChanged",{attendanceApprovalCount:e.vm.attendanceApprovalCount-i.length})})})}},e.approveAdjustmentRequest=function(t){e.$broadcast("publishComment"),e.attendanceService.approveAdjustmentRequest(t.employeeId,t.id).then(function(e){h(t,e.status)},function(e){l.error("An error has occurred.")})},e.rejectAdjustmentRequest=function(t){e.$broadcast("publishComment"),e.attendanceService.rejectAdjustmentRequest(t.employeeId,t.id).then(function(e){h(t,e.status)},function(e){l.error("An error has occurred.")})},e.approveRemoteClockInRequest=function(t){e.$broadcast("publishComment"),e.attendanceService.approveRemoteClockInRequest(t.employeeId,t.id).then(function(e){h(t,e.status)},function(e){l.error("An error has occurred.")})},e.rejectRemoteClockInRequest=function(t){e.$broadcast("publishComment"),e.attendanceService.rejectRemoteClockInRequest(t.employeeId,t.id).then(function(e){h(t,e.status)},function(e){l.error("An error has occurred.")})},e.approveWfhRequest=function(t){e.$broadcast("publishComment"),e.attendanceService.approveWfhRequest(t.employeeId,t.id).then(function(e){h(t,e.status)},function(e){l.error("An error has occurred.")})},e.rejectWfhRequest=function(t){e.$broadcast("publishComment"),e.attendanceService.rejectWfhRequest(t.employeeId,t.id).then(function(e){h(t,e.status)},function(e){l.error("An error has occurred.")})},e.approveOnDutyRequest=function(t){e.$broadcast("publishComment"),e.attendanceService.approveOnDutyRequest(t.employeeId,t.id).then(function(e){h(t,e.status)},function(e){l.error("An error has occurred.")})},e.rejectOnDutyRequest=function(t){e.$broadcast("publishComment"),e.attendanceService.rejectOnDutyRequest(t.employeeId,t.id).then(function(e){h(t,e.status)},function(e){l.error("An error has occurred.")})},e.openMapView=function(e,i,n){var o={};o.timeEntries=e,o.attendanceDate=i,t.open({templateUrl:"attendance-location-map-view",controller:"AttendanceLocationMapController",controllerAs:"ctrl",windowClass:"full-screen-modal no-scroll structure-compare modal-map-view",resolve:{Attendance:function(){return o},EmployeeName:function(){return n}}})},"leaveattendance.approvals.attendanceapprovals"==e.state.name?o.getPendingRequests().then(function(e){m(e)}):"team.attendance.approvals"==e.state.name&&s.myTeam.get({action:"attendance/requests"},function(t){e.vm.attendanceApprovalCount=t.wfhRequests.length+t.onDutyRequests.length+t.adjustmentRequests.length+t.remoteClockInRequests.length,m(t)})}]),appRoot.controller("LeaveAttendanceController",["$scope","$state","AppContext","EmployeeServices",function(e,t,i,n){e.vm={},e.$on("$stateChangeSuccess",function(){e.vm.state=t.current});e.$on("pendingApprovalsCountChanged",function(t,i){angular.isDefined(i.pendingLeaveRequestsCount)&&(e.vm.pendingLeaveApprovalsCount=i.pendingLeaveRequestsCount),angular.isDefined(i.pendingAttendanceRequestsCount)&&(e.vm.pendingAttendanceRequestsCount=i.pendingAttendanceRequestsCount),e.vm.approvalsCount=e.vm.pendingLeaveApprovalsCount+e.vm.pendingAttendanceRequestsCount}),i.hasPrivilege(["HRISPrivileges.MANAGEEMPLOYEE"])&&n.employee.get({action:"pendingapprovalscount"},function(t){e.vm.pendingLeaveApprovalsCount=(t.pendingLeaveRequestsCount||0)+(t.pendingCompOffRequestsCount||0),e.vm.pendingAttendanceRequestsCount=t.pendingAttendanceRequestsCount||0,e.vm.approvalsCount=e.vm.pendingLeaveApprovalsCount+e.vm.pendingAttendanceRequestsCount})}]),appRoot.controller("LeaveRequestSummaryController",["$scope","$state","AppSettings","DateServices","LeaveRequestStatus","LeaveAttendanceService","$filter","uiGridExporterConstants","uiGridGroupingConstants","UiGridExtensions","FileDownloadService",function(e,t,i,n,o,r,a,s,l,c,p){e.vm={},e.vm.niceScrollOptions=angular.copy(i.scrollSettings),e.vm.datepickerOptions=angular.copy(i.datepickerOptions),e.vm.leaveRequests=[],e.vm.leaveRequestStatus=o,e.vm.filterText="";var u=new Date;e.model={},e.model.fromDate=new Date(u.setDate(u.getDate()-30)),e.model.toDate=(new Date).setTimeSpan({hours:23,minutes:59,seconds:59,ms:999});e.rowFilter=function(t){var i=new RegExp(e.vm.filterText,"i");return t.forEach(function(t){var n=!1;["employeeNumber","displayName","jobTitle","department","reportingManager","fromDate","toDate","totalDays","leaveTypes","dateApprovedRejected","status","rejectReason"].forEach(function(o){if("status"==o){var r=e.vm.leaveRequestStatus.getById(t.entity[o]).name;null!=r&&r.match(i)&&(n=!0)}else if(o.toLowerCase().contains("date")){var s=a("date")(t.entity[o],"mediumDate");null!=s&&s.match(i)&&(n=!0)}else String(t.entity[o]).match(i)&&(n=!0)}),n||(t.visible=!1)}),t},e.exportReport=function(t){var i="/api/reports/ExportLeaveRequestSummary?name=leaverequests&format="+t+"&from="+(e.model&&e.model.fromDate?e.model.fromDate.dateOnlyString():"")+"&to="+(e.model&&e.model.toDate?e.model.toDate.dateOnlyString():"")+"&searchKey="+(e.vm.filterText?e.vm.filterText.trim():"");p.downloadFile(i)},e.getLeaveRequests=function(t,i){e.isDateValid()&&r.leaveAttendance.query({action:"leaverequest",from:t?t.dateOnlyString():"",to:i?i.dateOnlyString():""},function(t){angular.forEach(t,function(e){e.leaveTypes=e.leaveTypes.replace(/\,$/,"")}),e.vm.leaveRequests=t,e.vm.GridOptions.data=t,e.vm.gridApi&&e.vm.gridApi.grid.queueGridRefresh()})};e.vm.refreshData=function(){e.vm.GridOptions.data=a("filter")(e.vm.leaveRequests,e.vm.filterText,!1)},e.isDateValid=function(){return e.model.fromDate&&e.model.toDate&&new Date(e.model.fromDate).setHours(0,0,0,0)<=new Date(e.model.toDate).setHours(0,0,0,0)},e.getLeaveRequests(e.model.fromDate,e.model.toDate),e.vm.GridOptions=angular.copy(i.gridSettings),e.vm.GridOptions.showColumnFooter=!0,e.vm.GridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",enablePinning:!0,pinnedLeft:!0,groupingShowAggregationMenu:!1,width:150},{field:"displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" data-ui-sref="employee.time.leaves({id: row.entity.employeeId})"><span>{{grid.getCellValue(row,col)}}</span></a></div>',cellClass:"ui-grid-cell",enablePinning:!0,pinnedLeft:!0,groupingShowAggregationMenu:!1,width:150},{field:"jobTitle",displayName:"Job Title",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.jobTitle">{{grid.getCellValue(row, col)}}</span><span data-ng-if="!row.entity.jobTitle">Not Available</span></div>',groupingShowAggregationMenu:!1,width:150},{field:"department",displayName:"Department",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.department">{{grid.getCellValue(row, col)}}</span><span data-ng-if="!row.entity.department">Not Available</span></div>',groupingShowAggregationMenu:!1,width:100},{field:"orgLocation",displayName:"Location",groupingShowAggregationMenu:!1,width:150},{field:"leaveTypes",displayName:"Leave Types",groupingShowAggregationMenu:!1,width:150},{field:"fromDate",displayName:"From",cellFilter:'stringToDate:"mediumDate"',cellClass:"ui-grid-cell",groupingShowAggregationMenu:!1,width:150,customTreeAggregationFinalizerFn:function(e){e.rendered=e.groupVal}},{field:"toDate",displayName:"To",cellClass:"ui-grid-cell",cellFilter:'stringToDate:"mediumDate"',groupingShowAggregationMenu:!1,width:150,customTreeAggregationFinalizerFn:function(e){e.rendered=e.groupVal}},{field:"totalDays",displayName:"Total Days",treeAggregationType:l.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=c.formatAggregation(e)},groupingShowGroupingMenu:!1,width:100},{field:"requestedOn",displayName:"Requested On",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col) | stringToDate:"mediumDate"}}</span></div>',cellClass:"ui-grid-cell",groupingShowAggregationMenu:!1,width:150},{field:"note",displayName:"Reason",cellClass:"ui-grid-cell",groupingShowAggregationMenu:!1,width:150},{field:"approver",displayName:"Approver",cellClass:"ui-grid-cell",groupingShowAggregationMenu:!1,width:150},{field:"dateApprovedRejected",displayName:"Approved On",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row,col)!=null">{{grid.getCellValue(row,col) | stringToDate:"mediumDate"}}</span></div>',cellClass:"ui-grid-cell",groupingShowAggregationMenu:!1,width:150},{field:"status",displayName:"Status",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.vm.leaveRequestStatus.getById(grid.getCellValue(row,col)).name}}</span></div>',cellClass:"ui-grid-cell",groupingShowAggregationMenu:!1,minWidth:150},{field:"rejectReason",displayName:"Reject Reason",cellClass:"ui-grid-cell",groupingShowAggregationMenu:!1,width:150}],e.vm.GridOptions.rowHeight=50,e.vm.GridOptions.enableHorizontalScrollbar=!0,e.vm.GridOptions.onRegisterApi=function(t){e.vm.gridApi=t}}]),appRoot.controller("LeaveBalanceController",["$scope","$state","AppSettings","LeaveAttendanceService","LeaveSettingsService","$filter","uiGridExporterConstants","$q","$window","DateServices","SharedModel","uiGridGroupingConstants","UiGridExtensions","FileDownloadService",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m){e.vm={},e.vm.niceScrollOptions=angular.copy(i.scrollSettings),e.vm.filterText="","leaveattendance.reports.relievedemployeeleavebalances"!=t.current.name?(e.vm.pageTitle="Leave Balances of Employees",e.vm.pageDescription="This Report shows the Leave Balances of Employees for selected Leave Plan and Calendar year",e.vm.employmentStatus=0):(e.vm.pageTitle="Leave Balances of Relieved Employees",e.vm.pageDescription="This Report shows the Leave Balances of Relieved Employees for selected Leave Plan and Calendar year",e.vm.employmentStatus=1);var y=[],h=[];e.exportReport=function(t){var i="/api/reports/ExportEmployeeLeaveSummary?name="+"leavebalances"+"&format="+t+"&from="+(e.vm.selectedRange.from?e.vm.selectedRange.from.dateOnlyString():"")+"&leavePlanId="+e.vm.leavePlan.id+"&employmentStatus="+e.vm.employmentStatus+"&searchKey="+(e.vm.filterText?e.vm.filterText.trim():"");m.downloadFile(i)},e.yearSelectionChanged=function(){null!=e.vm.selectedRange&&e.getLeaveBalances()},e.setYearRange=function(){e.vm.leavePlan&&(f(),e.vm.selectedRange=e.vm.yearsList[0],e.vm.selectedRangeCopy=angular.copy(e.vm.selectedRange))};var f=function(){var t=p.DateWithZeroTime(),i=e.vm.leavePlan.yearStartDate.stringToDate(),n=(t.getFullYear()+"-"+(i.getMonth()+1)+"-1").stringToDate(),o={},r={};t<n&&n.setFullYear(n.getFullYear()-1),o.from=n,o.to=new Date(new Date(n).setFullYear(n.getFullYear()+1)),o.to=new Date(new Date(o.to).setDate(o.to.getDate()-1)),r.from=new Date(new Date(n).setFullYear(n.getFullYear()-1)),r.to=new Date(new Date(o.from).setDate(o.from.getDate()-1)),e.vm.yearsList=[o,r]};e.getLeaveBalances=function(){e.vm.leavePlan&&e.vm.selectedRange&&n.leaveAttendance.query({action:"leavebalancebyleaveplan",fromDate:e.vm.selectedRange.from?e.vm.selectedRange.from.dateOnlyString():"",leavePlanId:e.vm.leavePlan.id,employmentStatus:e.vm.employmentStatus},function(t){e.vm.leaveBalances=t,e.vm.showLoading=!1,function(){e.vm.typeHeaders=[];var t=e.vm.leavePlan.configuration.filter(function(e){return e.leaveType.isSick&&!e.leaveType.isStatutory}).map(function(e){return e.leaveType.name}),i=e.vm.leavePlan.configuration.filter(function(e){return!e.leaveType.isSick&&e.leaveType.isPaid&&!e.leaveType.isStatutory}).map(function(e){return e.leaveType.name}),n=e.vm.leavePlan.configuration.filter(function(e){return!e.leaveType.isSick&&!e.leaveType.isPaid&&!e.leaveType.isStatutory}).map(function(e){return e.leaveType.name}),o=e.vm.leavePlan.configuration.filter(function(e){return e.leaveType.isStatutory}).map(function(e){return e.leaveType.name});e.vm.typeHeaders=t.concat(i).concat(n).concat(o)}(),e.vm.headCategories=[],angular.forEach(e.vm.typeHeaders,function(t,i){e.vm.headCategories.push({head:t,category:"Accrued",id:i}),e.vm.headCategories.push({head:t,category:"Consumed",id:i}),e.vm.headCategories.push({head:t,category:"Balance",id:i}),e.vm.headCategories.push({head:t,category:"AnnualQuota",id:i})}),e.vm.balanceData=[],angular.forEach(e.vm.leaveBalances,function(t,i){var n=new function(e){this.employeeId=e.employeeId,this.employeeNumber=e.employeeNumber,this.name=e.displayName,this.jobTitle=e.jobTitle,this.department=e.department,this.location=e.location}(t),o=t.leaveSummary.typeSummary;angular.forEach(e.vm.typeHeaders,function(e,t){var i=o.find(function(t){return t.type.name==e});i?(n[e.replace(/ /g,"")+"Accrued"+t]=i.accrued,n[e.replace(/ /g,"")+"Consumed"+t]=i.consumedInDays,n[e.replace(/ /g,"")+"Balance"+t]=-1!=i.annualQuota?i.availableInDays:"No Limit",n[e.replace(/ /g,"")+"AnnualQuota"+t]=-1!=i.annualQuota?i.annualQuota:"No Limit"):(n[e.replace(/ /g,"")+"Accrued"+t]=0,n[e.replace(/ /g,"")+"Consumed"+t]=0,n[e.replace(/ /g,"")+"Balance"+t]=0,n[e.replace(/ /g,"")+"AnnualQuota"+t]=0)}),e.vm.balanceData.push(n)}),e.vm.balanceDataCopy=angular.copy(e.vm.balanceData),y=[],angular.forEach(e.vm.typeHeaders,function(e,t){var i={field:e.replace(/ /g,"")+"Accrued"+t,displayName:" Accrued",cellClass:"ui-grid-cell  boder-lt text-center",category:e,treeAggregationType:u.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=d.formatAggregation(e)},groupingShowGroupingMenu:!1},n={field:e.replace(/ /g,"")+"Consumed"+t,displayName:" Consumed",cellClass:"ui-grid-cell text-center",category:e,treeAggregationType:u.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=d.formatAggregation(e)},groupingShowGroupingMenu:!1},o={field:e.replace(/ /g,"")+"Balance"+t,displayName:" Balance",cellClass:"ui-grid-cell text-center",category:e,treeAggregationType:u.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=d.formatAggregation(e)},groupingShowGroupingMenu:!1},r={field:e.replace(/ /g,"")+"AnnualQuota"+t,displayName:" Annual Quota",cellClass:"ui-grid-cell text-center",category:e,treeAggregationType:u.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=d.formatAggregation(e)},groupingShowGroupingMenu:!1};y.push(i),y.push(n),y.push(o),y.push(r)}),e.vm.GridOptions=angular.copy(i.gridSettings),e.vm.GridOptions.headerTemplate="header-templat.html",h=[{name:"Employee",visible:!0,pinned:"left",displayName:"Employee"}],angular.forEach(e.vm.typeHeaders,function(e,t){h.push({name:e,visible:!0,pinned:"body",displayName:e,field:""})}),e.vm.GridOptions.category=h,e.vm.GridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell ",category:"Employee",pinnedLeft:!0,width:180,enableGrouping:!1},{field:"name",displayName:"Employee Name",cellTemplate:'<div title="{{grid.getCellValue(row,col)}}" class="ui-grid-cell-contents"><a target="_blank" data-ui-sref="employee.time.leaves({id: row.entity.employeeId})"><span>{{grid.getCellValue(row,col)}}</span></a></div>',cellClass:"ui-grid-cell    ",category:"Employee",pinnedLeft:!0,width:180,enableGrouping:!1},{field:"jobTitle",displayName:"Job Title",cellTemplate:'<div title="{{grid.getCellValue(row,col)}}" class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell    ",category:"Employee",pinnedLeft:!0,width:180,enableGrouping:!1},{field:"department",displayName:"Department",cellTemplate:'<div title="{{grid.getCellValue(row,col)}}" class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell    ",category:"Employee",pinnedLeft:!0,width:180,enableGrouping:!1},{field:"location",displayName:"Location",cellTemplate:'<div title="{{grid.getCellValue(row,col)}}" class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell    ",category:"Employee",pinnedLeft:!0,width:180,enableGrouping:!1}],e.vm.GridOptions.columnDefs=e.vm.GridOptions.columnDefs.concat(y),e.vm.GridOptions.showColumnFooter=!0,e.vm.GridOptions.rowHeight=60,e.vm.GridOptions.data="vm.balanceData",e.vm.GridOptions.enableHorizontalScrollbar=!0,e.vm.GridOptions.exporterHeaderFilterUseName=!0,e.vm.GridOptions.columnVirtualizationThreshold=100,e.vm.GridOptions.onRegisterApi=function(t){e.vm.gridApi=t},l.innerWidth>100*e.vm.GridOptions.columnDefs.length?(e.vm.GridOptions.enableHorizontalScrollbar=!1,angular.forEach(e.vm.GridOptions.columnDefs,function(e,t){e.width="*"})):(e.vm.GridOptions.enableHorizontalScrollbar=!0,angular.forEach(e.vm.GridOptions.columnDefs,function(e,t){e.width=180})),e.vm.gridApi&&(e.vm.gridApi.grid.options.category=h),e.vm.gridApi&&e.vm.gridApi.grid.queueGridRefresh()},function(t){e.vm.showLoading=!1})},e.vm.refreshData=function(){e.vm.balanceData=r("filter")(e.vm.balanceDataCopy,e.vm.filterText,!1)},e.vm.showLoading=!0,o.getLeavePlans().then(function(t){e.vm.leavePlans=t,e.vm.showLoading=!1})}]),appRoot.controller("NegativeLeaveBalanceController",["$scope","$state","AppSettings","LeaveAttendanceService","LeaveSettingsService","$filter","uiGridExporterConstants","$q","$window","DateServices","SharedModel","uiGridGroupingConstants","UiGridExtensions","FileDownloadService",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m){e.vm={},e.vm.niceScrollOptions=angular.copy(i.scrollSettings),e.vm.filterText="",e.vm.pageTitle="Employees with Negative Leave Balance",e.vm.pageDescription="This Report shows the Negative balances for selected Leave Plan and Calendar year";var y=[],h=[];e.exportReport=function(t){var i="/api/reports/ExportEmployeeLeaveSummary?name="+"negativeleavebalances"+"&format="+t+"&from="+(e.vm.selectedRange.from?e.vm.selectedRange.from.dateOnlyString():"")+"&leavePlanId="+e.vm.leavePlan.id+"&searchKey="+(e.vm.filterText?e.vm.filterText.trim():"");m.downloadFile(i)},e.yearSelectionChanged=function(){null!=e.vm.selectedRange&&e.getLeaveBalances()},e.setYearRange=function(){e.vm.leavePlan&&(f(),e.vm.selectedRange=e.vm.yearsList[0])};var f=function(){var t=p.DateWithZeroTime(),i=e.vm.leavePlan.yearStartDate.stringToDate(),n=(t.getFullYear()+"-"+(i.getMonth()+1)+"-1").stringToDate(),o={},r={};t<n&&n.setFullYear(n.getFullYear()-1),o.from=n,o.to=new Date(new Date(n).setFullYear(n.getFullYear()+1)),o.to=new Date(new Date(o.to).setDate(o.to.getDate()-1)),r.from=new Date(new Date(n).setFullYear(n.getFullYear()-1)),r.to=new Date(new Date(o.from).setDate(o.from.getDate()-1)),e.vm.yearsList=[o,r]};e.getLeaveBalances=function(){e.vm.leavePlan&&e.vm.selectedRange&&n.leaveAttendance.query({action:"negativebalancebyleaveplan",fromDate:e.vm.selectedRange.from?e.vm.selectedRange.from.dateOnlyString():"",leavePlanId:e.vm.leavePlan.id},function(t){e.vm.leaveBalances=t,e.vm.showLoading=!1,function(){e.vm.typeHeaders=[];var t=e.vm.leavePlan.configuration.filter(function(e){return e.leaveType.isSick&&!e.leaveType.isStatutory}).map(function(e){return e.leaveType.name}),i=e.vm.leavePlan.configuration.filter(function(e){return!e.leaveType.isSick&&e.leaveType.isPaid&&!e.leaveType.isStatutory}).map(function(e){return e.leaveType.name}),n=e.vm.leavePlan.configuration.filter(function(e){return!e.leaveType.isSick&&!e.leaveType.isPaid&&!e.leaveType.isStatutory}).map(function(e){return e.leaveType.name}),o=e.vm.leavePlan.configuration.filter(function(e){return e.leaveType.isStatutory}).map(function(e){return e.leaveType.name});e.vm.typeHeaders=t.concat(i).concat(n).concat(o)}(),e.vm.headCategories=[],angular.forEach(e.vm.typeHeaders,function(t,i){e.vm.headCategories.push({head:t,category:"Accrued"}),e.vm.headCategories.push({head:t,category:"Consumed"}),e.vm.headCategories.push({head:t,category:"Balance"})}),e.vm.balanceData=[],angular.forEach(e.vm.leaveBalances,function(t,i){var n=new function(e){this.employeeId=e.employeeId,this.employeeNumber=e.employeeNumber,this.name=e.displayName,this.jobTitle=e.jobTitle,this.department=e.department,this.location=e.location}(t),o=t.leaveSummary.typeSummary;angular.forEach(e.vm.typeHeaders,function(e,t){var i=o.find(function(t){return t.type.name==e});i?(n[e.replace(/ /g,"")+"Accrued"+t]=i.accrued,n[e.replace(/ /g,"")+"Consumed"+t]=i.consumedInDays,n[e.replace(/ /g,"")+"Balance"+t]=-1!=i.annualQuota?i.availableInDays:"No Limit"):(n[e.replace(/ /g,"")+"Accrued"+t]=0,n[e.replace(/ /g,"")+"Consumed"+t]=0,n[e.replace(/ /g,"")+"Balance"+t]=0)}),e.vm.balanceData.push(n)}),e.vm.balanceDataCopy=angular.copy(e.vm.balanceData),y=[],angular.forEach(e.vm.typeHeaders,function(e,t){var i={field:e.replace(/ /g,"")+"Accrued"+t,displayName:" Accrued",cellClass:"boder-lt text-center",category:e,treeAggregationType:u.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=d.formatAggregation(e)},groupingShowGroupingMenu:!1},n={field:e.replace(/ /g,"")+"Consumed"+t,displayName:" Consumed",cellClass:"text-center",category:e,treeAggregationType:u.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=d.formatAggregation(e)},groupingShowGroupingMenu:!1},o={field:e.replace(/ /g,"")+"Balance"+t,displayName:" Balance",cellClass:"text-center",category:e,treeAggregationType:u.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=d.formatAggregation(e)},groupingShowGroupingMenu:!1};y.push(i),y.push(n),y.push(o)}),e.vm.GridOptions=angular.copy(i.gridSettings),e.vm.GridOptions.showColumnFooter=!0,e.vm.GridOptions.headerTemplate="header-templat.html",h=[{name:"Employee",visible:!0,pinned:"left",displayName:""}],angular.forEach(e.vm.typeHeaders,function(e,t){h.push({name:e,visible:!0,pinned:"body",displayName:e,field:""})}),e.vm.GridOptions.category=h,e.vm.GridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell",category:"Employee",pinnedLeft:!0,width:200},{field:"name",displayName:"Employee Name",cellTemplate:'<div title="{{grid.getCellValue(row,col)}}" class="ui-grid-cell-contents"><a target="_blank" data-ui-sref="employee.time.leaves({id: row.entity.employeeId})"><span>{{grid.getCellValue(row,col)}}</span></a></div>',cellClass:"ui-grid-cell",category:"Employee",pinnedLeft:!0,width:200},{field:"jobTitle",displayName:"Job Title",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell",category:"Employee",pinnedLeft:!0,width:200},{field:"department",displayName:"Department",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell",category:"Employee",pinnedLeft:!0,width:200},{field:"location",displayName:"Location",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell",category:"Employee",pinnedLeft:!0,width:200}],e.vm.GridOptions.columnDefs=e.vm.GridOptions.columnDefs.concat(y),e.vm.GridOptions.rowHeight=60,e.vm.GridOptions.data="vm.balanceData",e.vm.GridOptions.columnVirtualizationThreshold=100,e.vm.GridOptions.enableHorizontalScrollbar=!0,e.vm.GridOptions.exporterHeaderFilterUseName=!0,e.vm.gridApi&&(e.vm.gridApi.grid.options.category=h),l.innerWidth>100*e.vm.GridOptions.columnDefs.length?(e.vm.GridOptions.enableHorizontalScrollbar=!1,angular.forEach(e.vm.GridOptions.columnDefs,function(e,t){e.width="*"})):(e.vm.GridOptions.enableHorizontalScrollbar=!0,angular.forEach(e.vm.GridOptions.columnDefs,function(e,t){e.width=180})),e.vm.gridApi&&(e.vm.gridApi.grid.options.category=h)},function(t){e.vm.showLoading=!1})},e.vm.refreshData=function(){e.vm.balanceData=r("filter")(e.vm.balanceDataCopy,e.vm.filterText,!1)},e.vm.showLoading=!0,o.getLeavePlans().then(function(t){e.vm.leavePlans=t,e.vm.showLoading=!1})}]),appRoot.controller("LeaveCarryoverController",["$scope","$state","AppSettings","LeaveAttendanceService","LeaveSettingsService","$filter","uiGridExporterConstants","$q","$window","DateServices","SharedModel","uiGridGroupingConstants","UiGridExtensions","FileDownloadService",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m){e.vm={},e.vm.niceScrollOptions=angular.copy(i.scrollSettings),e.vm.filterText="",e.vm.pageTitle="Employees Leave Carryovers",e.vm.pageDescription="This Report shows the Leave Carryover Summary of Employees for selected Leave Plan and Calendar year",e.vm.loadingMessage="Calculating leave carryovers please wait..";var y=[];e.exportReport=function(t){var i="/api/reports/ExportEmployeeLeaveSummary?name=leavecarryovers&format="+t+"&from="+(e.vm.selectedRange.from?e.vm.selectedRange.from.dateOnlyString():"")+"&leavePlanId="+e.vm.leavePlan.id+"&searchKey="+(e.vm.filterText?e.vm.filterText.trim():"");m.downloadFile(i)},e.yearSelectionChanged=function(){null!=e.vm.selectedRange&&e.getLeavesSummary()},e.setYearRange=function(){e.vm.leavePlan&&(h(),e.vm.selectedRange=e.vm.yearsList[0])};var h=function(){var t=p.DateWithZeroTime(),i=e.vm.leavePlan.yearStartDate.stringToDate(),n=(t.getFullYear()+"-"+(i.getMonth()+1)+"-1").stringToDate(),o={},r={};t<n&&n.setFullYear(n.getFullYear()-1),o.from=n,o.to=new Date(new Date(n).setFullYear(n.getFullYear()+1)),o.to=new Date(new Date(o.to).setDate(o.to.getDate()-1)),r.from=new Date(new Date(n).setFullYear(n.getFullYear()-1)),r.to=new Date(new Date(o.from).setDate(o.from.getDate()-1)),e.vm.yearsList=[o,r]};e.getLeavesSummary=function(){e.vm.leavePlan&&e.vm.selectedRange&&s.all([o.getLeaveTypes(),n.leaveAttendance.query({action:"leavecarryovers",fromDate:e.vm.selectedRange.from?e.vm.selectedRange.from.dateOnlyString():"",leavePlanId:e.vm.leavePlan.id}).$promise]).then(function(t){e.vm.leaveTypes=t[0],e.vm.leaveSummary=t[1],e.vm.showLoading=!1,function(){e.vm.typeHeaders=[];var t=e.vm.leaveTypes.filter(function(e){return e.isSick&&!e.isStatutory}).map(function(e){return e.name}),i=e.vm.leaveTypes.filter(function(e){return!e.isSick&&e.isPaid&&!e.isStatutory}).map(function(e){return e.name}),n=e.vm.leaveTypes.filter(function(e){return!e.isSick&&!e.isPaid&&!e.isStatutory}).map(function(e){return e.name}),o=e.vm.leaveTypes.filter(function(e){return e.isStatutory}).map(function(e){return e.name});e.vm.typeHeaders=t.concat(i).concat(n).concat(o)}(),e.vm.records=[],angular.forEach(e.vm.leaveSummary,function(t,i){var n=new function(e){this.employeeId=e.employeeId,this.employeeNumber=e.employeeNumber,this.name=e.displayName,this.jobTitle=e.jobTitle,this.department=e.department,this.location=e.location}(t),o=t.typeSummary;angular.forEach(e.vm.typeHeaders,function(e,t){var i=o.find(function(t){return t.type.name==e});n[e.replace(/[ ()]/g,"")]=i?i.carryoverBalance:0}),e.vm.records.push(n)}),e.vm.recordsCopy=angular.copy(e.vm.records),y=[],angular.forEach(e.vm.typeHeaders,function(e,t){var i={field:e.replace(/[ ()]/g,""),displayName:e,cellClass:"ui-grid-cell boder-lt",width:100,treeAggregationType:u.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=d.formatAggregation(e)},groupingShowGroupingMenu:!1};y.push(i)}),e.vm.GridOptions=angular.copy(i.gridSettings),e.vm.GridOptions.showColumnFooter=!0,e.vm.GridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellClass:"ui-grid-cell",pinnedLeft:!0,minWidth:100},{field:"name",displayName:"Employee Name",cellTemplate:'<div title="{{grid.getCellValue(row,col)}}" class="ui-grid-cell-contents"><a uib-tooltip="{{grid.getCellValue(row,col)}}" tooltip-append-to-body="true" tooltip-placement="right" target="_blank" data-ui-sref="employee.time.leaves({id: row.entity.employeeId})"><span>{{grid.getCellValue(row,col)}}</span></a></div>',cellClass:"ui-grid-cell",pinnedLeft:!0,groupingShowAggregationMenu:!1,minWidth:150},{field:"jobTitle",displayName:"Job Title",cellClass:"ui-grid-cell",pinnedLeft:!0,minWidth:100},{field:"department",displayName:"Department",cellClass:"ui-grid-cell",pinnedLeft:!0,minWidth:100},{field:"location",displayName:"location",cellClass:"ui-grid-cell",pinnedLeft:!0,minWidth:100}],e.vm.GridOptions.columnDefs=e.vm.GridOptions.columnDefs.concat(y),e.vm.GridOptions.rowHeight=50,e.vm.GridOptions.data="vm.records",e.vm.GridOptions.enableHorizontalScrollbar=!0,e.vm.GridOptions.onRegisterApi=function(t){e.vm.gridApi=t},e.vm.gridApi&&(e.vm.gridApi.grid.options.category=categories),e.vm.GridOptions.gridApi&&e.vm.GridOptions.gridApi.grid.queueGridRefresh()})};e.vm.refreshData=function(){e.vm.records=r("filter")(e.vm.recordsCopy,e.vm.filterText,!1)},e.vm.showLoading=!0,o.getLeavePlans().then(function(t){e.vm.leavePlans=t,e.vm.showLoading=!1})}]),appRoot.controller("LeaveAdjustmentsController",["$scope","$state","AppSettings","LeaveAttendanceService","LeaveSettingsService","$filter","uiGridExporterConstants","$q","$window","DateServices","SharedModel","uiGridGroupingConstants","UiGridExtensions","FileDownloadService",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m){e.vm={},e.vm.niceScrollOptions=angular.copy(i.scrollSettings),e.vm.filterText="",e.vm.pageTitle="Employees Leave Adjustments",e.vm.pageDescription="This Report shows the Leave Adjustments of Employees for selected Leave Plan and Calendar year",e.vm.loadingMessage="Calculating leave adjustments please wait..";var y=[];e.exportReport=function(t){var i="/api/reports/ExportEmployeeLeaveSummary?name=leaveadjustments&format="+t+"&from="+(e.vm.selectedRange.from?e.vm.selectedRange.from.dateOnlyString():"")+"&leavePlanId="+e.vm.leavePlan.id+"&searchKey="+(e.vm.filterText?e.vm.filterText.trim():"");m.downloadFile(i)},e.yearSelectionChanged=function(){null!=e.vm.selectedRange&&e.getLeavesSummary()},e.setYearRange=function(){e.vm.leavePlan&&(h(),e.vm.selectedRange=e.vm.yearsList[0])};var h=function(){var t=p.DateWithZeroTime(),i=e.vm.leavePlan.yearStartDate.stringToDate(),n=(t.getFullYear()+"-"+(i.getMonth()+1)+"-1").stringToDate(),o={},r={};t<n&&n.setFullYear(n.getFullYear()-1),o.from=n,o.to=new Date(new Date(n).setFullYear(n.getFullYear()+1)),o.to=new Date(new Date(o.to).setDate(o.to.getDate()-1)),r.from=new Date(new Date(n).setFullYear(n.getFullYear()-1)),r.to=new Date(new Date(o.from).setDate(o.from.getDate()-1)),e.vm.yearsList=[o,r]};e.getLeavesSummary=function(){e.vm.leavePlan&&e.vm.selectedRange&&s.all([o.getLeaveTypes(),n.leaveAttendance.query({action:"leaveadjustments",fromDate:e.vm.selectedRange.from?e.vm.selectedRange.from.dateOnlyString():"",leavePlanId:e.vm.leavePlan.id}).$promise]).then(function(t){e.vm.leaveTypes=t[0],e.vm.leaveSummary=t[1],e.vm.showLoading=!1,function(){e.vm.typeHeaders=[];var t=e.vm.leaveTypes.filter(function(e){return e.isSick&&!e.isStatutory}).map(function(e){return e.name}),i=e.vm.leaveTypes.filter(function(e){return!e.isSick&&e.isPaid&&!e.isStatutory}).map(function(e){return e.name}),n=e.vm.leaveTypes.filter(function(e){return!e.isSick&&!e.isPaid&&!e.isStatutory}).map(function(e){return e.name}),o=e.vm.leaveTypes.filter(function(e){return e.isStatutory}).map(function(e){return e.name});e.vm.typeHeaders=t.concat(i).concat(n).concat(o)}(),e.vm.records=[],angular.forEach(e.vm.leaveSummary,function(t,i){var n=new function(e){this.employeeId=e.employeeId,this.employeeNumber=e.employeeNumber,this.name=e.displayName,this.month=e.monthName,this.jobTitle=e.jobTitle,this.department=e.department,this.location=e.location}(t),o=t.typeSummary;angular.forEach(e.vm.typeHeaders,function(e,t){var i=o.find(function(t){return t.type.name==e});n[e.replace(/ /g,"")]=i?i.initialAdjustments:0}),e.vm.records.push(n)}),e.vm.recordsCopy=angular.copy(e.vm.records),y=[],angular.forEach(e.vm.typeHeaders,function(e,t){var i={field:e.replace(/ /g,""),displayName:e,cellClass:"ui-grid-cell  boder-lt",treeAggregationType:u.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=d.formatAggregation(e)},groupingShowGroupingMenu:!1,width:100,headerTooltip:!0};y.push(i)}),e.vm.GridOptions=angular.copy(i.gridSettings),e.vm.GridOptions.showColumnFooter=!0,e.vm.GridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellClass:"ui-grid-cell",pinnedLeft:!0,enableGrouping:!1,width:100,headerTooltip:!0},{field:"name",displayName:"Employee Name",cellTemplate:'<div title="{{grid.getCellValue(row,col)}}" class="ui-grid-cell-contents"><a uib-tooltip="{{grid.getCellValue(row,col)}}" tooltip-append-to-body="true" tooltip-placement="right" target="_blank" data-ui-sref="employee.time.leaves({id: row.entity.employeeId})"><span>{{grid.getCellValue(row,col)}}</span></a></div>',cellClass:"ui-grid-cell",pinnedLeft:!0,width:150,enableGrouping:!1,headerTooltip:!0},{field:"month",displayName:"Month",cellClass:"ui-grid-cell",pinnedLeft:!0,minWidth:200,groupingShowAggregationMenu:!1,headerTooltip:!0},{field:"jobTitle",displayName:"Job Title",cellClass:"ui-grid-cell",pinnedLeft:!0,minWidth:200,groupingShowAggregationMenu:!1,headerTooltip:!0},{field:"department",displayName:"Department",cellClass:"ui-grid-cell",pinnedLeft:!0,minWidth:200,groupingShowAggregationMenu:!1,headerTooltip:!0},{field:"location",displayName:"Location",cellClass:"ui-grid-cell",pinnedLeft:!0,minWidth:200,groupingShowAggregationMenu:!1,headerTooltip:!0}],e.vm.GridOptions.columnDefs=e.vm.GridOptions.columnDefs.concat(y),e.vm.GridOptions.rowHeight=50,e.vm.GridOptions.data="vm.records",e.vm.GridOptions.enableHorizontalScrollbar=!0,e.vm.GridOptions.onRegisterApi=function(t){e.vm.gridApi=t},e.vm.gridApi&&(e.vm.gridApi.grid.options.category=categories),e.vm.gridApi&&e.vm.gridApi.grid.queueGridRefresh()})},e.vm.refreshData=function(){e.vm.records=r("filter")(e.vm.recordsCopy,e.vm.filterText,!1)},e.vm.showLoading=!0,o.getLeavePlans().then(function(t){e.vm.leavePlans=t,e.vm.showLoading=!1})}]),appRoot.controller("LeaveSummaryReportController",["$scope","$filter","AppSettings","LeaveAttendanceService","uiGridExporterConstants","$timeout","LeaveSettingsService","uiGridGroupingConstants","UiGridExtensions","FileDownloadService",function(e,t,i,n,o,r,a,s,l,c){e.vm={},e.model={},e.vm.filterText="",e.vm.reports=[],e.vm.reportsData=[],e.vm.datepickerOptions=angular.copy(i.datepickerOptions),e.vm.datepickerOptions.maxDate=new Date;e.exportReport=function(t){if(e.vm.reports.length>0){var i="/api/reports/ExportLeavesConsumed?name=leavesconsumed&format="+t+"&from="+e.model.fromDate.dateOnlyString()+"&to="+e.model.toDate.dateOnlyString()+"&leaveTypeId="+(e.vm.leaveType?e.vm.leaveType.id:"")+"&searchKey="+(e.vm.filterText?e.vm.filterText.trim():"");c.downloadFile(i)}},e.getConsumedLeavesSummary=function(){e.vm.isDateValid()&&(e.vm.showLoading=!0,n.leaveAttendance.query({action:"leavesconsumed",fromDate:e.model.fromDate?e.model.fromDate.dateOnlyString():"",toDate:e.model.toDate?e.model.toDate.dateOnlyString():"",leaveTypeId:e.vm.leaveType?e.vm.leaveType.id:""},function(t){e.vm.reports=t,e.vm.reportsData=angular.copy(e.vm.reports),r(function(){window.dispatchEvent(new Event("resize"))},200),e.vm.GridOptions=angular.copy(i.gridSettings),e.vm.GridOptions.showColumnFooter=!0,e.vm.GridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",enableGrouping:!1},{field:"fullName",displayName:"Employee Name",cellTemplate:'<div title="{{grid.getCellValue(row,col)}}" class="ui-grid-cell-contents"><a target="_blank" data-ui-sref="employee.time.leaves({id: row.entity.employeeId})"><span>{{grid.getCellValue(row,col)}}</span></a></div>',cellClass:"ui-grid-cell",enableGrouping:!1},{field:"jobTitle",displayName:"Job Title",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.jobTitle">{{grid.getCellValue(row, col)}}</span><span data-ng-if="!row.entity.jobTitle">Not Available</span></div>',groupingShowAggregationMenu:!1},{field:"department",displayName:"Department",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.department">{{grid.getCellValue(row, col)}}</span><span data-ng-if="!row.entity.department">Not Available</span></div>',groupingShowAggregationMenu:!1},{field:"orgLocation",displayName:"Location",groupingShowAggregationMenu:!1},{field:"leavesCount",displayName:"Leave Consumed",treeAggregationType:s.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=l.formatAggregation(e)},groupingShowGroupingMenu:!1}],e.vm.GridOptions.rowHeight=50,e.vm.GridOptions.data="vm.reportsData",e.vm.GridOptions.onRegisterApi=function(t){e.vm.gridApi=t,e.vm.gridApi.grid.registerRowsProcessor(e.rowFilter,200)},e.vm.showLoading=!1},function(t){e.vm.showLoading=!1}))},e.setCurrentMonthDates=function(){var t=new Date;e.model.fromDate=new Date(t.setDate(t.getDate()-30)),e.model.toDate=(new Date).setTimeSpan({hours:23,minutes:59,seconds:59,ms:999})},e.vm.refreshData=function(){e.vm.reportsData=t("filter")(e.vm.reports,e.vm.filterText,!1)},e.vm.isDateValid=function(){return new Date(e.model.fromDate).setHours(0,0,0,0)<=new Date(e.model.toDate).setHours(0,0,0,0)},e.rowFilter=function(t){var i=new RegExp(e.vm.filterText,"i");return t.forEach(function(e){var t=!1;["employeeNumber","displayName","jobTitle","department","orgLocation","leavesCount"].forEach(function(n){String(e.entity[n]).match(i)&&(t=!0)}),t||(e.visible=!1)}),t},e.vm.showLoading=!0,a.getLeaveTypes().then(function(t){e.vm.leaveTypes=t}),e.setCurrentMonthDates(),e.getConsumedLeavesSummary()}]),appRoot.controller("LeavesAccruedController",["$scope","$filter","AppSettings","LeaveAttendanceService","uiGridExporterConstants","$timeout","LeaveSettingsService","uiGridGroupingConstants","UiGridExtensions","FileDownloadService",function(e,t,i,n,o,r,a,s,l,c){e.vm={},e.model={},e.vm.filterText="",e.vm.reports=[],e.vm.reportsData=[],e.vm.datepickerOptions=angular.copy(i.datepickerOptions);e.exportReport=function(t){if(e.vm.reports.length>0){var i="/api/reports/ExportLeavesAccrued?name=leaveaccrued&format="+t+"&from="+e.model.fromDate.dateOnlyString()+"&to="+e.model.toDate.dateOnlyString()+"&leaveTypeId="+(e.vm.leaveType?e.vm.leaveType.id:"")+"&searchKey="+(e.vm.filterText?e.vm.filterText.trim():"");c.downloadFile(i)}},e.getLeavesAccrued=function(t,o){t&&o&&t<=o&&(e.vm.showLoading=!0,n.leaveAttendance.query({action:"leavesaccrued",fromDate:t?t.dateOnlyString():"",toDate:o?o.dateOnlyString():"",leaveTypeId:e.vm.leaveType?e.vm.leaveType.id:""},function(t){e.vm.reports=t,e.vm.reportsData=angular.copy(e.vm.reports),r(function(){window.dispatchEvent(new Event("resize"))},200),e.vm.GridOptions=angular.copy(i.gridSettings),e.vm.GridOptions.showColumnFooter=!0,e.vm.GridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",enableGrouping:!1},{field:"fullName",displayName:"Employee Name",cellTemplate:'<div title="{{grid.getCellValue(row,col)}}" class="ui-grid-cell-contents"><a target="_blank" data-ui-sref="employee.time.leaves({id: row.entity.employeeId})"><span>{{grid.getCellValue(row,col)}}</span></a></div>',cellClass:"ui-grid-cell",enableGrouping:!1},{field:"jobTitle",displayName:"Job Title",groupingShowAggregationMenu:!1},{field:"department",displayName:"Department",groupingShowAggregationMenu:!1},{field:"orgLocation",displayName:"Location",groupingShowAggregationMenu:!1},{field:"accruedDays",displayName:"Leave Accrued",treeAggregationType:s.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=l.formatAggregation(e)},groupingShowGroupingMenu:!1}],e.vm.GridOptions.rowHeight=50,e.vm.GridOptions.data="vm.reportsData",e.vm.GridOptions.onRegisterApi=function(t){e.vm.gridApi=t,e.vm.gridApi.grid.registerRowsProcessor(e.rowFilter,200)},e.vm.showLoading=!1},function(t){e.vm.showLoading=!1}))},e.setCurrentMonthDates=function(){var t=new Date;e.model.fromDate=new Date(t.setDate(t.getDate()-30)),e.model.toDate=(new Date).setTimeSpan({hours:23,minutes:59,seconds:59,ms:999})},e.vm.refreshData=function(){e.vm.reportsData=t("filter")(e.vm.reports,e.vm.filterText,!1)},e.vm.isDateValid=function(){return new Date(e.model.fromDate).setHours(0,0,0,0)<=new Date(e.model.toDate).setHours(0,0,0,0)},e.rowFilter=function(t){var i=new RegExp(e.vm.filterText,"i");return t.forEach(function(e){var t=!1;["employeeNumber","displayName","jobTitle","department","orgLocation","accruedDays"].forEach(function(n){String(e.entity[n]).match(i)&&(t=!0)}),t||(e.visible=!1)}),t},e.vm.showLoading=!0,a.getLeaveTypes().then(function(t){e.vm.leaveTypes=t}),e.setCurrentMonthDates(),e.getLeavesAccrued(e.model.fromDate,e.model.toDate)}]),appRoot.controller("LeaveAccrualController",["$scope","$state","AppSettings","LeaveAttendanceService",function(e,t,i,n){e.vm={},e.vm.leaveAccruals=[];e.leaveAccrualListGridOptions=angular.copy(i.gridSettings),e.leaveAccrualListGridOptions.rowHeight=40,e.leaveAccrualListGridOptions.enableSorting=!1,e.leaveAccrualListGridOptions.enableRowSelection=!1,e.leaveAccrualListGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellClass:"plain-gridcell"},{field:"displayName",displayName:"Employee",cellClass:"plain-gridcell"},{field:"sickLeaves",displayName:"Sick Leave",cellClass:"plain-gridcell"},{field:"paidLeaves",displayName:"Paid Leave",cellClass:"plain-gridcell"},{field:"otherLeaves",displayName:"Other Leave",cellClass:"plain-gridcell"}],e.leaveAccrualListGridOptions.data="myData",e.myData=[],n.leaveAttendance.query({action:"leaveaccrual"},function(t){e.vm.leaveAccruals=t})}]),appRoot.controller("LeaveConsumptionController",["$scope","$state","AppSettings","LeaveAttendanceService",function(e,t,i,n){e.vm={},e.vm.datepickerOptions=angular.copy(i.datepickerOptions),e.vm.leaveConsumptions=[];e.leaveConsumptionListGridOptions=angular.copy(i.gridSettings),e.leaveConsumptionListGridOptions.rowHeight=40,e.leaveConsumptionListGridOptions.enableSorting=!1,e.leaveConsumptionListGridOptions.enableRowSelection=!1,e.leaveConsumptionListGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellClass:"plain-gridcell"},{field:"displayName",displayName:"Employee",cellClass:"plain-gridcell"},{field:"sickLeaves",displayName:"Sick Leave",cellClass:"plain-gridcell"},{field:"paidLeaves",displayName:"Paid Leave",cellClass:"plain-gridcell"},{field:"otherLeaves",displayName:"Other Leave",cellClass:"plain-gridcell"}],e.leaveConsumptionListGridOptions.data="myData",e.myData=[],n.leaveAttendance.query({action:"leavesconsumed"},function(t){e.vm.leaveConsumptions=t})}]),appRoot.controller("LeaveBalanceYTDController",["$scope","$state","AppSettings","LeaveAttendanceService","LeaveSettingsService","$filter","uiGridExporterConstants","$q","$window","DateServices","SharedModel","uiGridGroupingConstants","UiGridExtensions","FileDownloadService",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m){e.vm={},e.vm.niceScrollOptions=angular.copy(i.scrollSettings),e.vm.filterText="",e.vm.pageTitle="Employees Leave Balance YTD",e.vm.pageDescription="This Report shows the Leave Balances of Employees for selected Leave Plan and year to date",e.vm.employmentStatus=0;var y=[],h=[];e.exportReport=function(t){var i="/api/reports/ExportEmployeeLeaveSummary?name="+"leavebalanceytd"+"&format="+t+"&from="+(e.vm.selectedRange.from?e.vm.selectedRange.from.dateOnlyString():"")+"&to="+(e.vm.selectedRangeCopy.to?e.vm.selectedRangeCopy.to.dateOnlyString():"")+"&leavePlanId="+e.vm.leavePlan.id+"&employmentStatus="+e.vm.employmentStatus+"&searchKey="+(e.vm.filterText?e.vm.filterText.trim():"");m.downloadFile(i)},e.yearSelectionChanged=function(){null!=e.vm.selectedRange&&e.getLeaveBalances()},e.setYearRange=function(){e.vm.leavePlan&&(f(),e.vm.selectedRange=e.vm.yearsList[0],e.vm.selectedRangeCopy=angular.copy(e.vm.selectedRange))},e.startDateChange=function(){e.vm.selectedRangeCopy=angular.copy(e.vm.selectedRange)};var f=function(){var t=p.DateWithZeroTime(),i=e.vm.leavePlan.yearStartDate.stringToDate(),n=(t.getFullYear()+"-"+(i.getMonth()+1)+"-1").stringToDate(),o={},r={};t<n&&n.setFullYear(n.getFullYear()-1),o.from=n,o.to=new Date(new Date(n).setFullYear(n.getFullYear()+1)),o.to=new Date(new Date(o.to).setDate(o.to.getDate()-1)),r.from=new Date(new Date(n).setFullYear(n.getFullYear()-1)),r.to=new Date(new Date(o.from).setDate(o.from.getDate()-1)),e.vm.yearsList=[o,r]};e.getLeaveBalances=function(){e.vm.leavePlan&&e.vm.selectedRange&&n.leaveAttendance.query({action:"leavebalancebyleaveplanytd",fromDate:e.vm.selectedRange.from?e.vm.selectedRange.from.dateOnlyString():"",endDate:e.vm.selectedRangeCopy.to?e.vm.selectedRangeCopy.to.dateOnlyString():"",leavePlanId:e.vm.leavePlan.id,employmentStatus:e.vm.employmentStatus},function(t){e.vm.leaveBalances=t,e.vm.showLoading=!1,function(){e.vm.typeHeaders=[];var t=e.vm.leavePlan.configuration.filter(function(e){return e.leaveType.isSick&&!e.leaveType.isStatutory}).map(function(e){return e.leaveType.name}),i=e.vm.leavePlan.configuration.filter(function(e){return!e.leaveType.isSick&&e.leaveType.isPaid&&!e.leaveType.isStatutory}).map(function(e){return e.leaveType.name}),n=e.vm.leavePlan.configuration.filter(function(e){return!e.leaveType.isSick&&!e.leaveType.isPaid&&!e.leaveType.isStatutory}).map(function(e){return e.leaveType.name}),o=e.vm.leavePlan.configuration.filter(function(e){return e.leaveType.isStatutory}).map(function(e){return e.leaveType.name});e.vm.typeHeaders=t.concat(i).concat(n).concat(o)}(),e.vm.headCategories=[],angular.forEach(e.vm.typeHeaders,function(t,i){e.vm.headCategories.push({head:t,category:"Accrued",id:i}),e.vm.headCategories.push({head:t,category:"Consumed",id:i}),e.vm.headCategories.push({head:t,category:"Balance",id:i})}),e.vm.balanceData=[],angular.forEach(e.vm.leaveBalances,function(t,i){var n=new function(e){this.employeeId=e.employeeId,this.employeeNumber=e.employeeNumber,this.name=e.displayName,this.jobTitle=e.jobTitle,this.department=e.department,this.location=e.location}(t),o=t.leaveSummary.typeSummary;angular.forEach(e.vm.typeHeaders,function(e,t){var i=o.find(function(t){return t.type.name==e});i?(n[e.replace(/ /g,"")+"Accrued"+t]=i.accrued,n[e.replace(/ /g,"")+"Consumed"+t]=i.consumedInDays,n[e.replace(/ /g,"")+"Balance"+t]=-1!=i.annualQuota?i.availableInDays:"No Limit"):(n[e.replace(/ /g,"")+"Accrued"+t]=0,n[e.replace(/ /g,"")+"Consumed"+t]=0,n[e.replace(/ /g,"")+"Balance"+t]=0)}),e.vm.balanceData.push(n)}),e.vm.balanceDataCopy=angular.copy(e.vm.balanceData),y=[],angular.forEach(e.vm.typeHeaders,function(e,t){var i={field:e.replace(/ /g,"")+"Accrued"+t,displayName:" Accrued",cellClass:"ui-grid-cell  boder-lt text-center",category:e,treeAggregationType:u.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=d.formatAggregation(e)},groupingShowGroupingMenu:!1},n={field:e.replace(/ /g,"")+"Consumed"+t,displayName:" Consumed",cellClass:"ui-grid-cell text-center",category:e,treeAggregationType:u.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=d.formatAggregation(e)},groupingShowGroupingMenu:!1},o={field:e.replace(/ /g,"")+"Balance"+t,displayName:" Balance",cellClass:"ui-grid-cell text-center",category:e,treeAggregationType:u.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=d.formatAggregation(e)},groupingShowGroupingMenu:!1};y.push(i),y.push(n),y.push(o)}),e.vm.GridOptions=angular.copy(i.gridSettings),e.vm.GridOptions.headerTemplate="header-templat.html",h=[{name:"Employee",visible:!0,pinned:"left",displayName:"Employee"}],angular.forEach(e.vm.typeHeaders,function(e,t){h.push({name:e,visible:!0,pinned:"body",displayName:e,field:""})}),e.vm.GridOptions.category=h,e.vm.GridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell ",category:"Employee",pinnedLeft:!0,width:180,enableGrouping:!1},{field:"name",displayName:"Employee Name",cellTemplate:'<div title="{{grid.getCellValue(row,col)}}" class="ui-grid-cell-contents"><a target="_blank" data-ui-sref="employee.time.leaves({id: row.entity.employeeId})"><span>{{grid.getCellValue(row,col)}}</span></a></div>',cellClass:"ui-grid-cell    ",category:"Employee",pinnedLeft:!0,width:180,enableGrouping:!1},{field:"jobTitle",displayName:"Job Title",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell ",category:"Employee",pinnedLeft:!0,width:180,enableGrouping:!1},{field:"department",displayName:"Department",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell ",category:"Employee",pinnedLeft:!0,width:180,enableGrouping:!1},{field:"location",displayName:"Location",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell ",category:"Employee",pinnedLeft:!0,width:180,enableGrouping:!1}],e.vm.GridOptions.columnDefs=e.vm.GridOptions.columnDefs.concat(y),e.vm.GridOptions.showColumnFooter=!0,e.vm.GridOptions.rowHeight=60,e.vm.GridOptions.data="vm.balanceData",e.vm.GridOptions.enableHorizontalScrollbar=!0,e.vm.GridOptions.exporterHeaderFilterUseName=!0,e.vm.GridOptions.columnVirtualizationThreshold=100,e.vm.GridOptions.onRegisterApi=function(t){e.vm.gridApi=t},l.innerWidth>100*e.vm.GridOptions.columnDefs.length?(e.vm.GridOptions.enableHorizontalScrollbar=!1,angular.forEach(e.vm.GridOptions.columnDefs,function(e,t){e.width="*"})):(e.vm.GridOptions.enableHorizontalScrollbar=!0,angular.forEach(e.vm.GridOptions.columnDefs,function(e,t){e.width=180})),e.vm.gridApi&&(e.vm.gridApi.grid.options.category=h),e.vm.gridApi&&e.vm.gridApi.grid.queueGridRefresh()},function(t){e.vm.showLoading=!1})},e.vm.refreshData=function(){e.vm.balanceData=r("filter")(e.vm.balanceDataCopy,e.vm.filterText,!1)},e.vm.showLoading=!0,o.getLeavePlans().then(function(t){e.vm.leavePlans=t,e.vm.showLoading=!1})}]),appRoot.controller("OpeningClosingLeaveBalancesController",["$scope","$state","AppSettings","LeaveAttendanceService","LeaveSettingsService","$filter","uiGridExporterConstants","$q","$window","DateServices","SharedModel","uiGridGroupingConstants","UiGridExtensions","FileDownloadService",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m){e.vm={},e.vm.niceScrollOptions=angular.copy(i.scrollSettings),e.vm.filterText="",e.vm.pageTitle="Opening and Closing Leave Balances",e.vm.pageDescription="This Report shows the opening and closing leave balances of employees for selected leave plan",e.vm.employmentStatus=0,e.isdatevalid=!0;var y=[],h=[];e.exportReport=function(t){var i="/api/reports/ExportEmployeeLeaveSummary?name="+"openingclosingbalances"+"&format="+t+"&from="+(e.vm.selectedRangeCopy.from?e.vm.selectedRangeCopy.from.dateOnlyString():"")+"&to="+(e.vm.selectedRangeCopy.to?e.vm.selectedRangeCopy.to.dateOnlyString():"")+"&leavePlanId="+e.vm.leavePlan.id+"&employmentStatus="+e.vm.employmentStatus+"&searchKey="+(e.vm.filterText?e.vm.filterText.trim():"");m.downloadFile(i)},e.yearSelectionChanged=function(){null!=e.vm.selectedRange&&e.getLeaveBalances()},e.setYearRange=function(){e.vm.leavePlan&&(f(),e.vm.selectedRange=angular.copy(e.vm.yearsList[0]),e.vm.selectedRangeCopy=angular.copy(e.vm.selectedRange),e.vm.yearsList.length>1?(e.vm.minimumStartDate=new Date(angular.copy(e.vm.selectedRangeCopy.from).setMonth(angular.copy(e.vm.selectedRangeCopy).from.getMonth()-12)),e.vm.maximumStartDate=new Date(e.vm.selectedRangeCopy.to),e.vm.minimumEndDate=angular.copy(e.vm.selectedRangeCopy.from),e.vm.maximumEndDate=new Date(e.vm.selectedRangeCopy.to)):(e.vm.minimumStartDate=new Date(e.vm.selectedRangeCopy.from),e.vm.maximumStartDate=new Date(e.vm.selectedRangeCopy.to),e.vm.minimumEndDate=new Date(e.vm.selectedRangeCopy.from),e.vm.maximumEndDate=new Date(e.vm.selectedRangeCopy.to)),e.startDatepickerOptions={showWeeks:!1,minDate:e.vm.minimumStartDate,maxDate:e.vm.maximumStartDate})},e.changeDates=function(){e.vm.yearsList.length>1&&(e.vm.selectedRangeCopy.from>=e.vm.yearsList[0].from&&e.vm.selectedRangeCopy.from<=e.vm.yearsList[0].to?(e.vm.minimumEndDate=new Date(e.vm.selectedRangeCopy.from),e.vm.maximumEndDate=new Date(e.vm.selectedRange.to)):(e.vm.minimumEndDate=e.vm.selectedRangeCopy.from,e.vm.maximumEndDate=new Date(angular.copy(e.vm.selectedRange.to).setMonth(angular.copy(e.vm.selectedRange.to).getMonth()-12))),(e.vm.selectedRangeCopy.to>e.vm.maximumEndDate||e.vm.selectedRangeCopy.to<e.vm.minimumEndDate)&&(e.vm.selectedRangeCopy.to=angular.copy(e.vm.maximumEndDate))),e.vm.selectedRangeCopy.from>e.vm.selectedRangeCopy.to&&(e.vm.minimumEndDate=angular.copy(e.vm.selectedRangeCopy.from),e.vm.selectedRangeCopy.to=angular.copy(e.vm.selectedRangeCopy.from)),e.endDatepickerOptions={showWeeks:!1,minDate:e.vm.minimumEndDate,maxDate:e.vm.maximumEndDate},g()};var f=function(){var t=p.DateWithZeroTime(),i=e.vm.leavePlan.yearStartDate.stringToDate(),n=(t.getFullYear()+"-"+(i.getMonth()+1)+"-1").stringToDate(),o={},r={};t<n&&n.setFullYear(n.getFullYear()-1),o.from=n,o.to=new Date(new Date(n).setFullYear(n.getFullYear()+1)),o.to=new Date(new Date(o.to).setDate(o.to.getDate()-1)),r.from=new Date(new Date(n).setFullYear(n.getFullYear()-1)),r.to=new Date(new Date(o.from).setDate(o.from.getDate()-1)),e.vm.yearsList=[o,r]};e.getLeaveBalances=function(){n.leaveAttendance.query({action:"openingclosingbalances",fromDate:e.vm.selectedRangeCopy.from?e.vm.selectedRangeCopy.from.dateOnlyString():"",endDate:e.vm.selectedRangeCopy.to?e.vm.selectedRangeCopy.to.dateOnlyString():"",leavePlanId:e.vm.leavePlan.id,employmentStatus:e.vm.employmentStatus},function(t){e.vm.leaveBalances=t,e.vm.showLoading=!1,function(){e.vm.typeHeaders=[];var t=e.vm.leavePlan.configuration.filter(function(e){return e.leaveType.isSick&&!e.leaveType.isStatutory}).map(function(e){return e.leaveType.name}),i=e.vm.leavePlan.configuration.filter(function(e){return!e.leaveType.isSick&&e.leaveType.isPaid&&!e.leaveType.isStatutory}).map(function(e){return e.leaveType.name}),n=e.vm.leavePlan.configuration.filter(function(e){return!e.leaveType.isSick&&!e.leaveType.isPaid&&!e.leaveType.isStatutory}).map(function(e){return e.leaveType.name}),o=e.vm.leavePlan.configuration.filter(function(e){return e.leaveType.isStatutory}).map(function(e){return e.leaveType.name});e.vm.typeHeaders=t.concat(i).concat(n).concat(o)}(),e.vm.headCategories=[],angular.forEach(e.vm.typeHeaders,function(t,i){e.vm.headCategories.push({head:t,category:"OpeningBalance",id:i}),e.vm.headCategories.push({head:t,category:"Accrued",id:i}),e.vm.headCategories.push({head:t,category:"Credits",id:i}),e.vm.headCategories.push({head:t,category:"Consumed",id:i}),e.vm.headCategories.push({head:t,category:"ClosingBalance",id:i})}),e.vm.balanceData=[],angular.forEach(e.vm.leaveBalances,function(t,i){var n=new function(e){this.employeeId=e.employeeId,this.employeeNumber=e.employeeNumber,this.name=e.displayName,this.jobTitle=e.jobTitle,this.department=e.department,this.location=e.location}(t),o=t.typeSummary;angular.forEach(e.vm.typeHeaders,function(e,t){var i=o.find(function(t){return t.type.name==e});i?(n[e.replace(/ /g,"")+"OpeningBalance"+t]=i.openingBalance,n[e.replace(/ /g,"")+"Accrued"+t]=i.accrued,n[e.replace(/ /g,"")+"Credits"+t]=i.credits,n[e.replace(/ /g,"")+"Consumed"+t]=i.consumedInDays,n[e.replace(/ /g,"")+"ClosingBalance"+t]=i.closingBalance):(n[e.replace(/ /g,"")+"OpeningBalance"+t]=0,n[e.replace(/ /g,"")+"Accrued"+t]=0,n[e.replace(/ /g,"")+"Credits"+t]=0,n[e.replace(/ /g,"")+"Consumed"+t]=0,n[e.replace(/ /g,"")+"ClosingBalance"+t]=0)}),e.vm.balanceData.push(n)}),e.vm.balanceDataCopy=angular.copy(e.vm.balanceData),y=[],angular.forEach(e.vm.typeHeaders,function(e,t){var i={field:e.replace(/ /g,"")+"OpeningBalance"+t,displayName:" Opening Balance",cellClass:"ui-grid-cell text-center",category:e,treeAggregationType:u.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=d.formatAggregation(e)},groupingShowGroupingMenu:!1},n={field:e.replace(/ /g,"")+"Accrued"+t,displayName:" Accrued",cellClass:"ui-grid-cell  boder-lt text-center",category:e,treeAggregationType:u.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=d.formatAggregation(e)},groupingShowGroupingMenu:!1},o={field:e.replace(/ /g,"")+"Consumed"+t,displayName:" Consumed",cellClass:"ui-grid-cell text-center",category:e,treeAggregationType:u.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=d.formatAggregation(e)},groupingShowGroupingMenu:!1},r={field:e.replace(/ /g,"")+"Credits"+t,displayName:" Credits",cellClass:"ui-grid-cell text-center",category:e,treeAggregationType:u.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=d.formatAggregation(e)},groupingShowGroupingMenu:!1},a={field:e.replace(/ /g,"")+"ClosingBalance"+t,displayName:" Closing Balance",cellClass:"ui-grid-cell text-center",category:e,treeAggregationType:u.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=d.formatAggregation(e)},groupingShowGroupingMenu:!1};y.push(i),y.push(n),y.push(r),y.push(o),y.push(a)}),e.vm.GridOptions=angular.copy(i.gridSettings),e.vm.GridOptions.headerTemplate="header-templat.html",h=[],h=[{name:"Employee",visible:!0,pinned:"left",displayName:"Employee"}],angular.forEach(e.vm.typeHeaders,function(e,t){h.push({name:e,visible:!0,pinned:"body",displayName:e,field:""})}),e.vm.GridOptions.category=h,e.vm.GridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell ",category:"Employee",pinnedLeft:!0,width:180,enableGrouping:!1},{field:"name",displayName:"Employee Name",cellTemplate:'<div title="{{grid.getCellValue(row,col)}}" class="ui-grid-cell-contents"><a target="_blank" data-ui-sref="employee.time.leaves({id: row.entity.employeeId})"><span>{{grid.getCellValue(row,col)}}</span></a></div>',cellClass:"ui-grid-cell    ",category:"Employee",pinnedLeft:!0,width:180,enableGrouping:!1},{field:"jobTitle",displayName:"Job Title",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell ",category:"Employee",pinnedLeft:!0,width:180,enableGrouping:!1},{field:"department",displayName:"Department",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell ",category:"Employee",pinnedLeft:!0,width:180,enableGrouping:!1},{field:"location",displayName:"Location",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell ",category:"Employee",pinnedLeft:!0,width:180,enableGrouping:!1}],e.vm.GridOptions.columnDefs=e.vm.GridOptions.columnDefs.concat(y),e.vm.GridOptions.showColumnFooter=!0,e.vm.GridOptions.rowHeight=60,e.vm.GridOptions.data="vm.balanceData",e.vm.GridOptions.enableHorizontalScrollbar=!0,e.vm.GridOptions.exporterHeaderFilterUseName=!0,e.vm.GridOptions.columnVirtualizationThreshold=100,e.vm.GridOptions.onRegisterApi=function(t){e.vm.gridApi=t},l.innerWidth>100*e.vm.GridOptions.columnDefs.length?(e.vm.GridOptions.enableHorizontalScrollbar=!1,angular.forEach(e.vm.GridOptions.columnDefs,function(e,t){e.width="*"})):(e.vm.GridOptions.enableHorizontalScrollbar=!0,angular.forEach(e.vm.GridOptions.columnDefs,function(e,t){e.width=180})),e.vm.gridApi&&(e.vm.gridApi.grid.options.category=h),e.vm.gridApi&&e.vm.gridApi.grid.queueGridRefresh()},function(t){e.vm.showLoading=!1})},e.vm.refreshData=function(){e.vm.balanceData=r("filter")(e.vm.balanceDataCopy,e.vm.filterText,!1)};var g=function(){e.vm.selectedRangeCopy.from&&e.vm.selectedRangeCopy.to?e.isDateValid=e.vm.selectedRangeCopy.from<=e.vm.selectedRangeCopy.to:e.isDateValid=!0};e.vm.showLoading=!0,o.getLeavePlans().then(function(t){e.vm.leavePlans=t,e.vm.showLoading=!1})}]),appRoot.controller("AttendanceStatsController",["$scope","AppSettings","OrgAttendanceService","LeaveAttendanceService",function(e,t,i,n){e.vm={},e.vm.lateArrivalsPercentage=0,e.vm.weeklateArrivalsPercentage=0;i.getOrgStats().then(function(i){e.vm.attendanceStats=i.attendanceOrgStats,e.vm.attendanceStats.avgHours=e.vm.attendanceStats.yesterDayAverageHoursPerDayInHHMM||0,e.vm.attendanceStats.weekAvgHours=e.vm.attendanceStats.weekAverageHoursPerDayInHHMM||0,e.vm.attendanceStats.lateCount=e.vm.attendanceStats.yesterDayLateArrivalCount||0,e.vm.attendanceStats.weekLateCount=e.vm.attendanceStats.weekLateArrivalCount||0,e.vm.lateComers=i.lateComers,e.vm.leastWorkedEmployees=i.leastWorkedEmployees,e.vm.lateArrivalsPercentage=e.vm.attendanceStats.yesterDayLateArrival||0,e.vm.weeklateArrivalsPercentage=e.vm.attendanceStats.weekLateArrival||0,e.vm.lateArrivalOptions={chart:t.donutChartOptions,title:{enable:!0,text:"",html:"<span>"+e.vm.lateArrivalsPercentage+"%</span>",class:"chart-title",css:{width:"nullpx",textAlign:"center",top:"50px",position:"relative",color:"white"}}},e.vm.lateArrivalOptions.chart.height=110,e.vm.lateArrivalData=[{key:"Late Arrivals",y:e.vm.lateArrivalsPercentage,color:"#FFFFFF"},{key:"On Time",y:100-e.vm.lateArrivalsPercentage,color:"#F390b6"}],e.vm.weekLateArrivalOptions={chart:t.donutChartOptions,title:{enable:!0,text:"",html:"<span>"+e.vm.weeklateArrivalsPercentage+"%</span>",class:"chart-title",css:{width:"nullpx",textAlign:"center",top:"50px",position:"relative",color:"white"}}},e.vm.weekLateArrivalOptions.chart.height=110,e.vm.weekLateArrivalData=[{key:"Late Arrivals",y:e.vm.weeklateArrivalsPercentage,color:"#FFFFFF"},{key:"On Time",y:100-e.vm.weeklateArrivalsPercentage,color:"#F390b6"}]})}]),appRoot.controller("AttendanceSummaryController",["$scope","AppSettings","AttendanceService","LeaveAttendanceService",function(e,t,i,n){e.vm={},e.vm.currentView="lastweek",e.getAttendanceSummaryStats=function(){n.getAttendanceSummaryStats(e.vm.currentView).then(function(t){e.vm.barOptions={chart:{type:"discreteBarChart",height:90,width:140,x:function(e){return e.label},y:function(e){return e.value},color:function(e){return e.color},showValues:!1,valueFormat:function(e){return e},transitionDuration:300,xAxis:{axisLabel:""},yAxis:{axisLabelDistance:0},tooltipContent:function(e,t,i,n,o){return"<p>"+i+e+"</p>"},showXAxis:!1,showYAxis:!1}},angular.forEach(t.topSlackers,function(e){e.barData=n.getBarData(e.workDuration,"#26c9ff")}),angular.forEach(t.topLateCommers,function(e){e.barData=n.getBarData(e.lateHours,"#aac964")}),angular.forEach(t.frequentBreaks,function(e){e.barData=n.getBarData(e.workDuration,"#ff7373"),e.barData[0].key=" Times"}),e.vm.topSlackers=t.topSlackers,e.vm.topLateCommers=t.topLateCommers,e.vm.frequentBreaks=t.frequentBreaks,e.vm.missingDateEmployees=t.missingDateEmployees})},e.$watch("vm.currentView",function(){e.getAttendanceSummaryStats()})}]),appRoot.controller("AttendanceLateComersController",["$scope","AppSettings","DateServices","AttendanceService","LeaveAttendanceService","$filter","uiGridExporterConstants","FileDownloadService",function(e,t,i,n,o,r,a,s){e.vm={},e.vm.niceScrollOptions=angular.copy(t.scrollSettings),e.vm.datepickerOptions=angular.copy(t.datepickerOptions),e.vm.lateComers=[],e.lateComers=[],e.vm.filterText="",e.vm.dataMessage="Please select dates";var l=(new Date).setTimeSpan({hours:23,minutes:59,seconds:59,ms:0});e.model={},e.model.fromDate=new Date(l.setDate(l.getDate()-30)),e.model.toDate=(new Date).setTimeSpan({hours:23,minutes:59,seconds:59,ms:999});e.getLateComers=function(i,n){o.getLateComers(i?i.dateOnlyString():"",n?n.dateOnlyString():"").then(function(i){e.vm.lateComers=i,e.lateComers=i,e.vm.reverse=!0,e.vm.dataMessage=0==e.vm.lateComers.length?"No data available":"",e.vm.GridOptions=angular.copy(t.gridSettings),e.vm.GridOptions.columnDefs=[{field:"attendanceDate",displayName:"Date",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{grid.getCellValue(row,col) | stringToDate:'mediumDate'}}</span></div>",cellClass:"ui-grid-cell"},{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell"},{field:"displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a data-ui-sref="employee.time.attendance({id: row.entity.employeeId})"><span>{{grid.getCellValue(row,col)}}</span></a></div>',cellClass:"ui-grid-cell"},{field:"jobTitle",displayName:"Job Title"},{field:"department",displayName:"Department"},{field:"orgLocation",displayName:"Location"},{field:"attendanceShift",displayName:"Shift"},{field:"shiftStartTime",displayName:"Shift Start",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{grid.getCellValue(row,col) | stringToDate:'HH:mm'}}</span></div>",cellClass:"ui-grid-cell"},{field:"dayStartTime",displayName:"In Time",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{grid.getCellValue(row,col) | stringToDate:'HH:mm'}}</span></div>",cellClass:"ui-grid-cell"},{field:"lateBy",displayName:"Late By"}],e.vm.GridOptions.rowHeight=50,e.vm.GridOptions.data="vm.lateComers",e.vm.GridOptions.onRegisterApi=function(t){e.vm.gridApi=t}})},e.exportReport=function(t){if(e.vm.lateComers.length>0){var i="/api/reports/ExportAttendanceSummary?name="+"attendancelatecomers"+"&format="+t+"&from="+(e.model&&e.model.fromDate?e.model.fromDate.dateOnlyString():"")+"&to="+(e.model&&e.model.toDate?e.model.toDate.dateOnlyString():"")+"&searchKey="+(e.vm.filterText?e.vm.filterText.trim():"");s.downloadFile(i)}};e.vm.refreshData=function(){e.vm.lateComers=r("filter")(e.lateComers,e.vm.filterText,!1)},e.isDateValid=function(){return new Date(e.model.fromDate).getTime()<=new Date(e.model.toDate).getTime()},e.getLateComers(e.model.fromDate,e.model.toDate)}]),appRoot.controller("AttendanceMissingSwipesController",["$scope","AppSettings","DateServices","AttendanceService","LeaveAttendanceService","$filter","uiGridExporterConstants","FileDownloadService",function(e,t,i,n,o,r,a,s){e.vm={},e.vm.niceScrollOptions=angular.copy(t.scrollSettings),e.vm.datepickerOptions=angular.copy(t.datepickerOptions),e.vm.missingSwipes=[],e.missingSwipes=[],e.vm.filterText="",e.vm.dataMessage="Please select dates";var l=(new Date).setTimeSpan({hours:23,minutes:59,seconds:59,ms:0});e.model={},e.model.fromDate=new Date(l.setDate(l.getDate()-30)),e.model.toDate=(new Date).setTimeSpan({hours:23,minutes:59,seconds:59,ms:999});e.getMissingSwipes=function(i,n){o.getMissingSwipes(i?i.dateOnlyString():"",n?n.dateOnlyString():"").then(function(i){e.vm.missingSwipes=i,e.missingSwipes=i,e.vm.reverse=!0,e.vm.dataMessage=0==e.vm.missingSwipes.length?"No data available":"",e.vm.GridOptions=angular.copy(t.gridSettings),e.vm.GridOptions.columnDefs=[{field:"attendanceDate",displayName:"Date",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{grid.getCellValue(row,col) | stringToDate:'mediumDate'}}</span></div>",cellClass:"ui-grid-cell"},{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell"},{field:"displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a data-ui-sref="employee.time.attendance({id: row.entity.employeeId})"><span>{{grid.getCellValue(row,col)}}</span></a></div>',cellClass:"ui-grid-cell"},{field:"jobTitle",displayName:"Job Title"},{field:"department",displayName:"Department"},{field:"orgLocation",displayName:"Location"},{field:"attendanceShift",displayName:"Shift"},{field:"status",displayName:"Status",cellTemplate:'<div class="ui-grid-cell-contents"><span>Missing Swipe</span></div>',cellClass:"ui-grid-cell"}],e.vm.GridOptions.rowHeight=50,e.vm.GridOptions.data="vm.missingSwipes",e.vm.GridOptions.onRegisterApi=function(t){e.vm.gridApi=t}})},e.exportReport=function(t){if(e.vm.missingSwipes.length>0){var i="/api/reports/ExportAttendanceSummary?name="+"attendancemissingswipes"+"&format="+t+"&from="+(e.model&&e.model.fromDate?e.model.fromDate.dateOnlyString():"")+"&to="+(e.model&&e.model.toDate?e.model.toDate.dateOnlyString():"")+"&searchKey="+(e.vm.filterText?e.vm.filterText.trim():"");s.downloadFile(i)}};e.vm.refreshData=function(){e.vm.missingSwipes=r("filter")(e.missingSwipes,e.vm.filterText,!1)},e.isDateValid=function(){return new Date(e.model.fromDate).getTime()<=new Date(e.model.toDate).getTime()},e.getMissingSwipes(e.model.fromDate,e.model.toDate)}]),appRoot.controller("AttendanceEarlyLeaversController",["$scope","AppSettings","DateServices","AttendanceService","LeaveAttendanceService","$filter","uiGridExporterConstants","FileDownloadService",function(e,t,i,n,o,r,a,s){e.vm={},e.vm.niceScrollOptions=angular.copy(t.scrollSettings),e.vm.datepickerOptions=angular.copy(t.datepickerOptions),e.vm.earlyLeavers=[],e.earlyLeavers=[],e.vm.filterText="",e.vm.dataMessage="Please select dates";var l=(new Date).setTimeSpan({hours:23,minutes:59,seconds:59,ms:0});e.model={},e.model.fromDate=new Date(l.setDate(l.getDate()-30)),e.model.toDate=(new Date).setTimeSpan({hours:23,minutes:59,seconds:59,ms:999});e.getEarlyLeavers=function(i,n){o.getEarlyLeavers(i?i.dateOnlyString():"",n?n.dateOnlyString():"").then(function(i){e.vm.earlyLeavers=i,e.earlyLeavers=i,e.vm.reverse=!0,e.vm.dataMessage=0==e.vm.earlyLeavers.length?"No data available":"",e.vm.GridOptions=angular.copy(t.gridSettings),e.vm.GridOptions.columnDefs=[{field:"attendanceDate",displayName:"Date",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{grid.getCellValue(row,col) | stringToDate:'mediumDate'}}</span></div>",cellClass:"ui-grid-cell"},{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell"},{field:"displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a data-ui-sref="employee.time.attendance({id: row.entity.employeeId})"><span>{{grid.getCellValue(row,col)}}</span></a></div>',cellClass:"ui-grid-cell"},{field:"jobTitle",displayName:"Job Title"},{field:"department",displayName:"Department"},{field:"orgLocation",displayName:"Location"},{field:"attendanceShift",displayName:"Shift"},{field:"shiftEndTime",displayName:"Shift End",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{grid.getCellValue(row,col) | stringToDate:'HH:mm'}}</span></div>",cellClass:"ui-grid-cell"},{field:"dayEndTime",displayName:"Out Time",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{grid.getCellValue(row,col) | stringToDate:'HH:mm'}}</span></div>",cellClass:"ui-grid-cell"},{field:"earlyBy",displayName:"early By"}],e.vm.GridOptions.rowHeight=50,e.vm.GridOptions.data="vm.earlyLeavers",e.vm.GridOptions.onRegisterApi=function(t){e.vm.gridApi=t}})},e.exportReport=function(t){if(e.vm.earlyLeavers.length>0){var i="/api/reports/ExportAttendanceSummary?name="+"attendanceearlyleavers"+"&format="+t+"&from="+(e.model&&e.model.fromDate?e.model.fromDate.dateOnlyString():"")+"&to="+(e.model&&e.model.toDate?e.model.toDate.dateOnlyString():"")+"&searchKey="+(e.vm.filterText?e.vm.filterText.trim():"");s.downloadFile(i)}};e.vm.refreshData=function(){e.vm.earlyLeavers=r("filter")(e.earlyLeavers,e.vm.filterText,!1)},e.isDateValid=function(){return new Date(e.model.fromDate).getTime()<=new Date(e.model.toDate).getTime()},e.getEarlyLeavers(e.model.fromDate,e.model.toDate)}]),appRoot.controller("AttendanceNoShowsController",["$scope","AppSettings","$filter","DateServices","AttendanceService","LeaveAttendanceService","uiGridExporterConstants","FileDownloadService",function(e,t,i,n,o,r,a,s){e.vm={},e.vm.niceScrollOptions=angular.copy(t.scrollSettings),e.vm.datepickerOptions=angular.copy(t.datepickerOptions),e.vm.missingDateEmployees=[],e.missingDateEmployees=[],e.vm.filterText="",e.vm.dataMessage="Please select dates";var l=(new Date).setTimeSpan({hours:23,minutes:59,seconds:59,ms:0});e.model={},e.model.fromDate=new Date(l.setDate(l.getDate()-30)),e.model.toDate=(new Date).setTimeSpan({hours:23,minutes:59,seconds:59,ms:999}),e.model.maxToDate=(new Date).setTimeSpan({hours:23,minutes:59,seconds:59,ms:999});e.getNoShowsEmployees=function(i,n){r.getMissingDatesEmployees(i?i.dateOnlyString():"",n?n.dateOnlyString():"").then(function(i){e.vm.missingDateEmployees=i,e.missingDateEmployees=i,e.vm.dataMessage=0==e.vm.missingDateEmployees.length?"No data available":"",e.vm.GridOptions=angular.copy(t.gridSettings),e.vm.GridOptions.columnDefs=[{field:"attendanceDate",displayName:"Date Attendance Missing",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col) | stringToDate : "mediumDate"}}</span></div>',cellClass:"ui-grid-cell"},{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell"},{field:"displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a data-ui-sref="employee.time.attendance({id: row.entity.employeeId})"><span>{{grid.getCellValue(row,col)}}</span></a></div>',cellClass:"ui-grid-cell"},{field:"jobTitle",displayName:"Job Title",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.jobTitle}}</span></div>',cellClass:"ui-grid-cell"},{field:"department",displayName:"Department",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.department}}</span></div>',cellClass:"ui-grid-cell"},{field:"orgLocation",displayName:"Location",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.orgLocation}}</span></div>',cellClass:"ui-grid-cell"}],e.vm.GridOptions.rowHeight=50,e.vm.GridOptions.data="vm.missingDateEmployees",e.vm.GridOptions.onRegisterApi=function(t){e.vm.gridApi=t}})},e.exportReport=function(t){if(e.vm.missingDateEmployees.length>0){var i="/api/reports/ExportAttendanceSummary?name="+"attendancenoshows"+"&format="+t+"&from="+(e.model&&e.model.fromDate?e.model.fromDate.dateOnlyString():"")+"&to="+(e.model&&e.model.toDate?e.model.toDate.dateOnlyString():"")+"&searchKey="+(e.vm.filterText?e.vm.filterText.trim():"");s.downloadFile(i)}},e.vm.refreshData=function(){e.vm.missingDateEmployees=i("filter")(e.missingDateEmployees,e.vm.filterText,!1)};e.isDateValid=function(){return new Date(e.model.fromDate).getTime()<=new Date(e.model.toDate).getTime()},e.getNoShowsEmployees(e.model.fromDate,e.model.toDate)}]),appRoot.controller("LeaveAttendanceApprovalController",["$scope","AppSettings","LeaveAttendanceService",function(e,t,i){}]),appRoot.controller("AttendanceDailyPerformanceController",["$scope","AppSettings","DateServices","AttendanceService","LeaveAttendanceService","$filter","uiGridExporterConstants","AttendanceDayType","SwipeStatusType","FileDownloadService",function(e,t,i,n,o,r,a,s,l,c){e.vm={},e.vm.niceScrollOptions=angular.copy(t.scrollSettings),e.vm.datepickerOptions=angular.copy(t.datepickerOptions),e.vm.dailyPerformances=[],e.dailyPerformances=[],e.vm.filterText="",e.vm.dataMessage="Please select dates",e.vm.attendanceDayType=s,e.vm.swipeStatusType=l;var p=(new Date).setTimeSpan({hours:23,minutes:59,seconds:59,ms:0});e.model={},e.model.fromDate=new Date(p.setDate(p.getDate()-30)),e.model.toDate=(new Date).setTimeSpan({hours:23,minutes:59,seconds:59,ms:999});e.getStatus=function(t,i){return t!=e.vm.attendanceDayType.workingDay.id?e.vm.attendanceDayType.getById(t).name:i==e.vm.swipeStatusType.fullSwipe.id?"Present":"Missing Swipe"},e.getDailyPerformances=function(i,n){o.getDailyPerformances(i?i.dateOnlyString():"",n?n.dateOnlyString():"").then(function(i){e.vm.dailyPerformances=i,e.dailyPerformances=i,e.vm.reverse=!0,e.vm.dataMessage=0==e.vm.dailyPerformances.length?"No data available":"",e.vm.GridOptions=angular.copy(t.gridSettings),e.vm.GridOptions.columnDefs=[{field:"attendanceDate",displayName:"Date",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{grid.getCellValue(row,col) | stringToDate:'mediumDate'}}</span></div>",cellClass:"ui-grid-cell",width:100,enablePinning:!0,pinnedLeft:!0},{field:"displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a data-ui-sref="employee.time.attendance({id: row.entity.employeeId})"><span>{{grid.getCellValue(row,col)}}</span></a></div>',cellClass:"ui-grid-cell",width:150,enablePinning:!0,pinnedLeft:!0},{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell",width:90},{field:"jobTitle",displayName:"Job Title",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.jobTitle}}</span></div>',cellClass:"ui-grid-cell",width:120},{field:"orgLocation",displayName:"Location",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.orgLocation}}</span></div>',cellClass:"ui-grid-cell",width:120},{field:"department",displayName:"Department",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.department}}</span></div>',cellClass:"ui-grid-cell",width:120},{field:"shiftStartTime",displayName:"Shift Start",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{grid.getCellValue(row,col) | stringToDate:'HH:mm'}}</span></div>",cellClass:"ui-grid-cell",width:80},{field:"dayStartTime",displayName:"In Time",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{grid.getCellValue(row,col) | stringToDate:'HH:mm'}}</span></div>",cellClass:"ui-grid-cell",width:80},{field:"lateBy",displayName:"Late By",width:80},{field:"shiftEndTime",displayName:"Shift End",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{grid.getCellValue(row,col) | stringToDate:'HH:mm'}}</span></div>",cellClass:"ui-grid-cell",width:80},{field:"dayEndTime",displayName:"Out Time",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{grid.getCellValue(row,col) | stringToDate:'HH:mm'}}</span></div>",cellClass:"ui-grid-cell",width:80},{field:"earlyBy",displayName:"Early By",width:80},{field:"status",displayName:"Status",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.getStatus(row.entity.dayType, row.entity.swipeStatus)}}</span></div>',cellClass:"ui-grid-cell",width:100},{field:"effectiveHours",displayName:"Effective Hours",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell",width:140},{field:"totalHours",displayName:"Total Hours",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell",width:120},{field:"breakDuration",displayName:"Break Duration",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell",width:120},{field:"overTime",displayName:"Over Time",width:80}],angular.forEach(e.vm.GridOptions.columnDefs,function(e,t){e.headerTooltip=e.displayName}),e.vm.GridOptions.rowHeight=50,e.vm.GridOptions.data="vm.dailyPerformances",e.vm.GridOptions.onRegisterApi=function(t){e.vm.gridApi=t}})},e.exportReport=function(t){if(e.vm.dailyPerformances.length>0){var i="/api/reports/ExportAttendanceSummary?name="+"attendancedailyreport"+"&format="+t+"&from="+(e.model&&e.model.fromDate?e.model.fromDate.dateOnlyString():"")+"&to="+(e.model&&e.model.toDate?e.model.toDate.dateOnlyString():"")+"&searchKey="+(e.vm.filterText?e.vm.filterText.trim():"");c.downloadFile(i)}};e.vm.refreshData=function(){e.vm.dailyPerformances=r("filter")(e.dailyPerformances,e.vm.filterText,!1)},e.isDateValid=function(){return new Date(e.model.fromDate).getTime()<=new Date(e.model.toDate).getTime()},e.getDailyPerformances(e.model.fromDate,e.model.toDate)}]),appRoot.controller("AttendanceOverTimeController",["$scope","AppSettings","DateServices","AttendanceService","LeaveAttendanceService","$filter","uiGridExporterConstants","FileDownloadService",function(e,t,i,n,o,r,a,s){e.vm={},e.vm.niceScrollOptions=angular.copy(t.scrollSettings),e.vm.datepickerOptions=angular.copy(t.datepickerOptions),e.vm.overTimeDetails=[],e.overTimeDetails=[],e.vm.filterText="",e.vm.dataMessage="Please select dates";var l=(new Date).setTimeSpan({hours:23,minutes:59,seconds:59,ms:0});e.model={},e.model.fromDate=new Date(l.setDate(l.getDate()-30)),e.model.toDate=(new Date).setTimeSpan({hours:23,minutes:59,seconds:59,ms:999});e.getOverTimeDetails=function(i,n){o.getOverTimeDetails(i?i.dateOnlyString():"",n?n.dateOnlyString():"").then(function(i){e.vm.overTimeDetails=i,e.overTimeDetails=i,e.vm.reverse=!0,e.vm.dataMessage=0==e.vm.overTimeDetails.length?"No data available":"",e.vm.GridOptions=angular.copy(t.gridSettings),e.vm.GridOptions.columnDefs=[{field:"attendanceDate",displayName:"Date",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{grid.getCellValue(row,col) | stringToDate:'mediumDate'}}</span></div>",cellClass:"ui-grid-cell"},{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col)}}</span></div>',cellClass:"ui-grid-cell"},{field:"displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a data-ui-sref="employee.time.attendance({id: row.entity.employeeId})"><span>{{grid.getCellValue(row,col)}}</span></a></div>',cellClass:"ui-grid-cell"},{field:"jobTitle",displayName:"Job Title"},{field:"department",displayName:"Department"},{field:"orgLocation",displayName:"Location"},{field:"attendanceShift",displayName:"Shift"},{field:"shiftHours",displayName:"Shift Hours"},{field:"effectiveHours",displayName:"Effective Hours"},{field:"totalHours",displayName:"Total Hours"},{field:"overTime",displayName:"Over Time"}],e.vm.GridOptions.rowHeight=50,e.vm.GridOptions.data="vm.overTimeDetails",e.vm.GridOptions.onRegisterApi=function(t){e.vm.gridApi=t}})},e.exportReport=function(t){if(e.vm.overTimeDetails.length>0){var i="/api/reports/ExportAttendanceSummary?name="+"attendanceovertime"+"&format="+t+"&from="+(e.model&&e.model.fromDate?e.model.fromDate.dateOnlyString():"")+"&to="+(e.model&&e.model.toDate?e.model.toDate.dateOnlyString():"")+"&searchKey="+(e.vm.filterText?e.vm.filterText.trim():"");s.downloadFile(i)}};e.vm.refreshData=function(){e.vm.overTimeDetails=r("filter")(e.overTimeDetails,e.vm.filterText,!1)},e.isDateValid=function(){return new Date(e.model.fromDate).getTime()<=new Date(e.model.toDate).getTime()},e.getOverTimeDetails(e.model.fromDate,e.model.toDate)}]);var LeaveAttendance;__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){var t=function(){return function(e){this.employeeId=e.employeeId,this.employeeNumber=e.employeeNumber,this.displayName=e.displayName}}();e.ReportEmployee=t;var i=function(e){function t(t){var i=e.call(this,t)||this;return i.jobTitle=t.jobTitle,i.location=t.location,i.department=t.department,i.isProccesed=t.isProccesed?"Completed":"Pending",i}return __extends(t,e),t}(t);e.YearEndReportModel=i;var n=function(e){function t(t){var i=e.call(this,t)||this;return i.dateJoined=t.dateJoined,i.department=t.department,i.jobTitle=t.jobTitle,i.location=t.location,i}return __extends(t,e),t}(t);e.LeaveEmployeeDetails=n;var o=function(){return function(){}}();e.YearLine=o}(e.Model||(e.Model={}))}(LeaveAttendance||(LeaveAttendance={})),function(e){!function(t){var i;t.Components||(t.Components={}),i=function(){function t(e,t,i,n,o){var r=this;this._q=e,this.appContext=t,this.appFeatures=i,this.notificationService=n,this.payCodeService=o,this.isButtonDisable=!1,this.init=function(){},this.addPayCode=function(){r.form.payCodeForm.$valid&&r.isNameUnique(r.payCode.name)&&r.isCodeUnique(r.payCode.code)&&(r.isButtonDisable=!0,r.payCodeService.savePayCode(r.payCode).then(function(e){0!=e.id?(r.notificationService.success("Pay code added successfully"),r.payCode.id=e.id,r.modalInstance.close({payCode:r.payCode})):r.notificationService.error("Error in adding pay code"),r.isButtonDisable=!1,r.close()},function(e){r.notificationService.error("Error in adding pay code")}))},this.updatePayCode=function(){r.form.payCodeForm.$valid&&r.isNameUnique(r.payCode.name)&&r.isCodeUnique(r.payCode.code)&&(r.isButtonDisable=!0,r.payCodeService.updatePayCode(r.payCode.id,r.payCode).then(function(e){e.isUpdated?(r.modalInstance.close({payCode:r.payCode}),r.notificationService.success("Pay code updated successfully")):r.notificationService.error("Error in updating pay code"),r.isButtonDisable=!1,r.close()},function(e){r.notificationService.error("Error in updating pay code")}))},this.isNameUnique=function(e){if(e){var t=r._q.defer();return angular.isDefined(r.payCode.id)&&e.toLowerCase()==r.payCodeCopy.name.toLowerCase()?t.resolve(!0):r.payCodeService.doesNameExists(e,r.payCode.id).then(function(e){e.isExist?t.resolve(!1):t.resolve(!0)}),t.promise}},this.isCodeUnique=function(e){if(e){var t=r._q.defer();return angular.isDefined(r.payCode.id)&&e.toLowerCase()==r.payCodeCopy.name.toLowerCase()?t.resolve(!0):r.payCodeService.doesCodeExists(e,r.payCode.id).then(function(e){e.isExist?t.resolve(!1):t.resolve(!0)}),t.promise}},this.close=function(){r.modalInstance.dismiss()},this.init()}return t.prototype.$onInit=function(){this.payCode=null==this.payCode?new e.PayCodes.Models.PayCode({}):angular.copy(this.payCode),this.payCodeCopy=angular.copy(this.payCode),this.hasPayrollFeature=this.appContext.isFeaturePresent(this.appFeatures.Payroll.title)},t.$inject=["$q","AppContext","AppFeatures","NotificationService","PayCodeService"],t}(),angular.module("payroll").component("addPayCode",{templateUrl:"addPayCode",controller:i,controllerAs:"ctrl",bindings:{payCode:"<",modalInstance:"<"}})}(e.PayCodes||(e.PayCodes={}))}(Payroll||(Payroll={})),function(e){!function(e){!function(e){var t=function(){return function(e){this.id=e.id,this.name=e.name,this.description=e.description,this.code=e.code,this.codeFactor=e.codeFactor}}();e.PayCode=t}(e.Models||(e.Models={}))}(e.PayCodes||(e.PayCodes={}))}(Payroll||(Payroll={})),function(e){!function(e){var t,i;e.Components||(e.Components={}),t=function(){function e(e,t,i,n,o,r,a,s){var l=this;this._scope=e,this.appContext=t,this.appFeatures=i,this.appSettings=n,this._modal=o,this.dialogs=r,this.notificationService=a,this.payCodeService=s,this.payCodes=[],this.isPayCodeEdit=!1,this.refreshGrid=!1,this.init=function(){l.hasPayrollFeature=l.appContext.isFeaturePresent(l.appFeatures.Payroll.title),l.initializeGridSettings(),l.payCodeService.getPayCodes().then(function(e){l.payCodes=e})},this.initializeGridSettings=function(){l.payCodesGridOptions=angular.copy(l.appSettings.gridSettings),l.payCodesGridOptions.columnDefs=[{field:"name",displayName:"NAME",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-class="{\'align-cell-text\': row.entity.description}"><ul class="list-unstyled"><li><span>{{row.entity.name}}</span></li><li><span>{{row.entity.description}}</span></li></ul></div>',sort:{direction:"asc",priority:1}},{field:"payCode",displayName:"Pay Code",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span class="text-center">{{row.entity.code}}<p></p></span></div>'},{field:"payFactor",displayName:"Pay Factor",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span class="pull-left text-center"><span>{{row.entity.codeFactor}} X Hourly Pay</span></span></div>'},{name:"Actions",displayName:"ACTIONS",enableSorting:!1,cellClass:"ui-grid-cell cell-tooltip ui-grid-cell-contents",cellTemplate:'<div class="ui-grid-cell-options"><span class="clearfix"><ul class="action-items list-inline" style="positssion:relative"><li class="list-item"><a data-ng-click="grid.appScope.ctrl.editPayCode(row.entity);" class="list-link"><span class="icon-pencil5" uib-tooltip="Edit" tooltip-placement="left"></span></a></li><li class="list-item" data-ng-if="false"><a class="list-link" data-ng-click="grid.appScope.ctrl.deletePayCode(row.entity);"><span class="icon-remove3" uib-tooltip="Delete" tooltip-placement="right"></span></a></li></ul></span></div>'}],l.hasPayrollFeature||(l.payCodesGridOptions.columnDefs=l.payCodesGridOptions.columnDefs.filter(function(e){return"payFactor"!=e.field})),l.payCodesGridOptions.data="ctrl.payCodes",l.payCodesGridOptions.rowHeight=60},this.addPayCode=function(){l.payCode=null,l.isPayCodeEdit=!1,l.openAddPayCodePopup()},this.editPayCode=function(e){l.payCode=angular.copy(e),l.isPayCodeEdit=!0,l.openAddPayCodePopup()},this.openAddPayCodePopup=function(){l.modalInstance=l._modal.open({template:'<add-pay-code pay-code=ctrl.payCode modal-instance="ctrl.modalInstance"></add-pay-code>',windowClass:"paycode-edit structure-compare small-btn",scope:l._scope}),l.modalInstance.result.then(function(e){if(l.refreshGrid=!0,l.isPayCodeEdit){var t=l.payCodes.findIndex(function(t){return t.id==e.payCode.id});l.payCodes.splice(t,1,e.payCode)}else l.payCodes.push(e.payCode);l.refreshGrid=!1})},this.deletePayCode=function(e){l.dialogs.confirm("Confirm Deletion","Are you sure you want to delete '"+e.name+"'.").result.then(function(){l.payCodeService.deletePayCode(e.id).then(function(t){t.isDeleted?(l.refreshGrid=!0,l.payCodes=l.payCodes.filter(function(t){return t.id!=e.id}),l.notificationService.success("Pay code deleted successfully")):l.notificationService.error("Cannot delete Pay code for some reason"),l.refreshGrid=!1},function(e){l.notificationService.error("Error in deleting pay code")})})},this.init()}return e.$inject=["$scope","AppContext","AppFeatures","AppSettings","$uibModal","dialogs","NotificationService","PayCodeService"],e}(),i=function(){return function(){}}(),angular.module("payroll").component("payCodes",{templateUrl:"/paycode/paycodes",controller:t,controllerAs:"ctrl"}),angular.module("payroll").controller("OvertimeController",i)}(e.PayCodes||(e.PayCodes={}))}(Payroll||(Payroll={})),function(e){!function(e){!function(e){var t=function(){function e(e){var t=this;this._resource=e,this.getPayCodes=function(){return t.payCodes.query({action:"all"}).$promise},this.getPayCode=function(e){return t.payCodes.get({action:"paycode",id:e}).$promise},this.savePayCode=function(e){return t.payCodes.save({action:"paycode"},e).$promise},this.updatePayCode=function(e,i){return t.payCodes.update({action:"paycode",id:e},i).$promise},this.deletePayCode=function(e){return t.payCodes.delete({action:"paycode",id:e}).$promise},this.doesNameExists=function(e,i){return t.payCodes.get({action:"paycode/doesnameexists",name:e,id:i||0}).$promise},this.doesCodeExists=function(e,i){return t.payCodes.get({action:"paycode/doescodeexists",code:e,id:i||0}).$promise},this.payCodes=this._resource("/api/paycodesettings/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.$inject=["$resource"],e}();e.PayCodeService=t,angular.module("payroll").service("PayCodeService",t)}(e.Services||(e.Services={}))}(e.PayCodes||(e.PayCodes={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(t){var i=function(){return function(e,t,i){this.id=e,this.minimum=t,this.maximum=i}}();t.SalaryRange=i;var n=function(){return function(e,t,i,n,o,r,a,s,l,c){void 0===l&&(l=[]),this.canUpdateMonthly=e,this.updateBeforeDay=t,this.cutOffMonth=i,this.cutOffDay=n,this.remindEmployees=o,this.requireProofSubmission=r,this.proofSubmissionDueDay=a,this.proofSubmissionDueMonth=s,this.ipAddressRange=l,this.requireValidation=c}}();t.ITDeclarationSettings=n;var o=function(){return function(e){this.from=e.from,this.to=e.to}}();t.IpAddressRange=o;var r=function(){return function(e,t,i,n,o){this.id=e,this.name=t,this.value=i,this.isTaxable=n,this.employees=o}}();t.BenefitView=r;var a=function(){return function(e){this.id=e.id,this.benefitConfigurationId=e.benefitConfigurationId,this.employeeId=e.employeeId,this.salaryStructureIdentifier=e.salaryStructureIdentifier,this.title=e.title,this.amount=e.amount,this.taxAmount=e.taxAmount,this.financialYear=e.financialYear}}();t.EmployeeBenefit=a;var s=function(e){function t(t){var i=e.call(this,t)||this;return i.employeeName=t.employeeName,i}return __extends(t,e),t}(a);t.EmployeeBenefitView=s;var l=function(){return function(e){this.id=e.id,this.title=e.title,this.showMonetaryBenefitToEmployee=e.showMonetaryBenefitToEmployee||!1,this.employeePaysTax=e.employeePaysTax||!1,this.description=e.description,this.attachments=e.attachments||[],this.taxable=e.taxable||!1,this.benefitType=e.benefitType}}();t.BenefitConfiguration=l;var c=function(){return function(e){this.items=e.items}}();t.BenefitsConfiguration=c,function(e){e[e.UsePerquisiteExpression=0]="UsePerquisiteExpression",e[e.UseSalaryExpression=1]="UseSalaryExpression",e[e.UseMinimumAmountExpresion=2]="UseMinimumAmountExpresion",e[e.UseMaxAmountExpresion=3]="UseMaxAmountExpresion"}(t.BenefitTaxableIncomeExpressionUsedType||(t.BenefitTaxableIncomeExpressionUsedType={})),function(e){e[e.DefinedAtEmployeeLevel=0]="DefinedAtEmployeeLevel",e[e.FixedAmount=1]="FixedAmount",e[e.FormulaBased=2]="FormulaBased"}(t.BenefitAmountCalculationType||(t.BenefitAmountCalculationType={})),t.BenefitTypes={get LeasedAccomodation(){return{name:"leasedaccomodation",title:"Leased Accomodation"}},get HotelAccomodation(){return{name:"hotelaccomodation",title:"Hotel Accomodation"}},get CarLease(){return{name:"carlease",title:"Car Lease"}},get SupplyGasElectricWater(){return{name:"supplygaselectricwater",title:"Supply Gas Electric Water"}},get ConcessionalEducation(){return{name:"concessionaleducation",title:"Concessional Education"}},get ConcessionalJourneys(){return{name:"concessionaljourneys",title:"Concessional Journeys"}},get SalaryHelpers(){return{name:"salaryhelpers",title:"Salary Helpers"}},get ConcessionalLoans(){return{name:"concessionalloans",title:"Concessional Loans"}},get GiftVoucher(){return{name:"giftvoucher",title:"Gift Voucher"}},get CCExpenses(){return{name:"ccexpenses",title:"CC Expenses"}},get ClubMembership(){return{name:"clubmembership",title:"Club Membership"}},get Others(){return{name:"Others",title:"Others"}}},Object.defineProperty(t.BenefitTypes,"getAll",{value:function(){var e=this;return Object.keys(this).map(function(t){return e[t]})},enumerable:!1,configurable:!1});var p=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t}(SharedModel.ExportReport);t.PayrollExportReport=p;var u=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),Object.defineProperty(t.prototype,"name",{get:function(){return SharedModel.EmployeeReportType[SharedModel.EmployeeReportType.FinancialDetails]},enumerable:!0,configurable:!0}),t}(p);t.EmployeeFinancialReport=u;var d=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),Object.defineProperty(t.prototype,"name",{get:function(){return SharedModel.EmployeeReportType[SharedModel.EmployeeReportType.EmployeeBenefits]},enumerable:!0,configurable:!0}),t}(p);t.EmployeeBenefitsReport=d;var m,y=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),Object.defineProperty(t.prototype,"name",{get:function(){return SharedModel.EmployeeReportType[SharedModel.EmployeeReportType.EmployeeCurrentSalaryDetails]},enumerable:!0,configurable:!0}),t}(p);t.EmployeeCurrentSalaryReport=y,function(e){e[e.None=0]="None",e[e.NotSubmitted=1]="NotSubmitted",e[e.Submitted=2]="Submitted",e[e.Accepted=3]="Accepted",e[e.Rejected=4]="Rejected"}(m=t.DeductionStatus||(t.DeductionStatus={}));var h=function(){return function(e){this.declarations=e.declarations.map(function(e){return new t.EmployeeDeclaration(e)}),this.groupedTaxSections=e.groupedTaxSections}}();t.EmployeeDeclarations=h;var f=function(){function e(e){this.name=e.name,this.location=e.location,this.uploadedOn=e.uploadedOn,this.uploadedBy=e.uploadedBy}return Object.defineProperty(e.prototype,"pdfURl",{get:function(){return this.location.replace(/\..+$/,"").replace("taxbills/","documents/converted/")+".pdf"},enumerable:!0,configurable:!0}),e}();t.AttachedDocuments=f;var g=function(){function e(e){this.name=e.name,this.address=e.address,this.isVerified=e.isVerified,this.signedDeclaration=e.signedDeclaration?new f(e.signedDeclaration):null,this.isSameAddress=e.isSameAddress||!1,this.hasPan=null!=e.pan&&"GOVERNMENT"!=e.pan&&"NONRESDENT"!=e.pan&&"OTHERVALUE"!=e.pan,this.pan=this.hasPan?e.pan:null,this.panOption=this.hasPan?null:e.panOption||e.pan}return e.prototype.toJSON=function(){var e=Object.assign({},this);return e.pan=e.hasPan?e.pan:e.panOption,e},e}();t.LandlordInfo=g;var v=function(){return function(e){this.name=e.name,this.status=e.status,this.amount=e.amount,this.comment=e.comment,this.approverId=e.approverId,this.approverName=e.approverName,this.approvedOn=e.approvedOn,this.attachedDocuments=null!=e.attachedDocuments?e.attachedDocuments.map(function(e){return new f(e)}):[]}}();t.Deduction=v;var S=function(){return function(e,t){this.againstDeduction=e,this.claimedAmount=t}}();t.DeductionClaim=S;var C=function(e){function t(t){var i=e.call(this,t.againstDeduction,t.claimedAmount)||this;return i.againstDeduction="incomefromhouseproperty",i.letOutHouseProperties={},Object.keys(t.letOutHouseProperties||{}).forEach(function(e){var n=t.letOutHouseProperties[e];i.letOutHouseProperties[n.houseIdentifier]=n}),i}return __extends(t,e),t}(S);t.IncomeFromHousePropertyClaim=C;var w=function(e){function t(t){var i=e.call(this,t.againstDeduction,t.claimedAmount)||this;return i.againstDeduction="houseRent",i.rentDetails={},Object.keys(t.rentDetails||{}).forEach(function(e){var n=t.rentDetails[e];i.rentDetails[n.houseIdentifier]=n}),i}return __extends(t,e),t}(S);t.HouseRentClaim=w;var b=function(e){function i(i){var n=e.call(this,i.againstDeduction,i.claimedAmount)||this;return n.againstDeduction="homeloaninterest",n.homeloanInterests={},Object.keys(i.homeloanInterests||{}).forEach(function(e){var o=i.homeloanInterests[e];n.homeloanInterests[o.houseIdentifier]=new t.Finance.HomeLoanInterest(o)}),n}return __extends(i,e),i}(S);t.HouseLoanClaim=b;var P=function(e){function t(t){var i=e.call(this,t.againstDeduction,t.claimedAmount)||this;return i.againstDeduction="incomefromothersources",i.otherSources=t.otherSources,i}return __extends(t,e),t}(S);t.IncomeFromOtherSourcesClaim=P;var T=function(){return function(e){this.landlordInfo=e.landlordInfo,this.rentPaid=e.rentPaid,this.deductionStatus=e.deductionStatus}}();t.HRADeduction=T;var D=function(){return function(i){this.id=i.id,this.employeeId=i.employeeId,this.pendingApporval=i.pendingApporval,this.deductions=i.deductions.map(function(e){return new v(e)}),this.deductionClaims=i.deductionClaims.map(function(e){return"incomefromhouseproperty"==e.againstDeduction?new C(e):"houseRent"==e.againstDeduction?new w(e):"homeloaninterest"==e.againstDeduction?new b(e):"incomefromothersources"==e.againstDeduction?new P(e):new S(e.againstDeduction,e.claimedAmount)}),this.updatedOn=i.updatedOn,this.deductionsUnderHouseProperty=new t.Finance.DeductionsUnderHouseProperty(i.deductionsUnderHouseProperty),this.deductionsFromOtherSources=new e.Model.Finance.IncomeFromOtherSources(i.deductionsFromOtherSources)}}();t.Declaration=D;var I=function(e){function t(t){var i=e.call(this,t)||this;return i.displayName=t.displayName,i.updatedOn=t.updatedOn,i.employeeNumber=t.employeeNumber,i}return __extends(t,e),Object.defineProperty(t.prototype,"pendingClaim",{get:function(){return this.deductions.filter(function(e){return e.status==m.Submitted}).reduce(function(e,t){return e+t.amount},0)+Math.abs(this.deductionsUnderHouseProperty.pendingClaim)+Math.abs(this.deductionsFromOtherSources.pendingClaim)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"approvedClaim",{get:function(){return this.deductionClaims.reduce(function(e,t){return e+t.claimedAmount},0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"requestedClaim",{get:function(){return this.deductions.reduce(function(e,t){return e+t.amount},0)+Math.abs(this.deductionsUnderHouseProperty.requestedClaim)+Math.abs(this.deductionsFromOtherSources.totalAmount)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rejectedClaim",{get:function(){return this.deductions.filter(function(e){return e.status==m.Rejected}).reduce(function(e,t){return e+t.amount},0)+Math.abs(this.deductionsUnderHouseProperty.rejectedClaim)+Math.abs(this.deductionsFromOtherSources.rejectedClaim)},enumerable:!0,configurable:!0}),t.prototype.getReviewDocsCount=function(){return this.deductions.reduce(function(e,t){return e+t.attachedDocuments.length},0)+this.deductionsUnderHouseProperty.getReviewDocsCount()+this.deductionsFromOtherSources.attachedDocuments.length},t}(D);t.EmployeeDeclaration=I;var A=function(){function e(e){this.displayName=e.displayName,this.employeeId=e.employeeId,this.employeeNumber=e.employeeNumber,this.taxDeductions=e.taxDeductions||[]}return Object.defineProperty(e.prototype,"pendingClaim",{get:function(){return this.taxDeductions.filter(function(e){return e.status==m.Submitted}).reduce(function(e,t){switch(t.declarationheadType){case"letOutProperty":return e+(t.netAnnualRentReceived+t.interestOnLoanAmount)||0;default:return e+(t.amount||0)}},0)},enumerable:!0,configurable:!0}),e.prototype.getPendingDocsCount=function(){return this.taxDeductions.filter(function(e){return e.status==m.Submitted}).reduce(function(e,t){return e+t.attachedDocuments.length},0)},Object.defineProperty(e.prototype,"approvedClaim",{get:function(){return this.taxDeductions.filter(function(e){return null!=e.claim}).reduce(function(e,t){switch(t.declarationheadType){case"letOutProperty":return e+t.claim.netAnnualRentReceived+t.claim.interestOnLoanAmount;case"houseRental":return e+t.claim.rentPaid;case"homeloanInterest":return e+t.claim.interestAmount;default:return e+t.claim.claimedAmount}},0)},enumerable:!0,configurable:!0}),e.prototype.getapprovedDocsCount=function(){return this.taxDeductions.filter(function(e){return e.status==m.Accepted}).reduce(function(e,t){return e+t.attachedDocuments.length},0)},Object.defineProperty(e.prototype,"requestedClaim",{get:function(){return this.taxDeductions.reduce(function(e,t){switch(t.declarationheadType){case"letOutProperty":return e+(t.netAnnualRentReceived+t.interestOnLoanAmount)||0;default:return e+(t.amount||0)}},0)},enumerable:!0,configurable:!0}),e.prototype.getrequestedDocsCount=function(){return this.taxDeductions.reduce(function(e,t){return e+t.attachedDocuments.length},0)},Object.defineProperty(e.prototype,"rejectedClaim",{get:function(){return this.taxDeductions.filter(function(e){return e.status==m.Rejected}).reduce(function(e,t){switch(t.declarationheadType){case"letOutProperty":return e+(t.netAnnualRentReceived+t.interestOnLoanAmount)||0;default:return e+(t.amount||0)}},0)},enumerable:!0,configurable:!0}),e.prototype.getrejectedDocsCount=function(){return this.taxDeductions.filter(function(e){return e.status==m.Rejected}).reduce(function(e,t){return e+t.attachedDocuments.length},0)},e}();t.ReviewDeclaration=A;var E=function(){function e(e){this.name=e.name,this.description=e.description,this.title=e.title,this.maxLimit=e.maxLimit,this.taxDeductions=null!=e.taxDeductions?e.taxDeductions.map(function(e){return new M(e)}):[],this.currentDeductionIdenitifer=e.currentDeductionIndex||0,this.accordionOpen=!0}return e.prototype.addTaxDeduction=function(e){this.taxDeductions.push(e)},Object.defineProperty(e.prototype,"currentTaxDeduction",{get:function(){return this.currentDeductionIdenitifer<this.taxDeductions.length?this.taxDeductions[this.currentDeductionIdenitifer]:null},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"setNextTaxDeduction",{get:function(){return this.currentDeductionIdenitifer<this.taxDeductions.length-1&&(this.currentDeductionIdenitifer++,!0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"setPreviousTaxDeduction",{get:function(){return this.currentDeductionIdenitifer>0&&(this.currentDeductionIdenitifer--,!0)},enumerable:!0,configurable:!0}),e}();t.GroupedTaxSections=E;var R=function(){return function(e){this.name=e.name,this.deductions=null!=e.deductions?e.deductions.map(function(e){return new x(e)}):[],this.maxLimit=e.maxLimit||0}}();t.TaxSection=R;var x=function(){return function(e){this.name=e.name,this.description=e.description,this.section=e.section,this.title=e.title,this.availableToUser=e.availableToUser||!0,this.readOnly=e.readOnly||!1,this.maxLimit=e.maxLimit}}();t.TaxSectionDeduction=x;var M=function(e){function t(t){var i=e.call(this,t)||this;return i.title=t.title,i.section=t.section,i.claim=t.claim,i.currentAttachmentIndex=0,i.maxLimit=t.maxLimit,i.comment=t.comment,i.approverId=t.approverId,i.approverName=t.approverName,i.approvedOn=t.approvedOn,i}return __extends(t,e),t.prototype.setAdjustedAmount=function(){this.status!=m.Submitted&&this.status!=m.Rejected||(this.adjustedAmount=this.amount)},Object.defineProperty(t.prototype,"currentPdfURl",{get:function(){var e=this.currentAttachment;return e?e.pdfURl:""},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"currentAttachment",{get:function(){return this.attachedDocuments[this.currentAttachmentIndex]},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isPreviousDocumentAvailable",{get:function(){return this.currentAttachmentIndex>0},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isNextDocumentAvailable",{get:function(){return this.currentAttachmentIndex<this.attachedDocuments.length-1},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"fullTitle",{get:function(){return this.section+" "+this.title},enumerable:!0,configurable:!0}),t.prototype.getPreviousDocument=function(){this.isPreviousDocumentAvailable&&this.currentAttachmentIndex--},t.prototype.setCurrentAttachment=function(e){e>=0&&e<=this.attachedDocuments.length&&(this.currentAttachmentIndex=e)},t.prototype.getNextDocument=function(){this.isNextDocumentAvailable&&this.currentAttachmentIndex++},t.prototype.toJSON=function(){return{name:this.name,status:this.status,amount:this.adjustedAmount,attachedDocuments:this.attachedDocuments,comment:this.comment}},t}(v);t.TaxDeductionHead=M;var N=function(e){function t(t){var i=e.call(this,t)||this;return i.landlordInfo=new g(t.landlordInfo),i.city=t.city,i.to=t.to,i.from=t.from,i.rentalAttachments=t.rentalAttachments||[],i.originalRentDetails=t.originalRentDetails,i.comment=t.comment,i.approverId=t.approverId,i.approverName=t.approverName,i.approvedOn=t.approvedOn,i.attachedDocuments=i.attachedDocuments.concat(i.rentalAttachments),null!=i.landlordInfo.signedDeclaration&&i.attachedDocuments.push(i.landlordInfo.signedDeclaration),i}return __extends(t,e),Object.defineProperty(t.prototype,"fullTitle",{get:function(){return this.section+" "+this.from.toMMMyyyy()+" - "+this.to.toMMMyyyy()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"declarationheadType",{get:function(){return"houseRental"},enumerable:!0,configurable:!0}),t.prototype.toJSON=function(){return{houseIdentifier:this.name,rentPaid:this.amount,address:this.title,city:this.city,landlordInfo:this.landlordInfo,attachedDocuments:this.attachedDocuments,status:this.status,to:this.to.dateOnlyString(),from:this.from.dateOnlyString(),comment:this.comment}},t}(M);t.HouseRentTaxDeductionHead=N;var O=function(e){function i(t){var i=e.call(this,t)||this;return i.houseLoanType=t.houseLoanType,i.originalHomeLoanDetails=t.originalHomeLoanDetails,null!=i.claim&&(i.claim.address=i.title,i.claim.houseLoanTypeName=i.houseLoanTypeName),i}return __extends(i,e),Object.defineProperty(i.prototype,"declarationheadType",{get:function(){return"homeloanInterest"},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"houseLoanTypeName",{get:function(){return t.Finance.HouseLoanType[this.houseLoanType]},enumerable:!0,configurable:!0}),i.prototype.toJSON=function(){return{interestAmount:this.adjustedAmount||this.amount,address:this.title,houseLoanType:this.houseLoanType,attachedDocuments:this.attachedDocuments,status:this.status,comment:this.comment}},i}(M);t.HomeLoanInterestTaxDeductionHead=O;var k=function(e){function t(t){var i=e.call(this,t)||this;return i.annualRentReceived=t.annualRentReceived,i.municipalTaxesPaid=t.municipalTaxesPaid,i.unrealizedRent=t.unrealizedRent,i.interestOnLoanAmount=t.interestOnLoanAmount,i.originalLetOutProperty=t.originalLetOutProperty,i}return __extends(t,e),Object.defineProperty(t.prototype,"declarationheadType",{get:function(){return"letOutProperty"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"netAnnualRentReceived",{get:function(){return this.annualRentReceived-(this.municipalTaxesPaid||0)-(this.unrealizedRent||0)},set:function(e){},enumerable:!0,configurable:!0}),t.prototype.toJSON=function(){return{address:this.title,houseIdentifier:this.name,annualRentReceived:this.annualRentReceived,municipalTaxesPaid:this.municipalTaxesPaid,unrealizedRent:this.unrealizedRent,interestOnLoanAmount:this.interestOnLoanAmount,attachedDocuments:this.attachedDocuments,status:this.status,comment:this.comment}},t}(M);t.IncomeFromHousePropertyTaxDeductionHead=k;var F=function(e){function t(t){var i=e.call(this,t)||this;return i.interestIncome=t.interestIncome,i.commissionIncome=t.commissionIncome,i.agriculturalIncome=t.agriculturalIncome,i.otherProfessionalIncome=t.otherProfessionalIncome,i.gamblingIncome=t.gamblingIncome,i.amount=i.interestIncome+i.commissionIncome+i.agriculturalIncome+i.otherProfessionalIncome+i.gamblingIncome,i.originalIncomeFromOtherSources=t.originalIncomeFromOtherSources,i}return __extends(t,e),Object.defineProperty(t.prototype,"declarationheadType",{get:function(){return"incomefromothersources"},enumerable:!0,configurable:!0}),t.prototype.toJSON=function(){return{interestIncome:this.interestIncome,commissionIncome:this.commissionIncome,agriculturalIncome:this.agriculturalIncome,gamblingIncome:this.gamblingIncome,otherProfessionalIncome:this.otherProfessionalIncome,attachedDocuments:this.attachedDocuments,status:this.status,comment:this.comment}},t}(M);t.IncomeFromOtherSourcesTaxDedudctionHead=F;var $=function(){return function(e){this.isOpen=e.isOpen,this.title=e.title,this.deductions=e.deductions}}();t.DeductionGroupViewModel=$;var G=function(){return function(e){this.paymentFor=e.paymentFor,this.paymentForName=e.paymentForName,this.title=e.title,this.pendingPayments=e.pendingPayments||[],this.batches=e.batches?e.batches.map(function(e){return new L(e)}):[],this.totalPendingAmount=this.pendingPayments.reduce(function(e,t){return e+t.amount},0),this.totalPendingEmployees=this.pendingPayments.length,this.totalEmployees=this.totalPendingEmployees+this.batches.reduce(function(e,t){return e+t.totalEmployees},0),this.totalAmount=this.totalPendingAmount+this.batches.reduce(function(e,t){return e+t.totalAmount},0)}}();t.EmployeePayables=G;var L=function(){return function(e){var t=this;this.addPayment=function(e){t.paymentFor==e.paymentFor&&null==e.batchId&&(e.batchId=t.id,t.totalAmount+=e.amount,t.totalEmployees++,t.payments.push(e))},this.addPayments=function(e){e.forEach(function(e){return t.addPayment(e)})},this.deletePayment=function(e){if(t.paymentFor==e.paymentFor&&e.batchId==t.id)return t.payments=t.payments.filter(function(t){return t.id!=e.id}),e.batchId=null,t.totalAmount-=e.amount,t.totalEmployees--,e},this.id=e.id,this.cycleId=e.cycleId,this.name=e.name,this.description=e.description,this.status=e.status||q.UnPaid,this.paymentFor=e.paymentFor,this.paymentForName=e.paymentForName,this.payments=e.payments?e.payments.map(function(e){return new U(e)}):[],this.disbursalWithInPayroll=void 0==e.disbursalWithInPayroll||e.disbursalWithInPayroll,this.totalEmployees=this.payments.length,this.totalAmount=this.payments.reduce(function(e,t){return e+t.amount},0)}}();t.BatchPayment=L;var q,j,B,U=function(){function e(e){this.employeeName=e.employeeName,this.employeeNumber=e.employeeNumber,this.monthName=e.monthName,this.employeeId=e.employeeId,this.id=e.id,this.cycleId=e.cycleId,this.batchId=e.batchId,this.amount=e.amount,this.status=e.status,this.paymentFor=e.paymentFor,this.jobTitle=e.jobTitle,this.bankDetails=e.bankDetails,this.department=e.department,this.paymentForName=e.paymentForName,this.disbursalWithInPayroll=e.disbursalWithInPayroll||!0;var t=e.exitDate?Date.getDateObj(e.exitDate):new Date;this.experience=e.experience||Date.noOfDays(Date.getDateObj(e.dateJoined),t.getTime()>(new Date).getTime()?new Date:t)}return Object.defineProperty(e.prototype,"paymentMode",{get:function(){return j[this.bankDetails.salaryPaymentMode]},enumerable:!0,configurable:!0}),e}();t.Payment=U,function(e){e[e.None=0]="None",e[e.Salary=1]="Salary",e[e.Bonus=2]="Bonus",e[e.Reimbursement=3]="Reimbursement",e[e.SalaryComponent=4]="SalaryComponent",e[e.CashAdvance=5]="CashAdvance"}(t.PaymentFor||(t.PaymentFor={})),function(e){e[e.UnPaid=0]="UnPaid",e[e.Paid=1]="Paid"}(q=t.PaymentStatus||(t.PaymentStatus={})),function(e){e[e.None=0]="None",e[e.BankTransfer=1]="BankTransfer",e[e.Cheque=2]="Cheque",e[e.Cash=3]="Cash"}(j=t.SalaryPaymentMode||(t.SalaryPaymentMode={})),function(e){e[e.Original=0]="Original",e[e.Revised=1]="Revised"}(t.Form24Type||(t.Form24Type={})),function(e){e[e.None=0]="None",e[e.Requested=1]="Requested",e[e.GenerationStarted=2]="GenerationStarted",e[e.GenerationCompleted=3]="GenerationCompleted"}(B=t.Form24QGenerationStatus||(t.Form24QGenerationStatus={}));var _=function(){return function(e){var t=this;this.update=function(e){t.constructor(e)},this.id=e.id,this.employeeId=e.employeeId,this.employeeName=e.employeeName,this.employeeNumber=e.employeeNumber,this.grossSalary=e.grossSalary,this.monthlyRegularTDS=e.monthlyRegularTDS,this.amount=e.amount,this.comment=e.comment,this.approverId=e.approverId,this.approverName=e.approverName,this.approvedOn=e.approvedOn,this.overrideRange=new J(e.overrideRange||{}),this.status=e.status||H.NotStarted}}();t.IncomeTaxOverride=_;var H,V,Y=function(){return function(e){var t=this;this.update=function(e){t.constructor(e)},this.id=e.id,this.employeeId=e.employeeId,this.fullName=e.fullName,this.employeeNumber=e.employeeNumber,this.grossSalary=e.grossSalary,this.monthlyRegularESI=e.monthlyRegularESI,this.monthlyRegularESIEmployer=e.monthlyRegularESIEmployer,this.employeeContribution=e.employeeContribution,this.employerContribution=e.employerContribution,this.comment=e.comment,this.approverId=e.approverId,this.approverName=e.approverName,this.approvedOn=e.approvedOn,this.overrideRange=new J(e.overrideRange||{}),this.status=e.status||V.NotStarted}}();t.ESIOverride=Y,function(e){e[e.NotStarted=0]="NotStarted",e[e.InProgress=1]="InProgress",e[e.Completed=2]="Completed"}(H=t.TDSOverrideStatus||(t.TDSOverrideStatus={})),function(e){e[e.NotStarted=0]="NotStarted",e[e.InProgress=1]="InProgress",e[e.Completed=2]="Completed"}(V=t.ESIOverrideStatus||(t.ESIOverrideStatus={}));var z,W=function(){return function(e){var t=this;this.update=function(e){t.constructor(e)},this.id=e.id,this.employeeId=e.employeeId,this.employeeName=e.employeeName,this.employeeNumber=e.employeeNumber,this.grossSalary=e.grossSalary,this.monthlyRegularPT=e.monthlyRegularPT,this.amount=e.amount,this.comment=e.comment,this.approverId=e.approverId,this.approverName=e.approverName,this.approvedOn=e.approvedOn,this.overrideRange=new J(e.overrideRange||{}),this.status=e.status||z.NotStarted}}();t.PTaxOverride=W,function(e){e[e.NotStarted=0]="NotStarted",e[e.InProgress=1]="InProgress",e[e.Completed=2]="Completed"}(z=t.PTOverrideStatus||(t.PTOverrideStatus={}));var J=function(){return function(e){var t=this;this.includes=function(e){return t.from<=e&&t.to>=e},this.toJSON=function(){return{From:t.from.dateOnlyString(),To:t.to.dateOnlyString()}},this.from=Date.getDateObj(e.from),this.to=Date.getDateObj(e.to)}}();t.DateRange=J;var K=function(){return function(e){this.year=e.year,this.monthId=e.monthId,this.name=e.name,this.format=e.format}}();t.StatutoryForm=K;var Q=function(){return function(e){this.year=e.year,this.month=e.month}}();t.ReportDate=Q;var Z=function(){return function(e){this.groupId=e.groupId,this.month=e.month,this.year=e.year}}();t.PFECRRequest=Z;var X=function(){return function(e){this.groupId=e.groupId,this.month=e.month,this.name=e.name,this.format=e.format,this.financialYear=e.financialYear}}();t.StatutoryReportRequest=X;var ee=function(){return function(e){this.groupId=e.groupId,this.month=e.month,this.name=e.name,this.year=e.year,this.format=e.format,this.componentName=e.componentName}}();t.ReimbursementReportRequest=ee;var te=function(){function e(e){this.id=e.id,this.identifier=e.identifier,this.quarter=e.quarter,this.submissionToken=e.submissionToken,this.submittedOn=e.submittedOn,this.form24Type=e.form24Type,this.status=e.status||B.None,this.requestedOn=e.requestedOn,this.generatedOn=e.generatedOn,this.state=e.state,this.content=e.content,this.generationResult=e.generationResult,this.hasError=e.hasError}return Object.defineProperty(e.prototype,"etdsFiled",{get:function(){return null!=this.submissionToken},enumerable:!0,configurable:!0}),e}();t.Form24QDetails=te;var ie=function(){return function(e){this.employeeNumber=e.employeeNumber,this.employeeName=e.employeeName,this.employeeId=e.employeeId,this.currentGrossAmount=e.currentGrossAmount,this.currentPayableDays=e.currentPayableDays,this.currentLOPDays=e.currentLOPDays,this.previousGrossAmount=e.previousGrossAmount,this.previousPayableDays=e.previousPayableDays,this.previousLOPDays=e.previousLOPDays,this.reason=e.reason.join(","),this.previousMonth=e.previousMonth,this.currentMonth=e.currentMonth,this.grossDifference=e.grossDifference,this.grossChange=e.grossChange,this.compareHeads=e.compareHeads}}();t.ReviewGridRow=ie;var ne=function(){function e(e){this.year=e.year,this.months=e.months||[]}return Object.defineProperty(e.prototype,"anyMonths",{get:function(){return this.months.length>0},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"anyTwoMonths",{get:function(){return this.months.length>1},enumerable:!0,configurable:!0}),e}();t.PayrollMonth=ne;var oe=function(){return function(e){this.employee=e.employeeName,this.employeeNumber=e.employeeNumber,this.employeeId=e.employeeId,this.jobTitle=e.jobTitle,this.gender=e.gender,this.dateOfBirth=e.dateOfBirth,this.dateJoined=e.dateJoined,this.location=e.location,this.department=e.department,this.panNumber=e.panNumber,this.days=e.noOfPayDays-e.lossOfPayDays+"/"+e.cyclePayDays,this.monthName=e.monthName,this.gross=e.grossAmount,this.netPay=e.netAmount,this.totalContributions=e.totalContributions,this.totalDeductions=e.totalDeductions,this.totalReimbursements=e.totalReimbursements,this.cashAdvanceAmount=e.cashAdvanceAmount,this.cashAdvanceSettlementAmount=e.cashAdvanceSettlementAmount,this.totalBenefitAmount=e.totalBenefitAmount,this.monthlyGross=e.monthlyGross,this.status=e.status,this.total=e.total}}();t.PayRegisterGridRow=oe;var re=function(e){function t(t){var i=e.call(this,t)||this;return i.bankName=t.bankName,i.accountNumber=t.accountNumber,i.ifscCode=t.ifscCode,i.paymentMode=t.paymentMode,i.uan=t.uan,i}return __extends(t,e),t}(oe);t.PayRegisterwithBankDetailsGridRow=re;var ae=function(){return function(e){var t=this;this.addProperty=function(e,i){e.componentName in i||(i[e.componentName]=e),t[e.componentName]=e.amount||0},this.employeeName=e.employeeName,this.employeeId=e.employeeId,this.employeeNumber=e.employeeNumber,this.workerType=e.workerType,this.employmentStatus=e.employmentStatus,this.effectiveFrom=Date.getDateObj(e.structure.effectiveFrom),this.revisionEffectiveFrom=new Date(e.revisionEffectiveFrom),this.lastUpdatedOn=new Date(e.structure.updatedOn),this.gross=e.structure.ctc,this.netPayTotal=e.structure.breakup.netPayTotal,this.remunerationType=e.structure.remunerationType}}();t.CurrentSalaryGridRow=ae;var se=function(){return function(e){var t=this;this.addProperty=function(e,i){e.componentName in i||(i[e.componentName]=e),t[e.componentName]=e.amount||0},this.employeeName=e.employeeName,this.employeeId=e.employeeId,this.employeeNumber=e.employeeNumber,this.workerType=e.workerType,this.employmentStatus=e.employmentStatus,this.effectiveFrom=Date.getDateObj(e.effectiveFrom),this.revisionEffectiveFrom=new Date(e.revisionEffectiveFrom),this.lastUpdatedOn=new Date(e.updatedOn),this.totalBonusAmount=e.totalBonusAmount,this.gross=e.ctc,this.total=e.total,this.remunerationType=e.remunerationType}}();t.CurrentSalaryWithBonusGridRow=se;var le=function(){return function(e){var t=this;this.addProperty=function(e,i){e.componentName in i||(i[e.componentName]=e),t[e.componentName]=e.amount||0},this.employeeName=e.employeeName,this.employeeId=e.employeeId,this.employeeNumber=e.employeeNumber,this.workerType=e.workerType,this.employmentStatus=e.employmentStatus,this.effectiveFrom=Date.getDateObj(e.effectiveFrom),this.revisionEffectiveFrom=new Date(e.revisionEffectiveFrom),this.lastUpdatedOn=new Date(e.updatedOn),this.totalBonusAmount=e.totalBonusAmount,this.gross=e.ctc,this.totalCTC=e.totalCTC,this.totalBenefitsAmount=e.totalBenefitsAmount,this.remunerationType=e.remunerationType}}();t.CurrentCTCGridRow=le;var ce=function(){return function(e){this.split=e.split,this.title=e.title}}();t.SalarySlabViewModel=ce;var pe=function(){return function(e){this.componentName=e.componentName,this.title=e.title,this.hasTaxBenefits=e.hasTaxBenefits,this.componentType=e.componentType,this.sectionName=e.sectionName,this.sectionMaxAmount=e.sectionMaxAmount,this.disabled=e.disabled,this.helpText=e.helpText,this.isCustom=void 0==e.isCustom||e.isCustom,this.isIncluded=e.isIncluded,this.onActuals=e.onActuals,this.paidFrequency=e.paidFrequency,this.isNew=e.isNew,this.amount=e.amountExpression?Number(e.amountExpression):0,this.amountExpression=e.amountExpression,this.requiredDeduction=e.requiredDeduction,this.eligibleMonths=e.eligibleMonths,this.allowEmployeeToSubmitProof=e.allowEmployeeToSubmitProof||!1}}();t.MasterComponent=pe;var ue=function(){return function(e){this.componentName=e.componentName,this.amount=e.amountExpression.toLowerCase()}}();t.ComponentOverride=ue;var de=function(){return function(e){this.name=e.name,this.overrides=e.overrides||[]}}();t.StructureOverride=de;var me=function(){return function(e){this.name=e.name,this.title=e.title,this.components=e.components,this.overrides=e.overrides||[]}}();t.StructureConfig=me;var ye=function(){function e(e){this.id=e.id,this.employeeName=e.employee.displayName,this.employeeId=e.employeeId,this.employeeNumber=e.employee.employeeNumber,this.monthName=e.monthName,this.month=e.month,this.year=e.year,this.financialYear=e.financialYear+"-"+(e.financialYear+1),this.grossAmount=e.grossAmount,this.netPay=e.netPay,this.noOfPayDays=e.noOfPayDays,1==e.incomeSource?this.incomeSource="Current Employment":2==e.incomeSource&&(this.incomeSource="Previous Employment")}return Object.defineProperty(e.prototype,"Formonth",{get:function(){return this.monthName+"-"+this.year},enumerable:!0,configurable:!0}),e.prototype.addProperty=function(e,t){e.componentName in t||(t[e.componentName]=e),this[e.componentName]=e.amount||0},e}();t.PreviousIncomeRegisterGridRow=ye,function(e){e[e.allowance=1]="allowance",e[e.contribution=2]="contribution",e[e.adhoc=3]="adhoc",e[e.reimbursement=4]="reimbursement",e[e.tax=5]="tax",e[e.fixed=6]="fixed",e[e.arrear=7]="arrear",e[e.deduction=8]="deduction",e[e.reimbursable=9]="reimbursable",e[e.others=50]="others"}(t.SalaryComponentType||(t.SalaryComponentType={})),function(e){e[e.none=0]="none",e[e.weekly=1]="weekly",e[e.biWeekly=2]="biWeekly",e[e.monthly=3]="monthly",e[e.quaterly=4]="quaterly",e[e.biYearly=5]="biYearly",e[e.yearly=6]="yearly",e[e.once=7]="once"}(t.PaidFrequency||(t.PaidFrequency={}));var he=function(){return function(e){this.name=e.name,this.title=e.title,this.componentType=e.componentType}}();t.SalaryComponent=he;var fe=function(){return function(e){this.id=e.id,this.employeeId=e.employeeId,this.claimAgainstComponent=e.claimAgainstComponent,this.componentType=e.componentType,this.payableAmount=e.payableAmount,this.financialYear=e.financialYear,this.isApproved=e.isApproved,this.paidOn=e.paidOn}}();t.ReimbursableClaim=fe;var ge=function(e){function t(t){var i=e.call(this,t)||this;return i.employeeName=t.employeeName,i.employeeNumber=t.employeeNumber,i.currentAccumulationAsPerStructure=t.currentAccumulationAsPerStructure,i.previousClaims=t.previousClaims,i.readOnly=t.readOnly,i.previousAccumulatedDetails=t.previousAccumulatedDetails,i.currentBalance=Math.max(t.currentBalance,0),i.previousBalance=Math.max(t.previousBalance,0),i}return __extends(t,e),Object.defineProperty(t.prototype,"previousAccrual",{get:function(){var e=this;return null!=this.previousAccumulatedDetails?Object.keys(this.previousAccumulatedDetails).reduce(function(t,i){return t+e.previousAccumulatedDetails[i]},0):0},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"previousClaimAmount",{get:function(){var e=this;return null!=this.previousClaims?Object.keys(this.previousClaims).reduce(function(t,i){return t+e.previousClaims[i]},0):0},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"previousPendingClaim",{get:function(){var e=this.previousClaimAmount-this.previousAccrual;return e<0?0:e},enumerable:!0,configurable:!0}),t}(fe);t.ReimbursableClaimView=ge,function(e){e[e.Version1ECR=0]="Version1ECR",e[e.Version2ECR=1]="Version2ECR",e[e.Version2ArrearECR=2]="Version2ArrearECR"}(t.PFECRFileType||(t.PFECRFileType={}));var ve=function(){return function(e){this.id=e.id,this.employeeId=e.employeeId,this.displayName=e.displayName,this.employeeNumber=e.employeeNumber,this.errors=e.errors,this.financialYear=e.financialYear,this.form16Url=e.form16Url,this.generatedBy=e.generatedBy,this.generatedOn=e.generatedOn,this.isForm16Generated=e.isForm16Generated,this.maskedPAN=e.maskedPAN,this.pan=e.pan,this.panNumber=e.pan?e.pan.panNumber:"",this.panUserName=e.panUserName,this.partAFileName=e.partAFileName,this.partAUrl=e.partAUrl,this.partAUploadedOn=e.partAUploadedOn,this.processedBatchId=e.processedBatchId,this.employmentStatus=e.employmentStatus,this.exitDate=e.exitDate,this.employement=0==this.employmentStatus?"Active":"Terminated",this.isSalaryAdded=e.isSalaryAdded}}();t.Form16GenerationResult=ve;var Se=function(){return function(e){this.month=e.month,this.to=Date.getDateObj(e.to),this.from=Date.getDateObj(e.from),this.paydays=e.paydays,this.noofdays=e.noofdays}}();t.PayCycleView=Se,function(e){e[e.none=0]="none",e[e.requested=1]="requested",e[e.inProgress=2]="inProgress",e[e.completed=3]="completed",e[e.failed=4]="failed"}(t.BulkPaySlipGenerationStatus||(t.BulkPaySlipGenerationStatus={}));var Ce=function(){return function(e){this.rangeBasedSalaryStructures=e.rangeBasedSalaryStructures||0,this.customSalaryStructures=e.customSalaryStructures||0,this.isEditable=e.isEditable}}();t.componentSalaryStructureCount=Ce;var we=function(){return function(e){this.id=e.id,this.employeeId=e.employeeId,this.employeeName=e.employeeName,this.employeeNumber=e.employeeNumber,this.amount=e.amount,this.cycleId=e.cycleId,this.comment=e.comment||"",this.transactionType=e.transactionType,this.typeIdentifier=e.typeIdentifier,this.isDeleted=e.isDeleted||!1}}();t.OneTimePayment=we;var be=function(){return function(e,t){this.id=e.id,this.employeeId=e.employeeId,this.employeeName=e.employeeName,this.employeeNumber=e.employeeNumber,this.amount=e.amount,this.cycleId=e.cycleId,this.comment=e.comment||"",this.transactionType=t.Deduction.id,this.typeIdentifier=e.typeIdentifier,this.isDeleted=e.isDeleted||!1}}();t.OneTimeDeduction=be,function(e){e[e.default=0]="default",e[e.HdfcBank=47]="HdfcBank",e[e.ICICI=50]="ICICI",e[e.IndianOverseasBank=53]="IndianOverseasBank",e[e.KotakMahindraBank=72]="KotakMahindraBank"}(t.Banks||(t.Banks={}));var Pe=function(){return function(e){this.componentName=e.componentName,this.title=e.title,this.amount=e.amount,this.helpText=e.helpText,this.onActuals=e.onActuals,this.hasTaxBenefits=e.hasTaxBenefits,this.componentType=e.componentType,this.sectionName=e.sectionName,this.sectionMaxAmount=e.sectionMaxAmount,this.allowEmployeeToSubmitProof=e.allowEmployeeToSubmitProof}}();t.MasterComponentOverride=Pe}(e.Model||(e.Model={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(t){var i=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f){var g=this;this.appSettings=t,this.modalService=i,this.employeePayablesBatchService=n,this.filter=r,this.modelInstance=a,this.notificationService=s,this.$q=l,this.payrollLookUpService=c,this.lookupServices=p,this.sharedModel=u,this.scope=d,this.timeoutService=m,this.dialogs=y,this.payrollRunReportService=h,this.fileDownloadService=f,this.interBankTransferAvailableBanks=[e.Model.Banks.HdfcBank,e.Model.Banks.IndianOverseasBank,e.Model.Banks.KotakMahindraBank],this.init=function(){g.employeePayables=[],g.$q.all([g.employeePayablesBatchService.getSummary(g.payrollConfig.payGroupId,g.currentCycle.id),g.lookupServices.lookup.query({id:"banks"}).$promise,g.payrollLookUpService.getBankaccounts(g.payrollConfig.payFundConfig.legalEntityId)]).then(function(t){var i={};t[2].forEach(function(e){this[e.id]=e},i),t[1].forEach(function(e){e.isTransferStatmentPresent=i.hasOwnProperty(e.id),e.isInterBankTransferpresent=e.isTransferStatmentPresent&&-1!=g.interBankTransferAvailableBanks.indexOf(e.id),e.isCMSTransferStatement=e.isTransferStatmentPresent&&50==e.id,g.bankDetails[e.id]=e});var n=t[0],o=(n.allPayments||[]).filter(function(e){return!e.disbursalWithInPayroll}),r=(n.allPayments||[]).filter(function(e){return e.disbursalWithInPayroll}),a=g.filter("groupBy")(r,"paymentForName"),s=g.filter("groupBy")(n.allBatches,"paymentForName");Object.keys(a).forEach(function(t){var i=g.filter("groupBy")(a[t].map(function(t){return new e.Model.Payment(t)}),"batchId"),n=[];s.hasOwnProperty(t)&&s[t].forEach(function(t){t.payments=i[t.id]||[],this.push(new e.Model.BatchPayment(t))},n);var o=a[t][0].paymentFor,r="";switch(o){case e.Model.PaymentFor.Salary:r="Salaries";break;case e.Model.PaymentFor.Bonus:r="Bonuses";break;case e.Model.PaymentFor.Reimbursement:r="Expenses";break;case e.Model.PaymentFor.CashAdvance:r="Cash Advances";break;case e.Model.PaymentFor.SalaryComponent:r=g.payrollConfig.getSupportedComponent(t).title}g.employeePayables.push(new e.Model.EmployeePayables({paymentForName:t,paymentFor:o,pendingPayments:i.null,batches:n,title:r}))}),g.addAlreadyPaidPayments(o)},function(e){g.notificationService.error("Error occured while getting employee payables")})},this.initBatchGridOptions=function(){g.employeeBatchGridOptions=angular.copy(g.appSettings.gridSettings),g.employeeBatchGridOptions.rowHeight=40,g.employeeBatchGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTooltip:!0},{field:"employeeName",displayName:"Employee",cellTooltip:!0},{field:"monthName",displayName:"Month"},{field:"amount",displayName:"Amount",cellFilter:'currency:"":0'},{field:"paymentMode",displayName:"Payment Mode"},{field:"bankDetails.bankName",displayName:"Bank Name",cellTooltip:function(e,t){return e.entity.bankDetails.bankName}},{field:"bankDetails.ifscCode",displayName:"IFSCCode"}],g.employeeBatchGridOptions.data="batch.payments | filter : vm.searchText"},this.initDisbursalOutsidePayrollPayments=function(){g.alreadyPaidPaymentsGridOptions=angular.copy(g.appSettings.gridSettings),g.alreadyPaidPaymentsGridOptions.rowHeight=40,g.alreadyPaidPaymentsGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTooltip:!0},{field:"employeeName",displayName:"Employee",cellTooltip:!0},{field:"monthName",displayName:"Month"},{field:"amount",displayName:"Amount",cellFilter:'currency:"":0'},{field:"disburalmode",displayName:"Disbursal Mode",cellTemplate:'<div class="ui-grid-cell-contents">Outside Payroll</div>'}],g.alreadyPaidPaymentsGridOptions.data="batch.payments | filter : vm.searchText"},this.deleteBatch=function(e){g.dialogs.confirm("Please confirm","Are you sure want to delete this batch? ").result.then(function(){g.employeePayablesBatchService.deleteBatch(g.payrollConfig.payGroupId,e.cycleId,e.id).then(function(){g.notificationService.success("Successfully deleted the batch"),g.init()},function(e){g.notificationService.error(e.data.message)})})},this.editBatch=function(e){var t=g.employeePayables.find(function(t){return e.paymentFor==t.paymentFor}).pendingPayments;g.modalService.open({templateUrl:"editBatch-template",windowClass:"full-screen-modal employee-payables-container no-scroll",controller:"UpdateBatchPaymentController",controllerAs:"vm",keyboard:!1,resolve:{payablesDetails:function(){return{batchPayment:e,pendingPayments:t||[],currentCycle:g.currentCycle,paygroupId:g.payrollConfig.payGroupId}}}}).result.then(function(e){g.init()},function(e){console.log(g.employeePayables)})},this.markAsPaid=function(t){g.employeePayablesBatchService.markAsPaid(g.payrollConfig.payGroupId,t.cycleId,t.id).then(function(i){i.markAsPaid?(t.status=e.Model.PaymentStatus.Paid,g.notificationService.success("Successfully marked as paid")):g.notificationService.error("An error occurred while marking as paid.")},function(){g.notificationService.error("An error occurred while marking as paid.")})},this.exportPayment=function(e,t,i,n,o,r){g.fileDownloadService.downloadFile("/api/postpayroll/"+g.payrollConfig.payGroupId+"/employeepayables/export?&format="+i+"&cycleId="+g.currentCycle.id+"&batchId="+e+"&groupId="+g.payrollConfig.payGroupId+"&paymentMode="+t+"&bankId="+n+"&isInterBankTransferStatement="+o+"&isCMSTransferStatement="+r||!1+"&searchKey="+(g.searchText?g.searchText.trim():""))},this.currentCycle=o.cycle,this.payrollConfig=o.payrollConfig,this.init(),this.bankDetails={},this.initBatchGridOptions(),this.initDisbursalOutsidePayrollPayments()}return t.prototype.addAlreadyPaidPayments=function(t){if(t.length>0){var i={cycleId:this.currentCycle.id,name:"Already Paid",status:e.Model.PaymentStatus.Paid,paymentForName:"alreadyPaid",paymentFor:e.Model.PaymentFor.None,payments:t,disbursalWithInPayroll:!1};this.employeePayables.push(new e.Model.EmployeePayables({paymentForName:"alreadyPaid",paymentFor:"alreadyPaid",pendingPayments:[],batches:[i],title:"Already Paid"}))}},t.prototype.generateReport=function(e){var t={batchId:e,month:this.currentCycle.month+1,year:this.currentCycle.year,Format:"excel"};this.payrollRunReportService.exportBatchPaymentReport(this.payrollConfig.payGroupId,t)},t.prototype.generateConsolidateReport=function(e){var t={batchId:e,month:this.currentCycle.month+1,year:this.currentCycle.year,Format:"excel"};this.payrollRunReportService.exportConsolidatedBatchPaymentReport(this.payrollConfig.payGroupId,t)},t.prototype.generateAlreadyPaidReport=function(){var e={month:this.currentCycle.month+1,year:this.currentCycle.year,Format:"excel"};this.payrollRunReportService.exportOutsidePayrollPaymentReport(this.payrollConfig.payGroupId,e)},t.prototype.createPayment=function(e){var t=this;this.modalService.open({templateUrl:"paymentWizard-template",windowClass:"full-screen-modal employee-payables-container",controller:"PaymentWizardController",controllerAs:"vm",keyboard:!1,backdrop:"static",resolve:{payablesDetails:function(){return{employeePayables:e,currentCycle:t.currentCycle,paygroupId:t.payrollConfig.payGroupId}}}}).result.then(function(e){t.init()},function(e){})},t.$inject=["AppSettings","$uibModal","EmployeePayablesBatchService","payrollData","$filter","$uibModalInstance","NotificationService","$q","PayrollLookUpService","LookupServices","SharedModel","$scope","$timeout","dialogs","PayrollRunReportService","FileDownloadService"],t}();t.PayrollEmployeePayablesController=i;var n=function(){function e(e,t,i,n){this.scope=e,this.appSettings=t,this.modelInstance=i,this.employeePayablesBatchService=n}return e.prototype.initEmployeeSelectGridOptions=function(){var e=this;this.payEmployeeSelectGridOptions=angular.copy(this.appSettings.gridSettings),this.payEmployeeSelectGridOptions.rowHeight=40,this.payEmployeeSelectGridOptions.enableSelectionBatchEvent=!1,this.payEmployeeSelectGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTooltip:!0},{name:"employeeName",displayName:"Employee Name",cellTooltip:!0},{field:"monthName",displayName:"Month"},{name:"amount",displayName:"amount",cellFilter:'currency:"Rs.":0'},{field:"paymentMode",displayName:"Payment Mode"},{field:"bankDetails.bankName",displayName:"Bank Name",cellTooltip:function(e,t){return e.entity.bankDetails.bankName}},{name:"jobTitle",displayName:"Job Title"},{name:"department",displayName:"Department"},{name:"experience",displayName:"Experience In Company",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.experience}} <span class="text-muted">Days</span></div>'}],this.payEmployeeSelectGridOptions.onRegisterApi=function(t){e.gridApi=t,e.gridApi.selection.on.rowSelectionChanged(e.scope,function(t){t.isSelected?e.model.addPayment(t.entity):e.model.deletePayment(t.entity)}),e.gridApi.core.on.rowsRendered(e.scope,function(t){var i={};t.grid.rows.forEach(function(e){this[e.entity.id]=e},i),e.model.payments.forEach(function(e){i[e.id]&&(i[e.id].isSelected=!0)})})}},e}();t.BatchPaymentController=n;var o=function(t){function i(i,n,o,r,a,s){var l=t.call(this,i,n,o,r)||this;return l.notificationService=a,l.createBatch=function(){l.form.batchForm.$valid&&(l.model.payments.length>0?l.employeePayablesBatchService.createBatch(l.paygroupId,l.currentCycle.id,l.model).then(function(){l.notificationService.success("Successfully batch created"),l.modelInstance.close()},function(e){l.notificationService.error(e.data.message)}):l.notificationService.error("Please select at least one payment."))},l.gotoStep=function(e){var t=l.wizardSteps.filter(function(t){return t.index==e-1})[0];(!t||t&&t.valid)&&(l.currentStep=l.wizardSteps.filter(function(t){return t.index==e})[0])},l.scope.$watch("vm.currentStep",function(e,t){e&&e.init()}),l.scope.$watch("vm.gridApi.grid.rows.length",function(e,t){e>0&&0==t&&l.form&&l.form.batchForm&&l.form.batchForm.$pristine&&(l.paySalariesInBatch||(l.gridApi.selection.selectAllRows(),l.model.name="Default Batch "+(l.employeePayables.batches.length+1),l.model.description="Default for all pending payments"))}),l.wizardSteps=[new SharedModel.Step(1,"Full Or Batch Salary Pay","fullOrBatchPay","fullOrBatchPay",!0,function(){l.paySalariesInBatch||(l.paySalariesInBatch=!1)}),new SharedModel.Step(2,"Select Employees","selectPayableEmployees","selectPayableEmployees",!1,function(){l.model=new e.Model.BatchPayment({cycleId:l.currentCycle.id,paymentFor:l.employeePayables.paymentFor,paymentForName:l.employeePayables.paymentForName}),l.initEmployeeSelectGridOptions()})],l.currentStep=l.wizardSteps[0],l.employeePayables=s.employeePayables,l.currentCycle=s.currentCycle,l.paygroupId=s.paygroupId,l}return __extends(i,t),i.prototype.initEmployeeSelectGridOptions=function(){t.prototype.initEmployeeSelectGridOptions.call(this),this.payEmployeeSelectGridOptions.data="vm.employeePayables.pendingPayments | filter : vm.searchText"},i.$inject=["$scope","AppSettings","$uibModalInstance","EmployeePayablesBatchService","NotificationService","payablesDetails"],i}(n);t.PaymentWizardController=o;var r=function(t){function i(i,n,o,r,a,s){var l=t.call(this,i,n,o,r)||this;return l.notificationService=a,l.updateBatch=function(){l.form.batchForm.$valid&&(l.model.payments.length>0?l.employeePayablesBatchService.updateBatch(l.paygroupId,l.model.cycleId,l.model).then(function(){l.notificationService.success("batch updated successfully"),l.modelInstance.close()},function(e){l.notificationService.error(e.data.message)}):l.notificationService.error("Please select at least one payment."))},l.model=new e.Model.BatchPayment(s.batchPayment),l.currentCycle=s.currentCycle,l.paygroupId=s.paygroupId,l.allPayments=l.model.payments.concat(s.pendingPayments),l.initEmployeeSelectGridOptions(),l}return __extends(i,t),i.prototype.initEmployeeSelectGridOptions=function(){t.prototype.initEmployeeSelectGridOptions.call(this),this.payEmployeeSelectGridOptions.data="vm.allPayments | filter : vm.searchText"},i.$inject=["$scope","AppSettings","$uibModalInstance","EmployeePayablesBatchService","NotificationService","payablesDetails"],i}(n);t.UpdateBatchPaymentController=r,angular.module("payroll").controller("PayrollEmployeePayablesController",i).controller("PaymentWizardController",o).controller("UpdateBatchPaymentController",r)}(e.BatchPay||(e.BatchPay={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){var t=function(){function t(t,i,n,o,r,a,s,l,c,p,u){var d=this;this._scope=t,this._q=i,this.$timeout=n,this.$uibModal=o,this.$uibModalInstance=r,this.NotificationService=a,this.PayrollModel=s,this.PayrollService=l,this.PostPayrollService=c,this.LookupServices=p,this.configService=u,this.months=[],this.paygroups=[],this.form24QGenerationStatus=e.Model.Form24QGenerationStatus,this.getPaygroups=function(){d.configService.getAllPayGroups().then(function(e){d.paygroups=d.configService.paygroups,d.selectedPayGroup=d.paygroups[0],d.getGroupConfiguration()})},this.getPaygroups()}return t.prototype.getGroupConfiguration=function(){var e=this;this.configService.getCompleteGroupConfiguration(this.selectedPayGroup.id).then(function(t){e.payrollConfig=e.configService.payrollConfiguration,e.currentFinancialYear=e.configService.currentFinancialYear,e.selectedFinancialYear=e.currentFinancialYear,e.financialYearList=e.configService.getFinancialYearList(),e.getFinancialQuatersInfo(e.selectedFinancialYear)})},t.prototype.getFinancialQuatersInfo=function(e){var t=this;this.selectedFinancialYear=e;var i=this.selectedFinancialYear.to;this.PostPayrollService.etds.getYearQuarters(this.payrollConfig.payGroupId,i.getMonth()+1,i.getFullYear()).then(function(e){t.fyQuarterList=e.map(function(e){return new t.PayrollModel.FYQuarter(e)}),t.months=[],angular.forEach(t.fyQuarterList,function(e){t.months=t.months.concat(e.allMonthSummary()),e.isFormGenerating=t.isFormGenerating||e.generationDetails.status==t.form24QGenerationStatus.Requested||e.generationDetails.status==t.form24QGenerationStatus.GenerationStarted}),t.isFormGenerating&&(t.generationStatusTimer=t.$timeout(t.getGenerationStatus,2e4))}),this._scope.$on("$destroy",function(e){t.$timeout.cancel(t.generationStatusTimer)})},t.prototype.closeModal=function(){this.$uibModalInstance.close()},t.prototype.addTDSChallan=function(e){this.OpenModal({templateUrl:"IncomeTax/ManageChallan",controller:"ChallanManageController",controllerAs:"ctrl",windowClass:"full-screen-modal dark-modal wizard-head step-1-saperator"},e,null,null)},t.prototype.editTDSChallan=function(e,t,i){t.etdsFiled?this.OpenModal({templateUrl:"IncomeTax/ManageChallan",controller:"ChallanManageController",controllerAs:"ctrl",windowClass:"full-screen-modal"},e,t,i):this.OpenModal({templateUrl:"IncomeTax/ManageChallan",controller:"ChallanManageController",controllerAs:"ctrl",windowClass:"full-screen-modal dark-modal wizard-head step-1-saperator"},e,t,i)},t.prototype.openTDSEmployeeMap=function(e,t){this.OpenModal({templateUrl:"IncomeTax/TDSEmployeeMap",controller:"TDSEmployeeMapController",controllerAs:"ctrl",windowClass:"full-screen-modal"},e,t,null)},t.prototype.openGenerateForm24Q=function(e,t,i){var n=this;this.selectedFinancialYear.to;this.$uibModal.open({windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,templateUrl:"IncomeTax/form24QGeneration",controller:"Form24qGenerationController",controllerAs:"ctrl",resolve:{quarterData:function(){return{quarter:e,groupId:n.payrollConfig.payGroupId,showErrors:t,showDownloads:i}},Form24QSettings:function(){return n.PostPayrollService.etds.getForm24QSettings(n.payrollConfig.payGroupId,e.quarterIndex,e.months[0].forMonth,e.months[0].year)},States:function(){return n.LookupServices.lookup.query({id:"states"}).$promise.then(function(e){return e.filter(function(e){return"IN"==e.countryCode})})}}}).result.then(function(e){},function(e){}).finally(function(){n.getGenerationStatus()})},t.prototype.openSubmissionForm=function(e){var t=this;this.$uibModal.open({windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,templateUrl:"IncomeTax/form24QSubmission",controller:"Form24qSubmissionController",controllerAs:"ctrl",resolve:{quarterData:function(){return{quarter:e,groupId:t.payrollConfig.payGroupId}}}}).result.then(function(t){t&&t.submitted&&(e.generationDetails.submittedOn=t.submittedOn,e.generationDetails.submissionToken=t.submissionToken)})},t.prototype.OpenModal=function(e,t,i,n){var o=this,r=[];t?r=this.months:angular.forEach(this.fyQuarterList,function(e){e.generationDetails.etdsFiled||(r=r.concat(e.allMonthSummary()))}),this.$uibModal.open(angular.extend({},e,{backdrop:!1,keyboard:!1,resolve:{cycleData:function(){return{months:r,forMonth:t?t.forMonth:null,forYear:t?t.year:null,groupId:o.payrollConfig.payGroupId,challan:n,generationDetails:i,remainingChallanAmountToPay:t?t.remainingChallanAmountToPay:null}}}})).result.then(function(e){o.getFinancialQuatersInfo(o.selectedFinancialYear)},function(e){})},t.prototype.getGenerationStatus=function(){var e=this,t=this.selectedFinancialYear.to;this.PostPayrollService.etds.getFYForm24QStatus(this.payrollConfig.payGroupId,t.getMonth()+1,t.getFullYear()).then(function(t){var i=!1;angular.forEach(e.fyQuarterList,function(n){var o=t.find(function(e){return e.quarter.index==n.quarterIndex});null!=o&&(n.generationDetails=o),i=i||n.generationDetails.status==e.form24QGenerationStatus.Requested||n.generationDetails.status==e.form24QGenerationStatus.GenerationStarted}),i?e.generationStatusTimer=e.$timeout(e.getGenerationStatus,2e4):e.$timeout.cancel(e.generationStatusTimer)})},t.$inject=["$scope","$q","$timeout","$uibModal","$uibModalInstance","NotificationService","PayrollModel","PayrollService","PostPayrollService","LookupServices","PayGroupsAndConfigurationService"],t}();e.PayrollETDSChallanController=t;var i=function(e){function t(t,i,n,o,r,a){var s=e.call(this)||this;s.$scope=t,s.appSettings=i,s.lookupServices=n,s.notificationService=o,s.postPayrollService=r,s.PayrollModel=a,s.disableMonth=!1,s.headCodes=[],s.model=new s.PayrollModel.TDSChallan({}),s.datepickerOptions=angular.copy(s.appSettings.datepickerOptions),s.niceScrollOptions=angular.copy(s.appSettings.scrollSettings),s.headCodes=[{id:200,title:"TDS payable by taxpayer"},{id:400,title:"TDS regular assessment"}];var l=s.$scope.$watch("$ctrl.cycleData",function(){s.cycleData&&(s.months=s.cycleData.months,s.payGroupId=s.cycleData.groupId,s.generationDetails=s.cycleData.generationDetails,s.cycleData.challan&&(s.model=new s.PayrollModel.TDSChallan(s.cycleData.challan),s.model.onEdit=!0),s.cycleData.forMonth&&(s.disableMonth=!0,s.selectedMonth=s.months.find(function(e){return e.forMonth==s.cycleData.forMonth}),s.model.forMonth=s.selectedMonth.forMonth,s.model.forYear=s.selectedMonth.year,!s.cycleData.challan&&s.cycleData.remainingChallanAmountToPay&&s.cycleData.remainingChallanAmountToPay.totalTaxAmount>0&&(s.model.incomeTax=s.cycleData.remainingChallanAmountToPay.incomeTax,s.model.surcharge=s.cycleData.remainingChallanAmountToPay.surcharge,s.model.cess=s.cycleData.remainingChallanAmountToPay.cess)),l())});return s.lookupServices.lookup.query({id:"banks"},function(e){s.banks=angular.copy(e),s.model.bankId&&(s.model.bank=s.banks.find(function(e){return e.id==s.model.bankId}))}),s}return __extends(t,e),t.prototype.$onInit=function(){this.wizardCtrl=this},t.prototype.selectMonth=function(){var e=this;this.selectedMonth=this.months.find(function(t){return t.forMonth==e.model.forMonth}),this.model.forYear=this.selectedMonth.year},t.prototype.checkAnyPendingChanges=function(){return this.form&&this.form.newChallanForm.$dirty},t.prototype.saveTDSChallan=function(){var t=this;if(this.form.newChallanForm.$valid){var i=new this.PayrollModel.TDSChallan(this.model);i.bankId=this.model.bank.id,this.postPayrollService.etds.saveChallan(this.payGroupId,this.model.forYear,i).then(function(i){i.challan?(t.notificationService.success("Challan saved successfully"),i.challan=new t.PayrollModel.TDSChallan(i.challan),t.postChallanDetails(i),e.prototype.next.call(t)):t.notificationService.error("An error occurred while saving challan.")})}},t.prototype.updateTDSChallan=function(){var t=this;if(this.form.newChallanForm.$valid){var i=new this.PayrollModel.TDSChallan(this.model);i.bankId=this.model.bank.id,this.postPayrollService.etds.updateChallan(this.payGroupId,this.model.forYear,i).then(function(n){n.isUpdated?(t.notificationService.success("Challan updated successfully"),n.challan=i,t.postChallanDetails(n),e.prototype.next.call(t)):t.notificationService.error("An error occurred while updating challan.")})}},t.$inject=["$scope","AppSettings","LookupServices","NotificationService","PostPayrollService","PayrollModel"],t}(SharedPatterns.WizardController);e.AddChallanController=i;var n=function(){function e(e,t,i,n,o,r,a,s,l,c){var p=this;this.scope=e,this.appSettings=t,this.filter=i,this.uibModal=n,this.postPayrollService=o,this.notificationService=r,this.payrollModel=a,this.cycleData=s,this.dialogs=l,this.modalServiceInstance=c,this.months={},this.niceScrollOptions=this.appSettings.scrollSettings,this.cycleData.months.forEach(function(e){this[e.forMonth]=e.name},this.months),this.payGroupId=s.groupId,this.currentMonth=s.forMonth,this.currentYear=s.forYear,this.generationDetails=s.generationDetails,this.postPayrollService.etds.getChallanMappings(this.payGroupId,this.currentYear,this.currentMonth).then(function(e){p.mapResult=new p.payrollModel.TDSMapResult(e.mapping)}),this.scope.$watch("ctrl.mapResult",function(e,t){e!=t&&p.selectMapView(null)})}return e.prototype.selectMapView=function(e){this.currentMapSet=e?this.mapResult.challanMapSets[e]:{mapEntries:this.mapResult.allEntries()}},e.prototype.openChallanModal=function(e){var t=this;this.uibModal.open({templateUrl:"IncomeTax/ManageChallan",controller:"ChallanManageController",controllerAs:"ctrl",windowClass:"full-screen-modal dark-modal wizard-head step-1-saperator",backdrop:!1,keyboard:!1,resolve:{cycleData:function(){return t.cycleData.challan=angular.copy(e),t.cycleData.forMonth=t.currentMonth,t.cycleData.generationDetails=t.generationDetails,t.cycleData.remainingChallanAmountToPay=t.getRemainingChallanAmountToPay(),t.cycleData}}}).result.then(function(e){t.postPayrollService.etds.getChallanMappings(t.payGroupId,t.currentYear,t.currentMonth).then(function(e){t.mapResult=new t.payrollModel.TDSMapResult(e.mapping)})},function(e){})},e.prototype.removeChallan=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure want to delete  challan-serial No -"+e.serialNo+"?").result.then(function(){t.postPayrollService.etds.deleteChallan(t.payGroupId,t.currentMonth,t.currentYear,e.id).then(function(e){e.isDeleted?(t.notificationService.success("Challan deleted successfully."),t.postPayrollService.etds.getChallanMappings(t.payGroupId,t.currentYear,t.currentMonth).then(function(e){t.mapResult=new t.payrollModel.TDSMapResult(e.mapping)})):t.notificationService.error("An error occurred while deleting challan.")},function(e){t.notificationService.error(e.data.message)})})},e.prototype.getRemainingChallanAmountToPay=function(){var e=new this.payrollModel.TaxShareItems({});return this.mapResult.unMapEntries.reduce(function(e,t){return e.incomeTax+=t.incomeTax,e.cess+=t.cess,e.surcharge+=t.surcharge,e},e)},e.prototype.closeModel=function(){this.modalServiceInstance.close()},e.$inject=["$scope","AppSettings","$filter","$uibModal","PostPayrollService","NotificationService","PayrollModel","cycleData","dialogs","$uibModalInstance"],e}();e.TDSEmployeeMapController=n;var o=function(){function e(e,t,i){this.cycleData=e,this.modalServiceInstance=t,this.dialogs=i,this.currentIndex=0,this.initWizard()}return e.prototype.initWizard=function(){this.steps=[new SharedModel.Step(0,"Challan Details","upsertChallan","",!0),new SharedModel.Step(1,"Employee Mapping","upsertChallanMapping","",!0)]},e.prototype.dismissModal=function(){var e=this;this.wizardCtrl.checkAnyPendingChanges()?this.dialogs.confirm("Please Confirm","You have modified this challan details. Close and lose changes?").result.then(function(){e.modalServiceInstance.close()},function(){}):this.modalServiceInstance.close()},e.prototype.goNext=function(){this.wizardCtrl&&this.wizardCtrl.next()},e.prototype.goto=function(e){this.currentIndex>e&&this.wizardCtrl.gotoStep(e)},e.prototype.setChallanDetails=function(e){this.challanDetails=e,this.cycleData.challan=e},e.$inject=["cycleData","$uibModalInstance","dialogs"],e}();e.ChallanManageController=o;var r=function(e){function t(t,i,n,o,r,a,s,l){var c=e.call(this)||this;c.$scope=t,c.appSettings=i,c.notificationService=n,c.dialogs=o,c.postPayrollService=r,c.payrollModel=a,c.uiGridConstants=s,c.uibModal=l,c.releasePayslip=!1,c.selectedMapEntries=[],c.setGridApi=function(e){c.gridApi=e,c.gridApi.grid.selection.selectedCount=c.selectedMapEntries.length,c.gridApi.selection.on.rowSelectionChanged(c.$scope,function(e){e.isSelected?c.selectedMapEntries.push(e.entity):c.selectedMapEntries=c.selectedMapEntries.filter(function(t){return t.employeeId!=e.entity.employeeId||t.amount!=e.entity.amount||t.amountPaid!=e.entity.amountPaid||t.challanId!=e.entity.challanId})}),c.gridApi.core.on.rowsRendered(c.$scope,function(e){e.grid.rows.forEach(function(e){c.selectedMapEntries.some(function(t){return t.employeeId===e.entity.employeeId&&t.amount===e.entity.amount&&t.amountPaid===e.entity.amountPaid&&t.challanId===e.entity.challanId})&&(e.isSelected=!0)})})},c.$scope.$watch("$ctrl.selectedMapEntries",function(){c.mapResult&&(c.mapSet=new c.payrollModel.ChallanMapSet({challan:c.mapResult.challanMapSets[c.challanDetails.id].challan,mapEntries:c.selectedMapEntries}))},!0);var p=c.$scope.$watch("$ctrl.cycleData",function(){c.cycleData&&c.challanDetails&&(c.initializeGridSettings(),c.getMapperEntries(),p())});return c.mapOptions={pendingEntriesLast:!1,higherSalaryFirst:!1},c.currentOpenModalInstance||(c.currentOpenModalInstance=c.currentModalInstance),c}return __extends(t,e),t.prototype.$onInit=function(){this.wizardCtrl=this},t.prototype.getMapperEntries=function(){var e=this;this.postPayrollService.etds.getChallanMapperEntries(this.cycleData.groupId,this.cycleData.forYear,this.challanDetails.forMonth,this.challanDetails.id).then(function(t){e.mapResult=new e.payrollModel.TDSMapResult(t.mapping),e.mapEntries=e.mapResult.challanMapSets[e.challanDetails.id].mapEntries,e.mapEntries=e.mapEntries.concat(e.mapResult.unMapEntries),e.selectedMapEntries=e.mapResult.challanMapSets[e.challanDetails.id].mapEntries},function(t){e.notificationService.error("An error occurred while fetching mapping data.")})},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.showColumnFooter=!0,this.gridOptions.columnDefs=[{field:"employeeNumber",cellClass:"ui-grid-cell",displayName:"Employee Number"},{field:"employeeName",cellClass:"ui-grid-cell",displayName:"Employee Name"},{field:"panNumber",cellClass:"ui-grid-cell",displayName:"PAN Number"},{field:"forMonth",cellClass:"ui-grid-cell",displayName:"TDS Month"},{field:"incomeTax",cellClass:"ui-grid-cell",displayName:"Income Tax",cellFilter:'currency: ""',aggregationType:this.uiGridConstants.aggregationTypes.sum},{field:"surcharge",cellClass:"ui-grid-cell",displayName:"Surcharge",cellFilter:'currency: ""',aggregationType:this.uiGridConstants.aggregationTypes.sum},{field:"cess",cellClass:"ui-grid-cell",displayName:"CESS",cellFilter:'currency: ""',aggregationType:this.uiGridConstants.aggregationTypes.sum},{field:"amount",cellClass:"ui-grid-cell",displayName:"Total Tax Amount",cellFilter:'currency: ""',aggregationType:this.uiGridConstants.aggregationTypes.sum}],this.gridOptions.rowHeight=40,this.gridOptions.data="$ctrl.mapEntries |  filter:  $ctrl.search",this.gridOptions.appScopeProvider=this,this.gridOptions.multiSelect=!0,this.gridOptions.enableSelectionBatchEvent=!1,this.gridOptions.onRegisterApi=this.setGridApi},t.prototype.postSelectedMapEntries=function(){var e=this;this.dialogs.confirm("Please confirm","Are you sure you want to map selected employees to the challan?").result.then(function(){e.postPayrollService.etds.postSelectedMapEntries(e.cycleData.groupId,e.challanDetails.forMonth,e.cycleData.forYear,e.challanDetails.id,e.selectedMapEntries).then(function(t){t.isSaved&&(e.notificationService.success("Selected employees are successfully mapped to the challan."),e.currentModalInstance.close())},function(t){e.notificationService.error(t.data.message)})})},t.prototype.remapChallans=function(){var e=this;this.postPayrollService.etds.getReMappedChallanMapperEntries(this.cycleData.groupId,this.challanDetails.forMonth,this.cycleData.forYear,this.challanDetails.id,this.mapOptions).then(function(t){e.mapResult=new e.payrollModel.TDSMapResult(t.mapping),e.mapEntries=e.mapResult.challanMapSets[e.challanDetails.id].mapEntries,e.mapEntries=e.mapEntries.concat(e.mapResult.unMapEntries),e.selectedMapEntries=e.mapResult.challanMapSets[e.challanDetails.id].mapEntries,e.gridApi.grid.selection.selectedCount=e.selectedMapEntries.length,e.notificationService.success("Re-Mapping is done successfully."),e.closeOptionsModal()},function(t){e.notificationService.error("An error occurred while mapping."),e.closeOptionsModal()})},t.prototype.openChallanMapOptions=function(){this.currentOpenModalInstance=this.uibModal.open({templateUrl:"IncomeTax/challanMapOptions",scope:this.$scope})},t.prototype.closeOptionsModal=function(){this.currentOpenModalInstance.close()},t.$inject=["$scope","AppSettings","NotificationService","dialogs","PostPayrollService","PayrollModel","uiGridConstants","$uibModal"],t}(SharedPatterns.WizardController);e.ChallanTDSMappingController=r;var a=function(){function t(t,i,n,o,r,a,s,l,c,p,u){var d=this;this.scope=t,this.timeout=i,this.uibModalInstance=n,this.appSettings=o,this.notificationService=r,this.postPayrollService=a,this.quarterData=s,this.form24QSettings=l,this.states=c,this.blobContainers=p,this.fileDownloadService=u,this.form24QGenerationStatus=e.Model.Form24QGenerationStatus,this.showAdvancedSettings=!0,this.steps=[],this.dedutors=[],this.paymentSections=[],this.datepickerOptions=angular.copy(this.appSettings.datepickerOptions),this.niceScrollOptions=angular.copy(this.appSettings.scrollSettings),this.fileUploadSettings=angular.copy(this.appSettings.fileUploadSettings),this.fileUploadSettings.maxFileSize=2e6,this.fileUploadSettings.allowedFileTypes="csi",this.csiFile=[],this.blobContainers=this.blobContainers,this.steps.push({index:1,title:"Form 24Q Settings",name:"form24qsettings",description:"Form 24q Settings",initStep:"",valid:!1}),this.steps.push({index:2,title:"Generate Form 24Q Loading",name:"generating",description:"Generate Form 24Q",initStep:""}),this.steps.push({index:3,title:"Form 24Q Result",name:"result",description:"Generated Form 24Q Out Comes",initStep:""}),this.steps.push({index:4,title:"Form 24Q Generation Errors",name:"errors",description:"Form 24Q Errors",initStep:""}),this.quarter=s.quarter,this.payGroupId=s.groupId,this.generationResult=s.quarter.generationDetails,this.states=this.states,this.currentStep=s.showErrors?this.steps[3]:s.showDownloads?this.steps[2]:this.steps[0],this.currentStepIndex=this.currentStep.index,this.model=this.form24QSettings,this.scope.$on("$destroy",function(e){d.timeout.cancel(d.generationStatusTimer)}),this.dedutors=[{id:"A",description:"CENTRAL GOVERNMENT",$$hashKey:"00P"},{id:"S",description:"STATE GOVERNMENT",$$hashKey:"00V"},{id:"D",description:"STATUTORY BODY (CENTRAL GOVT.)",$$hashKey:"00W"},{id:"E",description:"STATUTORY BODY (STATE GOVT.)",$$hashKey:"00X"},{id:"G",description:"AUTONOMOUS BODY (CENTRAL GOVT.)",$$hashKey:"00L"},{id:"H",description:"AUTONOMOUS BODY (STATE GOVT.)",$$hashKey:"00M"},{id:"L",description:"LOCAL AUTHORITY (CENTRAL GOVT.)",$$hashKey:"00T"},{id:"N",description:"LOCAL AUTHORITY (STATE GOVT.)",$$hashKey:"00U"},{id:"K",description:"COMPANY",$$hashKey:"00Q"},{id:"M",description:"BRANCH / DIVISION OF COMPANY",$$hashKey:"00O"},{id:"P",description:"ASSOCIATION OF PERSON (AOP)",$$hashKey:"00J"},{id:"T",description:"ASSOCIATION OF PERSON (TRUST)",$$hashKey:"00K"},{id:"J",description:"ARTIFICIAL JURIDICAL PERSON",$$hashKey:"00I"},{id:"B",description:"BODY OF INDIVIDUALS",$$hashKey:"00N"},{id:"Q",description:"INDIVIDUAL/HUF",$$hashKey:"00S"},{id:"F",description:"FIRM",$$hashKey:"00R"}],this.paymentSections=[{id:"92A",description:"Payment made to Govt. employees other than Union Govt. employees"},{id:"92B",description:"Payment made to employees other than Govt. employees"}]}return t.prototype.closeModal=function(){this.uibModalInstance.dismiss()},t.prototype.createForm24QRequest=function(){var e=this;if(this.quarter.isChallanAdded){if(this.form.form24Settingsform.$valid){var t=this.csiFile.length>0?this.csiFile[0].location:null,i=this.csiFile.length>0?this.csiFile[0].name:null;this.postPayrollService.etds.createForm24QGenerateRequest(this.payGroupId,this.quarter.quarterIndex,this.quarter.months[0].forMonth,this.quarter.months[0].year,this.model,i,t).then(function(t){e.notificationService.success("Form24Q Settings successfully saved"),e.currentStepIndex=2,e.generationRequest=t,e.generationStatusTimer=e.timeout(function(){e.getGenerationStatus()},3e4)},function(t){e.notificationService.error("An error occurred while saving Form 24Q settings")})}}else this.notificationService.error("There is no challans added in this quarter. Please add at least one challan to generate Form 24Q.")},t.prototype.saveForm24QRequest=function(){var e=this,t=this.csiFile.length>0?this.csiFile[0].location:null,i=this.csiFile.length>0?this.csiFile[0].name:null;this.postPayrollService.etds.saveForm24QSettings(this.payGroupId,this.quarter.quarterIndex,this.quarter.months[0].forMonth,this.quarter.months[0].year,this.model,i,t).then(function(t){e.notificationService.success("Form24Q Settings successfully saved")},function(t){e.notificationService.error("An error occurred while saving Form 24Q settings.")})},t.prototype.downloadCsiFile=function(){var e=this,t="/api/postpayroll/"+this.payGroupId+"/24q%2Fdownload?quarter="+this.quarter.quarterIndex+"&month="+this.quarter.months[0].forMonth+"&year="+this.quarter.months[0].year;this.fileDownloadService.downloadFile(t).then(function(t){t.isDownloaded||e.notificationService.error("An error has occurred.")})},t.prototype.getGenerationStatus=function(){var t=this;this.postPayrollService.etds.getForm24QGenerationStatus(this.payGroupId,this.generationRequest.identifier).then(function(i){t.generationResult=new e.Model.Form24QDetails(i),t.generationResult&&t.generationResult.status==t.form24QGenerationStatus.GenerationCompleted?(t.currentStepIndex=t.generationResult.hasError?4:3,t.timeout.cancel(t.generationStatusTimer)):t.generationStatusTimer=t.timeout(function(){t.getGenerationStatus()},6e4)})},t.prototype.getForm24QgenerationDoc=function(){this.fileDownloadService.downloadFile("/api/postpayroll/"+this.payGroupId+"/form24qgenerationdoc")},t.$inject=["$scope","$timeout","$uibModalInstance","AppSettings","NotificationService","PostPayrollService","quarterData","Form24QSettings","States","BlobContainers","FormDownloadService","$filter"],t}();e.Form24qGenerationController=a;var s=function(){function e(e,t,i,n,o,r,a){this.scope=e,this.timeout=t,this.uibModalInstance=i,this.appSettings=n,this.notificationService=o,this.postPayrollService=r,this.quarterData=a,this.datepickerOptions={},this.quarter=a.quarter,this.payGroupId=a.groupId,this.datepickerOptions=angular.copy(this.appSettings.datepickerOptions)}return e.prototype.saveForm24QSummary=function(){var e=this;if(this.form.form24QDetails.$valid){var t=angular.copy(this.model);return t.submittedOn=t.submittedOn.dateOnlyString(),this.postPayrollService.etds.saveform24QSubmission(this.payGroupId,this.quarter.generationDetails.id,this.model).then(function(t){e.notificationService.success("Form24Q submission details successfully saved"),e.uibModalInstance.close({submitted:!0,submittedOn:e.model.submittedOn,submissionToken:e.model.submissionToken})},function(t){e.notificationService.success("Error occurred while saving Form24Q Details")}),!0}return!1},e.prototype.closeOptionsModal=function(){this.uibModalInstance.close()},e.$inject=["$scope","$timeout","$uibModalInstance","AppSettings","NotificationService","PostPayrollService","quarterData"],e}();e.Form24qSubmissionController=s,angular.module("payroll").controller("PayrollETDSChallanController",t).controller("AddChallanController",i).controller("ChallanManageController",o).controller("TDSEmployeeMapController",n).controller("Form24qGenerationController",a).controller("Form24qSubmissionController",s).component("upsertChallan",{templateUrl:"IncomeTax/addChallan",controller:i,bindings:{cycleData:"=",postChallanDetails:"&",wizardCtrl:"=",currentStepIndex:"="}}).component("upsertChallanMapping",{templateUrl:"IncomeTax/ChallanManualMapping",controller:r,bindings:{cycleData:"=",challanDetails:"=",wizardCtrl:"=",currentStepIndex:"=",currentModalInstance:"="}})}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(t){!function(t){var i=function(e){function t(t,i,n,o,r,a,s,l){var c=e.call(this,n.setupState,o,r)||this;return c.scope=t,c.payrollConfigurationService=i,c.payrollConfiguration=n,c.$stateParams=a,c.dialogs=s,c.OnboardingService=l,c.getCompanyInformation=function(){c.OpenModal({templateUrl:"payrollCompanyInformation",windowClass:"full-screen-modal no-scroll-x",backdrop:!1,controller:"PayrollCompanyInformationController",resolve:{payrollConfig:function(){return c.payrollConfiguration}}})},c.getGeneralSettings=function(){c.OpenModal({templateUrl:"PayrollSettings/PayrollGeneralSettings",windowClass:"full-screen-modal",backdrop:!1,controller:"PayrollSetUpGeneralSettingsController",controllerAs:"ctrl",resolve:{payrollConfig:function(){return c.payrollConfiguration}}})},c.pfAndESISetting=function(){c.OpenModal({templateUrl:"pfAndESISetting",windowClass:"full-screen-modal pf-esi-settings-container",backdrop:!1,controller:"PayrollPFAndESISettingsController",resolve:{payrollConfig:function(){return c.payrollConfiguration}}})},c.openStatutoryFilingInformation=function(){c.OpenModal({templateUrl:"statutoryFilingInformation",windowClass:"full-screen-modal no-scroll-x pt-setup-container",backdrop:!1,controller:"PayrollStatuaryFilingInformationController",resolve:{payrollConfig:function(){return c.payrollConfiguration}}})},c.salaryConfigurationSetting=function(){c.OpenModal({templateUrl:"salaryConfiguration",windowClass:"full-screen-modal",backdrop:!1,controller:"PayrollSalaryConfigurationController",resolve:{payrollConfig:function(){return c.payrollConfiguration}}})},c.openCustomSalarySettings=function(){c.OpenModal({templateUrl:"customSalaryConfiguration",windowClass:"full-screen-modal no-scroll-x",backdrop:!1,controller:"CustomSalaryStructureSettingsController",controllerAs:"vm",resolve:{payrollConfig:function(){return c.payrollConfiguration}}})},c.openLoanSettings=function(){c.OpenModal({templateUrl:"loanSettings",windowClass:"full-screen-modal",backdrop:!1,controller:"PayrollLoanSettingsController",resolve:{payrollConfig:function(){return c.payrollConfiguration}}})},c.openItDeclarationSettings=function(){c.OpenModal({templateUrl:"itDeclarationSettings",windowClass:"full-screen-modal",backdrop:!1,controller:"ITDeclarationSettingsController",controllerAs:"ctrl",resolve:{payrollConfig:function(){return c.payrollConfiguration}}})},c.OpenModal=function(e){c.modal.open(e).result.then(function(e){e&&(c.payrollConfiguration.payFundConfig=angular.copy(e)),c.payrollConfigurationService.getconfiguration(c.$stateParams.groupId).then(function(e){c.payrollConfiguration.update(e),c.setup=c.payrollConfiguration.setupState,c.updateStepsStatus()})},function(e){})},c.isOnBoarding=window.location.href.includes("Onboard"),c.updateStepsStatus(),t.$on("payrollSetupStepClosed",function(e,t){t.payFundConfig&&(c.payrollConfiguration.payFundConfig=angular.copy(t.payFundConfig)),c.payrollConfigurationService.getconfiguration(c.$stateParams.groupId).then(function(e){c.payrollConfiguration.update(e),c.setup=c.payrollConfiguration.setupState,c.updateStepsStatus()})}),c}return __extends(t,e),t.prototype.skipSetupandCompleteOnboard=function(){var e=this;this.dialogs.confirm("Please Confirm",'Are you sure you want to <span class="text-bold upper-case">skip payroll setup and complete onboarding</span>?').result.then(function(){e.OnboardingService.skipModuleSetup().then(function(e){window.location.href="/",console.log("Onboard Completed.")})})},t.prototype.getDefaultSteps=function(){return this.isOnBoarding?{companyInfo:{id:1,title:"Company Information",name:"companyInfo",stateName:"companyInfoComplete"},generalsettings:{id:2,title:"General Payroll Settings",name:"generalsettings",stateName:"generalSettingsComplete"},pfAndESIsetting:{id:3,title:"PF & ESI Settings",name:"pfAndESIsetting",stateName:"pfesiComplete"},salaryComponentsAndStructures:{id:4,title:"Salary Components & Structures",name:"salaryComponentsAndStructures",stateName:"salaryConfigurationComplete"},customSalarySetting:{id:5,title:"Custom Salary Structure",name:"customSalarySetting",stateName:"customSalaryConfigComplete"},financeSettings:{id:6,title:"Finance Settings",name:"financeSettings",stateName:"financeSettingsComplete"},statutoryFilingInfo:{id:7,title:"Statutory Filing Information",name:"statutoryFilingInfo",stateName:"statutoryFilingDataComplete"},loanSettings:{id:8,title:"Employee Loan Settings",name:"loanSettings",stateName:"loanSettingsComplete"}}:{companyInfo:{id:1,title:"Company Information",name:"companyInfo",stateName:"companyInfoComplete"},generalsettings:{id:2,title:"General Payroll Settings",name:"generalsettings",stateName:"generalSettingsComplete"},pfAndESIsetting:{id:3,title:"PF & ESI Settings",name:"pfAndESIsetting",stateName:"pfesiComplete"},salaryComponents:{id:4,title:"Salary Components",name:"salaryComponents",stateName:"salaryComponentsComplete"},salarySetting:{id:5,title:"Salary Structure Configuration",name:"salarySetting",stateName:"salaryStructureConfigurationComplete"},financeSettings:{id:6,title:"Finance Settings",name:"financeSettings",stateName:"financeSettingsComplete"},statutoryFilingInfo:{id:7,title:"Statutory Filing Information",name:"statutoryFilingInfo",stateName:"statutoryFilingDataComplete"},loanSettings:{id:8,title:"Employee Loan Settings",name:"loanSettings",stateName:"loanSettingsComplete"}}},t.$inject=["$scope","PayrollConfigurationService","payrollConfiguration","$uibModal","SharedModel","$stateParams","dialogs","OnboardingService"],t}(SharedPatterns.Setup),n=function(){function e(e,t,i){this._filter=e,this._modalInstance=t,this._notificationService=i,this.steps=[],this.steps.push(new SharedModel.Step(1,"Payroll Dates","Payroll Date Settings","",!1)),this.steps.push(new SharedModel.Step(2,"Pay Period","Pay Period Calculation","",!1)),this.currentStep=this.steps[0]}return e.prototype.setConfigurationStep=function(e){this.currentStep=this.steps.filter(function(t){return t.index==e})[0]},e.$inject=["$scope","$filter","$uibModal","dialogs","NotificationService"],e}(),o=function(){function e(e,t,i){this._filter=e,this._modalInstance=t,this._notificationService=i,this.steps=[],this.steps.push(new SharedModel.Step(1,"PF Settings","PROVIENT FUND BASICS","",!1)),this.steps.push(new SharedModel.Step(2,"PF EMPLOYEE OPTIONS","PROVIENT FUND AMOUNT CALCULATION","",!1)),this.steps.push(new SharedModel.Step(3,"ESI SETTINGS","ESI SETTINGS","",!1)),this.currentStep=this.steps[0]}return e.prototype.setConfigurationStep=function(e){this.currentStep=this.steps.filter(function(t){return t.index==e})[0]},e.$inject=["$scope","$filter","$uibModal","dialogs","NotificationService"],e}(),r=function(){function e(e,t,i){this._filter=e,this._modalInstance=t,this._notificationService=i,this.steps=[],this.steps.push(new SharedModel.Step(1,"COMPANY INFO","COMPANY INFORMATION","",!1)),this.steps.push(new SharedModel.Step(2,"BANK ACCOUNTS","BANK INFORMATION","",!1)),this.steps.push(new SharedModel.Step(3,"COMPANY LOCATIONS","COMPANY LOCATIONS","",!1)),this.currentStep=this.steps[0]}return e.prototype.setConfigurationStep=function(e){this.currentStep=this.steps.filter(function(t){return t.index==e})[0]},e.$inject=["$scope","$filter","$uibModal","dialogs","NotificationService"],e}(),a=function(){function t(e,t,i,n,o,r,a){this.payrollConfigurationService=e,this.modalServiceInstance=t,this.notificationService=i,this.payrollModel=n,this.payrollConfig=o,this.rootScope=r,this.$q=a,this.daysInMonth=[],this.monthList=[],this.monthsDict={},this.monthList=[{name:"Apr",fullName:"April",id:3,monthId:4},{name:"May",fullName:"May",id:4,monthId:5},{name:"Jun",fullName:"June",id:5,monthId:6},{name:"Jul",fullName:"July",id:6,monthId:7},{name:"Aug",fullName:"August",id:7,monthId:8},{name:"Sep",fullName:"September",id:8,monthId:9},{name:"Oct",fullName:"October",id:9,monthId:10},{name:"Nov",fullName:"November",id:10,monthId:11},{name:"Dec",fullName:"December",id:11,monthId:12},{name:"Jan",fullName:"January",id:0,monthId:1},{name:"Feb",fullName:"February",id:1,monthId:2},{name:"Mar",fullName:"March",id:2,monthId:3}],this.monthsDict=this.monthList.reduce(function(e,t,i){return e[t.monthId]=t,e},{});for(var s=1;s<=27;s++)this.daysInMonth.push({id:s,title:s.toString()});this.daysInMonth.push({id:99,title:"Last day of month"}),this.employeeConfig=new this.payrollModel.EmployeeConfiguration(this.payrollConfig.employee),this.tdsConfig=new this.payrollModel.TDSConfiguration(this.payrollConfig.tdsConfiguration)}return t.prototype.resetTaxRegimeDetails=function(){this.employeeConfig.taxRegime.canEmployeeUpdate||(this.employeeConfig.taxRegime.cutOffMonth=null,this.employeeConfig.taxRegime.cutOffDay=null,this.formController.myFinanceSettingsForm.$setPristine())},t.prototype.resetSubmissionDetails=function(){this.employeeConfig.declaration.requireProofSubmission||(this.employeeConfig.declaration.proofSubmissionDueDay=null,this.employeeConfig.declaration.proofSubmissionDueMonth=null,this.employeeConfig.declaration.requireValidation=!1,this.formController.myFinanceSettingsForm.$setPristine())},t.prototype.addNewIpRestriction=function(){this.employeeConfig.myPayRestrictIPRange.push(new e.Model.IpAddressRange({}))},t.prototype.removeIpRange=function(e){this.employeeConfig.myPayRestrictIPRange.splice(e,1)},t.prototype.updateITDeclarationConfig=function(){var e=this;this.formController.myFinanceSettingsForm.$valid&&this.$q.all([this.payrollConfigurationService.saveEmployeeConfiguration(this.payrollConfig.payGroupId,this.employeeConfig),this.payrollConfigurationService.saveTDSConfiguration(this.payrollConfig.payGroupId,this.tdsConfig)]).then(function(t){e.notificationService.success("Finance Settings Saved Successfully."),e.payrollConfig.employee=new e.payrollModel.EmployeeConfiguration(t[0]),e.payrollConfig.tdsConfiguration=new e.payrollModel.TDSConfiguration(t[1]),e.modalServiceInstance.close(),e.rootScope.$broadcast("payrollSetupStepClosed",{})},function(t){e.notificationService.error("An error occurred while saving finance settings.")})},t.$inject=["PayrollConfigurationService","$uibModalInstance","NotificationService","PayrollModel","payrollConfig","$rootScope","$q"],t}(),s=function(){function t(e,t,i,n,o,r,a,s){var l=this;this.scope=e,this.payrollConfigurationService=t,this.payrollService=i,this.payrollConfiguration=n,this.payrollModel=o,this.notificationService=r,this.modalInstance=a,this.uibModal=s;var c=this.payrollConfiguration.payrollSchedule.payCycle;i.cycle.getLastFinalizedCycle(n.payGroupId).then(function(e){l.lastFinalizeCycle=new l.payrollModel.PayrollCycle(e);var t=c.getNextPayCycle(l.lastFinalizeCycle.month,l.lastFinalizeCycle.year);l.model=new l.payrollModel.PayCycle(c),l.model.payCycleMonth=new Date(t.year,t.month,Date.daysInMonth(t.month,t.year)),l.model.payCycleEndDate=t.lastDay,l.model.payDay=t.payDay,l.generateNewPayCycles(l.model),l.setbinding()})}return t.prototype.updateCycleConfig=function(){this.generateNewPayCycles(this.model),this.model.payDay=null,this.payDayList=this.model.getPayDayList()},t.prototype.changePayPeriodDates=function(){!this.disableButton&&this.form.cycleChangeForm.$valid&&this.uibModal.open({templateUrl:"confirm-changePayPeriodDates",keyboard:!1,backdrop:"static",windowClass:"finalize-payroll-modal grey-modal-header",scope:this.scope})},t.prototype.savePayPeriodDates=function(){var e=this;this.disableButton=!0,this.payrollConfigurationService.savechangePayPeriod(this.payrollConfiguration.payGroupId,this.model).then(function(t){e.notificationService.success("Payroll cycle dates changed."),e.modalInstance.close(t)},function(t){e.disableButton=!1,e.notificationService.error("Error while saving settings.")})},t.prototype.setbinding=function(){var e=this;this.payPeriodEndDateList=this.model.getPayPeriodEndDateList(),this.payDayList=this.model.getPayDayList(),this.payDayList.forEach(function(t){e.model.payDay.equals(t.id)&&(e.model.payDay=t.id)}),this.payPeriodEndDateList.forEach(function(t){e.model.payCycleEndDate.equals(t.id)&&(e.model.payCycleEndDate=t.id)})},t.prototype.generateNewPayCycles=function(t){var i=this,n={payCycleMonth:t.payCycleMonth.dateOnlyString(),payCycleEndDate:t.payCycleEndDate.dateOnlyString(),frequency:t.frequency};this.payrollConfigurationService.generateNewCycles(this.payrollConfiguration.payGroupId,n,3).then(function(t){i.newPayCycles=t.newCycles.map(function(t){return new e.Model.PayCycleView(t)})})},t.$inject=["$scope","PayrollConfigurationService","PayrollService","payrollConfiguration","PayrollModel","NotificationService","$uibModalInstance","$uibModal"],t}(),l=function(){function e(e,t,i,n,o,r,a,s,l,c,p,u){var d=this;this.scope=e,this.PayrollModel=t,this.q=i,this.uibModalInstance=n,this.OrgSettingServices=o,this.PayrollConfigurationService=r,this.NotificationService=a,this.LookupServices=s,this.payrollConfig=l,this.dialogs=c,this.modalService=p,this.rootScope=u,this.model={payCycle:null,payPeriod:null},this.init(),e.$watch("ctrl.payCycle.payCycleEndDate",function(e,t){e==t||d.resetPayCycle&&!d.changePayCycle||(d.payDayList=[],d.payCycle.payDay=null,e&&(d.payDayList=d.payCycle.getPayDayList(),d.payPeriod=d.payCycle.getPayPeriod()))}),e.$watch("ctrl.payCycle.payCycleMonth",function(e,t){e==t||d.resetPayCycle&&!d.changePayCycle||(d.payPeriodEndDateList=[],d.payPeriod={},d.payCycle.payCycleEndDate=null,e&&(d.payPeriodEndDateList=d.payCycle.getPayPeriodEndDateList()))}),e.$watch("ctrl.resetPayCycle",function(e,t){e!=t&&(d.resetPayCycle=d.changePayCycle)})}return e.prototype.init=function(){this.setPayPeriodOptions(),this.setWorkingDayOptions(),this.payCycleMonthList=this.payrollConfig.payrollSchedule.payCycle.getPayCycleMonthList(11,1),this.bindViewPaySettings(),this.model.payPeriod.workingDays&&this.workingDays.every(function(e){return e.id!=this.model.payPeriod.workingDays},this)&&this.workingDays.push({id:this.model.payPeriod.workingDays,title:this.model.payPeriod.workingDays.toString()})},e.prototype.setPayPeriodOptions=function(){this.payPeriodDays=[];for(var e=1;e<=31;e++)this.payPeriodDays.push({id:e,title:e.toString()})},e.prototype.setWorkingDayOptions=function(){this.workingDays=[];for(var e=20;e<=31;e++)this.workingDays.push({id:e,title:e.toString()});this.workingDays.push({id:-1,title:"Actual Days in month"})},e.prototype.bindViewPaySettings=function(){var e=angular.copy(this.payrollConfig);this.payPeriod=angular.copy(e.payrollSchedule.payPeriod),this.model.payPeriod=angular.copy(e.payrollSchedule.payPeriod),this.model.payCycle=angular.copy(e.payrollSchedule.payCycle),this.resetPayCycleMonth()},e.prototype.changePayCycleMonth=function(){var e=this;if(this.model.payCycle.payCycleMonth){var t=this.payCycleMonthList.find(function(t){return e.equals(e.model.payCycle.payCycleMonth,t.id)});t?this.payCycle.payCycleMonth=t.id:this.payCycle=new this.PayrollModel.PayCycle({}),this.changePayCycle=!0}},e.prototype.resetPayCycleMonth=function(){var e=this;this.payCycle=new this.PayrollModel.PayCycle(this.model.payCycle),this.model.payCycle.payCycleMonth&&(this.payPeriodEndDateList=this.model.payCycle.getPayPeriodEndDateList(),this.payPeriod=this.model.payCycle.getPayPeriod(),this.payDayList=this.model.payCycle.getPayDayList(),this.payDayList.forEach(function(t){e.payCycle.payDay.setHours(0,0,0,0)==t.id.setHours(0,0,0,0)&&(e.payCycle.payDay=t.id)}),this.payPeriodEndDateList.forEach(function(t){e.payCycle.payCycleEndDate.equals(t.id)&&(e.payCycle.payCycleEndDate=t.id)})),this.changePayCycle=!1},e.prototype.openCycleEndDateChangeWizard=function(){var e=this;this.modalService.open({templateUrl:"PayrollSettings/ChangePayCycleEndDate",windowClass:"full-screen-modal change-pay-cycle-container",controller:"PayCycleDatesChangeController as ctrl",resolve:{payrollConfiguration:function(){return e.payrollConfig}}}).result.then(function(t){e.model.payCycle.updateOnCycleDatesChange(t),e.resetPayCycle=!0,e.resetPayCycleMonth(),e.payrollConfig.payrollSchedule.payCycle.update(e.model.payCycle)})},e.prototype.equals=function(e,t){return e.getMonth()==t.getMonth()&&e.getYear()==t.getYear()},e.prototype.isFirstCycleFinalize=function(){return this.payCycle.firstCycle&&(1==this.payCycle.firstCycle.status||2==this.payCycle.firstCycle.status)},e.prototype.saveupdatedGeneralPayrollSettings=function(){var e=this,t={payCycle:this.payCycle,payPeriod:this.model.payPeriod};this.PayrollConfigurationService.savegeneralpayconfig(this.payrollConfig.payGroupId,new this.PayrollModel.PayrollSchedule(t)).then(function(t){e.editPayCycle=!1;var i=new e.PayrollModel.PayrollSchedule(t);e.payrollConfig.payPeriod=i.payPeriod,e.payrollConfig.payCycle=i.payCycle,e.NotificationService.success("General Payroll settings saved."),e.uibModalInstance.close(),e.rootScope.$broadcast("payrollSetupStepClosed",{})},function(t){e.NotificationService.error("An error occurred while saving settings."),e.model.payCycle=angular.copy(e.payrollConfig.payrollSchedule.payCycle),e.model.payPeriod=angular.copy(e.payrollConfig.payrollSchedule.payPeriod),e.resetPayCycleMonth()})},e.prototype.updateGeneralPayrollSettings=function(){if(this.payCycle.payCycleMonth&&this.payCycle.payCycleEndDate&&this.payCycle.payDay&&this.model.payPeriod.workingDays){var e=this.model.payCycle.validState&&!this.equals(this.model.payCycle.payCycleMonth,this.payCycle.payCycleMonth);!this.model.payCycle.validState||!e&&this.model.payCycle.payCycleEndDate.equals(this.payCycle.payCycleEndDate)?this.saveupdatedGeneralPayrollSettings():this.confirmModalInstance=this.modalService.open({templateUrl:"confirm-changeKekaStartsFrom",keyboard:!1,backdrop:"static",windowClass:"finalize-payroll-modal grey-modal-header",scope:this.scope})}else this.scope.$broadcast("validateForm")},e.prototype.confirmUpdateGeneralPayrollSettings=function(e){if(this.confirmModalInstance.close(),e)return this.saveupdatedGeneralPayrollSettings(),0;this.resetPayCycle=!0,this.resetPayCycleMonth()},e.$inject=["$scope","PayrollModel","$q","$uibModalInstance","OrgSettingServices","PayrollConfigurationService","NotificationService","LookupServices","payrollConfig","dialogs","$uibModal","$rootScope"],e}();angular.module("payroll").directive("payrollSetup",function(){return{restrict:"E",templateUrl:"payrollsettings/setup",controller:i,controllerAs:"vm"}}).controller("PayrollGetStartedController",i).controller("PayrollGeneralSettingsController",n).controller("PfEsiSettingsController",o).controller("CompanySettingsController",r).controller("ITDeclarationSettingsController",a).controller("PayCycleDatesChangeController",s).controller("PayrollSetUpGeneralSettingsController",l)}(t.Controllers||(t.Controllers={}))}(e.Configuration||(e.Configuration={}))}(Payroll||(Payroll={})),function(e){!function(e){var t=function(){function e(e,t,i,n,o){this._scope=e,this._filter=t,this._modal=i,this._dialogs=n,this._notificationService=o}return e.prototype.addSignature=function(){this._modal.open({templateUrl:"payrollsettings/addsignature",windowClass:"basic-modal",backdrop:"static",keyboard:!1,controller:function(){},resolve:{}})},e.$inject=["$scope","$filter","$uibModal","dialogs","NotificationService"],e}();var i=function(){function e(e,t,i,n,o){this._scope=e,this._filter=t,this._modal=i,this._dialogs=n,this._notificationService=o}return e.prototype.addBankAccount=function(){this._modal.open({templateUrl:"payrollsettings/addbankaccount",windowClass:"basic-modal",backdrop:"static",keyboard:!1,controller:function(){},resolve:{}})},e.$inject=["$scope","$filter","$uibModal","dialogs","NotificationService"],e}();var n=function(){function e(e,t,i,n,o){this._scope=e,this._filter=t,this._modal=i,this._dialogs=n,this._notificationService=o}return e.prototype.addLocation=function(){this._modal.open({templateUrl:"payrollsettings/addlocation",windowClass:"basic-modal",backdrop:"static",keyboard:!1,controller:function(){},resolve:{}})},e.$inject=["$scope","$filter","$uibModal","dialogs","NotificationService"],e}();angular.module("payroll").component("payrollDates",{controller:function(){},controllerAs:"ctrl",bindings:{model:"=",saveAndContinue:"&"},templateUrl:"payrollsettings/payrolldates"}),angular.module("payroll").component("payPeriod",{controller:function(){},controllerAs:"ctrl",bindings:{model:"=",saveAndContinue:"&"},templateUrl:"payrollsettings/payperiod"}),angular.module("payroll").component("pfSettings",{controller:function(){},controllerAs:"ctrl",bindings:{model:"=",saveAndContinue:"&"},templateUrl:"payrollsettings/pfsettings"}),angular.module("payroll").component("pfEmployeeOptions",{controller:function(){},controllerAs:"ctrl",bindings:{model:"=",saveAndContinue:"&"},templateUrl:"payrollsettings/pfemployeeoptions"}),angular.module("payroll").component("esiSettings",{controller:function(){},controllerAs:"ctrl",bindings:{model:"=",saveAndContinue:"&"},templateUrl:"payrollsettings/esisettings"}),angular.module("payroll").component("companyInformation",{controller:t,controllerAs:"ctrl",bindings:{model:"=",saveAndContinue:"&"},templateUrl:"payrollsettings/companyinformation"}),angular.module("payroll").component("bankInformation",{controller:i,controllerAs:"ctrl",bindings:{model:"=",saveAndContinue:"&"},templateUrl:"payrollsettings/bankinformation"}),angular.module("payroll").component("companyLocations",{controller:n,controllerAs:"ctrl",bindings:{model:"=",saveAndContinue:"&"},templateUrl:"payrollsettings/companylocations"}),angular.module("payroll").controller("CompanyInformationController",t),angular.module("payroll").controller("BankInformationController",i),angular.module("payroll").controller("CompanyLocationsController",n)}(e.components||(e.components={}))}(payroll||(payroll={})),angular.module("payroll").factory("PayrollModel",["PayrollCycleStatus","AppContext","SharedModel","SalaryStructureGenerateSource","WorkerType",function(e,t,i,n,o){var r=[{name:"JAN",fullName:"January"},{name:"FEB",fullName:"February"},{name:"MAR",fullName:"March"},{name:"APR",fullName:"April"},{name:"MAY",fullName:"May"},{name:"JUN",fullName:"June"},{name:"JUL",fullName:"July"},{name:"AUG",fullName:"August"},{name:"SEP",fullName:"September"},{name:"OCT",fullName:"October"},{name:"NOV",fullName:"November"},{name:"DEC",fullName:"December"}],a=new Date((new Date).setHours(0,0,0,0)),s={allowance:1,contribution:2,adhoc:3,reimbursement:4,tax:5,fixed:6,arrear:7,deduction:8,reimbursable:9,others:50},l={none:0,weekly:1,biWeekly:2,monthly:3,quaterly:4,biYearly:5,yearly:6,once:7},c={get Basic(){return"basic"},get HRA(){return"hra"},get Medical(){return"medical"},get Transport(){return"transport"},get Special(){return"special"},get Professional(){return"professional"},get Travel(){return"travel"},get Food(){return"food"},get PF(){return"pf"},get VPF(){return"vpf"},get PFEmployer(){return"pfe"},get ProfessionalTax(){return"professionaltax"},get TDS(){return"tds"},get Bonus(){return"bonus"},get BonusJoining(){return"bonusjoining"},get BonusSales(){return"bonussales"},get Reimbursement(){return"reimbursement"},get Surcharge(){return"surcharge"},get EducationCess(){return"educationcess"},get ESI(){return"esi"},get ESIEmployer(){return"esie"},get Arrear(){return"arrear"},get CustomAllowance(){return"customallowance"},get CityCompensatoryAllowance(){return"citycompensatoryallowance"},get LeaveEncashment(){return"leaveencashment"},get DailyAllowance(){return"dailyallowance"},get Deduction(){return"deduction"},get Gratuity(){return"graduity"},get GratuityContribution(){return"graduityContribution"},get PFOtherCharges(){return"pfOtherCharges"},get DearnessAllowance(){return"da"},get NPSEmployer(){return"npse"}};function p(e){this.legalEntityId=e.legalEntityId,this.bankAccountIds=e.bankAccountIds,this.locations=e.locations,this.currency=e.currency,this.validState=e.validState}function u(e){this.min=e.min,this.max=e.max,this.salaryConfigurationName=e.salaryConfigurationName}function d(e){var t=[],i=this;this.from=Date.getDateObj(e.from),this.to=Date.getDateObj(e.to),this.next=function(){var e={from:angular.copy(this.from),to:angular.copy(this.to)};return e.from.setYear(this.from.getFullYear()+1),e.to.setYear(this.to.getFullYear()+1),new d(e)},this.previous=function(){var e={from:angular.copy(this.from),to:angular.copy(this.to)};return e.from.setYear(this.from.getFullYear()-1),e.to.setYear(this.to.getFullYear()-1),new d(e)},this.getMonthDetails=function(e){return t.find(function(t){return t.month==e})},this.getAllMonths=function(){return t},this.includes=function(e){return this.from<=e&&this.to>=e},this.toString=function(){return r[this.from.getMonth()].name+" "+this.from.getFullYear()+" - "+r[this.to.getMonth()].name+" "+this.to.getFullYear()},this.toJSON=function(){return{from:this.from.dateOnlyString(),to:this.to.dateOnlyString()}},function(){for(var e=angular.copy(i.from),n=0;n<=11;n++)t.push({month:e.getMonth(),year:e.getFullYear(),monthDetails:r[e.getMonth()],date:new Date(e)}),e.setMonth(e.getMonth()+1)}()}function m(e){this.isOrganizationNotExempt=e.isOrganizationNotExempt,this.restrictToStatutoryLimit=this.isOrganizationNotExempt&&e.restrictToStatutoryLimit,this.useStructureBasedPF=!this.restrictToStatutoryLimit&&e.useStructureBasedPF,this.excludeEmployerPFContributionFromCTC=this.isOrganizationNotExempt&&e.excludeEmployerPFContributionFromCTC,this.hideEmployerShareInPaySlip=!this.excludeEmployerPFContributionFromCTC&&e.hideEmployerShareInPaySlip,this.isEmployerContributionLimited=!this.restrictToStatutoryLimit&&this.excludeEmployerPFContributionFromCTC,this.maxEmployerContributionMonthly=this.isEmployerContributionLimited?e.maxEmployerContributionMonthly:null,this.excludeOtherChargesFromCTC=this.excludeEmployerPFContributionFromCTC||e.excludeOtherChargesFromCTC,this.hidePFOtherChargesInPaySlip=!e.excludeOtherChargesFromCTC&&e.hidePFOtherChargesInPaySlip,this.enableHigherPension=e.enableHigherPension||!1,this.showVPFSeparate=e.showVPFSeparate||!1,this.canAdjustComponentDueWorkRatio=e.canAdjustComponentDueWorkRatio,this.allowOverride=this.isOrganizationNotExempt&&e.allowOverride,this.allowEmployeeRestrictToStatutoryLimit=!this.restrictToStatutoryLimit&&this.allowOverride&&e.allowEmployeeRestrictToStatutoryLimit,this.allowEmployeeShareOverride=this.allowOverride&&e.allowEmployeeShareOverride,this.isEmployeeShareOverridesTwiceYear=this.allowEmployeeShareOverride&&e.isEmployeeShareOverridesTwiceYear,this.overrideOnOrBeforeDay=this.allowEmployeeShareOverride?e.overrideOnOrBeforeDay:null,this.overrideMonths=this.isEmployeeShareOverridesTwiceYear?e.overrideMonths:[],this.allowEmployeeOptOutFromPF=this.allowOverride&&e.allowEmployeeOptOutFromPF,this.hasOptOutBasicLimit=this.allowEmployeeOptOutFromPF&&e.hasOptOutBasicLimit,this.optOutBasicLimit=this.hasOptOutBasicLimit?e.optOutBasicLimit:null,this.statutoryLimit=e.statutoryLimit||15e3,this.validState=e.validState,this.construct=function(){this.constructor(this)}}function y(e){this.statutoryLimit=e.statutoryLimit,this.isOrganizationNotExempt=e.isOrganizationNotExempt,this.excludeEmployerContributionFromCTC=this.isOrganizationNotExempt&&e.excludeEmployerContributionFromCTC,this.hideEmployerShareInPaySlip=!this.excludeEmployerContributionFromCTC&&e.hideEmployerShareInPaySlip,this.excludeEmployerShareFromGross=!this.excludeEmployerContributionFromCTC&&e.excludeEmployerShareFromGross,this.excludeGratuityContributionFromGross=e.excludeGratuityContributionFromGross,this.includeAdditionPaymentsInContributionGross=e.includeAdditionPaymentsInContributionGross||!1,this.includeAdditionPaymentsInEligibleGross=e.includeAdditionPaymentsInEligibleGross||!1,this.useStructureBasedESI=e.useStructureBasedESI||!1,this.canAdjustComponentDueWorkRatio=e.canAdjustComponentDueWorkRatio,this.validState=e.validState,this.restrictToStatutoryGrossWhenIncomeChanges=e.restrictToStatutoryGrossWhenIncomeChanges,this.construct=function(){this.constructor(this)}}Date.noOfDays=function(e,t){return Math.round((t-e)/864e5)+1},Date.isFromLessThanTo=function(e,t){var i=Date.noOfDays(e,new Date(e.getFullYear(),e.getMonth()+1,0));return Date.noOfDays(new Date(t.getFullYear(),t.getMonth(),1),t)>i},Date.prototype.addDays=function(e){return new Date(this.getFullYear(),this.getMonth(),this.getDate()+e)},Date.prototype.addMonths=function(e){var t=0;if(this.getDate()>27){if(e>0)for(var i=1;i<=e;i++)t+=Date.daysInMonth(this.getMonth()+i,this.getFullYear());else for(i=e;i<0;i++)t-=Date.daysInMonth(this.getMonth()+i,this.getFullYear());return this.addDays(t)}return new Date(this.getFullYear(),this.getMonth()+e,this.getDate())},d.getFinancialYear=function(e){return e.getMonth()<3?new d({from:new Date(e.getFullYear()-1,3,1),to:new Date(e.getFullYear(),2,31)}):new d({from:new Date(e.getFullYear(),3,1),to:new Date(e.getFullYear()+1,2,31)})},g.prototype={get all(){return Object.keys(this).filter(function(e){return this[e]instanceof v},this).map(function(e){return this[e]},this)},get completedCount(){return this.all.reduce(function(e,t){return t.completed?e+1:e},0)},get completedPercent(){return this.completedCount/this.all.length*100}};var h=Class.extend({init:function(e){this.id=e.id,this.paygroupId=e.payGroupId||e.paygroupId,this.from="string"==typeof e.from?e.from.stringToDate():e.from,this.to="string"==typeof e.to?e.to.stringToDate():e.to,this.frequency=e.frequency,this.status=e.status,this.month=e.month-1,this.year=e.year,this.includes=function(e){return this.from<=e&&this.to>=e},this.toString=function(){return this.from.toLocaleDateString()+"-"+this.to.toLocaleDateString()},this.toSummary=function(){return this.summaryName+"-"+this.year},this.monthNameYear=function(){return this.name+"-"+this.year},this.getCyclePeriod=function(){return r[this.from.getMonth()].name+" "+this.from.getDate()+" - "+r[this.to.getMonth()].name+" "+this.to.getDate()+" "+this.year},this.isPreviousCycleFinalized=e.isPreviousCycleFinalized,Object.defineProperty(this,"noOfDays",{get:function(){return Date.noOfDays(this.from,this.to)}}),Object.defineProperty(this,"summaryName",{get:function(){return r[this.month].name}}),Object.defineProperty(this,"name",{get:function(){return r[this.month].fullName}})}}),f=h.extend({init:function(e){var t=[],i=[],n=[];this._super(e),this.actions=new g(e.actions),this.isPayslipReleased=e.isPayslipReleased,this.processSummary=new function(e){this.totalEmployees=e.totalEmployees,this.employeeProcessed=e.employeeProcessed,this.employeesError=e.employeesError,this.employeesSkipped=e.employeesSkipped}(e.processSummary),Object.defineProperty(this,"isRunHappened",{get:function(){return t.length>0}}),Object.defineProperty(this,"runHistory",{get:function(){return t}}),Object.defineProperty(this,"unfinalizeHistory",{get:function(){return i}}),Object.defineProperty(this,"payslipMailHistory",{get:function(){return n}}),Object.defineProperty(this,"lastPayslipMailSend",{get:function(){return n[0]}}),Object.defineProperty(this,"lastRun",{get:function(){return t[0]}});var o;o=e.runHistory,t=o.filter(function(e){return null==e.exception}).map(function(e){return new S(e)}).sort(function(e,t){return e.logOn>t.logOn?-1:1}),function(e){n=e.map(function(e){return new function(e){this.authorId=e.authorId,this.authorName=e.authorName,this.profileImage=e.profileImage,this.sendOn=new Date(e.sendOn),this.payslipIds=e.payslipIds,this.employees=e.employees}(e)}).sort(function(e,t){return e.sendOn>t.sendOn?-1:1})}(e.payslipMailHistory),function(e){i=e.map(function(e){return new function(e){this.reason=e.reason,this.authorId=e.authorId,this.authorName=e.authorName,this.profileImage=e.profileImage,this.logOn=new Date(e.logOn)}(e)}).sort(function(e,t){return e.logOn>t.logOn?-1:1})}(e.unfinalizeHistory)}});function g(e){this.leavesAndAttendance=new v(e.leavesAndAttendance),this.newJoineesAndExits=new v(e.newJoineesAndExits),this.bonusAndSalaryRevisions=new v(e.bonusAndSalaryRevisions),this.oneTimePaymentsAndDeductions=new v(e.oneTimePaymentsAndDeductions),this.arrearsAndOnHold=new v(e.arrearsAndOnHold),this.reviewAllEmployees=new v(e.reviewAllEmployees),this.completed=e.completed||!1}function v(e){this.actionFor=e.actionFor,this.completed=e.completed;var t=e.reviews.map(function(e){return new S(e)}).sort(function(e,t){return e.logOn>t.logOn?-1:1});this.previousReviews=function(){return t},this.lastReview=function(){return t[0]},this.isReviewed=function(){return t.length>0}}function S(e){this.authorId=e.authorId,this.authorName=e.authorName,this.profileImage=e.profileImage,this.logOn=new Date(e.logOn)}function C(e){this.payCycle=new w(e.payCycle||{}),this.payPeriod=new function(e){this.workingDays=e.workingDays||-1,this.excludeWeeklyOff=e.excludeWeeklyOff||!1,this.excludeHolidays=e.excludeHolidays||!1,this.validState=e.validState||!1,this.useActualDays=function(){return-1===this.workingdays},this.getWorkingDaysListForMonth=function(){for(var e=[],t=18;t<30;t++)e.push({id:t,title:t.toString()});return e.push({id:-1,title:"Actual days in the month"}),e}}(e.payPeriod||{}),this.validState=this.payCycle.validState&&this.payPeriod.validState}function w(t){var n=this;function o(e,t){var i=e-n.payCycleCorrection();(0==(i=i>11?0:i<0?11:i)&&11==e||11==i&&0==e)&&(t-=n.payCycleCorrection());var o=n.payCycleEndDate.getDate()<28?n.payCycleEndDate.getDate():Date.daysInMonth(i,t);return new Date(t,i,o)}function s(e){var t=e.addDays(1).addMonths(-1),o=e.getMonth()+n.payCycleCorrection();o=o>11?0:o<0?11:o;var a=Date.noOfDays(n.payCycleEndDate,n.payDay),s=new function e(t){this.firstDay=t.firstDay;this.lastDay=t.lastDay;this.payDay=t.payDay;this.month=t.month;this.monthName=r[this.month].name;this.year=t.year;this.withoutTimezoneOffset=function(){var t=this.firstDay.getTimezoneOffset();return new e({firstDay:new Date(this.firstDay.getTime()-6e4*t),lastDay:new Date(this.lastDay.getTime()-6e4*t),payDay:new Date(this.payDay.getTime()-6e4*t)})};this.noofdays=function(){return Date.noOfDays(this.firstDay,this.lastDay)};this.getPayPeriod=function(){return r[this.firstDay.getMonth()].name+" "+this.firstDay.getDate()+" - "+r[this.lastDay.getMonth()].name+" "+this.lastDay.getDate()}}({firstDay:new i.DateWithZeroTime(new Date(t.getFullYear(),t.getMonth(),n.payPeriodStartDay())),lastDay:e,year:e.getFullYear(),month:o,payDay:e.addDays(a-1)});return(0==o&&11==e.getMonth()||11==o&&0==e.getMonth())&&(s.year+=n.payCycleCorrection()),s}this.frequency=t.frequency||1,this.kekaStartsFrom=Date.getDateObj(t.kekaStartsFrom),this.payCycleMonth=Date.getDateObj(t.payCycleMonth),this.payCycleEndDate=Date.getDateObj(t.payCycleEndDate),this.payDay=Date.getDateObj(t.payDay),this.payPeriod=t.payPeriod,this.validState=t.validState||!1,this.payPeriodStartDay=function(){return this.payCycleEndDate.getDate()>=28?1:this.payCycleEndDate.getDate()+1},this.firstCycle=t.firstCycle?new h(t.firstCycle):null,this.payCycleCorrection=function(){return 12*this.payCycleMonth.getFullYear()+(this.payCycleMonth.getMonth()-1)-(12*this.payCycleEndDate.getFullYear()+(this.payCycleEndDate.getMonth()-1))},this.isPayPeriodEndsOnLastDay=function(){return this.payCycleEndDate.getDate()>=28},this.canSkip=function(t){return this.firstCycle.status==e.Pending.id&&this.firstCycle.includes(t)},this.updateOnCycleDatesChange=function(e){this.payCycleMonth=Date.getDateObj(e.payCycleMonth),this.payCycleEndDate=Date.getDateObj(e.payCycleEndDate),this.payDay=Date.getDateObj(e.payDay)},this.update=function(e){this.constructor(e)},this.getPayCycleMonthList=function(e,t){for(var i,n=[],o=1;o<=e+t+1;o++)i=new Date(new Date(Date.UTC(a.getFullYear(),a.getMonth()+o-e,0)).setHours(0,0,0,0)),n.push({id:i,title:r[i.getMonth()].name});return n},this.getPayPeriodEndDateList=function(){for(var e=[],t=this.payCycleMonth.addDays(-this.payCycleMonth.getDate()),i=1;i<=27;i++){var n=t.addDays(i);e.push({id:n,title:r[n.getMonth()].name+" "+n.getDate()})}for(e.push({id:this.payCycleMonth,title:r[this.payCycleMonth.getMonth()].name+" Last Day"}),t=this.payCycleMonth,i=1;i<=15;i++)n=t.addDays(i),e.push({id:n,title:r[n.getMonth()].name+" "+n.getDate()});return e},this.getPayDayList=function(){var e,t=[],i=this.payCycleEndDate,n=0;for(this.isPayPeriodEndsOnLastDay()&&(e=angular.copy(i),e=new Date(new Date(e.setDate(e.getDate()+n)).setHours(0,0,0,0)),t.push({id:e,title:"Last Day Of The Month"}),n=1);n<60;n++)e=angular.copy(i),e=new Date(new Date(e.setDate(e.getDate()+n)).setHours(0,0,0,0)),t.push({id:e,title:r[e.getMonth()].name+" "+e.getDate()});return t},this.toJSON=function(){return{payCycleMonth:this.payCycleMonth.dateOnlyString(),payDay:this.payDay.dateOnlyString(),payCycleEndDate:this.payCycleEndDate.dateOnlyString(),frequency:this.frequency}},this.getPayPeriod=function(){return this.getPayCycle(this.payCycleEndDate).getPayPeriod()},this.getFuturePayPeriodList=function(e,t){var i=[];e=e||new Date,t=t||12,range=this.getNextCycle(this.getPayCycle(e)),i.push(range);for(var n=0;n<t-1;n++){var r=range.lastDay.addMonths(n+1);i.push(s(o(r.getMonth(),r.getFullYear())))}return i},this.getFuturePayPeriodListBasedOnMonth=function(e,t,i){var n=[];i=i||12,range=this.getNextCycle(e,t),n.push(range);for(var r=0;r<i-1;r++){var a=range.lastDay.addMonths(r+1);n.push(s(o(a.getMonth(),a.getFullYear())))}return n},this.getPreviousPayCycle=function(e){var t=new Date(e.from.getFullYear(),e.from.getMonth(),e.from.getDate()-1);return this.getPayCycle(t)},this.getCurrentPayPeriod=function(){return this.getPayCycle(new i.DateWithZeroTime)},this.getPayCycle=function(e){return e>o(e.getMonth(),e.getFullYear())?this.getNextPayCycle(e.getMonth(),e.getFullYear()):this.getPayCycleBasedOnMonth(e.getMonth(),e.getFullYear())},this.getNextCycle=function(e){return this.getPayCycle(e.lastDay.addDays(1))},this.getNextPayCycle=function(e,t){var i=new Date(t,e+1,1);return this.getPayCycleBasedOnMonth(i.getMonth(),i.getFullYear())},this.getPayCycleBasedOnMonth=function(e,t){return s(o(e,t))}}function b(e){this.name=e.name,this.relation=e.relation}var P=Class.extend({init:function(e){this.affectedDueToLossOfPay=e.affectedDueToLossOfPay,this.allowEmployeeOverride=e.allowEmployeeOverride,this.amountExpression=e.amountExpression,this.amount=Number(e.amountExpression),this.allowOverride=e.allowOverride,this.canBeZero=e.canBeZero,this.canBeArrear=e.canBeArrear,this.componentName=e.componentName,this.componentType=e.componentType,this.firstPaidOn=e.firstPaidOn,this.helpText=e.helpText,this.isOptional=e.isOptional,this.maxExpression=e.maxExpression,this.outsideCTC=e.outsideCTC,this.paidFrequency=e.paidFrequency,this.title=e.title,this.disabled=e.disabled,this.isDeleted=e.isDeleted,this.hasTaxBenefits=e.hasTaxBenefits,this.internal=e.internal,this.autoCalculated=e.autoCalculated,this.requiredDeduction=e.requiredDeduction,this.componentVisibleType=e.componentVisibleType,this.sectionName=e.sectionName,this.sectionMaxAmount=Number(e.sectionMaxAmount),this.paySeparately=e.paySeparately,this.affectedDueToWorkedRatio=e.affectedDueToWorkedRatio,this.canAdjustDifferenceAmountDueWorkRatio=e.canAdjustDifferenceAmountDueWorkRatio,this.roundOffType=e.roundOffType,this.isCustom=e.isCustom,this.getInstallmentAmount=function(){return this.paidFrequency==l.monthly?this.amount/12:this.amount},this.updateOverrideAmount=function(e,t){this.allowOverride?(this.isOverrided=!0,this.amountExpression=e.toLowerCase()):(this.componentName==c.PF&&t.pf.useStructureBasedPF||this.componentName==c.ESI&&t.esi.useStructureBasedESI)&&(this.isOverrided=!0,this.amountExpression=e.toLowerCase())},this.getOverride=function(){if(this.isOverrided)return{componentName:this.componentName,amount:this.amountExpression.toLowerCase(),takeSupportComponent:this.takeSupportComponent}}}}),T=P.extend({init:function(e){this._super(e),this.eligibleMonths=e.eligibleMonths}}),D=P.extend({init:function(e){this._super(e),this.onActuals=e.onActuals}});function I(e){this.id=e.id,this.name=e.name,this.title=e.title,this.description=e.description,this.components=[],this.lastUpdated=new Date(e.lastUpdated),this.isValid=e.isValid,this.updateComponents=function(e){angular.forEach(e||{},function(e){this.components.push(N(e))},this)},this.getPFComponentConfig=function(){return this.components.find(function(e){return e.componentName==c.PF})},this.updateConfig=function(e){this.title=e.title,this.description=e.description,this.lastUpdated=e.lastUpdated,this.components=e.components},this.updateComponents(e.components)}function A(e){var t=this;this.id=e.id,this.employeeSalaryId=e.employeeSalaryId,this.employeeId=e.employeeId,this.ctc=e.ctc,this.structureGenerateSource=e.structureGenerateSource,this.effectiveFrom="string"==typeof e.effectiveFrom?e.effectiveFrom.stringToDate():e.effectiveFrom,this.overrides=new function(e){this.id=e.id,this.employeeId=e.employeeId,this.providentFund=new R(e.providentFund||{}),this.salaryComponents=e.salaryComponents,this.getComponentOverrideAmount=function(e){return this.salaryComponents[e]}}(e.overrides||{}),this.customStructureId=e.customStructureId,this.salaryConfigurationName=e.salaryConfigurationName,this.breakup={},this.breakup.items=[],this.structureLevelOpts=e.structureLevelOpts,this.identifier=e.identifier,this.isModifiable=e.isModifiable,this.reasons=e.reasons,this.version=e.version,this.remunerationType=e.remunerationType,this.breakup.total=function(){return this.items.reduce(function(e,t){return e+t.amount},0)},angular.forEach(e.breakup.items||{},function(e,i){t.breakup.items.push(new E(e))}),this.isSalaryProcessed=null!=e.isSalaryProcessed&&e.isSalaryProcessed,this.getMonthlySalary=function(){return Math.floor(this.ctc/12)},this.doesComponentExist=function(e){return!!this.getComponent(e)},this.getComponentAmount=function(e){var t=this.getComponent(e);if(t)return t.amount},this.getMonthlyComponentAmount=function(e){var t=this.getComponent(e);if(t)return t.monthlyAmount},this.getInSideCtcComponents=function(){return this.breakup.items.filter(function(e){return!e.outsideCTC&&e.componentType!==s.contribution&&e.componentType!=s.deduction})},this.getInSideCtcComponentsOtherThanBenefits=function(){return this.breakup.items.filter(function(e){return!e.outsideCTC&&!e.isBenefit&&e.componentType!==s.contribution&&e.componentType!=s.deduction})},this.getBenefitComponents=function(){return this.breakup.items.filter(function(e){return e.isBenefit})},this.getContributionAndDeductions=function(){return this.breakup.items.filter(function(e){return!e.outsideCTC&&(e.componentType==s.contribution||e.componentType==s.deduction)})},this.getOutSideCtcComponents=function(){return this.breakup.items.filter(function(e){return e.outsideCTC})},this.getComponent=function(e){return this.breakup.items.find(function(t){return t.componentName==e})},this.getSalaryItemsView=function(){return new function(e){var t,i=[],n=[],o=[],r=[],a=0,l=0,p=0,u=0,d=0,m=0,y=0,h=0;Object.defineProperty(this,"breakupItems",{get:function(){return i}}),Object.defineProperty(this,"benefitItems",{get:function(){return n}}),Object.defineProperty(this,"deductionItems",{get:function(){return o}}),Object.defineProperty(this,"outsideItems",{get:function(){return r}}),Object.defineProperty(this,"totalBreakupAmount",{get:function(){return d}}),Object.defineProperty(this,"totalOutsideAmount",{get:function(){return h}}),Object.defineProperty(this,"monthlyTotalBreakupAmount",{get:function(){return a}}),Object.defineProperty(this,"monthlyTotalOutsideAmount",{get:function(){return u}}),Object.defineProperty(this,"remunerationType",{get:function(){return t}}),this.grossAmount=function(){return d+m},this.netPayAmount=function(){return d-y},this.monthlyGrossAmount=function(){return a+l},this.monthlyNetPayAmount=function(){return a-p},buildSalaryItems=function(){t=e.remunerationType,e.breakup.items.forEach(function(e){var t=new E(e);t.outsideCTC?t.componentName!=c.PFOtherCharges&&(r.push(t),h+=t.amount,u+=t.monthlyAmount):t.isBenefit?(n.push(t),m+=t.amount,l+=t.monthlyAmount):t.componentType==s.contribution||t.componentType==s.deduction?(o.push(t),y+=t.amount,p+=t.monthlyAmount):(i.push(t),d+=t.amount,a+=t.monthlyAmount)})},buildSalaryItems()}(this)},this.isStructureLevelPFOptOut=function(){return!(this.structureLevelOpts||{enablePF:!0}).enablePF}}function E(e){this.componentName=e.componentName,this.componentTitle=e.componentTitle,this.amount=e.amount,this.payBy=e.payBy,this.outsideCTC=e.outsideCTC,this.paidFrequency=e.paidFrequency,this.componentType=e.componentType,this.isBenefit=e.isBenefit,this.isOverridden=e.isOverridden,this.isPartOfFBP=e.isPartOfFBP,Object.defineProperty(this,"monthlyAmount",{get:function(){return e.monthlyAmount||Number((this.amount/12).toFixed(2))||0},enumerable:!0})}function R(e){this.notConsiderOverride=e.notConsiderOverride,this.pfMonthlyEmployerShare=this.notConsiderOverride?null:e.pfMonthlyEmployerShare,this.pfMonthlyEmployeeShare=this.pfMonthlyEmployerShare,this.monthlyVPFShare=this.notConsiderOverride?void 0:0==this.pfMonthlyEmployerShare?0:e.monthlyVPFShare,this.doNotDeductPF=e.doNotDeductPF,this.canProrateBasedOnWorkratio=e.canProrateBasedOnWorkratio,this.totalEmployeeShare=0==this.pfMonthlyEmployeeShare?0:this.pfMonthlyEmployeeShare+this.monthlyVPFShare||null,this.construct=function(){this.constructor(this)},this.hasNewPFBasic=function(){return null!=this.pfMonthlyEmployeeShare&&null!=this.pfMonthlyEmployerShare},this.setTotalEmployeeShare=function(e){this.hasNewPFBasic()||(this.totalEmployeeShare=e+this.monthlyVPFShare)},this.updateEmployeeShare=function(e){this.totalEmployeeShare?null!=this.pfMonthlyEmployerShare?this.monthlyVPFShare=this.totalEmployeeShare-this.pfMonthlyEmployerShare:this.monthlyVPFShare=this.totalEmployeeShare-e:this.monthlyVPFShare=null}}function x(e){this.declaration=new function(e){function t(e,t,i){return 99==i?new Date(new Date(e,t+1,0).setHours(0,0,0,0)):new Date(new Date(e,t,i).setHours(0,0,0,0))}return{canUpdateMonthly:e.canUpdateMonthly,updateBeforeDay:e.updateBeforeDay,cutOffMonth:e.cutOffMonth,cutOffDay:e.cutOffDay,remindEmployees:e.remindEmployees,requireProofSubmission:e.requireProofSubmission,proofSubmissionDueDay:e.proofSubmissionDueDay||null,proofSubmissionDueMonth:e.proofSubmissionDueMonth||null,requireValidation:e.requireValidation||!1,disableDefaultRentDeduction:e.disableDefaultRentDeduction||!1,notALLowEmployeeToSubmitDeclarationAfterCutoffDate:e.notALLowEmployeeToSubmitDeclarationAfterCutoffDate,notRequireApprovalForDeclarationSubmittedAfterCutoffDate:e.notRequireApprovalForDeclarationSubmittedAfterCutoffDate,validState:e.validState,isCutOffDateComplete:function(e){var i=new Date((new Date).setHours(0,0,0,0)),n=e.getMonthDetails(this.cutOffMonth-1);if(n){var o=t(n.year,n.month,this.cutOffDay);return i>o}return!0},enableDeclarationEdit:function(e){var i=new Date((new Date).setHours(0,0,0,0)),n=e.getMonthDetails(this.cutOffMonth-1);if(n){var o=t(n.year,n.month,this.cutOffDay),r=t(i.getFullYear(),i.getMonth(),this.updateBeforeDay);return i>o&&!this.notALLowEmployeeToSubmitDeclarationAfterCutoffDate||i<=r&&i<=o}},enableDeclarationUploads:function(e){var i=new Date((new Date).setHours(0,0,0,0)),n=e.getMonthDetails(this.proofSubmissionDueMonth-1);if(n){var o=t(n.year,n.month,this.proofSubmissionDueDay);return!this.requireProofSubmission||i<=o}return!this.requireProofSubmission},isProofSubmissionRequired:function(e){return this.requireProofSubmission&&this.enableDeclarationUploads(e)},hasProofCutOffDate:function(){return this.proofSubmissionDueMonth&&this.proofSubmissionDueDay},cutOffDate:function(e){var i=e.getMonthDetails(this.cutOffMonth-1);if(i)return t(i.year,i.month,this.cutOffDay)},proofCutOffDate:function(e){var i=e.getMonthDetails(this.proofSubmissionDueMonth-1);if(i)return t(i.year,i.month,this.proofSubmissionDueDay)}}}(e.declaration),this.taxRegime=new function(e){function t(e,t,i){return 99==i?new Date(new Date(e,t+1,0).setHours(0,0,0,0)):new Date(new Date(e,t,i).setHours(0,0,0,0))}return{canEmployeeUpdate:e.canEmployeeUpdate,cutOffMonth:e.cutOffMonth,cutOffDay:e.cutOffDay,newJoineeCutOffMonth:e.newJoineeCutOffMonth,newJoineeCutOffDay:e.newJoineeCutOffDay,cutOffDaysAfterJoining:e.cutOffDaysAfterJoining,isCutOffDateComplete:function(e,i){var n=new Date(i),o=new Date((new Date).setHours(0,0,0,0)),r=e.getMonthDetails(this.cutOffMonth-1),a=e.getMonthDetails(this.newJoineeCutOffMonth-1);if(r&&a){var s=t(r.year,r.month,this.cutOffDay),l=t(a.year,a.month,this.newJoineeCutOffDay);return o>s&&!(n.setDate(n.getDate()+this.cutOffDaysAfterJoining)>=o&&l>=o)}return!0}}}(e.taxRegime),this.hideMyPay=e.hideMyPay||!1,this.hideMyTaxableIncome=e.hideMyPay&&e.hideMyTaxableIncome||!1,this.myPayRestrictIPRange=this.hideMyPay?e.myPayRestrictIPRange:[],this.holdSalaryByReportingManager=e.holdSalaryByReportingManager||!1,this.isEmployeeApprovalRequiredForFinanceDetailsUpdate=e.isEmployeeApprovalRequiredForFinanceDetailsUpdate||!1,this.validState=e.validState,this.construct=function(){this.constructor(this)}}function M(e){this.spreadTaxOnOneTimePayments=e.spreadTaxOnOneTimePayments||!1,this.skipIncomeTax=e.skipIncomeTax,this.includeFutureBonuses=e.includeFutureBonuses||!1,this.validState=e.validState,this.construct=function(){this.constructor(this)},this.update=function(){this.includeFutureBonuses&&(this.spreadTaxOnOneTimePayments=!0)}}var N=function(e){if(e.componentType===s.allowance)return new D(e);if(e.componentType===s.contribution)return new T(e);if(e.componentType===s.others||e.componentType===s.adhoc||e.componentType===s.reimbursement||e.componentType===s.tax||e.componentType===s.fixed||e.componentType===s.arrear||e.componentType===s.reimbursable||e.componentType===s.deduction)return new P(e);throw Error("Not a supported salary component type")},O=Class.extend({init:function(e,t){var i,n=this,o=null!=e.comments?e.comments.map(function(e){return new G(e)}):[];this.id=e.id,this.employeeName=e.employeeName,this.employeeNumber=e.employeeNumber,this.employeeId=e.employeeId,this.comments=[],this.previousComments=o.filter(function(e){return e.commentedInCycle!=t.id}).sort(function(e,t){return e.commentedOn>t.commentedOn?-1:1}),this.release=null!=e.release&&e.release,null==(i=o.find(function(e){return e.commentedInCycle==t.id}))&&(i=new G({commentedInCycle:t.id})),n.comments.push(i)}}),k=function(e){this.id=e.id,this.forCycle=e.forCycle,this.regularSalary=e.regularSalary,this.noSalaryDays=e.noSalaryDays,this.payAction=e.payAction,this.payableDays=e.payableDays,this.actualDays=e.actualDays,this.comments=null!=e.comments?e.comments.map(function(e){return new G(e)}):[new G({})]},F=O.extend({init:function(e,t){this._super(e,t),this.bonusType=e.bonusType,this.adhocPaymentId=e.adhocPaymentId,this.currentCTC=e.currentCTC,this.amount=e.amount,this.payBy=Date.getDateObj(e.payBy),this.carryForward=e.carryForward,this.status=e.status,this.payAction=e.payAction,this.payAmount=e.payAmount?Math.min(e.payAmount,e.amount):e.payPercentage?Number((e.amount*(e.payPercentage/100)).toFixed(2)):null,this.payPercentage=e.payAmount?100*this.payAmount/e.amount:e.payPercentage,this.isIncludeInTax=e.isIncludeInTax,this.processedType=e.processedType,this.paidOn=e.paidOn?Date.getDateObj(e.paidOn):null,this.isNew=function(){return null==this.id||0==this.id},this.since=this.isNew()?t.to:new i.DateWithZeroTime(e.since),this.outsideBonusIncludeInTax=this.isNew()?this.isIncludeInTax:e.outsideBonusIncludeInTax,this.outsideBonusPaidOn=this.isNew()?this.paidOn:e.outsideBonusPaidOn?Date.getDateObj(e.outsideBonusPaidOn):null,this.salaryPerMonth=function(){return this.currentCTC/12},this.grossPayPerMonth=function(){return this.salaryPerMonth()+this.amount},this.forCurrentMonth=function(){return t.includes(this.since)}}}),$=O.extend({init:function(e,t){this._super(e,t),this.oldCTC=e.oldCTC,this.latestCTC=e.latestCTC,this.revisionId=e.revisionId,this.isNew=function(){return null==this.id||0==this.id},this.change=function(){return parseFloat(((this.latestCTC-this.oldCTC)/this.oldCTC*100).toFixed(2))},this.getOldSalaryPerMonth=function(){return this.oldCTC/12},this.getRevisionSalaryPerMonth=function(){return this.latestCTC/12},this.grossPayPerMonth=function(){return this.release?this.getRevisionSalaryPerMonth():this.getOldSalaryPerMonth()},this.since=this.isNew()?t.to:new i.DateWithZeroTime(e.since),this.forCurrentMonth=function(){return t.includes(this.since)}}});function G(e){var i=this;this.content=e.content,this.commentedBy=e.commentedBy,this.authorName=e.authorName,this.profileImage=e.profileImage,this.commentedOn=new Date(e.commentedOn),this.commentedInCycle=e.commentedInCycle,this.valid=function(){return this.content&&null!=this.commentedBy&&null!=this.authorName&&null!=this.commentedOn&&null!=this.commentedInCycle},this.setAuditFields=function(){t.currentUser().then(function(e){i.commentedBy=e.id,i.authorName=e.displayName,i.profileImage=e.profileImageUrl,i.commentedOn=a})}}function L(e){this.restrictEmployeeInProbation=e.restrictEmployeeInProbation,this.eligibility=e.eligibility||new function(e){this.availability=e.availability||new function(e){this.afterProbation=e.afterProbation||!0,this.daysAfterJoining=e.daysAfterJoining}({}),this.limitGrossSalaryRange=e.limitGrossSalaryRange,this.minSalary=e.minSalary,this.maxSalary=e.maxSalary,this.eligibleInNoticePeriod=e.eligibleInNoticePeriod}({}),this.showApplicationToEmployee=e.showApplicationToEmployee,this.allowManagerToApply=e.allowManagerToApply,this.blockOnOutStandingLimit=e.blockOnOutStandingLimit,this.outStandingLimit=e.outStandingLimit,this.approvalProcess=e.approvalProcess||new function(e){this.requireSignedLegalAgreement=e.requireSignedLegalAgreement||!0,this.requireApprovalProcess=e.requireApprovalProcess||!0,this.approverLevels=e.approverLevels||[],this.limitLoanAmount=e.limitLoanAmount||!1,this.loanLimit=e.LoanLimit||new function(e){this.percentageOfGrossSalary=e.percentageOfGrossSalary,this.maxLoanLimit=e.maxLoanLimit,this.allowOverrideMaxLimit=e.allowOverrideMaxLimit||!1,this.overrideMaxLimitBy=e.overrideMaxLimitBy||[]}({})}({}),this.emiCalculation=e.emiCalculation||{interestCalculationMethod:2},this.terminationOfEmployment=e.terminationOfEmployment||{},this.validState=e.validState}function q(e){return{monthName:e.monthName,forMonth:e.forMonth,year:e.year,isBeforeKekaStarted:e.isBeforeKekaStarted,currentMonthTaxItems:new j(e.currentMonthTaxItems||{}),previousMonthTaxItems:new j(e.previousMonthTaxItems||{}),challanAmountPaid:new j(e.challanAmountPaid||{}),leftOverChallanBalance:new j(e.leftOverChallanBalance||{}),paidChallans:(e.paidChallans||[]).map(function(e){return new B(e)}),mappedCount:e.mappedCount,totalDeductees:e.totalDeductees,isDataAvailable:e.isDataAvailable,get challanAmountDue(){return new j({incomeTax:this.currentMonthTaxItems.incomeTax+this.previousMonthTaxItems.incomeTax-this.leftOverChallanBalance.incomeTax,surcharge:this.currentMonthTaxItems.surcharge+this.previousMonthTaxItems.surcharge-this.leftOverChallanBalance.surcharge,cess:this.currentMonthTaxItems.cess+this.previousMonthTaxItems.cess-this.leftOverChallanBalance.cess})},get challanAmountBalance(){return new j({incomeTax:this.challanAmountPaid.incomeTax-this.challanAmountDue.incomeTax,surcharge:this.challanAmountPaid.surcharge-this.challanAmountDue.surcharge,cess:this.challanAmountPaid.cess-this.challanAmountDue.cess})},get remainingChallanAmountToPay(){return new j({incomeTax:Math.max(this.challanAmountDue.incomeTax-this.challanAmountPaid.incomeTax,0),surcharge:Math.max(this.challanAmountDue.surcharge-this.challanAmountPaid.surcharge,0),cess:Math.max(this.challanAmountDue.cess-this.challanAmountPaid.cess,0)})},get isChallanAdded(){return this.paidChallans&&this.paidChallans.length>0},add:function(e){this.challanAmountPaid.incomeTax+=e.incomeTax,this.challanAmountPaid.surcharge+=e.surcharge,this.challanAmountPaid.cess+=e.cess},update:function(e){var t=0,i=0,n=0,o={};e.forEach(function(e){t+=e.challan.incomeTax,i+=e.challan.surcharge,n+=e.challan.cess,e.mapEntries.filter(function(e){return!(e.employeeId in this)},o).forEach(function(e){this[e.employeeId]=e.employeeId},o)}),this.challanAmountPaid=new j({incomeTax:t,surcharge:i,cess:n}),this.mappedCount=Object.keys(o).length},toString:function(){return this.monthName+" "+this.year}}}function j(e){return{incomeTax:Number(e.incomeTax||0),surcharge:Number(e.surcharge||0),cess:Number(e.cess||0),get totalTaxAmount(){return this.incomeTax+this.cess+this.surcharge}}}function B(e){return{id:e.id,forMonth:e.forMonth,serialNo:e.serialNo,branchCode:e.branchCode,bankId:e.bankId,dateOfPayment:Date.getDateObj(e.dateOfPayment),dateOfTaxDeducted:Date.getDateObj(e.dateOfTaxDeducted),incomeTax:e.incomeTax,surcharge:e.surcharge,cess:e.cess,interest:e.interest,others:e.others,penalty:e.penalty,minorHeadCode:e.minorHeadCode,get totalDepositAmount(){return Number(this.incomeTax||0)+Number(this.surcharge||0)+Number(this.others||0)+Number(this.interest||0)+Number(this.cess||0)+Number(this.penalty||0)},toJSON:function(){return this.dateOfPayment=this.dateOfPayment.dateOnlyString(),this.dateOfTaxDeducted=this.dateOfTaxDeducted.dateOnlyString(),this}}}function U(e){return{challanId:e.challanId,forMonth:e.forMonth,employeeId:e.employeeId,employeeName:e.employeeName,employeeNumber:e.employeeNumber,panNumber:e.panNumber,isZeroTax:e.isZeroTax,incomeTax:Number(e.incomeTax),surcharge:Number(e.surcharge),cess:Number(e.cess),amountPaid:Number(e.amountPaid),get amount(){return this.incomeTax+this.surcharge+this.cess},get isMapped(){return!!this.challanId},set isMapped(e){e},minus:function(e){this.incomeTax-=e.incomeTax,this.cess-=e.cess,this.surcharge-=e.surcharge},add:function(e){this.incomeTax+=e.incomeTax,this.cess+=e.cess,this.surcharge+=e.surcharge}}}function _(e){return{challan:new B(e.challan),mapEntries:(e.mapEntries||[]).map(function(e){return new U(e)}),get remainingCess(){return this.challan.cess-this.mapEntries.reduce(function(e,t){return e+t.cess},0)},get remainingIncomeTax(){return this.challan.incomeTax-this.mapEntries.reduce(function(e,t){return e+t.incomeTax},0)},get remainingSurcharge(){return this.challan.surcharge-this.mapEntries.reduce(function(e,t){return e+t.surcharge},0)},get remainingTotal(){return this.remainingIncomeTax+this.remainingCess+this.remainingSurcharge},canAdd:function(e){return e.surcharge>0&&this.remainingSurcharge>0||e.incomeTax>0&&this.remainingIncomeTax>0||e.cess>0&&this.remainingCess>0},map:function(e){if(this.canAdd(e)){var t=this.mapEntries.find(function(t){return t.employeeId==e.employeeId&&t.cycleId==e.cycleId});return e.challanId=this.challan.id,e.incomeTax=this.remainingIncomeTax-e.incomeTax<0?this.remainingIncomeTax:e.incomeTax,e.cess=this.remainingCess-e.cess<0?this.remainingCess:e.cess,e.surcharge=this.remainingSurcharge-e.surcharge<0?this.remainingSurcharge:e.surcharge,t?t.add(e):this.mapEntries.push(e),e}},upMap:function(e){var t=this.mapEntries.indexOf(e);if(t>-1)return this.mapEntries.splice(t,1),e.challanId=null,e},difference:function(e){this.RemainingSurcharge;var t=this.RemainingCess,i=this.RemainingIncomeTax,n=t-e.IncomeTax<0?i:e.IncomeTax,o=remainingSurcharge-e.Surcharge<0?remainingSurcharge:e.Surcharge,r=t-e.Cess<0?t:e.Cess;return e.IncomeTax==n&&e.Surcharge==o&&e.Cess==r?1:n>0||r>0||o>0?0:-1}}}var H=Class.extend({init:function(e){this.id=e.id,this.employeeId=e.employeeId,this.source=e.source,this.lopDates=e.lopDates,this.days=e.days,this.payCycle=e.payCycle,this.comment=e.comment,this.valid=function(){return this.employeeId>0&&this.source}}}),V=H.extend({init:function(e){this._super(e),this.employeeName=e.employeeName,this.employeeNumber=e.employeeNumber,e.override&&1!=e.override.source||(e.override={employeeId:e.employeeId,payCycle:e.payCycle,source:e.source,comment:e.override?e.override.comment:null}),this.override=new H(e.override),this.update=function(){null!=this.override.days?this.override.source=3:(this.comment=this.override.comment,this.override=new H({employeeId:this.employeeId,payCycle:this.payCycle,source:this.source,comment:this.comment}))},this.getLOP=function(){return this.comment=this.override.comment,null!=this.override.days?this.override:new H(this)},this.isValid=function(){return 1==this.override.source?this.valid():this.override.valid()}}});function Y(e){this.name=e.name,this.designation=e.designation,this.pan=e.pan,this.emailId=e.emailId,this.phoneNumber=e.phoneNumber,this.mobileNumber=e.mobileNumber,this.address1=e.address1,this.address2=e.address2,this.address3=e.address3,this.state=e.state,this.pin=e.pin,this.stdCode=e.stdCode,this.fathersName=e.fathersName,this.city=e.city}return{PayrollConfiguration:function(e){var t=this;this.id=e.id,this.payGroupId=e.payGroupId,this.payrollSchedule=null==e.payrollSchedule?new C({payCycle:e.payCycle,payPeriod:e.payPeriod}):new C(e.payrollSchedule),this.supportedSalaryComponents=[],angular.forEach(e.supportedSalaryComponents||{},function(e,i){t.supportedSalaryComponents.push(N(e))}),this.salaryStructures=e.salaryStructures.map(function(e){return new I(e)}),this.customSalaryConfig=new function(e){this.customSalaryStructures=e.customSalaryStructures.map(function(e){return new I(e)}),this.validState=e.validState,this.getTitleAndIdentifier=function(){return this.customSalaryStructures.map(function(e){return{name:e.name,title:e.title}})}}(e.customSalaryConfig),this.pf=new m(e.pf),this.esi=new y(e.esi),this.pt=new function e(t){var i={},n=this;this.isOrganizationNotExempt=t.isOrganizationNotExempt,this.includeAdditionPaymentsInGrossCalculation=this.isOrganizationNotExempt&&t.includeAdditionPaymentsInGrossCalculation,this.groupByDefaultPTState=this.isOrganizationNotExempt&&t.groupByDefaultPTState,Object.defineProperty(this,"ptGroups",{get:function(){return Object.keys(i).map(function(e){return i[e]})},enumerable:!0}),Object.defineProperty(this,"groups",{get:function(){return i}}),this.clone=function(){return new e(this)},this.addGroup=function(e){return i[e.defaultState]=e,e},this.deleteGroup=function(e){return delete i[e]},this.updateGroup=function(e){var t=this.ptGroups.find(function(e){return e.actualStates.some(function(t){return t==e.defaultState})});if(t)return delete i[t.defaultState],this.addGroup(e)},this.construct=function(){i={},this.groupByDefaultPTState=this.isOrganizationNotExempt&&this.groupByDefaultPTState},n.isOrganizationNotExempt&&n.groupByDefaultPTState&&t.ptGroups?t.ptGroups.map(function(e){return this[e.defaultState]=e},i):i={}}(e.pt),this.payFundConfig=new p(e.payFundConfig),this.ptApplicableStates=e.ptApplicableStates,this.enableEmployeeLoans=e.enableEmployeeLoans,this.loanConfiguration=new L(e.loanConfiguration),this.tdsConfiguration=new M(e.tdsConfiguration),this.status=e.status,this.title=e.title,this.name=e.name,this.employee=new x(e.employee),this.countryCode=e.countryCode,this.ctcRanges=e.ctcRanges.map(function(e){return new u(e)}),this.setupState=new function(e,t){return{get generalSettingsComplete(){return e.generalSettingsComplete||t.payrollSchedule.payCycle.validState&&t.payrollSchedule.payPeriod.validState},get salaryComponentsComplete(){return e.salaryComponentsComplete||t.supportedSalaryComponents.length>0},get salaryStructuresComplete(){return e.salaryStructuresComplete||t.salaryStructures.length>0&&t.ctcRanges.length>0},get salaryConfigurationComplete(){return this.salaryStructuresComplete&&this.salaryComponentsComplete},get salaryStructureConfigurationComplete(){return this.salaryStructuresComplete&&this.customSalaryConfigComplete},get companyInfoComplete(){return e.companyInfoComplete||t.payFundConfig.validState},get statutoryFilingDataComplete(){return e.statutoryFilingDataComplete},get pfesiComplete(){return e.pfesiComplete||t.pf.validState&&t.esi.validState},get loanSettingsComplete(){return e.LoanSettingsComplete||t.loanConfiguration.validState},get financeSettingsComplete(){return e.financeSettingsComplete||t.employee.validState},get customSalaryConfigComplete(){return e.customSalaryConfigComplete||t.customSalaryConfig.validState},get complete(){return e.complete||this.generalSettingsComplete&&this.salaryConfigurationComplete&&this.statutoryFilingDataComplete&&this.pfesiComplete&&this.companyInfoComplete&&this.loanSettingsComplete&&this.customSalaryConfigComplete&&this.financeSettingsComplete}}}(e.setupState,this),this.benefits=new Payroll.Model.BenefitsConfiguration(e.benefits),this.leaveEncashment=new Payroll.Configuration.Model.LeaveEncashmentConfiguration(e.leaveEncashment),this.remunerationTypes=e.remunerationTypes,this.statutoryConfiguration=new Payroll.Configuration.Model.StatutoryConfiguration(e.statutoryConfiguration),this.availableSalaryComponents=function(){return this.supportedSalaryComponents.filter(function(e){return!e.isDeleted&&!e.disabled})},this.getAllAllowances=function(){return this.supportedSalaryComponents.filter(function(e){return e.componentType===s.allowance&&!e.isDeleted&&!e.disabled})},this.getAdhocAllowances=function(){return this.supportedSalaryComponents.filter(function(e){return!e.isDeleted&&!e.internal&&e.paidFrequency==l.once})},this.getAllAdhocAllowances=function(){return this.supportedSalaryComponents.filter(function(e){return e.paidFrequency==l.once&&!e.internal})},this.getRecurringComponents=function(){return this.supportedSalaryComponents.filter(function(e){return e.paidFrequency!=l.none&&e.paidFrequency!=l.once&&!e.internal&&!e.disabled&&!e.isDeleted})},this.isPTFilingRequired=function(){return this.ptApplicableStates.length>0},this.isESIFilingRequired=function(){return this.esi.isOrganizationNotExempt},this.isPFFilingRequired=function(){return this.pf.isOrganizationNotExempt},this.update=function(e){this.constructor(e)},this.getStructureConfiguration=function(e,t){return e==n.Range.id?this.salaryStructures.find(function(e){return e.name==t}):e==n.CustomStructure.id?this.customSalaryConfig.customSalaryStructures.find(function(e){return e.name==t}):void 0},this.isNPSEmployerComponentEnable=function(){return null!=this.availableSalaryComponents().find(function(e){return e.componentName==c.NPSEmployer})},this.isPTComponentEnable=function(){return null!=this.availableSalaryComponents().find(function(e){return e.componentName==c.ProfessionalTax})},this.getSupportedComponent=function(e){return this.supportedSalaryComponents.find(function(t){return t.componentName==e})},this.getReimbursableComponents=function(){return this.supportedSalaryComponents.filter(function(e){return!e.disabled&&!e.isDeleted&&e.componentType==s.reimbursable})},this.payCycle=this.payrollSchedule.payCycle},StandardSettings:function(e){var t=this;this.salaryComponents=[],angular.forEach(e.salaryComponents||{},function(e){t.salaryComponents.push(N(e))})},SalaryComponentTypes:s,PaidFrequency:l,SalaryStructureConfiguration:I,CreateSalaryComponentModel:N,SalaryStructure:A,SalaryComponent:function(e){this.name=e.name,this.title=e.title,this.componentType=e.componentType},Claim:function(e){this.id=e.id,this.billNumber=e.billNumber,this.componentName=e.componentName,this.claimAgainstComponent=e.claimAgainstComponent,this.employeeId=e.employeeId,this.amount=e.amount,this.billingDate=e.billingDate,this.dependant=e.dependant||new b({name:e.name,relation:e.relation}),this.attachment=e.attachment,this.attachmentPath=e.attachmentPath,this.status=e.status},Dependant:b,PFGlobalConfiguration:m,EmployeeConfiguration:x,PayrollSchedule:C,PayFundConfig:p,CTCRanges:u,ComponentOverride:function(e){this.componentName=e.componentName,this.amount=e.amount||e.amountExpression,this.onActuals=e.onActuals,this.title=e.title,this.hasTaxBenefits=e.hasTaxBenefits,this.allowEmployeeOverride=e.allowEmployeeOverride,this.componentType=e.componentType,this.eligibleMonths=e.eligibleMonths,this.componentVisibleType=e.componentVisibleType,this.affectedDueToWorkedRatio=e.affectedDueToWorkedRatio,this.canAdjustDifferenceAmountDueWorkRatio=e.canAdjustDifferenceAmountDueWorkRatio,this.sectionName=e.sectionName,this.sectionMaxAmount=Number(e.sectionMaxAmount),this.paySeparately=e.paySeparately,this.requiredDeduction=e.requiredDeduction,this.canBeArrear=e.canBeArrear},PayrollCycle:h,LoanConfiguration:L,Financials:function(e){this.current=new RunAggregates(e.current)},MonthFinancialDetails:function(e){var t=this;this.totalPayrollCost=e.totalPayrollCost,this.totalContributions=e.totalContributions,this.totalDeductions=e.totalDeductions,this.employeePayables=e.employeePayables,this.tds=e.tds,this.esi=e.esi,this.pf=e.pf,this.ptSummaries=e.ptSummaries,this.otherDeductions=e.otherDeductions,this.totalPT=e.totalPT,this.otherContributions=e.otherContributions,this.totalPTEmployees=0,this.ptStates=[],function(){for(var e in t.ptSummaries)t.totalPTEmployees+=t.ptSummaries[e].totalEmployees,t.ptStates.push(t.ptSummaries[e].state)}()},PayrollActions:g,FinancialYear:d,SalaryComponents:c,SalaryDetails:function(e){this.employeeId=e.employeeId,this.employeeNumber=e.employeeNumber,this.employeeName=e.employeeName,this.structure=new A(e.structure),this.workerType=e.workerType,this.workerTypeName=o.getById(this.workerType).name,this.monthlyCTC=this.structure.getMonthlySalary(),this.basic=this.structure.getComponentAmount(c.Basic),this.pfEmployee=this.structure.getComponentAmount(c.PF),this.pfEmployeer=this.structure.getComponentAmount(c.PFEmployer),this.monthlyBasic=this.structure.getMonthlyComponentAmount(c.Basic),this.monthlyPFEmployee=this.structure.getMonthlyComponentAmount(c.PF),this.monthlyPFEmployeer=this.structure.getMonthlyComponentAmount(c.PFEmployer),this.generalPFAmount=this.monthlyBasic>0?(this.monthlyBasic/100*12).toFixed(2):0,this.isStructureLevelPFOptOut=this.structure.isStructureLevelPFOptOut(),this.remunerationType=e.remunerationType,this.canProrateBasedOnWorkratio=this.structure.overrides.providentFund.canProrateBasedOnWorkratio,this.getComponentAmount=function(e){return this.structure.getComponentAmount(e)},this.getMonthlyComponentAmount=function(e){return this.structure.getMonthlyComponentAmount(e)},this.doesComponentExist=function(e){return this.structure.doesComponentExist(e)},this.getMonthlySalary=function(){return this.structure.getMonthlySalary()},this.isPFOverriden=function(){return null!=this.structure.overrides.providentFund.monthlyVPFShare||null!=this.structure.overrides.providentFund.pfMonthlyEmployerShare||null!=this.structure.overrides.providentFund.pfMonthlyEmployeeShare},this.pfEnable=function(){return this.doesComponentExist(c.PF)||!this.structure.overrides.providentFund.doNotDeductPF},this.getComponentOverrideAmount=function(e){return this.structure.overrides.getComponentOverrideAmount(e)},this.getAnnualCTCPercentage=function(e){return e>0?parseFloat((e/this.structure.ctc*100).toFixed(2)):0},this.getMonthlyCTCPercentage=function(e){return e>0?parseFloat((e/this.monthlyCTC*100).toFixed(2)):0},this.getAnnualBasicPercentage=function(e){return e>0?parseFloat((e/this.basic*100).toFixed(2)):0},this.getMonthlyBasicPercentage=function(e){return e>0?parseFloat((e/this.monthlyBasic*100).toFixed(2)):0},this.updateStructure=function(e){this.structure=e,this.constructor(this)},this.pfOverriden=this.isPFOverriden()?"Yes":"No"},ESIGlobalConfiguration:y,SalaryRevisionDetails:$,BonusDetails:F,TDSChallan:B,QuarterMonth:q,FYQuarter:function(e){return{name:e.name,quarterIndex:e.quarterIndex,months:e.months.map(function(e){return new q(e)}),generationDetails:new Payroll.Model.Form24QDetails(e.generationDetails||{}),get isChallanAdded(){return null!=this.months.find(function(e){return e.isChallanAdded})},get range(){return this.months[0].monthName.substr(0,3)+" - "+this.months[2].monthName.substr(0,3)+" "+this.months[0].year},allMonthSummary:function(){return this.months.map(function(e){return{name:e.toString(),forMonth:e.forMonth,year:e.year}}).sort(function(e){return-e.forMonth})},find:function(e){return this.months.find(function(t){return t.forMonth==e})},get shortName(){return"Q"+this.quarterIndex},get shortRange(){return this.months[0].monthName.slice(0,3)+" - "+this.months[2].monthName.slice(0,3)},get year(){return this.months[0].year}}},ChallanMapSet:_,TDSMapResult:function(e){var t=[],i=0;Object.keys(e.challanMapSets).forEach(function(t){var i=new _(e.challanMapSets[t]);e.challanMapSets[t]=i,this.push(i)},t);var n=new j(t.reduce(function(e,t){return e.incomeTax+=t.challan.incomeTax,e.cess+=t.challan.cess,e.surcharge+=t.challan.surcharge,e},{incomeTax:0,cess:0,surcharge:0}));return{challanMapSets:e.challanMapSets,unMapEntries:(e.unMapEntries||[]).map(function(e){return new U(e)}),allEntries:function(){var e=[];return i=0,t.forEach(function(t){return e=e.concat(t.mapEntries)}),(e=e.concat(this.unMapEntries)).forEach(function(e){this.hasOwnProperty(e.employeeId)||(i++,this[e.employeeId]=e)},{}),e},totalMappedEmployees:function(){return i},getChallan:function(e){return this.challanMapSets[e].challan},allChallanMapSets:function(){return t},anySuitableChallan:function(e){return t.some(function(t){return t.canAdd(e)})},unMap:function(e){var t=this.challanMapSets[e.challanId].upMap(e);t&&this.unMapEntries.push(t)},map:function(e){var i=this.unMapEntries.indexOf(e);if(i>-1){var n=t.sort(function(e){return e.difference()})[0].map(new U(e));n&&(e.minus(n),0==e.amount&&this.unMapEntries.splice(i,1))}},get remainingCess(){return t.reduce(function(e,t){return e+t.remainingCess},0)},get remainingIncomeTax(){return t.reduce(function(e,t){return e+t.remainingIncomeTax},0)},get remainingSurcharge(){return t.reduce(function(e,t){return e+t.remainingSurcharge},0)},get remainingTotal(){return this.remainingCess+this.remainingIncomeTax+this.remainingSurcharge},get totalCess(){return n.cess},get totalSurcharge(){return n.surcharge},get totalIncomeTax(){return n.incomeTax},get totalAmount(){return this.totalCess+this.totalSurcharge+this.totalIncomeTax}}},PayrollCycleDetail:f,PayCycle:w,EmployeeIncomeTaxStats:function(e){this.employeeName=e.employeeName,this.employeeNumber=e.employeeNumber,this.grossIncome=e.gross,this.projectedGross=e.projectedGross,this.actualGross=e.actualGross,this.exemptionOnGross=e.totalExemptionOnGross,this.outsidePayrollBonusesIncome=e.outsidePayrollBonusesIncome,this.outsidePayrollOvertimeIncome=e.outsidePayrollOvertimeIncome,this.benefitsTaxableIncome=e.benefitsTaxableIncome,this.taxableIncome=e.taxableIncome,this.rawTax=e.rawTax,this.taxRebateExemption=e.taxRebate,this.actualTax=e.actualTax,this.taxPaid=e.taxPaid,this.taxPayable=e.taxPayable},PFSettingsOverrides:R,Form24QSettings:function(e){this.deductorType=e.deductorType||"K",this.sectionCode=e.sectionCode||"92B",this.previousRegularStatementToken=e.previousRegularStatementToken,this.includeZeroITInETDS=e.includeZeroITInETDS,this.suppressZeroGrossIncome=e.suppressZeroGrossIncome,this.deductor=new function(e){this.tan=e.tan,this.branchOrDivision=e.branchOrDivision,this.name=e.name,this.pan=e.pan,this.emailId=e.emailId,this.phoneNumber=e.phoneNumber,this.address1=e.address1,this.address2=e.address2,this.address3=e.address3,this.state=e.state,this.pin=e.pin,this.stdCode=e.stdCode}(e.deductor||{}),this.responsiblePerson=new Y(e.responsiblePerson||{}),this.employerAddressChanged=e.employerAddressChanged,this.responsiblePersonAddressChanged=e.responsiblePersonAddressChanged,this.csiFileName=e.csiFileName},Form16Settings:function(e){this.id=e.id,this.payGroupId=e.payGroupId,this.include12BA=void 0==e.include12BA||e.include12BA,this.includeAnnex=void 0==e.includeAnnex||e.includeAnnex,this.excludePreviousIncome=void 0==e.excludePreviousIncome||e.excludePreviousIncome,this.enablePasswordProtection=void 0==e.enablePasswordProtection||e.enablePasswordProtection,this.certificateContent=e.certificateContent,this.pfxFileUrl=e.pfxFileUrl,this.authorizedPerson=new Y(e.authorizedPerson||{}),this.signItDigitally=void 0==e.signItDigitally||e.signItDigitally,this.financialYear=e.financialYear},LossOfDaysView:V,EmployeeRunDetails:function(e){this.id=e.id,this.cycle=new h(e.cycle||{}),this.employeeId=e.employee?e.employee.id:null,this.status=e.status,this.error=e.error,this.processedCycleId=e.processedCycleId,this.runFinalized=function(){return null!=this.processedCycleId}},ExitEmployeeOnHoldDetails:function(e){return{employeeId:e.employeeId,employeeName:e.employeeName,employmentStatus:e.employmentStatus,exitStatus:e.exitStatus,totalSalary:e.totalSalary,totalSettledAmount:e.totalSettledAmount,runOnHolds:e.runOnHolds.map(function(e){return new k(e)}),exitRequestStatus:e.exitRequestStatus,get noticePeriod(){var e=Math.abs(this.effectiveDate.getTime()-this.exitDate.getTime());return Math.ceil(e/864e5)},get effectiveDate(){var t="string"==typeof e.effectiveDate?e.effectiveDate.stringToDate():e.effectiveDate;return t&&isFinite(t.getDate())?t:i.DateWithZeroTime(e.effectiveDate)},get exitDate(){var t="string"==typeof e.exitDate?e.exitDate.stringToDate():e.exitDate;return t&&isFinite(t.getDate())?t:i.DateWithZeroTime(e.exitDate)},get payrollEndDate(){var t="string"==typeof e.payrollEndDate?e.payrollEndDate.stringToDate():e.payrollEndDate;return t&&isFinite(t.getDate())?t:i.DateWithZeroTime(e.payrollEndDate)}}},TDSConfiguration:M,TaxShareItems:j,LossOfPayReversalView:function(e){this.id=e.id,this.employeeId=e.employeeId,this.employeeNumber=e.employeeNumber,this.employeeName=e.employeeName,this.comment=e.comment,this.forCycleId=e.cycleId,this.cycleDate=e.cycleDate,this.cycleId=this.forCycleId,this.days=e.days,this.payCycle=e.payCycle,this.availableLopDays=e.availableLopDays}}}]),angular.module("payroll").factory("PayrollWizardDescription",function(){function e(e){this.index=e.index,this.title=e.title,this.name=e.name,this.url=e.url,this.isValid=e.isValid}var t={};return t.schedule={steps:[new e({title:"PayCycle",name:"paycyle",index:1,isValid:!1,url:"/#/payroll/schedule/paycycle"}),new e({title:"PayPeriod",name:"payperiod",index:2,isValid:!1,url:"/#/payroll/schedule/payperiod"})]},t.salarycomponents={steps:[new e({title:"Inputs",name:"inputs",index:1,isValid:!1,url:"/#/payroll/salarycomponents/inputs"}),new e({title:"StatatoryContributions",name:"statatorycontributions",index:2,isValid:!1,url:"/#/payroll/salarycomponents/statutorycontributions"}),new e({title:"Allowances",name:"allowances",index:3,isValid:!1,url:"/#/payroll/salarycomponents/allowances"})]},t.salarystructures={steps:[new e({title:"Salary Scenarios",name:"salaryscenarios",index:1,isValid:!1,url:"/#/payroll/salarystructures/salaryscenarios"})]},t}),angular.module("payroll").factory("SalaryPaymentMode",["Constants",function(e){return new e({None:{id:0,title:"None"},BankTransfer:{id:1,title:"Bank Transfer"},Cheque:{id:2,title:"Cheque"},Cash:{id:3,title:"Cash"}})}]),angular.module("payroll").factory("SalaryAction",["Constants",function(e){return new e({None:{id:0,title:"None"},Pay:{id:1,title:"Pay"},Hold:{id:2,title:"Hold"}})}]),angular.module("payroll").factory("PayrollCycleStatus",["Constants",function(e){return new e({Pending:{id:0,name:"Pending",title:"Pending"},Complete:{id:1,name:"Complete",title:"Complete"},Imported:{id:2,name:"Imported",title:"Imported"},UpComing:{id:3,name:"UpComing",title:"Up Coming"},Current:{id:4,name:"Current",title:"Current"},NoData:{id:5,name:"NoData",title:"No Data"}})}]),angular.module("payroll").factory("PayrollLeaveActions",["Constants",function(e){return new e({Approve:{id:0,name:"Approve",title:"Approve Leave(s)"},Reject:{id:2,name:"Reject",title:"Reject Leave(s)"}})}]),angular.module("payroll").factory("AttendanceActions",["Constants",function(e){return new e({None:{id:0,title:"none"},ChangeToPaid:{id:1,title:"Change to paid type"},ChangeToUnpaid:{id:2,title:"Change to unpaid type"},CancelLeave:{id:3,title:"Cancel Request"}})}]),angular.module("payroll").factory("PayrollOneTimeTransactionType",["Constants",function(e){return new e({Expenses:{id:1,name:"Expenses",title:"Expenses"},Deduction:{id:2,name:"Deduction",title:"Deduction"},AdhocAllowance:{id:3,name:"AdhocAllowance",title:"Adhoc Allowance"}})}]),angular.module("payroll").factory("EmployeePayrollCycleRunStatus",["Constants",function(e){return new e({OnHold:{id:0,name:"SalaryOnHold",title:"Salary On Hold"},PaymentOnHold:{id:1,name:"PaymentOnHold",title:"Payment On Hold"},Skipped:{id:3,name:"Skipped",title:"Skipped"},None:{id:6,name:"SalaryVoid",title:"SalaryVoid"},PaymentVoid:{id:7,name:"PaymentVoid",title:"Payment Void"},Executed:{id:8,name:"Executed",title:"Executed"},ExecutedAsArrear:{id:9,name:"ExecutedAsArrear",title:"Executed As Arrear"},FinalSettlement:{id:10,name:"FinalSettlement",title:"Final Settlement"},FinalSettlementVoid:{id:11,name:"FinalSettlementVoid",title:"Final Settlement Void"},ReleasePayment:{id:12,name:"ReleasePayment",title:"Release Payment"},FinalSettlementPaymentVoid:{id:13,name:"FinalSettlementPaymentVoid",title:"Final Settlement Payment Void"},AlreadyPaid:{id:14,name:"AlreadyPaid",title:"Already Paid"},FinalSettlementAlreadyPaid:{id:15,name:"FinalSettlementAlreadyPaid",title:"Final Settlement Already Paid"},Error:{id:50,name:"Error",title:"Error"}})}]),angular.module("payroll").controller("PayrollOverviewController",["$scope","$state","AppContext","PayrollLoanService",function(e,t,i,n){e.vm={};e.$on("$stateChangeSuccess",function(){e.vm.state=t.current}),e.vm.showComponentClaims=!i.payrollVisibilityPermission.hideComponentClaims,i.hasPrivilege(["PAYROLL.MANAGE"])&&n.getDoesLoanEnabled().then(function(t){e.vm.isLoanEnable=t.isLoanEnabled||t.hasClearedLoans})}]),angular.module("payroll").controller("PayrollSummaryController",["$scope","$state","$uibModal","$timeout","NotificationService","PayrollModel","PayrollCycleStatus","PayrollService","FinalizePayrollSteps","SharedModel","PayrollConfigurationService","$filter","dialogs","currentFinancialYear","payrollConfiguration","FileDownloadService",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h){e.payrollConfig=y,e.vm.financialYear=m;var f=function(e){this.name=e.name,this.msg=e.msg,this.time=e.time};e.vm.payrollActivity=[new f({name:"Sashi Padagala",msg:"Why do we have two bonus entries for Raju Singh? I deleted one of them.",time:new Date}),new f({name:"Vijay Yalamanchili",msg:"Reconciled Bonus & salary revisions",time:new Date}),new f({name:"Bonus & Salary revisions",msg:"Processed new Bonus & Salary updates",time:new Date}),new f({name:"Sashi Padagala",msg:"New revision looks fine.",time:new Date})];e.vm={},e.vm.finalizeRunSteps=l.getAll(),e.vm.disbalePayrollRun=!1;var g=function(){s.cycle.all.query({payGroupId:e.payrollConfig.payGroupId,financialYear:e.vm.financialYear},function(t){e.vm.cycles=t.map(function(e){return new function(e){this.name=e.name,this.year=e.year,this.month=e.month-1,this.status=a.getById(e.status),this.lastDay=e.endDate,this.setCycle=function(e){this.status=a.getById(e.status)},this.isPayrollFinalized=function(){return this.status==a.Complete||this.status==a.Imported||this.status==a.NoData}}(e)});var i=e.vm.cycles.find(function(e){return e.status==a.Pending||e.status==a.Current});if(!i){var n=e.vm.cycles.filter(function(e){return e.status==a.Complete});i=n[n.length-1]}i||(i=e.vm.cycles[0]),e.getCurrentCycleSummary(i)},function(e){})};e.getCurrentCycleSummary=function(t){var i=new Date(t.lastDay);s.cycle.summary.get({payGroupId:e.payrollConfig.payGroupId,date:i.dateOnlyString()},function(i){e.vm.currentcycle={details:new r.PayrollCycleDetail(i.cycle),employees:i.employees,financialDetails:new r.MonthFinancialDetails(i.financialDetails),status:t.status,get isFinalize(){return this.status==e.cycleStatus.Complete},get arePreActionEnabled(){return this.details.isPreviousCycleFinalized},showRunScreen:!1}},function(e){})},e.next=function(){e.vm.financialYear=e.vm.financialYear.next(),g()},e.previous=function(){e.vm.financialYear=e.vm.financialYear.previous(),g()},e.skipKeka=function(){e.payrollConfig.payrollSchedule.payCycle.canSkip(e.vm.currentcycle.details.to)&&d.confirm("Please confirm","This will erase payroll details of "+e.vm.currentcycle.details.name+" month and need to import the current salary and previous months data again. Are you sure want to continue ?").result.then(function(){p.skipKekaStartingCycle(e.payrollConfig.payGroupId,e.vm.currentcycle.details.to.dateOnlyString()).then(function(t){e.payrollConfig=new r.PayrollConfiguration(t),g()},function(e){o.error(e.data.message)})})},e.refreshFinancials=function(){s.cycle.financials.get({groupId:e.payrollConfig.payGroupId,cycleId:e.vm.currentcycle.details.id},function(t){e.vm.currentcycle.financialDetails=new r.MonthFinancialDetails(t)},function(e){o.success("Error while refresh")})},e.previewRun=function(){e.vm.disbalePayrollRun||(e.vm.disbalePayrollRun=!0,s.cycle.run.save({payGroupId:e.payrollConfig.payGroupId,cycleId:e.vm.currentcycle.details.id},{},function(t){e.vm.currentcycle.details=new r.PayrollCycleDetail(t.cycle),e.vm.currentcycle.financialDetails=new r.MonthFinancialDetails(t.financialDetails),o.success("Preview Run is Successful"),e.vm.disbalePayrollRun=!1},function(t){e.vm.disbalePayrollRun=!1,o.success("Preview Run is unSuccessful")}))},e.finalizeRun=function(){e.vm.currentcycle.arePreActionEnabled&&!e.vm.disbalePayrollRun?(e.vm.disbalePayrollRun=!0,e.vm.finalize={progress:0,message:"starting payroll run"},s.cycle.run.finalize(e.payrollConfig.payGroupId,e.vm.currentcycle.details.id,{}).then(function(t){e.vm.currentcycle.details=new r.PayrollCycleDetail(t.cycle),e.vm.currentcycle.financialDetails=new r.MonthFinancialDetails(t.financialDetails);var i=e.vm.cycles.find(function(t){return t.month==e.vm.currentcycle.details.month&&t.year==e.vm.currentcycle.details.year});i&&(i.setCycle(t.cycle),e.vm.currentcycle.status=i.status),e.vm.disbalePayrollRun=!1},function(t){e.vm.finalize={progress:90,message:t,isError:!0},o.error(t),e.vm.disbalePayrollRun=!1},function(t){e.vm.finalize=t})):o.success("Please finalize previous payroll")},e.unFinalizeRun=function(){1==e.vm.currentcycle.details.status&&(e.unfinalizeModel.cycleId=e.vm.currentcycle.details.id,s.cycle.run.unfinalize(e.payrollConfig.payGroupId,e.unfinalizeModel).then(function(t){o.success(e.vm.currentcycle.details.toSummary()+" payroll unfinalized Successfully"),g()},function(e){o.error(e.data.message)}).finally(function(){e.unfinalizeModal.dismiss()}))},e.OpenfinalizeDialog=function(){e.vm.currentcycle.showRunScreen=!1,e.finalizeModal=i.open({templateUrl:"finalizePayroll",scope:e,keyboard:!1,backdrop:"static",windowClass:"finalize-payroll-modal"})},e.OpenUnfinalizeDialog=function(){e.unfinalizeModel={},e.unfinalizeModal=i.open({templateUrl:"unfinalizePayroll",scope:e,keyboard:!1,backdrop:"static",windowClass:"unfinalize-payroll-modal"})},e.openLeaveAndAttendance=function(){v({templateUrl:"leave-attendance",controller:"PayrollLeaveAndAttendanceController",resolve:{payrollData:function(){return{payrollConfig:e.payrollConfig,cycle:e.vm.currentcycle.details,isFinalised:e.vm.currentcycle.isFinalize,action:angular.copy(e.vm.currentcycle.details.actions.leavesAndAttendance)}}}})},e.openNewJoinees=function(){v({templateUrl:"new-joinees-exits",controller:e.vm.currentcycle.isFinalize?"payrollEmployeeChangesReadOnlyController":"PayrollEmployeeChangesController",controllerAs:"vm",resolve:{payrollData:function(){return{groupId:e.payrollConfig.payGroupId,cycle:e.vm.currentcycle.details,isFinalised:e.vm.currentcycle.isFinalize,action:angular.copy(e.vm.currentcycle.details.actions.newJoineesAndExits)}}}})},e.openSalaryChanges=function(){v({templateUrl:"employee-salary-changes",controller:e.vm.currentcycle.isFinalize?"payrollSalaryChangesReadOnlyController":"payrollSalaryChangesController",controllerAs:"vm",resolve:{payrollData:function(){return{groupId:e.payrollConfig.payGroupId,currentCycle:e.vm.currentcycle.details,isFinalised:e.vm.currentcycle.isFinalize,action:angular.copy(e.vm.currentcycle.details.actions.bonusAndSalaryRevisions)}}}})},e.openOnetimePayments=function(){v({templateUrl:"onetime-payments-deductions",controller:"PayrollOneTimePaymentsAndDeductions",controllerAs:"ctrl",resolve:{payrollData:function(){return{payrollConfig:e.payrollConfig,cycle:e.vm.currentcycle.details,isFinalised:e.vm.currentcycle.isFinalize,action:angular.copy(e.vm.currentcycle.details.actions.oneTimePaymentsAndDeductions)}}}})},e.openEmployeesOnHoldAndArrears=function(){v({templateUrl:"employeesOnHold-Arrears",controller:e.vm.currentcycle.isFinalize?"payrollEmployeesOnHoldAndArrearsReadOnlyController":"PayrollEmployeesOnHoldAndArrears",controllerAs:"vm",resolve:{payrollData:function(){return{payrollConfig:e.payrollConfig,cycle:e.vm.currentcycle.details,isFinalised:e.vm.currentcycle.isFinalize,action:angular.copy(e.vm.currentcycle.details.actions.arrearsAndOnHold)}}}})},e.openReviewAllEmployees=function(){v({templateUrl:"payroll/reviewAllEmployees",controller:"payrollReviewAllEmployeesController",controllerAs:"vm",resolve:{payrollData:function(){return{payrollConfig:e.payrollConfig,cycle:e.vm.currentcycle.details,action:angular.copy(e.vm.currentcycle.details.actions.reviewAllEmployees)}}}})};var v=function(t){e.vm.currentcycle.arePreActionEnabled?i.open(angular.extend({},t,{windowClass:"full-screen-modal",backdrop:!1,keyboard:!1})).result.then(function(t){e.vm.currentcycle.isFinalize||s.cycle.actionstatus.save({cycleId:e.vm.currentcycle.details.id,groupId:e.payrollConfig.payGroupId},t,function(t){e.vm.currentcycle.details.actions=new r.PayrollActions(t)})},function(e){}):o.success("Please finalize previous payroll")};e.openRunRegister=function(){i.open({templateUrl:"payrollRunRegister",controller:"PayrollRunRegisterController",windowClass:"full-screen-modal no-scroll",backdrop:!1,keyboard:!1,resolve:{payrollData:function(){return{payrollConfig:e.payrollConfig,cycle:e.vm.currentcycle.details}}}})},e.managePayslips=function(){i.open({templateUrl:"managePayslips",controller:"ManagePayslipsController",controllerAs:"ctrl",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,resolve:{payrollData:function(){return{payrollConfig:e.payrollConfig,cycle:e.vm.currentcycle.details}}}}).result.then(function(t){t.isUpdated&&(e.vm.currentcycle.details.isPayslipReleased=t.isPaySlipReleased)})},e.openEmployeePayables=function(){i.open({templateUrl:"payrollEmployeePayables",controller:"PayrollEmployeePayablesController",windowClass:"full-screen-modal employee-payables-container no-scroll-x",backdrop:!1,keyboard:!1,controllerAs:"vm",resolve:{payrollData:function(){return{payrollConfig:e.payrollConfig,cycle:e.vm.currentcycle.details}}}})},e.openEPFSummary=function(){i.open({templateUrl:"epfSummary",controller:"PFECRController",controllerAs:"ctrl",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,resolve:{payrollData:function(){return{payrollConfig:e.payrollConfig,cycle:e.vm.currentcycle.details}}}})},e.openESISummary=function(){i.open({templateUrl:"esieMonthlyReturn",windowClass:"full-screen-modal",controller:"MonthlyESIReturnController",controllerAs:"ctrl",keyboard:!1,backdrop:!1,resolve:{payrollData:function(){return{payrollConfig:e.payrollConfig,cycle:e.vm.currentcycle.details}}}})},e.openTDSChallanSummary=function(){i.open({templateUrl:"IncomeTax/challanSummary",controller:"PayrollETDSChallanController as ctrl",windowClass:"full-screen-modal no-scroll-x",backdrop:!1,resolve:{payrollData:function(){return{payrollConfig:e.payrollConfig,currentFinancialYear:m}},forPayrollCycle:function(){return e.vm.currentcycle.details},financialYearList:function(){return[]}}})},e.openPTSummary=function(){i.open({templateUrl:"professionalTaxSummary",controller:"PTSummaryController",windowClass:"full-screen-modal no-scroll",controllerAs:"vm",backdrop:!1,keyboard:!1,resolve:{payrollData:function(){return{payrollConfig:e.payrollConfig,cycle:e.vm.currentcycle.details}}}})},e.getPreviousIncome=function(){reportName="employeepreviousincome",h.downloadFile("/api/payroll/"+e.payrollConfig.payGroupId+"/ExportPayrollPreviousDetails?name="+reportName+"&format=excel&groupId="+e.payrollConfig.payGroupId+"&month="+(e.vm.currentcycle.details.month+1)+"&year="+e.vm.currentcycle.details.year)},e.openPreviousIncomeImport=function(){i.open({templateUrl:"import/PayrollPreviousSalary",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"PayrollPreviousSalaryImportController as importCtrl",resolve:{Month:e.vm.currentcycle.details.month+1}}).result.then(function(e){g()})},e.$watch("vm.currentcycle.isFinalize",function(t,i){t!=i&&(e.vm.accordionOpen=!t)}),e.vm.financialYear=m,e.cycleStatus=a,g()}]),angular.module("payroll").controller("PayrollLeaveAndAttendanceController",["$scope","$state","$q","$filter","NotificationService","PayrollService","$uibModal","$uibModalInstance","SharedModel","LeaveRequestStatus","payrollData","PublicProfileServices","SystemLeaveType",function(e,t,i,n,o,r,a,s,l,c,p,u,d){e.vm={},e.vm.leaveRequestStatus=c,e.vm.systemLeaveType=d;e.close=function(){s.close(e.vm.action)};var m=function(t){return t.status==e.vm.leaveRequestStatus.Pending.id||t.status==e.vm.leaveRequestStatus.InApprovalProcess.id?t.approvers:t.approvedBy};e.vm.loadLeaveRequests=function(t,i){e.vm.leaveTypes=t,e.vm.leaveRequests=[],angular.forEach(i,function(t){e.vm.leaveRequests.push(new function(t){this.id=t.id,this.employeeId=t.employeeId,this.requestedBy={employeeId:t.employeeId,displayName:t.displayName,profileImage:t.profileImage,employeeNumber:t.employeeNumber},this.fromDate=t.fromDate,this.toDate=t.toDate,this.days=e.vm.getLeaveDuration(t.selection),this.leaveType=t.leaveTypes,this.leaveRequestType=t.leaveRequestType,this.selection=t.selection,this.documentProofs=t.documentProofs,this.note=t.note,this.status=t.status,this.approverName=m(t),this.commentIdentifier=t.commentIdentifier,this.teamCount=t.teamCount,this.deductionType=t.deductionType,this.deductionCausingDates=t.deductionCausingDates,this.reportingTo=t.reportingTo}(t))})},e.gotoStep=function(t){var i=e.vm.wizard.steps.find(function(e){return e.index==t-1});if(!i||i&&i.valid){var n=e.vm.wizard.steps.find(function(e){return e.index==t});n?e.vm.currentStep=n:e.close()}else i&&1==i.index&&!i.valid&&o.error("Please take action on pending leave requests in order to proceed.")},e.vm.getLeaveDuration=function(t){var i=0,n=0;return angular.forEach(t,function(t){var o=e.vm.leaveTypes.find(function(e){return e.id==t.leaveTypeId});o&&o.systemLeaveType!=e.vm.systemLeaveType.floater.id?i+=t.count:n+=t.count}),{workingDays:i,floaterDays:n}},e.vm.getLeaveType=function(t){var i;if(angular.forEach(t,function(t){var n={};t.count>0&&(n=e.vm.leaveTypes.find(function(e){return e.id==t.leaveTypeId})?e.vm.leaveTypes.find(function(e){return e.id==t.leaveTypeId}):{}),n&&(i=i?i+", "+n:n)}),!i){var n=null;angular.forEach(e.vm.systemLeaveType,function(e){angular.forEach(t,function(t){(n=e.id==t.leaveTypeId?e:"")&&(i=i?i+", "+n:n)})})}return i},e.vm.getApproverName=function(t){var i=e.vm.employees.find(function(e){return e.id==t});return i?i.displayName:""},e.vm.currentCycle=p.cycle,e.vm.payrollConfig=p.payrollConfig,e.vm.action=p.action,e.isFinalised=p.isFinalised,e.vm.remunerationType=Payroll.Configuration.Model.RemunerationType,e.vm.isDailyRemunerationEnabled=e.vm.payrollConfig.remunerationTypes.includes(e.vm.remunerationType.daily),r.payroll.get({id:e.vm.currentCycle.id,groupId:e.vm.payrollConfig.payGroupId,action:"doesLeaveEncashmentsExists"}).$promise.then(function(t){e.vm.doesEncashmentsExist=t.isExists;var i=1;if(e.vm.wizard={steps:[new l.Step({title:"Leave Applied",name:"leavesApplied",template:e.isFinalised?"read-only-payrollLeaveApprovals":"payrollLeaveApprovals",index:i++,valid:!1}),new l.Step({title:"No Attendance",name:"missingAttendance",template:"payrollMissindAttendance",index:i++,valid:!0}),new l.Step({title:"Lop Summary",name:"lopSummary",template:e.isFinalised?"read-only-payrolllopSummary":"payrolllopSummary",index:i++,valid:!0})]},e.vm.doesEncashmentsExist){var n=new l.Step({title:"Leave Encashments",name:"leaveencashment",template:e.isFinalised?"read-only-payrollleaveencashment":"payrollleaveencashment",index:i++,valid:!0});e.vm.wizard.steps.push(n)}e.vm.isDailyRemunerationEnabled&&e.vm.wizard.steps.push(new l.Step({title:"Daily Pay",name:"dailyPay",template:"payunits-override",index:i++,valid:!0})),e.vm.currentStep=e.vm.wizard.steps[0]})}]),angular.module("payroll").controller("PayrollLeaveApprovalsController",["$scope","$state","$filter","$q","$uibModal","NotificationService","PayrollService","AppSettings","AppContext","uiGridConstants","PayrollLeaveActions",function(e,t,i,n,o,r,a,s,l,c,p){e.vm.myProfile=l.myPublicProfile,e.vm.niceScrollOptions=angular.copy(s.scrollSettings),e.vm.payrollLeaveActions=p.getAll(),e.vm.rejectReason="";var u=function(){e.vm.note=null,e.modalInstance=o.open({templateUrl:"payrollLeaveTemplate",scope:e})},d=function(){a.leaverequests.get({action:"leaverequests",groupId:e.vm.payrollConfig.payGroupId,fromdate:e.vm.currentCycle.from.dateOnlyString(),todate:e.vm.currentCycle.to.dateOnlyString()},function(t){e.vm.loadLeaveRequests(t.leaveTypes,t.leaveRequests),e.vm.leaveRequests=i("orderBy")(e.vm.leaveRequests,"fromDate",!0),function(){if(0==e.vm.leaveRequests.filter(function(t){return t.status!=e.vm.leaveRequestStatus.Approved.id&&t.status!=e.vm.leaveRequestStatus.Rejected.id}).length){var t=e.vm.wizard.steps.indexOf(e.vm.currentStep);e.vm.currentStep.valid=!0,e.vm.wizard.steps[t].valid=!0}}()})};e.closeModal=function(){e.modalInstance.close()},e.vm.updateLeaveRequests=function(){e.vm.leaveAppovalForm.leaveRequestApprovalTemplate.$valid&&!e.vm.isRequestInProcess&&(r.information("updating leave requests"),angular.forEach(e.vm.updatedLeaveRequests,function(t){t.note=angular.copy(e.vm.note)}),e.vm.isRequestInProcess=!0,a.payroll.update({action:"leaverequests",groupId:e.vm.payrollConfig.payGroupId,id:e.vm.currentCycle.id,rejectReason:e.vm.rejectReason},e.vm.updatedLeaveRequests,function(t){e.vm.batchAction="",d(),r.success("Leave requests updated successfully"),e.modalInstance.close()},function(e){r.error("You don't have enough privileges to perform this action.")}).$promise.finally(function(){e.vm.isRequestInProcess=!1}))},e.vm.performAction=function(t){var i=angular.copy(t);e.vm.updatedLeaveRequests=[],e.vm.action=i.action;var n=i.action.id==p.Approve.id?e.vm.leaveRequestStatus.Approved.id:e.vm.leaveRequestStatus.Rejected.id;i.status=n,e.vm.updatedLeaveRequests.push(i),u()},e.vm.performBulkAction=function(){var t=angular.copy(e.gridApi.selection.getSelectedRows());if(t.length>0){e.vm.updatedLeaveRequests=[],e.vm.action=angular.copy(e.vm.batchAction);var i=e.vm.batchAction.id==p.Approve.id?e.vm.leaveRequestStatus.Approved.id:e.vm.leaveRequestStatus.Rejected.id;angular.forEach(t,function(t){t.status=i,e.vm.updatedLeaveRequests.push(t)}),u()}else r.error("Please select at least one leave request.")},e.leaveRequestGridOptions=angular.copy(s.gridSettings),e.leaveRequestGridOptions.rowHeight=50,e.leaveRequestGridOptions.columnDefs=[{name:"fromDate",displayName:"Date",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.fromDate | date: \'MMM dd\' }}</span><span data-ng-if= "row.entity.days.floaterDays + row.entity.days.workingDays > 1"> - {{row.entity.toDate | date: \'MMM dd\' }} <span class="label label-info">{{row.entity.days.floaterDays + row.entity.days.workingDays}} days</span></span></div>',cellClass:"ui-grid-cell",enableCellEdit:!1},{field:"totalDays",displayName:"Total Days",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.days.floaterDays + row.entity.days.workingDays}}</span></div>',cellClass:"ui-grid-cell",enableCellEdit:!1},{name:"employeeNumber",field:"requestedBy.employeeNumber",displayName:"Employee Number",width:150,enableCellEdit:!1},{name:"requestedBy",field:"requestedBy.displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.requestedBy.displayName}}</span></div>',cellClass:"ui-grid-cell",enableCellEdit:!1},{name:"leaveType",field:"leaveType",displayName:"Leave Type",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.leaveType}}</span></div>',cellClass:"ui-grid-cell",enableCellEdit:!1},{name:"status",displayName:"Status",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.status == grid.appScope.vm.leaveRequestStatus.Approved.id" class="text-success">Approved</span><span data-ng-if="row.entity.status == grid.appScope.vm.leaveRequestStatus.Pending.id" class="text-danger">Waiting for approval</span><span data-ng-if="row.entity.status == grid.appScope.vm.leaveRequestStatus.InApprovalProcess.id" class="text-danger">Partially Approved</span><span data-ng-if="row.entity.status == grid.appScope.vm.leaveRequestStatus.Rejected.id" class="text-danger">Rejected</span></div>',cellClass:"ui-grid-cell",enableCellEdit:!1},{name:"approverName",displayName:"Approver",cellTemplate:'<div class="ui-grid-cell-contents"><span class="clear-bottom" data-ng-if="row.entity.deductionType != 0 && row.entity.status == grid.appScope.vm.leaveRequestStatus.Approved.id">Attendance Tracking Policy</span><span ng-if="row.entity.deductionType == 0 || (row.entity.deductionType == 1 && row.entity.status == grid.appScope.vm.leaveRequestStatus.Pending.id)">{{grid.getCellValue(row, col)}}</span></div>',cellClass:"ui-grid-cell",enableCellEdit:!1},{name:"action",displayName:"Actions",cellTemplate:'<div class="ui-grid-cell-contents cell-actions"><ui-select data-ng-if="row.entity.status != grid.appScope.vm.leaveRequestStatus.Approved.id && row.entity.status != grid.appScope.vm.leaveRequestStatus.Rejected.id"data-ng-model="row.entity.action" on-select="grid.appScope.vm.performAction(row.entity)" theme="bootstrap" class="client-select on-modal-zindex" append-to-body="true"><ui-select-match placeholder="Actions">{{$select.selected.name}}</ui-select-match><ui-select-choices class="action-button" repeat="action in grid.appScope.vm.payrollLeaveActions | filter: { name : $select.search }" data-ng-nicescroll="" data-nice-option="grid.appScope.vm.niceScrollOptions"><span ng-bind-html="action.title | highlight: $select.search"></span></ui-select-choices></ui-select></div>',allowCellFocus:!1,enableCellEdit:!1}],e.leaveRequestGridOptions.multiSelect=!0,e.leaveRequestGridOptions.data="vm.leaveRequests | filter : vm.filterText",e.leaveRequestGridOptions.onRegisterApi=function(t){e.gridApi=t,e.gridApi.selection.clearSelectedRows(),e.leaveRequestGridOptions.isRowSelectable=function(t){return t.entity.status!=e.vm.leaveRequestStatus.Approved.id},e.gridApi.core.notifyDataChange(c.dataChange.OPTIONS)},d()}]),angular.module("payroll").controller("PayrollMissingAttendanceController",["$scope","$state","$filter","$q","$uibModal","SharedModel","NotificationService","PayrollService","AppSettings","AppContext","uiGridConstants","DeductionType","AttendanceActions","dialogs",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m){e.vm.myProfile=c.myPublicProfile,e.vm.deductionType=u,e.vm.attendanceActions=d;e.vm.changeLeaveType=function(t){var i=e.vm.noShows.indexOf(t),n=t.deductedLeaveRequest;e.vm.currentIndex=i,e.vm.noShows[e.vm.currentIndex].action==e.vm.attendanceActions.CancelLeave.id?e.cancelDeductLeave(n):(e.vm.leaveTypeId=null,e.modalInstance=o.open({templateUrl:"changeLeaveTypeTemplate",scope:e,controller:"ChangeLeaveTypeController",resolve:{employeeData:function(){return{cycle:e.vm.currentCycle,leaveRequest:n}}}}),e.modalInstance.result.then(function(t){t&&(e.vm.noShows[e.vm.currentIndex].deductedLeaveRequest=angular.copy(t),e.vm.noShows[e.vm.currentIndex].action="")}))},e.cancelDeductLeave=function(t){m.confirm("Please Confirm","Are you sure want to cancel leave request?").result.then(function(){var i=angular.copy(t);i.note="",s.payroll.update({action:"cancelleavededuction",id:t.id,groupId:e.vm.payrollConfig.payGroupId},i,function(t){e.vm.noShows[e.vm.currentIndex].deductedLeaveRequest=null,e.vm.noShows[e.vm.currentIndex].action="",a.success("Leave request cancelled successfully")},function(e){a.error("An error occurred while canceling leave request. You don't have enough privileges")})})},e.vm.openDeductLeaveModal=function(t){var i=e.vm.noShows.indexOf(t);e.vm.currentIndex=i;var n={employeeId:t.id,fromDate:t.attendanceDate,toDate:t.attendanceDate};e.deductLeaveModalInstance=o.open({templateUrl:"deductLeaveTemplate",scope:e,controller:"DeductLeaveController",resolve:{employeeDetails:function(){return{leaveRequest:n}},groupId:function(){return e.vm.payrollConfig.payGroupId}}}),e.deductLeaveModalInstance.result.then(function(t){t&&(t.leaveType=e.vm.getLeaveType(t.selection),e.vm.noShows[e.vm.currentIndex].deductedLeaveRequest=angular.copy(t))})},e.attendanceLeaveRequestGridOptions=angular.copy(l.gridSettings),e.attendanceLeaveRequestGridOptions.rowHeight=50,e.attendanceLeaveRequestGridOptions.columnDefs=[{name:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row, col)}}</span></div>',cellClass:"ui-grid-cell",enableCellEdit:!1},{name:"fullName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row, col)}}</span></div>',cellClass:"ui-grid-cell",enableCellEdit:!1},{name:"days",displayName:"Total Days",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.deductedLeaveRequest">{{row.entity.deductedLeaveRequest.selection[0].count}}</span><span data-ng-if="!row.entity.deductedLeaveRequest" class="text-danger">No action taken</span></div>',cellClass:"ui-grid-cell",enableCellEdit:!1},{name:"attendanceDate",displayName:"Date",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row, col) | stringToDate : "dd MMM yyyy"}}</span></div>',cellClass:"ui-grid-cell",enableCellEdit:!1},{name:"deductedLeaveRequest",displayName:"Leave Type",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.deductedLeaveRequest">{{row.entity.deductedLeaveRequest.leaveType.name}}</span><span data-ng-if="!row.entity.deductedLeaveRequest" class="text-danger">No action taken</span></div>',cellClass:"ui-grid-cell",enableCellEdit:!1},{name:"id",displayName:"Action",visible:!e.isFinalised,cellTemplate:'<div class="ui-grid-cell-options cell-tooltip ui-grid-cell-contents"><div class=""><select data-ng-if="row.entity.deductedLeaveRequest" ng-model="row.entity.action" data-ng-change="grid.appScope.vm.changeLeaveType(row.entity)" name="action" id="action" class="form-control"><option value="">Action</option><option value="{{grid.appScope.vm.attendanceActions.CancelLeave.id}}" >Cancel Penalty</option><option data-ng-if="!row.entity.deductedLeaveRequest.leaveType.isPaid" value="{{grid.appScope.vm.attendanceActions.ChangeToPaid.id}}" >{{grid.appScope.vm.attendanceActions.ChangeToPaid.title}}</option><option  data-ng-if="row.entity.deductedLeaveRequest.leaveType.isPaid" value="{{grid.appScope.vm.attendanceActions.ChangeToUnpaid.id}}">{{grid.appScope.vm.attendanceActions.ChangeToUnpaid.title}}</option></select></div><span data-ng-if="!row.entity.deductedLeaveRequest"><a data-ng-click="grid.appScope.vm.openDeductLeaveModal(row.entity)">Deduct Leave</a></span></div>',allowCellFocus:!1,enableCellEdit:!1}],e.attendanceLeaveRequestGridOptions.data="vm.noShows | filter: vm.filterText",e.attendanceLeaveRequestGridOptions.onRegisterApi=function(t){e.gridApi=t},s.leaverequests.query({action:"attendanceleaverequests",groupId:e.vm.payrollConfig.payGroupId,fromdate:e.vm.currentCycle.from.dateOnlyString(),todate:e.vm.currentCycle.to.dateOnlyString()},function(t){e.vm.noShows=angular.copy(t),e.vm.noShows=i("orderBy")(e.vm.noShows,"attendanceDate",!0)})}]),angular.module("payroll").controller("DeductLeaveController",["$scope","AppSettings","$state","$filter","$q","$uibModal","PayrollService","NotificationService","employeeDetails","SessionType","groupId",function(e,t,i,n,o,r,a,s,l,c,p){e.model=l.leaveRequest,e.vm.employeeLeaveTypes=[],e.vm.employeeTypeSummary=[],e.vm.selectedSession=null,e.vm.selectedTypeConfiguration={},e.vm.sessionType=c;e.closeModal=function(){e.deductLeaveModalInstance.close()},e.vm.onLeaveTypeChange=function(){var t=e.vm.employeeLeavePlan.configuration.find(function(t){return t.leaveType.id==e.model.leaveType.id});e.vm.selectedTypeConfiguration=t,e.model.fromSession=e.vm.sessionType.firstHalf.id,e.model.toSession=e.vm.sessionType.secondHalf.id,e.vm.dayCount=1,e.vm.isFullDay=!0},e.updateSession=function(t,i){e.vm.isFullDay=t,e.vm.selectedSession=i,e.model.fromSession=t?e.vm.sessionType.firstHalf.id:i,e.model.toSession=t?e.vm.sessionType.secondHalf.id:i,e.vm.dayCount=t?1:.5},e.vm.deductLeave=function(){if(e.vm.deductLeaveForm.deductLeave.$valid&&!e.vm.isRequestInProcess){e.model.leaveTypeId=e.model.leaveType.id,e.errorMessages=[];var t=e.vm.employeeTypeSummary.find(function(t){return t.type.id==e.model.leaveTypeId});if(-1!=t.annualQuota&&t.availableInDays<e.vm.dayCount)return void e.errorMessages.push({type:"danger",msg:"This employee doesn't have enough leave balance for this leave type"});e.model.selection=[],e.model.selection.push({leaveTypeId:e.model.leaveTypeId,count:e.vm.dayCount}),e.vm.isRequestInProcess=!0,a.payroll.save({groupId:p,action:"deductleave"},e.model,function(t){e.deductLeaveModalInstance.close(t),s.success("Leave deducted successfully")},function(e){s.error("An error occurred while deducting leave.")}).$promise.finally(function(){e.vm.isRequestInProcess=!1})}},a.payroll.get({action:"employeeleaveplan",id:e.model.employeeId,groupId:p},function(t){e.vm.leaveStats=t,e.vm.employeeLeavePlan=t.leavePlan,e.vm.employeeTypeSummary=angular.copy(e.vm.leaveStats.leaveSummary.typeSummary),angular.forEach(e.vm.employeeTypeSummary,function(t){e.vm.employeeLeaveTypes.push(t.type),e.vm.employeeTypeSummary.push(t)})})}]),angular.module("payroll").controller("ChangeLeaveTypeController",["$scope","AppSettings","$state","$filter","$q","$uibModal","PayrollService","NotificationService","employeeData",function(e,t,i,n,o,r,a,s,l){e.vm.niceScrollOptions=angular.copy(t.scrollSettings),e.vm.leaveRequest=l.leaveRequest,e.vm.employeeTypeSummary=[],e.vm.cycle=l.cycle,e.vm.leaveType=null;e.vm.updateLeaveRequest=function(){if(e.errorMessages=[],e.vm.changeLeaveTypeForm.changeLeaveType.$valid&&!e.vm.isRequestInProcess){var t=e.vm.employeeTypeSummary.find(function(t){return t.type.id==e.vm.leaveType.id});-1==t.availableInDays||t.availableInDays>0||-1==t.annualQuota?(s.information("updating leave type"),e.vm.leaveRequest.selection[0].leaveTypeId=e.vm.leaveType.id,e.vm.isRequestInProcess=!0,a.payroll.update({action:"leaverequest",id:e.vm.currentCycle.id,groupId:e.vm.payrollConfig.payGroupId},e.vm.leaveRequest,function(t){s.success("Leave type changed successfully"),e.vm.leaveRequest.leaveType=angular.copy(e.vm.leaveType),e.modalInstance.close(e.vm.leaveRequest)},function(e){s.error("An error occurred while updating leave type.")}).$promise.finally(function(){e.vm.isRequestInProcess=!1})):e.errorMessages.push({type:"danger",msg:"This employee doesn't have enough leave balance for "+e.vm.leaveType.name})}},a.payroll.get({action:"employeeleaveplan",id:e.vm.leaveRequest.employeeId,groupId:e.vm.payrollConfig.payGroupId},function(t){e.vm.leaveStats=t,e.vm.employeeLeaveTypes=[],e.vm.currentLeaveType=e.vm.leaveStats.leaveSummary.typeSummary.find(function(t){return t.type.id==e.vm.leaveRequest.selection[0].leaveTypeId}),e.vm.employeeTypeSummary=e.vm.leaveStats.leaveSummary.typeSummary.filter(function(t){return t.type.isPaid!=e.vm.currentLeaveType.type.isPaid}),angular.forEach(e.vm.employeeTypeSummary,function(t){t.type.isPaid!=e.vm.currentLeaveType.type.isPaid&&(e.vm.employeeLeaveTypes.push(t.type),e.vm.employeeTypeSummary.push(t))})}),e.closeModal=function(){e.modalInstance.close(e.vm.leaveRequest)}}]),angular.module("payroll").controller("PayrollLopSummaryController",["$scope","AppSettings","$state","$filter","$q","$uibModal","PayrollService","NotificationService","PayrollModel",function(e,t,i,n,o,r,a,s,l){e.vm.employeesLopReversalDays=[];var c=function(){a.payroll.query({action:"employeesLossOfDays",id:e.vm.currentCycle.id,groupId:e.vm.payrollConfig.payGroupId},function(t){e.vm.employeesLossOfDays=t.map(function(e){return new l.LossOfDaysView(e)})}),a.lopReversal.query({groupId:e.vm.payrollConfig.payGroupId},function(t){e.vm.lastFinalisedCycles=t,e.vm.fromCycleDate=e.vm.lastFinalisedCycles[e.vm.lastFinalisedCycles.length-1].to,a.payroll.query({action:"lossOfPayReversal",groupId:e.vm.payrollConfig.payGroupId,id:e.vm.currentCycle.id},function(t){e.vm.employeesLopReversalDays=t.map(function(e){return new l.LossOfPayReversalView(e)}),e.vm.allEmployeesLopSummary=[]})}),u()},p=function(t,i,n,o,r){t=parseInt(n.entity.override.days),i=parseInt(o.entity.override.days);var a=e.gridApi.core.sortHandleNulls(t,i);return null!==a?a:t===i?0:t>i?1:t<i?-1:0},u=function(){e.vm.lopSummaryGridOptions=angular.copy(t.gridSettings),e.vm.lopSummaryGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",width:150},{field:"employeeName",displayName:"Employee"},{name:"lopfromA",displayName:"Lop from Previous Screens(A)",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.days}}</div>'},{name:"lopfromB",displayName:"Lop from Adjustment(B)",cellTemplate:'<div class="ui-grid-cell-contents align-cell-text textbox"><input class="form-control"  data-ng-change="row.entity.update()" data-ng-model="row.entity.override.days" type="number" min="0" data-ng-class="{\'invalid-input-field\': (row.entity.override.source !=1 && row.entity.override.days == null && grid.appScope.vm.submitted) || row.entity.override.days < 0 }"/></div>',sortingAlgorithm:p},{name:"override.days",displayName:"Final Lop",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.override.days != null ? row.entity.override.days : row.entity.days }}</div>'},{field:"override.comment",displayName:"Comment",cellTemplate:'<div class="ui-grid-cell-contents align-cell-text textbox"><input class="form-control" data-ng-model="row.entity.override.comment"></div>'}],e.vm.lopSummaryGridOptions.rowHeight=50,e.vm.lopSummaryGridOptions.appScopeProvider=e,e.vm.lopSummaryGridOptions.enableHorizonalScrollbar=!1,e.vm.lopSummaryGridOptions.data="vm.employeesLossOfDays | filter : vm.searchText",e.vm.lopSummaryGridOptions.onRegisterApi=function(t){e.gridApi=t},e.vm.lopSummaryGridOptions.isRowSelectable=function(e){}};e.saveLopSummary=function(){e.vm.employeesLossOfDays.every(function(e){return e.isValid()})?a.payroll.save({action:"employeesLossOfDays",id:e.vm.currentCycle.id,groupId:e.vm.payrollConfig.payGroupId},e.vm.employeesLossOfDays.map(function(e){return e.getLOP()}),function(t){s.success("Loss of Pay days saved successfully"),e.vm.doesEncashmentsExist||e.vm.isDailyRemunerationEnabled?e.gotoStep(e.vm.currentStep.index+1):e.close()},function(e){s.error("An error has occurred.")}):s.error("Please fill the data correctly."),e.vm.submitted=!0},e.saveData=function(){e.vm.form.lopReversalForm.$valid&&e.vm.employeesLossOfDays.every(function(e){return e.isValid()})?o.all([a.payroll.save({action:"employeesLossOfDays",id:e.vm.currentCycle.id,groupId:e.vm.payrollConfig.payGroupId},e.vm.employeesLossOfDays.map(function(e){return e.getLOP()})).$promise,a.payroll.save({action:"lossOfPayReversal",id:e.vm.currentCycle.id,groupId:e.vm.payrollConfig.payGroupId},e.vm.employeesLopReversalDays).$promise]).then(function(t){s.success("Loss of Pay days saved successfully"),e.vm.doesEncashmentsExist||e.vm.isDailyRemunerationEnabled?e.gotoStep(e.vm.currentStep.index+1):e.close()},function(e){s.error("An error has occurred.")}):s.error("Please fill the data correctly.")},e.deleteLopReversal=function(t,i){t.id>0?a.lopReversal.deleteEmployeeLopReversal(e.vm.payrollConfig.payGroupId,t.id,t.employeeId).then(function(t){t.isDeleted&&e.vm.employeesLopReversalDays.splice(i,1)}):e.vm.employeesLopReversalDays.splice(i,1)},c();e.changeLopReversalMonth=function(t,i){var n=e.vm.employeesLopReversalDays.filter(function(e){return t==e.employeeId}).map(function(e){return e.forCycleId});e.vm.lastFinalisedCycles.filter(function(e){return!n.includes(e.id)}).map(function(e){return e.id}).includes(e.vm.employeesLopReversalDays[i].cycleId)?(e.vm.employeesLopReversalDays[i].forCycleId=e.vm.employeesLopReversalDays[i].cycleId,e.vm.employeesLopReversalDays[i].availableLopDays=e.vm.allEmployeesLopSummary[t][e.vm.employeesLopReversalDays[i].forCycleId]||0):(s.success("Cannot select same month twice for same employee"),e.vm.employeesLopReversalDays[i].cycleId=e.vm.employeesLopReversalDays[i].forCycleId)},e.addNewEmployee=function(){e.vm.newEmployee.id>0&&e.vm.employeesLossOfDays.unshift(new l.LossOfDaysView({employeeName:e.vm.newEmployee.displayName,employeeNumber:e.vm.newEmployee.employeeNumber,employeeId:e.vm.newEmployee.id,days:0,source:3,payCycle:e.vm.currentCycle.id})),e.vm.newEmployee=null,e.vm.isAddNewEmployee=!1},e.addNewEmployeeForReversal=function(){e.vm.newEmployeeForReversal.id>0&&(e.vm.allEmployeesLopSummary[e.vm.newEmployeeForReversal.id]?d(e.vm.newEmployeeForReversal):a.lopReversal.getEmployeeLopSummary(e.vm.newEmployeeForReversal.id,e.vm.payrollConfig.payGroupId).then(function(t){e.vm.allEmployeesLopSummary[e.vm.newEmployeeForReversal.id]=t,Object.keys(t).filter(e=>t[parseInt(e)]>0)[0]?d(e.vm.newEmployeeForReversal):s.success("No lop summary found for this employee")}))};var d=function(t){var i=e.vm.employeesLopReversalDays.filter(function(e){return t.id==e.employeeId}).map(function(e){return e.forCycleId}),n=Object.keys(e.vm.allEmployeesLopSummary[t.id]).filter(n=>!i.includes(parseInt(n))&&e.vm.allEmployeesLopSummary[t.id][parseInt(n)]>0)[0];n&&e.vm.employeesLopReversalDays.unshift(new l.LossOfPayReversalView({employeeId:t.id,employeeName:t.displayName,employeeNumber:t.employeeNumber,cycleId:parseInt(n),availableLopDays:e.vm.allEmployeesLopSummary[t.id][parseInt(n)]})),e.vm.newEmployeeForReversal=null,e.vm.isAddNewEmployeeForReversal=!1};e.openImportLossOfDays=function(){r.open({windowClass:"full-screen-modal no-scroll",backdrop:!1,keyboard:!1,templateUrl:"excelLopImport",controller:"PayrollLossOfDaysImportController",controllerAs:"lopImportCtrl",resolve:{currentCycle:e.vm.currentCycle}}).result.then(function(e){e&&c()})},e.openImportLopReversal=function(){r.open({windowClass:"full-screen-modal no-scroll",backdrop:!1,keyboard:!1,templateUrl:"excelLopReversalImport",controller:"PayrollLopReversalImportController",controllerAs:"importCtrl",resolve:{currentCycle:e.vm.currentCycle}}).result.then(function(e){e&&c()})},e.searchEmployees=function(t,i){if(t&&t.length>=2){var n=o.defer();return a.searchEmployees(e.vm.payrollConfig.payGroupId,e.vm.currentCycle.id,t).then(function(t){i||(t=t.filter(function(t){return!e.vm.employeesLossOfDays.some(function(e){return e.employeeId==t.id})})),0==t.length&&t.push({noResults:!0}),n.resolve(t)}),n.promise}}}]),angular.module("payroll").controller("PayrollLeaveEncashmentController",["$scope","AppSettings","$state","$filter","$q","$uibModal","PayrollService","NotificationService","PayrollModel",function(e,t,i,n,o,r,a,s,l){e.vm.payTypes=[{name:"Pay",value:2},{name:"On Hold",value:0},{name:"Void (Never Pay)",value:1}];e.saveEncashments=function(){e.vm.leaveEncashments.length>0?a.leaveEncashment.save({groupId:e.vm.payrollConfig.payGroupId,cycleId:e.vm.currentCycle.id},e.vm.leaveEncashments,function(t){s.success("Leave Encashments saved successfully."),e.vm.isDailyRemunerationEnabled?e.gotoStep(e.vm.currentStep.index+1):e.close()}):e.vm.isDailyRemunerationEnabled?e.gotoStep(e.vm.currentStep.index+1):e.close()},e.vm.searchText="",a.leaveEncashment.query({groupId:e.vm.payrollConfig.payGroupId,cycleId:e.vm.currentCycle.id},function(t){e.vm.leaveEncashments=t,e.vm.leaveEncashmentsView=[],e.vm.leaveEncashments=n("orderBy")(e.vm.leaveEncashments,["employeeId"]),e.vm.leaveEncashments.forEach(function(t){var i=e.vm.leaveEncashmentsView.length-1;if(e.vm.leaveEncashmentsView.length>0&&e.vm.leaveEncashmentsView[i].employeeId==t.employeeId)e.vm.leaveEncashmentsView[i].encashmentsCount+=t.days,e.vm.leaveEncashmentsView[i].amount+=t.amount,e.vm.leaveEncashmentsView[i].encashments.push(t);else{var n={};n.employeeId=t.employeeId,n.encashmentsCount=t.days,n.employeeName=t.employeeName,n.employeeNumber=t.employeeNumber,n.amount=t.amount,n.encashments=[],n.encashments.push(t),e.vm.leaveEncashmentsView.push(n)}})})}]),angular.module("payroll").controller("PayrollRunRegisterController",["$scope","$uibModalInstance","$filter","AppSettings","payrollData","PayrollService","EmployeePayrollCycleRunStatus","uiGridConstants","uiGridGroupingConstants","UiGridExtensions","FileDownloadService","Gender",function(e,t,i,n,o,r,a,s,l,c,p,u){e.vm={earningsTitle:{},contributionsTitle:{},deductionsTitle:{},reimbursementsTitle:{},benefitsTitle:{}},e.vm.niceScrollOptions=angular.copy(n.scrollSettings),e.registerGridOptions=angular.copy(n.gridSettings),e.vm.runStatus=a,e.vm.gender=u;var d=function(){e.registerGridOptions.showColumnFooter=!0;var t=[{name:"status",displayName:"",cellTemplate:"<span class=\"advice-status\" data-ng-class=\"{'not-run' : !row.entity.hasPayable, 'partial-run' : row.entity.status == grid.appScope.vm.runStatus.PaymentOnHold.id }\"></span>",cellClass:"status-box",width:50,enablePinning:!0,pinnedLeft:!0,enableColumnMenu:!1,enableFiltering:!1,enableGrouping:!1},{name:"employeeNumber",displayName:"Employee Number",enablePinning:!0,cellClass:"ui-grid-cell emp-name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.payslips({id:row.entity.employeeId})" title="{{row.entity.employeeNumber}}">{{row.entity.employeeNumber}}</a><span title="Warnings" class="orange-badge badge node pos-static horizontal-margin-sm" data-ng-if="row.entity.warnings.length > 0" uib-popover-template="\'payrollwarnings\'" popover-append-to-body="true" popover-class="on-modal-zindex" popover-trigger="outsideClick" popover-placement="right">{{row.entity.warnings.length}}</span></div>',pinnedLeft:!0,width:150,enableGrouping:!1},{name:"employee",displayName:"Employee Name",enablePinning:!0,cellClass:"ui-grid-cell emp-name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.payslips({id:row.entity.employeeId})" title="{{row.entity.employee}}">{{row.entity.employee}}</a></div>',pinnedLeft:!0,width:150,enableGrouping:!1},{name:"jobTitle",displayName:"Designation",enablePinning:!0,cellClass:"ui-grid-cell",pinnedLeft:!0,width:150,enableGrouping:!1},{name:"dateJoined",displayName:"Date of Joining",enablePinning:!0,cellClass:"ui-grid-cell",cellFilter:'date:"dd MMM yyyy"',pinnedLeft:!0,width:150,enableGrouping:!1},{name:"gender",displayName:"Gender",enablePinning:!0,cellClass:"ui-grid-cell emp-name",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-class="{error: !row.entity[col.name]}"><span data-ng-if="row.entity[col.name]">{{grid.appScope.vm.gender.getById(row.entity.gender).title}}</span><span data-ng-if="!row.entity[col.name]">Not Available</span></div>',width:100,enableGrouping:!1},{name:"dateOfBirth",displayName:"Date of Birth",enablePinning:!0,cellClass:"ui-grid-cell emp-name",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-class="{error: !row.entity[col.name]}"><span data-ng-if="row.entity.dateOfBirth != null">{{ row.entity.dateOfBirth | date:"dd MMM yyyy" }}</span><span data-ng-if="row.entity.dateOfBirth == null">Not Available</span></div>',width:150,enableGrouping:!1},{name:"location",displayName:"Location",enablePinning:!0,cellClass:"ui-grid-cell emp-name",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-class="{error: !row.entity[col.name]}">{{ row.entity[col.name] || "Not Available" }}</div>',width:150,enableGrouping:!1},{name:"department",displayName:"Department",enablePinning:!0,cellClass:"ui-grid-cell emp-name",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-class="{error: !row.entity[col.name]}">{{ row.entity[col.name] || "Not Available" }}</div>',width:150,enableGrouping:!1},{name:"costCenter",displayName:"Cost Center",enablePinning:!0,cellClass:"ui-grid-cell emp-name",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-class="{error: !row.entity[col.name]}">{{ row.entity[col.name] || "Not Available" }}</div>',width:150,enableGrouping:!1},{name:"panNumber",displayName:"Pan Number",enablePinning:!0,cellClass:"ui-grid-cell emp-name",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-class="{error: !row.entity[col.name]}">{{ row.entity[col.name] || "Not Available" }}</div>',width:150,enableGrouping:!1},{name:"monthName",cellClass:"ui-grid-cell emp-name",enablePinning:!0,width:150,enableGrouping:!1},{name:"days",displayName:"Days",enablePinning:!0,cellClass:"ui-grid-cell emp-name",width:150,treeAggregationType:l.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=c.formatAggregation(e)},groupingShowGroupingMenu:!1},{name:"monthlyGross",displayName:"Gross",enablePinning:!0,cellClass:"ui-grid-cell",width:150,treeAggregationType:l.aggregation.SUM,cellTemplate:'<div class="ui-grid-cell-contents text-uppercase">{{row.entity[col.name] | currency: ""}}/{{ grid.appScope.vm.remunerationType[row.entity.remunerationType] }}</div>',customTreeAggregationFinalizerFn:function(e){e.rendered=c.formatAggregation(e)},groupingShowGroupingMenu:!1}];e.registerGridOptions.rowTemplate='<div class="register-row" data-ng-class="{\'no-details\' : !row.entity.hasPayable }"><div ng-repeat="col in colContainer.renderedColumns track by col.colDef.name" class="ui-grid-cell" ui-grid-cell></div></div>',t.AddNonDeductionColumn=function(e){this.push({name:e.componentName,displayName:e.componentTitle,cellClass:"ui-grid-cell non-deduction ui-grid-cell-contents",width:250,cellTemplate:'<div>{{grid.getCellValue(row, col) | currency:""}}</div>',headerCellClass:"non-deduction",cellTooltip:!0,headerTooltip:!0,type:"number",treeAggregationType:l.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=c.formatAggregation(e)},groupingShowGroupingMenu:!1})},t.AddDeductionColumn=function(e){this.push({name:e.componentName,displayName:e.componentTitle,cellClass:"ui-grid-cell deduction ui-grid-cell-contents",width:250,cellTemplate:'<div>{{grid.getCellValue(row, col)| currency: ""}}</div>',headerCellClass:"deduction",cellTooltip:!0,headerTooltip:!0,type:"number",treeAggregationType:l.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=c.formatAggregation(e)},groupingShowGroupingMenu:!1})},Object.keys(e.vm.earningsTitle).forEach(function(i){t.AddNonDeductionColumn(e.vm.earningsTitle[i])}),t.AddNonDeductionColumn({componentTitle:"Gross(A)",componentName:"gross"}),Object.keys(e.vm.benefitsTitle).length>0&&(Object.keys(e.vm.benefitsTitle).forEach(function(i){t.AddNonDeductionColumn(e.vm.benefitsTitle[i])}),t.AddNonDeductionColumn({componentTitle:"Total",componentName:"total"})),Object.keys(e.vm.contributionsTitle).forEach(function(i){t.AddDeductionColumn(e.vm.contributionsTitle[i])}),t.AddDeductionColumn({componentName:"totalContributions",componentTitle:"Total Contributions(B)"}),Object.keys(e.vm.deductionsTitle).forEach(function(i){t.AddDeductionColumn(e.vm.deductionsTitle[i])}),t.AddDeductionColumn({componentName:"totalDeductions",componentTitle:"Total Deductions(C)"}),t.AddNonDeductionColumn({componentName:"cashAdvanceAmount",componentTitle:"Cash Advance(D)"}),t.AddNonDeductionColumn({componentName:"cashAdvanceSettlementAmount",componentTitle:"Settlement Aganist Advance(E)"}),Object.keys(e.vm.reimbursementsTitle).forEach(function(i){t.AddNonDeductionColumn(e.vm.reimbursementsTitle[i])}),t.AddNonDeductionColumn({componentName:"totalReimbursements",componentTitle:"Total Reimbursements(F)"}),t.AddNonDeductionColumn({componentName:"netPay",componentTitle:"Total Net Pay(A-B-C+D+E+F)"}),e.registerGridOptions.columnDefs=angular.copy(t),e.registerGridOptions.data="adviceRegister | filter: vm.searchText",e.vm.displayGrid=!0},m=function(t){var i=[];angular.forEach(t,function(t,n){t.hasPayable=t.status==e.vm.runStatus.Executed.id||t.status==e.vm.runStatus.FinalSettlement.id||t.status==e.vm.runStatus.ReleasePayment.id||t.status==e.vm.runStatus.PaymentOnHold.id||t.status==e.vm.runStatus.AlreadyPaid.id||t.status==e.vm.runStatus.FinalSettlementAlreadyPaid.id;var o=new function(e){this.employee=e.employeeName,this.employeeNumber=e.employeeNumber,this.employeeId=e.employeeId,this.jobTitle=e.jobTitle,this.location=e.location,this.department=e.department,this.costCenter=e.costCenter,this.panNumber=e.panNumber,this.days=e.noOfPayDays-e.lossOfPayDays+"/"+e.cyclePayDays,this.gender=e.gender,this.dateOfBirth=e.dateOfBirth,this.dateJoined=e.dateJoined,this.monthName=e.monthName,this.hasPayable=e.hasPayable,this.monthlyGross=this.hasPayable?e.monthlyGross:0,this.gross=this.hasPayable?e.grossAmount:0,this.netPay=this.hasPayable?e.netAmount:0,this.totalContributions=this.hasPayable?e.totalContributions:0,this.totalDeductions=this.hasPayable?e.totalDeductions:0,this.cashAdvanceAmount=this.hasPayable?e.cashAdvanceAmount:0,this.cashAdvanceSettlementAmount=this.hasPayable?e.cashAdvanceSettlementAmount:0,this.totalReimbursements=this.hasPayable?e.totalReimbursements:0,this.totalBenefitAmount=this.hasPayable?e.totalBenefitAmount:0,this.total=this.hasPayable?e.total:0,this.remunerationType=e.remunerationType,this.warnings=e.warnings||[],this.status=e.status,this.addProperty=function(e,t){e.componentName in t||(t[e.componentName]=e),this[e.componentName]=e.amount||0}}(t);o.hasPayable?(t.earnings.forEach(function(t){o.addProperty(t,e.vm.earningsTitle)}),t.benefits.forEach(function(t){o.addProperty(t,e.vm.benefitsTitle)}),t.contributions.forEach(function(t){o.addProperty(t,e.vm.contributionsTitle)}),t.deductions.forEach(function(t){o.addProperty(t,e.vm.deductionsTitle)}),t.reimbursements.forEach(function(t){o.addProperty(t,e.vm.reimbursementsTitle)})):o.days=t.statusDescription,e.vm.errorCount=(e.vm.errorCount||0)+o.warnings.filter(function(e){return e.startsWith("##[Error]")}).length,e.vm.warningCount=(e.vm.warningCount||0)+o.warnings.filter(function(e){return e.startsWith("##[Warning]")}).length,e.vm.infoCount=(e.vm.infoCount||0)+o.warnings.filter(function(e){return e.startsWith("##[Info]")}).length,i.push(o)}),e.adviceRegister=i};e.closeModal=function(){t.close()},e.getRunRegister=function(){reportName="employeepayrollaggregate",p.downloadFile("/api/payroll/"+o.payrollConfig.payGroupId+"/ExportPayrollRunRegister?name="+reportName+"&format=excel&cycleId="+e.vm.currentCycle.id+"&searchKey="+(e.vm.searchText?e.vm.searchText.trim():""))},e.vm.currentCycle=o.cycle,e.vm.remunerationType=Payroll.Configuration.Model.RemunerationType,r.payroll.query({groupId:o.payrollConfig.payGroupId,action:"payadvices",id:e.vm.currentCycle.id},function(e){m(e),d()})}]),function(e){!function(t){var i=function(){function t(e,t,i,n,o){this.scope=e,this.$uibModal=t,this.appSettings=i,this.notificationService=n,this.PrePayrollService=o,this.steps=[],this.emplyeePayDays=[],this.currentCycle=e.vm.currentCycle,this.action=e.vm.action,this.payrollConfig=e.vm.payrollConfig,this.isFinalised=e.isFinalised,this.init()}return t.prototype.init=function(){var t=this;this.PrePayrollService.getDailyEmployeesPayDays(this.payrollConfig.payGroupId,this.currentCycle.id).then(function(i){t.emplyeePayDays=i.map(function(t){return new e.PrePayroll.Model.EmployeePayUnitsOverrideView(t)}),t.initGridSettings()})},t.prototype.initGridSettings=function(){this.wagesGridOptions=angular.copy(this.appSettings.gridSettings),this.wagesGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",width:150,enableCellEdit:!1},{field:"displayName",displayName:"Employee Name",enableGrouping:!1,enableCellEdit:!1},{field:"actualUnits",displayName:"Actual PayAble Days",type:"number",groupingShowGroupingMenu:!1,enableCellEdit:!1},{field:"units",displayName:"Adjusted PayableDays(Overridden)",type:"number",enableCellEdit:!this.isFinalised,cellTemplate:'<div class="ui-grid-cell-contents"  data-ng-if="!grid.appScope.isFinalised"><input type="number" class="form-control" data-ng-model="row.entity.units"></div><div class="ui-grid-cell-contents" data-ng-if="grid.appScope.isFinalised">{{row.entity.units}}</div>',editableCellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!grid.appScope.isFinalised"><input type="number" class="form-control" data-ng-model="row.entity.units"></div><div class="ui-grid-cell-contents" data-ng-if="grid.appScope.isFinalised">{{row.entity.units}}</div>',groupingShowGroupingMenu:!1},{field:"units",displayName:"Final PayableDays",type:"number",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.units != null">{{row.entity.units}}</span><span data-ng-if="row.entity.units == null">{{row.entity.actualUnits}}</span></div>',groupingShowGroupingMenu:!1,enableCellEdit:!1}],this.wagesGridOptions.data="ctrl.emplyeePayDays | filter : ctrl.searchText"},t.prototype.saveEmployeepayUnits=function(){var t=this;if(this.isFinalised)this.scope.close();else{var i=this.emplyeePayDays.map(function(t){return new e.PrePayroll.Model.EmployeePayUnitsOverride(t)});this.PrePayrollService.saveDailyEmployeesPayDays(this.payrollConfig.payGroupId,this.currentCycle.id,i).then(function(e){t.notificationService.success("Pay able days saved successfully"),t.scope.close()})}},t.prototype.openImportPayableDays=function(){var e=this;this.$uibModal.open({windowClass:"full-screen-modal no-scroll",backdrop:!1,keyboard:!1,templateUrl:"excelPayableDaysImport",controller:"PayrollPayDaysImportController",controllerAs:"ctrl",resolve:{currentCycle:function(){return e.currentCycle.id},paygroupId:function(){return e.payrollConfig.payGroupId}}}).result.then(function(t){t&&e.init()})},t.$inject=["$scope","$uibModal","AppSettings","NotificationService","PrePayrollService"],t}();t.PayunitsOverrideController=i,angular.module("payroll").controller("PayunitsOverrideController",i)}(e.Controllers||(e.Controllers={}))}(Payroll||(Payroll={})),function(e){var t=function(){function e(e,t,i,n){var o=this;this.$state=e,this.$stateParams=t,this.paygroupService=i,this.$scope=n,this.getAllPayGroups(),this.$scope.$on("$stateChangeStart",function(e,t,i,n,r){"payrolloverview.paygroup"==t.name?e.preventDefault():o.$state.includes("payrolloverview.paygroup.summary")&&o.paygroup&&o.paygroup.id!=i.groupId&&(o.paygroup=o.paygroups.find(function(e){return e.id==i.groupId}))})}return e.prototype.getAllPayGroups=function(){var e=this;this.paygroupService.getAllPayGroups().then(function(t){e.paygroups=t.map(function(e){return new Payroll.Configuration.Model.PaygroupView(e)}),e.$state.includes("payrolloverview.paygroup.summary")?e.paygroup=e.paygroups.find(function(t){return t.id==e.$state.params.groupId}):(e.switchToPayGroup(e.paygroups[0].id),e.paygroup=e.paygroups[0])},function(e){})},e.prototype.switchToPayGroup=function(e){this.$state.go("payrolloverview.paygroup.summary",{groupId:e})},e.$inject=["$state","$stateParams","paygroupService","$scope"],e}();e.PayGroupDashboardController=t,angular.module("payroll").controller("PayGroupDashboardController",t)}(payroll||(payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(t){var i=function(){function t(e,t,i,n,o){this.scope=e,this.$uibModal=t,this.appSettings=i,this.notificationService=n,this.payrollOvertimeService=o,this.overtimedetails=[],this.currentCycle=e.vm.payrollData.currentCycle,this.action=e.vm.payrollData.action,this.payGroupId=e.vm.payrollData.groupId,this.isFinalised=e.vm.payrollData.isFinalised,this.init(),this.datepickerOptions=angular.copy(this.appSettings.datepickerOptions),this.payTypes=[{name:"Pay",value:2},{name:"Void (Never Pay)",value:1},{name:"Paid Outside Keka Payroll",value:3}]}return t.prototype.init=function(){var t=this;this.overtimedetails=[],this.payrollOvertimeService.getEmployeeOverTimeDetails(this.payGroupId,this.currentCycle.id).then(function(i){t.overtimedetails=i.map(function(t){return new e.PrePayroll.Model.EmployeeOverTimeDetail(t)})})},t.prototype.viewOverTimeBreakup=function(e){this.$uibModal.open({templateUrl:"overtime-breakup",controller:"OverTimeBreakupDetailController as ctrl",windowClass:"structure-compare",resolve:{overTimeDetails:function(){return e}}})},t.prototype.openImportOvertimeAmount=function(){var e=this;this.$uibModal.open({windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,templateUrl:"excelOvertimeAmountImport",controller:"PayrollOvertimeImportController",controllerAs:"ctrl",resolve:{currentCycle:function(){return e.currentCycle.id},paygroupId:function(){return e.payGroupId}}}).result.then(function(t){t&&e.init()})},t.prototype.saveOverimeDetails=function(){var t=this;if(this.isFinalised)this.scope.vm.closeModal();else if(0==this.overtimedetails.filter(function(e){return e.isInValid||e.hasError}).length){var i=this.overtimedetails.map(function(t){return new e.PrePayroll.Model.EmployeeOverTime(t)});this.payrollOvertimeService.saveEmployeeOverTimeDetails(this.payGroupId,this.currentCycle.id,i).then(function(e){t.scope.vm.closeModal(),t.notificationService.success("Overtime details saved successfully")})}else this.notificationService.error("Please check error details")},t.$inject=["$scope","$uibModal","AppSettings","NotificationService","PayrollOvertimeService"],t}();t.PayrollOverTimeController=i;var n=function(){function e(e,t,i){this.$uibModal=e,this.appSettings=t,this.overTimeDetails=i,this.employeeOverTimDetails=i,this.initGridSettings()}return e.prototype.initGridSettings=function(){this.overTimeGridOptions=angular.copy(this.appSettings.gridSettings),this.overTimeGridOptions.columnDefs=[{field:"attendanceDate",displayName:"Day",width:150,cellFilter:'date:"dd MMM yyyy"'},{field:"overtimeHoursInHHMM",displayName:"Overtime Hours (HH:MM)"},{field:"payCode",displayName:"Pay Code"},{field:"payFactor",displayName:"Pay Factor"},{field:"hourlyPay",displayName:"Hourly Pay",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.hourlyPay | currency:"":2 }}</div>'},{field:"payableAmount",displayName:"Payable Amount",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.payableAmount | currency:"":2 }}</div>'}],this.overTimeGridOptions.data="ctrl.employeeOverTimDetails.overTimeBreakUps"},e.$inject=["$uibModal","AppSettings","overTimeDetails"],e}();t.OverTimeBreakupDetailController=n;var o=function(e){function t(i,n,o,r,a,s,l,c){var p=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.OvertimeAdjustedAmount,s.import,{importParams:"cycle/"+n,groupId:i}),r)||this;return p.paygroupId=i,p.currentCycle=n,p.location=o,p.modalInstance=a,p.payrollService=s,p.appSettings=l,p.fileDownloadService=c,p.payaction={1:"Void (Never Pay)",2:"Pay",3:"Paid Outside Keka Payroll"},p}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.paygroupId+"/cycle/"+this.currentCycle+"/upload/OvertimeAdjustedAmount"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/excel/template/"+this.paygroupId+"/cycle/"+this.currentCycle+"/overtimeadjustedamount")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",width:150},{field:"employeeName",displayName:"Employee Name"},{field:"payableAmount",displayName:"Payable Amount"},{field:"adjustedAmount",displayName:"Adjusted Amount"},{field:"payAction",displayName:"Pay Action",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.appScope.ctrl.payaction[row.entity.payAction]}}</div>'},{field:"outsidePaidOn",displayName:"OutSide Paid On"},{field:"outsideIncludeInTax",displayName:"Outside Include In Tax"}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","overtime-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","overtime-validation-details",!1),new SharedModel.Step(3,"Preview","","overtime-details-preview",!1)],t.$inject=["paygroupId","currentCycle","$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","FileDownloadService"],t}(SharedPatterns.ImportController);angular.module("payroll").controller("PayrollOverTimeController",i).controller("OverTimeBreakupDetailController",n).controller("PayrollOvertimeImportController",o)}(e.PrePayroll||(e.PrePayroll={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){!function(e){var t=function(){function e(e){this.employeeId=e.employeeId,this.cycleId=e.cycleId,this.payableAmount=e.payableAmount,this.adjustedAmount=e.adjustedAmount,this.payAction=e.payAction,this.commentIdentifier=e.commentIdentider,this.since=new Date(e.since),this.paidOn=null!=e.paidOn?new Date(e.paidOn):null,this.outsideIncludeInTax=e.outsideIncludeInTax}return Object.defineProperty(e.prototype,"isOutside",{get:function(){return 3==this.payAction},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isInValid",{get:function(){return this.isOutside&&null==this.paidOn||null!=this.adjustedAmount&&this.adjustedAmount<0},enumerable:!0,configurable:!0}),e}();e.EmployeeOverTime=t;var i=function(e){function t(t){var i=e.call(this,t)||this;return i.overTimeBreakUps=[],i.employeeNumber=t.employeeNumber,i.employeeName=t.employeeName,i.overTimeBreakUps=t.overTimeBreakUps.map(function(e){return new o(e)}),i.validationMessage=t.validationMessage,i}return __extends(t,e),Object.defineProperty(t.prototype,"hasError",{get:function(){return null!=this.validationMessage&&0!=this.validationMessage.length},enumerable:!0,configurable:!0}),t}(t);e.EmployeeOverTimeDetail=i;var n,o=function(){function e(e){this.attendanceDate=e.attendanceDate,this.overtimeHours=e.overtimeHours,this.overtimeHoursInHHMM=e.overtimeHoursInHHMM,this.payCode=e.payCode,this.paymentCalculationType=e.paymentCalculationType,this.hourlyPayFactor=e.hourlyPayFactor,this.fixedAmountPerHour=e.fixedAmountPerHour,this.lumpSumAmount=e.lumpSumAmount,this.hourlyPay=e.hourlyPay,this.payableAmount=e.payableAmount}return Object.defineProperty(e.prototype,"payFactor",{get:function(){switch(this.paymentCalculationType){case n.LumpSumAmount:return"Lump Sum";case n.FixedAmountPerHour:return"Fixed Amount PerHour";case n.HourlyPay:return this.hourlyPayFactor+"X"}},enumerable:!0,configurable:!0}),e}();e.OverTimeBreakupDetail=o,function(e){e[e.HourlyPay=0]="HourlyPay",e[e.FixedAmountPerHour=1]="FixedAmountPerHour",e[e.LumpSumAmount=2]="LumpSumAmount"}(n=e.PaymentCalculationType||(e.PaymentCalculationType={}))}(e.Model||(e.Model={}))}(e.PrePayroll||(e.PrePayroll={}))}(Payroll||(Payroll={})),function(e){!function(e){var t=function(){function e(e){this.overtime=e("/api/payroll/:groupId/cycle/:cycleId/:action",{action:"@action",groupId:"@groupId",cycleId:"@cycleId"},{update:{method:"PUT"}})}return e.prototype.getEmployeeOverTimeDetails=function(e,t){return this.overtime.query({action:"overtime",groupId:e,cycleId:t}).$promise},e.prototype.saveEmployeeOverTimeDetails=function(e,t,i){return this.overtime.save({action:"overtime",groupId:e,cycleId:t},i).$promise},e.$inject=["$resource"],e}();e.PayrollOvertimeService=t,angular.module("payroll").service("PayrollOvertimeService",t)}(e.Services||(e.Services={}))}(Payroll||(Payroll={})),angular.module("payroll").controller("PayrollCompanyInformationController",["$scope","SharedModel","$uibModalInstance","NotificationService","payrollConfig","PayrollConfigurationService","PayrollModel","OrgSettingServices","$rootScope",function(e,t,i,n,o,r,a,s,l){e.vm={},e.vm.submit=!1;e.vm.errorMessage=null,e.payrollConfig=o,e.vm.payFundConfig=e.payrollConfig.payFundConfig,e.vm.wizard={steps:[new t.Step({title:"Company Info",name:"companyLegalDetails",template:"payrollCompanyLegalDetails",index:1,valid:e.vm.payFundConfig.validState}),new t.Step({title:"Bank Accounts",name:"companyBankInformation",template:"payrollCompanyBankInformation",index:2,valid:e.vm.payFundConfig.validState}),new t.Step({title:"Company Locations",name:"locations",template:"payrollLocations",index:3,valid:e.vm.payFundConfig.validState})]},e.vm.currentStep=e.vm.wizard.steps[0],e.close=function(){i.close(e.payrollConfig.payFundConfig)},e.vm.isLastStep=function(){return e.vm.wizard.steps.indexOf(e.vm.currentStep)==e.vm.wizard.steps.length-1},e.complete=function(){e.vm.isLastStep()&&(n.success("Company Information saved successfully"),l.$broadcast("payrollSetupStepClosed",{payFundConfig:e.payrollConfig.payFundConfig}),e.close())},e.gotoStep=function(t){e.vm.submit=!0;var i=e.vm.wizard.steps.find(function(e){return e.index==t-1});if(!i||i&&i.valid){i&&1==i.index&&e.saveCompanyInfo(),i&&2==i.index&&e.updatePayFundSettings();var o=e.vm.wizard.steps.find(function(e){return e.index==t});e.vm.currentStep=o}else n.error(e.vm.errorMessage)},e.updatePayFundSettings=function(){r.savePayfundconfiguration(e.payrollConfig.payGroupId,e.vm.payFundConfig).then(function(t){n.success("Company Info and bank Information saved successfully."),e.payrollConfig.payFundConfig=new a.PayFundConfig(e.vm.payFundConfig)},function(e){n.error("An error occurred while saving company information and bank information settings.")})},e.saveCompanyInfo=function(){e.vm.companyInfoModel?s.saveCompanyInfo(e.vm.payFundConfig.legalEntityId,e.vm.companyInfoModel).then(function(e){e.isSaved?n.success("Company legal information saved successfully"):n.error("An error occurred while saving company information.")},function(e){n.error("An error occurred while saving company information.")}):n.error("Please fill company Information.")}}]),angular.module("payroll").controller("PayrollCompanyLegalDetailsController",["$scope","$q","AppSettings","SharedModel","NotificationService","PayrollModel","SharedModel","OrgSettingServices","$uibModal","CompanyType","$timeout","dialogs",function(e,t,i,n,o,r,n,a,s,l,c,p){e.vm.selectedEntity={},e.vm.niceScrollOptions=angular.copy(i.scrollSettings),e.vm.modelOptions=angular.copy(i.modelBlurSettings),e.vm.datepickerOptions=angular.copy(i.datepickerOptions),e.vm.companyTypes=l.getAll();e.getLegalEntity=function(t){a.getLegalEntity(t).then(function(t){e.vm.selectedEntity=new Settings.Model.LegalEntity(t),e.vm.selectedEntity&&e.vm.selectedEntity.companyInfo&&(e.vm.companyInfoModel=e.vm.selectedEntity.companyInfo),e.changePayFundConfig()},function(e){return null})},e.vm.niceScrollOptions.zindex=9246,e.vm.niceScrollOptions.autohidemode=!1,e.vm.payFundConfig.legalEntityId&&e.getLegalEntity(e.vm.payFundConfig.legalEntityId),a.organization.query({action:"legalentity/list"},function(t){e.vm.legalEntities=t.map(function(e){return new Settings.Model.LegalEntity(e)}),e.vm.payFundConfig.legalEntityId||e.getLegalEntity(e.vm.legalEntities[0].id)});var u=function(){var t=n.LegalEntity(e.vm.selectedEntity),i=t.signatory.length>0&&e.vm.companyInfoForm.companyInfo.$valid;i||(0==t.signatory.length&&(e.vm.errorMessage="Add at least one signatory"),e.vm.companyInfoForm.companyInfo.$valid||(e.vm.errorMessage="Please fill company Information")),e.vm.currentStep.valid=i};e.$watch("vm.companyInfoModel",function(t,i){t&&e.vm.selectedEntity.companyInfo&&c(function(){u()},400)},!0),e.changePayFundConfig=function(){e.vm.setPayFundConfig(e.vm.selectedEntity.bankAccount.map(function(e){return e.identifier})),e.vm.companyInfoModel=e.vm.selectedEntity.companyInfo},e.addNewSignatory=function(){s.open({templateUrl:"addNewSignatory",windowClass:"structure-compare small-btn",controller:"AddOrUpdateSignatory as ctrl",keyboard:!1,backdrop:"static",resolve:{signatory:function(){return null},legalEntityId:function(){return e.vm.selectedEntity.id}}}).result.then(function(t){t&&(e.vm.selectedEntity.signatory.push(t),u())})},e.editSignatory=function(t){s.open({templateUrl:"addNewSignatory",windowClass:"structure-compare small-btn",controller:"AddOrUpdateSignatory as ctrl",keyboard:!1,backdrop:"static",resolve:{signatory:function(){return t},legalEntityId:function(){return e.vm.selectedEntity.id}}}).result.then(function(e){e&&t.update(e)})},e.deleteSignatory=function(t){p.confirm("Please Confirm","Are you sure want to delete "+t.name+" signatory ?").result.then(function(){a.deleteSignatory(e.vm.selectedEntity.id,t.identifier).then(function(i){i.isDeleted?(e.vm.selectedEntity.signatory=e.vm.selectedEntity.signatory.filter(function(e){return e.identifier!=t.identifier}),u(),o.success("Signatory deleted successfully")):o.error("Deleting Signatory failed")},e=>{o.error(e.data.message)})})},e.vm.setPayFundConfig=function(t){e.vm.payFundConfig&&e.vm.payFundConfig.legalEntityId==e.vm.selectedEntity.id?angular.forEach(t,function(e){this.push(e)},e.vm.payFundConfig.bankAccountIds):e.vm.payFundConfig=new r.PayFundConfig({legalEntityId:e.vm.selectedEntity.id,bankAccountIds:angular.copy(t),currency:null})}}]),angular.module("payroll").controller("PayrollCompanyBankInformationController",["$scope","$q","$state","$uibModal","AppSettings","NotificationService","LookupServices","SharedModel","OrgSettingServices","dialogs",function(e,t,i,n,o,r,a,s,l,c){e.vm.niceScrollOptions=angular.copy(o.scrollSettings),e.vm.modelOptions=angular.copy(o.modelBlurSettings),e.vm.datepickerOptions=angular.copy(o.datepickerOptions);var p=function(){e.vm.payFundConfig.bankAccountIds=[],e.vm.selectedEntity.bankAccount.forEach(function(t,i){e.vm.payFundConfig.bankAccountIds.push(t.identifier)})},u=function(){s.LegalEntity(e.vm.selectedEntity);var t=e.vm.selectedEntity.bankAccount.length>0;e.vm.errorMessage=t?"Set default payroll account":"Add at least one bank Account",e.vm.currentStep.valid=t};e.vm.niceScrollOptions.zindex=9246,e.vm.niceScrollOptions.autohidemode=!1,p(),t.all([a.lookup.query({id:"banks"}).$promise]).then(function(t){e.vm.banks=t[0],u()}),e.isBankaccountDefault=function(t){return e.vm.payFundConfig.bankAccountIds&&-1!=e.vm.payFundConfig.bankAccountIds.indexOf(t)},e.openNewBankAccount=function(){n.open({templateUrl:"addBankAccount",windowClass:"structure-compare small-btn",controller:"AddOrUpdateBankAccount as ctrl",backdrop:"static",keyboard:!1,resolve:{bankAccount:function(){return null},banks:function(){return e.vm.banks},legalEntityId:function(){return e.vm.selectedEntity.id}}}).result.then(function(t){t&&(e.vm.selectedEntity.bankAccount.push(t),e.updatePayFundConfig([t.identifier]),u())})},e.editBankAccount=function(t){n.open({templateUrl:"addBankAccount",windowClass:"structure-compare small-btn",controller:"AddOrUpdateBankAccount as ctrl",keyboard:!1,backdrop:"static",resolve:{bankAccount:function(){return t},banks:function(){return e.vm.banks},legalEntityId:function(){return e.vm.selectedEntity.id}}}).result.then(function(e){e&&t.update(e)})},e.deleteBankAccount=function(t){c.confirm("Please Confirm","Are you sure want to delete bank Accounts of "+t.name+" ?").result.then(function(){l.deleteBankAccount(e.vm.selectedEntity.id,t.identifier).then(function(i){i.isDeleted?(angular.forEach(e.vm.selectedEntity.bankAccount,function(i,n){i.identifier==t.identifier&&(e.vm.selectedEntity.bankAccount.splice(n,1),e.removeFromPayFundConfig(t.identifier),u())}),r.success("Bank account deleted successfully")):r.error("An error occurred while deleting bank account.")})})},e.updatePayFundConfig=function(t){e.vm.payFundConfig&&e.vm.payFundConfig.legalEntityId==e.vm.selectedEntity.id&&angular.forEach(t,function(e){this.push(e)},e.vm.payFundConfig.bankAccountIds),u()},e.removeFromPayFundConfig=function(t){var i=e.vm.payFundConfig.bankAccountIds.indexOf(t);-1!=i&&e.vm.payFundConfig.bankAccountIds.splice(i,1),u()}}]),angular.module("payroll").controller("PayrollLocationsController",["$scope","$resource","$q","$state","$uibModal","AppSettings","NotificationService","LookupServices","OrgLocationService","SharedModel","SettingsModel","PublicProfileServices",function(e,t,i,n,o,r,a,s,l,c,p,u){e.vm.modelOptions=r.modelBlurSettings;var d=function(){var t=e.vm.locations.length>0;t||(e.vm.errorMessage="Add at least one location"),e.vm.currentStep.valid=t};e.getCountryName=function(t){return e.vm.countries.find(function(e){return e.code==t}).name},e.addlocation=function(){e.model=new Settings.Model.OrgLocation({}),e.model.orgLocationDetails.timezoneId=e.vm.timezones[68].identifier,e.model.orgLocationDetails.address.countryCode="IN",e.modalInstance=o.open({templateUrl:"addNewLocation",scope:e,backdrop:"static"})},e.closeModal=function(){e.modalInstance.close()},e.saveLocation=function(){e.vm.locationForm.orgLocations.$valid?(e.vm.disableSave=!0,l.saveOrgLocation(e.model).then(function(t){e.model.id=t.id,e.vm.locations.push(angular.copy(e.model)),e.model=new p.OrgLocation({}),e.vm.disableSave=!1,e.vm.locationForm.orgLocations.$setPristine(),e.submitted=!1,e.closeModal(),d(),a.success("Location saved successfully.")},function(t){a.error("An error occurred while saving location."),e.vm.disableSave=!1})):(e.submitted=!0,e.$broadcast("validateForm"))},i.all([l.getOrgLocationListViews(),s.lookup.query({id:"timezones"}).$promise,s.lookup.query({id:"countries"}).$promise,s.lookup.query({id:"states"}).$promise]).then(function(t){e.vm.locations=t[0],e.vm.timezones=t[1],e.vm.countries=t[2],e.vm.states=t[3],d()})}]),angular.module("payroll").controller("old-PayrollSetUpGeneralSettingsController",["$scope","PayrollModel","$q","$uibModalInstance","OrgSettingServices","PayrollConfigurationService","NotificationService","LookupServices","payrollConfig","dialogs","$uibModal","$rootScope",function(e,t,i,n,o,r,a,s,l,c,p,u){e.vm={},e.model={};e.changePayCycleMonth=function(){if(e.model.payCycle.payCycleMonth){var i=e.vm.payCycleMonthList.find(function(t){return d(e.model.payCycle.payCycleMonth,t.id)});i?e.vm.payCycle.payCycleMonth=i.id:e.vm.payCycle=new t.PayCycle({}),e.vm.changePayCycle=!0}},e.resetPayCycleMonth=function(){e.vm.payCycle=new t.PayCycle(e.model.payCycle),e.model.payCycle.payCycleMonth&&(e.vm.payPeriodEndDateList=e.model.payCycle.getPayPeriodEndDateList(),e.vm.payPeriod=e.model.payCycle.getPayPeriod(),e.vm.payDayList=e.model.payCycle.getPayDayList(),e.vm.payDayList.forEach(function(t){e.vm.payCycle.payDay.equals(t.id)&&(e.vm.payCycle.payDay=t.id)}),e.vm.payPeriodEndDateList.forEach(function(t){e.vm.payCycle.payCycleEndDate.equals(t.id)&&(e.vm.payCycle.payCycleEndDate=t.id)})),e.vm.changePayCycle=!1},e.openCycleEndDateChangeWizard=function(){p.open({templateUrl:"PayrollSettings/ChangePayCycleEndDate",windowClass:"full-screen-modal change-pay-cycle-container",controller:"PayCycleDatesChangeController as ctrl",resolve:{payrollConfiguration:function(){return e.payrollConfig}}}).result.then(function(t){e.model.payCycle.updateOnCycleDatesChange(t),e.vm.resetPayCycle=!0,e.resetPayCycleMonth(),e.payrollConfig.payrollSchedule.payCycle.update(e.model.payCycle)})};var d=function(e,t){return e.getMonth()==t.getMonth()&&e.getYear()==t.getYear()};e.$watch("vm.payCycle.payCycleEndDate",function(t,i){t==i||e.vm.resetPayCycle&&!e.vm.changePayCycle||(e.vm.payDayList=[],e.vm.payCycle.payDay=null,t&&(e.vm.payDayList=e.vm.payCycle.getPayDayList(),e.vm.payPeriod=e.vm.payCycle.getPayPeriod()))}),e.$watch("vm.payCycle.payCycleMonth",function(t,i){t==i||e.vm.resetPayCycle&&!e.vm.changePayCycle||(e.vm.payPeriodEndDateList=[],e.vm.payPeriod={},e.vm.payCycle.payCycleEndDate=null,t&&(e.vm.payPeriodEndDateList=e.vm.payCycle.getPayPeriodEndDateList()))}),e.$watch("vm.resetPayCycle",function(t,i){t!=i&&(e.vm.resetPayCycle=e.vm.changePayCycle)}),e.isFirstCycleFinalize=function(){return e.vm.payCycle.firstCycle&&(1==e.vm.payCycle.firstCycle.status||2==e.vm.payCycle.firstCycle.status)};!function(){e.vm.payPeriodDays=[];for(var t=1;t<=31;t++)e.vm.payPeriodDays.push({id:t,title:t.toString()})}(),function(){e.vm.workingDays=[];for(var t=20;t<=31;t++)e.vm.workingDays.push({id:t,title:t.toString()});e.vm.workingDays.push({id:-1,title:"Actual Days in month"})}(),e.payrollConfig=l,e.vm.payCycleMonthList=l.payrollSchedule.payCycle.getPayCycleMonthList(11,1),function(){var t=angular.copy(e.payrollConfig);e.model.payPeriod=angular.copy(t.payrollSchedule.payPeriod),e.model.payCycle=angular.copy(t.payrollSchedule.payCycle),e.resetPayCycleMonth()}();var m=function(){var i={payCycle:e.vm.payCycle,payPeriod:e.model.payPeriod};r.savegeneralpayconfig(e.payrollConfig.payGroupId,new t.PayrollSchedule(i)).then(function(i){e.vm.editPayCycle=!1;var o=new t.PayrollSchedule(i);e.payrollConfig.payPeriod=o.payPeriod,e.payrollConfig.payCycle=o.payCycle,a.success("General Payroll settings saved."),n.close(),u.$broadcast("payrollSetupStepClosed",{})},function(t){a.error("An error occurred while saving settings."),e.model.payCycle=angular.copy(e.payrollConfig.payrollSchedule.payCycle),e.model.payPeriod=angular.copy(e.payrollConfig.payrollSchedule.payPeriod),e.resetPayCycleMonth()})};e.updateGeneralPayrollSettings=function(){if(e.vm.payCycle.payCycleMonth&&e.vm.payCycle.payCycleEndDate&&e.vm.payCycle.payDay&&e.model.payPeriod.workingDays){var t=e.model.payCycle.validState&&!d(e.model.payCycle.payCycleMonth,e.vm.payCycle.payCycleMonth);if(!e.model.payCycle.validState||!t&&e.model.payCycle.payCycleEndDate.equals(e.vm.payCycle.payCycleEndDate))m();else{var i=t?"When you change the Start month for using Keka Payroll, all previous months payroll calculations will be cleared and you are required to import the previous months data. If you are sure you have not used Keka for previous months for running your payroll, you can proceed with the change. If you have any questions on this process, please reach out to support@keka.com":"When you change the pay period end date, all previous months payroll calculations will be cleared and you are required to import the previous months data. If you are sure you have not used Keka for previous months for running your payroll, you can proceed with the change. If you have any questions on this process, please reach out to support@keka.com";c.confirm("Please confirm",i).result.then(function(){m()},function(){e.vm.resetPayCycle=!0,e.resetPayCycleMonth()})}}else e.$broadcast("validateForm")}}]),angular.module("payroll").controller("PayrollPFAndESISettingsController",["$scope","$stateParams","$state","NotificationService","PayrollModel","Months","PayrollConfigurationService","PayrollSalaryConfigurationService","SharedModel","$uibModalInstance","payrollConfig","$q","$rootScope","$uibModal","dialogs",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y){e.vm={},e.model={},e.vm.Months=r,e.vm.wizard={steps:[new l.Step({title:"Provident Fund settings",name:"Provident Fund settings",index:1,isValid:!1,template:""})]};e.vm.currentStep=e.vm.wizard.steps[0],e.vm.payrollconfig=p,e.model.pf=angular.copy(p.pf),e.model.esi=angular.copy(p.esi),e.updatePFAndESISettings=function(){e.pfAndESISettings.$valid&&(e.pfAndESISettings.$dirty||!e.model.pf.validState&&!e.model.esi.validState?y.confirm("Please Confirm","This would also update all salary structures with the new changes. Continue?").result.then(function(){e.model.pf.overrideOnOrBeforeDay=e.model.pf.isEmployeeShareOverridesTwiceYear?e.vm.overrideTwiceYearOnOrBeforeDay:e.vm.overrideMonthlyOnOrBeforeDay,a.savepfAndESIconfig(e.vm.payrollconfig.payGroupId,{pfConfig:e.model.pf,esiConfig:e.model.esi}).then(function(t){n.success("Provident Fund and ESI Settings saved successfully"),e.vm.payrollconfig.pf=new o.PFGlobalConfiguration(t.providentFundConfig),e.vm.payrollconfig.esi=new o.ESIGlobalConfiguration(t.esiConfig),e.showStructureUpdateProgress(),s.regenerateSalaryStucture(e.vm.payrollconfig.payGroupId).then(function(t){e.structureUpdateProgressModal.close(),c.close(),d.$broadcast("payrollSetupStepClosed",{})},function(t){e.structureUpdateProgressModal.close(),n.success("Error occured while regenerating the salary structure.")})},function(t){e.closeModal()})}):(c.close(),d.$broadcast("payrollSetupStepClosed",{})))},e.showStructureUpdateProgress=function(){e.structureUpdateProgressModal=m.open({templateUrl:"structureUpdateProgress",keyboard:!1,backdrop:"static",windowClass:"structure-compare update-structure"})},e.$watch("model.pf.overrideOnOrBeforeDay",function(t,i){e.model.pf.isEmployeeShareOverridesTwiceYear?(e.vm.overrideTwiceYearOnOrBeforeDay=t,e.vm.overrideMonthlyOnOrBeforeDay=null):(e.vm.overrideTwiceYearOnOrBeforeDay=null,e.vm.overrideMonthlyOnOrBeforeDay=t)}),e.$watch("model.pf.isEmployeeShareOverridesTwiceYear",function(t,i){t?(e.model.pf.overrideOnOrBeforeDay=e.vm.overrideTwiceYearOnOrBeforeDay,e.vm.overrideMonthlyOnOrBeforeDay=null):(e.model.pf.overrideOnOrBeforeDay=e.vm.overrideMonthlyOnOrBeforeDay,e.vm.overrideTwiceYearOnOrBeforeDay=null)})}]),angular.module("payroll").controller("PayrollLoanSettingsController-old",["$scope","$resource","$q","$state","$filter","$timeout","$uibModal","$uibModalInstance","AppSettings","PayrollModel","PublicProfileServices","NotificationService","PayrollConfigurationService","SharedModel","SettingsModel","PublicProfileServices","payrollConfig","$rootScope",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,p,h,f){e.approverLevels=[],e.vm={},e.payrollConfig=h,e.model=angular.copy(e.payrollConfig.loanConfiguration),e.approverLevels=angular.copy(e.model.approvalProcess.approverLevels),e.overrideMaxLimitBy=angular.copy(e.model.approvalProcess.loanLimit.overrideMaxLimitBy),e.vm.enableEmployeeLoans=e.payrollConfig.enableEmployeeLoans;var g=function(){angular.forEach(e.approverLevels,function(t,i){0==t.approvers.length&&e.approverLevels.splice(i,1)})};e.resetConfig=function(t){"afterProbation"in t&&t.afterProbation&&(e.model.eligibility.availability.daysAfterJoining=0),"limitGrossSalaryRange"in t&&(t.limitGrossSalaryRange||(e.model.eligibility.minSalary=0,e.model.eligibility.maxSalary=0)),"limitLoanAmount"in t&&(t.limitLoanAmount||(e.model.approvalProcess.loanLimit.percentageOfGrossSalary=null,e.model.approvalProcess.loanLimit.maxLoanLimit=null,e.model.approvalProcess.loanLimit.allowOverrideMaxLimit=!1,e.overrideMaxLimitBy.employees=[])),"allowOverrideMaxLimit"in t&&(t.allowOverrideMaxLimit||(e.overrideMaxLimitBy.employees=[]))},e.addApprover=function(){if(!e.approverLevels.length||e.approverLevels[e.approverLevels.length-1].approvers.length){var t=new function(){this.approverLevel=null,this.approvers=[]};t.approverLevel=e.approverLevels.length+1,e.approverLevels.push(t)}else u.error("Please select at least one approver.")},e.updateApproverList=function(e,t,i){g()},e.closeModal=function(){s.dismiss()},e.getMatchedEmployees=function(e){if(e&&e.length>=2){var t=i.defer();return p.searchEmployees(e).then(function(e){0==e.length&&e.push({noResults:!0}),t.resolve(e)}),t.promise}},e.getFilteredEmployees=function(t,i){var n=e.getMatchedEmployees(t);return n&&angular.isFunction(n.then)?e.getMatchedEmployees(t).then(function(t){var n=[];angular.forEach(t,function(t){(function(t,i){var n=!1;if(0==i)e.approverLevels&&angular.forEach(e.approverLevels,function(e){var i=e.approvers.filter(function(e){return e.id==t.id});n=i.length>0});else{var o=e.overrideMaxLimitBy.employees.filter(function(e){return e.id==t.id});n=o.length>0}return n})(t,i)||(t.approverType?t.category="Roles":(t.approverType=0,t.approverId=t.id,t.approverName=t.displayName,t.category="Employees"),n.push(t))}),e.filteredApprovers=n}):[]};var v=function(t,i){d.saveLoanConfiguration(e.payrollConfig.payGroupId,i).then(function(i){u.success("Loan settings saved successfully"),e.payrollConfig.enableEmployeeLoans=e.vm.enableEmployeeLoans,e.payrollConfig.loanConfiguration=angular.copy(t),s.close(),f.$broadcast("payrollSetupStepClosed",{})},function(e){var t=e.data.message?e.data.message:"Error while saving loan settings.";u.error(t)})};e.updateLoanConfiguration=function(){if(e.vm.enableEmployeeLoans){if(g(),e.vm.loanSetting.payrollLoanSetting.$valid){if(e.model.approvalProcess.loanLimit.allowOverrideMaxLimit&&0==e.overrideMaxLimitBy.employees.length)return void u.information("Add employees who can override approval limit.");u.information("Saving loan settings"),n=[],angular.forEach(e.approverLevels,function(e){var t=[],i=e.approvers;angular.forEach(i,function(e){t.push(e.id)}),e.approverIds=t}),angular.forEach(e.overrideMaxLimitBy.employees,function(e){n.push(e.id)}),e.vm.overrideMaxLimitByIds=angular.copy(n);var t=angular.copy(e.model);t.approvalProcess.approverLevels=angular.copy(e.approverLevels),t.approvalProcess.loanLimit.overrideMaxLimitBy=angular.copy(e.vm.overrideMaxLimitByIds);var i={enableEmployeeLoans:e.vm.enableEmployeeLoans,loanConfiguration:t};v(t,i)}}else{i={enableEmployeeLoans:e.vm.enableEmployeeLoans,loanConfiguration:{}};v(i.loanConfiguration,i)}var n},p.getEmployeePublicProfiles().then(function(t){e.vm.employees=t,e.overrideMaxLimitBy.employees=[],angular.forEach(e.approverLevels,function(t){var i=[];angular.forEach(t.approverIds,function(t){var n=e.vm.employees.find(function(e){return e.id==t});i.push(n)}),t.approvers=angular.copy(i)}),angular.forEach(e.overrideMaxLimitBy,function(t){var i=e.vm.employees.find(function(e){return e.id==t});e.overrideMaxLimitBy.employees.push(i)})})}]),function(e){!function(e){!function(t){var i=function(){function t(e,t,i,n,o,r,a){var s=this;this.$state=e,this.$stateParams=t,this.$uibModal=i,this.paygroupService=n,this.notificationService=o,this.dialogs=r,this.$scope=a,this.getAllPayGroups(),this.$scope.$on("$stateChangeStart",function(e,t,i,n,o){"settings.payroll.paygroup"==t.name||"settings.payroll.paygroup.details"==t.name&&o.groupId==i.groupId?e.preventDefault():s.$state.includes("settings.payroll.paygroup.details")&&s.selectedPayGroup&&i.groupId&&s.selectedPayGroup.id!=i.groupId&&(s.selectedPayGroup=s.paygroups.find(function(e){return e.id==i.groupId}))})}return t.prototype.getAllPayGroups=function(){var t=this;this.paygroupService.getAllPayGroups().then(function(i){t.paygroups=i.map(function(t){return new e.Model.PaygroupView(t)}),t.$state.includes("settings.payroll.paygroup.details")?t.selectedPayGroup=t.paygroups.find(function(e){return e.id==t.$state.params.groupId}):t.gotoPayGroup(t.$state.params.groupId)},function(e){})},t.prototype.gotoPayGroup=function(e){this.selectedPayGroup=e?this.paygroups.find(function(t){return t.id==e}):this.paygroups[0],this.selectedPayGroup.id!=e&&this.$state.go("settings.payroll.paygroup.details",{groupId:this.selectedPayGroup.id})},t.prototype.addPaygroup=function(){var t=this;this.$uibModal.open({templateUrl:"add-pay-group",controller:"AddOrUpdatePaygroup as ctrl",windowClass:"structure-compare small-btn",backdrop:"static",keyboard:!1,resolve:{paygroup:function(){return null}}}).result.then(function(i){i&&(t.paygroups.push(new e.Model.PaygroupView(i)),t.gotoPayGroup(i.id))})},t.prototype.editPaygroup=function(){var e=this;this.$uibModal.open({templateUrl:"add-pay-group",controller:"AddOrUpdatePaygroup as ctrl",windowClass:"structure-compare small-btn",backdrop:"static",keyboard:!1,resolve:{paygroup:function(){return e.selectedPayGroup}}}).result.then(function(t){t&&(t.employeesAssigned=e.selectedPayGroup.employeesAssigned,e.selectedPayGroup.update(t))})},t.prototype.deletePaygroup=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure want to delete "+e.name+" ?").result.then(function(){t.notificationService.information("Deleting Pay group.."),t.paygroupService.deletePayGroup(e.id).then(function(i){i.isDeleted&&(t.notificationService.success("pay group deleted successfully"),t.paygroups=t.paygroups.filter(function(t){return t.id!=e.id}),t.gotoPayGroup(null))},function(e){t.notificationService.error(e.data.message)})})},t.$inject=["$state","$stateParams","$uibModal","paygroupService","NotificationService","dialogs","$scope"],t}();t.PaygroupListController=i;var n=function(){function t(t,i,n,o,r){this.appSettings=t,this.$uibModalInstance=n,this.paygroupService=o,this.notificationService=r,this.datepickerOptions=angular.copy(this.appSettings.datepickerOptions),this.model=new e.Model.Paygroup(i||{}),this.edit=null!=i,this.isDisable=!1}return t.prototype.savePaygroup=function(){var e=this;this.form.paygroup.$valid&&(this.isDisable=!0,this.paygroupService.savePaygroup(this.model).then(function(t){e.model.id=t.id,e.$uibModalInstance.close(e.model),e.notificationService.success("Pay Group saved successfully.")},function(t){e.isDisable=!1,e.notificationService.error(t.data.message)}))},t.prototype.updatePaygroup=function(){var e=this;this.form.paygroup.$valid&&(this.isDisable=!0,this.paygroupService.updatePaygroup(this.model.id,this.model).then(function(t){t.isUpdated?(e.$uibModalInstance.close(e.model),e.notificationService.success("Pay Group updated successfully.")):e.notificationService.error("Error in updating Pay Group.")},function(t){e.isDisable=!1,e.notificationService.error(t.data.message)}))},t.prototype.closeModal=function(){this.$uibModalInstance.dismiss()},t.$inject=["AppSettings","paygroup","$uibModalInstance","paygroupService","NotificationService"],t}();t.AddOrUpdatePaygroup=n,angular.module("payroll").controller("PaygroupListController",i).controller("AddOrUpdatePaygroup",n)}(e.PayGroup||(e.PayGroup={}))}(e.Configuration||(e.Configuration={}))}(Payroll||(Payroll={})),function(e){!function(e){!function(e){var t=function(){function e(e){this.receipts=[],this.id=e.id,this.employeeId=e.employeeId,this.employeeName=e.employeeName,this.employeeNumber=e.employeeNumber,this.payableAmount=e.payableAmount,this.status=e.status,this.componentName=e.componentName,this.claimAgainstComponent=e.claimAgainstComponent,this.componentType=e.componentType,this.claimedOn=e.claimedOn?e.claimedOn.stringToDate():null,this.receipts=e.receipts||[],this.currentBalance=e.currentBalance,this.totalAnnualAmount=e.totalAnnualAmount,this.claimAmount=e.claimAmount,this.paidOn=e.paidOn?e.paidOn.stringToDate():null,this.payDate=e.payDate?e.payDate.stringToDate():null,this.actionTakenOn=e.actionTakenOn?e.actionTakenOn.stringToDate():null,this.actionTakenBy=e.actionTakenByName,this.payGroupId=e.payGroupId,this.payGroupName=e.payGroupName,this.paymentStatus=e.paymentStatus,this.comment=e.comment,this.financialYear=e.financialYear}return e.prototype.toJSON=function(){var e=angular.copy(this);return e.payDate=null!=this.payDate?this.payDate.dateOnlyString():null,e},e}();e.ComponentClaim=t}(e.Model||(e.Model={}))}(e.componentClaim||(e.componentClaim={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(t){!function(i){var n=function(){function t(t,i,n,o,r){this.paygroupService=o,this.payrollService=r,this.salaryComponents=e.Configuration.Model.salaryComponentTypes,this.appsettings=angular.copy(n),this._uibModal=angular.copy(i),this.getAllPyagoups(),this.baseGridOptions(),this.initializeGridSettings()}return t.prototype.reviewComponentClaim=function(e){var t=this;this._uibModal.open({templateUrl:"payroll/ReviewComponentClaim",controller:"ReviewComponentClaimController",controllerAs:"ctrl",windowClass:"full-screen-modal dark-modal no-scroll-x declaration-doc-approvals",backdrop:!1,keyboard:!1,resolve:{ComponentClaim:function(){return e}}}).result.then(function(e){t.getAllClaims()})},t.prototype.changeSelectedComponent=function(){var e=this;this.selectedComponent?this.filteredClaims=this.claims.filter(function(t){return t.componentName==e.selectedComponent}):this.filteredClaims=this.claims},t.prototype.changePaygroup=function(){var e=this;this.payrollService.getFinancialYear(this.selectedPaGroup.id).then(function(t){e.currentFinancialYear=t,e.getAllClaims()})},t.prototype.getAllPyagoups=function(){var t=this;this.paygroupService.getAllPayGroups().then(function(i){t.paygroups=i.map(function(t){return new e.Configuration.Model.PaygroupView(t)}),t.selectedPaGroup=t.paygroups[0],t.changePaygroup()})},t.prototype.baseGridOptions=function(){var e=this;this.gridOptions=angular.copy(this.appsettings.gridSettings),this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellClass:"ui-grid-cell"},{field:"employeeName",displayName:"Employee Name",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.componentclaims({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>'},{field:"componentName",displayName:"Component Name",cellClass:"ui-grid-cell"},{field:"componentType",displayName:"Component Type",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.appScope.ctrl.salaryComponents.getById(row.entity.componentType)}}</div>',cellClass:"ui-grid-cell"}],this.gridOptions.data="ctrl.filteredClaims | filter: ctrl.filterText",this.gridOptions.rowHeight=60,this.gridOptions.onRegisterApi=function(t){e.gridApi=t}},t}();i.ComponentClaims=n;var o=function(t){function i(e,i,n,o,r,a,s){var l=t.call(this,e,i,s,o,r)||this;return l.componentClaimService=n,l.filter=a,l}return __extends(i,t),i.prototype.getAllClaims=function(){var t=this;this.componentClaimService.getPendingComponentclaims(this.selectedPaGroup.id,this.currentFinancialYear.from.getFullYear()).then(function(i){t.claims=i.map(function(t){return new e.componentClaim.Model.ComponentClaim(t)}),t.componentNames=Object.keys(t.filter("groupBy")(t.claims,"componentName")),t.filteredClaims=t.claims,t.selectedComponent=void 0})},i.prototype.initializeGridSettings=function(){this.gridOptions.columnDefs.push({field:"claimAmount",displayName:"Claim Amount",cellClass:"ui-grid-cell",cellFilter:"currency:'Rs.':2",type:"number"},{field:"claimedOn",displayName:"Claimed On",type:"date",cellFilter:'date:"dd MMM yyyy"',cellClass:"ui-grid-cell"},{name:"Actions",displayName:"ACTIONS",cellClass:"ui-grid-cell cell-tooltip",cellTemplate:'<div class="ui-grid-cell-contents action-buttons">\n                        <a class="text-center" data-ng-click="grid.appScope.ctrl.reviewComponentClaim(row.entity)"> <span class = "icon-pencil5"> </span>Review Claim </a></div>'})},i.$inject=["$scope","$uibModal","ComponentClaimService","paygroupService","PayrollService","$filter","AppSettings"],i}(n);i.PendingComponentClaimsController=o;var r=function(t){function i(e,i,n,o,r,a,s,l,c){var p=t.call(this,e,i,c,o,r)||this;return p.componentClaimService=n,p.filter=a,p.componentClaimStatus=s,p.componentClaimPaymentStatus=l,p}return __extends(i,t),i.prototype.getAllClaims=function(){var t=this;this.componentClaimService.getApprovedComponentclaims(this.selectedPaGroup.id,this.currentFinancialYear.from.getFullYear()).then(function(i){t.claims=i.map(function(t){return new e.componentClaim.Model.ComponentClaim(t)}),t.componentNames=Object.keys(t.filter("groupBy")(t.claims,"componentName")),t.filteredClaims=t.claims,t.selectedComponent=void 0})},i.prototype.initializeGridSettings=function(){this.gridOptions.columnDefs.push({field:"claimAmount",displayName:"Claim Amount",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{row.entity.claimAmount  | currency: 'Rs.' :2}} </span><br />\n                        <span class=\"text-muted\"> * {{row.entity.claimedOn | date : 'dd MMM yyyy' }} till end of FY</span></div>",cellClass:"ui-grid-cell"},{field:"payableAmount",displayName:"Payable Amount",cellClass:"ui-grid-cell",cellFilter:"currency:'Rs.':2",type:"number"},{field:"actionTakenOn",displayName:"Approved On",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.actionTakenOn | date : \'dd MMM yyyy\'}} </span><br />\n                        <span class="text-muted"> by {{row.entity.actionTakenBy}} </span></div>',cellClass:"ui-grid-cell"},{field:"paymentStatus",displayName:"Payment Status",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.ctrl.componentClaimPaymentStatus.getById(row.entity.paymentStatus).title}} </span><br />\n                        <span class="text-muted" data-ng-if = "row.entity.paymentStatus == grid.appScope.ctrl.componentClaimPaymentStatus.Paid.id || row.entity.paymentStatus == grid.appScope.ctrl.componentClaimPaymentStatus.PaidOutSideKekaPayroll.id"> on {{row.entity.paidOn | date : \'MMM yyyy\'}} </span></div>',cellClass:"ui-grid-cell"},{name:"Actions",displayName:"ACTIONS",cellClass:"ui-grid-cell cell-tooltip",cellTemplate:'<div class="ui-grid-cell-contents action-buttons">\n                        <a class="text-center" data-ng-click="grid.appScope.ctrl.reviewComponentClaim(row.entity)">\n                            <span class = "icon-pencil5" data-ng-if = "row.entity.paymentStatus != grid.appScope.ctrl.componentClaimPaymentStatus.Paid.id && row.entity.paymentStatus != grid.appScope.ctrl.componentClaimPaymentStatus.PaidOutSideKekaPayroll.id"> </span>\n                            <span data-ng-if = "row.entity.paymentStatus == grid.appScope.ctrl.componentClaimPaymentStatus.Paid.id ||row.entity.paymentStatus == grid.appScope.ctrl.componentClaimPaymentStatus.PaidOutSideKekaPayroll.id" class = "icon-file-check"> </span>\n                              Review Claim\n                        </a></div>'})},i.$inject=["$scope","$uibModal","ComponentClaimService","paygroupService","PayrollService","$filter","ComponentClaimStatus","ComponentClaimPaymentStatus","AppSettings"],i}(n);i.ApprovedComponentClaimsController=r;var a=function(t){function i(e,i,n,o,r,a,s){var l=t.call(this,e,i,s,o,r)||this;return l.componentClaimService=n,l.filter=a,l}return __extends(i,t),i.prototype.getAllClaims=function(){var t=this;this.componentClaimService.getrejectedComponentclaims(this.selectedPaGroup.id,this.currentFinancialYear.from.getFullYear()).then(function(i){t.claims=i.map(function(t){return new e.componentClaim.Model.ComponentClaim(t)}),t.componentNames=Object.keys(t.filter("groupBy")(t.claims,"componentName")),t.filteredClaims=t.claims,t.selectedComponent=void 0})},i.prototype.initializeGridSettings=function(){this.gridOptions.columnDefs.push({field:"claimAmount",displayName:"Claim Amount",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{row.entity.claimAmount  | currency: 'Rs.' :2}} </span><br />\n                        <span class=\"text-muted\"> * {{row.entity.claimedOn | date : 'dd MMM yyyy' }} till end of FY</span></div>",cellClass:"ui-grid-cell"},{field:"actionTakenOn",displayName:"Rejected On",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.actionTakenOn | date : \'dd MMM yyyy\'}} </span><br />\n                        <span class="text-muted"> by {{row.entity.actionTakenBy}} </span></div>',cellClass:"ui-grid-cell"},{name:"Actions",displayName:"ACTIONS",cellClass:"ui-grid-cell cell-tooltip",cellTemplate:'<div class="ui-grid-cell-contents action-buttons">\n                        <a class="text-center" data-ng-click="grid.appScope.ctrl.reviewComponentClaim(row.entity)"> <span class="icon-pencil5"> </span> Review Claim </a></div>'})},i.$inject=["$scope","$uibModal","ComponentClaimService","paygroupService","PayrollService","$filter","AppSettings"],i}(n);i.RejectedComponentClaimsController=a;var s=function(){function e(e,t,i,n,o,r,a,s,l,c,p){this.scope=e,this.filter=t,this._modalInstance=i,this.notificationService=n,this.dialogs=o,this.componentClaimStatus=a,this.componentClaimPaymentStatus=s,this.payrollService=l,this.payrollModel=c,this.EmployeeFinanceServices=p,this.pdfUrls=[],this.receiptIndex=0,this.receiptNo=1,this.componentClaim=r,this.getClaim(r.employeeId,r.id)}return e.prototype.nextReceipt=function(){this.pdfUrls.length>this.receiptIndex+1&&(this.receiptIndex++,this.receiptNo=this.receiptIndex+1,this.scope.pdfUrl=this.pdfUrls[this.receiptIndex])},e.prototype.previousReceipt=function(){this.receiptIndex>0&&(this.receiptIndex--,this.receiptNo=this.receiptIndex+1,this.scope.pdfUrl=this.pdfUrls[this.receiptIndex])},e.prototype.approveComponentClaim=function(){var e=this;this.form.reviewComponentClaim.$valid&&this.EmployeeFinanceServices.approveComponentclaim(this.componentClaim.employeeId,this.componentClaim.id,this.componentClaim).then(function(t){t&&t.isApproved&&(e.notificationService.success("Component claim approved successfully."),e._modalInstance.close(t.isApproved))},function(t){e.validationMessage=t.data.message})},e.prototype.rejectComponentClaim=function(){var e=this;this.EmployeeFinanceServices.rejectComponentclaim(this.componentClaim.employeeId,this.componentClaim).then(function(t){t&&t.isRejected&&(e.notificationService.success("Component claim rejected successfully."),e._modalInstance.close(t.isRejected))},function(t){e.notificationService.error(t.data.message)})},e.prototype.getClaim=function(e,i){var n=this;this.EmployeeFinanceServices.getComponentclaimForReview(e,i).then(function(e){n.componentClaim=new t.Model.ComponentClaim(e),n.componentClaim.paymentStatus==n.componentClaimPaymentStatus.Pending.id&&n.getPendingPayCycles(),n.buildReceipts()})},e.prototype.getPendingPayCycles=function(){var e=this;this.EmployeeFinanceServices.getPendingCycles({id:this.componentClaim.employeeId},3).then(function(t){e.payCycleMonthList=t;var i=e.componentClaim.payDate;e.componentClaim.payDate=null,i?e.payCycleMonthList.forEach(function(t){i.setHours(0,0,0,0)==t.to.setHours(0,0,0,0)&&(e.componentClaim.payDate=t.to)}):e.componentClaim.payDate=e.payCycleMonthList[0].to})},e.prototype.buildReceipts=function(){var e=this;this.pdfUrls=[],null!=this.componentClaim.receipts&&this.componentClaim.receipts.length>0&&(angular.forEach(this.componentClaim.receipts,function(t,i){e.pdfUrls[i]=e.filter("privateStorageAccountUrl")(e.componentClaim.receipts[i].location)}),this.scope.pdfUrl=this.pdfUrls[this.receiptIndex],this.previewReceipt=!0)},e.prototype.validateComponentClaim=function(){var e=this;this.EmployeeFinanceServices.validateComponentClaim({id:this.componentClaim.employeeId},this.componentClaim).then(function(t){e.validationMessage=""},function(t){e.validationMessage=t.data.message})},e.$inject=["$scope","$filter","$uibModalInstance","NotificationService","dialogs","ComponentClaim","ComponentClaimStatus","ComponentClaimPaymentStatus","PayrollService","PayrollModel","EmployeeFinanceServices"],e}();i.ReviewComponentClaimController=s;var l=function(t){function i(e,i,n,o,r,a,s,l,c,p){var u=t.call(this,e,i,p,r,a)||this;return u.scope=e,u.uibModal=i,u.notificationService=n,u.componentClaimService=o,u.filter=s,u.componentClaimStatus=l,u.componentClaimPaymentStatus=c,u.appSettings=p,u.fileUploadSettings=angular.copy(u.appSettings.fileUploadSettings),u.fileUploadSettings.acceptFileTypes=/(\.|\/)(jpe?g|png|doc|docx|pdf|txt|xps|rtf)$/i,u.fileUploadSettings.allowedFileTypes="png,jpg,jpeg,doc,docx,pdf,rtf,xps,txt",u.fileUploadSettings.maxNumberOfFiles=5,u.fileUploadSettings.maxFileSize=2097153,u}return __extends(i,t),i.prototype.getAllClaims=function(){var t=this;this.componentClaimService.getApprovedComponentclaims(this.selectedPaGroup.id,this.currentFinancialYear.from.getFullYear()).then(function(i){t.claims=i.map(function(t){return new e.componentClaim.Model.ComponentClaim(t)}),t.componentNames=Object.keys(t.filter("groupBy")(t.claims,"componentName")),t.filteredClaims=t.claims,t.selectedComponent=void 0})},i.prototype.initializeGridSettings=function(){this.gridOptions.columnDefs.push({field:"claimAmount",displayName:"Claim Amount",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{row.entity.claimAmount  | currency: 'Rs.' :2}} </span><br />\n                        <span class=\"text-muted\"> * {{row.entity.claimedOn | date : 'dd MMM yyyy' }} till end of FY</span></div>",cellClass:"ui-grid-cell"},{field:"payableAmount",displayName:"Payable Amount",cellClass:"ui-grid-cell",cellFilter:"currency:'Rs.':2",type:"number"},{field:"actionTakenOn",displayName:"Approved On",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.actionTakenOn | date : \'dd MMM yyyy\'}} </span><br />\n                        <span class="text-muted"> by {{row.entity.actionTakenBy}} </span></div>',cellClass:"ui-grid-cell"},{field:"paymentStatus",displayName:"Payment Status",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.ctrl.componentClaimPaymentStatus.getById(row.entity.paymentStatus).title}} </span><br />\n                        <span class="text-muted" data-ng-if = "row.entity.paymentStatus != grid.appScope.ctrl.componentClaimPaymentStatus.Pending.id"> on {{row.entity.paidOn | date : \'MMM yyyy\'}} </span></div>',cellClass:"ui-grid-cell"},{name:"Actions",displayName:"ACTIONS",cellClass:"ui-grid-cell cell-tooltip",cellTemplate:'<div class="ui-grid-cell-contents action-buttons">\n                        <a class="text-center" data-ng-click="grid.appScope.ctrl.addorEditClaim(row.entity)"> <span class = "icon-pencil5"> </span>Add Receipts</a></div>'})},i.prototype.addorEditClaim=function(e){this.componentClaim=e,this._modalInstance=this.uibModal.open({scope:this.scope,templateUrl:"update-reimbursable-receipts",windowClass:"bonus"})},i.prototype.onFileUploaded=function(){var e=this;!this.componentClaim.receipts||this.componentClaim.receipts.length<this.fileUploadSettings.maxNumberOfFiles?this.componentClaimService.addComponentClaimReceipt(this.selectedPaGroup.id,this.receipts).then(function(t){e.componentClaim.receipts||(e.componentClaim.receipts=[]),e.componentClaim.receipts.push(t)}):this.notificationService.success("you can add maximun "+this.fileUploadSettings.maxNumberOfFiles+" files..")},i.prototype.deleteReceipt=function(e){this.componentClaim.receipts.splice(e,1)},i.prototype.updateClaim=function(){var e=this;this.componentClaimService.updateComponentClaim(this.selectedPaGroup.id,this.componentClaim.employeeId,this.componentClaim.id,this.componentClaim.receipts).then(function(t){t.isUpdated&&(e.notificationService.success("Component Claim receipts saved Sucessfully"),e._modalInstance.close(t.isUpdated))},function(t){e.notificationService.error("error occurred whil saving receipts")})},i.$inject=["$scope","$uibModal","NotificationService","ComponentClaimService","paygroupService","PayrollService","$filter","ComponentClaimStatus","ComponentClaimPaymentStatus","AppSettings"],i}(n);i.AddReceiptsComponentClaimsController=l,angular.module("payroll").controller("PendingComponentClaimsController",o).controller("ApprovedComponentClaimsController",r).controller("RejectedComponentClaimsController",a).controller("ReviewComponentClaimController",s).controller("AddReceiptsComponentClaimsController",l)}(t.controllers||(t.controllers={}))}(e.componentClaim||(e.componentClaim={}))}(Payroll||(Payroll={})),function(e){var t,i,n;n=e.componentClaim||(e.componentClaim={}),t=n.Services||(n.Services={}),i=function(){function e(e){var t=this;this.resource=e,this.componentClaim=this.resource("/api/payroll/componentclaims/:groupId/:action/:claimId",{action:"@action",groupId:"@groupId"},{update:{method:"PUT"}}),this.getPendingComponentclaims=function(e,i){return t.componentClaim.query({groupId:e,year:i,action:"pending"}).$promise},this.getApprovedComponentclaims=function(e,i){return t.componentClaim.query({groupId:e,year:i,action:"approved"}).$promise},this.getrejectedComponentclaims=function(e,i){return t.componentClaim.query({groupId:e,year:i,action:"rejected"}).$promise},this.getComponentclaimForReview=function(e,i,n){return t.componentClaim.get({claimId:n,action:"review/claim",groupId:e,employeeId:i}).$promise},this.approveComponentclaim=function(e,i,n){return t.componentClaim.update({action:"approve",groupId:e,claimId:i},n).$promise},this.rejectComponentclaim=function(e,i,n){return t.componentClaim.update({action:"reject",groupId:e,claimId:i},n).$promise},this.getComponentClaims=function(e,i){return t.componentClaim.query({cycleId:i,groupId:e,action:"cycleClaims"}).$promise},this.addComponentClaimReceipt=function(e,i){return t.componentClaim.save({action:"AddReceipt",groupId:e},i).$promise}}return e.prototype.updateComponentClaim=function(e,t,i,n){return this.componentClaim.update({action:"update",claimId:i,groupId:e,employeeId:t},n).$promise},e.prototype.validateComponentClaim=function(e,t,i){return this.componentClaim.save({groupId:e,employeeId:t,action:"validate"},i).$promise},e.$inject=["$resource"],e}(),t.ComponentClaimService=i,angular.module("payroll").service("ComponentClaimService",i)}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){var t;(function(e){var t=function(){function e(e){this.loans=null!=e.loans?e.loans.map(function(e){return new s(e)}):[]}return Object.defineProperty(e.prototype,"totalloansTillDate",{get:function(){return this.loans.reduce(function(e,t){return e+t.loanAmount},0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"totalOutstandingAmount",{get:function(){return this.loans.filter(function(e){return e.repaymentStatus!=d.InRecovery}).reduce(function(e,t){return e+t.outstandingAmount},0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"totalBadLoan",{get:function(){return this.loans.filter(function(e){return e.repaymentStatus==d.InRecovery}).reduce(function(e,t){return e+t.outstandingAmount},0)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"anyLoans",{get:function(){return this.loans.length>0},enumerable:!0,configurable:!0}),e.prototype.addLoan=function(e){this.loans.push(e)},e.prototype.deleteLoan=function(e){this.loans=this.loans.filter(function(t){return t.id!=e.id})},e}();e.EmployeeLoans=t;var i=function(e){this.isLoanEnabled=e.isLoanEnabled,this.hasClearedLoans=e.hasClearedLoans};e.LoanEnableDetails=i;var n=function(e){this.totalOutstandingAmount=e.totalOutstandingAmount,this.totalLoanIssued=e.totalLoanIssued,this.totalBadLoans=e.totalBadLoans};e.LoanAggregateAmounts=n;var o=function(){function e(e){var t=this;this.toJSON=function(){return{id:t.id,employeeId:t.employeeId,loanAmount:t.loanAmount,outstandingAmount:t.outstandingAmount,preEMIInterest:t.preEMIInterest,rateOfInterest:t.rateOfInterest,repaymentTerm:t.repaymentTerm,remainingTerm:t.remainingTerm,interestCalculationMethod:t.interestCalculationMethod,disbursalWithInPayroll:t.disbursalWithInPayroll,loanReleasedOn:t.loanReleasedOn.dateOnlyString(),emiAmount:t.emiAmount,emiDeductsFrom:t.emiDeductsFrom.dateOnlyString(),requestedOn:t.requestedOn,notes:t.notes,files:t.files,repaymentStatus:t.repaymentStatus}},this.update=function(e){t.constructor(e)},this.id=e.id,this.employeeId=e.employeeId,this.loanAmount=e.loanAmount,this.outstandingAmount=e.outstandingAmount,this.preEMIInterest=e.preEMIInterest,this.rateOfInterest=e.rateOfInterest,this.repaymentTerm=e.repaymentTerm,this.remainingTerm=e.remainingTerm,this.interestCalculationMethod=e.interestCalculationMethod||m.ReducingRate,this.disbursalWithInPayroll=null==e.disbursalWithInPayroll||e.disbursalWithInPayroll,this.disbursalStatus=e.disbursalStatus||y.Released,this.loanReleasedOn=Date.getDateObj(e.loanReleasedOn),this.emiAmount=e.emiAmount,this.emiDeductsFrom=Date.getDateObj(e.emiDeductsFrom),this.notes=e.notes,this.files=e.files,this.repaymentStatus=e.repaymentStatus,this.hasLoanDisbursed=e.hasLoanDisbursed,this.actionTakenBy=e.actionTakenBy,this.actionTakenOn=Date.getDateObj(e.actionTakenOn),this.loanRequestStatus=e.loanRequestStatus,this.requestedBy=e.requestedBy,this.requestedName=e.requestedName,this.requestedOn=e.requestedOn,this.actionBy=e.actionBy}return Object.defineProperty(e.prototype,"repaymentStatusName",{get:function(){return d[this.repaymentStatus]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"interestCalculationMethodName",{get:function(){return m[this.interestCalculationMethod]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"progressBar",{get:function(){return(this.loanAmount-this.outstandingAmount)/this.loanAmount*100},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"canEdit",{get:function(){return!this.hasLoanDisbursed&&this.repaymentStatus==d.NotStarted},enumerable:!0,configurable:!0}),e}();e.EmployeeLoan=o;var r=function(e){var t=this;this.update=function(e){t.constructor(e)},this.id=e.id,this.loanAmount=e.loanAmount,this.expectedDate=Date.getDateObj(e.expectedDate),this.emiStartDate=Date.getDateObj(e.emiStartDate),this.comment=e.comment,this.repaymentTerm=e.repaymentTerm};e.LoanRequest=r;var a=function(e){function t(t){var i=e.call(this,t)||this;return i.employeeId=t.employeeId,i.status=t.status,i.requestedBy=t.requestedBy,i.requestedName=t.requestedName,i.requestedOn=t.requestedOn,i.employeeName=t.employeeName,i.employeeNumber=t.employeeNumber,i.actionTakenBy=t.actionTakenBy,i.actionTakenOn=Date.getDateObj(t.actionTakenOn),i.dateJoined=Date.getDateObj(t.dateJoined),i.exitDate=Date.getDateObj(t.exitDate),i.probationEndDate=Date.getDateObj(t.probationEndDate),i.jobTitle=t.jobTitle,i.exitStatus=t.exitStatus,i}return __extends(t,e),t.prototype.mapToEmployeeLoan=function(){var e=new s(this);return e.id=null,e.emiDeductsFrom=this.emiStartDate,e.loanReleasedOn=this.expectedDate,e.notes=this.comment,e},t}(r);e.EmployeeLoanRequestView=a;var s=function(e){function t(t){var i=e.call(this,t)||this;return i.update=function(e){i.constructor(e)},i.employeeName=t.employeeName,i.employeeNumber=t.employeeNumber,i.dateJoined=Date.getDateObj(t.dateJoined),i.exitDate=Date.getDateObj(t.exitDate),i.probationEndDate=Date.getDateObj(t.probationEndDate),i.ctc=t.ctc,i.jobTitle=t.jobTitle,i.exitStatus=t.exitStatus,i.inProbation=t.inProbation,i}return __extends(t,e),Object.defineProperty(t.prototype,"inNoticePeriod",{get:function(){return this.exitDate&&1==this.exitStatus},enumerable:!0,configurable:!0}),t}(o);e.EmployeeLoanView=s;var l=function(e){function t(t){var i=e.call(this,t)||this;return i.monthlyDetails=null!=t.monthlyDetails?t.monthlyDetails.map(function(e){return new c(e)}):[],i.currentMonthOverride=t.currentMonthOverride,i.hasCurrentMonthOverride=t.hasCurrentMonthOverride,i.canOverrideForCurrentMonth=t.canOverrideForCurrentMonth,i}return __extends(t,e),Object.defineProperty(t.prototype,"currentInstallment",{get:function(){return this.monthlyDetails.find(function(e){return e.status==p.Current})},enumerable:!0,configurable:!0}),t}(s);e.EmployeeLoanDetails=l;var c=function(){function e(e){this.month=e.month,this.year=e.year,this.status=e.status,this.installments=null!=e.installments?e.installments.map(function(e){return new u(e)}):[]}return Object.defineProperty(e.prototype,"monthAndYear",{get:function(){return this.month+"-"+this.year},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"statusName",{get:function(){return p[this.status]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"amount",{get:function(){return this.installments.reduce(function(e,t){return t.amount+e},0)},enumerable:!0,configurable:!0}),e}();e.MonthlyPayments=c;var p,u=function(e){this.amount=e.amount,this.repaymentMode=e.repaymentMode,this.paidOn=e.paidOn,this.deductionType=e.deductionType};e.InstallmentDetail=u,function(e){e[e.None=0]="None",e[e.Current=1]="Current",e[e.UpComing=2]="UpComing",e[e.Paid=3]="Paid",e[e.Skipped=4]="Skipped"}(p=e.LoanInstallmentStatus||(e.LoanInstallmentStatus={}));var d=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.None=0,t.NotStarted=1,t.InProgress=2,t.Repaid=3,t.InRecovery=4,t[0]="None",t[1]="Not Started",t[2]="In Progress",t[3]="Repaid",t[4]="In Recovery",t}(SharedPatterns.Enum);e.RepaymentStatus=d;var m=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.None=0,t.FlatRateInterest=1,t.ReducingRate=2,t[0]="None",t[1]="Flat Rate Interest",t[2]="Reducing Rate",t}(SharedPatterns.Enum);e.InterestCalculationMethod=m;var y=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.Pending=0,t.Released=1,t[0]="Pending",t[1]="Released",t}(SharedPatterns.Enum);e.LoanDisbursalStatus=y,function(e){e[e.None=0]="None",e[e.Pending=1]="Pending",e[e.Approved=2]="Approved",e[e.Rejected=3]="Rejected",e[e.Canceled=4]="Canceled",e[e.InApprovalProcess=5]="InApprovalProcess"}(e.LoanRequestStatus||(e.LoanRequestStatus={}));var h,f,g=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.None=0,t.SalaryDeduction=1,t.BankTransfer=2,t.Cheque=3,t.Skipped=4,t[0]="None",t[1]="Salary Deduction",t[2]="Bank Transfer",t[3]="Cheque",t[4]="Skipped",t}(SharedPatterns.Enum);e.RepaymentMode=g,function(e){e[e.EMIAdjustment=0]="EMIAdjustment",e[e.Prepayment=1]="Prepayment"}(h=e.LoanOverrideType||(e.LoanOverrideType={})),function(e){e[e.AdjustLoanTerm=0]="AdjustLoanTerm",e[e.AdjustEMIAmount=1]="AdjustEMIAmount"}(f=e.EMIOverrideOptions||(e.EMIOverrideOptions={}));var v=function(){function e(e){this.id=e.id,this.employeeId=e.employeeId,this.loanId=e.loanId,this.payCycleId=e.payCycleId,this.overrideOption=null!=e.overrideOption?e.overrideOption:f.AdjustEMIAmount,this.overrideType=e.overrideType,this.notes=e.notes}return Object.defineProperty(e.prototype,"overrideTypeName",{get:function(){return h[this.overrideType]},enumerable:!0,configurable:!0}),e}();e.LoanOverride=v;var S=function(e){function t(t){var i=e.call(this,t)||this;return i.overrideType=h.EMIAdjustment,i.skipEMI=t.skipEMI||!1,i}return __extends(t,e),t}(v);e.AdjustEMI=S;var C=function(e){function t(t){var i=e.call(this,t)||this;return i.overrideType=h.Prepayment,i.amount=t.amount||0,i.prepayDate=t.prepayDate,i.repaymentMode=null!=t.repaymentMode?t.repaymentMode:g.SalaryDeduction,i}return __extends(t,e),t}(v);e.Prepay=C})((t=e.loan||(e.loan={})).model||(t.model={}))}(Payroll||(Payroll={}));var adminOps;__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){var t;(function(e){var i=function(){function e(e,i,n){var o=this;this.payrollLoanService=e,this.scope=i,this.$state=n,this.payrollLoanService.getDoesLoanEnabled().then(function(e){o.loanEnableDetails=new t.model.LoanEnableDetails(e),o.loanEnableDetails.isLoanEnabled||o.$state.go("payrolloverview.loans.cleared")}),this.scope.$on("$stateChangeSuccess",function(e,t,i,n,r){(n.name.contains(".import")||n.name.contains(".addnew")||n.name.contains(".edit")||n.name.contains(".request.approval")||t.name.contains(".request.allPending"))&&o.getLoanAggregates()}),this.scope.$on("loanChanges",function(e,t){o.getLoanAggregates()}),this.getLoanAggregates()}return e.prototype.getLoanAggregates=function(){var e=this;this.payrollLoanService.getLoanAggregates().then(function(t){e.loanAggregateData=t})},e.$inject=["PayrollLoanService","$scope","$state"],e}();e.PayrollLoanOverviewController=i;var n=function(){function e(e,i,n,o,r){var a=this;this.appSettings=e,this.payrollLoanService=i,this.scope=n,this.uiGridGroupingConstants=o,this.uiGridExtensions=r,this.employeeLoans=new t.model.EmployeeLoans({}),this.getLoansDetails(),this.initializeGridSettings(),this.scope.$on("$stateChangeSuccess",function(e,t,i,n,o){(n.name.contains(".import")||n.name.contains(".addnew")||n.name.contains(".edit"))&&a.getLoansDetails()})}return e.prototype.baseIinitializeGridSettings=function(){var e=this;this.loanGridOptions=angular.copy(this.appSettings.gridSettings),this.loanGridOptions.showColumnFooter=!0,this.loanGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><span><a data-ui-sref="payrolloverview.loans.details({employeeId: row.entity.employeeId, loanId: row.entity.id})" title = "{{row.entity.employeeNumber}}">{{grid.getCellValue(row,col)}}</a></span></div>',cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,enableGrouping:!1},{field:"employeeName",displayName:"EMPLOYEE",cellTemplate:'<div class="ui-grid-cell-contents"><span><a data-ui-sref="payrolloverview.loans.details({employeeId: row.entity.employeeId, loanId: row.entity.id})" title = "{{row.entity.employeeName}}">{{grid.getCellValue(row,col)}}</a></span></div>',cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,enableGrouping:!1},{field:"loanAmount",displayName:"LOAN AMOUNT",cellTemplate:'<div class="ui-grid-cell-contents"><span title = "INR {{grid.getCellValue(row,col) | number : 0}}">INR {{grid.getCellValue(row,col) | number : 0}}</span></div>',cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"disbursalWithInPayroll",displayName:"Disbursal Mode",cellTemplate:'<div class="ui-grid-cell-contents" title = "{{row.entity.disbursalWithInPayroll ? \'Keka Payroll\' : \'Outside Payroll\'}}"><span>{{row.entity.disbursalWithInPayroll ? "Keka Payroll" : "Outside Payroll"}}</span></div>',cellClass:"ui-grid-cell",cellTooltip:!0,groupingShowGroupingMenu:!1},{field:"emiAmount",displayName:"EMI AMOUNT",cellTemplate:'<div class="ui-grid-cell-contents" title = "INR {{grid.getCellValue(row,col) | number : 0}}"><span>INR {{grid.getCellValue(row,col) | number : 0}}</span></div>',cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"outstandingAmount",displayName:"Outstanding Amount",cellTemplate:'<div class="ui-grid-cell-contents" title = "INR {{grid.getCellValue(row,col) | number : 0}}"><span>INR {{grid.getCellValue(row,col) | number : 0}}</span></div>',cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"repaymentTerm",displayName:"Actual Repayment Term",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)}},{field:"remainingTerm",displayName:"BALANCE PERIOD",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)}},{field:"repaymentStatusName",displayName:"STATUS",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,groupingShowAggregationMenu:!1},{field:"emiDeductsFrom",displayName:"EMI Deducts From",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,cellFilter:"date:'dd MMM yyyy'",groupingShowAggregationMenu:!1},{field:"progressBar",displayName:"Progress Status",cellTemplate:'<div class="ui-grid-cell-contents col-sm-12"><span><div class="progress-container"><div class="progress info"> <div class="progress-bar" style="width:{{row.entity.progressBar}}%;"></div></div></div></span></div>',cellClass:"ui-grid-cell",enableGrouping:!1}],this.loanGridOptions.rowHeight=50,this.loanGridOptions.data="ctrl.employeeLoans.loans | filter: ctrl.filterText"},e}();e.IPayrollLoansController=n;var o=function(e){function i(t,i,n,o,r,a,s,l){var c=e.call(this,t,i,a,s,l)||this;return c.modalService=n,c.notificationService=o,c.dialogs=r,c.deleteloan=function(e){c.dialogs.confirm("Please confirm","Are you sure want to delete "+e.employeeName+" loan of amount "+e.loanAmount+" ? ").result.then(function(){c.payrollLoanService.deleteLoan(e.employeeId,e.id).then(function(t){c.notificationService.success(e.employeeName+" loan of amount "+e.loanAmount+" deleted successfully"),c.employeeLoans.deleteLoan(e),c.scope.$emit("loanChanges")},function(e){c.notificationService.error(e.data.message)})})},c}return __extends(i,e),i.prototype.getLoansDetails=function(){var e=this;this.payrollLoanService.getAllOutstandingLoans().then(function(i){e.employeeLoans=new t.model.EmployeeLoans({loans:i})})},i.prototype.initializeGridSettings=function(){this.baseIinitializeGridSettings(),this.loanGridOptions.columnDefs.push({name:"Actions",displayName:"ACTIONS",enableSorting:!1,cellClass:"ui-grid-cell cell-tooltip ui-grid-cell-contents",cellTemplate:'<div class="ui-grid-cell-options action-buttons" data-ng-if="row.entity.canEdit"><a class="action-block" data-ui-sref="payrolloverview.loans.edit({loanId:row.entity.id,employeeId:row.entity.employeeId})"><span class="icon-keka-circleedit information-tooltip tooltip-grey icon-action" uib-tooltip="Edit" tooltip-placement="left"></span></a><a class="action-block" data-ng-click="grid.appScope.ctrl.deleteloan(row.entity);"><span class="icon-xhr-cancel-2 information-tooltip tooltip-grey icon-action" uib-tooltip="Delete" tooltip-placement="left"></span></a></div>',enableGrouping:!1})},i.$inject=["AppSettings","PayrollLoanService","$uibModal","NotificationService","dialogs","$scope","uiGridGroupingConstants","UiGridExtensions"],i}(n);e.PayrollOustandingLoansController=o;var r=function(e){function i(t,i,n,o,r,a,s,l){var c=e.call(this,t,i,a,s,l)||this;return c.modalService=n,c.notificationService=o,c.dialogs=r,c}return __extends(i,e),i.prototype.getLoansDetails=function(){var e=this;this.payrollLoanService.getAllClearedLoans().then(function(i){e.employeeLoans=new t.model.EmployeeLoans({loans:i})})},i.prototype.initializeGridSettings=function(){this.baseIinitializeGridSettings()},i.$inject=["AppSettings","PayrollLoanService","$uibModal","NotificationService","dialogs","$scope","uiGridGroupingConstants","UiGridExtensions"],i}(n);e.PayrollClearedLoansController=r;var a=function(){function e(e,i,n,o,r,a,s,l,c,p){var u=this;this.$q=e,this.PayrollConfigurationService=i,this.payrollLoanService=n,this.payrollSalaryStructureService=o,this.payrollService=r,this.payrollModel=a,this.notificationService=s,this.$uibModalInstance=l,this.$stateParams=c,this.employeeFinanceServices=p,this.payCycleMonthList=[],this.InterestCalculationMethod=t.model.InterestCalculationMethod,this.approvedStatus=t.model.LoanDisbursalStatus.getAll(),this.loanRequestStatus=t.model.LoanRequestStatus,this.getPendingCycles=function(){u.employeeFinanceServices.getPendingCycles({id:u.model.employeeId},4).then(function(e){u.payCycleMonthList=e,u.$stateParams.loanRequestId&&(u.model.emiDeductsFrom=u.getPayCycleDate(u.model.emiDeductsFrom),u.model.loanReleasedOn=u.getPayCycleDate(u.model.loanReleasedOn))},function(e){u.notificationService.error(e.data.message)})},this.setEmiCalculation=function(){var e=u.payrollConfig.loanConfiguration.emiCalculation;u.model.rateOfInterest=e.standardRateOfInterest,u.model.interestCalculationMethod=e.interestCalculationMethod,u.model.repaymentTerm=e.maximumInstallments},this.from=new Date,this.model=new t.model.EmployeeLoanView({id:this.$stateParams.loanId}),(this.$stateParams.loanId||this.$stateParams.loanRequestId)&&(this.model.employeeId=this.$stateParams.employeeId),this.init(),this.$stateParams.employeeId&&!this.model.id&&this.payrollService.getPayrollEmployee(this.$stateParams.employeeId).then(function(e){u.employee=e,u.getSalaryDetailsAndOutstandingLoans()},function(e){u.notificationService.error(e.data.message)})}return e.prototype.init=function(){var e=this;this.model.id&&this.$q.all([this.payrollSalaryStructureService.getSalaryStructure(this.model.employeeId),this.payrollLoanService.getEmployeeLoanView(this.model.id),this.payrollLoanService.getTotalOutstandingLoans(this.model.employeeId),this.employeeFinanceServices.getLoanConfiguration(this.model.employeeId)]).then(function(i){if(i[0]){if(e.model=new t.model.EmployeeLoanView(i[1]),e.employeeLoan=new t.model.EmployeeLoanView(i[1]),e.employee={id:e.model.employeeId,displayName:e.model.employeeName,jobTitle:e.model.jobTitle},e.model.ctc=i[0].ctc,e.totalOutstandingLoans=i[2].count,e.payrollConfig=i[3],!e.payrollConfig.enableEmployeeLoans)return void e.notificationService.error("Loan is disable for selected employee");e.getPendingCycles()}else e.notificationService.error("Loan cannot be applied because salary details are not added for this employee")},function(t){e.notificationService.error(t.data.message)})},e.prototype.getPayCycleDate=function(e){var t=this.payCycleMonthList.find(function(t){return t.month==e.getMonth()&&t.year==e.getFullYear()});if(null!=t)return t.to},e.prototype.searchEmployees=function(e){var t=this;e&&e.length>=2&&this.payrollService.searchEmployeesNotExitUptoDate(this.from.dateOnlyString(),e).then(function(e){0==e.length&&e.push({noResults:!0}),t.filteredApprovers=e})},e.prototype.getSalaryDetailsAndOutstandingLoans=function(){var e=this;this.model.employeeId!=this.employee.id&&this.$q.all([this.payrollSalaryStructureService.getSalaryStructure(this.employee.id),this.payrollLoanService.getTotalOutstandingLoans(this.employee.id),this.employeeFinanceServices.getLoanConfiguration(this.employee.id)]).then(function(t){if(t[0]){if(e.model.employeeId=e.employee.id,e.model.employeeName=e.employee.displayName,e.model.dateJoined=Date.getDateObj(e.employee.dateJoined),e.model.exitDate=Date.getDateObj(e.employee.exitDate),e.model.probationEndDate=Date.getDateObj(e.employee.probationEndDate),e.model.inProbation=e.employee.inProbation,e.model.ctc=t[0].ctc,e.model.jobTitle=e.employee.jobTitle,e.model.exitStatus=e.employee.exitStatus,e.totalOutstandingLoans=t[1].count,e.payrollConfig=t[2],!e.payrollConfig.enableEmployeeLoans)return void e.notificationService.error("Loan is disable for selected employee");e.setEmiCalculation(),e.getPendingCycles()}else e.notificationService.error("Loan cannot be applied because salary details are not added for this employee")},function(t){e.notificationService.error(t.data.message)})},e.prototype.changeEmiDeductsFrom=function(){var e=this;if(this.model.emiDeductsFrom){var t=this.payCycleMonthList.find(function(t){return e.model.emiDeductsFrom.getMonth()==t.month&&e.model.emiDeductsFrom.getFullYear()==t.year});this.model.emiDeductsFrom=t?t.to:null,this.isChangeEmiDeductsFrom=!0}},e.prototype.changeReleasedOn=function(){var e=this;if(this.model.loanReleasedOn){var t=this.payCycleMonthList.find(function(t){return e.model.loanReleasedOn.getMonth()==t.month&&e.model.loanReleasedOn.getFullYear()==t.year});this.model.loanReleasedOn=t?t.to:null,this.isChangeReleasedOn=!0}},e.prototype.resetEmiDeductsFrom=function(){null!=this.employeeLoan&&(this.model.emiDeductsFrom=Date.getDateObj(this.employeeLoan.emiDeductsFrom),this.calculateEmi(),this.isChangeEmiDeductsFrom=!1)},e.prototype.resetReleasedOn=function(){null!=this.employeeLoan&&(this.model.loanReleasedOn=Date.getDateObj(this.employeeLoan.loanReleasedOn),this.calculateEmi(),this.isChangeReleasedOn=!1)},e.prototype.setLoanReleasedOnToNull=function(){this.model.loanReleasedOn=null},e.prototype.closeModal=function(){this.$uibModalInstance.dismiss()},e.prototype.calculateEmi=function(){var e=this;if(this.model.loanAmount&&this.model.rateOfInterest>=0&&this.model.interestCalculationMethod&&this.model.repaymentTerm&&this.model.loanReleasedOn&&this.model.emiDeductsFrom){var t=this.model.toJSON();t.id=null,this.payrollLoanService.calculateEMI(t.employeeId,t).then(function(t){e.model.emiAmount=t.emiAmount})}},e.prototype.validateLoan=function(){if(this.errorMessages=[],null!=this.model.employeeId)if(this.model.ctc){if(0!=this.model.emiAmount)return this.requestedLoan=!0,0==this.errorMessages.length;this.notificationService.error("Emi Deduction date should be greater than loan released date")}else this.notificationService.error("Please add salary details for this employee");else this.notificationService.error("Please select employee")},e.prototype.closeModalWithLoan=function(e){e.employeeName=this.model.employeeName,e.dateJoined=this.model.dateJoined,e.exitDate=this.model.exitDate,e.probationEndDate=this.model.probationEndDate,e.exitStatus=this.model.exitStatus,e.jobTitle=this.model.jobTitle,this.$uibModalInstance.close(e)},e}();e.AddLoanController=a;var s=function(e){function t(t,i,n,o,r,a,s,l,c,p){return e.call(this,t,i,n,o,r,a,s,l,c,p)||this}return __extends(t,e),t.prototype.requestLoan=function(){var e=this;this.payrollConfig.enableEmployeeLoans?this.form.loanRequestForm.$valid&&this.validateLoan()&&this.payrollLoanService.saveOrUpdateEmployeeLoan(this.model.employeeId,this.model).then(function(t){e.model.id?e.notificationService.success(e.model.employeeName+" loan of amount "+e.model.loanAmount+" updated successfully"):e.notificationService.success(e.model.employeeName+" loan of amount "+e.model.loanAmount+" added successfully"),e.closeModalWithLoan(t)},function(t){e.notificationService.error("This loan cannot be updated."),e.requestedLoan=!1,e.errorMessages.push(t.data)}):this.notificationService.error("Loan is disable for selected employee")},t.$inject=["$q","PayrollConfigurationService","PayrollLoanService","PayrollSalaryStructureService","PayrollService","PayrollModel","NotificationService","$uibModalInstance","$stateParams","EmployeeFinanceServices"],t}(a);e.AddOrUpdateLoanController=s;var l=function(e){function i(t,i,n,o,r,a,s,l,c,p){return e.call(this,t,i,n,o,r,a,s,l,c,p)||this}return __extends(i,e),i.prototype.init=function(){var e=this;this.$q.all([this.payrollSalaryStructureService.getSalaryStructure(this.model.employeeId),this.payrollLoanService.getLoanRequestView(this.model.employeeId,this.$stateParams.loanRequestId),this.payrollLoanService.getTotalOutstandingLoans(this.model.employeeId),this.employeeFinanceServices.getLoanConfiguration(this.model.employeeId)]).then(function(i){i[0]?(e.model=new t.model.EmployeeLoanView(i[1]),e.employee={id:e.model.employeeId,displayName:e.model.employeeName,jobTitle:e.model.jobTitle},e.model.ctc=i[0].ctc,e.totalOutstandingLoans=i[2].count,e.payrollConfig=i[3],e.calculateEmi(),e.getPendingCycles()):e.notificationService.error("Loan cannot be applied because salary details are not added for this employee")},function(t){e.notificationService.error(t.data.message)})},i.prototype.requestLoan=function(){var e=this;this.form.loanRequestForm.$valid&&this.validateLoan()&&this.payrollLoanService.createLoanBaedOnRequest(this.model.employeeId,this.$stateParams.loanRequestId,this.model).then(function(t){e.notificationService.success(e.model.employeeName+" loan of amount "+e.model.loanAmount+" added successfully"),e.closeModalWithLoan(t)},function(t){e.notificationService.error("This loan cannot be updated."),e.requestedLoan=!1,e.errorMessages.push(t.data)})},i.$inject=["$q","PayrollConfigurationService","PayrollLoanService","PayrollSalaryStructureService","PayrollService","PayrollModel","NotificationService","$uibModalInstance","$stateParams","EmployeeFinanceServices"],i}(a);e.PayrollLoanRequestApprovalController=l;var c=function(){function e(e,i,n,o,r,a,s,l,c){var p=this;this.$q=e,this.payrollLoanService=i,this.payrollSalaryStructureService=n,this.notificationService=o,this.$uibModalInstance=r,this.modalService=a,this.scope=s,this.stateParams=l,this.dialogs=c,this.LoanInstallmentStatus=t.model.LoanInstallmentStatus,this.pastLoans=[],this.outstandingLoans=[],this.$q.all([this.payrollSalaryStructureService.getSalaryStructure(l.employeeId),this.payrollLoanService.getEmployeeloanhistory(l.employeeId,l.loanId)]).then(function(e){p.pastLoans=null!=e[1].pastLoans?e[1].pastLoans.map(function(e){return new t.model.EmployeeLoan(e)}):[],p.outstandingLoans=null!=e[1].outstandingLoans?e[1].outstandingLoans.map(function(e){return new t.model.EmployeeLoan(e)}):[],e[1].currentLoan.ctc=null!=e[0]?e[0].ctc:null,p.currentLoan=new t.model.EmployeeLoanDetails(e[1].currentLoan)},function(e){p.notificationService.error(e.data.message)})}return Object.defineProperty(e.prototype,"totalOutstandingLoans",{get:function(){return null==this.currentLoan||this.currentLoan.repaymentStatus==t.model.RepaymentStatus.Repaid?this.outstandingLoans.length:this.outstandingLoans.length+1},enumerable:!0,configurable:!0}),e.prototype.openLoanOverride=function(){var e=this;this.modalService.open({templateUrl:"employee-loan-override",controller:u,controllerAs:"ctrl",resolve:{loan:function(){return e.currentLoan}}}).result.then(function(i){i.ctc=e.currentLoan.ctc,e.currentLoan=new t.model.EmployeeLoanDetails(i)})},e.prototype.openChangeRepaymentTerm=function(){var e=this;this.modalService.open({templateUrl:"changeTerm",controller:d,controllerAs:"ctrl",resolve:{loan:function(){return e.currentLoan}}}).result.then(function(i){i.ctc=e.currentLoan.ctc,e.currentLoan=new t.model.EmployeeLoanDetails(i)})},e.prototype.removeLoanOverride=function(){var e=this;this.dialogs.confirm("Please confirm","This will delete previous loan actions (Skip or Prepay balance) for "+this.currentLoan.currentInstallment.monthAndYear+". Are you sure want to continue? ").result.then(function(){e.payrollLoanService.deleteOverride(e.currentLoan.employeeId,e.currentLoan.id,e.currentLoan.currentMonthOverride.id).then(function(i){i.ctc=e.currentLoan.ctc,e.currentLoan=new t.model.EmployeeLoanDetails(i),e.notificationService.success("Loan overrides deleted successfully.")},function(t){e.notificationService.error(t.data.message)})},function(){})},e.prototype.closeModal=function(){this.$uibModalInstance.close(this.currentLoan)},e.$inject=["$q","PayrollLoanService","PayrollSalaryStructureService","NotificationService","$uibModalInstance","$uibModal","$scope","$stateParams","dialogs"],e}();e.PayrollLoanDetailsController=c;var p=function(){function e(e,t,i,n){this.loan=e,this.payrollLoanService=t,this.notificationService=i,this.$uibModalInstance=n,this.model={},this.currentMonth=this.loan.currentInstallment.monthAndYear}return e.prototype.closeModal=function(){this.$uibModalInstance.dismiss()},e}();e.PayrollLoanActionController=p;var u=function(e){function i(i,n,o,r){var a=e.call(this,i,n,o,r)||this;return a.LoanOverrideType=t.model.LoanOverrideType,a.RepaymentMode=t.model.RepaymentMode.getAll(),a.payrollLoanService.calculateInterest(a.loan.employeeId,a.loan).then(function(e){a.currentMonthInterest=e.interestAmount},function(){}),a.loan.hasCurrentMonthOverride?a.model=a.loan.currentMonthOverride.overrideType==t.model.LoanOverrideType.EMIAdjustment?new t.model.AdjustEMI(a.loan.currentMonthOverride):new t.model.Prepay(a.loan.currentMonthOverride):a.model=new t.model.AdjustEMI({loanId:a.loan.id,employeeId:a.loan.employeeId,skipEMI:!0,overrideType:t.model.LoanOverrideType.EMIAdjustment,overrideOption:a.loan.remainingTerm>1?t.model.EMIOverrideOptions.AdjustEMIAmount:t.model.EMIOverrideOptions.AdjustLoanTerm}),a}return __extends(i,e),Object.defineProperty(i.prototype,"maxprepayAmount",{get:function(){var e=this.currentMonthInterest+this.loan.outstandingAmount;return this.loan.repaymentStatus==t.model.RepaymentStatus.NotStarted&&(e+=this.loan.preEMIInterest),Math.round(e)},enumerable:!0,configurable:!0}),i.prototype.changeOverride=function(){this.model.overrideType==t.model.LoanOverrideType.EMIAdjustment?this.model=new t.model.AdjustEMI({loanId:this.loan.id,employeeId:this.loan.employeeId,skipEMI:!0}):this.model.overrideType==t.model.LoanOverrideType.Prepayment&&(this.model=new t.model.Prepay({loanId:this.loan.id,employeeId:this.loan.employeeId}))},i.prototype.saveLoanOverride=function(){var e=this;this.form.loanOverrideForm.$valid&&(this.disableSubmitButton=!0,this.payrollLoanService.saveOrUpdateOverride(this.loan.employeeId,this.loan.id,this.model).then(function(t){var i=e.model.id?"Loan overrides update successfully":"Loan overrides added successfully";e.notificationService.success(i),e.$uibModalInstance.close(t)},function(t){e.notificationService.error(t.data.message)}).finally(function(){e.disableSubmitButton=!1}))},i.$inject=["loan","PayrollLoanService","NotificationService","$uibModalInstance"],i}(p);e.PayrollLoanOverrideController=u;var d=function(e){function t(t,i,n,o,r){var a=e.call(this,t,i,n,o)||this;return a.dialogs=r,a.model={newTerm:a.loan.remainingTerm},a.newEmiAmount=a.loan.emiAmount,a}return __extends(t,e),t.prototype.getEmi=function(){var e=this;this.disableSubmitButton=!0;var t={employeeId:this.loan.employeeId,loanAmount:this.loan.outstandingAmount,interestCalculationMethod:this.loan.interestCalculationMethod,rateOfInterest:this.loan.rateOfInterest,repaymentTerm:this.model.newTerm,loanReleasedOn:this.loan.loanReleasedOn.dateOnlyString(),emiDeductsFrom:this.loan.emiDeductsFrom.dateOnlyString()};this.payrollLoanService.calculateEMI(this.loan.employeeId,t).then(function(t){e.newEmiAmount=t.emiAmount,e.disableSubmitButton=!1})},t.prototype.updateRepaymentTerm=function(){var e=this;this.form.changeTermForm.$valid&&(this.disableSubmitButton=!0,this.dialogs.confirm("Please confirm","This will delete any previous loan actions (Skip or Prepay balance) for "+this.currentMonth+". Are you sure want to continue? ").result.then(function(){e.payrollLoanService.updateRepaymentTerm(e.loan.employeeId,e.loan.id,e.model.newTerm).then(function(t){e.notificationService.success("Changed Repayment term successfully to "+t.remainingTerm),e.$uibModalInstance.close(t)},function(t){e.notificationService.error(t.data.message)}).finally(function(){e.disableSubmitButton=!1})},function(){e.disableSubmitButton=!1}))},t.$inject=["loan","PayrollLoanService","NotificationService","$uibModalInstance","dialogs"],t}(p);e.ChangeRepaymentTermController=d;var m=function(){function e(e,i,n,o,r,a,s){this.appSettings=e,this.modal=i,this.payrollLoanService=n,this.uiGridExtensions=o,this.dialog=r,this.notificationService=a,this.scope=s,this.loanRequestStatus=t.model.LoanRequestStatus,this.getLoanRequest(),this.initializeGridSettings()}return e.prototype.getLoanRequest=function(){var e=this;this.payrollLoanService.getAllPendingLoanRequest().then(function(i){e.employeeLoanRequests=i.map(function(e){return new t.model.EmployeeLoanView(e)})})},e.prototype.initializeGridSettings=function(){this.loanGridOptions=angular.copy(this.appSettings.gridSettings),this.loanGridOptions.columnDefs=[{field:"employeeNumber",displayName:"employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><span><a target="_blank" data-ui-sref="employee.finances.loans.request({id: row.entity.employeeId})" title = "{{row.entity.employeeName}}">{{grid.getCellValue(row,col)}}</a></span></div>',cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,groupingShowGroupingMenu:!1},{field:"employeeName",displayName:"EMPLOYEEE NAME",cellTemplate:'<div class="ui-grid-cell-contents"><span><a target="_blank" data-ui-sref="employee.finances.loans.request({id: row.entity.employeeId})" title = "{{row.entity.employeeName}}">{{grid.getCellValue(row,col)}}</a></span></div>',cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,groupingShowGroupingMenu:!1},{field:"loanAmount",displayName:"LOAN AMOUNT",cellTemplate:'<div class="ui-grid-cell-contents"><span title = "INR {{grid.getCellValue(row,col) | number : 0}}">INR {{grid.getCellValue(row,col) | number : 0}}</span></div>',cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,groupingShowGroupingMenu:!1},{field:"loanReleasedOn",displayName:"EXPECTED ON",cellFilter:"date:'dd MMM yyyy'",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,groupingShowGroupingMenu:!1},{field:"emiDeductsFrom",displayName:"EMI START FROM",cellFilter:"date:'dd MMM yyyy'",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,groupingShowGroupingMenu:!1},{field:"repaymentTerm",displayName:"Actual Repayment Term",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0},{field:"notes",displayName:"COMMENT",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0},{field:"loanRequestStatus",displayName:"STATUS",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.appScope.ctrl.loanRequestStatus[row.entity.loanRequestStatus]}}</div>',cellTooltip:!0,headerTooltip:!0},{field:"requestedOn",displayName:"REQUESTED ON",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,cellFilter:"date:'dd MMM yyyy'"},{field:"requestedName",displayName:"REQUESTED BY",cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0,enableGrouping:!1},{name:"Actions",displayName:"ACTIONS",enableSorting:!1,cellClass:"cell-tooltip",cellTemplate:'<div class="ui-grid-cell-contents"><div class="action-buttons"> <a class="action-block text-center" data-ui-sref="payrolloverview.loans.request.approval({loanRequestId:row.entity.id, employeeId:row.entity.employeeId})"><span class="icon-xhr-check-2 icon-action" title ="Approve"></span></a><a class="action-block text-center" data-ng-click="grid.appScope.ctrl.rejectLoanRequest(row.entity.employeeId, row.entity)"><span class="icon-xhr-cancel-2 icon-action" title ="Reject"></span></a></div></div>'}],this.loanGridOptions.rowHeight=50,this.loanGridOptions.data="ctrl.employeeLoanRequests| filter: ctrl.filterText"},e.prototype.rejectLoanRequest=function(e,t){var i=this;this.dialog.confirm("Please Confirm","Are you sure you want to reject this loan request  of amount "+t.loanAmount+" ? ").result.then(function(n){i.payrollLoanService.rejectLoanRequest(e,t.id).then(function(e){i.notificationService.success(" Loan request rejected successfully"),i.employeeLoanRequests=i.employeeLoanRequests.filter(function(e){return e.id!=t.id}),i.scope.$emit("loanChanges")},function(e){i.notificationService.error(e.data.message)})})},e.$inject=["AppSettings","$uibModal","PayrollLoanService","UiGridExtensions","dialogs","NotificationService","$scope"],e}();angular.module("payroll").controller("PayrollOustandingLoansController",o).controller("AddOrUpdateLoanController",s).controller("PayrollLoanDetailsController",c).controller("PayrollLoanOverrideController",u).controller("PayrollLoanRequestController",m).controller("PayrollClearedLoansController",r).controller("PayrollLoanOverviewController",i).controller("PayrollLoanApprovalController",l)})((t=e.loan||(e.loan={})).controllers||(t.controllers={}))}(Payroll||(Payroll={})),function(e){var t,i,n;n=e.loan||(e.loan={}),t=n.Services||(n.Services={}),i=function(){function e(e,t){this.resource=e,this.q=t,this.loanService=this.resource("/api/payroll/loan/:action/:id/:overrideTypeName",{action:"@action",id:"@id",overrideTypeName:"@overrideTypeName"},{update:{method:"PUT"}})}return e.prototype.getDoesLoanEnabled=function(){return this.loanService.get({action:"enable"}).$promise},e.prototype.getLoanAggregates=function(){return this.loanService.get({action:"loans/aggregate"}).$promise},e.prototype.getAllOutstandingLoans=function(){return this.loanService.query({action:"loans/outstanding"}).$promise},e.prototype.getAllClearedLoans=function(){return this.loanService.query({action:"loans/cleared"}).$promise},e.prototype.getTotalOutstandingLoans=function(e){return this.loanService.get({action:"outstandingloans",id:e}).$promise},e.prototype.saveOrUpdateEmployeeLoan=function(e,t){return this.loanService.save({action:"employeeloan",id:e},t).$promise},e.prototype.createLoanBaedOnRequest=function(e,t,i){return this.loanService.save({action:"loanbasedOnRequest",id:e,loanRequestId:t},i).$promise},e.prototype.deleteLoan=function(e,t){return this.loanService.delete({action:e+"/employeeloan",id:t}).$promise},e.prototype.getloan=function(e){return this.loanService.get({action:"employeeloan",id:e}).$promise},e.prototype.getLoanRequest=function(e){return this.loanService.get({action:"requestLoan",id:e}).$promise},e.prototype.getEmployeeLoanView=function(e){return this.loanService.get({action:"employeeloandetails",id:e}).$promise},e.prototype.calculateEMI=function(e,t){return this.loanService.save({action:"calculateemi",id:e},t).$promise},e.prototype.calculatePreEMIInterest=function(e,t){return this.loanService.save({action:"calculatePreEMIInterest",id:e},t).$promise},e.prototype.calculateInterest=function(e,t){return this.loanService.save({action:"calculateInterest",id:e},t).$promise},e.prototype.getEmployeeloanhistory=function(e,t){return this.loanService.get({action:e+"/loanhistory",id:t}).$promise},e.prototype.updateRepaymentTerm=function(e,t,i){return this.loanService.save({action:e+"/changerepaymentterm",id:t,newTerm:i},{}).$promise},e.prototype.saveOrUpdateOverride=function(e,t,i){return this.loanService.save({action:e+"/override",id:t},i).$promise},e.prototype.deleteOverride=function(e,t,i){return this.loanService.delete({action:e+"/override",id:t,overrideId:i}).$promise},e.prototype.getAllPendingLoanRequest=function(){return this.loanService.query({action:"allPendingLoanRequest"}).$promise},e.prototype.getLoanRequestView=function(e,t){return this.loanService.get({action:e+"/requestLoan",id:t}).$promise},e.prototype.rejectLoanRequest=function(e,t){return this.loanService.update({action:e+"/rejectLoanRequest",id:t},{}).$promise},e.$inject=["$resource","$q"],e}(),t.PayrollLoanService=i,angular.module("payroll").service("PayrollLoanService",i)}(Payroll||(Payroll={})),function(e){var t=function(){function e(e,t,i,n,o,r,a,s,l,c,p,u,d){var m=this;this.scope=e,this.appSettings=t,this.state=i,this.filter=n,this.q=o,this.uibModal=r,this.payrollService=a,this.notificationService=s,this.payrolAdminOpsService=l,this.$timeout=c,this.$window=p,this.payrollModel=u,this.payrollLookUpService=d,this.niceScrollOptions=angular.copy(t.scrollSettings),this.payrollLookUpService.getAllSalaryComponents().then(function(e){m.reimbursableComponents=e.filter(function(e){return e.headType==m.payrollModel.SalaryComponentTypes.reimbursable})})}return e.$inject=["$scope","AppSettings","$state","$filter","$q","$uibModal","PayrollService","NotificationService","PayrolAdminOpsService","$timeout","$window","PayrollModel","PayrollLookUpService"],e}();e.AdminOpsController=t;var i=function(){function e(e,t,i,n,o,r,a,s,l,c){var p=this;this.scope=e,this.appSettings=t,this.payrollModel=i,this.notificationService=n,this.employeeFinanceServices=o,this.payrolAdminOpsService=r,this.uibModal=a,this.uiGridGroupingConstants=s,this.uiGridExtensions=l,this.configService=c,this.paygroups=[],this.configService.getAllPayGroups().then(function(e){p.paygroups=p.configService.paygroups,p.selectedPayGroup=p.paygroups[0],p.getGroupConfiguration()})}return e.prototype.getGroupConfiguration=function(){var e=this;this.configService.getPayGroupConfiguration(this.selectedPayGroup.id).then(function(t){e.payrollConfig=e.configService.payrollConfiguration,e.getEmployeesComponentOverrides()})},e.prototype.getEmployeesComponentOverrides=function(){var e=this;return this.payrolAdminOpsService.getAllEmployeeComponentsOverride(this.selectedPayGroup.id).then(function(t){e.employeeComponentsOverrides=t.map(function(e){return new Payroll.reports.model.EmpOverrideRow(e)}),e.initComponentGridSettings()})},e.prototype.initComponentGridSettings=function(){var e=this;this.componentGridOptions=angular.copy(this.appSettings.gridSettings),this.componentGridOptions.enableHorizontalScrollbar=!0,this.componentGridOptions.columnVirtualizationThreshold=15,this.componentGridOptions.columnDefs=[{displayName:"Employee Number",name:"employeeNumber",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.employeeNumber}}">{{row.entity.employeeNumber}}</a></div>',enablePinning:!0,pinnedLeft:!0,minWidth:150,enableGrouping:!1},{displayName:"Employee Name",name:"displayName",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.displayName}}">{{row.entity.displayName}}</a></div>',enablePinning:!0,pinnedLeft:!0,minWidth:150,enableGrouping:!1}],this.payrollConfig.availableSalaryComponents().forEach(function(t,i){t.allowEmployeeOverride&&e.componentGridOptions.columnDefs.push({displayName:t.title+" (Yearly)",name:t.componentName,headerTooltip:t.title+" (Yearly)",cellClass:"editable-cell ui-grid-cell-contents",cellTemplate:"<div data-ng-if=\"row.entity.doesComponentExist('"+t.componentName+'\')"><input class="form-control" type="number" max="'+t.amount+'" min="0" data-ng-model="row.entity.salaryComponents[\''+t.componentName+'\'].amount"/></div><div class="ui-grid-cell-options" data-ng-if="!row.entity.doesComponentExist(\''+t.componentName+'\')"><span class="text-muted">Not Applicable</span></div>',minWidth:250})}),this.componentGridOptions.columnDefs.push({displayName:"",name:"actions",minWidth:150,cellTemplate:'<div class="ui-grid-cell-contents approver-hierarchy"><button type="button" class="btn btn-add btn-info" data-ng-click="grid.appScope.ctrl.updateEmpOverrides(row.entity)">Update</button></div>',enableGrouping:!1}),this.componentGridOptions.data="ctrl.employeeComponentsOverrides | filter : ctrl.searchText",this.componentGridOptions.onRegisterApi=function(t){e.gridApi=t}},e.prototype.updateEmpOverrides=function(e){var t=this,i=!0,n={};for(var o in e.salaryComponents){var r=this.payrollConfig.supportedSalaryComponents.find(function(e){return e.componentName==o}),a=e.salaryComponents[o];if((a.amount||0)>r.amount)return void(i=!1);n[a.componentName]=a}i?this.employeeFinanceServices.saveSalaryComponentsOverride({id:e.employeeId},n).then(function(i){t.notificationService.success("Successfully Updated Salary Component Preferences for "+e.displayName)}):this.notificationService.information("Cannot update because amount is more than max limit for "+e.displayName+".")},e.prototype.openImportComponentOverrides=function(){var e=this;this.uibModal.open({windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,templateUrl:"ComponentOverride/EmployeeComponentOverrideImport",controller:"PayrollComponentsOverrideImportController",controllerAs:"importCtrl",resolve:{paygroup:function(){return e.selectedPayGroup}}}).result.then(function(t){t&&e.getEmployeesComponentOverrides()})},e.$inject=["$scope","AppSettings","PayrollModel","NotificationService","EmployeeFinanceServices","PayrolAdminOpsService","$uibModal","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],e}();e.EmployeeComponentSummaryController=i;var n=function(){function e(e,t,i,n,o){var r=this;this.scope=e,this.appSettings=t,this.notificationService=i,this.payrolAdminOpsService=n,this.paygroupService=o,this.paygroups=[],this.selectedIds=[],this.paygroupService.getAllPayGroups().then(function(e){r.paygroups=e.map(function(e){return new Payroll.Configuration.Model.Paygroup(e)}),r.selectedPayGroup=r.paygroups[0],r.getEmployeesBonusPayment()})}return e.prototype.getEmployeesBonusPayment=function(){var e=this;return this.payrolAdminOpsService.getEmployeesPendingBonusPayments(this.selectedPayGroup.id).then(function(t){e.employeeBonusPayments=t,e.initGridSettings()},function(t){e.notificationService.error("Error occured")})},e.prototype.deletedEmployeeBounus=function(){var e=this;this.selectedIds.length>0?this.payrolAdminOpsService.deletePendingBonusPayments(this.selectedPayGroup.id,this.selectedIds).then(function(t){t.isDeleted?e.notificationService.success("Deleted Successfully"):e.notificationService.error("Error occured"),e.getEmployeesBonusPayment()},function(t){e.notificationService.error(t.data.message)}):this.notificationService.error("Please select at least one item")},e.prototype.initGridSettings=function(){var e=this;this.employeeBonusGridOptions=angular.copy(this.appSettings.gridSettings),this.selectedIds=[],this.employeeBonusGridOptions.columnDefs=[{displayName:"Employee Number",name:"employeeNumber",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.employeeNumber}}">{{row.entity.employeeNumber}}</a></div>',minWidth:150},{displayName:"Employee Name",name:"displayName",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.displayName}}">{{row.entity.displayName}}</a></div>',minWidth:150},{displayName:"Bonus Type",name:"bonusTitle"},{displayName:"Status",name:"status"},{displayName:"Amount",name:"amount",cellFilter:"currency:'':2"},{displayName:"PayOut Date",name:"payBy",cellFilter:'date:"dd MMM yyyy"'},{displayName:"Note",name:"note",cellTooltip:!0}],this.employeeBonusGridOptions.data="ctrl.employeeBonusPayments | filter : ctrl.searchText",this.employeeBonusGridOptions.multiSelect=!0,this.gridApi&&this.gridApi.selection.clearSelectedRows(),this.employeeBonusGridOptions.onRegisterApi=function(t){e.gridApi=t,e.gridApi.selection.on.rowSelectionChanged(e.scope,function(t){t.isSelected?e.selectedIds.push(t.entity.id):e.selectedIds.splice(e.selectedIds.indexOf(t.entity.id),1)}),e.gridApi.selection.on.rowSelectionChangedBatch(e.scope,function(t){e.selectedIds=[],e.gridApi.selection.getSelectedRows().forEach(function(t){e.selectedIds.push(t.id)})})}},e.$inject=["$scope","AppSettings","NotificationService","PayrolAdminOpsService","paygroupService"],e}();e.EmployeeBonusDeleteController=n,angular.module("payroll").controller("AdminOpsController",t).controller("EmployeeComponentSummaryController",i).controller("EmployeeBonusDeleteController",n)}(adminOps||(adminOps={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){var t=function(){function t(e){var t=this;this.onRegisterGridApi=function(e){t.gridApi=e},this.paygroups=[],this.queueGridRefresh=function(){t.gridApi&&t.gridApi.grid.queueGridRefresh()},this.reportType=e}return Object.defineProperty(t.prototype,"monthNames",{get:function(){return SharedModel.monthNames},enumerable:!0,configurable:!0}),t.prototype.buildYearList=function(t,i){var n=[];if(i){for(var o=new e.model.PayrollYear({year:t.getFullYear()}),r=t;r.getFullYear()<i.year||r.getFullYear()==i.year&&r.getMonth()<=i.month;r=r.addMonths(1))o.year!=r.getFullYear()&&(n.push(o),o=new e.model.PayrollYear({year:r.getFullYear()})),o.months.push(new e.model.PayrollMonth({year:r.getFullYear(),javascriptMonth:r.getMonth(),monthName:this.monthNames[r.getMonth()].name,monthFullName:this.monthNames[r.getMonth()].fullName}));o.months.length>0&&n.push(o)}return n.anyMonths=function(){return this.some(function(e){return e.anyMonths})},n.anyTwoMonths=function(){return this.length>1||this.some(function(e){return e.anyTwoMonths})},n},t.prototype.roundOffNumber=function(e){return"number"==typeof+e&&+e%1>0?parseFloat(e).toFixed(2):e},t.prototype.formatAggregation=function(e){return void 0!=e.value||null!=e.value?e.type+": "+this.roundOffNumber(e.value):""},t.prototype.getColumn=function(e){var t={name:e.name,displayName:e.displayName,cellClass:e.cellClass||"ui-grid-cell",width:e.width||"*",minWidth:e.minWidth||150,cellFilter:e.cellFilter,headerTooltip:!0,cellTooltip:!0,type:e.type,enableGrouping:null==e.enableGrouping||e.enableGrouping,groupable:null==e.groupable||e.groupable,cellTemplate:e.cellTemplate,groupingShowGroupingMenu:e.groupingShowGroupingMenu||!1,enablePinning:e.enablePinning,groupingShowAggregationMenu:null==e.groupingShowAggregationMenu||e.groupingShowAggregationMenu,pinnedLeft:e.pinnedLeft,actualColName:e.actualColName,defaultValue:e.defaultValue};return e.uiGridGroupingConstants&&(t.treeAggregationType=(e.uiGridGroupingConstants.aggregation||{}).SUM),e.uiGridExtensions&&(t.customTreeAggregationFinalizerFn=function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)}),t},t.prototype.getColumnWithDefaultTemplate=function(e){var t=this.getColumn(e);return t.cellTemplate=t.cellTemplate||'<div class="ui-grid-cell-contents" data-ng-class="{error: !row.entity[col.name]}">{{ row.entity[col.name] || col.colDef.defaultValue }}</div>',t},t}();e.IReportController=t;var i=function(t){function i(i){var n=t.call(this,e.model.PayrollReportType.MonthWise)||this;return n.configService=i,n.yearSelectionList=[],n.getPaygroups=function(){n.configService.getAllPayGroups().then(function(e){n.paygroups=n.configService.paygroups,n.selectedPayGroup=n.paygroups[0],n.getGroupConfiguration(n.selectedPayGroup.id)})},n.getPaygroups(),n}return __extends(i,t),i.prototype.getGroupConfiguration=function(e){var t=this;this.configService.getGroupConfigurationAndLastFinalizedCycle(e).then(function(e){t.reportDate=null,t.payrollConfiguration=t.configService.payrollConfiguration,t.lastFinalizedCycle=t.configService.lastFinalizedCycle,t.yearSelectionList=t.buildYearList(new Date(t.payrollConfiguration.payCycle.kekaStartsFrom),t.lastFinalizedCycle),t.initializeLookups()})},i.prototype.selectDefaultValue=function(){if(this.yearSelectionList.length>0){var e=this.yearSelectionList[this.yearSelectionList.length-1];this.getReportData(e.lastMonth)}},i.prototype.selectReportDate=function(e){return!(!e||null!=this.reportDate&&e.year==this.reportDate.year&&e.month==this.reportDate.month)&&(this.reportDate=e,!0)},i.prototype.initializeLookups=function(){},i}(t);e.IMonthlyReportController=i;var n=function(t){function i(i,n){var o=t.call(this,e.model.PayrollReportType.MonthRange)||this;return o.configService=i,o.selectPayGroupId=n,o.yearList=[],o.fromMonthList=[],o.toMonthList=[],o.getPaygroups=function(e){o.configService.getAllPayGroups().then(function(t){o.paygroups=o.configService.paygroups,e&&(o.selectedPayGroup=o.paygroups.find(function(t){return t.id==e})),o.selectedPayGroup=o.selectedPayGroup||o.paygroups[0],o.getGroupConfiguration(o.selectedPayGroup.id)})},o.getPaygroups(n),o}return __extends(i,t),i.prototype.getGroupConfiguration=function(e){var t=this;this.configService.getGroupConfigurationAndLastFinalizedCycle(e).then(function(e){t.payrollConfiguration=t.configService.payrollConfiguration,t.lastFinalizedCycle=t.configService.lastFinalizedCycle,t.yearList=t.buildYearListBased(),t.selectDefaultValue()})},i.prototype.buildYearListBased=function(){return this.buildYearList(new Date(this.payrollConfiguration.payCycle.kekaStartsFrom),this.lastFinalizedCycle)},i.prototype.selectDefaultValue=function(){this.setDefaultValue((this.yearList[this.yearList.length-1]||{}).lastMonth)},i.prototype.setDefaultValue=function(e,t){this.yearList.length>0&&(this.fromMonth=e,this.toMonth=t||this.fromMonth,this.reBuildFromAndToList(),this.getReportData())},i.prototype.selectFromMonth=function(e){e&&(this.fromMonth=e,this.reBuildFromAndToList())},i.prototype.selectToMonth=function(e){e&&(this.toMonth=e,this.reBuildFromAndToList())},i.prototype.reBuildFromAndToList=function(){var t=this;this.fromMonth&&this.toMonth&&(this.toMonthList=[],this.fromMonthList=[],this.yearList.forEach(function(i){i.year>t.fromMonth.year?t.toMonthList.push(i):i.year==t.fromMonth.year&&t.toMonthList.push(new e.model.PayrollYear({year:i.year,months:i.months.filter(function(e){return e.month>=t.fromMonth.month})})),i.year<t.toMonth.year?t.fromMonthList.push(i):i.year==t.toMonth.year&&t.fromMonthList.push(new e.model.PayrollYear({year:i.year,months:i.months.filter(function(e){return e.month<=t.toMonth.month})}))}))},i.prototype.getMonth=function(e,t){if(this.yearList.length>0){var i=this.yearList.find(function(e){return e.year==t});if(i&&i.anyMonths)return i.months.find(function(t){return t.javascriptMonth==e})}return null},i}(t);e.IMonthRangeReportController=n;var o=function(t){function i(i){var n=t.call(this,e.model.PayrollReportType.Compare)||this;return n.configService=i,n.yearList=[],n.yearSelection1=[],n.yearSelection2=[],n.getPaygroups=function(){n.configService.getAllPayGroups().then(function(e){n.paygroups=n.configService.paygroups,n.selectedPayGroup=n.paygroups[0],n.getGroupConfiguration(n.selectedPayGroup.id)})},n.getPaygroups(),n}return __extends(i,t),i.prototype.getGroupConfiguration=function(e){var t=this;this.configService.getGroupConfigurationAndLastFinalizedCycle(e).then(function(e){t.payrollConfiguration=t.configService.payrollConfiguration,t.lastFinalizedCycle=t.configService.lastFinalizedCycle,t.yearList=t.buildYearListBased(),t.selectDefaultValue()})},i.prototype.buildYearListBased=function(){return this.buildYearList(new Date(this.payrollConfiguration.payCycle.kekaStartsFrom),this.lastFinalizedCycle)},i.prototype.selectDefaultValue=function(){if(this.yearList.anyTwoMonths()){var e=this.yearList[this.yearList.length-1];this.month2=e.lastMonth,this.month1=e.anyTwoMonths?e.lastButOneMonth:this.yearList[this.yearList.length-2].lastMonth,this.reBuildFromAndToList(),this.getReportData()}},i.prototype.selectMonth1=function(e){e&&(this.month1=e,this.reBuildFromAndToList())},i.prototype.selectMonth2=function(e){e&&(this.month2=e,this.reBuildFromAndToList())},i.prototype.reBuildFromAndToList=function(){var t=this;this.month1&&this.month2&&(this.yearSelection1=[],this.yearSelection2=[],this.yearList.forEach(function(i){if(i.year>t.month1.year)t.yearSelection2.push(i);else if(i.year==t.month1.year){(n=i.months.filter(function(e){return e.month>t.month1.month})).length>0&&t.yearSelection2.push(new e.model.PayrollYear({year:i.year,months:n}))}if(i.year<t.month2.year)t.yearSelection1.push(i);else if(i.year==t.month2.year){var n;(n=i.months.filter(function(e){return e.month<t.month2.month})).length>0&&t.yearSelection1.push(new e.model.PayrollYear({year:i.year,months:n}))}}))},i}(t);e.ICompareReportController=o;var r=function(t){function i(i,n){var o=t.call(this,e.model.PayrollReportType.FYWise)||this;return o.configService=i,o.payrollModel=n,o.financialYearList=[],o.getPaygroups=function(){o.configService.getAllPayGroups().then(function(e){o.paygroups=o.configService.paygroups,o.selectedPayGroup=o.paygroups[0],o.getGroupConfiguration(o.selectedPayGroup.id)})},o.getPaygroups(),o}return __extends(i,t),i.prototype.getGroupConfiguration=function(e){var t=this;this.selectedFinancialYear=null,this.configService.getGroupConfigurationAndFinancialYear(e).then(function(e){t.payrollConfiguration=t.configService.payrollConfiguration,t.currentFinancialYear=t.configService.currentFinancialYear,t.setupFinancialYearList(),t.selectDefaultValue()})},i.prototype.setupFinancialYearList=function(){this.financialYearList=[];for(var e=this.payrollModel.FinancialYear.getFinancialYear(new Date(this.payrollConfiguration.payCycle.kekaStartsFrom));!this.currentFinancialYear.includes(e.from);e=e.next())this.financialYearList.push(e);this.financialYearList.push(e)},i.prototype.selectDefaultValue=function(){this.financialYearList.length>0&&this.getReportData(this.financialYearList[this.financialYearList.length-1])},i.prototype.selectFinancialYear=function(e){return!(!e||null!=this.selectedFinancialYear&&e.from.getFullYear()==this.selectedFinancialYear.from.getFullYear()&&e.to.getFullYear()==this.selectedFinancialYear.to.getFullYear())&&(this.selectedFinancialYear=e,!0)},i}(t);e.IFYReportController=r}(e.reports||(e.reports={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){var t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S,C,w;e.adminOps||(e.adminOps={}),t=function(){function t(e,t,i,n,o,r,a,s,l,c,p){var u=this;this.scope=e,this.modalService=t,this.modalServiceInstance=i,this.appSettings=n,this.adminOpsService=o,this.financeModel=r,this.uiGridConstants=a,this.payrollModel=s,this.configService=l,this.notificationService=c,this.downloadService=p,this.allDeductions=[],this.paygroups=[],this.selectedIds=[],this.configService.getAllPayGroups().then(function(e){u.paygroups=u.configService.paygroups,u.selectedPaygroup=u.paygroups[0],u.getGroupConfiguratuion()})}return t.prototype.getGroupConfiguratuion=function(){var e=this;this.configService.getGroupConfigurationAndFinancialYear(this.selectedPaygroup.id).then(function(t){e.payrollConfiguration=e.configService.payrollConfiguration,e.currentFinancialYear=e.configService.currentFinancialYear,e.financialYearList=e.configService.getFinancialYearList(),e.getEmployeeDeclarations(e.currentFinancialYear)})},t.prototype.downloadITDeclarationDocuments=function(){if(this.selectedIds.length>0){var e="/api/payroll/adminops/"+this.selectedPaygroup.id+"/financialyear/"+this.selectedFinancialYear.from.getFullYear()+"/itdeclaration/documents/download";this.downloadService.downloadFileWithPost(e,this.selectedIds).then(function(e){})}else this.notificationService.error("Please select at least one item")},t.prototype.getEmployeeDeclarations=function(t){var i=this;this.selectedFinancialYear=t,this.initApprovalSummaryGrid(),this.adminOpsService.getPendingEmployeeDeclarations(this.selectedPaygroup.id,this.selectedFinancialYear.from.getFullYear()).then(function(t){i.employeeDeclarations=t.declarations.map(function(t){return new e.Model.EmployeeDeclaration(t)}),i.allDeductions=t.allDeductions})},t.prototype.openDeclarationApproval=function(e){var t=this;this.modalService.open({templateUrl:"IncomeTax/DeclarationDocApprove",controller:i,windowClass:"full-screen-modal dark-modal no-scroll-x declaration-doc-approvals",backdrop:!1,controllerAs:"ctrl",resolve:{currentDeclaration:function(){return e},employeeDeclarations:function(){return t.employeeDeclarations},allDeductions:function(){return t.allDeductions},payrollConfiguration:function(){return t.payrollConfiguration},selectedFinancialYear:function(){return t.selectedFinancialYear}}})},t.prototype.initApprovalSummaryGrid=function(){var e=this;this.approvalGridOptions=angular.copy(this.appSettings.gridSettings),this.approvalGridOptions.showColumnFooter=!0,this.approvalGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" data-ng-href="/old/#/employee/{{row.entity.employeeId}}/finances/managetax">{{row.entity.employeeNumber}}</a></a></div>"'},{field:"displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" data-ng-href="/old/#/employee/{{row.entity.employeeId}}/finances/managetax">{{row.entity.displayName}}</a></a></div>"'},{field:"requestedClaim",displyName:"Requested Claim",cellFilter:"currency: 'Rs. '",footerCellFilter:"number:2",aggregationType:this.uiGridConstants.aggregationTypes.sum},{field:"approvedClaim",displayName:"Approved Claim",cellFilter:"currency: 'Rs. '",footerCellFilter:"number:2",aggregationType:this.uiGridConstants.aggregationTypes.sum},{field:"rejectedClaim",displayName:"Rejected Claim",cellFilter:"currency: 'Rs. '",footerCellFilter:"number:2",aggregationType:this.uiGridConstants.aggregationTypes.sum},{field:"pendingClaim",displayName:"Pending Claim",cellFilter:"currency: 'Rs. '",footerCellFilter:"number:2",aggregationType:this.uiGridConstants.aggregationTypes.sum},{name:"documents",displayName:"Document Count",cellTemplate:"<div class='ui-grid-cell-contents'>{{row.entity.getReviewDocsCount()}}</div>"},{field:"updatedOn",displayName:"Updated On",cellFilter:"date: 'dd, MMM yyyy'"},{name:"actions",displayName:"Actions",enableSorting:!1,cellTemplate:'<div class=\'ui-grid-cell-contents\'><a class="action-link" data-ng-click="grid.appScope.ctrl.openDeclarationApproval(row.entity)">Manage</a></div>'}],this.approvalGridOptions.isRowSelectable=function(e){return e.entity.getReviewDocsCount()>0},this.gridApi&&this.gridApi.selection.clearSelectedRows(),this.approvalGridOptions.onRegisterApi=function(t){e.gridApi=t,e.gridApi.selection.on.rowSelectionChanged(e.scope,function(t){t.isSelected?e.selectedIds.push(t.entity.employeeId):e.selectedIds.splice(e.selectedIds.indexOf(t.entity.employyeId),1)}),e.gridApi.selection.on.rowSelectionChangedBatch(e.scope,function(t){e.selectedIds=[],e.gridApi.selection.getSelectedRows().forEach(function(t){e.selectedIds.push(t.employeeId)})})},this.approvalGridOptions.rowHeight=50,this.approvalGridOptions.data="ctrl.employeeDeclarations | filter: ctrl.filterText"},t.$inject=["$scope","$uibModal","$uibModalInstance","AppSettings","PayrolAdminOpsService","FinanceModel","uiGridConstants","PayrollModel","PayGroupsAndConfigurationService","NotificationService","FormDownloadService"],t}(),i=function(){function t(t,i,n,o,r,a,s,l,c,p,u){var d=this;this.scope=t,this.filter=i,this.notificationService=n,this.employeeDeclarationApprovalServices=o,this.employeeDeclarations=a,this.allDeductions=s,this.TaxSectionGroup=l,this.payrollConfiguration=c,this.modalService=p,this.selectedFinancialYear=u,this.pendingDeductions=[],this.approvedDeductions=[],this.deductionStatus=e.Model.DeductionStatus,this.deductionGroups=[],this.fromYear=this.selectedFinancialYear.from.getFullYear(),this.currentEmployeeIndex=this.employeeDeclarations.indexOf(r),this.allDeductionsLookup={},this.allDeductions.forEach(function(e){e.deductions.forEach(function(t){d.allDeductionsLookup[t.name]=t,d.allDeductionsLookup[t.name].maxLimit=t.maxLimit||e.maxLimit})}),this.payrollConfiguration.getAllAllowances().filter(function(e){return e.hasTaxBenefits&&e.onActuals&&null!=e.sectionName}).forEach(function(e){d.allDeductionsLookup[e.componentName]={},d.allDeductionsLookup[e.componentName].section=e.sectionName,d.allDeductionsLookup[e.componentName].title=e.title,d.allDeductionsLookup[e.componentName].maxLimit=e.amountExpression}),this.initializeDeclaration()}return t.prototype.postInitializeDeductionModel=function(){this.model.setAdjustedAmount(),this.scope.$broadcast("resetPdfCanvas")},t.prototype.initializeDeclaration=function(){var t=this.employeeDeclarations[this.currentEmployeeIndex];this.currentDeclaration=new e.Model.ReviewDeclaration({displayName:t.displayName,employeeId:t.employeeId,employeeNumber:t.employeeNumber}),this.buildPendingAndApproveGroups(t),this.pendingDeductions.length>0?this.selectDeduction(this.pendingDeductions[0].name):this.selectDeduction(this.approvedDeductions[0].name)},t.prototype.buildPendingAndApproveGroups=function(t){var i=this,n={};this.currentDeclaration.taxDeductions=[],this.deductionGroups=[],t.deductionClaims.forEach(function(e){n[e.againstDeduction]=e});var o=[],r=[];t.deductions.forEach(function(t){if(t.name in i.allDeductionsLookup){var a=new e.Model.TaxDeductionHead({name:t.name,amount:t.amount,status:t.status,attachedDocuments:t.attachedDocuments,section:i.allDeductionsLookup[t.name].section,claim:n[t.name],title:i.allDeductionsLookup[t.name].title,maxLimit:i.allDeductionsLookup[t.name].maxLimit,comment:t.comment,approverId:t.approverId,approverName:t.approverName,approvedOn:t.approvedOn});t.status==e.Model.DeductionStatus.Submitted?o.push(a):t.status!=e.Model.DeductionStatus.Accepted&&t.status!=e.Model.DeductionStatus.Rejected||r.push(a)}}),this.buildTaxSectionsForHouseProperties(t.deductionsUnderHouseProperty,n).forEach(function(t){t.status==e.Model.DeductionStatus.Submitted?o.push(t):t.status!=e.Model.DeductionStatus.Accepted&&t.status!=e.Model.DeductionStatus.Rejected||r.push(t)});var a=this.buildIncomeFromOtherSources(t.deductionsFromOtherSources,n);a.status==e.Model.DeductionStatus.Submitted?o.push(a):a.status!=e.Model.DeductionStatus.Accepted&&a.status!=e.Model.DeductionStatus.Rejected||r.push(a),this.pendingDeductions=o,this.approvedDeductions=r,this.currentDeclaration.taxDeductions=this.currentDeclaration.taxDeductions.concat(this.pendingDeductions),this.currentDeclaration.taxDeductions=this.currentDeclaration.taxDeductions.concat(this.approvedDeductions),this.deductionGroups.push(new e.Model.DeductionGroupViewModel({deductions:o,isOpen:!0,title:"Declarations Pending Action"})),this.deductionGroups.push(new e.Model.DeductionGroupViewModel({deductions:r,isOpen:!0,title:"Completed Action"}))},t.prototype.groupApprovedDeclaration=function(){this.currentDeclaration.taxDeductions=[],this.currentDeclaration.taxDeductions=this.currentDeclaration.taxDeductions.concat(this.pendingDeductions),this.currentDeclaration.taxDeductions=this.currentDeclaration.taxDeductions.concat(this.approvedDeductions),this.pendingDeductions=this.currentDeclaration.taxDeductions.filter(function(t){return t.status==e.Model.DeductionStatus.Submitted}),this.approvedDeductions=this.currentDeclaration.taxDeductions.filter(function(t){return t.status==e.Model.DeductionStatus.Accepted||t.status==e.Model.DeductionStatus.Rejected}),this.deductionGroups[0].deductions=this.pendingDeductions,this.deductionGroups[1].deductions=this.approvedDeductions},t.prototype.buildTaxSectionsForHouseProperties=function(t,i){var n=[],o=(i.homeloaninterest||{}).homeloanInterests||{},r=(i.incomefromhouseproperty||{}).letOutHouseProperties||{};if(t.currentResidence.valid())if(t.currentResidence.isRentedProperty){var a=(i.houseRent||{}).rentDetails||{};t.currentResidence.houseRentDeduction.rentDetails.forEach(function(t){n.push(new e.Model.HouseRentTaxDeductionHead({name:t.houseIdentifier,amount:t.rentPaid,status:t.status,section:"House Rent",rentalAttachments:t.attachedDocuments||[],claim:a[t.houseIdentifier],title:t.address,landlordInfo:t.landlordInfo,city:t.city,from:t.from,to:t.to,originalRentDetails:t,comment:t.comment,approverId:t.approverId,approverName:t.approverName,approvedOn:t.approvedOn}))})}else{var s=t.currentResidence.selfOccupiedHouseProperty;n.push(new e.Model.HomeLoanInterestTaxDeductionHead({name:"SELFOCCUPIEDLOAN",amount:s.interestAmount,status:s.status,attachedDocuments:s.attachedDocuments,section:"Self Occupied",claim:o.SELFOCCUPIEDLOAN,title:s.address,originalHomeLoanDetails:s,houseLoanType:s.houseLoanType,comment:s.comment,approverId:s.approverId,approverName:s.approverName,approvedOn:s.approvedOn}))}return t.letOutHouseProperties.length>0&&t.letOutHouseProperties.forEach(function(t){var i=r[t.houseIdentifier];null!=i&&(i.interestOnLoanAmount=(o[t.houseIdentifier]||{}).interestAmount),n.push(new e.Model.IncomeFromHousePropertyTaxDeductionHead({name:t.houseIdentifier,status:t.status,section:"Let out Property",attachedDocuments:t.attachedDocuments,claim:i,title:t.address,annualRentReceived:t.annualRentReceived,municipalTaxesPaid:t.municipalTaxesPaid,unrealizedRent:t.unrealizedRent,interestOnLoanAmount:t.interestOnLoanAmount,originalLetOutProperty:t,comment:t.comment,approverId:t.approverId,approverName:t.approverName,approvedOn:t.approvedOn}))}),n},t.prototype.buildIncomeFromOtherSources=function(t,i){var n=i.incomefromothersources;return new e.Model.IncomeFromOtherSourcesTaxDedudctionHead({name:"incomefromothersources",status:t.status,section:"Income From OtherSources",title:"",attachedDocuments:t.attachedDocuments,claim:n,interestIncome:t.interestIncome,commissionIncome:t.commissionIncome,agriculturalIncome:t.agriculturalIncome,otherProfessionalIncome:t.otherProfessionalIncome,gamblingIncome:t.gamblingIncome,originalIncomeFromOtherSources:t,comment:t.comment,approverId:t.approverId,approverName:t.approverName,approvedOn:t.approvedOn})},t.prototype.updateDeclaration=function(t){this.selectNextDeduction(this.model.name),t.displayName=this.currentDeclaration.displayName,t.employeeNumber=this.currentDeclaration.employeeNumber,this.employeeDeclarations[this.currentEmployeeIndex]=new e.Model.EmployeeDeclaration(t),this.buildPendingAndApproveGroups(this.employeeDeclarations[this.currentEmployeeIndex])},t.prototype.approveTaxDeduction=function(e){var t=this;return this.employeeDeclarationApprovalServices.approveTaxDeduction(this.fromYear,this.currentDeclaration.employeeId,e).then(function(i){t.notificationService.success(e.title+" Approved Successfully"),t.updateDeclaration(i.declaration),t.groupApprovedDeclaration()},function(e){t.notificationService.error(e.data.message)})},t.prototype.rejectTaxDeduction=function(e){var t=this;return this.employeeDeclarationApprovalServices.rejectTaxDeduction(this.fromYear,this.currentDeclaration.employeeId,e).then(function(i){t.notificationService.success(e.title+" rejected Successfully"),t.updateDeclaration(i.declaration),t.groupApprovedDeclaration()},function(e){t.notificationService.error(e.data.message)})},t.prototype.approveHouseRent=function(e,t){var i=this;return this.employeeDeclarationApprovalServices.approveHouseRent(this.fromYear,this.currentDeclaration.employeeId,e,t).then(function(e){i.notificationService.success(t.title+" Approved Successfully"),i.updateDeclaration(e.declaration),i.groupApprovedDeclaration()},function(e){i.notificationService.error(e.data.message)})},t.prototype.rejectHouseRent=function(e,t){var i=this;return this.employeeDeclarationApprovalServices.rejectHouseRent(this.fromYear,this.currentDeclaration.employeeId,e,t).then(function(e){i.notificationService.success(t.title+" Rejected Successfully"),i.updateDeclaration(e.declaration),i.groupApprovedDeclaration()},function(e){i.notificationService.error(e.data.message)})},t.prototype.approveLetOutProperty=function(e,t){var i=this;return this.employeeDeclarationApprovalServices.approveLetOutProperty(this.fromYear,this.currentDeclaration.employeeId,e,t).then(function(e){i.notificationService.success(t.title+" Approved Successfully"),i.updateDeclaration(e.declaration),i.groupApprovedDeclaration()},function(e){i.notificationService.error(e.data.message)})},t.prototype.rejectLetOutProperty=function(e,t){var i=this;return this.employeeDeclarationApprovalServices.rejectLetOutProperty(this.fromYear,this.currentDeclaration.employeeId,e,t).then(function(e){i.notificationService.success(t.title+" Rejected Successfully"),i.updateDeclaration(e.declaration),i.groupApprovedDeclaration()},function(e){i.notificationService.error(e.data.message)})},t.prototype.approveSelfOccupied=function(e){var t=this;return this.employeeDeclarationApprovalServices.approveSelfOccupied(this.fromYear,this.currentDeclaration.employeeId,e).then(function(i){t.notificationService.success(e.title+" Approved Successfully"),t.updateDeclaration(i.declaration),t.groupApprovedDeclaration()},function(e){t.notificationService.error(e.data.message)})},t.prototype.rejectSelfOccupied=function(e){var t=this;return this.employeeDeclarationApprovalServices.rejectSelfOccupied(this.fromYear,this.currentDeclaration.employeeId,e).then(function(i){t.notificationService.success(e.title+" Rejected Successfully"),t.updateDeclaration(i.declaration),t.groupApprovedDeclaration()},function(e){t.notificationService.error(e.data.message)})},t.prototype.approveOtherSources=function(e){var t=this;return this.employeeDeclarationApprovalServices.approveOtherSources(this.fromYear,this.currentDeclaration.employeeId,e).then(function(e){t.notificationService.success("Income From OtherSources Approved Successfully"),t.updateDeclaration(e.declaration),t.groupApprovedDeclaration()},function(e){t.notificationService.error(e.data.message)})},t.prototype.rejectOtherSources=function(e){var t=this;return this.employeeDeclarationApprovalServices.rejectOtherSources(this.fromYear,this.currentDeclaration.employeeId,e).then(function(e){t.notificationService.success("Income From OtherSources Rejected Successfully"),t.updateDeclaration(e.declaration),t.groupApprovedDeclaration()},function(e){t.notificationService.error(e.data.message)})},t.prototype.getPreviousEmployeeDeclaration=function(){this.currentEmployeeIndex>0&&(this.currentEmployeeIndex--,this.initializeDeclaration())},t.prototype.getNextEmployeeDeclaration=function(){this.currentEmployeeIndex<this.employeeDeclarations.length-1&&(this.currentEmployeeIndex++,this.initializeDeclaration())},t.prototype.selectDeduction=function(e){var t=this.pendingDeductions.find(function(t){return t.name==e});t||(t=this.approvedDeductions.find(function(t){return t.name==e})),null!=this.model&&this.model.name==t.name||(this.model=t,this.postInitializeDeductionModel())},t.prototype.selectNextDeduction=function(e){this.currentDeclaration.taxDeductions.find(function(t){return t.name==e});var t=this.pendingDeductions.findIndex(function(t){return t.name==e});-1!=t?t<this.pendingDeductions.length-1?this.model=this.pendingDeductions[t+1]:0==this.approvedDeductions.length?this.model=this.pendingDeductions[0]:this.model=this.approvedDeductions[0]:(t=this.approvedDeductions.findIndex(function(t){return t.name==e}))<this.approvedDeductions.length-1?this.model=this.approvedDeductions[t+1]:0==this.pendingDeductions.length?this.model=this.approvedDeductions[0]:this.model=this.pendingDeductions[0],this.postInitializeDeductionModel()},t.prototype.selectPreviousDeduction=function(t){var i;this.currentDeclaration.taxDeductions.find(function(e){return e.name==t}).status==e.Model.DeductionStatus.Submitted?(i=this.pendingDeductions.findIndex(function(e){return e.name==t}))>0?this.model=this.pendingDeductions[i-1]:0==this.approvedDeductions.length?this.model=this.pendingDeductions[this.pendingDeductions.length-1]:this.model=this.approvedDeductions[this.approvedDeductions.length-1]:(i=this.approvedDeductions.findIndex(function(e){return e.name==t}))>0?this.model=this.approvedDeductions[i-1]:0==this.pendingDeductions.length?this.model=this.approvedDeductions[this.approvedDeductions.length-1]:this.model=this.pendingDeductions[this.pendingDeductions.length-1];this.postInitializeDeductionModel()},t.prototype.approveDeduction=function(){switch(this.model.status=e.Model.DeductionStatus.Accepted,this.model.declarationheadType){case"letOutProperty":this.approveLetOutProperty(this.model.name,this.model);break;case"houseRental":this.approveHouseRent(this.model.name,this.model);break;case"homeloanInterest":this.approveSelfOccupied(this.model);break;case"incomefromothersources":this.approveOtherSources(this.model);break;default:if(this.model.adjustedAmount&&this.model.adjustedAmount>0){this.approveTaxDeduction(this.model);break}this.notificationService.information("Adjusted amount should be more than zero.")}},t.prototype.rejectDeduction=function(){switch(this.model.status=e.Model.DeductionStatus.Rejected,this.model.declarationheadType){case"letOutProperty":this.rejectLetOutProperty(this.model.name,this.model);break;case"houseRental":this.rejectHouseRent(this.model.name,this.model);break;case"homeloanInterest":this.rejectSelfOccupied(this.model);break;case"incomefromothersources":this.rejectOtherSources(this.model);break;default:this.rejectTaxDeduction(this.model)}},t.$inject=["$scope","$filter","NotificationService","EmployeeDeclarationApprovalServices","currentDeclaration","employeeDeclarations","allDeductions","TaxSectionGroup","payrollConfiguration","$uibModal","selectedFinancialYear"],t}(),n=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y,h){var f=this;this.scope=t,this.modalService=i,this.modalServiceInstance=n,this.appSettings=o,this.payrolAdminOpsService=r,this.payrollService=a,this.employeeFinanceServices=s,this.qService=l,this.notificationService=c,this.dialogs=p,this.state=u,this.uiGridGroupingConstants=d,this.uiGridExtensions=m,this.PayrollModel=y,this.configService=h,this.paygroups=[],this.selectedIds=[],this.init=function(){f.configService.getAllPayGroups().then(function(e){f.paygroups=f.configService.paygroups,f.selectedPaygroup=f.paygroups[0],f.getData(f.selectedPaygroup.id)})},this.getData=function(e){f.getGroupConfiguration(e)},this.getGroupConfiguration=function(e){f.configService.getCompleteGroupConfiguration(e).then(function(e){f.payrollConfiguration=f.configService.payrollConfiguration,f.currentFinancialYear=f.configService.currentFinancialYear,f.lastFinalizedCycle=f.configService.lastFinalizedCycle,f.financialYearList=f.configService.getFinancialYearList(),f.getPendingCyclesAndTDSOverrides(f.currentFinancialYear)})},this.getPendingCyclesAndTDSOverrides=function(e){f.payrollService.cycle.all.query({action:"pending",payGroupId:f.selectedPaygroup.id,financialYear:e}).$promise.then(function(t){f.pendingCycles=t.map(function(e){return new f.PayrollModel.PayrollCycle(e)}),f.getEmployeeTDSOverrides(e)})},this.mapToModel=function(t){return t.map(function(t){var i=new e.Model.IncomeTaxOverride(t),n=f.pendingCycles.find(function(e){return e.includes(i.overrideRange.from)}),o=f.pendingCycles.find(function(e){return e.includes(i.overrideRange.to)});return i.overrideRange.from=n?n.to:i.overrideRange.from,i.overrideRange.to=o?o.to:i.overrideRange.to,i.status=!f.lastFinalizedCycle||f.lastFinalizedCycle.to<i.overrideRange.from?e.Model.TDSOverrideStatus.NotStarted:f.lastFinalizedCycle.to<i.overrideRange.to?e.Model.TDSOverrideStatus.InProgress:e.Model.TDSOverrideStatus.Completed,i})},this.initEditTdsOveride=function(t){f.model=new e.Model.IncomeTaxOverride(t),f.toPendingCycles=f.model.status==e.Model.TDSOverrideStatus.InProgress?[f.lastFinalizedCycle]:[],f.toPendingCycles=f.toPendingCycles.concat(f.pendingCycles);var i=f.pendingCycles.find(function(e){return e.includes(f.model.overrideRange.from)}),n=f.toPendingCycles.find(function(e){return e.includes(f.model.overrideRange.to)});f.model.overrideRange.from=i?i.to:f.model.overrideRange.from,f.model.overrideRange.to=n?n.to:f.model.overrideRange.to,f.openEmployeeOverride()},this.resetEmployeeOverride=function(){f.model=null,f.vm.selectedEmployee=null,f.employeeOverrideModal.close()},this.filterBasedOnFrom=function(e){return f.model&&(!f.model.overrideRange.from||f.model.overrideRange.from<=e.to)},this.filterBasedOnTo=function(e){return f.model&&(!f.model.overrideRange.to||f.model.overrideRange.to>=e.to)},this.openEmployeeOverride=function(){f.employeeOverrideModal=f.modalService.open({templateUrl:"tdsOverrideEmployee",scope:f.scope,keyboard:!1,backdrop:"static"}),f.employeeOverrideModal.result.then(function(){f.gridApi.core.refresh()})},this.saveTDSOverride=function(){f.vm.form.tdsOverrideForm.$valid&&f.employeeFinanceServices.saveIncomeTaxOverride({id:f.model.employeeId},f.model).then(function(t){f.notificationService.success("Tax override has been added successfully"),f.model.id=t.id,f.model.amount=t.amount,f.model.overrideRange=new e.Model.DateRange(t.overrideRange),f.model.comment=t.comment,f.employeeTDSOverrides.push(new e.Model.IncomeTaxOverride(f.model)),f.resetEmployeeOverride()},function(e){f.notificationService.error(e.data.message)})},this.updateTDSOverride=function(){f.vm.form.tdsOverrideForm.$valid&&f.employeeFinanceServices.updateIncomeTaxOverride({id:f.model.employeeId},f.model).then(function(t){f.notificationService.success("Tax override has been updated successfully"),f.model.amount=t.amount,f.model.overrideRange=new e.Model.DateRange(t.overrideRange),f.model.comment=t.comment,f.employeeTDSOverrides.find(function(e){return e.id==f.model.id}).update(f.model),f.resetEmployeeOverride()},function(e){f.notificationService.error(e.data.message)})},this.deleteTDSOverride=function(e){f.dialogs.confirm("Please confirm","Are you sure want to delete this Income Tax Override? ").result.then(function(){f.employeeFinanceServices.deleteIncomeTaxOverride({id:e.employeeId},e.id).then(function(t){f.notificationService.success("Tax override has been deleted successfully"),f.employeeTDSOverrides=f.employeeTDSOverrides.filter(function(t){return t.id!=e.id})},function(e){f.notificationService.error(e.data.message)})})},this.openImportTDSOverrides=function(){f.modalService.open({windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,templateUrl:"ComponentOverride/TDSDeductionOverrideImport",controller:"PayrollTDSOverrideImportController",controllerAs:"importCtrl",resolve:{paygroup:function(){return f.selectedPaygroup}}}).result.then(function(e){e&&f.getEmployeeTDSOverrides(f.currentFinancialYear)})},this.init()}return t.prototype.getEmployeeTDSOverrides=function(e){var t=this;this.selectedFinancialYear=angular.copy(e),this.isInCurrentFinancialYearView=this.selectedFinancialYear.includes(e.from),this.initTDSOverrideSummaryGrid(),this.employeeTDSOverrides=[],this.payrolAdminOpsService.getAllEmployeeTDSOverride(this.selectedPaygroup.id,e.from.getFullYear()).then(function(e){t.employeeTDSOverrides=t.mapToModel(e)},function(e){})},t.prototype.initTDSOverrideSummaryGrid=function(){var e=this;this.tdsOverrideGridOptions=angular.copy(this.appSettings.gridSettings),this.tdsOverrideGridOptions.showColumnFooter=!0,this.tdsOverrideGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",enableGrouping:!1},{field:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.incometax({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',enableGrouping:!1},{field:"grossSalary",displyName:"Gross Salary",cellFilter:"currency: 'Rs. '",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"monthlyRegularTDS",displayName:"Regular TDS",cellFilter:"currency: 'Rs. '",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"amount",displayName:"TDS Override",cellFilter:"currency: 'Rs. '",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{name:"overrideRange",displayName:"Override Period",cellTemplate:"<div class='ui-grid-cell-contents'>{{row.entity.overrideRange.from | date : 'MMM yyyy'}}  -  {{row.entity.overrideRange.to | date : 'MMM yyyy'}}</div>",enableGrouping:!1},{name:"comment",displayName:"Notes",enableGrouping:!1}],this.isInCurrentFinancialYearView&&this.tdsOverrideGridOptions.columnDefs.push({name:"Action",displayName:"",cellTemplate:'<div class="ui-grid-cell-contents text-center"><span data-ng-if=\'row.entity.status == 1 || row.entity.status == 0\'><a class="action-link upper-case" data-ng-click="grid.appScope.ctrl.initEditTdsOveride(row.entity)">edit</a></span>  &nbsp<span data-ng-if=\'row.entity.status == 0\'><a class="action-link upper-case" data-ng-click="grid.appScope.ctrl.deleteTDSOverride(row.entity)">delete</a></span></div>'}),this.tdsOverrideGridOptions.isRowSelectable=function(e){return 0==e.entity.status},this.gridApi&&this.gridApi.selection.clearSelectedRows(),this.tdsOverrideGridOptions.onRegisterApi=function(t){e.gridApi=t,e.gridApi.selection.on.rowSelectionChanged(e.scope,function(t){t.isSelected?e.selectedIds.push(t.entity.id):e.selectedIds.splice(e.selectedIds.indexOf(t.entity.id),1)}),e.gridApi.selection.on.rowSelectionChangedBatch(e.scope,function(t){e.selectedIds=[],e.gridApi.selection.getSelectedRows().forEach(function(t){e.selectedIds.push(t.id)})})},this.tdsOverrideGridOptions.rowHeight=50,this.tdsOverrideGridOptions.data="ctrl.employeeTDSOverrides | filter : ctrl.searchText"},t.prototype.getMatchedEmployees=function(e){if(e&&e.length>=2){var t=this.qService.defer();return this.payrollService.searchEmployeesInFinancialYear(this.selectedPaygroup.id,this.currentFinancialYear.from.getFullYear(),e).then(function(e){0==e.length&&e.push({noResults:!0}),t.resolve(e)}),t.promise}},t.prototype.initAddTdsOverride=function(){var t=this;this.employeeFinanceServices.getGrossAndTaxDetails({id:this.vm.selectedEmployee.id},this.currentFinancialYear.from.getFullYear()).then(function(i){t.model=new e.Model.IncomeTaxOverride({employeeId:i.employeeId,employeeNumber:i.employeeNumber,employeeName:i.employeeName,grossSalary:i.grossUnderSalaryHead,monthlyRegularTDS:i.monthlyTotalTax}),t.openEmployeeOverride(),t.toPendingCycles=t.pendingCycles.concat(),t.vm.isEmpAdd=!1},function(e){t.notificationService.error(e.data.message)})},t.prototype.deleteTDSOverrides=function(){var e=this;this.selectedIds.length>0?this.dialogs.confirm("Please confirm","Are you sure want to delete these Income Tax Overrides? ").result.then(function(){e.payrolAdminOpsService.deleteTDSOverride(e.selectedPaygroup.id,e.selectedIds).then(function(t){t.isDeleted?e.notificationService.success("Deleted Successfully"):e.notificationService.error("Error occured"),e.getEmployeeTDSOverrides(e.currentFinancialYear)},function(t){e.notificationService.error(t.data.message)})}):this.notificationService.error("Please select at least one item")},t.$inject=["$scope","$uibModal","$uibModalInstance","AppSettings","PayrolAdminOpsService","PayrollService","EmployeeFinanceServices","$q","NotificationService","dialogs","$state","uiGridGroupingConstants","UiGridExtensions","PayrollModel","PayGroupsAndConfigurationService"],t}(),o=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y,h){var f=this;this.scope=t,this.modalService=i,this.modalServiceInstance=n,this.appSettings=o,this.payrolAdminOpsService=r,this.payrollService=a,this.employeeFinanceServices=s,this.qService=l,this.notificationService=c,this.dialogs=p,this.state=u,this.uiGridGroupingConstants=d,this.uiGridExtensions=m,this.PayrollModel=y,this.configService=h,this.paygroups=[],this.pendingCycles=[],this.selectedIds=[],this.init=function(){f.configService.getAllPayGroups().then(function(e){f.paygroups=f.configService.paygroups,f.selectedpaygroup=f.paygroups[0],f.getData()})},this.getData=function(){f.groupConfiguration()},this.groupConfiguration=function(){f.configService.getCompleteGroupConfiguration(f.selectedpaygroup.id).then(function(e){f.currentFinancialYear=f.configService.currentFinancialYear,f.lastFinalizedCycle=f.configService.lastFinalizedCycle,f.payrollConfiguration=f.configService.payrollConfiguration,f.financialYearList=f.configService.getFinancialYearList(),f.payrollConfiguration.isPTComponentEnable()&&f.getPendingCyclesAndPTOverrides(f.currentFinancialYear)})},this.getPendingCyclesAndPTOverrides=function(e){f.payrollService.cycle.all.query({action:"pending",payGroupId:f.selectedpaygroup.id,financialYear:e}).$promise.then(function(t){f.pendingCycles=t.map(function(e){return new f.PayrollModel.PayrollCycle(e)}),f.getEmployeePTOverrides(e)})},this.mapToModel=function(t){return t.map(function(t){var i=new e.Model.PTaxOverride(t),n=f.pendingCycles.find(function(e){return e.includes(i.overrideRange.from)}),o=f.pendingCycles.find(function(e){return e.includes(i.overrideRange.to)});return i.overrideRange.from=n?n.to:i.overrideRange.from,i.overrideRange.to=o?o.to:i.overrideRange.to,i.status=!f.lastFinalizedCycle||f.lastFinalizedCycle.to<i.overrideRange.from?e.Model.PTOverrideStatus.NotStarted:f.lastFinalizedCycle.to<i.overrideRange.to?e.Model.PTOverrideStatus.InProgress:e.Model.PTOverrideStatus.Completed,i})},this.initEditPtOveride=function(t){f.model=new e.Model.PTaxOverride(t),f.toPendingCycles=f.model.status==e.Model.PTOverrideStatus.InProgress?[f.lastFinalizedCycle]:[],f.toPendingCycles=f.toPendingCycles.concat(f.pendingCycles);var i=f.pendingCycles.find(function(e){return e.includes(f.model.overrideRange.from)}),n=f.toPendingCycles.find(function(e){return e.includes(f.model.overrideRange.to)});f.model.overrideRange.from=i?i.to:f.model.overrideRange.from,f.model.overrideRange.to=n?n.to:f.model.overrideRange.to,f.openEmployeeOverride()},this.resetEmployeeOverride=function(){f.model=null,f.vm.selectedEmployee=null,f.employeeOverrideModal.close()},this.filterBasedOnFrom=function(e){return f.model&&(!f.model.overrideRange.from||f.model.overrideRange.from<=e.to)},this.filterBasedOnTo=function(e){return f.model&&(!f.model.overrideRange.to||f.model.overrideRange.to>=e.to)},this.openEmployeeOverride=function(){f.employeeOverrideModal=f.modalService.open({templateUrl:"ComponentOverride/PTOverrideSettings",scope:f.scope,keyboard:!1,backdrop:"static"})},this.savePTOverride=function(){f.vm.form.ptOverrideForm.$valid&&f.employeeFinanceServices.savePTaxOverride({id:f.model.employeeId},f.model).then(function(t){f.notificationService.success("Tax override has been added successfully"),f.model.id=t.id,f.model.amount=t.amount,f.model.overrideRange=new e.Model.DateRange(t.overrideRange),f.model.comment=t.comment,f.employeePTOverrides.push(new e.Model.PTaxOverride(f.model)),f.resetEmployeeOverride()},function(e){f.notificationService.error(e.data.message)})},this.updatePTOverride=function(){f.vm.form.ptOverrideForm.$valid&&f.employeeFinanceServices.updatePTaxOverride({id:f.model.employeeId},f.model).then(function(t){f.notificationService.success("Tax override has been updated successfully"),f.model.amount=t.amount,f.model.overrideRange=new e.Model.DateRange(t.overrideRange),f.model.comment=t.comment,f.employeePTOverrides.find(function(e){return e.id==f.model.id}).update(f.model),f.resetEmployeeOverride()},function(e){f.notificationService.error(e.data.message)})},this.deletePTOverride=function(e){f.dialogs.confirm("Please confirm","Are you sure want to delete this PT Override? ").result.then(function(){f.employeeFinanceServices.deletePTaxOverride({id:e.employeeId},e.id).then(function(t){f.notificationService.success("Tax override has been deleted successfully"),f.employeePTOverrides=f.employeePTOverrides.filter(function(t){return t.id!=e.id})},function(e){f.notificationService.error(e.data.message)})})},this.openImportPTOverrides=function(){f.modalService.open({windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,templateUrl:"ComponentOverride/PTOverrideImport",controller:"PayrollPTOverrideImportController",controllerAs:"importCtrl",resolve:{paygroup:function(){return f.selectedpaygroup}}}).result.then(function(e){e&&f.getEmployeePTOverrides(f.currentFinancialYear)})},this.init(),this.PTSettingsUrl=this.configService.hasPayGroupFeature?"settings.payroll.paygroup.details.getStarted.salarycomponentsandstructures({ groupId: ctrl.selectedpaygroup.id })":"settings.payroll.getStarted.salarycomponentsandstructures"}return t.prototype.getEmployeePTOverrides=function(e){var t=this;this.selectedFinancialYear=angular.copy(e),this.isInCurrentFinancialYearView=this.selectedFinancialYear.includes(this.currentFinancialYear.from),this.initPTOverrideSummaryGrid(),this.employeePTOverrides=[],this.payrolAdminOpsService.getAllEmployeePTOverride(this.selectedpaygroup.id,e.from.getFullYear()).then(function(e){t.employeePTOverrides=t.mapToModel(e)},function(e){})},t.prototype.initPTOverrideSummaryGrid=function(){var e=this;this.ptOverrideGridOptions=angular.copy(this.appSettings.gridSettings),this.ptOverrideGridOptions.showColumnFooter=!0,this.ptOverrideGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",enableGrouping:!1},{field:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',enableGrouping:!1},{field:"grossSalary",displyName:"Gross Salary",cellFilter:"currency: 'Rs. '",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"monthlyRegularPT",displayName:"Regular PT",cellFilter:"currency: 'Rs. '",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"amount",displayName:"PT Override",cellFilter:"currency: 'Rs. '",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{name:"overrideRange",displayName:"Override Period",cellTemplate:"<div class='ui-grid-cell-contents'>{{row.entity.overrideRange.from | date : 'MMM yyyy'}}  -  {{row.entity.overrideRange.to | date : 'MMM yyyy'}}</div>",enableGrouping:!1},{name:"comment",displayName:"Notes",enableGrouping:!1}],this.isInCurrentFinancialYearView&&this.ptOverrideGridOptions.columnDefs.push({name:"Action",displayName:"",cellTemplate:'<div class="ui-grid-cell-contents text-center"><span data-ng-if=\'row.entity.status == 1 || row.entity.status == 0\'><a class="action-link upper-case" data-ng-click="grid.appScope.ctrl.initEditPtOveride(row.entity)">edit</a></span>  &nbsp<span data-ng-if=\'row.entity.status == 0\'><a class="action-link upper-case" data-ng-click="grid.appScope.ctrl.deletePTOverride(row.entity)">delete</a></span></div>'}),this.ptOverrideGridOptions.rowHeight=50,this.ptOverrideGridOptions.data="ctrl.employeePTOverrides | filter : ctrl.searchText",this.ptOverrideGridOptions.isRowSelectable=function(e){return 0==e.entity.status},this.gridApi&&this.gridApi.selection.clearSelectedRows(),this.ptOverrideGridOptions.onRegisterApi=function(t){e.gridApi=t,e.gridApi.selection.on.rowSelectionChanged(e.scope,function(t){t.isSelected?e.selectedIds.push(t.entity.id):e.selectedIds.splice(e.selectedIds.indexOf(t.entity.id),1)}),e.gridApi.selection.on.rowSelectionChangedBatch(e.scope,function(t){e.selectedIds=[],e.gridApi.selection.getSelectedRows().forEach(function(t){e.selectedIds.push(t.id)})})}},t.prototype.getMatchedEmployees=function(e){if(e&&e.length>=2){var t=this.qService.defer();return this.payrollService.searchEmployeesInFinancialYear(this.selectedpaygroup.id,this.currentFinancialYear.from.getFullYear(),e).then(function(e){0==e.length&&e.push({noResults:!0}),t.resolve(e)}),t.promise}},t.prototype.initAddPtOverride=function(){var t=this;this.employeeFinanceServices.getGrossAndPTaxDetails({id:this.vm.selectedEmployee.id},this.currentFinancialYear.from.getFullYear()).then(function(i){t.model=new e.Model.PTaxOverride({employeeId:i.employeeId,employeeNumber:i.employeeNumber,employeeName:i.employeeName,grossSalary:i.monthlyGrossAmount,monthlyRegularPT:i.monthlyTotalTax}),t.openEmployeeOverride(),t.toPendingCycles=t.pendingCycles.concat(),t.vm.isEmpAdd=!1},function(e){t.notificationService.error(e.data.message)})},t.prototype.deletePTOverrides=function(){var e=this;this.selectedIds.length>0?this.dialogs.confirm("Please confirm","Are you sure want to delete these PT Overrides? ").result.then(function(){e.payrolAdminOpsService.deletePTOverride(e.selectedpaygroup.id,e.selectedIds).then(function(t){t.isDeleted?e.notificationService.success("Deleted Successfully"):e.notificationService.error("Error occured"),e.getEmployeePTOverrides(e.currentFinancialYear)},function(t){e.notificationService.error(t.data.message)})}):this.notificationService.error("Please select at least one item")},t.$inject=["$scope","$uibModal","$uibModalInstance","AppSettings","PayrolAdminOpsService","PayrollService","EmployeeFinanceServices","$q","NotificationService","dialogs","$state","uiGridGroupingConstants","UiGridExtensions","PayrollModel","PayGroupsAndConfigurationService"],t}(),r=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y,h){var f=this;this.scope=t,this.modalService=i,this.modalServiceInstance=n,this.appSettings=o,this.payrolAdminOpsService=r,this.payrollService=a,this.employeeFinanceServices=s,this.qService=l,this.notificationService=c,this.dialogs=p,this.state=u,this.uiGridGroupingConstants=d,this.uiGridExtensions=m,this.PayrollModel=y,this.configService=h,this.selectedIds=[],this.init=function(){f.configService.getAllPayGroups().then(function(e){f.paygroups=f.configService.paygroups,f.selectedPaygroup=f.paygroups[0],f.getData(f.selectedPaygroup.id)})},this.getData=function(e){f.getGroupConfiguration(e)},this.getGroupConfiguration=function(e){f.configService.getCompleteGroupConfiguration(f.selectedPaygroup.id).then(function(t){f.payrollConfiguration=f.configService.payrollConfiguration,f.payrollConfiguration.isESIFilingRequired()&&(f.currentFinancialYear=f.configService.currentFinancialYear,f.lastFinalizedCycle=f.configService.lastFinalizedCycle,f.financialYearList=f.configService.getFinancialYearList(),f.getPendingCyclesAndESIOverrides(e,f.currentFinancialYear))})},this.getPendingCyclesAndESIOverrides=function(e,t){f.payrollService.cycle.all.query({action:"pending",payGroupId:e,financialYear:t}).$promise.then(function(e){f.pendingCycles=e.map(function(e){return new f.PayrollModel.PayrollCycle(e)}),f.getEmployeeESIOverrides(f.currentFinancialYear)})},this.mapToModel=function(t){return t.map(function(t){var i=new e.Model.ESIOverride(t),n=f.pendingCycles.find(function(e){return e.includes(i.overrideRange.from)}),o=f.pendingCycles.find(function(e){return e.includes(i.overrideRange.to)});return i.overrideRange.from=n?n.to:i.overrideRange.from,i.overrideRange.to=o?o.to:i.overrideRange.to,i.status=!f.lastFinalizedCycle||f.lastFinalizedCycle.to<i.overrideRange.from?e.Model.ESIOverrideStatus.NotStarted:f.lastFinalizedCycle.to<i.overrideRange.to?e.Model.ESIOverrideStatus.InProgress:e.Model.ESIOverrideStatus.Completed,i})},this.initEditEsiOveride=function(t){f.model=new e.Model.ESIOverride(t),f.toPendingCycles=f.model.status==e.Model.ESIOverrideStatus.InProgress?[f.lastFinalizedCycle]:[],f.toPendingCycles=f.toPendingCycles.concat(f.pendingCycles);var i=f.pendingCycles.find(function(e){return e.includes(f.model.overrideRange.from)}),n=f.toPendingCycles.find(function(e){return e.includes(f.model.overrideRange.to)});f.model.overrideRange.from=i?i.to:f.model.overrideRange.from,f.model.overrideRange.to=n?n.to:f.model.overrideRange.to,f.openEmployeeOverride()},this.resetEmployeeOverride=function(){f.model=null,f.vm.selectedEmployee=null,f.employeeOverrideModal.close()},this.filterBasedOnFrom=function(e){return f.model&&(!f.model.overrideRange.from||f.model.overrideRange.from<=e.to)},this.filterBasedOnTo=function(e){return f.model&&(!f.model.overrideRange.to||f.model.overrideRange.to>=e.to)},this.openEmployeeOverride=function(){f.employeeOverrideModal=f.modalService.open({templateUrl:"ComponentOverride/ESIOverrideSettings",scope:f.scope,keyboard:!1,backdrop:"static"})},this.saveESIOverride=function(){f.vm.form.esiOverrideForm.$valid&&f.employeeFinanceServices.saveESIOverride({id:f.model.employeeId},f.model).then(function(t){f.notificationService.success("esi override has been added successfully"),f.model.id=t.id,f.model.employeeContribution=t.employeeContribution,f.model.employerContribution=t.employerContribution,f.model.overrideRange=new e.Model.DateRange(t.overrideRange),f.model.comment=t.comment,f.employeeESIOverrides.push(new e.Model.ESIOverride(f.model)),f.resetEmployeeOverride()},function(e){f.notificationService.error(e.data.message)})},this.updateESIOverride=function(){f.vm.form.esiOverrideForm.$valid&&f.employeeFinanceServices.updateESIOverride({id:f.model.employeeId},f.model).then(function(t){f.notificationService.success("ESI override has been updated successfully"),f.model.employeeContribution=t.employeeContribution,f.model.employerContribution=t.employerContribution,f.model.overrideRange=new e.Model.DateRange(t.overrideRange),f.model.comment=t.comment,f.employeeESIOverrides.find(function(e){return e.id==f.model.id}).update(f.model),f.resetEmployeeOverride()},function(e){f.notificationService.error(e.data.message)})},this.deleteESIOverride=function(e){f.dialogs.confirm("Please confirm","Are you sure want to delete this ESI Override? ").result.then(function(){f.employeeFinanceServices.deleteESIOverride({id:e.employeeId},e.id).then(function(t){f.notificationService.success("ESI override has been deleted successfully"),f.employeeESIOverrides=f.employeeESIOverrides.filter(function(t){return t.id!=e.id})},function(e){f.notificationService.error(e.data.message)})})},this.openImportESIOverrides=function(){f.modalService.open({windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,templateUrl:"ComponentOverride/ESIOverrideImport",controller:"PayrollESIOverrideImportController",controllerAs:"importCtrl",resolve:{paygroup:function(){return f.selectedPaygroup}}}).result.then(function(e){e&&f.getEmployeeESIOverrides(f.currentFinancialYear)})},this.ESISettingsUrl=this.configService.hasPayGroupFeature?"settings.payroll.paygroup.details.getStarted.pfandesi({ groupId: ctrl.selectedPaygroup.id })":"settings.payroll.getStarted.pfandesi",this.init()}return t.prototype.getEmployeeESIOverrides=function(e){var t=this;this.selectedFinancialYear=angular.copy(e),this.isInCurrentFinancialYearView=this.selectedFinancialYear.includes(this.currentFinancialYear.from),this.initESIOverrideSummaryGrid(),this.employeeESIOverrides=[],this.payrolAdminOpsService.getAllEmployeeESIOverride(this.selectedPaygroup.id,e.from.getFullYear()).then(function(e){t.employeeESIOverrides=t.mapToModel(e)},function(e){})},t.prototype.initESIOverrideSummaryGrid=function(){var e=this;this.esiOverrideGridOptions=angular.copy(this.appSettings.gridSettings),this.esiOverrideGridOptions.showColumnFooter=!0,this.esiOverrideGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",enableGrouping:!1},{field:"fullName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.fullName}}">{{row.entity.fullName}}</a></div>',enableGrouping:!1},{field:"grossSalary",displyName:"Monthly Gross Salary",cellFilter:"currency: 'Rs. '",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"monthlyRegularESI",displayName:"Regular ESI",cellFilter:'currency: ""',treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"monthlyRegularESIEmployer",displayName:"Employer Regular ESI",cellFilter:'currency: ""',treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"employeeContribution",displayName:"Employee ESI Override",cellFilter:'currency: ""',treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"employerContribution",displayName:"Employer ESI Override",cellFilter:'currency: ""',treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{name:"overrideRange",displayName:"Override Period",cellTemplate:"<div class='ui-grid-cell-contents'>{{row.entity.overrideRange.from | date : 'MMM yyyy'}}  -  {{row.entity.overrideRange.to | date : 'MMM yyyy'}}</div>",enableGrouping:!1},{name:"comment",displayName:"Notes",enableGrouping:!1}],this.isInCurrentFinancialYearView&&this.esiOverrideGridOptions.columnDefs.push({name:"Action",displayName:"",cellTemplate:'<div class="ui-grid-cell-contents text-center"><span data-ng-if=\'row.entity.status == 1 || row.entity.status == 0\'><a class="action-link upper-case" data-ng-click="grid.appScope.ctrl.initEditEsiOveride(row.entity)">edit</a></span>  &nbsp<span data-ng-if=\'row.entity.status == 0\'><a class="action-link upper-case" data-ng-click="grid.appScope.ctrl.deleteESIOverride(row.entity)">delete</a></span></div>'}),this.esiOverrideGridOptions.isRowSelectable=function(e){return 0==e.entity.status},this.gridApi&&this.gridApi.selection.clearSelectedRows(),this.esiOverrideGridOptions.onRegisterApi=function(t){e.gridApi=t,e.gridApi.selection.on.rowSelectionChanged(e.scope,function(t){t.isSelected?e.selectedIds.push(t.entity.id):e.selectedIds.splice(e.selectedIds.indexOf(t.entity.id),1)}),e.gridApi.selection.on.rowSelectionChangedBatch(e.scope,function(t){e.selectedIds=[],e.gridApi.selection.getSelectedRows().forEach(function(t){e.selectedIds.push(t.id)})})},this.esiOverrideGridOptions.rowHeight=50,this.esiOverrideGridOptions.data="ctrl.employeeESIOverrides | filter : ctrl.searchText"},t.prototype.getMatchedEmployees=function(e){if(e&&e.length>=2){var t=this.qService.defer();return this.payrollService.searchEmployeesInFinancialYear(this.selectedPaygroup.id,this.currentFinancialYear.from.getFullYear(),e).then(function(e){0==e.length&&e.push({noResults:!0}),t.resolve(e)}),t.promise}},t.prototype.initAddEsiOverride=function(){var t=this;this.employeeFinanceServices.getGrossAndESIDetails({id:this.vm.selectedEmployee.id},this.currentFinancialYear.from.getFullYear()).then(function(i){t.model=new e.Model.ESIOverride({employeeId:i.employeeId,employeeNumber:i.employeeNumber,fullName:i.fullName,grossSalary:i.grossSalary,monthlyRegularESI:i.monthlyRegularESI,monthlyRegularESIEmployer:i.monthlyRegularESIEmployer}),t.openEmployeeOverride(),t.toPendingCycles=t.pendingCycles.concat(),t.vm.isEmpAdd=!1},function(e){t.notificationService.error(e.data.message)})},t.prototype.deleteESIOverrides=function(){var e=this;this.selectedIds.length>0?this.dialogs.confirm("Please confirm","Are you sure want to delete these ESI Overrides? ").result.then(function(){e.payrolAdminOpsService.deleteESIOverride(e.selectedPaygroup.id,e.selectedIds).then(function(t){t.isDeleted?e.notificationService.success("Deleted Successfully"):e.notificationService.error("Error occured"),e.getEmployeeESIOverrides(e.currentFinancialYear)},function(t){e.notificationService.error(t.data.message)})}):this.notificationService.error("Please select at least one item")},t.$inject=["$scope","$uibModal","$uibModalInstance","AppSettings","PayrolAdminOpsService","PayrollService","EmployeeFinanceServices","$q","NotificationService","dialogs","$state","uiGridGroupingConstants","UiGridExtensions","PayrollModel","PayGroupsAndConfigurationService"],t}(),a=function(){function e(e,t,i,n,o,r,a,s,l,c,p,u){var d=this;this.appSettings=e,this.modalService=t,this.modalServiceInstance=i,this.$q=n,this.payrollService=o,this.notificationService=r,this.payrollModel=a,this.employeeFinanceService=s,this.payrolAdminOpsService=l,this.uiGridGroupingConstants=c,this.uiGridExtensions=p,this.configService=u,this.isMonthView=!1,this.getPaygroups=function(){d.configService.getAllPayGroups().then(function(e){d.paygroups=d.configService.paygroups,d.selectedPaygroup=d.paygroups[0],d.getData(d.selectedPaygroup.id)})},this.getData=function(e){d.salaryDetails=[],d.configService.getPayGroupConfiguration(e).then(function(t){d.payrollConfig=d.configService.payrollConfiguration,d.payrollConfig.isPFFilingRequired()&&d.payrolAdminOpsService.getAllEmployeeSalaryDetails(e).then(function(e){d.salaryDetails=e.map(function(e){return new d.payrollModel.SalaryDetails(e)})})})},this.openImportPFOverrides=function(){d.modalService.open({windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,templateUrl:"ComponentOverride/PFOverrideImport",controller:"PayrollPFOverrideImportController",controllerAs:"importCtrl",resolve:{paygroup:function(){return d.selectedPaygroup}}}).result.then(function(e){e&&d.getData(d.selectedPaygroup.id)})},this.salaryComponents=this.payrollModel.SalaryComponents,this.initPFOverrideSummaryGrid(),this.getPaygroups(),this.PFESISettingsUrl=this.configService.hasPayGroupFeature?"settings.payroll.paygroup.details.getStarted.pfandesi({ groupId: ctrl.selectedPaygroup.id })":"settings.payroll.getStarted.pfandesi"}return e.prototype.initPFOverrideSummaryGrid=function(){var e=this;this.pfOverrideGridOptions=angular.copy(this.appSettings.gridSettings),this.pfOverrideGridOptions.showColumnFooter=!0,this.pfOverrideGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.employeeNumber}}">{{row.entity.employeeNumber}}</a></div>',enableGrouping:!1},{field:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',enableGrouping:!1},{name:"workerTypeName",displayName:"Worker Type",groupingShowAggregationMenu:!1},{name:"structure.ctc",displayName:"Gross Salary",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.appScope.ctrl.isMonthView">{{row.entity.monthlyCTC | currency: "&#8377;":0}}</span><span data-ng-if="!grid.appScope.ctrl.isMonthView">{{row.entity.structure.ctc | currency: "&#8377;":0}}</span></div>',treeAggregationLabel:"CustomTotal",treeAggregationType:"Total",customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1,customTreeAggregationFn:function(e,t,i,n){e.value=(e.value||0)+((n.grid.appScope.ctrl.isMonthView?n.entity.monthlyCTC:i)||0)}},{name:"basic",displayName:"Basic",cellTemplate:'<div class="ui-grid-cell-contents align-cell-text"><span data-ng-if="grid.appScope.ctrl.isMonthView">{{row.entity.monthlyBasic | currency: "&#8377;":0}}</span><span data-ng-if="!grid.appScope.ctrl.isMonthView">{{row.entity.basic | currency: "&#8377;":0}}</span><div class="text-muted text-small"><span data-ng-if="row.entity.basic">{{row.entity.getAnnualCTCPercentage(row.entity.basic)}}% of GROSS</span></div></div>',cellClass:"top-align",treeAggregationLabel:"CustomTotal",treeAggregationType:"Total",customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1,customTreeAggregationFn:function(e,t,i,n){e.value=(e.value||0)+((n.grid.appScope.ctrl.isMonthView?n.entity.monthlyBasic:i)||0)}},{name:"pfEmployeer",displayName:"PF Employer",cellTemplate:'<div class="ui-grid-cell-contents align-cell-text"><span data-ng-if="grid.appScope.ctrl.isMonthView">{{row.entity.monthlyPFEmployeer | currency: "&#8377;":0}}</span><span data-ng-if="!grid.appScope.ctrl.isMonthView">{{row.entity.pfEmployeer | currency: "&#8377;":0}}</span><div class="text-muted text-small"><span data-ng-if="row.entity.pfEmployeer">{{row.entity.getAnnualBasicPercentage(row.entity.pfEmployeer)}}% of BASIC</div></div>',cellClass:"top-align",treeAggregationLabel:"CustomTotal",treeAggregationType:"Total",customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1,customTreeAggregationFn:function(e,t,i,n){e.value=(e.value||0)+((n.grid.appScope.ctrl.isMonthView?n.entity.monthlyPFEmployeer:i)||0)}},{name:"pfEmployee",displayName:"PF EMPLOYEE (Including VPF)",cellTemplate:'<div class="ui-grid-cell-contents align-cell-text"><span data-ng-if="grid.appScope.ctrl.isMonthView">{{row.entity.monthlyPFEmployee | currency: "&#8377;":0}}</span><span data-ng-if="!grid.appScope.ctrl.isMonthView">{{row.entity.pfEmployee | currency: "&#8377;":0}}</span><div class="text-muted text-small"><span data-ng-if="row.entity.pfEmployee">{{row.entity.getAnnualBasicPercentage(row.entity.pfEmployee)}}% of BASIC</div></div>',cellClass:"top-align",width:200,treeAggregationLabel:"CustomTotal",treeAggregationType:"Total",customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},customTreeAggregationFn:function(e,t,i,n){e.value=(e.value||0)+((n.grid.appScope.ctrl.isMonthView?n.entity.monthlyPFEmployee:i)||0)}},{name:"canProrateBasedOnWorkratio",displayName:"Prorate PF for LOP adjustment",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.groupHeader"><span>{{ row.entity.canProrateBasedOnWorkratio ? "Yes" : "No" }}</span></div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{COL_FIELD}}</div>',cellClass:"top-align",groupingShowAggregationMenu:!1},{name:"pfOverriden",displayName:"PF Overriden",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.groupHeader"><span>{{ row.entity.isPFOverriden() ? "Yes" : "No" }}</span></div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{COL_FIELD}}</div>',cellClass:"top-align",groupingShowAggregationMenu:!1},{name:"actions",displayName:"Actions",enableSorting:!1,enableGrouping:!1,cellTemplate:'<div class="ui-grid-cell-contents"><div class="col-sm-12 clear-left-padding pf-status" data-ng-if="!row.entity.isStructureLevelPFOptOut"><div class="col-sm-5"><span data-ng-if="row.entity.pfEnable()" class="enabled">ON</span> <span data-ng-if="!row.entity.pfEnable()" class="disabled">OFF</span> </div><div class="col-sm-offset-1 col-sm-6 clear-side-padding" data-ng-if="grid.appScope.ctrl.payrollConfig.pf.allowOverride"><a class="edit" data-ng-click="grid.appScope.ctrl.openEmployeePFSetting(row.entity)"> <span><i class="icon-pencil"></i>change</span></a></div></div><div data-ng-if="row.entity.isStructureLevelPFOptOut"><span>Not Applicable</span></div></div>'}],this.pfOverrideGridOptions.rowHeight=50,this.pfOverrideGridOptions.data="ctrl.salaryDetails | filter : ctrl.filterText",this.pfOverrideGridOptions.onRegisterApi=function(t){e.gridApi=t}},e.prototype.openEmployeePFSetting=function(e){var t=this;this.modalInstance=this.modalService.open({templateUrl:"ComponentOverride/PFOverrideSettings",controller:y,controllerAs:"ctrl",backdrop:!0,keyboard:!1,resolve:{PayrollConfig:function(){return t.payrollConfig},SalaryDetails:function(){return e}}}),this.modalInstance.result.then(function(t){e.updateStructure(t)})},e.$inject=["AppSettings","$uibModal","$uibModalInstance","$q","PayrollService","NotificationService","PayrollModel","EmployeeFinanceServices","PayrolAdminOpsService","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],e}(),s=function(t){function i(e,i,n,o,r,a,s,l,c,p,u){var d=t.call(this,u)||this;return d.employeeFinanceServices=e,d.notificationService=i,d.dialogs=n,d.dateServices=o,d.incomeTaxReportService=r,d.appSettings=a,d._modal=s,d.timeoutService=l,d.scope=c,d.payrollModel=p,d.previousIncomeDetails=[],d.components={},d}return __extends(i,t),i.prototype.getReportData=function(){var t=this;this.incomeTaxReportService.getPreviousIncomeDetails(this.payrollConfiguration.payGroupId,this.month1.getDateOnlyString(),this.month2.getDateOnlyString()).then(function(i){t.components={},t.previousIncomeDetails=[],angular.forEach(i,function(i,n){var o=new e.Model.PreviousIncomeRegisterGridRow(i);o.components=i.components,t.previousIncomeDetails.push(o)}),t.initGridSettings(),t.timeoutService(function(){window.dispatchEvent(new Event("resize"))},200)})},i.prototype.buildYearListBased=function(){var e=this.payrollModel.FinancialYear.getFinancialYear(new Date(this.payrollConfiguration.payCycle.kekaStartsFrom));return this.buildYearList(new Date(e.from),this.lastFinalizedCycle||new this.payrollModel.PayrollCycle(this.payrollConfiguration.payCycle.firstCycle))},i.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.columnDefs=[{name:"employeeNumber",displayName:"Employee Number"},{name:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.summary({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>'},{name:"financialYear",displayName:"Financial Year"},{name:"Formonth",displayName:"Month"},{name:"incomeSource",displayName:"Income Source"},{name:"grossAmount",displayName:"Gross Amount",type:"number"},{name:"actions",displayName:"Actions",enableSorting:!1,cellTemplate:'<div class="ui-grid-cell-options ui-grid-cell-contents"><span><ul class="action-items list-inline"><li class="list-item"><a class="list-link" data-ng-click="grid.appScope.ctrl.viewIncome(row.entity);"><span class="icon-eye4" uib-tooltip="View" tooltip-placement="left"></span></a></li><li class="list-item"><a class="list-link" data-ng-click="grid.appScope.ctrl.deleteIncome(row.entity)"><span class="icon-remove3" uib-tooltip="Remove" tooltip-placement="right"></span></a></li></ul></span></div>'}],this.gridSettings.data="ctrl.previousIncomeDetails | filter: ctrl.filterText",this.gridSettings.onRegisterApi=function(t){e.gridApi=t}},i.prototype.viewIncome=function(e){this._modal.open({templateUrl:"IncomeTax/IncomeBreakDown",controllerAs:"ctrl",windowClass:"salary-break-down",controller:m,bindToController:!0,resolve:{incomeDetail:function(){return e}}})},i.prototype.deleteIncome=function(e){var t=this;this.dialogs.confirm("Please confirm","Are you sure want to delete this Previous Income Details? ").result.then(function(){t.employeeFinanceServices.deletePreviousIncomeDetail({id:e.employeeId},e.id).then(function(){t.notificationService.success("Previous Income Details Deleted Successfully."),t.previousIncomeDetails=t.previousIncomeDetails.filter(function(t){return t.id!=e.id})},function(){t.notificationService.error("An error occurred while deleting previous income details.")})})},i.prototype.exportReport=function(e){var t={groupId:this.payrollConfiguration.payGroupId,fromMonth:this.month1.getDateOnlyString(),toMonth:this.month2.getDateOnlyString(),format:e,searchKey:this.filterText?this.filterText.trim():""};this.incomeTaxReportService.exportPreviousIncomeDetails(this.payrollConfiguration.payGroupId,t)},i.$inject=["EmployeeFinanceServices","NotificationService","dialogs","DateServices","IncomeTaxReportService","AppSettings","$uibModal","$timeout","$scope","PayrollModel","PayGroupsAndConfigurationService"],i}(e.reports.ICompareReportController),l=function(){function t(e,t,i,n,o,r,a,s,l,c){var p=this;this.dateServices=e,this.Form16Service=t,this.formDownloadService=i,this.appSettings=n,this.timeoutService=o,this._modal=r,this.payrollModel=a,this.dialogs=s,this.notificationService=l,this.configService=c,this.sendInprogress=!1,this.paygroups=[],this.filterId="0",this.totalEmployees=0,this.totalFormAEmployees=0,this.totalForm16Employees=0,this.selectedEmployees=[],this.getAllPaygroups=function(){p.configService.getAllPayGroups().then(function(e){p.paygroups=p.configService.paygroups,p.selectedPayGroup=p.paygroups[0],p.getGroupConfiguration()})},this.setGridApi=function(e){p.gridApi=e,p.gridApi.selection.on.rowSelectionChanged(null,function(e){p.selectedEmployees=p.gridApi.selection.getSelectedRows()}),p.gridApi.selection.on.rowSelectionChangedBatch(null,function(e){p.selectedEmployees=p.gridApi.selection.getSelectedRows()})},this.getAllPaygroups(),this.initGridSettings()}return t.prototype.getGroupConfiguration=function(){var e=this;this.configService.getCompleteGroupConfiguration(this.selectedPayGroup.id).then(function(t){e.payrollConfig=e.configService.payrollConfiguration,e.currentFinancialYear=e.configService.currentFinancialYear,e.financialYearList=e.configService.getFinancialYearList(),e.getFinacialYearEmployees(e.currentFinancialYear)})},t.prototype.getFinacialYearEmployees=function(t){var i=this;this.gridApi&&this.gridApi.selection.clearSelectedRows(),this.selectedFinancialYear=t,this.Form16Service.getFinancialYearEmployees(this.selectedPayGroup.id,this.selectedFinancialYear.from.getFullYear()).then(function(t){i.employees=[],i.totalFormAEmployees=0,i.totalForm16Employees=0,t.forEach(function(t){i.employees.push(new e.Model.Form16GenerationResult(t)),t.partAFileName&&i.totalFormAEmployees++,t.form16Url&&i.totalForm16Employees++}),i.form16Employees=angular.copy(i.employees),i.totalEmployees=t.length,i.filterEmployees()},function(e){i.notificationService.error("Error Fetching Details.")})},t.prototype.initGridSettings=function(){this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.columnDefs=[{name:"employeeNumber",displayName:"Employee Number",enableGrouping:!1},{name:"displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.summary({id:row.entity.employeeId})" title="{{row.entity.displayName}}">{{row.entity.displayName}}</a></div>',cellClass:"ui-grid-cell",enableGrouping:!1},{name:"employement",displayName:"Employment Status",cellTemplate:'<div class="ui-grid-cell-contents"><span><p>{{grid.getCellValue(row,col)}}</p><p data-ng-if="row.entity.employmentStatus != 0 && row.entity.exitDate" class="text-muted"> on {{row.entity.exitDate |  yyyymmddToDate:"MMM, dd yyyy"}} </p></span></div>',cellClass:"ui-grid-cell",groupingShowAggregationMenu:!1},{name:"panNumber",displayName:"PAN",enableGrouing:!1,groupingShowAggregationMenu:!1},{name:"partAFileName",displayName:"Form 16 uploaded(Part A)",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_self" data-ng-if="row.entity.partAUrl && row.entity.isSalaryAdded" href="{{row.entity.partAUrl | privateStorageAccountUrl}}" class="file-name">PART A</a><p data-ng-if="!row.entity.partAUrl && row.entity.isSalaryAdded">Not Uploaded</p><p data-ng-if="!row.entity.isSalaryAdded">Salary not added</p><p data-ng-if="row.entity.partAUrl && row.entity.isSalaryAdded" class="text-muted"> {{row.entity.partAUploadedOn | date: "dd/MM/yyyy h:mm a"}} </p></div>',groupingShowAggregationMenu:!1},{name:"form16Url",displayName:"Form 16 Signed & Part B",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_self" data-ng-if="row.entity.form16Url && row.entity.isSalaryAdded" href="{{row.entity.form16Url | privateStorageAccountUrl}}" download="{{row.entity.employeeNumber}}-{{row.entity.displayName}}-form16" class="file-name">Download Full Set</a><span data-ng-if="!row.entity.form16Url && row.entity.isSalaryAdded">Not Generated</span><a class="left-padding-10" data-ng-click="grid.appScope.getPartB(row.entity.employeeId)" data-ng-if="row.entity.isSalaryAdded"> Part B</a><p data-ng-if="!row.entity.isSalaryAdded">Salary not added</p><p data-ng-if="!row.entity.isSalaryAdded">Salary not added</p><p data-ng-if="row.entity.form16Url && row.entity.isSalaryAdded" class="text-muted"> On {{row.entity.generatedOn | date : "dd/MM/yyyy h:mm a"}} </p></div>',groupingShowAggregationMenu:!1}],this.gridSettings.data="ctrl.form16Employees | filter: ctrl.filterText",this.gridSettings.rowHeight=65,this.gridSettings.appScopeProvider=this,this.gridSettings.isRowSelectable=function(e){return e.entity.isForm16Generated},this.gridSettings.multiSelect=!0,this.gridSettings.onRegisterApi=this.setGridApi},t.prototype.filterEmployees=function(){"0"==this.filterId?this.form16Employees=angular.copy(this.employees):"1"==this.filterId?this.form16Employees=angular.copy(this.employees.filter(function(e){return null==e.partAFileName})):"2"==this.filterId?this.form16Employees=angular.copy(this.employees.filter(function(e){return null!=e.form16Url})):this.form16Employees=angular.copy(this.employees.filter(function(e){return null!=e.partAFileName}))},t.prototype.openForm16AUpload=function(){var e=this;this._modal.open({templateUrl:"form16A-upload",controllerAs:"ctrl",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:d,bindToController:!0,resolve:{payrollConfiguration:function(){return e.payrollConfig},financialYear:function(){return e.selectedFinancialYear}}}).result.finally(function(){e.getFinacialYearEmployees(e.currentFinancialYear)})},t.prototype.openForm16bProcess=function(){var e=this;this.selectedEmployees.filter(function(e){return e.isSalaryAdded&&e.partAFileName}).length>0?this.Form16Service.getForm16Settings(this.selectedPayGroup.id,this.selectedFinancialYear.from.getFullYear()).then(function(t){t.id?e._modal.open({templateUrl:"Generate-form16",controllerAs:"ctrl",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:u,bindToController:!0,resolve:{payrollConfiguration:function(){return e.payrollConfig},financialYear:function(){return e.selectedFinancialYear},selectedEmployees:function(){return e.selectedEmployees},settings:function(){return t}}}).result.finally(function(){e.getFinacialYearEmployees(e.currentFinancialYear)}):e.dialogs.notify("Message","Please Update the settings to generate form16 full set.")}):this.dialogs.notify("Warning","Please Select at least one employee having form16 Part A uploaded.")},t.prototype.openForm16Settings=function(){var e=this;this._modal.open({templateUrl:"form16-settings",controllerAs:"ctrl",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:p,bindToController:!0,resolve:{payrollConfiguration:function(){return e.payrollConfig},financialYear:function(){return e.selectedFinancialYear},paygroup:function(){return e.selectedPayGroup}}})},t.prototype.getPartB=function(e){var t=this,i="/api/payroll/reports/"+this.selectedPayGroup.id+"/export/form16b?name=Form16PARTB&groupId="+this.selectedPayGroup.id+"&year="+this.selectedFinancialYear.from.getFullYear()+"&employeeId="+e;this.formDownloadService.downloadFile(i).then(function(e){t.setDownloadStatus(!e.isDownloaded)})},t.prototype.downloadBulkForm16=function(){var e=this,t="/api/payroll/form16/"+this.selectedPayGroup.id+"/exportbulkform16?groupId="+this.selectedPayGroup.id+"&financialYear="+this.selectedFinancialYear.from.getFullYear()+"&isPartBIncluded="+this.isPartBIncluded;this.formDownloadService.downloadFile(t).then(function(t){e.setDownloadStatus(!t.isDownloaded)})},t.prototype.setDownloadStatus=function(e){this.downloadStatus=e,this.downloadStatus&&this.notificationService.error("An error occurred while downloading Form 16 Part B due to inconsistent data for this employee.")},t.prototype.sendForm16Email=function(){var e=this;this.selectedEmployees&&this.selectedEmployees.length>0?this.dialogs.confirm("Please confirm","Are you sure you want to send form16 email to selected employees ?").result.then(function(){e.sendInprogress=!0,e.Form16Service.sendMails(e.payrollConfig.payGroupId,e.selectedFinancialYear.from.getFullYear(),e.selectedEmployees.map(function(e){return e.employeeId})).then(function(t){e.notificationService.success("Email has been sent to selected employees."),e.sendInprogress=!1},function(t){e.notificationService.error("Error while sending email."),e.sendInprogress=!1})}):this.notificationService.error("Please select atleast one employee.")},t.$inject=["DateServices","Form16Service","FormDownloadService","AppSettings","$timeout","$uibModal","PayrollModel","dialogs","NotificationService","PayGroupsAndConfigurationService"],t}(),c=function(){function e(e,t){this.formDownloadService=e,this.notificationService=t}return e.prototype.getDocumentSigner=function(){this.formDownloadService.downloadFile("/api/payroll/form16/download/documentsigner").then(function(e){})},e.prototype.getDocumentSignerInstructions=function(){this.formDownloadService.downloadFile("/api/payroll/form16/download/instructions").then(function(e){})},e.$inject=["FormDownloadService"],e}(),p=function(){function e(e,t,i,n,o,r,a,s,l,c,p){this.payrollConfiguration=e,this.modalServiceInstance=t,this._modal=i,this.financialYear=n,this.payrollAdminService=o,this.paygroup=r,this.appSettings=a,this.blobContainers=s,this.payrollModel=l,this.Form16Service=c,this.notificationService=p,this.fileUploadSettings=angular.copy(this.appSettings.fileUploadSettings),this.fileUploadSettings.maxFileSize=5e6,this.getSettings()}return e.prototype.getSettings=function(){var e=this;this.Form16Service.getForm16Settings(this.payrollConfiguration.payGroupId,this.financialYear.from.getFullYear()).then(function(t){e.model=new e.payrollModel.Form16Settings(t||{}),e.model.payGroupId=e.payrollConfiguration.payGroupId,e.model.FinancialYear=e.financialYear.from.getFullYear()})},e.$inject=["payrollConfiguration","$uibModalInstance","$uibModal","financialYear","PayrolAdminOpsService","paygroup","AppSettings","BlobContainers","PayrollModel","Form16Service","NotificationService"],e}(),u=function(){function e(e,t,i,n,o,r,a,s,l,c,p,u,d){this.payrollConfiguration=e,this.modalServiceInstance=t,this._modal=i,this.financialYear=n,this.settings=o,this.selectedEmployees=r,this.payrollAdminService=a,this.appSettings=s,this.blobContainers=l,this.payrollModel=c,this.Form16Service=p,this.notificationService=u,this.$timeout=d}return e.prototype.saveGenerateRequest=function(){var e=this;this.submitted=!0,this.settings.signItDigitally&&!this.password||this.Form16Service.saveform16GenerationRequest(this.payrollConfiguration.payGroupId,this.financialYear.from.getFullYear(),this.password,this.selectedEmployees.map(function(e){return e.employeeId})).then(function(t){t.id&&(e.generationRequest=t,e.generationStatusTimer=e.$timeout(function(){e.getGenerationStatus()},3e4))})},e.prototype.getGenerationStatus=function(){var e=this;this.generationRequest.id&&this.Form16Service.getGenerationStatus(this.payrollConfiguration.payGroupId,this.generationRequest.id).then(function(t){3==t.status?(e.generationRequest=null,e.completedRequest=t,e.$timeout.cancel(e.generationStatusTimer)):e.generationStatusTimer=e.$timeout(function(){e.getGenerationStatus()},3e4)})},e.$inject=["payrollConfiguration","$uibModalInstance","$uibModal","financialYear","settings","selectedEmployees","PayrolAdminOpsService","AppSettings","BlobContainers","PayrollModel","Form16Service","NotificationService","$timeout"],e}(),d=function(){function e(e,t,i,n,o,r,a,s,l,c){this.payrollConfiguration=e,this.modalServiceInstance=t,this._modal=i,this.financialYear=n,this.payrollAdminService=o,this.appSettings=r,this.blobContainers=a,this.payrollModel=s,this.Form16Service=l,this.notificationService=c,this.failedEmployeesCount=0,this.fileUploadSettings=angular.copy(this.appSettings.fileUploadSettings),this.initGridSettings()}return e.prototype.initGridSettings=function(){this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.columnDefs=[{name:"partAFileName",displayName:"File Name"},{name:"maskedPAN",displayName:"Matched PAN"},{name:"panUserName",displayName:"Employee"},{name:"uploadStatus",displayName:"Upload Status",cellTemplate:'<div class="ui-grid-cell-contents"><span class="failed" data-ng-if="row.entity.isFailed"><span class="icon-cancel"></span><span class="left-padding-10">{{row.entity.uploadStatus}}</span></span></span><span class="success" data-ng-if="!row.entity.isFailed"><span class="icon-checkmark-circle2"></span><span class="left-padding-10">{{row.entity.uploadStatus}}</span></span></span></div>'}],this.gridSettings.data="ctrl.employees | filter: ctrl.filterText",this.gridSettings.appScopeProvider=this},e.prototype.onFileUploaded=function(){var e=this;this.Form16Service.parseForm16AFile(this.payrollConfiguration.payGroupId,this.financialYear.from.getFullYear(),this.attachedFile.location).then(function(t){e.parseResult=t,e.employees=[],e.failedEmployeesCount=e.parseResult.failedMaps.length,e.parseResult.successMaps.forEach(function(t){t.isFailed=!1,t.uploadStatus="Success",e.employees.push(t)}),e.parseResult.failedMaps.forEach(function(t){t.isFailed=!0,t.uploadStatus="No Employee Matched",e.employees.push(t)})},function(t){e.notificationService.error("Error while parsing zip file.")})},e.$inject=["payrollConfiguration","$uibModalInstance","$uibModal","financialYear","PayrolAdminOpsService","AppSettings","BlobContainers","PayrollModel","Form16Service","NotificationService"],e}(),m=function(){function e(e){this.income=e}return e.$inject=["incomeDetail"],e}(),y=function(){function e(e,t,i,n,o,r,a){if(this.modalService=e,this.modalServiceInstance=t,this.notificationService=i,this.payrollConfig=n,this.currentsalaryDetails=o,this.payrollModel=r,this.employeeFinanceService=a,this.model=new r.PFSettingsOverrides(this.currentsalaryDetails.structure.overrides.providentFund),this.model.notConsiderOverride=null==this.model.monthlyVPFShare&&null==this.model.pfMonthlyEmployerShare&&null==this.model.pfMonthlyEmployeeShare,this.payrollConfig.pf.restrictToStatutoryLimit)this.salaryPF=this.currentsalaryDetails.monthlyBasic>15e3?1800:this.currentsalaryDetails.generalPFAmount;else if(this.payrollConfig.pf.useStructureBasedPF){var s=this.payrollConfig.getStructureConfiguration(this.currentsalaryDetails.structure.structureGenerateSource,this.currentsalaryDetails.structure.salaryConfigurationName);if(s){var l=s.getPFComponentConfig();this.salaryPF=null!=l?l.amountExpression:this.currentsalaryDetails.generalPFAmount}}else this.salaryPF=this.currentsalaryDetails.generalPFAmount}return e.prototype.savePFSettingsOverrides=function(){var e=this;this.employeeFinanceService.savePFOverride({id:this.currentsalaryDetails.structure.employeeId},this.model).then(function(t){e.modalServiceInstance.close(t),e.notificationService.success("Provident fund setting changed successfully")},function(t){e.notificationService.error("Error in saving Provident fund setting")})},e.$inject=["$uibModal","$uibModalInstance","NotificationService","PayrollConfig","SalaryDetails","PayrollModel","EmployeeFinanceServices"],e}(),h=function(){function t(e,t,i,n,o,r,a,s,l,c,p,u){var d=this;this.q=e,this.stateParams=t,this.appSettings=i,this.modalService=n,this.scope=o,this.payrollService=r,this.notificationService=a,this.modalInstance=s,this.uiGridGroupingConstants=l,this.uiGridExtensions=c,this.payrollModel=p,this.configService=u,this.claimData=[],this.accrualHistory=[],this.paygroups=[],this.configService.getAllPayGroups().then(function(e){d.paygroups=d.configService.paygroups,d.selectedPayGroup=d.paygroups[0],d.getGroupConfiguration()})}return t.prototype.getGroupConfiguration=function(){var e=this;this.claimData=[],this.q.all([this.configService.getPayGroupConfiguration(this.selectedPayGroup.id),this.payrollService.cycle.getFirstPendingCycle(this.selectedPayGroup.id)]).then(function(t){e.payrollConfig=e.configService.payrollConfiguration,e.firstPendingCycle=new e.payrollModel.PayrollCycle(t[1]),e.currentMonth=new Date(e.firstPendingCycle.year,e.firstPendingCycle.month,1),e.previousCycle=3!=e.firstPendingCycle.month?e.payrollConfig.payrollSchedule.payCycle.getPreviousPayCycle(e.firstPendingCycle):null,e.reimbursableComponent=e.payrollConfig.getSupportedComponent(e.stateParams.componentName),null!=e.reimbursableComponent&&(e.getReimbursableClaims(),e.initGridSettings(),e.initHistoryGridSettings())})},t.prototype.getReimbursableClaims=function(){var t=this;this.payrollService.reimbursableClaim.get({groupId:this.selectedPayGroup.id,claimAgainstComponent:this.reimbursableComponent.componentName}).$promise.then(function(i){t.claimData=i.claims.map(function(t){return new e.Model.ReimbursableClaimView(t)})})},t.prototype.initGridSettings=function(){var e=this;(this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" href="/old/#/employee/{{row.entity.employeeId}}/finances/pay/salary">{{row.entity.employeeNumber}}</a></div>',enableGrouping:!1},{field:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" href="/old/#/employee/{{row.entity.employeeId}}/finances/pay/salary">{{row.entity.employeeName}}</a></div>',enableGrouping:!1}],null!=this.previousCycle)&&[{field:"previousAccrual",displayName:"Accrual Till "+this.previousCycle.monthName,cellTemplate:'<div class="ui-grid-cell-contents"><a data-ng-click="grid.appScope.ctrl.openPreviousAccrualHistory(row.entity);">{{row.entity.previousAccrual | currency: "Rs. ":00}}</a></div>',enableGrouping:!1},{field:"previousClaimAmount",displayName:"Claims Till "+this.previousCycle.monthName,cellTemplate:'<div class="ui-grid-cell-contents"><a data-ng-click="grid.appScope.ctrl.openPreviousClaimHistory(row.entity);">{{row.entity.previousClaimAmount | currency: "Rs. ":00}}</a></div>',treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"previousBalance",displayName:"Balance till "+this.previousCycle.monthName,cellFilter:'currency: "Rs. ":00',treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"previousPendingClaim",displayName:"Previous Pending Claim",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.previousPendingClaim | currency: "Rs. ":00}}  <span data-ng-if="row.entity.previousPendingClaim > row.entity.currentAccumulationAsPerStructure" class="icon-info2 information-tooltip tooltip-grey tooltip-full-width" popover-placement="right"data-uib-tooltip="\'Not enough balance to pay pending claims. The remaining claim amount of Rs.{{(row.entity.previousPendingClaim - row.entity.currentAccumulationAsPerStructure) | currency:\'\':00}} will be carry forwarded to next month for payment."\'"></span></div> ',treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}].forEach(function(t){e.gridSettings.columnDefs.push(t)});[{field:"currentAccumulationAsPerStructure",displayName:"Accrual in "+this.firstPendingCycle.summaryName,cellFilter:'currency: "Rs. ":00',treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"currentBalance",displayName:"Balance in "+this.firstPendingCycle.summaryName,cellFilter:'currency: "Rs. ":00',treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"claimAmount",displayName:"Claim For "+this.firstPendingCycle.summaryName,cellClass:"ui-grid-cell-contents align-cell-text",cellTemplate:'<div class="ui-grid-cell-options col-sm-11"><input class="form-control" type="number" data-ng-change="grid.appScope.ctrl.updateGrid()" data-ng-disabled = "row.entity.readOnly" data-ng-model="row.entity.payableAmount"/></div>',treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}].forEach(function(t){e.gridSettings.columnDefs.push(t)}),this.gridSettings.rowHeight=50,this.gridSettings.data="ctrl.claimData | filter: ctrl.filterText",this.gridSettings.onRegisterApi=function(t){e.gridApi=t}},t.prototype.updateGrid=function(){this.gridApi&&this.gridApi.grid.queueGridRefresh()},t.prototype.saveClaimDetails=function(){var t=this,i=this.claimData.filter(function(e){return(e.id>0||e.payableAmount>0)&&!e.readOnly}).map(function(t){return new e.Model.ReimbursableClaim(t)});i.length>0?this.payrollService.reimbursableClaim.save({againstClaim:this.reimbursableComponent.componentName,groupId:this.selectedPayGroup.id},i).$promise.then(function(e){t.notificationService.success("Claim details saved successfully"),t.modalInstance.dismiss("close")}):(this.notificationService.error("No claim data to save."),this.modalInstance.dismiss("close"))},t.prototype.initHistoryGridSettings=function(){this.historyGridSettings=angular.copy(this.appSettings.gridSettings),this.historyGridSettings.columnDefs=[{field:"month",displayName:"Month",cellFilter:'date : "dd-MMM-yyyy"'},{field:"amount",displayName:"Amount",cellFilter:'currency : "Rs. ":00'}],this.historyGridSettings.rowHeight=50,this.historyGridSettings.data="ctrl.accrualHistory"},t.prototype.openPreviousAccrualHistory=function(e){var t=this;this.modalService.open({templateUrl:"ComponentOverride/ReimbursableAccrualHistory",windowClass:"structure-compare reimbursable-claim-history",scope:this.scope}),this.accrualHistory=[],Object.keys(e.previousAccumulatedDetails).forEach(function(i){t.accrualHistory.push({month:i,amount:e.previousAccumulatedDetails[i]})})},t.prototype.openPreviousClaimHistory=function(e){var t=this;this.modalService.open({templateUrl:"ComponentOverride/ReimbursableClaimHistory",windowClass:"structure-compare reimbursable-claim-history",scope:this.scope}),this.accrualHistory=[],Object.keys(e.previousClaims).forEach(function(i){t.accrualHistory.push({month:i,amount:e.previousClaims[i]})})},t.prototype.openReimbursementClaimImport=function(){var e=this;this.modalService.open({windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,templateUrl:"ComponentOverride/ReimbursementClaimImport",controller:"PayrollComponentClaimImportController",controllerAs:"importCtrl",resolve:{componentName:function(){return e.reimbursableComponent.componentName},payrollConfiguration:function(){return e.payrollConfig}}}).result.then(function(t){t&&e.getReimbursableClaims()})},t.$inject=["$q","$stateParams","AppSettings","$uibModal","$scope","PayrollService","NotificationService","$uibModalInstance","uiGridGroupingConstants","UiGridExtensions","PayrollModel","PayGroupsAndConfigurationService"],t}(),f=function(){function e(e,t,i,n,o,r){var a=this;this.$scope=e,this.$uibModal=t,this.$uibModalInstance=i,this.appSettings=n,this.EmployeeFinanceServices=o,this.PayrolAdminOpsService=r,this.init(),this.panDetails=[],this.$scope.$watch("ctrl.panDetails",function(e,t){e&&(a.invalidPanInfoCount=e.filter(function(e){return!e.pan.validState}).length)},!0)}return e.prototype.init=function(){var e=this;this.PayrolAdminOpsService.getPanDetails().then(function(t){e.panDetails=t}),this.initGridSettings()},e.prototype.initGridSettings=function(){var e=this;this.panGridSettings=angular.copy(this.appSettings.gridSettings),this.panGridSettings.enableRowSelection=!0,this.panGridSettings.enableSelectAll=!0,this.panGridSettings.data="ctrl.panDetails | filter: ctrl.searchText",this.panGridSettings.onRegisterApi=function(t){e.gridApi=t},this.panGridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.preferences({id:row.entity.id})" title="{{row.entity.employeeNumber}}">{{row.entity.employeeNumber}}</a></div>'},{field:"displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.preferences({id:row.entity.id})" title="{{row.entity.displayName}}">{{row.entity.displayName}}</a></div>'},{field:"panNotApplicable",displayName:"PAN Available",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span data-ng-if='row.entity.pan.panNotApplicable'>No</span><span data-ng-if='!row.entity.pan.panNotApplicable'>Yes</span></div></div>"},{field:"panNumber",displayName:"PAN Number",cellTemplate:"<div class=\"ui-grid-cell-contents\"><div data-ng-if='!row.entity.pan.panNotApplicable'><span data-ng-if='row.entity.pan.panNumber'>{{row.entity.pan.panNumber}}</span><span data-ng-if='!row.entity.pan.panNumber' class=\"error\">Missing PAN Number</span></div></div>"},{field:"dateOfBirth",displayName:"Date Of Birth",cellTemplate:'<div class="ui-grid-cell-contents"><div data-ng-if=\'!row.entity.pan.panNotApplicable\'><span data-ng-if="row.entity.pan.dateOfBirth">{{row.entity.pan.dateOfBirth | date:\'mediumDate\'}}</span><span data-ng-if="!row.entity.pan.dateOfBirth"></span></div></div>'},{field:"nameOnPanCard",displayName:"Name on PAN Card",cellTemplate:"<div class=\"ui-grid-cell-contents\"><div data-ng-if='!row.entity.pan.panNotApplicable'><span data-ng-if='row.entity.pan.nameOnPanCard'>{{row.entity.pan.nameOnPanCard}}</span><span data-ng-if='!row.entity.pan.nameOnPanCard' class=\"error\">Missing Name</span></div></div>"},{field:"fatherName",displayName:"Father's Name",cellTemplate:"<div class=\"ui-grid-cell-contents\"><div data-ng-if='!row.entity.pan.panNotApplicable'><span data-ng-if='row.entity.pan.fatherName'>{{row.entity.pan.fatherName}}</span><span data-ng-if='!row.entity.pan.fatherName' class=\"error\">Missing Father's Name</span></div></div>"},{name:"actions",displayName:"",cellTemplate:'<div class="ui-grid-cell-contents text-center"><span><a class="action-link upper-case" data-ng-click="grid.appScope.ctrl.openPanEdit(row.entity)">edit</a></span></div>'}]},e.prototype.openPanEdit=function(e){var t=this;this.$uibModal.open({templateUrl:"FinancialOpts/EditPANInformation",windowClass:"no-scroll",controller:"EditPanController",controllerAs:"ctrl",resolve:{FinanceService:function(){return t.EmployeeFinanceServices},Params:function(){return{id:e.id}},Employee:function(){return e}}})},e.$inject=["$scope","$uibModal","$uibModalInstance","AppSettings","EmployeeFinanceServices","PayrolAdminOpsService"],e}(),g=function(){function e(e,t,i,n,o,r,a,s,l){var c=this;this.$scope=e,this.$uibModal=t,this.$uibModalInstance=i,this.appSettings=n,this.EmployeeFinanceServices=o,this.PayrolAdminOpsService=r,this.configService=a,this.payrollModel=s,this.PayrollLookUpService=l,this.paygroups=[],this.configService.getAllPayGroups().then(function(e){c.paygroups=c.configService.paygroups,c.selectedPaygroup=c.paygroups[0],c.getGroupConfiguration()}),this.PFAndESISettingsUrl=this.configService.hasPayGroupFeature?"settings.payroll.paygroup.details.getStarted.pfandesi({ groupId: ctrl.selectedPaygroup.id })":"settings.payroll.getStarted.pfandesi",this.pfAndEsiDetails=[],this.initGridSettings()}return e.prototype.getGroupConfiguration=function(){var e=this;this.configService.getPayGroupConfiguration(this.selectedPaygroup.id).then(function(t){e.payrollConfig=e.configService.payrollConfiguration,(e.payrollConfig.isESIFilingRequired()||e.payrollConfig.isPFFilingRequired())&&e.getPFAndESIDetails()})},e.prototype.initGridSettings=function(){var e=this;this.pfAndEsiGridSettings=angular.copy(this.appSettings.gridSettings),this.pfAndEsiGridSettings.enableRowSelection=!0,this.pfAndEsiGridSettings.enableSelectAll=!0,this.pfAndEsiGridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ng-href="/old/#/employee/{{row.entity.id}}/finances/preferences">{{row.entity.employeeNumber}}</a></div>',enableGrouping:!1,width:150},{field:"displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ng-href="/old/#/employee/{{row.entity.id}}/finances/preferences">{{row.entity.displayName}}</a></div>',enableGrouping:!1,width:200},{field:"pfEstablishmentId",displayName:"PF Establishment Id",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.pfEstablishmentId}}</div>',enableGrouping:!1,width:200},{field:"isPFNotAvailable",displayName:"PF Details Available",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span data-ng-if='row.entity.pf.isPFNotAvailable'>No</span><span data-ng-if='!row.entity.pf.isPFNotAvailable'>Yes</span></div></div>",enableGrouping:!1,width:150},{field:"pfNumber",displayName:"PF Number",cellTemplate:"<div class=\"ui-grid-cell-contents\"><div data-ng-if='!row.entity.pf.isPFNotAvailable'><span data-ng-if='row.entity.pf.pfNumber'>{{row.entity.pf.pfNumber}}</span><span data-ng-if='!row.entity.pf.pfNumber' class=\"error\">Missing PF Number</span></div></div>",enableGrouping:!1,width:200},{field:"pf.joinDate",displayName:"PF Date Joined",cellTemplate:'<div class="ui-grid-cell-contents"><div data-ng-if=\'!row.entity.pf.isPFNotAvailable\'><span data-ng-if="row.entity.pf.joinDate">{{row.entity.pf.joinDate | date:\'mediumDate\'}}</span><span data-ng-if="!row.entity.pf.joinDate"></span></div></div>',groupingShowAggregationMenu:!1,width:200},{field:"nameOnTheAccount",displayName:"PF Account Name",cellTemplate:"<div class=\"ui-grid-cell-contents\"><div data-ng-if='!row.entity.pf.isPFNotAvailable'><span data-ng-if='row.entity.pf.pfNumber'><span data-ng-if='row.entity.pf.nameOnTheAccount'>{{row.entity.pf.nameOnTheAccount}}</span><span data-ng-if='!row.entity.pf.nameOnTheAccount'></span></div></div>",enableGrouping:!1,width:200},{field:"uan",displayName:"UAN",cellTemplate:"<div class=\"ui-grid-cell-contents\"><div data-ng-if='!row.entity.pf.isPFNotAvailable'><span data-ng-if='row.entity.pf.pfNumber'><span data-ng-if='row.entity.pf.uan'>{{row.entity.pf.uan}}</span><span data-ng-if='!row.entity.pf.uan' class=\"error\">Missing UAN</span></div></div>",enableGrouping:!1,width:200},{field:"isESIEligible",displayName:"ESI Eligible",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{ row.entity.esi.isESIEligible ? 'Yes' : 'No' }}</span></div>",enableGrouping:!1,width:200},{field:"esiEstablishmentId",displayName:"Employer ESI Number",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.esiEstablishmentId}}</div>',width:200},{field:"esiNumber",displayName:"ESI Number",cellTemplate:"<div class=\"ui-grid-cell-contents\"><div data-ng-if='row.entity.esi.isESIEligible'><span data-ng-if='row.entity.esi.esiNumber'>{{row.entity.esi.esiNumber}}</span><span data-ng-if='!row.entity.esi.esiNumber' class=\"error\">Missing ESI Number</span></div></div>",enableGrouping:!1,width:200},{name:"actions",displayName:"Actions",enableSorting:!1,cellTemplate:'<div class="ui-grid-cell-contents text-center"><a class="action-link upper-case" data-ng-click="grid.appScope.ctrl.openPfAndEsiEdit(row.entity)">edit</a></div>',enableGrouping:!1,width:200}],this.pfAndEsiGridSettings.onRegisterApi=function(t){e.gridApi=t},this.pfAndEsiGridSettings.data="ctrl.pfAndEsiDetails | filter: ctrl.filterText"},e.prototype.openPfAndEsiEdit=function(e){var t=this;this.$uibModal.open({templateUrl:"FinancialOpts/EditPFAndESIInfo",windowClass:"no-scroll",controller:"PfAndEsiController",controllerAs:"ctrl",resolve:{FinanceService:function(){return t.EmployeeFinanceServices},Params:function(){return{id:e.id}},Employee:function(){return e},PayrollConfig:function(){return t.payrollConfig},SaveText:function(){return"Update"},Cancel:function(){return!0}}})},e.prototype.openImportPFAndESI=function(){var e=this;this.$uibModal.open({windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,templateUrl:"FinancialOpts/ImportPFAndESIInfo",controller:"PayrollPFAndESIImportController",controllerAs:"importCtrl",resolve:{payGroup:function(){return e.selectedPaygroup}}}).result.then(function(t){t&&e.getPFAndESIDetails()})},e.prototype.getPFAndESIDetails=function(){var e=this;this.pfAndEsiDetails=null,this.PayrolAdminOpsService.getPfAndEsiDetails(this.selectedPaygroup.id).then(function(t){e.pfAndEsiDetails=t})},e.$inject=["$scope","$uibModal","$uibModalInstance","AppSettings","EmployeeFinanceServices","PayrolAdminOpsService","PayGroupsAndConfigurationService","PayrollModel","PayrollLookUpService"],e}(),v=function(){function e(e,t,i,n,o,r,a,s){this.$scope=e,this.$uibModal=t,this.$uibModalInstance=i,this.appSettings=n,this.EmployeeFinanceServices=o,this.PayrolAdminOpsService=r,this.salaryPaymentMode=a,this.LookupServices=s,this.init(),this.bankDetails=[]}return e.prototype.init=function(){var e=this;this.LookupServices.lookup.query({id:"banks"}).$promise.then(function(t){e.banks=t}),this.PayrolAdminOpsService.getBankDetails().then(function(t){e.bankDetails=t,e.invalidBankInfoCount=e.bankDetails.filter(function(e){return e.bankDetails&&!e.bankDetails.validState}).length}),this.initGridSettings()},e.prototype.initGridSettings=function(){var e=this;this.bankGridSettings=angular.copy(this.appSettings.gridSettings),this.bankGridSettings.enableRowSelection=!0,this.bankGridSettings.enableSelectAll=!0,this.bankGridSettings.data="ctrl.bankDetails | filter : ctrl.searchText",this.bankGridSettings.onRegisterApi=function(t){e.gridApi=t},this.bankGridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.preferences({id:row.entity.id})" title="{{row.entity.employeeNumber}}">{{row.entity.employeeNumber}}</a></div>',enableGrouping:!1},{field:"displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.preferences({id:row.entity.id})" title="{{row.entity.displayName}}">{{row.entity.displayName}}</a></div>',enableGrouping:!1},{field:"paymentMode",displayName:"Payment Mode",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span data-ng-if='row.entity.bankDetails.salaryPaymentMode'>{{grid.appScope.ctrl.salaryPaymentMode.getById(row.entity.bankDetails.salaryPaymentMode).title}}</span><span data-ng-if='!row.entity.bankDetails.salaryPaymentMode' class=\"error\">Missing Payment mode</span></div>",groupingShowAggregationMenu:!1},{field:"bank",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span data-ng-if='row.entity.bankDetails.bankName'>{{row.entity.bankDetails.bankName}}</span><span data-ng-if='!row.entity.bankDetails.validState && !row.entity.bankDetails.bankName' class=\"error\">Missing Bank Information</span></div>",groupingShowAggregationMenu:!1},{field:"account",displayName:"Account Number",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.bankDetails.accountNumber">{{row.entity.bankDetails.accountNumber}}</span><span data-ng-if="!row.entity.bankDetails.validState && !row.entity.bankDetails.accountNumber" class="error">Missing Account Number</span></div>',groupingShowAggregationMenu:!1},{field:"nameOnTheAccount",displayName:"Name on the account",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.bankDetails.nameOnTheAccount">{{row.entity.bankDetails.nameOnTheAccount}}</span><span data-ng-if="!row.entity.bankDetails.validState && !row.entity.bankDetails.nameOnTheAccount" class="error">Missing name on the acccount</span></div>',groupingShowAggregationMenu:!1},{field:"ifscCode",displayName:"IFS Code",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span data-ng-if='row.entity.bankDetails.ifscCode'>{{row.entity.bankDetails.ifscCode}}</span><span data-ng-if='!row.entity.bankDetails.validState && !row.entity.bankDetails.ifscCode' class=\"error\">Missing IFSC</span></div>",groupingShowAggregationMenu:!1},{name:"actions",displayName:"",enableSorting:!1,cellTemplate:'<div class="ui-grid-cell-contents text-center"><span><a class="action-link upper-case" data-ng-click="grid.appScope.ctrl.openBankEdit(row.entity)">edit</a></span></div>',enableGrouping:!1}]},e.prototype.openBankEdit=function(e){var t=this;this.$uibModal.open({templateUrl:"FinancialOpts/EditBankInformation",controller:"EditBankController",controllerAs:"ctrl",resolve:{FinanceService:function(){return t.EmployeeFinanceServices},Params:function(){return{id:e.id}},Employee:function(){return e},Banks:function(){return t.banks}}})},e.$inject=["$scope","$uibModal","$uibModalInstance","AppSettings","EmployeeFinanceServices","PayrolAdminOpsService","SalaryPaymentMode","LookupServices"],e}(),S=function(){function e(e,t,i){var n=this;this.$uibModal=e,this.appSettings=t,this.PayrolAdminOpsService=i,this.employeesPayrollStatus=[],this.PayrolAdminOpsService.getAllEmployeePayrollStatus().then(function(e){n.employeesPayrollStatus=e}),this.initPayrollStatusGridOptions(),this.niceScrollOptions=angular.copy(this.appSettings.scrollSettings)}return e.prototype.initPayrollStatusGridOptions=function(){var e=this;this.payrollStatusGridOptions=angular.copy(this.appSettings.gridSettings),this.payrollStatusGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",enableGrouping:!1},{field:"displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.summary({id:row.entity.id})" title="{{row.entity.displayName}}">{{row.entity.displayName}}</a></div>',enableGrouping:!1},{field:"dateJoined",displayName:"Date Joined",enableGrouping:!1},{field:"workerType",displayName:"Worker Type",groupingShowAggregationMenu:!1},{name:"payrollStatus",displayName:"Payroll Status",enableSorting:!1,cellTemplate:'<div class="col-sm-12 ui-grid-cell-contents pf-status"><div class="col-sm-5"><span data-ng-if="row.entity.payrollEnable" class="enabled">Enabled</span><span data-ng-if="!row.entity.payrollEnable" class="disabled">Disabled</span></div><div data-ng-if="row.treeNode.children.length == 0" class="col-sm-6 clear-side-padding"><a class="edit" data-ng-click="grid.appScope.ctrl.openEmployeePayrollSetting(row.entity)"><span><i class="icon-pencil"></i>change</span></a></div></div>',groupingShowAggregationMenu:!1}],this.payrollStatusGridOptions.data="ctrl.employeesPayrollStatus | filter: ctrl.searchText",this.payrollStatusGridOptions.onRegisterApi=function(t){e.gridApi=t}},e.prototype.openEmployeePayrollSetting=function(e){this.$uibModal.open({templateUrl:"FinancialOpts/EditPayrollStatus",controller:"ChangeEmployeePayrollStatusController",controllerAs:"ctrl",windowClass:"employee-payroll-status-setting",resolve:{EmployeePayrollDetails:function(){return e}},backdrop:!0,keyboard:!1}).result.then(function(t){e.payrollEnable=t.payrollEnable})},e.$inject=["$uibModal","AppSettings","PayrolAdminOpsService"],e}(),C=function(){function t(t,i,n,o,r){var a=this;this.$uibModal=t,this.appSettings=i,this.PayrolAdminOpsService=n,this.paygroupService=o,this._q=r,this.employeePayGroupDetails=[],this._q.all([this.paygroupService.getAllPayGroups(),this.PayrolAdminOpsService.getAllEmployeepayGroupDetails()]).then(function(t){a.allPaygroups=t[0].map(function(t){return new e.Configuration.Model.Paygroup(t)}),a.employeePayGroupDetails=t[1]}),this.initGridOptions(),this.niceScrollOptions=angular.copy(this.appSettings.scrollSettings)}return t.prototype.initGridOptions=function(){var e=this;this.payGroupDetailsGridOptions=angular.copy(this.appSettings.gridSettings),this.payGroupDetailsGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",enableGrouping:!1},{field:"fullName",displayName:"Full Name",enableGrouping:!1},{field:"dateJoined",displayName:"Date Joined",enableGrouping:!1,cellFilter:'date : "dd-MMM-yyyy"'},{field:"workerType",displayName:"Worker Type",groupingShowAggregationMenu:!1},{name:"IsPayRollEnabled",displayName:"Payroll Status",enableSorting:!1,cellTemplate:'<div class="col-sm-12 ui-grid-cell-contents pf-status"><span data-ng-if="row.entity.isPayRollEnabled" class="enabled">Enabled</span><span data-ng-if="!row.entity.isPayRollEnabled" class="disabled">Disabled</span></div>',groupingShowAggregationMenu:!1},{name:"PayGroup Details",displayName:"Pay Group Name",enableSorting:!1,cellTemplate:'<div class="col-sm-12 ui-grid-cell-contents"><span class= "col-sm-6">{{grid.appScope.ctrl.getEmployeePayGroupName(row.entity.payGroupId)}}</span></div>',groupingShowAggregationMenu:!1}],this.payGroupDetailsGridOptions.data="ctrl.employeePayGroupDetails | filter: ctrl.searchText",this.payGroupDetailsGridOptions.onRegisterApi=function(t){e.gridApi=t}},t.prototype.getEmployeePayGroupName=function(e){return this.allPaygroups.filter(function(t){return t.id==e})[0].name},t.$inject=["$uibModal","AppSettings","PayrolAdminOpsService","paygroupService","$q"],t}(),w=function(){function e(e,t,i,n){this.NotificationService=e,this.modalInstance=t,this.EmployeeServices=i,this.submitted=!1,this.employeePayrollDetails=n,this.model={id:n.id,payrollStatus:n.payrollEnable}}return e.prototype.saveEmployeePayrollSetting=function(){var e=this;this.EmployeeServices.employee.save({action:"payrollstatus",id:this.model.id,payrollStatus:this.model.payrollStatus},{}).$promise.then(function(t){e.NotificationService.success("Employee payroll options changed successfully"),e.modalInstance.close(t)},function(t){e.NotificationService.error("Error in payroll options change")}),this.submitted=!0},e.prototype.closeModal=function(){this.modalInstance.dismiss()},e.$inject=["NotificationService","$uibModalInstance","EmployeeServices","EmployeePayrollDetails"],e}(),angular.module("payroll").controller("DeclarationDocApprovalController",i).controller("DeclarationApprovalListController",t).controller("EmployeesPFOptionsController",a).controller("TDSOverrideSummaryController",n).controller("ESIOverrideSummaryController",r).controller("PTOverrideSummaryController",o).controller("PreviousIncomeDetailsController",s).controller("EmployeesForm16Controller",l).controller("DownloadDocumentSignerController",c).controller("Form16SettingsController",p).controller("ReimbursementClaimController",h).controller("EmployeePanInfoController",f).controller("EmployeePfAndEsiInfoController",g).controller("EmployeeBankInfoController",v).controller("EmployeePayrollStatusController",S).controller("ChangeEmployeePayrollStatusController",w).controller("PREmployeePayGroupDetailsController",C)}(Payroll||(Payroll={})),angular.module("payroll").factory("PayrollService",["$resource","$q","PayrollModel","FinalizePayrollSteps","$interval",function(e,t,i,n,o){var r={cycle:{}};return r.payroll=e("/api/payroll/:groupId/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),r.cycle.summary=e("/api/payroll/:payGroupId/cycle/summary",{}),r.incometaxdetails=e("/api/payroll/salary/:payGroupId/incometaxstats",{}),r.cycle.all=e("/api/payroll/:payGroupId/cycle/all/:action",{}),r.cycle.run=e("/api/payroll/:payGroupId/cycle/:cycleId/start",{},{save:{method:"POST"}}),r.cycle.financials=e("/api/payroll/:groupId/cycle/:cycleId/financials",{}),r.cycle.actionstatus=e("/api/payroll/:groupId/cycle/:cycleId/actionstatus",{}),r.employeesOnHold=e("/api/payroll/employeesOnHold/:cycleId",{}),r.employeeExitsOnHold=e("/api/payroll/:groupId/employeeExitsOnHold/:cycleId",{}),r.leaveEncashment=e("/api/payroll/:groupId/leaveencashment/:cycleId",{}),r.lopReversal=e("/api/payroll/:groupId/lastFinalisedCycles",{}),r.bonusDetails=e("/api/payroll/:groupId/bonuses/:cycleId",{}),r.salaryRevisionsDetails=e("/api/payroll/:groupId/salaryrevisions/:cycleId",{}),r.cycle.getLastFinalizedCycle=function(t){return e("/api/payroll/:groupId/cycle/finalized/last",{}).get({groupId:t}).$promise},r.cycle.getFirstPendingCycle=function(t){return e("/api/payroll/:groupId/cycle/pending/first",{}).get({groupId:t}).$promise},r.lopReversal.getEmployeeLopSummary=function(t,i){return e("/api/payroll/:groupId/lopSummary/:employeeId",{}).get({employeeId:t,groupId:i}).$promise},r.lopReversal.deleteEmployeeLopReversal=function(t,i,n){return e("/api/payroll/:groupId/deleteLopReversal/:id/:employeeId",{}).delete({groupId:t,id:i,employeeId:n}).$promise},r.cycle.getPendingCycles=function(t,i){return e("/api/payroll/:groupId/cycle/pending",{}).query({groupId:t,count:i}).$promise},r.searchEmployees=function(t,i,n){return e("/api/payroll/:groupId/searchemployees/:cycleId/",{}).query({groupId:t,cycleId:i,searchKey:n}).$promise},r.searchEmployeesInFinancialYear=function(t,i,n){return e("/api/payroll/:groupId/searchemployees",{}).query({groupId:t,financialYear:i,searchKey:n}).$promise},r.searchEmployeesNotExitUptoDate=function(t,i){return e("/api/payroll/searchemployees",{}).query({date:t,searchKey:i}).$promise},r.getPayrollEmployee=function(t){return e("/api/payroll/getPayrollEmployee",{}).get({employeeId:t}).$promise},r.saveRevisionOnHold=function(e,t,i){return this.salaryRevisionsDetails.save({groupId:e,cycleId:t},i).$promise},r.saveBonusesOnHold=function(e,t,i){return this.bonusDetails.save({groupId:e,cycleId:t},i).$promise},r.arrears=e("/api/payroll/:groupId/arrears/:cycleId",{}),r.newjoinees=e("/api/payroll/:groupId/newJoineeOverrides/:cycleId",{},{save:{method:"POST",isArray:!0}}),r.employeeInSettlementProcess=e("/api/payroll/:groupId/employeeInSettlementProcess/:cycleId",{},{save:{method:"POST",isArray:!0}}),r.employeeInExitApprovalProcess=e("/api/payroll/:groupId/employeeInExitApprovalProcess/:cycleId",{},{save:{method:"POST",isArray:!0}}),r.employeeInExitProcess=e("/api/payroll/:groupId/employeeInExitProcess/:cycleId",{},{save:{method:"POST",isArray:!0}}),r.onetimetransactions=e("/api/payroll/:groupId/onetimetransactions/:cycleId",{}),r.getEmployeePayreviews=e("/api/payroll/:groupId/getemployeepayreview/:cycleId",{}),r.getpreviouscycleonetimetransactions=function(t,i){return e("/api/payroll/:groupId/previouscycleonetimetransactions/:cycleId",{}).query({groupId:t,currentCycleFromDate:i}).$promise},r.getAllUnpaidComponentClaims=function(t,i){return e("/api/payroll/:groupId/unpaidComponentClaims/:cycleId",{}).query({groupId:t,cycleId:i}).$promise},r.getAllUnpaidexpense=function(t,i){return e("/api/payroll/:groupId/unpaidexpense/:cycleId",{}).query({cycleId:i,groupId:t}).$promise},r.getCyclePayreviews=e("/api/payroll/:groupId/getcyclepayreview",{}),r.employeePayabels=e("/api/payroll/employeepayables/:cycleId",{}),r.leaverequests=e("/api/payroll/:groupId/:action/:fromdate/:todate",{action:"@action",fromdate:"@fromdate",todate:"@todate"}),r.import=e("/api/payroll/import/:groupId/:importParams/:action/",{importParams:"@importParams",action:"@action"},{update:{method:"PUT"}}),r.cycle.run.finalize=function(i,r){var a=angular.copy(n.getAll()),s=a.length,l=[],c=t.defer(),p=o(function(){if(a.length>1){var e=a.shift();c.notify({progress:l.length/s*100,message:e.title,completed:l.length==s}),l.push(e)}else o.cancel(p)},1500);return e("/api/payroll/:payGroupId/cycle/:cycleId/finalize/start",{}).save({payGroupId:i,cycleId:r},{},function(e){o.cancel(p);var t=a.pop();c.notify({progress:100,message:t.title,complete:!0}),c.resolve(e)},function(e){o.cancel(p),c.reject(e.data.message)}),c.promise},r.cycle.run.unfinalize=function(t,i){return e("/api/payroll/:payGroupId/cycle/:cycleId/finalize/revert",{}).save({payGroupId:t,cycleId:i.cycleId},i).$promise},r.getFinancialYear=function(n,o){return e("/api/payroll/:payGroupId/financialyear",{}).get({payGroupId:n,date:o}).$promise.then(function(e){return new i.FinancialYear(e)},function(e){return t.reject(e)})},r.getFinancialYearList=function(e,t){for(var n=e.payrollSchedule.payCycle.kekaStartsFrom,o=i.FinancialYear.getFinancialYear(n),r=[];!t.includes(o.from);o=o.next())r.push(o);return r.push(t),r},r.reimbursableClaim=e("/api/payroll/adminops/:groupId/reimbursableclaim",{}),r}]),angular.module("payroll").factory("PostPayrollService",["$resource","$q","PayrollModel",function(e,t,i){var n=e("/api/postpayroll/:groupId/:action",{action:"@action"},{update:{method:"put"}}),o={};return o.etds={getYearQuarters:function(e,t,i){return n.query({action:"quarter/year",groupId:e,month:t,year:i}).$promise},saveChallan:function(e,t,i){return n.save({action:"savechallan",groupId:e,year:t},i).$promise},updateChallan:function(e,t,i){return n.update({action:"updatechallan",groupId:e,year:t},i).$promise},deleteChallan:function(e,t,i,o){return n.delete({action:"removechallan",groupId:e,forMonth:t,year:i,challanId:o}).$promise},getChallanMapperEntries:function(e,t,i,o){return n.get({action:"challan/TDSEntries",groupId:e,forMonth:i,year:t,challanId:o}).$promise},postSelectedMapEntries:function(e,t,i,o,r){return n.save({action:"saveChallanMapping",groupId:e,forMonth:t,year:i,challanId:o},r).$promise},getChallanMappings:function(e,t,i){return n.get({action:"challan/mapsets",groupId:e,forMonth:i,year:t}).$promise},getReMappedChallanMapperEntries:function(e,t,i,o,r){return n.get({action:"remapChallan/TDSEntries",groupId:e,forMonth:t,year:i,challanId:o,higherSalaryFirst:r.higherSalaryFirst}).$promise},getForm24QSettings:function(e,t,o,r){return n.get({action:"24q/Settings",groupId:e,quarter:t,month:o,year:r}).$promise.then(function(e){return new i.Form24QSettings(e)})},saveForm24QSettings:function(e,t,i,o,r,a,s){return n.save({action:"24q/Settings",groupId:e,quarter:t,month:i,year:o,csiFileName:a,csiFileLocation:s},r).$promise},createForm24QGenerateRequest:function(e,t,i,o,r,a,s){return n.save({action:"24q/create/request",groupId:e,quarter:t,month:i,year:o,csiFileName:a,csiFileLocation:s},r).$promise},getForm24QGenerationStatus:function(e,t){return n.get({action:"24qstatus",groupId:e,identifier:t}).$promise.then(function(e){return e?new Payroll.Model.Form24QDetails(e):null})},getFYForm24QStatus:function(e,t,i){return n.query({action:"fy24qstatus",groupId:e,year:i,month:t}).$promise.then(function(e){return e.map(function(e){return new Payroll.Model.Form24QDetails(e)})})},saveform24QSubmission:function(e,t,i){return n.save({action:"fy24qsubmission",groupId:e,formId:t},i).$promise}},o}]),angular.module("payroll").factory("PayrollReportService",["$resource","$q","FinanceModel",function(e,t,i){var n=e("/api/reports/:groupId/:action",{action:"@action"}),o=e("/api/reports/:action",{action:"@action"}),r={getFinancialDetails:function(e){return n.query({action:"financialInfo",groupId:e}).$promise.then(function(e){return e.map(function(e){return new i.Employee(e)})})},getEmployeeBenefits:function(e,t){return n.query({action:"EmployeeBenefits",groupId:e,from:t.from.dateOnlyString(),to:t.to.dateOnlyString()}).$promise.then(function(e){return e})},getPFSummary:function(e){return o.query({action:"pf/summaryreport",groupId:e.groupId,month:e.month}).$promise},getPFArrearSummary:function(e){return o.query({action:"pf/arrearreport",groupId:e.groupId,month:e.month}).$promise},getPFAdminChargesSummary:function(e){return o.query({action:"pf/adminChargesreport",groupId:e.groupId,month:e.month}).$promise},getESISummary:function(e){return o.query({action:"esi/summary",groupId:e.groupId,month:e.month}).$promise},getPTSummary:function(e){return o.query({action:"pt/summaryreport",groupId:e.groupId,month:e.month}).$promise},getPTStateSummary:function(e){return o.query({action:"pt/statewisesummary",groupId:e.groupId,month:e.month}).$promise},getHeadCountSummary:function(e,t,i){return n.get({action:"cycleheadCountDetails",groupId:e,month:t,year:i}).$promise},getSalaryJournalVoucher:function(e,t,i){return n.get({action:"monthlySalaryjv",groupId:e,month:t,year:i}).$promise},getMonthlyIncomeTaxReport:function(e,t,i){return n.get({action:"monthlyincometaxstatement",groupId:e,month:t,year:i}).$promise},getMonthlyEmployeeReconcileReport:function(e,t,i){return n.get({action:"monthlyemployeereconciliation",groupId:e,month:t,year:i}).$promise},getMonthlyESIStatement:function(e,t,i){return n.get({action:"monthlyesistatement",groupId:e,month:t,year:i}).$promise},getPFRemittanceReport:function(e,t,i){return n.get({action:"monthlypfremittance",groupId:e,month:t,year:i}).$promise},getCyclePayreviews:function(e,t,i){return request={action:"getcyclepayreview",groupId:e,fromMonth:t,toMonth:i},n.get(request).$promise},getPTMonthlyStatement:function(e,t,i){return n.get({action:"monthlyptstatement",groupId:e,month:t,year:i}).$promise},getMonthlyBatchPayment:function(e,t,i){return n.get({action:"monthlybatchpaymentstatement",groupId:e,month:t,year:i}).$promise},getMonthlyReimbursementReport:function(e){return n.query({action:"monthlycomponentreimbursement",groupId:e.groupId,month:e.month,year:e.year,componentName:e.componentName}).$promise},getGrossComponentReconciliation:function(e,t,i){return n.get({action:"grosscomponentsreconciliation",groupId:e,fromMonth:t,toMonth:i}).$promise},getDeductionContributionReconciliation:function(e,t,i){return n.get({action:"deductionandcontributionreconciliation",groupId:e,fromMonth:t,toMonth:i}).$promise},getBatchPaymentsSummary:function(e,t,i){return n.get({action:"employeepayables/summary",groupId:e,month:t,year:i}).$promise},getGroupwiseSalarySummary:function(e,t,i){return n.get({action:"deptandfunctionwisemonthlysalary",groupId:e,month:t,year:i}).$promise},getEPFLineItems:function(e,t,i,o){return n.query({action:"pf/ecr",groupId:e,month:t,year:i,ecrFileType:o}).$promise},getCurrentCTCDetails:function(e){return n.query({action:"all/ctcinfo",groupId:e}).$promise},getCurrentSalaryDetails:function(e){return n.query({action:"all/structure",groupId:e}).$promise},getCurrentSalaryDetailsWithBonus:function(e){return n.query({action:"currentsalaryWithbonus",groupId:e}).$promise},getMonthlyComponentBreakupSummary:function(e,t,i){return n.query({action:"componentwisebreakup",groupId:e,month:t,year:i}).$promise},getTDSOverridesSummary:function(e,t,i){return n.query({action:"employeestaxoverride",groupId:e,from:t,to:i}).$promise},getPreviousIncomeDetails:function(e,t,i){return n.query({action:"previousincomedetails",groupId:e,from:t,to:i}).$promise},getIncomeTaxAnnualReport:function(e,t,i){return n.query({action:"annualincometaxreport",groupId:e,from:t,to:i}).$promise},getAllEmployeePayrollStatus:function(e,t,i){return n.query({action:"payrollstatus/allemployees",groupId:e,month:t,year:i}).$promise},getNewJoineePayrollStatus:function(e,t,i){return n.query({action:"payrollstatus/newjoinee",groupId:e,month:t,year:i}).$promise},getExitsPayrollStatus:function(e,t,i){return n.query({action:"payrollstatus/exits",groupId:e,month:t,year:i}).$promise},getDeclarationSummaryReport:function(e,t,i){return n.query({action:"declaration/Summary",groupId:e,from:t,to:i}).$promise},getDeclarationReport:function(e,t,i){return n.query({action:"declarationReport",groupId:e,from:t,to:i}).$promise}};return r}]),function(e){var t,i,n,o,r;e.Controllers||(e.Controllers={}),t=function(){function e(e,t,i,n){var o=this;this.benefitConfigurationService=e,this._modal=t,this._notificationService=i,this._scope=n,this.benefits=[],this.getBenefits(),this._scope.$on("$stateChangeSuccess",function(e,t,i,n,r){"payrolloverview.perquisites.types.addperk"!=n.name&&"payrolloverview.perquisites.types.editperk"!=n.name||o.getBenefits()})}return e.prototype.addBenefit=function(e){var t=this;this._modal.open({templateUrl:"addBenefit",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"AddBenefitController as ctrl",resolve:{benefitModel:function(){return e?t.benefits.find(function(t){return t.id==e}):{}}}}).result.then(function(e){e&&t.getBenefits()})},e.prototype.getBenefits=function(){var e=this;this.benefitConfigurationService.getAllBenefitConfigurationDetails().then(function(t){e.benefits=t.benefitsConfigurations})},e.$inject=["BenefitConfigurationService","$uibModal","NotificationService","$scope"],e}(),i=function(){function t(t,i,n,o,r,a,s){this.benefitModel=t,this.benefitConfigurationService=i,this.appSettings=n,this.blobContainers=o,this._modal=r,this._modalInstance=a,this._notificationService=s,this.benefitTaxableIncomeExpressionUsedType=e.Model.BenefitTaxableIncomeExpressionUsedType,this.benefitTypes=e.Model.BenefitTypes.getAll(),this.model=new e.Model.BenefitConfiguration(t||{}),this.fileUploadSettings=angular.copy(this.appSettings.fileUploadSettings),this.fileUploadSettings.maxNumberOfFiles=10}return t.prototype.addBenefit=function(){var t=this;if(this.form.benefit.$valid){var i=new e.Model.BenefitConfiguration(this.model);this.model.id?this.benefitConfigurationService.updateBenefitConfiguration(i).then(function(e){t._notificationService.success("Perk configuration updated"),t._modalInstance.close(!0)},function(e){t._notificationService.error("An error occurred while updating perk configuration.")}):this.benefitConfigurationService.saveBenefitConfiguration(i).then(function(e){t._notificationService.success("Perquisite Configuration Added"),t._modalInstance.close(!0)},function(e){t._notificationService.error("An error occurred while adding perk configuration.")})}},t.$inject=["benefitModel","BenefitConfigurationService","AppSettings","BlobContainers","$uibModal","$uibModalInstance","NotificationService"],t}(),n=function(){function e(e,t,i,n,o,r,a,s){var l=this;this._modal=e,this.dialogs=t,this.employeeBenefitsService=i,this._notificationService=n,this._scope=o,this.availableBenefitConfigs=r,this.state=a,this.configService=s,this.employeeBenefits=[],this.financialYearList=[],this.selectedFinancialYear={},this.getConfig=function(){l.configService.getGroupConfigurationAndFinancialYear(l.selectedPayGroup.id).then(function(e){l.payrollConfiguration=l.configService.payrollConfiguration,l.selectedFinancialYear=l.configService.currentFinancialYear,l.getBenefits(l.selectedFinancialYear),l.financialYearList=l.configService.getFinancialYearList()},function(e){l._notificationService.error(e.data.message)})},this.bulkAssignBenefit=function(){l.state.go("payrolloverview.perquisites.assignbulkemployee",{financialYear:l.selectedFinancialYear.from.getFullYear(),groupId:l.selectedPayGroup.id})},this.configService.getAllPayGroups().then(function(e){l.paygroups=l.configService.paygroups,l.selectedPayGroup=l.paygroups[0],l.getConfig()}),this._scope.$on("$stateChangeSuccess",function(e,t,i,n,o){"payrolloverview.perquisites.assign.employee"==n.name&&l.getBenefits(l.selectedFinancialYear)})}return e.prototype.assignBenefit=function(e){this.state.go("payrolloverview.perquisites.assign.employee",{financialYear:this.selectedFinancialYear.from.getFullYear(),groupId:this.selectedPayGroup.id})},e.prototype.editEmployeeBenefit=function(e){var t=this;this._modal.open({templateUrl:"addEditEmployeeBenefit",controller:"AddEmployeeBenefitController as ctrl",resolve:{selectedFinancialYear:function(){return t.selectedFinancialYear.from.getFullYear()},benefitTypes:function(){return t.availableBenefitConfigs},EmployeeId:function(){return e.employeeId},salaryStructure:function(){return{}},EmployeeBenefitId:function(){return e.id}}}).result.then(function(e){e&&t.getBenefits(t.selectedFinancialYear)})},e.prototype.deleteBenefit=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure want to delete this Perk?").result.then(function(i){t.employeeBenefitsService.deleteBenefit(e.employeeId,e.id).then(function(i){if(i){t._notificationService.error("Employee perk deleted successfully.");var n=t.employeeBenefits.indexOf(e);t.employeeBenefits.splice(n,1)}else t._notificationService.error("An error occurred while deleting perk.")},function(e){t._notificationService.error("An error occurred while deleting perk.")})})},e.prototype.getBenefits=function(e){var t=this;this.selectedFinancialYear=angular.copy(e),this.employeeBenefitsService.getAllBenefits(this.selectedFinancialYear.from.getFullYear(),this.selectedPayGroup.id).then(function(e){t.employeeBenefits=e})},e.$inject=["$uibModal","dialogs","EmployeeBenefitsService","NotificationService","$scope","availableBenefitConfigs","$state","PayGroupsAndConfigurationService"],e}(),o=function(){function e(e,t,i,n,o,r,a,s,l,c,p,u,d,m){var y=this;this.scope=e,this._q=t,this.selectedFinancialYear=i,this.employeeId=n,this.groupId=o,this.dialogs=r,this.payrollSalaryStructureService=a,this.PayrollService=s,this.employeeServices=l,this.employeeBenefitsService=c,this.payrollModel=p,this._modal=u,this._modalInstance=d,this._notificationService=m,this.model={},this.filteredEmployees=[],this.employeeId&&this.PayrollService.getPayrollEmployee(this.employeeId).then(function(e){y.model.employee=e,y.getEmployeeDetails()})}return e.prototype.getEmployeeDetails=function(){var e=this;this.employee={},this._q.all([this.employeeServices.getEmployee(this.model.employee.id),this.payrollSalaryStructureService.getSalaryStructure(this.model.employee.id),this.employeeBenefitsService.getEmployeeBenefits(this.model.employee.id,this.selectedFinancialYear)]).then(function(t){t[1]?(e.employee=t[0],e.employee.ctc=t[1].ctc,e.salaryStructureId=t[1].id,e.salaryStructure=t[1],e.employee.basic=t[1].getComponentAmount(e.payrollModel.SalaryComponents.Basic),e.employee.pf=t[1].getComponentAmount(e.payrollModel.SalaryComponents.PF),e.employee.inNoticePeriod=null!=e.employee.jobDetails.exitStatus,e.employee.benefits=t[2]):(e._notificationService.error("Perks cannot be managed for this employee because salary details are not added"),e.employee.isSalaryDetailsSet=!0)},function(t){t.data&&t.data.message&&e._notificationService.error("Perks cannot be managed for this employee because salary details are not added")})},e.prototype.addEmployeeBenefit=function(e){var t=this;this._modal.open({templateUrl:"addEditEmployeeBenefit",controller:"AddEmployeeBenefitController as ctrl",resolve:{selectedFinancialYear:function(){return t.selectedFinancialYear},EmployeeId:function(){return t.employee.id},salaryStructure:function(){return t.salaryStructure},EmployeeBenefitId:function(){return(e||{}).id}}}).result.then(function(e){e&&t.getEmployeeBenefits()})},e.prototype.deleteBenefit=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure want to delete this Perk?").result.then(function(i){t.employeeBenefitsService.deleteBenefit(e.employeeId,e.id).then(function(i){if(i){t._notificationService.error("Employee perk deleted successfully.");var n=t.employee.benefits.indexOf(e);t.employee.benefits.splice(n,1)}else t._notificationService.error("An error occurred while deleting perk.")},function(e){t._notificationService.error("An error occurred while deleting perk.")})})},e.prototype.getEmployeeBenefits=function(){var e=this;this.employeeBenefitsService.getEmployeeBenefits(this.model.employee.id,this.selectedFinancialYear).then(function(t){e.employee.benefits=t})},e.prototype.getFilteredEmployees=function(e){var t=this;if(e||!(e.length<=2))return this.PayrollService.searchEmployeesInFinancialYear(this.groupId,this.selectedFinancialYear,e).then(function(e){0==e.length&&e.push({noResults:!0}),t.filteredEmployees=angular.copy(e)})},e.$inject=["$scope","$q","selectedFinancialYear","employeeId","groupId","dialogs","PayrollSalaryStructureService","PayrollService","EmployeeServices","EmployeeBenefitsService","PayrollModel","$uibModal","$uibModalInstance","NotificationService"],e}(),r=function(){function t(t,i,n,o,r,a,s,l,c,p){var u=this;this.selectedFinancialYear=t,this.employeeId=i,this.salaryStructure=n,this.employeeBenefitId=o,this.payrollSalaryStructureService=r,this.employeeBenefitsService=a,this.modal=s,this.modalInstance=l,this.notificationService=c,this.payrollLookUpService=p,this.benefitAmountCalculationType=e.Model.BenefitAmountCalculationType,this.payrollLookUpService.getAllBenefitConfiguration().then(function(t){u.benefitTypes=t,u.employeeBenefitId>0?u.employeeBenefitsService.getEmployeeBenefit(u.employeeId,u.employeeBenefitId).then(function(t){u.model=new e.Model.EmployeeBenefit(t||{}),u.benefitConfiguration=u.benefitTypes.find(function(e){return e.id==u.model.benefitConfigurationId})}):u.model=new e.Model.EmployeeBenefit({})})}return t.prototype.getPerkAmountValues=function(e){var t=this;e.benefitAmountCalculationType==this.benefitAmountCalculationType.FormulaBased?(this.salaryStructure.id>0?this.employeeBenefitsService.getEmployeeBenefitAmountCalculation(this.employeeId,e.id,this.salaryStructure.id):this.employeeBenefitsService.getUpdatedEmployeeBenefitAmountCalculation(this.employeeId,e.id,this.employeeBenefitId)).then(function(e){e?(t.model.amount=Number(e.amountExpression),t.model.taxAmount=Number(e.taxableAmountExpression)):t.model.amount=t.model.taxAmount=null}):e.benefitAmountCalculationType==this.benefitAmountCalculationType.FixedAmount&&(this.model.amount=Number(this.benefitConfiguration.amountExpression),this.model.taxAmount=Number(this.benefitConfiguration.taxableAmountExpression))},t.prototype.saveBenefit=function(){var e=this;this.form.addBenefit.$valid&&(this.model.benefitConfigurationId=this.benefitConfiguration.id,this.model.title=this.benefitConfiguration.title,this.model.employeeId=this.employeeId,this.model.id?this.employeeBenefitsService.updateBenefit(this.model.employeeId,this.model).then(function(t){e.notificationService.success("Perk updated successfully"),e.modalInstance.close(!0)},function(t){e.notificationService.error("Error in updating perk")}):(this.model.effectiveFrom=this.salaryStructure.effectiveFrom,this.model.salaryStructureIdentifier=this.salaryStructure.identifier,this.employeeBenefitsService.addBenefit(this.model.employeeId,this.model).then(function(t){e.notificationService.success("Perk added successfully"),e.modalInstance.close(!0)},function(t){e.notificationService.error("An error occurred while adding a perk")})))},t.$inject=["selectedFinancialYear","EmployeeId","salaryStructure","EmployeeBenefitId","PayrollSalaryStructureService","EmployeeBenefitsService","$uibModal","$uibModalInstance","NotificationService","PayrollLookUpService"],t}(),angular.module("payroll").controller("AddEmployeeBenefitController",r),angular.module("payroll").controller("ManageEmployeeBenefitsController",o),angular.module("payroll").controller("AddBenefitController",i),angular.module("payroll").controller("PayrollEmployeeBenefitsController",n),angular.module("payroll").controller("PayrollBenefitsController",t)}(Payroll||(Payroll={})),function(e){!function(t){var i=function(){function e(e,t){this.resource=e,this.q=t,this.benefit=this.resource("/api/payroll/employee/benefits/:action/:id",{action:"@action"},{update:{method:"PUT"}})}return e.prototype.getAllBenefits=function(e,t){return this.benefit.query({action:"financialYear/"+e,groupId:t}).$promise},e.prototype.getEmployeeBenefits=function(e,t){return this.benefit.query({action:e+"/financialYear/"+t}).$promise},e.prototype.getEmployeeBenefit=function(e,t){return this.benefit.get({action:e+"/benefit/",id:t}).$promise},e.prototype.getEmployeeBenefitAmountCalculation=function(e,t,i){return this.benefit.get({action:e+"/amountCalculation/"+t+"/"+i}).$promise},e.prototype.getUpdatedEmployeeBenefitAmountCalculation=function(e,t,i){return this.benefit.get({action:e+"/"+i+"//amountCalculation/"+t}).$promise},e.prototype.addBenefit=function(e,t){return this.benefit.save({action:e+"/add"},t).$promise},e.prototype.updateBenefit=function(e,t){return this.benefit.update({action:e+"/update"},t).$promise},e.prototype.deleteBenefit=function(e,t){return this.benefit.delete({action:e+"/delete",id:t}).$promise},e.$inject=["$resource","$q"],e}();t.EmployeeBenefitsService=i;var n=function(){function e(e,t){var i=this;this.q=t,this.getSummary=function(e,t){return i.payableResource.get({action:"summary",cycleId:t,groupId:e}).$promise},this.createBatch=function(e,t,n){return i.payableResource.save({action:"batch",cycleId:t,groupId:e},n).$promise},this.deleteBatch=function(e,t,n){return i.payableResource.delete({action:"batch",groupId:e,cycleId:t,batchId:n}).$promise},this.updateBatch=function(e,t,n){return i.payableResource.update({action:"batch",groupId:e,cycleId:t,batchId:n.id},n).$promise},this.markAsPaid=function(e,t,n){return i.payableResource.save({action:"batch/paid",groupId:e,cycleId:t,batchId:n}).$promise},this.payableResource=e("/api/postpayroll/:groupId/employeepayables/:action/:cycleId/:batchId",{action:"@action",cycleId:"@cycleId",batchId:"@batchId",groupId:"@groupId"},{update:{method:"PUT"}})}return e.$inject=["$resource","$q"],e}();t.EmployeePayablesBatchService=n;var o=function(){function e(e,t,i){var n=this;this.q=t,this.formDownloadService=i,this.getEPFLineItems=function(e,t,i,o){return n.epfResource.query({action:"ecr",groupId:e,cycleId:t,ecrFileType:i,enableHigherPension:o}).$promise},this.exportECR=function(e,t){return n.formDownloadService.downloadFile("/api/postpayroll/"+e+"/pf/export/ecr?format="+t.format+"&cycleId="+t.cycleId+"&ecrFileType="+t.ecrFileType+"&enableHigherPension="+t.enableHigherPension+"&pfConfigurationId="+t.pfConfigurationId)},this.epfResource=e("/api/postpayroll/:groupId/pf/:action/:cycleId",{action:"@action",cycleId:"@cycleId"},{update:{method:"PUT"}})}return e.$inject=["$resource","$q","FormDownloadService"],e}();t.EPFService=o;var r=function(){function e(e,t){this.formDownloadService=t,this.ptResource=e("/api/postpayroll/:groupId/pt/:action",{action:"@action",cycleId:"@groupId"})}return e.prototype.getEmployeesPT=function(e,t,i){return this.ptResource.query({action:"details",groupId:e,month:t,year:i}).$promise},e.prototype.exportPTForm5=function(e,t){return this.formDownloadService.downloadFile("/api/postpayroll/"+e+"/pt/form5?format="+t.format+"&state="+t.state+"&month="+t.month+"&year="+t.year)},e.prototype.exportPTStatment=function(e,t){return this.formDownloadService.downloadFile("/api/postpayroll/"+e+"/pt/details/export?format="+t.format+"&month="+t.month+"&year="+t.year)},e.$inject=["$resource","FormDownloadService"],e}();t.PTService=r;var a=function(){function e(e,t,i,n){var o=this;this.httpService=e,this.fileSaverService=t,this.blob=i,this.qService=n,this.downloadFileWithPost=function(e,t){var i=o.qService.defer();return o.httpService({url:e,method:"POST",responseType:"arraybuffer",data:t}).then(function(e){if(200===e.status){var t=new o.blob([e.data],{type:e.headers("content-type")}),n=o.getFileName(e.headers("content-disposition"));o.fileSaverService.saveAs(t,n),i.resolve({isDownloaded:!0})}else i.resolve({isDownloaded:!1,status:e})},function(e){i.resolve({isDownloaded:!1,status:e})}),i.promise}}return e.prototype.downloadFile=function(e){var t=this,i=this.qService.defer();return this.httpService({url:e,method:"GET",responseType:"arraybuffer"}).then(function(e){if(200===e.status){var n=new t.blob([e.data],{type:e.headers("content-type")}),o=t.getFileName(e.headers("content-disposition"));t.fileSaverService.saveAs(n,o),i.resolve({isDownloaded:!0})}else i.resolve({isDownloaded:!1,status:e})},function(e){i.resolve({isDownloaded:!1,status:e})}),i.promise},e.prototype.getFileName=function(e){return e?e.slice(e.indexOf("filename=")+"filename=".length,e.length).replace(/\"/g,""):"download"},e.$inject=["$http","FileSaver","Blob","$q"],e}();t.FormDownloadService=a;var s=function(){function e(e){this.resource=e,this.prePayroll=this.resource("/api/payroll/:payGroupId/:action/:cycleId",{},{update:{method:"PUT"}})}return e.prototype.getEmployeePayreviews=function(e,t){return this.prePayroll.get({payGroupId:e,cycleId:t,action:"getemployeepayreview"}).$promise},e.prototype.getNotProcessedEmployees=function(e,t){return this.prePayroll.query({payGroupId:e,cycleId:t,action:"notProcessedEmployees"}).$promise},e.prototype.updatePayslipStatus=function(e,t,i){return this.prePayroll.update({action:"payslipstatus",payGroupId:e,cycleId:t,isReleased:i},{}).$promise},e.prototype.getPayslipEmployees=function(e,t){return this.prePayroll.get({action:"payslipemployees",payGroupId:e,cycleId:t}).$promise},e.prototype.sendPayslipMail=function(e,t,i){return this.prePayroll.save({action:"sendpayslipemail",payGroupId:e,cycleId:t},i).$promise},e.prototype.getPayslipsGenerationStatus=function(e,t){return this.prePayroll.get({action:"generatebulkpayslips",payGroupId:e,cycleId:t}).$promise},e.prototype.getDailyEmployeesPayDays=function(e,t){return this.prePayroll.query({payGroupId:e,cycleId:t,action:"dailywagepaydays"}).$promise},e.prototype.saveDailyEmployeesPayDays=function(e,t,i){return this.prePayroll.save({payGroupId:e,cycleId:t,action:"dailywagepaydays"},i).$promise},e.$inject=["$resource"],e}();t.PrePayrollService=s;var l=function(){function e(e){this.resource=e,this.form16=this.resource("/api/payroll/form16/:payGroupId/:action/:financialYear",{},{update:{method:"PUT"}}),this.getfom16Settings=this.resource("/api/payroll/form16/:groupId/settings/:financialYear",{})}return e.prototype.getFinancialYearEmployees=function(e,t){return this.form16.query({action:"allemployees",payGroupId:e,financialYear:t}).$promise},e.prototype.getForm16Settings=function(e,t){return this.getfom16Settings.get({groupId:e,financialYear:t}).$promise},e.prototype.saveform16GenerationRequest=function(e,t,i,n){var o={financialYear:t,password:i,employeeIds:n};return this.form16.save({action:"generate",payGroupId:e},o).$promise},e.prototype.getGenerationStatus=function(e,t){return this.form16.get({action:"getprocessrequest",payGroupId:e,requestId:t}).$promise},e.prototype.saveForm16Settings=function(e,t){return this.form16.save({action:"settings",payGroupId:e},t).$promise},e.prototype.parseForm16AFile=function(e,t,i){return this.form16.save({action:"parse",payGroupId:e,financialYear:t,batchZip:i},{}).$promise},e.prototype.sendMails=function(e,t,i){return this.form16.save({action:"sendemail",payGroupId:e,financialYear:t},i).$promise},e.$inject=["$resource"],e}();t.Form16Service=l;var c=function(){function e(e,t){this.resource=e,this.financeModel=t,this.adminOpsResource=this.resource("/api/payroll/adminops/:groupId/:action/:id",{},{update:{method:"PUT"}})}return e.prototype.incometaxstats=function(e){return this.adminOpsResource.query({action:"incometaxstats",groupId:e}).$promise},e.prototype.currentSalaryStructure=function(e){return this.adminOpsResource.query({action:"currentsalaries",groupId:e}).$promise},e.prototype.getAllEmployeeSalaryDetails=function(e){return this.adminOpsResource.query({action:"employees/all/structure",groupId:e}).$promise},e.prototype.getAllEmployeeComponentsOverride=function(e){return this.adminOpsResource.query({action:"employees/all/ComponentsOverride",groupId:e}).$promise},e.prototype.getBankDetails=function(){var e=this;return this.adminOpsResource.query({action:"bankdetails"}).$promise.then(function(t){return t.map(function(t){return new e.financeModel.Employee(t)})})},e.prototype.getPanDetails=function(){var e=this;return this.adminOpsResource.query({action:"pandetails"}).$promise.then(function(t){return t.map(function(t){return new e.financeModel.Employee(t)})})},e.prototype.getPfAndEsiDetails=function(e){var t=this;return this.adminOpsResource.query({action:"pfandesidetails",groupId:e}).$promise.then(function(e){return e.map(function(e){return new t.financeModel.Employee(e)})})},e.prototype.getAllEmployeePayrollStatus=function(){return this.adminOpsResource.query({action:"employeesPayrollStatus"}).$promise},e.prototype.getPendingEmployeeDeclarations=function(e,t){return this.adminOpsResource.get({action:"tax/pendingdeclarations",groupId:e,year:t}).$promise},e.prototype.getAllEmployeeTDSOverride=function(e,t){return this.adminOpsResource.query({action:"employeesTaxOverride",groupId:e,year:t}).$promise},e.prototype.getAllEmployeeESIOverride=function(e,t){return this.adminOpsResource.query({action:"employeesESIOverride",groupId:e,year:t}).$promise},e.prototype.getAllEmployeePTOverride=function(e,t){return this.adminOpsResource.query({action:"employeesPTaxOverride",groupId:e,year:t}).$promise},e.prototype.getAllEmployeepayGroupDetails=function(){return this.adminOpsResource.query({action:"employeePayGroupDetails/all"}).$promise},e.prototype.getEmployeesPendingBonusPayments=function(e){return this.adminOpsResource.query({action:"pendingbonus",groupId:e}).$promise},e.prototype.deletePendingBonusPayments=function(e,t){return this.adminOpsResource.update({action:"pendingbonus/delete",groupId:e},{bonusPaymentIds:t}).$promise},e.prototype.deletePTOverride=function(e,t){return this.adminOpsResource.save({action:"employeesPTaxOverride/delete",groupId:e},t).$promise},e.prototype.deleteESIOverride=function(e,t){return this.adminOpsResource.save({action:"employeesEsiOverride/delete",groupId:e},t).$promise},e.prototype.deleteTDSOverride=function(e,t){return this.adminOpsResource.save({action:"employeesTaxOverride/delete",groupId:e},t).$promise},e.$inject=["$resource","FinanceModel"],e}();t.PayrolAdminOpsService=c;var p=function(){function e(e){this.resource=e,this.prePayrollReadOnly=this.resource("/api/payroll/:groupId/:action/:cycleId",{},{})}return e.prototype.getleaverequests=function(e,t,i){return this.prePayrollReadOnly.get({action:"leaverequests/"+t+"/"+i,groupId:e}).$promise},e.prototype.getLeaveEncashments=function(e,t){return this.prePayrollReadOnly.query({action:"leaveencashment/readonlyView",cycleId:t,groupId:e}).$promise},e.prototype.getEmployeesLossOfDays=function(e,t){return this.prePayrollReadOnly.query({action:"employeesLossOfDays",cycleId:t,groupId:e}).$promise},e.prototype.getEmployeesLopReversals=function(e,t){return this.prePayrollReadOnly.query({action:"employeesLopReversals/readOnlyView",cycleId:t,groupId:e}).$promise},e.prototype.getNewJoineeOverrides=function(e,t){return this.prePayrollReadOnly.query({action:"newJoineeOverrides/readonlyView",cycleId:t,groupId:e}).$promise},e.prototype.getEmployeesInExitProcessView=function(e,t){return this.prePayrollReadOnly.query({action:"employeeInExitProcess/readonlyView",cycleId:t,groupId:e}).$promise},e.prototype.getEmployeesInSettlementProcessView=function(e,t){return this.prePayrollReadOnly.query({action:"employeeInSettlementProcess/readonlyView",cycleId:t,groupId:e}).$promise},e.prototype.getEmployeeRunsOnHold=function(e,t){return this.prePayrollReadOnly.query({action:"employeesOnHold/readonlyView",cycleId:t,groupId:e}).$promise},e.prototype.getBonusDetails=function(e,t){return this.prePayrollReadOnly.query({action:"bonuses/readonlyView",cycleId:t,groupId:e}).$promise},e.prototype.getSalaryRevisionsDetails=function(e,t){return this.prePayrollReadOnly.query({action:"salaryrevisions/readonlyView",cycleId:t,groupId:e}).$promise},e.prototype.getOnetimetransactions=function(e,t){return this.prePayrollReadOnly.query({action:"onetimetransactions",cycleId:t,groupId:e}).$promise},e.prototype.getExpenses=function(e,t){return this.prePayrollReadOnly.query({action:"Expense/readonlyView",cycleId:t,groupId:e}).$promise},e.prototype.getComponentClaims=function(e,t){return this.prePayrollReadOnly.query({action:"ComponentClaims/readonlyView",cycleId:t,groupId:e}).$promise},e.prototype.getArrears=function(e,t){return this.prePayrollReadOnly.query({action:"arrears",cycleId:t,groupId:e}).$promise},e.$inject=["$resource"],e}();t.PrePayrollReadonlyService=p;var u=function(){function t(e,t,i,n,o,r,a){this._resource=e,this.state=t,this.q=i,this.payrollModel=n,this.dialogs=o,this.appContext=r,this.appFeatures=a,this.paygroups=[],this.hasPayGroupFeature=this.appContext.isFeaturePresent(this.appFeatures.Paygroups.title),this.paygroupsConfig=this._resource("/api/payroll/paygroup/:id/:action",{},{}),this.payrollConfigResource=this._resource("/api/payroll/config/:groupId/:action/",{action:"@action",groupId:"@groupId"},{}),this.getAllPayGroups()}return t.prototype.getAllPayGroups=function(){var t=this;return this.paygroupsConfig.query({action:"all"}).$promise.then(function(i){t.paygroups=i.map(function(t){return new e.Configuration.Model.Paygroup(t)})},function(e){})},t.prototype.getCompleteGroupConfiguration=function(e){return this.q.all([this.getPayGroupConfiguration(e),this.getFinancialYear(e,null),this.getLastFinalizedCycle(e)])},t.prototype.getGroupConfigurationAndFinancialYear=function(e){return this.q.all([this.getPayGroupConfiguration(e),this.getFinancialYear(e,null)])},t.prototype.getGroupConfigurationAndLastFinalizedCycle=function(e){return this.q.all([this.getPayGroupConfiguration(e),this.getLastFinalizedCycle(e)])},t.prototype.getPayGroupConfiguration=function(e){var t=this,i=e?{groupId:e}:{paygroupId:e||""};return this.payrollConfigResource.get(i).$promise.then(function(e){t.payrollConfiguration=new t.payrollModel.PayrollConfiguration(e),t.payrollConfiguration.setupState.complete||t.dialogs.notify("Application notification","Payroll setup is not completed. To run payroll complete the setup.",{keyboard:!1,backdrop:"static"}).result.then(function(){t.hasPayGroupFeature?t.state.go("settings.payroll.paygroup.details",{groupId:t.payrollConfiguration.payGroupId}):t.state.go("settings.payroll")})},function(e){}).catch(function(e){t.dialogs.notify("Application notification","Payroll setup is not completed. To run payroll complete the setup .",{keyboard:!1,backdrop:"static"}).result.then(function(){t.hasPayGroupFeature?t.state.go("settings.payroll.paygroup.details",{groupId:t.payrollConfiguration.payGroupId}):t.state.go("settings.payroll")})})},t.prototype.getLastFinalizedCycle=function(e){var t=this;return this._resource("/api/payroll/:groupId/cycle/finalized/last",{}).get({groupId:e}).$promise.then(function(e){return t.lastFinalizedCycle=e.status?new t.payrollModel.PayrollCycle(e):null})},t.prototype.getFinancialYear=function(e,t){var i=this;return this._resource("/api/payroll/:payGroupId/financialyear",{}).get({payGroupId:e,date:t}).$promise.then(function(e){i.currentFinancialYear=new i.payrollModel.FinancialYear(e)})},t.prototype.getFinancialYearList=function(){for(var e=this.payrollModel.FinancialYear.getFinancialYear(new Date(this.payrollConfiguration.payCycle.kekaStartsFrom)),t=[];!this.currentFinancialYear.includes(e.from);e=e.next())t.push(e);return t.push(this.currentFinancialYear),t},t.$inject=["$resource","$state","$q","PayrollModel","dialogs","AppContext","AppFeatures"],t}();t.PayGroupsAndConfigurationService=u;var d=function(){function e(e){this.onHold=e("/api/payroll/:groupId/cycle/:cycleId/:action",{action:"@action",cycleId:"@cycleId"},{update:{method:"PUT"}})}return e.prototype.getPaymentOnHolds=function(e,t){return this.onHold.query({action:"paymentonhold",groupId:e,cycleId:t}).$promise},e.prototype.getPaymentOnHoldsAfterFinalize=function(e,t){return this.onHold.query({action:"paymentonhold/readonlyView",groupId:e,cycleId:t}).$promise},e.prototype.savePaymentOnHolds=function(e,t,i){return this.onHold.save({action:"paymentonhold",groupId:e,cycleId:t},i).$promise},e.prototype.deletePaymentOnHolds=function(e,t,i){return this.onHold.delete({action:"paymentonhold",groupId:e,cycleId:t,employeeId:i}).$promise},e.prototype.getProcessOnHolds=function(e,t){return this.onHold.query({action:"processonhold",groupId:e,cycleId:t}).$promise},e.prototype.getProcessOnHoldsAfterFinalize=function(e,t){return this.onHold.query({action:"processonhold/readonlyView",groupId:e,cycleId:t}).$promise},e.prototype.saveProcessOnHolds=function(e,t,i){return this.onHold.save({action:"processonhold",groupId:e,cycleId:t},i).$promise},e.prototype.deleteProcessOnHolds=function(e,t,i){return this.onHold.delete({action:"processonhold",groupId:e,cycleId:t,employeeId:i}).$promise},e.prototype.saveNewJoineesPayAction=function(e,t,i){return this.onHold.save({action:"newjoinees/payaction",groupId:e,cycleId:t},i).$promise},e.prototype.saveExitEmployeesPayAction=function(e,t,i){return this.onHold.save({action:"exitemployees/payaction",groupId:e,cycleId:t},i).$promise},e.$inject=["$resource","PayrollModel"],e}();t.PayrollSalryHoldService=d,angular.module("payroll").service("EmployeeBenefitsService",i).service("EmployeePayablesBatchService",n).service("PrePayrollService",s).service("FormDownloadService",a).service("EPFService",o).service("Form16Service",l).service("PayrolAdminOpsService",c).service("PTService",r).service("PrePayrollReadonlyService",p).service("PayGroupsAndConfigurationService",u).service("PayrollSalryHoldService",d)}(e.Services||(e.Services={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){!function(e){var t=function(){function e(e){this.employeeName=e.employeeName,this.employeeNumber=e.employeeNumber,this.effectiveDate=Date.getDateObj(e.effectiveDate),this.terminationReason=e.terminationReason,this.lastWorkingDate=Date.getDateObj(e.lastWorkingDate),this.comments=e.comments,this.status=e.status,this.employeeId=e.employeeId,this.isSelfResign=e.isSelfResign,this.runOnHolds=(e.runOnHolds||[]).map(function(e){return new n(e)}),this.validSalaryAmount=this.runOnHolds.some(function(e){return null==e.totalAmountToPay})?null:0}return Object.defineProperty(e.prototype,"noticePeriod",{get:function(){return Date.noOfDays(this.effectiveDate,this.lastWorkingDate)-1},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"totalSalary",{get:function(){return this.runOnHolds.reduce(function(e,t){return e+t.totalAmountToPay},0)},enumerable:!0,configurable:!0}),e}();e.EmployeesInExitProcessView=t;var i=function(){function e(e){this.employeeName=e.employeeName,this.employeeNumber=e.employeeNumber,this.effectiveDate=Date.getDateObj(e.effectiveDate),this.terminationReason=e.terminationReason,this.lastWorkingDate=Date.getDateObj(e.lastWorkingDate),this.comments=e.comments,this.status=e.status,this.isSelfResign=e.isSelfResign,this.finalAmount=e.finalAmount,this.settledOn=Date.getDateObj(e.settledOn)}return Object.defineProperty(e.prototype,"statusName",{get:function(){return Employee.Models.ExitRequestStatus[this.status]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"noticePeriod",{get:function(){return Date.noOfDays(this.effectiveDate,this.lastWorkingDate)-1},enumerable:!0,configurable:!0}),e}();e.EmployeesInSettlementProcessView=i,function(e){e[e.OnHold=0]="OnHold",e[e.Void=1]="Void",e[e.PayAsArrear=2]="PayAsArrear",e[e.PayAsSalary=3]="PayAsSalary",e[e.PaymentOnHold=4]="PaymentOnHold",e[e.PaymentVoid=5]="PaymentVoid",e[e.ReleasePayment=6]="ReleasePayment",e[e.AlreadyPaid=7]="AlreadyPaid"}(e.PayAction||(e.PayAction={}));var n=function(){function e(e){this.id=e.id,this.employeeId=e.employeeId,this.employeeName=e.employeeName,this.totalAmountToPay=e.totalAmountToPay,this.employeeNumber=e.employeeNumber,this.since=Date.getDateObj(e.since),this.payDate=Date.getDateObj(e.since),this.month=e.month-1,this.year=e.year,this.monthNameYear=e.monthNameYear,this.comments=e.comments,this.payAction=e.payAction,this.releaseOn=Date.getDateObj(e.releaseOn),this.isConvertedToProcessOnHold=e.isConvertedToProcessOnHold,this.isPaymentOnHold=e.isPaymentOnHold,this.isHoldForCurrentCycle=e.isHoldForCurrentCycle}return e.prototype.toJSON=function(){var e={since:this.since.dateOnlyString(),payDate:this.payDate?this.payDate.dateOnlyString():null,releaseOn:this.releaseOn?this.releaseOn.dateOnlyString():null};return Object.assign({},this,e)},e}();e.EmployeeOnHoldView=n;var o=function(e){function t(t){var i=e.call(this,t)||this;return i.dateJoined=Date.getDateObj(t.dateJoined),i.panNumber=t.panNumber,i.regularSalary=t.regularSalary,i.payableDays=t.payableDays,i.actualDays=t.actualDays,i.noSalaryDays=t.noSalaryDays,i.documents=[{name:"Bank Account",isValid:t.bankDetailsValid},{name:"PAN Number",isValid:t.panDetailsValid}],i}return __extends(t,e),t.prototype.salaryForThisMonth=function(){var e=0!=this.actualDays?this.regularSalary/this.actualDays:0;return Math.round(this.payableDays*e)},t.prototype.toJSON=function(){return this},t}(n);e.NewJoineeDetails=o;var r=function(){return function(e){this.employeeName=e.employeeName,this.employeeId=e.employeeId,this.employeeNumber=e.employeeNumber,this.amount=e.amount}}();e.Arrears=r;var a=function(){return function(e){this.employeeNumber=e.employeeNumber,this.employeeName=e.employeeName,this.employeeId=e.employeeId,this.currentGrossAmount=e.currentGrossAmount,this.currentPayableDays=e.currentPayableDays,this.currentLOPDays=e.currentLOPDays,this.previousGrossAmount=e.previousGrossAmount,this.previousPayableDays=e.previousPayableDays,this.previousLOPDays=e.previousLOPDays,this.reason=e.reason.join(","),this.previousMonth=e.previousMonth,this.currentMonth=e.currentMonth,this.grossDifference=e.grossDifference,this.grossChange=e.grossChange,this.compareHeads=e.compareHeads}}();e.ReviewGridRow=a;var s=function(){return function(e){this.id=e.id,this.employeeId=e.employeeId,this.requestedBy={employeeId:e.employeeId,displayName:e.displayName,profileImage:e.profileImage,employeeNumber:e.employeeNumber},this.fromDate=e.fromDate,this.toDate=e.toDate,this.days=e.days,this.leaveType=e.leaveTypes,this.leaveRequestType=e.leaveRequestType,this.selection=e.selection,this.documentProofs=e.documentProofs,this.note=e.note,this.status=e.status,this.approverName=e.approverName,this.commentIdentifier=e.commentIdentifier,this.teamCount=e.teamCount,this.deductionType=e.deductionType,this.deductionCausingDates=e.deductionCausingDates,this.reportingTo=e.reportingTo}}();e.RequestDetail=s,e.SalaryPayAction=[{title:"Hold salary processing this month",id:e.PayAction.OnHold,description:"Employee will be excluded from current month’s payroll processing."},{title:"Process as salary",id:e.PayAction.PayAsSalary,description:"Salary will be processed in current month but will appear under actual month (it was supposed to be processed).  Also salary slip will be generated  and displayed under the actual month."},{title:"Process as arrears ",id:e.PayAction.PayAsArrear,description:"Salary will be processed as an arrear with the current month, i.e. the processing of salary will be considered under current month and not the actual month.  No separate payslip will be generated for the actual month, and the arrear will appear only in current month’s payslip."},{title:"Void salary processing",id:e.PayAction.Void,description:"Salary processing will be discarded"},{title:"Hold salary payout this month",id:e.PayAction.PaymentOnHold,description:"Employee’s salary payout will be on hold"},{title:"Release salary payout",id:e.PayAction.ReleasePayment,description:"Release salary payout"},{title:"Void Salary payout",id:e.PayAction.PaymentVoid,description:"Void Salary payout"},{title:"Already Paid",id:e.PayAction.AlreadyPaid,description:"Already Paid"}];var l=function(){return function(e){this.id=e.id,this.employeeId=e.employeeId,this.cycleId=e.cycleId,this.unitType=e.unitType,this.units=e.units,this.commentIdentifier=e.commentIdentifier}}();e.EmployeePayUnitsOverride=l;var c=function(e){function t(t){var i=e.call(this,t)||this;return i.employeeNumber=t.employeeNumber,i.displayName=t.displayName,i.actualUnits=t.actualUnits,i}return __extends(t,e),t}(l);e.EmployeePayUnitsOverrideView=c,function(e){e[e.Day=0]="Day",e[e.Hour=1]="Hour"}(e.PayUnit||(e.PayUnit={}))}(e.Model||(e.Model={}))}(e.PrePayroll||(e.PrePayroll={}))}(Payroll||(Payroll={})),function(e){!function(t){var i=function(){function i(e,i,n,o,r,a,s,l,c,p,u,d,m){var y=this;this.appSettings=i,this.modelInstance=n,this._q=o,this._filter=r,this.notificationService=a,this.PublicProfileServices=s,this.SharedModel=l,this.payrollService=c,this.payrollSalaryStructureService=p,this.$uibModal=u,this.payrollSalryHoldService=d,this.dialogs=m,this.steps=[],this.employeesOnHold=[],this.isNewOnhold=!1,this.employeesOnHoldView=[],this.arrears=[],this.step1Init=function(){y.payrollSalryHoldService.getProcessOnHolds(y.payrollConfig.payGroupId,y.currentcycle.id).then(function(e){y.employeesOnHold=e.map(function(e){return new t.Model.EmployeeOnHoldView(e)}),y.setOnHoldView()},function(e){y.notificationService.error("An Error occured while featching process on holds")})},this.step2Init=function(){y.payrollSalryHoldService.getPaymentOnHolds(y.payrollConfig.payGroupId,y.currentcycle.id).then(function(e){y.employeesOnHold=e.map(function(e){return new t.Model.EmployeeOnHoldView(e)}),y.setOnHoldView()},function(e){y.notificationService.error("Error ocuured while feaching the Payment On-Hold details")})},this.step3Init=function(){y.payrollService.arrears.query({groupId:y.payrollConfig.payGroupId,cycleId:y.currentcycle.id},function(e){y.arrears=e.map(function(e){return new t.Model.Arrears(e)})},function(e){})},this.currentcycle=e.cycle,this.payrollConfig=e.payrollConfig,this.action=e.action,this.scrollSettings=angular.copy(this.appSettings.scrollSettings),this.payTypes=t.Model.SalaryPayAction,this.init()}return i.prototype.init=function(){this.steps=[new SharedModel.Step(1,"Salary processing on hold","","employees-on-hold",!1,this.step1Init),new SharedModel.Step(2,"Salary payout on hold","","employees-payment-on-hold",!1,this.step2Init),new SharedModel.Step(3,"Arrears","","arrears",!1,this.step3Init)],this.currentStep=this.steps[0],this.currentStep.init()},i.prototype.setOnHoldView=function(){var e=this;this.employeesOnHoldView=[],this.employeesOnHold=this._filter("orderBy")(this.employeesOnHold,["employeeId"]),this.employeesOnHold.forEach(function(t){var i=e.employeesOnHoldView.length-1;if(e.employeesOnHoldView.length>0&&e.employeesOnHoldView[i].employeeId==t.employeeId)e.employeesOnHoldView[i].onholdsCount+=1,e.employeesOnHoldView[i].totalAmountToPay+=t.totalAmountToPay,e.employeesOnHoldView[i].onholds.push(t);else{var n={};n.employeeId=t.employeeId,n.onholdsCount=1,n.employeeName=t.employeeName,n.totalAmountToPay=t.totalAmountToPay,n.onholds=[],n.employeeNumber=t.employeeNumber,n.onholds.push(t),e.employeesOnHoldView.push(n)}})},i.prototype.addOnHoldView=function(e){var t=this.employeesOnHoldView.find(function(t){return t.employeeId==e.employeeId});if(t)t.onholdsCount+=1,t.totalAmountToPay+=e.totalAmountToPay,t.onholds.push(e),t.employeeNumber=e.employeeNumber,t.hide=!1;else{var i={};i.employeeId=e.employeeId,i.onholdsCount=1,i.employeeName=e.employeeName,i.employeeNumber=e.employeeNumber,i.totalAmountToPay=e.totalAmountToPay,i.onholds=[],i.onholds.push(e),this.employeesOnHoldView.unshift(i)}},i.prototype.gotoStep=function(e){var t=this.steps.find(function(t){return t.index==e-1});(!t||t&&t.valid)&&(this.currentStep=this.steps.find(function(t){return t.index==e}),this.initStep(),this.currentStep.init())},i.prototype.initStep=function(){this.employeesOnHold=[],this.employeesOnHoldView=[],this.employee=null},i.prototype.closeModal=function(){this.modelInstance.close(this.action)},i.prototype.saveAndClose=function(e){this.action.completed=e,this.closeModal()},i.prototype.getPayTypes=function(e){return e.isPaymentOnHold||e.isConvertedToProcessOnHold?e.isHoldForCurrentCycle?e.isConvertedToProcessOnHold?this.payTypes.filter(function(e){return e.id==t.Model.PayAction.PaymentOnHold||e.id==t.Model.PayAction.PaymentVoid||e.id==t.Model.PayAction.AlreadyPaid||e.id==t.Model.PayAction.OnHold}):this.payTypes.filter(function(e){return e.id==t.Model.PayAction.PaymentOnHold||e.id==t.Model.PayAction.PaymentVoid||e.id==t.Model.PayAction.AlreadyPaid}):this.payTypes.filter(function(e){return e.id>=t.Model.PayAction.PaymentOnHold}):e.isHoldForCurrentCycle?this.payTypes.filter(function(e){return e.id<t.Model.PayAction.PaymentOnHold&&e.id!=t.Model.PayAction.PayAsArrear}):this.payTypes.filter(function(e){return e.id<=t.Model.PayAction.PaymentOnHold})},i.prototype.searchEmployees=function(e){var t=this;if(e&&e.length>=2){var i=this._q.defer();return this.payrollService.searchEmployees(this.payrollConfig.payGroupId,this.currentcycle.id,e).then(function(e){0==(e=e.filter(function(e){return!t.employeesOnHold.find(function(i){return i.employeeId==e.id&&i.month==t.currentcycle.month&&i.year==t.currentcycle.year})})).length&&e.push({noResults:!0}),i.resolve(e)}),i.promise}},i.prototype.resetNewEmployeeOnhold=function(){this.employee=null,this.isNewOnhold=!1},i.prototype.addEmployeeOnHold=function(){var e=this,i=this.employeesOnHold.find(function(t){return t.employeeId==e.employee.id&&t.month==e.currentcycle.month&&t.year==e.currentcycle.year});this.employee.noResults||i?this.resetNewEmployeeOnhold():this.payrollSalaryStructureService.getSalaryStructure(this.employee.id).then(function(n){n&&(i=new t.Model.EmployeeOnHoldView({employeeId:e.employee.id,employeeName:e.employee.displayName,employeeNumber:e.employee.employeeNumber,totalAmountToPay:n.getMonthlySalary(),month:e.currentcycle.month+1,year:e.currentcycle.year,isHoldForCurrentCycle:!0,monthNameYear:e.currentcycle.toSummary(),payAction:t.Model.PayAction.OnHold,since:e.currentcycle.to.dateOnlyString()}),e.employeesOnHold.unshift(i),e.addOnHoldView(i))},function(t){e.notificationService.error(t.data.message)}).finally(function(){e.resetNewEmployeeOnhold()})},i.prototype.saveProcessOnHolds=function(){var e=this;this.payrollSalryHoldService.saveProcessOnHolds(this.payrollConfig.payGroupId,this.currentcycle.id,this.employeesOnHold).then(function(t){e.employeesOnHold.length>0&&e.notificationService.success("Employees on hold Saved Successfully."),e.currentStep.valid=!0,e.gotoStep(e.currentStep.index+1)},function(t){e.notificationService.error(t.data.message)})},i.prototype.showPreviousComments=function(e){this.$uibModal.open({templateUrl:"comments-history",windowClass:"small-btn",controller:"PayrollCommentHistoryController as vm",resolve:{comments:function(){return e.comments},employeeName:function(){return e.employeeName}}})},i.prototype.savePaymentOnholds=function(){var e=this;this.payrollSalryHoldService.savePaymentOnHolds(this.payrollConfig.payGroupId,this.currentcycle.id,this.employeesOnHold).then(function(t){e.employeesOnHold.length>0&&e.notificationService.success("Payment On Hold Saved successfully"),e.currentStep.valid=!0,e.gotoStep(e.currentStep.index+1)},function(t){e.notificationService.error(t.data.message)})},i.prototype.addPaymentEmployeeOnHold=function(){var i=this,n=this.employeesOnHold.find(function(e){return e.employeeId==i.employee.id&&e.month==i.currentcycle.month&&e.year==i.currentcycle.year});this.employee.noResults||n||(n=new e.PrePayroll.Model.EmployeeOnHoldView({employeeId:this.employee.id,employeeName:this.employee.displayName,employeeNumber:this.employee.employeeNumber,month:this.currentcycle.month+1,year:this.currentcycle.year,isHoldForCurrentCycle:!0,monthNameYear:this.currentcycle.toSummary(),payAction:t.Model.PayAction.PaymentOnHold,isPaymentOnHold:!0,since:this.currentcycle.to.dateOnlyString()}),this.employeesOnHold.unshift(n),this.addOnHoldView(n)),this.resetNewEmployeeOnhold()},i.prototype.deleteOnHold=function(e){var t=this,i=1==this.currentStep.index?" Process":" Payment";this.dialogs.confirm("Please confirm","Are you sure you want to delete "+e.employeeName+i+" OnHold ?").result.then(function(){e.id?(t.notificationService.information(e.employeeName+i+" OnHold deleting.."),(1==t.currentStep.index?t.payrollSalryHoldService.deleteProcessOnHolds(t.payrollConfig.payGroupId,t.currentcycle.id,e.employeeId):t.payrollSalryHoldService.deletePaymentOnHolds(t.payrollConfig.payGroupId,t.currentcycle.id,e.employeeId)).then(function(n){n.isDeleted&&(t.removeOnHold(e),t.notificationService.success(e.employeeName+i+" OnHold deleted successfully"))},function(e){t.notificationService.error(e.data.message)})):(t.removeOnHold(e),t.notificationService.success(e.employeeName+i+" OnHold deleted successfully"))})},i.prototype.removeOnHold=function(e){this.employeesOnHold=this.employeesOnHold.filter(function(t){return!(t.employeeId==e.employeeId&&t.year==e.year&&t.month==e.month)}),this.setOnHoldView()},i.$inject=["payrollData","AppSettings","$uibModalInstance","$q","$filter","NotificationService","PublicProfileServices","SharedModel","PayrollService","PayrollSalaryStructureService","$uibModal","PayrollSalryHoldService","dialogs"],i}();t.PayrollEmployeesOnHoldAndArrears=i;var n=function(){function t(t,i,n,o,r,a,s,l,c){var p=this;this.modelInstance=t,this._filter=i,this.timeout=n,this.appSettings=o,this.notificationService=r,this.payrollService=s,this.prePayrollService=l,this.dialogs=c,this.releasePayslip=!1,this.selectedEmployees=[],this.bulkPaySlipGenerationStatus=e.Model.BulkPaySlipGenerationStatus,this.isBulkPaySlipGenerating=!1,this.generationStatusTimer=null,this.oneMinuteBreakDown=0,this.setGridApi=function(e){p.gridApi=e,p.gridApi.selection.on.rowSelectionChanged(null,function(e){p.selectedEmployees=p.gridApi.selection.getSelectedRows()}),p.gridApi.selection.on.rowSelectionChangedBatch(null,function(e){p.selectedEmployees=p.gridApi.selection.getSelectedRows()})},this.currentCycle=a.cycle,this.payrollConfig=a.payrollConfig,this.releasePayslip=this.currentCycle.isPayslipReleased,this.mailHistory=this.currentCycle.payslipMailHistory,this.initializeGridSettings(),this.getPayslipEmployees()}return t.prototype.getPayslipEmployees=function(){var e=this;this.prePayrollService.getPayslipEmployees(this.payrollConfig.payGroupId,this.currentCycle.id).then(function(t){e.payslipEmployees=t.payslipEmployees,e.bulkPaySlipDetails=t.paySlipGenerationDetails,e.lastMailSendLog=t.lastMailSendLog,e.isBulkPaySlipGenerating=e.isBulkPaySlipGenerating||t.paySlipGenerationDetails.generationStatus==e.bulkPaySlipGenerationStatus.requested||t.paySlipGenerationDetails.generationStatus==e.bulkPaySlipGenerationStatus.inProgress,e.isBulkPaySlipGenerating&&(e.generationStatusTimer=e.timeout(function(){e.getPayslipsGenerationdetails()},3e4))})},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.columnDefs=[{field:"employeeNumber",cellClass:"ui-grid-cell",displayName:"Employee Number"},{field:"employeeName",cellClass:"ui-grid-cell",displayName:"Employee Name"},{field:"netPay",cellClass:"ui-grid-cell",displayName:"Net Pay Amount",cellFilter:'currency: ""'},{field:"monthName",cellClass:"ui-grid-cell",displayName:"Payslip Month"}],this.gridOptions.rowHeight=40,this.gridOptions.data="ctrl.payslipEmployees |  filter:  ctrl.search",this.gridOptions.appScopeProvider=this,this.gridOptions.multiSelect=!0,this.gridOptions.onRegisterApi=this.setGridApi},t.prototype.sendPayslipEmail=function(){var e=this;this.selectedEmployees&&this.selectedEmployees.length>0?this.dialogs.confirm("Please confirm","Are you sure you want to send payslip email to selected employees ?").result.then(function(){e.sendInprogress=!0,e.prePayrollService.sendPayslipMail(e.payrollConfig.payGroupId,e.currentCycle.id,e.selectedEmployees).then(function(t){e.lastMailSendLog=t,e.notificationService.success("Email has been sent to selected employees."),e.sendInprogress=!1},function(t){e.notificationService.error("Error while sending email."),e.sendInprogress=!1})}):this.notificationService.error("Please select atleast one employee.")},t.prototype.savePayslipStatus=function(){var e=this;this.prePayrollService.updatePayslipStatus(this.payrollConfig.payGroupId,this.currentCycle.id,this.releasePayslip).then(function(t){e.notificationService.success("Payslip staus saved successfully."),e.modelInstance.close({isUpdated:!0,isPaySlipReleased:e.releasePayslip}),e.timeout.cancel(e.generationStatusTimer)},function(t){e.notificationService.error("Error while saving payslip status.")})},t.prototype.generationBulkPaySlip=function(){var e=this;this.dialogs.confirm("Please confirm","Are you sure you want to generate bulk payslips ?").result.then(function(){e.getPayslipsGenerationdetails()})},t.prototype.close=function(){this.modelInstance.dismiss(),this.timeout.cancel(this.generationStatusTimer)},t.prototype.getPayslipsGenerationdetails=function(){var e=this;this.bulkPaySlipDetails.generationStatus=this.bulkPaySlipGenerationStatus.inProgress,this.prePayrollService.getPayslipsGenerationStatus(this.payrollConfig.payGroupId,this.currentCycle.id).then(function(t){e.isBulkPaySlipGenerating=!1,e.bulkPaySlipDetails=t,e.isBulkPaySlipGenerating=e.isBulkPaySlipGenerating||e.bulkPaySlipDetails.generationStatus==e.bulkPaySlipGenerationStatus.requested||e.bulkPaySlipDetails.generationStatus==e.bulkPaySlipGenerationStatus.inProgress,e.isBulkPaySlipGenerating&&(e.oneMinuteBreakDown+=1e4,e.generationStatusTimer=e.timeout(function(){e.getPayslipsGenerationdetails()},1e4)),(e.oneMinuteBreakDown>6e4||!e.isBulkPaySlipGenerating)&&e.timeout.cancel(e.generationStatusTimer)},function(t){e.bulkPaySlipDetails.generationStatus=e.bulkPaySlipGenerationStatus.none,e.notificationService.error("Error While Processing Bulk Payslips Generation."),e.timeout.cancel(e.generationStatusTimer)})},t.$inject=["$uibModalInstance","$filter","$timeout","AppSettings","NotificationService","payrollData","PayrollService","PrePayrollService","dialogs"],t}();t.ManagePayslipsController=n;var o=function(){function e(e,i,n,o,r,a,s,l){var c=this;this.modelInstance=i,this._filter=n,this.notificationService=o,this.SharedModel=r,this.payrollService=a,this.$uibModal=s,this.payrollSalryHoldService=l,this.steps=[],this.newJoinees=[],this.inExitProcessView=[],this.exitsInApprovalProcess=[],this.inSettlementProcess=[],this.exitRequestStatus=Employee.Models.ExitRequestStatus,this.newJoineesInit=function(){c.payrollService.newjoinees.query({groupId:c.groupId,cycleId:c.currentcycle.id},function(e){c.newJoinees=e.map(function(e){return new t.Model.NewJoineeDetails(e)}),c.newJoinees=c._filter("orderBy")(c.newJoinees,["dateJoined"])},function(e){c.notificationService.error("")})},this.inExitProcessInit=function(){c.payrollService.employeeInExitProcess.query({groupId:c.groupId,cycleId:c.currentcycle.id},function(e){c.inExitProcessView=(e||[]).map(function(e){return new t.Model.EmployeesInExitProcessView(e)})},function(e){c.notificationService.error("")}),c.payrollService.employeeInExitApprovalProcess.query({groupId:c.groupId,cycleId:c.currentcycle.id},function(e){c.exitsInApprovalProcess=e||[]})},this.inSettlementProcessInit=function(){c.payrollService.employeeInSettlementProcess.query({groupId:c.groupId,cycleId:c.currentcycle.id},function(e){c.inSettlementProcess=(e||[]).map(function(e){return new t.Model.EmployeesInSettlementProcessView(e)})},function(e){c.notificationService.error("")})},this.updateCommentDetails=function(e){e.comments||(e.comments=[]),e.comments[e.comments.length-1].commentedOn=new Date,e.comments[e.comments.length-1].commentedInCycle=c.currentcycle.id},this.currentcycle=e.cycle,this.groupId=e.groupId,this.action=e.action,this.payTypes=t.Model.SalaryPayAction,this.init()}return e.prototype.init=function(){this.steps=[new SharedModel.Step(1,"New Joinees","newJoinees","new-joinees",!1,this.newJoineesInit),new SharedModel.Step(2,"Employee in Exit Process","employeeInExitProcess","pending-employee-exit",!0,this.inExitProcessInit),new SharedModel.Step(3,"Full & Final Settlement","fullSettlement","exit-final-settlement",!0,this.inSettlementProcessInit)],this.currentStep=this.steps[0],this.currentStep.init()},e.prototype.closeModal=function(){this.modelInstance.close(this.action)},e.prototype.getPayTypes=function(e){return 1==this.currentStep.index?this.payTypes.filter(function(e){return e.id!=t.Model.PayAction.ReleasePayment&&e.id!=t.Model.PayAction.PayAsArrear}):e.year==this.currentcycle.year&&e.month==this.currentcycle.month?this.payTypes.filter(function(e){return e.id!=t.Model.PayAction.ReleasePayment&&e.id!=t.Model.PayAction.PayAsArrear}):e.isPaymentOnHold?this.payTypes.filter(function(e){return e.id!=t.Model.PayAction.OnHold&&e.id!=t.Model.PayAction.PayAsArrear&&e.id!=t.Model.PayAction.PayAsSalary&&e.id!=t.Model.PayAction.Void}):this.payTypes.filter(function(e){return e.id!=t.Model.PayAction.ReleasePayment})},e.prototype.saveNewJoinees=function(){var e=this;this.newJoinees.length>0?this.form.newJoinee.$valid?(this.notificationService.information("Saving employee details"),this.payrollSalryHoldService.saveNewJoineesPayAction(this.groupId,this.currentcycle.id,this.newJoinees).then(function(t){e.notificationService.success("Employee details added successfully"),e.currentStep.valid=!0,e.gotoStep(e.currentStep.index+1)},function(t){e.notificationService.error("Error in addding details")})):this.notificationService.error("Please fill all the fields"):(this.currentStep.valid=0==this.newJoinees.length,this.gotoStep(this.currentStep.index+1))},e.prototype.saveEmployeeRun=function(){var e=this;if(this.inExitProcessView.length>0)if(this.form.inExitProcessForm.$valid){var t=[];this.inExitProcessView.forEach(function(e){e.runOnHolds.forEach(function(e){return t.push(e)})}),this.payrollSalryHoldService.saveExitEmployeesPayAction(this.groupId,this.currentcycle.id,t).then(function(t){e.notificationService.success("Employee details added successfully"),e.currentStep.valid=!0,e.gotoStep(e.currentStep.index+1)},function(t){e.notificationService.error("Error in addding details")})}else this.notificationService.error("Please fill all the fields");else this.currentStep.valid=0==this.inExitProcessView.length,this.gotoStep(this.currentStep.index+1)},e.prototype.saveAndClose=function(e){this.action.completed=e,this.gotoStep(this.currentStep.index+1)},e.prototype.gotoStep=function(e){var t=this.steps.find(function(t){return t.index==e-1});if(!t||t&&t.valid){var i=this.steps.find(function(t){return t.index==e});i?(this.currentStep=i,this.currentStep.init()):this.closeModal()}},e.prototype.showPreviousComments=function(e){this.$uibModal.open({templateUrl:"comments-history",controller:"PayrollCommentHistoryController as vm",resolve:{comments:function(){return e.comments},employeeName:function(){return e.employeeName}}})},e.$inject=["payrollData","$uibModalInstance","$filter","NotificationService","SharedModel","PayrollService","$uibModal","PayrollSalryHoldService"],e}();t.PayrollEmployeeChangesController=o;var r=function(){function e(e,i,n,o,r,a,s,l,c,p,u){var d=this;this.appSettings=i,this.$uibModal=n,this.$uibModalInstance=o,this.uiGridConstants=r,this.uiGridGroupingConstants=a,this.UiGridExtensions=s,this.$scope=l,this.$timeout=c,this.PrePayrollService=p,this.EmployeePayrollCycleRunStatus=u,this.steps=[],this.step1Init=function(){d.initGridSettings(),d.currentCycle.isRunHappened&&(d.PrePayrollService.getEmployeePayreviews(d.payrollConfig.payGroupId,d.currentCycle.id).then(function(e){d.reviewData=e.reviewDetails.map(function(e){return new t.Model.ReviewGridRow(e)}),d.reviewData.length>0&&(d.currentMonth=d.reviewData[0].currentMonth,d.previousMonth=d.reviewData[0].previousMonth)},function(e){d.reviewData=[]}),d.reviewGridOptions.data="vm.reviewData | filter : vm.searchText")},this.step2Init=function(){d.initNotProcessedGridSettings(),d.currentCycle.isRunHappened&&(d.PrePayrollService.getNotProcessedEmployees(d.payrollConfig.payGroupId,d.currentCycle.id).then(function(e){d.notProceesedEmployees=e.map(function(e){return e.status=d.EmployeePayrollCycleRunStatus.getById(e.status).title,e.warnings=e.logs.filter(function(e){return e.startsWith("##[Warning]")}).map(function(e){return e.replace("##[Warning]:","")}),e.info=e.logs.filter(function(e){return e.startsWith("##[Info]")}).map(function(e){return e.replace("##[Info]:","")}),e})},function(e){d.notProceesedEmployees=[]}),d.notProceesedGridOptions.data="vm.notProceesedEmployees | filter : vm.searchText")},this.currentCycle=e.cycle,this.action=e.action,this.payrollConfig=e.payrollConfig,this.init()}return e.prototype.init=function(){this.steps=[new SharedModel.Step(1,"Net Salary Review","","net-Salary-review",!0,this.step1Init),new SharedModel.Step(2,"Unprocessed Salaries","","employees-not-Processed",!1,this.step2Init)],this.currentStep=this.steps[0],this.currentStep.init()},e.prototype.initGridSettings=function(){var e=this;this.reviewGridOptions=angular.copy(this.appSettings.gridSettings),this.reviewGridOptions.showColumnFooter=!0,this.reviewGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",width:150},{field:"employeeName",displayName:"Employee Name",cellTemplate:"<div class='ui-grid-cell-contents name'><a target='_blank' ui-sref='employee.finances.summary({ id:row.entity.employeeId})'><b>{{row.entity.employeeName}}</b></a></div>",enableGrouping:!1},{field:"previousGrossAmount",displayName:"Gross Pay",cellFilter:'currency: ""',type:"number",width:120,headerCellTemplate:"<div class='ui-grid-cell-contents over-header' ng-class=\"{ 'sortable': sortable }\"aria-sort=\"{{col.sort.direction == asc ? 'ascending' : ( col.sort.direction == desc ? 'descending' : (!col.sort.direction ? 'none' : 'other'))}}\""+'><div class="over-header-content" style="width: {{120 + 120 + 1}}px">{{grid.appScope.vm.previousMonth}}</div><span class="ui-grid-header-cell-label">{{ col.displayName CUSTOM_FILTERS }}</span></div><div role="button" tabindex="0" ui-grid-one-bind-id-grid="col.uid + \'-menu-button\'"class="ui-grid-column-menu-button"ng-if="grid.options.enableColumnMenus && !col.isRowHeader && col.colDef.enableColumnMenu !== false"ng-click="toggleMenu($event)" ng-class="{\'ui-grid-column-menu-button-last-col\': isLastCol}"><i class="ui-grid-icon-angle-down node" aria-hidden="true"></i></div>',treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.UiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"previousPayableDays",displayName:"Payable days",type:"number",width:120,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.UiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"previousLOPDays",displayName:"LOP Days",type:"number",width:100,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.UiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"currentGrossAmount",displayName:"Gross Pay",cellFilter:'currency: ""',type:"number",width:120,headerCellTemplate:"<div class='ui-grid-cell-contents over-header' ng-class=\"{ 'sortable': sortable }\"aria-sort=\"{{col.sort.direction == asc ? 'ascending' : ( col.sort.direction == desc ? 'descending' : (!col.sort.direction ? 'none' : 'other'))}}\""+'><div class="over-header-content" style="width: {{120 + 120 + 1}}px">{{grid.appScope.vm.currentMonth}}</div><span class="ui-grid-header-cell-label">{{ col.displayName CUSTOM_FILTERS }}</span></div><div role="button" tabindex="0" ui-grid-one-bind-id-grid="col.uid + \'-menu-button\'"class="ui-grid-column-menu-button"ng-if="grid.options.enableColumnMenus && !col.isRowHeader && col.colDef.enableColumnMenu !== false"ng-click="toggleMenu($event)" ng-class="{\'ui-grid-column-menu-button-last-col\': isLastCol}"><i class="ui-grid-icon-angle-down node" aria-hidden="true"></i></div>',treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.UiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"currentPayableDays",displayName:"Payable days",type:"number",width:120,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.UiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"currentLOPDays",displayName:"LOP Days",type:"number",width:100,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.UiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"grossChange",displayName:"% Change",cellTemplate:"<div class='ui-grid-cell-contents' data-ng-class=\" row.entity.grossChange > 0 ? 'non-deduction' : row.entity.grossChange < 0 ? 'deduction' : '' \">{{row.entity.grossChange}}</div>",sort:{direction:this.uiGridConstants.ASC,priority:1},sortingAlgorithm:this.absSortingFcn,width:90,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.UiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{name:"reason",displayName:"Reason",enableSort:!1,enableGrouping:!1},{name:"details",cellTemplate:"<div class='ui-grid-cell-contents'><span class='node add-link' data-ng-click='grid.appScope.vm.getCompareStructures(row.entity)'>View details</span></div>",enableSort:!1,width:150,enableGrouping:!1}]},e.prototype.initCompareGridSettings=function(){this.compareGridSettings=angular.copy(this.appSettings.gridSettings),this.compareGridSettings.showColumnFooter=!0,this.compareGridSettings.columnDefs=[{field:"componentTitle",displayName:"Salary Break up",width:"45%",enableGrouping:!1},{field:"previousAmount",displayName:this.currentStructureDetails.previousMonth,type:"number",cellFilter:'currency: ""',treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=this.grid.appScope.vm.currentStructureDetails.previousGrossAmount},groupingShowGroupingMenu:!1},{field:"currentAmount",displayName:this.currentStructureDetails.currentMonth,type:"number",cellFilter:'currency: ""',treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=this.grid.appScope.vm.currentStructureDetails.currentGrossAmount},groupingShowGroupingMenu:!1},{field:"changeDifference",displayName:"Change",type:"number",cellFilter:'currency: ""',sort:{direction:this.uiGridConstants.ASC},sortingAlgorithm:this.absSortingFcn,enableGrouping:!1},{field:"change",displayName:"Change %",cellTemplate:"<div class='ui-grid-cell-contents' data-ng-class=\" row.entity.change > 0 ? 'non-deduction' : row.entity.change < 0 ? 'deduction' : '' \">{{row.entity.change + \"%\"}}</div>",sort:{direction:this.uiGridConstants.ASC},enableGrouping:!1}]},e.prototype.initNotProcessedGridSettings=function(){this.notProceesedGridOptions=angular.copy(this.appSettings.gridSettings),this.notProceesedGridOptions.showColumnFooter=!0,this.notProceesedGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",width:150},{field:"employeeName",displayName:"Employee Name",cellTemplate:"<div class='ui-grid-cell-contents name'><a target='_blank' ui-sref='employee.finances.summary({ id:row.entity.employeeId})'><b>{{row.entity.employeeName}}</b></a></div>",enableGrouping:!1,cellTooltip:!0},{field:"monthName",displayName:"Month Name",width:100},{field:"status",displayName:"Status",width:100},{field:"errorMessage",displayName:"Error Message",headerTooltip:!0,cellTooltip:!0},{field:"logs",width:180,displayName:"Logs",cellTemplate:'<div class="ui-grid-cell-contents"><a class="horizontal-margin-right" data-ng-if="row.entity.warnings.length > 0" uib-popover-template="\'payrollwarningslogs\'" popover-append-to-body="true" popover-class="on-modal-zindex" popover-trigger="outsideClick" popover-placement="top">{{row.entity.warnings.length }} Warnings</a> <a class="horizontal-margin-right" data-ng-if="row.entity.info.length > 0" uib-popover-template="\'payrollinfologs\'" popover-append-to-body="true" popover-class="on-modal-zindex" popover-trigger="outsideClick" popover-placement="top">{{row.entity.info.length }} Info</a><span data-ng-if="row.entity.info.length == 0 && row.entity.warnings.length == 0" > No logs</span > </div>'}]},e.prototype.absSortingFcn=function(e,t,i,n,o){var r=Math.abs(e),a=Math.abs(t);return r==a?0:r>a?-1:1},e.prototype.closeModal=function(){this.$uibModalInstance.close(this.action)},e.prototype.getCompareStructures=function(e){var t=this;this.compareModalInstance=this.$uibModal.open({templateUrl:"structureCompare",scope:this.$scope,windowClass:"structure-compare",backdrop:"static"}),this.currentStructureDetails=e,this.initCompareGridSettings(),this.compareGridSettings.data=this.currentStructureDetails.compareHeads,this.compareModalInstance.rendered.then(function(){t.$timeout(function(){window.dispatchEvent(new Event("resize"))},500)})},e.prototype.closeCompare=function(){this.compareModalInstance.close(),this.compareGridSettings=angular.copy(this.appSettings.gridSettings)},e.prototype.gotoStep=function(e){var t=this.steps.find(function(t){return t.index==e-1});(!t||t&&t.valid)&&(this.currentStep=this.steps.find(function(t){return t.index==e}),this.currentStep.init())},e.prototype.saveAndClose=function(e){this.action.completed=e,this.closeModal()},e.$inject=["payrollData","AppSettings","$uibModal","$uibModalInstance","uiGridConstants","uiGridGroupingConstants","UiGridExtensions","$scope","$timeout","PrePayrollService","EmployeePayrollCycleRunStatus"],e}();t.PayrollReviewAllEmployeesController=r;var a=function(){function e(e,t,i,n,o,r,a,s,l,c){var p=this;this.$scope=e,this.$filter=t,this.$uibModalInstance=i,this.appSettings=n,this.NotificationService=o,this.PayrollService=r,this.PayrollSalaryStructureService=a,this.payrollData=s,this.$uibModal=l,this.PayrollModel=c,this.steps=[],this.model={},this.initializeBonusDetails=function(){p.model={},p.model.bonusDetailsView=[],p.bonusSubmitted=!1,p.PayrollService.bonusDetails.query({groupId:p.groupId,cycleId:p.currentCycle.id},function(e){p.model.bonusDetails=e.map(function(e){return new p.PayrollModel.BonusDetails(e,p.currentCycle)}),p.model.bonusDetails=p.$filter("orderBy")(p.model.bonusDetails,["employeeId"]),p.model.bonusDetails.forEach(function(e){var t=p.model.bonusDetailsView.length-1;if(p.model.bonusDetailsView.length>0&&p.model.bonusDetailsView[t].employeeId==e.employeeId)p.model.bonusDetailsView[t].amount+=e.amount,p.model.bonusDetailsView[t].onHoldBonuses.push(e);else{var i={};i.employeeId=e.employeeId,i.employeeName=e.employeeName,i.employeeNumber=e.employeeNumber,i.amount=e.amount,i.onHoldBonuses=[],i.onHoldBonuses.push(e),p.model.bonusDetailsView.push(i)}})})},this.initializeRevisionDetails=function(){p.model={},p.revisionSubmitted=!1,p.PayrollService.salaryRevisionsDetails.query({groupId:p.groupId,cycleId:p.currentCycle.id},function(e){p.model.salaryRevisionDetails=e.map(function(e){return new p.PayrollModel.SalaryRevisionDetails(e,p.currentCycle)}),p.model.salaryRevisionDetails.current=p.model.salaryRevisionDetails.filter(function(e){return e.forCurrentMonth()}),p.model.salaryRevisionDetails.previous=p.model.salaryRevisionDetails.filter(function(e){return!e.forCurrentMonth()})})},this.calPayPercentage=function(e){var t=e.payAmount/e.amount*100;e.payPercentage=t},this.currentCycle=s.currentCycle,this.groupId=s.groupId,this.action=s.action,this.payTypes=[{name:"Pay",value:2},{name:"On Hold",value:0},{name:"Void (Never Pay)",value:1},{name:"Paid Outside Keka Payroll",value:3},{name:"Partially Pay",value:4}],this.excludeOutsidePayTypes=[{name:"Pay",value:2},{name:"On Hold",value:0},{name:"Void (Never Pay)",value:1},{name:"Partially Pay",value:4}],this.init(),this.$scope.$watch("vm.form.salarybonus.$valid",function(e,t){e!=t&&(p.steps[0].valid=e)}),this.$scope.$watch("vm.form.salaryrevision.$valid",function(e,t){e!=t&&(p.steps[1].valid=e)})}return e.prototype.init=function(){this.steps=[new SharedModel.Step(1,"Bonus","","bonus-payments",!1,this.initializeBonusDetails),new SharedModel.Step(2,"Salary Revisions","","salary-revisions",!1,this.initializeRevisionDetails),new SharedModel.Step(3,"Overtime Payment","","overtime-payment",!1)],this.currentStep=this.steps[0],this.currentStep.init()},e.prototype.gotoStep=function(e){var t=this.steps.find(function(t){return t.index==e-1});if(!t||t&&t.valid){var i=this.steps.find(function(t){return t.index==e});i?(this.currentStep=i,null!=this.currentStep.init&&this.currentStep.init()):this.closeModal()}},e.prototype.openImportBonus=function(){var e=this;this.$uibModal.open({windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,templateUrl:"excelbonusImport",controller:"PayrollBonusImportController",controllerAs:"bonusImportCtrl",resolve:{currentCycle:this.currentCycle}}).result.then(function(t){t&&e.initializeBonusDetails()})},e.prototype.openImportBonusWithAction=function(){var e=this;this.$uibModal.open({windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,templateUrl:"excelbonusactionImport",controller:"PayrollBonusActionImportController",controllerAs:"ctrl",resolve:{currentCycle:this.currentCycle}}).result.then(function(t){t&&e.initializeBonusDetails()})},e.prototype.showPreviousComments=function(e){this.modalInstance=this.$uibModal.open({templateUrl:"comments-history",controller:"PayrollCommentHistoryController as vm",resolve:{comments:function(){return e.previousComments},employeeName:function(){return e.employeeName}}})},e.prototype.saveBonusDetails=function(){var e=this;if(this.form.salarybonus.$valid){var t=this.model.bonusDetails.map(function(e){var t=angular.copy(e);return t.outsideBonusPaidOn=t.outsideBonusPaidOn?t.outsideBonusPaidOn.dateOnlyString():null,t});this.PayrollService.saveBonusesOnHold(this.groupId,this.currentCycle.id,t).then(function(t){e.NotificationService.success("Bonus Information Saved Successfully."),e.gotoStep(e.currentStep.index+1)},function(t){e.NotificationService.error("An error occurred while saving bonus details.")})}else this.NotificationService.error("Please fill all required details.")},e.prototype.calPayAmount=function(e){var t=e.amount*e.payPercentage/100;e.payAmount=Number(t.toFixed(2))},e.prototype.saveRevisionDetails=function(e){var t=this;if(this.form.salaryrevision.$valid){this.model.salaryRevisionDetails.filter(function(e){return e.release}).map(function(e){return{employeeId:e.employeeId,id:e.revisionId}});this.PayrollService.saveRevisionOnHold(this.groupId,this.currentCycle.id,this.model.salaryRevisionDetails).then(function(i){t.NotificationService.success("Salary Revision Details Saved Successfully."),t.gotoStep(t.currentStep.index+1),t.action.completed=e},function(e){t.NotificationService.error("An error occurred while saving revision details.")})}else this.NotificationService.error("Please fill all required details.")},e.prototype.closeModal=function(){this.$uibModalInstance.close(this.action)},e.$inject=["$scope","$filter","$uibModalInstance","AppSettings","NotificationService","PayrollService","PayrollSalaryStructureService","payrollData","$uibModal","PayrollModel"],e}();t.payrollSalaryChangesController=a;var s=function(){function e(e,t,i,n){this.$uibModalInstance=e,this.comments=t,this.employeeName=i,this.appSettings=n,this.scrollSettings=angular.copy(this.appSettings.scrollSettings)}return e.prototype.close=function(){this.$uibModalInstance.close()},e.$inject=["$uibModalInstance","comments","employeeName","AppSettings"],e}();t.PayrollCommentHistoryController=s;var l=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S,C,w,b,P){this.scope=t,this.state=i,this.q=n,this.notificationService=o,this.appSettings=r,this.EmployeeExpenseService=a,this.PayrollModel=s,this.uibModal=l,this.uibModalInstance=c,this.dialogs=p,this.oneTimeTransactionType=u,this.PayrollSalaryStructureService=d,this.payrollData=m,this.expenseClaimStatus=y,this.PayrollService=h,this.filter=f,this.uiGridGroupingConstants=g,this.UiGridExtensions=v,this.AppContext=S,this.PrePayrollReadonlyService=C,this.componentClaimStatus=w,this.appFeatures=b,this.PayrollLookUpService=P,this.steps=[],this.payments=[],this.deductions=[],this.isAddNewDeduction=!1,this.isAddNewPayment=!1,this.isExpenseFeatureEnabled=this.AppContext.isFeaturePresent(this.appFeatures.Expenses.title),this.init(),this.salaryComponents=e.Configuration.Model.salaryComponentTypes}return t.prototype.initializeGridSettings=function(){var e=this;this.paymentsGridOptions=angular.copy(this.appSettings.gridSettings),this.paymentsGridOptions.showColumnFooter=!0,this.paymentsGridOptions.columnDefs=[{name:"name",displayName:"Name",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.employeeName}}</span></div>',enableCellEdit:!1,allowCellFocus:!1},{name:"type",displayName:"Payment Type",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.appScope.ctrl.oneTimeTransactionType.getById(row.entity.transactionType).title}} - <span data-ng-if="row.entity.transactionType == grid.appScope.ctrl.oneTimeTransactionType.AdhocAllowance.id">{{grid.appScope.ctrl.adhocAllowanceCategory[row.entity.typeIdentifier].title}}</span><span data-ng-if="row.entity.transactionType == grid.appScope.ctrl.oneTimeTransactionType.Expenses.id">{{row.entity.oneTimeTransactionName}}</span></div>',enableCellEdit:!1,allowCellFocus:!1},{name:"amount",displayName:"Debit",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.amount}}</span><br/>',enableCellEdit:!1,allowCellFocus:!1,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.UiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],this.deductionsGridOptions=angular.copy(this.appSettings.gridSettings),this.deductionsGridOptions.showColumnFooter=!0,this.deductionsGridOptions.columnDefs=[{name:"name",displayName:"Name",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.employeeName}}</span></div>',enableCellEdit:!1,allowCellFocus:!1},{name:"type",displayName:"Deduction Type",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.oneTimeTransactionName}}</div>',enableCellEdit:!1,allowCellFocus:!1},{name:"amount",displayName:"Debit",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.amount}}</span><br/>',enableCellEdit:!1,allowCellFocus:!1,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.UiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],this.paymentsGridOptions.multiSelect=!0,this.paymentsGridOptions.onRegisterApi=function(t){e.paymentsGridApi=t},this.deductionsGridOptions.multiSelect=!0,this.deductionsGridOptions.onRegisterApi=function(t){e.deductionGridApi=t}},t.prototype.hasSalary=function(e){this.PayrollSalaryStructureService.getSalaryStructure(e).then(function(e){return null!=e})},t.prototype.init=function(){var t=this;this.initializeGridSettings(),this.initializeExpensesGridSettings(),this.initializeAdvanceRequestGridSettings(),this.initializeComponentCliamsGridSettings(),this.currentcycle=this.payrollData.cycle,this.payrollConfig=this.payrollData.payrollConfig,this.isFinalised=this.payrollData.isFinalised,this.adhocAllowances=this.payrollData.payrollConfig.getAllAdhocAllowances(),this.steps.push(new SharedModel.Step(this.steps.length+1,"Component Claims","",this.isFinalised?"readonly-component-claims":"component-claims",!0)),this.isExpenseFeatureEnabled&&this.steps.push(new SharedModel.Step(this.steps.length+1,"Expenses","",this.isFinalised?"readonly-expense-claims":"expense-claims",!0)),this.steps.push(new SharedModel.Step(this.steps.length+1,"Adhoc Payments","",this.isFinalised?"read-only-one-time-payments":"one-time-payments",!0)),this.steps.push(new SharedModel.Step(this.steps.length+1,"Adhoc Deductions","",this.isFinalised?"read-only-one-time-deductions":"one-time-deductions",!1)),this.adhocAllowanceCategory=this.adhocAllowances.reduce(function(e,t,i){return e[t.componentName]=t,e},{}),this.action=this.payrollData.action,this.currentStep=this.steps[0],this.isFinalised?(this.PrePayrollReadonlyService.getOnetimetransactions(this.payrollConfig.payGroupId,this.currentcycle.id).then(function(e){t.payments=e.filter(function(e){return e.transactionType==t.oneTimeTransactionType.Expenses.id||e.transactionType==t.oneTimeTransactionType.AdhocAllowance.id}),t.deductions=e.filter(function(e){return e.transactionType==t.oneTimeTransactionType.Deduction.id})}),this.PrePayrollReadonlyService.getComponentClaims(this.payrollConfig.payGroupId,this.currentcycle.id).then(function(i){t.componentClaims=i.map(function(t){return new e.componentClaim.Model.ComponentClaim(t)})},function(e){t.componentClaims=[]}),this.PrePayrollReadonlyService.getExpenses(this.payrollConfig.payGroupId,this.currentcycle.id).then(function(e){t.expenseClaims=e.filter(function(e){return!e.isAdvanceRequest}),t.expenseClaims.forEach(function(e){return e.type=e.advanceRequestId?"Advance Settlement":"Expense Claim"}),t.advanceRequests=e.filter(function(e){return e.isAdvanceRequest})},function(e){t.expenseClaims=[],t.advanceRequests=[]}),this.expenseGridOptions.columnDefs.push({name:"Actions",displayName:"ACTIONS",cellClass:"ui-grid-cell cell-tooltip",width:300,cellTemplate:'<div class="ui-grid-cell-contents action-buttons"> <a class="action-block text-center" data-ng-click="grid.appScope.ctrl.viewExpenseClaim(row.entity)"><span class="icon-keka-comment icon-action"></span><span class="display-block action-text">View</span></a></div>'}),this.advanceRequestGridOptions.columnDefs.push({name:"Actions",displayName:"ACTIONS",cellClass:"ui-grid-cell cell-tooltip",width:300,cellTemplate:'<div class="ui-grid-cell-contents action-buttons"> <a class="action-block text-center" data-ng-click="grid.appScope.ctrl.viewExpenseClaim(row.entity)"><span class="icon-keka-comment icon-action"></span><span class="display-block action-text">View</span></a></div>'})):(this.PayrollService.onetimetransactions.query({cycleId:this.currentcycle.id,groupId:this.payrollConfig.payGroupId},function(e){t.payments=e.filter(function(e){return e.transactionType==t.oneTimeTransactionType.Expenses.id||e.transactionType==t.oneTimeTransactionType.AdhocAllowance.id}),t.deductions=e.filter(function(e){return e.transactionType==t.oneTimeTransactionType.Deduction.id})}),this.getComponentClaims(),this.PayrollService.getAllUnpaidexpense(this.payrollConfig.payGroupId,this.currentcycle.id).then(function(e){t.expenseClaims=e.filter(function(e){return!e.isAdvanceRequest}),t.expenseClaims.forEach(function(e){return e.type=e.advanceRequestId?"Advance Settlement":"Expense Claim"}),t.advanceRequests=e.filter(function(e){return e.isAdvanceRequest})},function(e){t.expenseClaims=[],t.advanceRequests=[]}),this.componentClaimsGridOptions.columnDefs.push({name:"Actions",displayName:"ACTIONS",cellClass:"ui-grid-cell cell-tooltip",width:300,cellTemplate:'<div class="ui-grid-cell-contents action-buttons"> <a class="text-center" data-ng-click="grid.appScope.ctrl.reviewComponentClaim(row.entity)"> Review Claim </a></div>'}),this.expenseGridOptions.columnDefs.push({name:"Actions",displayName:"ACTIONS",cellClass:"ui-grid-cell cell-tooltip",width:300,cellTemplate:'<div class="ui-grid-cell-contents action-buttons"> <a class="action-block text-center" data-ng-click="grid.appScope.ctrl.approveClaim(row.entity)"><span class="icon-xhr-check-2 icon-action"></span><span class="display-block action-text"> Approve </span></a><a class="action-block text-center" class="node" uib-popover-template="\'rejectClaimTemplate\'" data-popover-append-to-body="true" popover-placement="left" popover-class="high-index" popover-trigger="outsideClick" popover-is-open="ctrl.rejectPopoverOpen" data-ng-click="ctrl.rejectReason = null" ><span class="icon-xhr-cancel-2 icon-action"></span><span class="display-block action-text"> Reject </span></a><a class="action-block text-center" data-ng-click="grid.appScope.ctrl.viewExpenseClaim(row.entity)"><span class="icon-keka-comment icon-action"></span><span class="display-block action-text">View</span></a><a class="action-block text-center" data-ng-click="grid.appScope.ctrl.editExpenseClaim(row.entity)"><span class="icon-keka-circleedit icon-action"></span><span class="display-block action-text">Edit</span></a></div>'}),this.advanceRequestGridOptions.columnDefs.push({name:"Actions",displayName:"ACTIONS",cellClass:"ui-grid-cell cell-tooltip",width:300,cellTemplate:'<div class="ui-grid-cell-contents action-buttons"> <a class="action-block text-center" data-ng-click="grid.appScope.ctrl.approveClaim(row.entity)"><span class="icon-xhr-check-2 icon-action"></span><span class="display-block action-text"> Approve </span></a><a class="action-block text-center" class="node" uib-popover-template="\'rejectClaimTemplate\'" data-popover-append-to-body="true" popover-placement="left" popover-class="high-index" popover-trigger="outsideClick" popover-is-open="ctrl.rejectPopoverOpen" data-ng-click="ctrl.rejectReason = null" ><span class="icon-xhr-cancel-2 icon-action"></span><span class="display-block action-text"> Reject </span></a><a class="action-block text-center" data-ng-click="grid.appScope.ctrl.viewExpenseClaim(row.entity)"><span class="icon-keka-comment icon-action"></span><span class="display-block action-text">View</span></a><a class="action-block text-center" data-ng-click="grid.appScope.ctrl.editExpenseClaim(row.entity)"><span class="icon-keka-circleedit icon-action"></span><span class="display-block action-text">Edit</span></a></div>'})),this.PayrollLookUpService.getDeductiontypes().then(function(e){t.deductionCategories=e.reduce(function(e,t,i){return e[t.identifier]=t,e},{}),t.deductionTypes=e}),this.PayrollService.cycle.getPendingCycles(this.payrollConfig.payGroupId,4).then(function(e){t.pendingCycles=e.map(function(e){return new t.PayrollModel.PayrollCycle(e)})})},t.prototype.approveClaim=function(e){var t=this;this.uibModal.open({templateUrl:"approve-claim",scope:this.scope,controller:"ApproveClaimController",controllerAs:"ctrl",resolve:{ExpenseService:function(){return t.EmployeeExpenseService},SelectedClaims:function(){return[e]},PendingCycles:function(){return t.pendingCycles}}}).result.then(function(e){e&&e.claims&&t.PayrollService.getAllUnpaidexpense(t.payrollConfig.payGroupId,t.currentcycle.id).then(function(e){t.expenseClaims=e.filter(function(e){return!e.isAdvanceRequest}),t.expenseClaims.forEach(function(e){return e.type=e.advanceRequestId?"Advance Settlement":"Expense Claim"}),t.advanceRequests=e.filter(function(e){return e.isAdvanceRequest})},function(e){t.expenseClaims=[],t.advanceRequests=[]})})},t.prototype.rejectClaim=function(e,t){var i=this,n={expenseClaimIds:[e.id],rejectReason:t};this.EmployeeExpenseService.rejectExpenseClaim(e.employeeId,n).then(function(t){i.expenseClaims=i.expenseClaims.filter(function(t){return!(t.id==e.id&&t.employeeId==e.employeeId)}),i.advanceRequests=i.advanceRequests.filter(function(t){return!(t.id==e.id&&t.employeeId==e.employeeId)}),i.notificationService.success(e.title+" rejected successfully")},function(t){i.notificationService.error("An error occurred while rejecting "+e.title+".")})},t.prototype.viewExpenseClaim=function(e){var t=this;this.uibModal.open({templateUrl:"manageExpenseClaim",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"ManageExpenseClaimsController",controllerAs:"ctrl",resolve:{ExpenseService:function(){return t.EmployeeExpenseService},Params:function(){return{id:e.employeeId}},expenseClaim:function(){return e},AvailableExpense:function(){return[]},ExpensePolicy:function(){return{}},ReadOnlyView:function(){return!0},EditView:function(){return!1},CanAddExpense:function(){return!1}}}).result.then(function(i){i&&i.status&&(i.status==t.expenseClaimStatus.Approved.id?e.status=t.expenseClaimStatus.Approved.id:i.status==t.expenseClaimStatus.Rejected.id&&(i.isAdvanceRequest?t.advanceRequests=t.advanceRequests.filter(function(t){return!(t.id==e.id&&t.employeeId==e.employeeId)}):t.expenseClaims=t.expenseClaims.filter(function(t){return!(t.id==e.id&&t.employeeId==e.employeeId)})))})},t.prototype.editExpenseClaim=function(e){var t=this;this.uibModal.open({templateUrl:"manageExpenseClaim",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"ManageExpenseClaimsController",controllerAs:"ctrl",resolve:{ExpenseService:function(){return t.EmployeeExpenseService},Params:function(){return{id:e.employeeId}},expenseClaim:function(){return e},AvailableExpense:function(){return[]},ExpensePolicy:function(){return{}},ReadOnlyView:function(){return!1},EditView:function(){return!0},CanAddExpense:function(){return!0}}}).result.then(function(t){t&&t.claim&&(e.totalExpenses=t.claim.expenseIds.length,e.totalAmount=t.claim.totalAmount)})},t.prototype.openDeductionsImport=function(){var t=this;this.PayrollService.getpreviouscycleonetimetransactions(this.payrollConfig.payGroupId,this.currentcycle.from).then(function(i){t.previousDeductions=i.filter(function(e){return e.transactionType==t.oneTimeTransactionType.Deduction.id}),t.deductionsGridOptions.data=t.previousDeductions,t.importDeductionsModalInstance=t.uibModal.open({templateUrl:"import-deductions",scope:t.scope}),t.importDeductionsModalInstance.result.then(function(i){i&&(t.deductions=t.deductions||[],i.forEach(function(i){var n=angular.copy(i);n.cycleId=t.currentcycle.id,n.id=0,t.deductions.push(new e.Model.OneTimeDeduction(n,t.oneTimeTransactionType))}))})})},t.prototype.openPaymentsImport=function(){var t=this;this.PayrollService.getpreviouscycleonetimetransactions(this.payrollConfig.payGroupId,this.currentcycle.from).then(function(i){t.previousPayments=i.filter(function(e){return e.transactionType==t.oneTimeTransactionType.Expenses.id||e.transactionType==t.oneTimeTransactionType.AdhocAllowance.id}),t.paymentsGridOptions.data=t.previousPayments,t.importPaymentsModalInstance=t.uibModal.open({templateUrl:"import-payments",scope:t.scope}),t.importPaymentsModalInstance.result.then(function(i){i&&(t.payments=t.payments||[],i.forEach(function(i){var n=angular.copy(i);n.cycleId=t.currentcycle.id,n.id=0,t.payments.push(new e.Model.OneTimePayment(n))}))})})},t.prototype.openPaymentsExcelImport=function(){var e=this;this.uibModal.open({windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,templateUrl:"excelOneTimePaymentsImport",controller:"PayrollOneTimPaymentsImportController",controllerAs:"paymentsImportCtrl",resolve:{currentCycle:this.currentcycle,PaygroupId:this.payrollConfig.payGroupId}}).result.then(function(t){t&&e.PayrollService.onetimetransactions.query({cycleId:e.currentcycle.id,groupId:e.payrollConfig.payGroupId},function(t){e.payments=t.filter(function(t){return t.transactionType==e.oneTimeTransactionType.Expenses.id||t.transactionType==e.oneTimeTransactionType.AdhocAllowance.id}),e.deductions=t.filter(function(t){return t.transactionType==e.oneTimeTransactionType.Deduction.id})})})},t.prototype.openDeductionsExcelImport=function(){var e=this;this.uibModal.open({windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,templateUrl:"excelOneTimeDeductionsImport",controller:"PayrollOneTimDeductionsImportController",controllerAs:"deductionsImportCtrl",resolve:{currentCycle:this.currentcycle}}).result.then(function(t){t&&e.PayrollService.onetimetransactions.query({cycleId:e.currentcycle.id,groupId:e.payrollConfig.payGroupId},function(t){e.payments=t.filter(function(t){return t.transactionType==e.oneTimeTransactionType.Expenses.id||t.transactionType==e.oneTimeTransactionType.AdhocAllowance.id}),e.deductions=t.filter(function(t){return t.transactionType==e.oneTimeTransactionType.Deduction.id})})})},t.prototype.closePaymentImport=function(){this.importPaymentsModalInstance.dismiss()},t.prototype.closeDeductionImport=function(){this.importDeductionsModalInstance.dismiss()},t.prototype.importPayments=function(){this.selectedPayments=this.paymentsGridApi.selection.getSelectedRows(),0===this.selectedPayments.length?this.paymentImportStatus="Select atleast one payment entry":this.importPaymentsModalInstance.close(this.selectedPayments)},t.prototype.importDeductions=function(){this.selectedDeductions=this.deductionGridApi.selection.getSelectedRows(),0===this.selectedDeductions.length?this.deductionImportStatus="Select atleast one deduction entry":this.importDeductionsModalInstance.close(this.selectedDeductions)},t.prototype.closeDropdown=function(e,t){t.typeIdentifier||e.stopPropagation()},t.prototype.selectPaymentType=function(e){this.currentTransactionType=e,e==this.oneTimeTransactionType.AdhocAllowance.id&&(this.paymentItems=this.adhocAllowances)},t.prototype.assignPaymentType=function(e,t){e.transactionType=this.currentTransactionType,this.currentTransactionType==this.oneTimeTransactionType.AdhocAllowance.id?e.typeIdentifier=t.componentName:e.typeIdentifier=t.id},t.prototype.savePaymentDetails=function(){var e=this,t=this.payments.filter(function(e){return!e.isDeleted||e.isDeleted&&e.id>0});0!=t.length?null==t.find(function(e){return null==e.typeIdentifier||void 0==e.amount||e.amount<=0})?this.PayrollService.onetimetransactions.save({groupId:this.payrollConfig.payGroupId,cycleId:this.currentcycle.id},t).$promise.then(function(){e.notificationService.success("One Time Payments Saved Successfully."),e.PayrollService.onetimetransactions.query({groupId:e.payrollConfig.payGroupId,cycleId:e.currentcycle.id}).$promise.then(function(t){e.payments=t.filter(function(t){return t.transactionType==e.oneTimeTransactionType.Expenses.id||t.transactionType==e.oneTimeTransactionType.AdhocAllowance.id})}),e.gotoStep(e.currentStep.index+1)},function(t){e.notificationService.error("An error occurred while saving one-time payments.")}):this.notificationService.error("Please fill all required fields."):this.gotoStep(this.currentStep.index+1)},t.prototype.saveDeductionDetails=function(e){var t=this,i=this.deductions.filter(function(e){return!e.isDeleted||e.isDeleted&&e.id>0});0!=i.length?null==i.find(function(e){return null==e.typeIdentifier||void 0==e.amount||e.amount<=0})?this.PayrollService.onetimetransactions.save({groupId:this.payrollConfig.payGroupId,cycleId:this.currentcycle.id},i).$promise.then(function(){t.notificationService.success("One Time Deductions Saved Successfully."),t.saveAndClose(e)},function(e){t.notificationService.error("An error occurred while saving one-time deductions.")}):this.notificationService.error("Please fill all required fields."):this.saveAndClose(e)},t.prototype.deleteOneTimePayment=function(e){this.dialogs.confirm("Please Confirm","Are you sure want to delete one time payment?").result.then(function(){e.isDeleted=!0})},t.prototype.deleteOneTimeDeduction=function(e){this.dialogs.confirm("Please Confirm","Are you sure want to delete one time deduction?").result.then(function(){e.isDeleted=!0})},t.prototype.addNewPayment=function(){var t=this;this.PayrollSalaryStructureService.getSalaryStructure(this.newPaymentEmployee.id).then(function(i){i&&(t.payments.unshift(new e.Model.OneTimePayment({cycleId:t.currentcycle.id,employeeId:t.newPaymentEmployee.id,employeeName:t.newPaymentEmployee.displayName,employeeNumber:t.newPaymentEmployee.employeeNumber})),t.newPaymentEmployee=null,t.isAddNewPayment=!1)},function(e){t.notificationService.error(e.data.message),t.newPaymentEmployee=null})},t.prototype.addNewDeduction=function(){var t=this;this.PayrollSalaryStructureService.getSalaryStructure(this.newDeductionEmployee.id).then(function(i){i&&(t.deductions.unshift(new e.Model.OneTimeDeduction({cycleId:t.currentcycle.id,employeeId:t.newDeductionEmployee.id,employeeName:t.newDeductionEmployee.displayName,employeeNumber:t.newDeductionEmployee.employeeNumber},t.oneTimeTransactionType)),t.newDeductionEmployee=null,t.isAddNewDeduction=!1)},function(e){t.notificationService.error(e.data.message),t.newDeductionEmployee=null})},t.prototype.searchEmployees=function(e){if(e&&e.length>=2){var t=this.q.defer();return this.PayrollService.searchEmployees(this.payrollConfig.payGroupId,this.currentcycle.id,e).then(function(e){0==e.length&&e.push({noResults:!0}),t.resolve(e)}),t.promise}},t.prototype.closeModal=function(){this.uibModalInstance.close(this.action)},t.prototype.saveAndClose=function(e){this.action.completed=e,this.closeModal()},t.prototype.gotoStep=function(e){var t=this.steps.find(function(t){return t.index==e-1});if(!t||t&&t.valid){var i=this.steps.find(function(t){return t.index==e});this.currentStep=i}},t.prototype.getSearchResults=function(e,t){return t?this.filter("filter")(this.deductions,{isDeleted:!1,$:this.deductionSearchText},!1):e?this.filter("filter")(this.payments,{isDeleted:!1,$:this.searchText},!1):this.filter("filter")(this.expenseClaims,this.searchText,!1)},t.prototype.initializeComponentCliamsGridSettings=function(){var e=this;this.componentClaimsGridOptions=angular.copy(this.appSettings.gridSettings),this.componentClaimsGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellClass:"ui-grid-cell"},{field:"employeeName",displayName:"Employee Name",cellClass:"ui-grid-cell"},{field:"componentName",displayName:"Component Name",cellClass:"ui-grid-cell"},{field:"componentType",displayName:"Component Type",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.appScope.ctrl.salaryComponents.getById(row.entity.componentType)}}</div>',cellClass:"ui-grid-cell"},{field:"claimAmount",displayName:"Claim Amount",cellClass:"ui-grid-cell",cellFilter:"currency:'Rs.':2",type:"number"},{field:"payableAmount",displayName:"payable Amount",cellClass:"ui-grid-cell",cellFilter:"currency:'Rs.':2",type:"number"},{field:"claimedOn",displayName:"Claimed On",type:"date",cellFilter:'date:"dd MMM yyyy"',cellClass:"ui-grid-cell"},{field:"status",displayName:"Status",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.ctrl.componentClaimStatus.getById(row.entity.status).title}}</span></div>',cellClass:"ui-grid-cell"},{field:"actionTakenOn",displayName:"Approved On",cellTemplate:'<div class="ui-grid-cell-contents">\n                                     <span data-ng-if="row.entity.status == grid.appScope.ctrl.componentClaimStatus.Approved.id"><span>{{grid.getCellValue(row,col) | date : \' dd MMM yyyy\'}} </span><br />\n                                    <span class="text-muted"> by {{row.entity.actionTakenBy}} </span></span><span data-ng-if="row.entity.status != grid.appScope.ctrl.componentClaimStatus.Approved.id"></span> - </div>\',\n                    cellClass: \'ui-grid-cell'}],this.componentClaimsGridOptions.data="ctrl.componentClaims |  filter:  ctrl.componentSearchText",this.componentClaimsGridOptions.rowHeight=60,this.componentClaimsGridOptions.onRegisterApi=function(t){e.componentClaimsgridApi=t}},t.prototype.initializeExpensesGridSettings=function(){var e=this;this.expenseGridOptions=angular.copy(this.appSettings.gridSettings),this.expenseGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellClass:"ui-grid-cell",columnMenu:!1},{field:"employeeName",displayName:"Employee Name",cellClass:"ui-grid-cell"},{field:"title",displayName:"Title",cellClass:"ui-grid-cell"},{field:"type",displayName:"Type",cellClass:"ui-grid-cell"},{field:"totalExpenses",displayName:"Expense Count",cellClass:"ui-grid-cell"},{field:"totalAmount",displayName:"Amount",cellTemplate:'<div class="ui-grid-cell-contents">                             <span data-ng-class="{\'text-danger\': row.entity.totalAmount < 1}">{{row.entity.currency.code}} {{row.entity.totalAmount}}</span>                             <span class="icon-info2 grayout pull-right" data-ng-if="row.entity.advanceRequestId > 0" class= "node" uib-popover-template="\'amountBreakUpTemplate\'" data-popover-append-to-body="true" popover-placement="right" popover-class="high-index" popover-trigger="outsideClick" popover-is-open="ctrl.amountBreakUpOpen"></span>                         </div>',cellClass:"ui-grid-cell"},{field:"submittedOn",displayName:"Submitted On",type:"date",cellFilter:'date:"dd MMM yyyy"',cellClass:"ui-grid-cell"},{field:"approvalStatus",displayName:"Status",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.ctrl.expenseClaimStatus.getById(row.entity.approvalStatus).title}}</span></div>',cellClass:"ui-grid-cell"},{field:"approvedOn",displayName:"Approved On",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.approvalStatus == grid.appScope.ctrl.expenseClaimStatus.Approved.id || row.entity.approvalStatus == grid.appScope.ctrl.expenseClaimStatus.Paid.id"><span>{{grid.getCellValue(row,col) | date : \' dd MMM yyyy\'}} </span><br /><span class="text-muted"> by {{row.entity.approverName}} </span></span><span data-ng-if="row.entity.approvalStatus != grid.appScope.ctrl.expenseClaimStatus.Approved.id || row.entity.approvalStatus != grid.appScope.ctrl.expenseClaimStatus.Paid.id"></span> - </div>',cellClass:"ui-grid-cell"}],this.expenseGridOptions.data="ctrl.expenseClaims |  filter:  ctrl.expenseSearchText",this.expenseGridOptions.rowHeight=60,this.expenseGridOptions.onRegisterApi=function(t){e.expensegridApi=t}},t.prototype.initializeAdvanceRequestGridSettings=function(){var e=this;this.advanceRequestGridOptions=angular.copy(this.appSettings.gridSettings),this.advanceRequestGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellClass:"ui-grid-cell",columnMenu:!1},{field:"employeeName",displayName:"Employee Name",cellClass:"ui-grid-cell"},{field:"title",displayName:"Title",cellClass:"ui-grid-cell"},{field:"totalExpenses",displayName:"Expense Count",cellClass:"ui-grid-cell"},{field:"totalAmount",displayName:"Amount",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.currency.code}} {{row.entity.totalAmount}}</span></div>',cellClass:"ui-grid-cell"},{field:"submittedOn",displayName:"Submitted On",type:"date",cellFilter:'date:"dd MMM yyyy"',cellClass:"ui-grid-cell"},{field:"approvalStatus",displayName:"Status",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.ctrl.expenseClaimStatus.getById(row.entity.approvalStatus).title}}</span></div>',cellClass:"ui-grid-cell"},{field:"approvedOn",displayName:"Approved On",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.approvalStatus == grid.appScope.ctrl.expenseClaimStatus.Approved.id || row.entity.approvalStatus == grid.appScope.ctrl.expenseClaimStatus.Paid.id"><span>{{grid.getCellValue(row,col) | date : \' dd MMM yyyy\'}} </span><br /><span class="text-muted"> by {{row.entity.approverName}} </span></span><span data-ng-if="row.entity.approvalStatus != grid.appScope.ctrl.expenseClaimStatus.Approved.id || row.entity.approvalStatus != grid.appScope.ctrl.expenseClaimStatus.Paid.id"></span> - </div>',cellClass:"ui-grid-cell"}],this.advanceRequestGridOptions.data="ctrl.advanceRequests |  filter:  ctrl.advanceRequestSearchText",this.advanceRequestGridOptions.rowHeight=60,this.advanceRequestGridOptions.onRegisterApi=function(t){e.advanceRequestGridApi=t}},t.prototype.reviewComponentClaim=function(e){var t=this;this.uibModal.open({templateUrl:"payroll/ReviewComponentClaim",controller:"ReviewComponentClaimController",controllerAs:"ctrl",windowClass:"full-screen-modal dark-modal no-scroll-x declaration-doc-approvals",backdrop:!1,keyboard:!1,resolve:{ComponentClaim:function(){return e}}}).result.then(function(e){t.getComponentClaims()})},t.prototype.getComponentClaims=function(){var t=this;this.PayrollService.getAllUnpaidComponentClaims(this.payrollConfig.payGroupId,this.currentcycle.id).then(function(i){t.componentClaims=i.map(function(t){return new e.componentClaim.Model.ComponentClaim(t)})},function(e){t.componentClaims=[]})},t.$inject=["$scope","$state","$q","NotificationService","AppSettings","EmployeeExpenseService","PayrollModel","$uibModal","$uibModalInstance","dialogs","PayrollOneTimeTransactionType","PayrollSalaryStructureService","payrollData","ExpenseClaimStatus","PayrollService","$filter","uiGridGroupingConstants","UiGridExtensions","AppContext","PrePayrollReadonlyService","ComponentClaimStatus","AppFeatures","PayrollLookUpService"],t}();t.PayrollOneTimePaymentsAndDeductions=l,angular.module("payroll").controller("ManagePayslipsController",n).controller("PayrollEmployeesOnHoldAndArrears",i).controller("PayrollEmployeeChangesController",o).controller("payrollReviewAllEmployeesController",r).controller("payrollSalaryChangesController",a).controller("PayrollOneTimePaymentsAndDeductions",l).controller("PayrollCommentHistoryController",s)}(e.PrePayroll||(e.PrePayroll={}))}(Payroll||(Payroll={})),function(e){!function(e){!function(t){var i=function(){function e(e,t,i,n,o,r,a){var s=this;this.appSettings=e,this.oneTimeTransactionType=t,this.payrollData=i,this.ClaimStatus=n,this.prePayrollReadonlyService=o,this.uiGridGroupingConstants=r,this.UiGridExtensions=a,this.initSteps(),this.initializeGridSettings();var l=i.payrollConfig.getAllAdhocAllowances();this.adhocAllowanceCategory=l.reduce(function(e,t,i){return e[t.componentName]=t,e},{});var c=i.cycle;this.prePayrollReadonlyService.getOnetimetransactions(i.payrollConfig.paygroupId,c.id).then(function(e){s.payments=e.filter(function(e){return e.transactionType==s.oneTimeTransactionType.Expenses.id||e.transactionType==s.oneTimeTransactionType.AdhocAllowance.id}),s.deductions=e.filter(function(e){return e.transactionType==s.oneTimeTransactionType.Deduction.id})}),this.prePayrollReadonlyService.getExpenses(i.payrollConfig.paygroupId,c.id).then(function(e){s.expenseClaims=e},function(e){s.expenseClaims=[]})}return e.prototype.initSteps=function(){this.steps=[new SharedModel.Step(1,"Payments","","read-only-one-time-payments",!0),new SharedModel.Step(2,"Deductions","","read-only-one-time-deductions",!1)],this.currentStep=this.steps[0]},e.prototype.initializeGridSettings=function(){var e=this;this.paymentsGridOptions=angular.copy(this.appSettings.gridSettings),this.paymentsGridOptions.showColumnFooter=!0,this.paymentsGridOptions.columnDefs=[{name:"name",displayName:"Name",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.employeeName}}</span></div>',enableCellEdit:!1,allowCellFocus:!1},{name:"type",displayName:"Payment Type",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.appScope.vm.oneTimeTransactionType.getById(row.entity.transactionType).title}} -<span data-ng-if="row.entity.transactionType == grid.appScope.vm.oneTimeTransactionType.AdhocAllowance.id">{{grid.appScope.vm.adhocAllowanceCategory[row.entity.typeIdentifier].title}}</span><span data-ng-if="row.entity.transactionType == grid.appScope.vm.oneTimeTransactionType.Expenses.id">{{row.entity.oneTimeTransactionName}}</span></div>',enableCellEdit:!1,allowCellFocus:!1},{name:"amount",displayName:"Debit",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.amount}}</span><br/>',enableCellEdit:!1,allowCellFocus:!1,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.UiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],this.deductionsGridOptions=angular.copy(this.appSettings.gridSettings),this.deductionsGridOptions.showColumnFooter=!0,this.deductionsGridOptions.columnDefs=[{name:"name",displayName:"Name",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.employeeName}}</span></div>',enableCellEdit:!1,allowCellFocus:!1},{name:"type",displayName:"Deduction Type",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.appScope.vm.deductionCategories[row.entity.typeIdentifier].title}}</div>',enableCellEdit:!1,allowCellFocus:!1},{name:"amount",displayName:"Debit",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.amount}}</span><br/>',enableCellEdit:!1,allowCellFocus:!1,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.UiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],this.paymentsGridOptions.multiSelect=!0,this.paymentsGridOptions.onRegisterApi=function(t){e.paymentsGridApi=t},this.deductionsGridOptions.multiSelect=!0,this.deductionsGridOptions.onRegisterApi=function(t){e.deductionGridApi=t}},e.prototype.gotoStep=function(e){var t=this.steps.find(function(t){return t.index==e-1});if(!t||t&&t.valid){var i=this.steps.find(function(t){return t.index==e});this.currentStep=i}},e.$inject=["AppSettings","PayrollOneTimeTransactionType","payrollData","ClaimStatus","PrePayrollReadonlyService","uiGridGroupingConstants","UiGridExtensions"],e}();t.payrollOneTimePaymentsAndDeductionsReadOnly=i;var n=function(){function t(t,i,n,o,r){var a=this;this.modelInstance=i,this._filter=n,this.prePayrollReadonlyService=o,this.$uibModal=r,this.steps=[],this.newJoinees=[],this.inExitProcessView=[],this.inSettlementProcess=[],this.exitRequestStatus=Employee.Models.ExitRequestStatus,this.newJoineesInit=function(){a.prePayrollReadonlyService.getNewJoineeOverrides(a.groupId,a.currentcycle.id).then(function(t){a.newJoinees=t.map(function(t){return new e.Model.NewJoineeDetails(t)}),a.newJoinees=a._filter("orderBy")(a.newJoinees,["dateJoined"])},function(e){})},this.inExitProcessInit=function(){a.prePayrollReadonlyService.getEmployeesInExitProcessView(a.groupId,a.currentcycle.id).then(function(t){a.inExitProcessView=(t||[]).map(function(t){return new e.Model.EmployeesInExitProcessView(t)})},function(e){})},this.inSettlementProcessInit=function(){a.prePayrollReadonlyService.getEmployeesInSettlementProcessView(a.groupId,a.currentcycle.id).then(function(t){a.inSettlementProcess=(t||[]).map(function(t){return new e.Model.EmployeesInSettlementProcessView(t)})},function(e){})},this.currentcycle=t.cycle,this.groupId=t.groupId,this.payTypes=e.Model.SalaryPayAction,this.init()}return t.prototype.init=function(){this.steps=[new SharedModel.Step(1,"New Joinees","newJoinees","read-only-new-joinees",!1,this.newJoineesInit),new SharedModel.Step(2,"Employee in Exit Process","employeeInExitProcess","read-only-pending-employee-exit",!0,this.inExitProcessInit),new SharedModel.Step(3,"Full & Final Settlement","fullSettlement","read-only-exit-final-settlement",!0,this.inSettlementProcessInit)],this.currentStep=this.steps[0],this.currentStep.init()},t.prototype.getpayActionTitle=function(e){return(this.payTypes.find(function(t){return t.id==e})||{}).title},t.prototype.gotoStep=function(e){var t=this.steps.find(function(t){return t.index==e-1});if(!t||t&&t.valid){var i=this.steps.find(function(t){return t.index==e});i?(this.currentStep=i,this.currentStep.init()):this.closeModal()}},t.prototype.closeModal=function(){this.modelInstance.close()},t.prototype.showPreviousComments=function(e){this.$uibModal.open({templateUrl:"comments-history",controller:"PayrollCommentHistoryController as vm",resolve:{comments:function(){return e.comments},employeeName:function(){return e.employeeName}}})},t.$inject=["payrollData","$uibModalInstance","$filter","PrePayrollReadonlyService","$uibModal"],t}();t.PayrollEmployeeChangesReadOnlyController=n;var o=function(){function t(t,i,n,o,r,a,s){var l=this;this.appSettings=i,this.modelInstance=n,this._filter=o,this.prePayrollReadonlyService=r,this.$uibModal=a,this.payrollSalryHoldService=s,this.steps=[],this.arrears=[],this.employeesOnHold=[],this.employeesOnHoldView=[],this.employeeOnHoldInit=function(){l.payrollSalryHoldService.getProcessOnHoldsAfterFinalize(l.groupId,l.currentcycle.id).then(function(t){l.employeesOnHold=t.map(function(t){return new e.Model.EmployeeOnHoldView(t)}),l.setOnHoldView()},function(e){})},this.paymentOnHoldInit=function(){l.payrollSalryHoldService.getPaymentOnHoldsAfterFinalize(l.groupId,l.currentcycle.id).then(function(t){l.employeesOnHold=t.map(function(t){return new e.Model.EmployeeOnHoldView(t)}),l.setOnHoldView()},function(e){})},this.arrearsInit=function(){l.prePayrollReadonlyService.getArrears(l.groupId,l.currentcycle.id).then(function(t){l.arrears=t.map(function(t){return new e.Model.Arrears(t)})},function(e){})},this.currentcycle=t.cycle,this.isFinalised=t.isFinalised,this.groupId=t.payrollConfig.payGroupId,this.payTypes=e.Model.SalaryPayAction,this.init()}return t.prototype.init=function(){this.steps=[new SharedModel.Step(1,"Salary processing on hold","","read-only-employees-on-hold",!1,this.employeeOnHoldInit),new SharedModel.Step(2,"Salary payout on hold","","read-only-employees-payment-on-hold",!1,this.paymentOnHoldInit),new SharedModel.Step(3,"Arrears","","arrears",!1,this.arrearsInit)],this.currentStep=this.steps[0],this.currentStep.init()},t.prototype.getpayActionTitle=function(e){return(this.payTypes.find(function(t){return t.id==e})||{}).title},t.prototype.gotoStep=function(e){var t=this.steps.find(function(t){return t.index==e-1});(!t||t&&t.valid)&&(this.currentStep=this.steps.find(function(t){return t.index==e}),this.initStep(),this.currentStep.init())},t.prototype.initStep=function(){this.employeesOnHold=[],this.employeesOnHoldView=[]},t.prototype.closeModal=function(){this.modelInstance.close()},t.prototype.setOnHoldView=function(){var e=this;this.employeesOnHoldView=[],this.employeesOnHold=this._filter("orderBy")(this.employeesOnHold,["employeeId"]),this.employeesOnHold.forEach(function(t){var i=e.employeesOnHoldView.length-1;if(e.employeesOnHoldView.length>0&&e.employeesOnHoldView[i].employeeId==t.employeeId)e.employeesOnHoldView[i].onholdsCount+=1,e.employeesOnHoldView[i].totalAmountToPay+=t.totalAmountToPay,e.employeesOnHoldView[i].onholds.push(t);else{var n={};n.employeeId=t.employeeId,n.onholdsCount=1,n.employeeName=t.employeeName,n.totalAmountToPay=t.totalAmountToPay,n.onholds=[],n.employeeNumber=t.employeeNumber,n.onholds.push(t),e.employeesOnHoldView.push(n)}})},t.prototype.showPreviousComments=function(e){this.$uibModal.open({templateUrl:"comments-history",windowClass:"small-btn",controller:"PayrollCommentHistoryController as vm",resolve:{comments:function(){return e.comments},employeeName:function(){return e.employeeName}}})},t.$inject=["payrollData","AppSettings","$uibModalInstance","$filter","PrePayrollReadonlyService","$uibModal","PayrollSalryHoldService"],t}();t.PayrollEmployeesOnHoldAndArrearsReadOnlyController=o;var r=function(){function e(e,t,i,n,o,r,a){var s=this;this.$scope=e,this.$filter=t,this.$uibModalInstance=i,this.prePayrollReadonlyService=n,this.payrollData=o,this.$uibModal=r,this.PayrollModel=a,this.model={},this.steps=[],this.initializeBonusDetails=function(){s.model={},s.model.bonusDetailsView=[],s.prePayrollReadonlyService.getBonusDetails(s.groupId,s.currentCycle.id).then(function(e){s.model.bonusDetails=e.map(function(e){return new s.PayrollModel.BonusDetails(e,s.currentCycle)}),s.model.bonusDetails=s.$filter("orderBy")(s.model.bonusDetails,["employeeId"]),s.model.bonusDetails.forEach(function(e){var t=s.model.bonusDetailsView.length-1;if(s.model.bonusDetailsView.length>0&&s.model.bonusDetailsView[t].employeeId==e.employeeId)s.model.bonusDetailsView[t].amount+=e.amount,s.model.bonusDetailsView[t].onHoldBonuses.push(e);else{var i={};i.employeeId=e.employeeId,i.employeeName=e.employeeName,i.employeeNumber=e.employeeNumber,i.amount=e.amount,i.onHoldBonuses=[],i.onHoldBonuses.push(e),s.model.bonusDetailsView.push(i)}})})},this.initializeRevisionDetails=function(){s.model={},s.prePayrollReadonlyService.getSalaryRevisionsDetails(s.groupId,s.currentCycle.id).then(function(e){s.model.salaryRevisionDetails=e.map(function(e){return new s.PayrollModel.SalaryRevisionDetails(e,s.currentCycle)}),s.model.salaryRevisionDetails.current=s.model.salaryRevisionDetails.filter(function(e){return e.forCurrentMonth()}),s.model.salaryRevisionDetails.previous=s.model.salaryRevisionDetails.filter(function(e){return!e.forCurrentMonth()})})},this.currentCycle=o.currentCycle,this.groupId=o.groupId,this.payTypes={2:{name:"Pay",value:2},0:{name:"On Hold",value:0},1:{name:"Void (Never Pay)",value:1},3:{name:"Paid Outside Keka Payroll",value:3},4:{name:"Partially Pay",value:4}},this.init()}return e.prototype.init=function(){this.steps=[new SharedModel.Step(1,"Bonus","","read-only-bonus-payments",!0,this.initializeBonusDetails),new SharedModel.Step(2,"Salary Revisions","","read-only-salary-revisions",!0,this.initializeRevisionDetails),new SharedModel.Step(3,"OverTime Payment","","overtime-payment",!0)],this.currentStep=this.steps[0],this.currentStep.init()},e.prototype.gotoStep=function(e){var t=this.steps.find(function(t){return t.index==e-1});if(!t||t&&t.valid){var i=this.steps.find(function(t){return t.index==e});i?(this.currentStep=i,null!=this.currentStep.init&&this.currentStep.init()):this.closeModal()}},e.prototype.showPreviousComments=function(e){this.modalInstance=this.$uibModal.open({templateUrl:"comments-history",controller:"PayrollCommentHistoryController as vm",resolve:{comments:function(){return e.previousComments},employeeName:function(){return e.employeeName}}})},e.prototype.closeModal=function(){this.$uibModalInstance.close()},e.$inject=["$scope","$filter","$uibModalInstance","PrePayrollReadonlyService","payrollData","$uibModal","PayrollModel"],e}();t.payrollSalaryChangesReadOnlyController=r;var a=function(){function e(e,t,i){this.PrePayrollReadonlyService=e,this.$filter=t,this.$scope=i,this.payTypes={2:{name:"Pay",value:2},0:{name:"On Hold",value:0},1:{name:"Void (Never Pay)",value:1}},this.init()}return e.prototype.init=function(){var e=this;this.PrePayrollReadonlyService.getLeaveEncashments(this.$scope.vm.payrollConfig.payGroupId,this.$scope.vm.currentCycle.id).then(function(t){e.leaveEncashments=t,e.leaveEncashmentsView=[],e.leaveEncashments=e.$filter("orderBy")(e.leaveEncashments,["employeeId"]),e.leaveEncashments.forEach(function(t){var i=e.leaveEncashmentsView.length-1;if(e.leaveEncashmentsView.length>0&&e.leaveEncashmentsView[i].employeeId==t.employeeId)e.leaveEncashmentsView[i].encashmentsCount+=t.days,e.leaveEncashmentsView[i].amount+=t.amount,e.leaveEncashmentsView[i].encashments.push(t);else{var n={};n.employeeId=t.employeeId,n.encashmentsCount=t.days,n.employeeName=t.employeeName,n.employeeNumber=t.employeeNumber,n.amount=t.amount,n.encashments=[],n.encashments.push(t),e.leaveEncashmentsView.push(n)}})})},e.$inject=["PrePayrollReadonlyService","$filter","$scope"],e}();t.PayrollLeaveEncashmentReadOnlyController=a;var s=function(){function e(e,t,i,n){this.$scope=e,this.PrePayrollReadonlyService=t,this.PayrollModel=i,this.appSettings=n,this.employeesLossOfDays=[],this.employeesLopReversals=[],this.init()}return e.prototype.init=function(){var e=this;this.PrePayrollReadonlyService.getEmployeesLossOfDays(this.$scope.vm.payrollConfig.payGroupId,this.$scope.vm.currentCycle.id).then(function(t){e.employeesLossOfDays=t}),this.PrePayrollReadonlyService.getEmployeesLopReversals(this.$scope.vm.payrollConfig.payGroupId,this.$scope.vm.currentCycle.id).then(function(t){e.employeesLopReversals=t.map(function(t){return new e.PayrollModel.LossOfPayReversalView(t)})}),this.initLopGridOptions(),this.initLopReversalGridOptions()},e.prototype.initLopGridOptions=function(){var e=this;this.lopSummaryGridOptions=angular.copy(this.appSettings.gridSettings),this.lopSummaryGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",width:150},{field:"employeeName",displayName:"Employee"},{name:"lopfromA",displayName:"Lop from Previous Screens(A)",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.days}}</div>'},{name:"lopfromB",displayName:"Lop from Adjustment(B)",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="row.entity.override.source != 1">{{row.entity.override.days}}</div>',sortingAlgorithm:this.sortLopAdjustments},{name:"override.days",displayName:"Final Lop",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.override.days}}</div>'},{field:"override.comment",displayName:"Comment",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.override.comment}}</div>'}],this.lopSummaryGridOptions.rowHeight=50,this.lopSummaryGridOptions.enableHorizonalScrollbar=!1,this.lopSummaryGridOptions.data="ctrl.employeesLossOfDays | filter : ctrl.searchText",this.lopSummaryGridOptions.onRegisterApi=function(t){e.gridApi=t}},e.prototype.initLopReversalGridOptions=function(){var e=this;this.lopReversalGridOptions=angular.copy(this.appSettings.gridSettings),this.lopReversalGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",width:150},{field:"employeeName",displayName:"Employee"},{field:"lopMonth",displayName:"Lop Month",cellTemplate:"<div class=\"ui-grid-cell-contents\">{{row.entity.cycleDate | date: 'MMM - yyyy' }}</div>"},{field:"availableLopDays",displayName:"Actual Lop"},{field:"days",displayName:"Lop Reversal Days"},{field:"comment",displayName:"Comment"}],this.lopReversalGridOptions.rowHeight=50,this.lopReversalGridOptions.enableHorizonalScrollbar=!1,this.lopReversalGridOptions.data="ctrl.employeesLopReversals | filter : ctrl.searchTextLopReversal",this.lopReversalGridOptions.onRegisterApi=function(t){e.gridApiLopReversal=t}},e.prototype.sortLopAdjustments=function(e,t,i,n,o){e=parseInt(i.entity.override.days),t=parseInt(n.entity.override.days);var r=this.gridApi.core.sortHandleNulls(e,t);return null!==r?r:e===t?0:e>t?1:e<t?-1:0},e.$inject=["$scope","PrePayrollReadonlyService","PayrollModel","AppSettings"],e}();t.PayrollLopSummaryReadOnlyController=s;var l=function(){function t(e,t,i,n){this.PrePayrollReadonlyService=e,this.appSettings=t,this.$scope=i,this.$filter=n,this.init(),i.vm.currentStep.valid=!0}return t.prototype.initializeGridSettings=function(){this.$scope.leaveRequestGridOptions=angular.copy(this.appSettings.gridSettings),this.$scope.leaveRequestGridOptions.rowHeight=50,this.$scope.leaveRequestGridOptions.columnDefs=[{name:"fromDate",displayName:"Date",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.fromDate | date: \'MMM dd\' }}</span><span data-ng-if= "row.entity.days.floaterDays + row.entity.days.workingDays > 1"> - {{row.entity.toDate | date: \'MMM dd\' }} <span class="label label-info">{{row.entity.days.floaterDays + row.entity.days.workingDays}} days</span></span></div>',cellClass:"ui-grid-cell",enableCellEdit:!1},{field:"totalDays",displayName:"Total Days",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.days.floaterDays + row.entity.days.workingDays}}</span></div>',cellClass:"ui-grid-cell",enableCellEdit:!1},{name:"employeeNumber",field:"requestedBy.employeeNumber",displayName:"Employee Number",width:150},{name:"requestedBy",field:"requestedBy.displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.requestedBy.displayName}}</span></div>',cellClass:"ui-grid-cell",enableCellEdit:!1},{name:"leaveType",field:"leaveType",displayName:"Leave Type",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.leaveType}}</span></div>',cellClass:"ui-grid-cell",enableCellEdit:!1},{name:"status",displayName:"Status",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.status == grid.appScope.vm.leaveRequestStatus.Approved.id" class="text-success">Approved</span><span data-ng-if="row.entity.status == grid.appScope.vm.leaveRequestStatus.Pending.id" class="text-danger">Waiting for approval</span><span data-ng-if="row.entity.status == grid.appScope.vm.leaveRequestStatus.InApprovalProcess.id" class="text-danger">Partially Approved</span><span data-ng-if="row.entity.status == grid.appScope.vm.leaveRequestStatus.Rejected.id" class="text-danger">Rejected</span></div>',cellClass:"ui-grid-cell",enableCellEdit:!1},{name:"approverName",displayName:"Approver",cellTemplate:'<div class="ui-grid-cell-contents"><span class="clear-bottom" data-ng-if="row.entity.deductionType != 0 && row.entity.status == grid.appScope.vm.leaveRequestStatus.Approved.id">Attendance Tracking Policy</span><span ng-if="row.entity.deductionType == 0 || (row.entity.deductionType == 1 && row.entity.status == grid.appScope.vm.leaveRequestStatus.Pending.id)">{{grid.getCellValue(row, col)}}</span></div>',cellClass:"ui-grid-cell",enableCellEdit:!1}],this.$scope.leaveRequestGridOptions.data="vm.leaveRequests | filter : vm.filterText"},t.prototype.init=function(){var e=this;this.initializeGridSettings(),this.PrePayrollReadonlyService.getleaverequests(this.$scope.vm.payrollConfig.payGroupId,this.$scope.vm.currentCycle.from.dateOnlyString(),this.$scope.vm.currentCycle.to.dateOnlyString()).then(function(t){e.loadLeaveRequests(t.leaveTypes,t.leaveRequests),e.$scope.vm.leaveRequests=e.$filter("orderBy")(e.$scope.vm.leaveRequests,"fromDate",!0)})},t.prototype.loadLeaveRequests=function(t,i){var n=this;this.$scope.vm.leaveTypes=t,this.$scope.vm.leaveRequests=[],angular.forEach(i,function(t){t.days=n.getLeaveDuration(t.selection),t.approverName=n.getApproverName(t),n.$scope.vm.leaveRequests.push(new e.Model.RequestDetail(t))})},t.prototype.getLeaveDuration=function(e){var t=this,i=0,n=0;return angular.forEach(e,function(e){var o=t.$scope.vm.leaveTypes.find(function(t){return t.id==e.leaveTypeId});o&&o.systemLeaveType!=t.$scope.vm.systemLeaveType.floater.id?i+=e.count:n+=e.count}),{workingDays:i,floaterDays:n}},t.prototype.getApproverName=function(e){return e.status==this.$scope.vm.leaveRequestStatus.Pending.id||e.status==this.$scope.vm.leaveRequestStatus.InApprovalProcess.id?e.approvers:e.approvedBy},t.$inject=["PrePayrollReadonlyService","AppSettings","$scope","$filter"],t}();t.PayrollLeaveApprovalsReadOnlyController=l,angular.module("payroll").controller("payrollOneTimePaymentsAndDeductionsReadOnly",i).controller("payrollEmployeeChangesReadOnlyController",n).controller("payrollEmployeesOnHoldAndArrearsReadOnlyController",o).controller("payrollSalaryChangesReadOnlyController",r).controller("PayrollLeaveEncashmentReadOnlyController",a).controller("PayrollLopSummaryReadOnlyController",s).controller("PayrollLeaveApprovalsReadOnlyController",l)}(e.Readonly||(e.Readonly={}))}(e.PrePayroll||(e.PrePayroll={}))}(Payroll||(Payroll={})),function(e){!function(e){!function(e){var t=function(){function e(e,t,i){this.$urlRouterProvider=e,this.$stateProvider=t,this.appFeatures=i,this.registerRedirections(),this.registerDashboardRoutes(),this.registerAdminOpsRoutes(),this.registerLoansRoutes(),this.registerPerksRoutes(),this.registerPayrollImports(),this.registerForm16Routes(),this.registerComponentClaims(),this.registerReportsRoutes()}return Object.defineProperty(e.prototype,"PaygroupsFeature",{get:function(){return"PAYGROUPS"},enumerable:!0,configurable:!0}),e.prototype.registerDashboardRoutes=function(){this.$stateProvider.state("payrolloverview",{url:"/payroll/overview",templateUrl:"/payroll/overview",title:"Payroll Overview",controller:"PayrollOverviewController"}).state("payrolloverview.paygroup",{url:"/paygroup",templateUrl:"/payroll/PayGroupList",controller:"PayGroupDashboardController",parentState:"payrolloverview",controllerAs:"ctrl"}).state("payrolloverview.paygroup.summary",{url:"/:groupId/summary",templateUrl:"/payroll/summary",controller:"PayrollSummaryController",title:"Payroll Summary",parentState:"payrolloverview",resolve:{payrollConfiguration:["PayrollConfigurationService","$q","dialogs","$state","$stateParams",function(e,t,i,n,o){var r=t.defer();return e.getconfiguration(o.groupId).then(function(e){e.setupState.complete?r.resolve(e):(i.notify("Application notification","Payroll setup is not completed. To run payroll complete the setup .",{keyboard:!1,backdrop:"static"}).result.then(function(){n.go("settings.payroll")},function(e){n.go("settings.payroll.paygroup.details",{groupId:o.groupId})}),r.reject())}),r.promise}],currentFinancialYear:["PayrollService","$stateParams",function(e,t){return e.getFinancialYear(t.groupId)}]}})},e.prototype.registerLoansRoutes=function(){this.$stateProvider.state("payrolloverview.loans",{url:"/loans",templateUrl:"/payroll/loans",parentState:"payrolloverview",title:"Employee Loans",controller:"PayrollLoanOverviewController",controllerAs:"ctrl",resolve:{Service:["PayrollLoanService",function(e){return e}]}}).state("payrolloverview.loans.loansettings",{url:"/loansettings",title:"Loan Settings | Payroll Setup",onEnter:["$uibModal","$state","$stateParams","payrollConfiguration",function(e,t,i,n){e.open({templateUrl:"loanSettings",windowClass:"full-screen-modal",backdrop:!1,controller:"PayrollLoanSettingsController",resolve:{payrollConfig:function(){return n}}}).result.finally(function(){t.go("^")})}]}).state("payrolloverview.loans.outstanding",{url:"/outstanding",controller:"PayrollOustandingLoansController",controllerAs:"ctrl",templateUrl:"/payroll/outstandingloans",parentState:"payrolloverview.loans",title:"Outstanding | Loans"}).state("payrolloverview.loans.cleared",{url:"/cleared",templateUrl:"/finances/clearedloans",parentState:"payrolloverview.loans",title:"Cleared | Loans",controller:"PayrollClearedLoansController",controllerAs:"ctrl"}).state("payrolloverview.loans.request",{url:"/request",template:"<ui-view/>",parentState:"payrolloverview.loans"}).state("payrolloverview.loans.request.allPending",{url:"/all/pending",templateUrl:"/finances/loanrequests",parentState:"payrolloverview.loans",title:"Pending | Loan Request",controller:"PayrollLoanRequestController",controllerAs:"ctrl"}).state("payrolloverview.loans.request.approval",{url:"/:employeeId/approval/:loanRequestId",title:"Approve | LoanRequest",onEnter:["$uibModal","$state","$stateParams","PayrollLoanService",function(e,t,i,n){e.open({templateUrl:"payroll/addOrUpdateLoan",windowClass:"full-screen-modal",backdrop:!1,controller:"PayrollLoanApprovalController",controllerAs:"ctrl"}).result.finally(function(){t.go("^")})}]}).state("payrolloverview.loans.import",{url:"/import",title:"Import | Loans",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"excelLoanImport",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"PayrollEmployeeLoanImportController",controllerAs:"importCtrl"}).result.finally(function(){t.go("^")})}]}).state("payrolloverview.loans.details",{url:"/:employeeId/details/:loanId",title:"Loan Details | Loans",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){var n=t.current.name;e.open({templateUrl:"employeeLoanDetails",windowClass:"full-screen-modal",backdrop:!1,controller:"PayrollLoanDetailsController",controllerAs:"ctrl"}).result.finally(function(){t.go(n||"^")})}]}).state("payrolloverview.loans.addnew",{url:"/addnew",title:"Add new Loan | Loans",onEnter:["$uibModal","$state",function(e,t){e.open({templateUrl:"payroll/addOrUpdateLoan",windowClass:"full-screen-modal",backdrop:!1,controller:"AddOrUpdateLoanController",controllerAs:"ctrl"}).result.finally(function(){t.go("^")})}]}).state("payrolloverview.loans.edit",{url:"/:loanId/edit/:employeeId",title:"Edit Loan | Loans",onEnter:["$uibModal","$state",function(e,t){e.open({templateUrl:"payroll/addOrUpdateLoan",windowClass:"full-screen-modal",backdrop:!1,controller:"AddOrUpdateLoanController",controllerAs:"ctrl"}).result.finally(function(){t.go("^")})}]})},e.prototype.registerAdminOpsRoutes=function(){this.$stateProvider.state("payrolloverview.adminops",{url:"/adminops",templateUrl:"/payroll/adminops",title:"Admin Ops",parentState:"payrolloverview"}).state("payrolloverview.adminops.summary",{url:"/summary",templateUrl:"/payroll/AdminOpsSummary",controller:"AdminOpsController",controllerAs:"ctrl",title:"Admin Ops Summary",parentState:"payrolloverview.adminops"}).state("payrolloverview.adminops.summary.importfinancialdetails",{url:"/importfinancialdetails",title:"Import Employee Financial Details",parentState:"payrolloverview.adminops",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"import/Financial",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"PayrollFinancialImportController as importCtrl"}).result.finally(function(){t.go("payrolloverview.adminops")})}]}).state("payrolloverview.adminops.summary.importinvestmentdeclaration",{url:"/importinvestmentdeclaration",title:"Import Employee Investment Declaration",parentState:"payrolloverview.adminops",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"import/InvestmentDeclaration",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"PayrollDeclarationImportController as importCtrl"}).result.finally(function(){t.go("payrolloverview.adminops")})}]}).state("payrolloverview.adminops.summary.importeffectivebonuses",{url:"/importeffectivebonuses",title:"Import Employee Bonuses with Payout Date",parentState:"payrolloverview.adminops",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"import/EffectiveBonuses",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"PayrollEffectiveBonusImportController as bonusImportCtrl"}).result.finally(function(){t.go("payrolloverview.adminops")})}]}).state("payrolloverview.adminops.summary.importeffectivesalary",{url:"/importeffectivesalary",title:"Import Employee Salaries with effective date",parentState:"payrolloverview.adminops",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"import/PayrollEffectiveSalary",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"PayrollEffectiveSalaryImportController as importCtrl"}).result.finally(function(){t.go("payrolloverview.adminops")})}]}).state("payrolloverview.adminops.summary.importpaygroupassignment",{url:"/importpaygroupassignment",title:"Import Pay group Assignment Details",parentState:"payrolloverview.adminops",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"import/PayGroupAssignment",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"PayGroupAssignmentImportController as importCtrl"}).result.finally(function(){t.go("payrolloverview.adminops")})}]}).state("payrolloverview.adminops.summary.tdsOverride",{url:"/tdsOverride",title:"TDS Override",parentState:"payrolloverview.adminops",onEnter:["$stateParams","$state","$uibModal","PayrolAdminOpsService","PayrollService","PayrollModel",function(e,t,i,n,o,r){i.open({templateUrl:"ComponentOverride/TdsDeductionOverride",controller:"TDSOverrideSummaryController",controllerAs:"ctrl",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll tds-deduction-override",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.adminops")})}]}).state("payrolloverview.adminops.summary.esiOverride",{url:"/esiOverride",title:"ESI Override",parentState:"payrolloverview.adminops",onEnter:["$stateParams","$state","$uibModal","PayrolAdminOpsService","PayrollService","PayrollModel",function(e,t,i,n,o,r,a){i.open({templateUrl:"ComponentOverride/ESIOverride",controller:"ESIOverrideSummaryController",controllerAs:"ctrl",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll tds-deduction-override",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.adminops")})}]}).state("payrolloverview.adminops.summary.ptOverride",{url:"/ptOverride",title:"PT Override",parentState:"payrolloverview.adminops",onEnter:["$stateParams","$state","$uibModal","PayrolAdminOpsService","PayrollService","PayrollModel",function(e,t,i,n,o,r){i.open({templateUrl:"ComponentOverride/PTOverride",controller:"PTOverrideSummaryController",controllerAs:"ctrl",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll tds-deduction-override",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.adminops")})}]}).state("payrolloverview.adminops.summary.itdeclarationapprovals",{url:"/itdeclarationapprovals",parentState:"payrolloverview.adminops",title:"IT Declaration Approvals",onEnter:["$uibModal","$state",function(e,t){e.open({templateUrl:"IncomeTax/ITDeclarationApprovals",controller:"DeclarationApprovalListController",controllerAs:"ctrl",windowClass:"full-screen-modal dark-modal no-scroll-x declaration-doc-approvals",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.adminops")})}]}).state("payrolloverview.adminops.summary.employeecomponentoverride",{url:"/employeecomponentoverride",parentState:"payrolloverview.adminops",title:"Employee Component Override",onEnter:["$uibModal","$state","PayrolAdminOpsService",function(e,t,i){e.open({templateUrl:"ComponentOverride/EmployeeComponentOverride",controller:"EmployeeComponentSummaryController",controllerAs:"ctrl",windowClass:"full-screen-modal no-scroll employee-component-summary",keyboard:!1,backdrop:!1}).result.finally(function(){t.go("payrolloverview.adminops")})}]}).state("payrolloverview.adminops.summary.tdsmanagement",{url:"/tdsmanagement",parentState:"payrolloverview.adminops",title:"Income Tax and TDS Management",onEnter:["$uibModal","$state",function(e,t){e.open({templateUrl:"IncomeTax/ChallanSummary",controller:"PayrollETDSChallanController",controllerAs:"ctrl",windowClass:"full-screen-modal no-scroll-x",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.adminops")})}]}).state("payrolloverview.adminops.summary.reimbursementclaim",{url:"/reimbursementclaim/:componentName",parentState:"payrolloverview.adminops",title:"Reimbursement Claim",onEnter:["$uibModal","$state","$stateParams","PayrollService","PayrollModel",function(e,t,i,n,o){e.open({templateUrl:"ComponentOverride/ReimbursementClaim",controller:"ReimbursementClaimController",windowClass:"full-screen-modal no-scroll",controllerAs:"ctrl",backdrop:!1,keyboard:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.adminops")})}]}).state("payrolloverview.adminops.summary.employeebankinfo",{url:"/employeebankinfo",parentState:"payrolloverview.adminops",title:"Employee Bank Info",onEnter:["$uibModal","$state",function(e,t){e.open({templateUrl:"FinancialOpts/BankInformation",controller:"EmployeeBankInfoController",controllerAs:"ctrl",windowClass:"full-screen-modal no-scroll employee-bank-info",keyboard:!1,backdrop:!1}).result.finally(function(){t.go("payrolloverview.adminops")})}]}).state("payrolloverview.adminops.summary.employeepaninfo",{url:"/employeepaninfo",parentState:"payrolloverview.adminops",title:"Employee PAN Info",onEnter:["$uibModal","$state",function(e,t){e.open({templateUrl:"FinancialOpts/PANInformation",controller:"EmployeePanInfoController",controllerAs:"ctrl",windowClass:"full-screen-modal no-scroll employee-pan-info",keyboard:!1,backdrop:!1}).result.finally(function(){t.go("payrolloverview.adminops")})}]}).state("payrolloverview.adminops.summary.employeepayrollsummary",{url:"/employeepayrollsummary",parentState:"payrolloverview.adminops",title:"Employee Payroll Status",onEnter:["$uibModal","$state",function(e,t){e.open({templateUrl:"FinancialOpts/PayrollStatus",controller:"EmployeePayrollStatusController",controllerAs:"ctrl",windowClass:"full-screen-modal no-scroll",keyboard:!1,backdrop:!1}).result.finally(function(){t.go("payrolloverview.adminops")})}]}).state("payrolloverview.adminops.summary.employeePayGroupetails",{url:"/employeepaygroupDetails",title:"Employee pay Group  Details",parentState:"payrolloverview.adminops",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"FinancialOpts/PayGroupDetails",windowClass:"full-screen-modal no-scroll",controller:"PREmployeePayGroupDetailsController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.finally(function(){t.go("payrolloverview.adminops")})}]}).state("payrolloverview.adminops.summary.employeepfoptions",{url:"/employeepfoptions",parentState:"payrolloverview.adminops",title:"Employee PF Options",onEnter:["$uibModal","$state","PayrolAdminOpsService",function(e,t,i){e.open({templateUrl:"ComponentOverride/PFOverride",controller:"EmployeesPFOptionsController",windowClass:"full-screen-modal no-scroll",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.adminops")})}]}).state("payrolloverview.adminops.summary.employeepreviousincome",{url:"/employeepreviousincome",parentState:"payrolloverview.adminops",title:"Employee Previous Income",onEnter:["$uibModal","$state","PayrolAdminOpsService",function(e,t,i){e.open({templateUrl:"IncomeTax/EmployeePreviousIncome",controller:"PreviousIncomeDetailsController",windowClass:"full-screen-modal no-scroll",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.finally(function(){t.go("payrolloverview.adminops")})}]}).state("payrolloverview.adminops.summary.employeepfandesioptions",{url:"/employeepfandesioptions",parentState:"payrolloverview.adminops",title:"Employee PF And ESI Options",onEnter:["$uibModal","$state",function(e,t){e.open({templateUrl:"FinancialOpts/PFAndESIInfo",controller:"EmployeePfAndEsiInfoController",controllerAs:"ctrl",windowClass:"full-screen-modal no-scroll employee-pan-info",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.adminops")})}]}).state("payrolloverview.adminops.summary.employeebonus",{url:"/employeebonus",parentState:"payrolloverview.adminops",title:"Bulk Delete Bonus",onEnter:["$uibModal","$state",function(e,t){e.open({templateUrl:"Payroll/PendingBonus",controller:"EmployeeBonusDeleteController",controllerAs:"ctrl",windowClass:"full-screen-modal payroll-modal no-scroll",keyboard:!1,backdrop:!1}).result.finally(function(){t.go("payrolloverview.adminops")})}]})},e.prototype.registerPerksRoutes=function(){this.$stateProvider.state("payrolloverview.perquisites",{url:"/perquisites",templateUrl:"/payroll/perquisites",parentState:"payrolloverview"}).state("payrolloverview.perquisites.types",{url:"/types",templateUrl:"/payroll/benefits",controller:"PayrollBenefitsController",controllerAs:"ctrl",title:"Perks",parentState:"payrolloverview.perquisites"}).state("payrolloverview.perquisites.types.addperk",{url:"/addperk",title:"Add Perk | Payroll",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"addBenefit",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"AddBenefitController",controllerAs:"ctrl",resolve:{benefitModel:function(){return{}}}}).result.finally(function(){t.go("^")})}]}).state("payrolloverview.perquisites.types.editperk",{url:"/editperk/:benefitId",title:"Edit Perk | Payroll",onEnter:["$uibModal","$state","$stateParams","BenefitConfigurationService",function(e,t,i,n){e.open({templateUrl:"addBenefit",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"AddBenefitController",controllerAs:"ctrl",resolve:{benefitModel:function(){return n.getBenefitConfiguration(i.benefitId)}}}).result.finally(function(){t.go("^")})}]}).state("payrolloverview.perquisites.assign",{url:"/assign",templateUrl:"/payroll/assignbenefit",controller:"PayrollEmployeeBenefitsController",resolve:{availableBenefitConfigs:["BenefitConfigurationService",function(e){return e.getAllBenefitConfiguration().then(function(e){return e.benefitsConfiguration.items})}]},controllerAs:"ctrl",title:"Perks Assignment",parentState:"payrolloverview.perquisites"}).state("payrolloverview.perquisites.assign.employee",{url:"/:groupId/FY:financialYear/employee/:employeeId",title:"Employee Assignment | Perks",onEnter:["$uibModal","$state","$stateParams","availableBenefitConfigs",function(e,t,i,n){e.open({templateUrl:"assignBenefit",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"ManageEmployeeBenefitsController",controllerAs:"ctrl",resolve:{selectedFinancialYear:function(){return i.financialYear},benefitTypes:function(){return n},employeeId:function(){return i.employeeId},groupId:function(){return i.groupId}}}).result.finally(function(){t.go("^")})}]}).state("payrolloverview.perquisites.assignbulkemployee",{url:"/:groupId/FY:financialYear/bulkassign",title:"Import | Perks",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"excelPerkImport",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"PayrollEmployeePerksImportController",controllerAs:"importCtrl",resolve:{selectedFinancialYear:function(){return i.financialYear},groupId:function(){return i.groupId}}}).result.finally(function(){t.go("^.assign")})}]})},e.prototype.registerPayrollImports=function(){this.$stateProvider.state("importpayroll",{url:"/import/payroll",templateUrl:"/import/payroll",controller:"PayrollImportDashboardController",controllerAs:"dashboardCtrl",title:"Import Salary",parentState:"settings"}).state("importpayroll.currentsalaries",{url:"/importcurrentsalary",title:"Import Employee Current Salary Information",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"import/PayrollCurrentSalary",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"PayrollCurrentSalaryImportController as importCtrl"}).result.finally(function(){t.go("importpayroll")})}]}).state("importpayroll.previoussalaries",{url:"/importprevioussalary",title:"Import Employee Previous Salary Information",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"import/PayrollPreviousSalary",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"PayrollPreviousSalaryImportController as importCtrl",resolve:{Month:null}}).result.finally(function(){t.go("importpayroll")})}]}).state("importpayroll.financialdetails",{url:"/importfinancialdetails",title:"Import Employee Financial Details",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"import/Financial",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"PayrollFinancialImportController as importCtrl"}).result.finally(function(){t.go("importpayroll")})}]}).state("importpayroll.investmentdeclaration",{url:"/importinvestmentdeclaration",title:"Import Employee Investment Declaration",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"import/InvestmentDeclaration",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"PayrollDeclarationImportController as importCtrl"}).result.finally(function(){t.go("importpayroll")})}]}).state("importpayroll.effectivebonuses",{url:"/importeffectivebonuses",title:"Import Employee Bonuses with Payout Date",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"import/EffectiveBonuses",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"PayrollEffectiveBonusImportController as bonusImportCtrl"}).result.finally(function(){t.go("importpayroll")})}]}).state("importpayroll.effectivesalary",{url:"/importeffectivesalary",title:"Import Employee Salaries with effective date",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"import/PayrollEffectiveSalary",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"PayrollEffectiveSalaryImportController as importCtrl"}).result.finally(function(){t.go("importpayroll")})}]}).state("importpayroll.currentsalarywithstructuretype",{url:"/importcurrentsalarywithstructuretype",title:"Import Employee Salaries with structure type",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"import/PayrollCurrentSalary",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"PayrollCurrentSalaryWithStructureTypeImportController as importCtrl"}).result.finally(function(){t.go("importpayroll")})}]}).state("importpayroll.componentaccrual",{url:"/importcomponentaccrual/:componentName",title:"Import component Accrual",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"import/ComponentAccrual",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"PayrollComponentAccrualImportController as importCtrl"}).result.finally(function(){t.go("importpayroll")})}]}).state("importpayroll.previousComponentClaims",{url:"/previousComponentClaims/:componentName",title:"Import component claim",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"import/PreviousComponentClaim",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"PayrollPreviousComponentClaimImportController as importCtrl"}).result.finally(function(){t.go("importpayroll")})}]})},e.prototype.registerForm16Routes=function(){this.$stateProvider.state("payrolloverview.form16",{url:"/form16",templateUrl:"/payroll/form16",parentState:"payrolloverview",title:"Form16",controllerAs:"ctrl"}).state("payrolloverview.form16.summary",{url:"/summary",templateUrl:"/payroll/form16Summary",parentState:"payrolloverview.form16",title:"Form16 | Summary",controller:"EmployeesForm16Controller",controllerAs:"ctrl"}).state("payrolloverview.form16.generatortool",{url:"/generatortool",templateUrl:"/payroll/form16Generatortool",parentState:"payrolloverview.form16",title:"Form16 | Tool",controller:"DownloadDocumentSignerController",controllerAs:"ctrl"})},e.prototype.registerReportsRoutes=function(){this.$stateProvider.state("payrolloverview.reports",{url:"/reports",templateUrl:"/payroll/reports",parentState:"payrolloverview",title:"Payroll Reports"}).state("payrolloverview.reports.summary",{url:"/summary",templateUrl:"/payroll/reportssummary",parentState:"payrolloverview.reports",title:"All Report",controllerAs:"ctrl",controller:"ReportDashboardController"}).state("payrolloverview.reports.compliancereports",{url:"/compliancereports",templateUrl:"/payroll/compliancereports",parentState:"payrolloverview.reports",title:"Compliance Report"})},e.prototype.registerComponentClaims=function(){this.$stateProvider.state("payrolloverview.componentClaims",{url:"/componentClaims",templateUrl:"/payroll/ComponentClaims",parentState:"payrolloverview",title:"Component Claims"}).state("payrolloverview.componentClaims.pending",{url:"/Pending",templateUrl:"/payroll/PendingComponentClaims",parentState:"payrolloverview",title:"Pending Component claims",controller:"PendingComponentClaimsController",controllerAs:"ctrl"}).state("payrolloverview.componentClaims.approved",{url:"/approved",templateUrl:"/payroll/ApprovedComponentClaims",parentState:"payrolloverview",title:"Approved Component claims",controller:"ApprovedComponentClaimsController",controllerAs:"ctrl"}).state("payrolloverview.componentClaims.addreceipts",{url:"/addreceipts",templateUrl:"/payroll/ApprovedComponentClaims",parentState:"payrolloverview",title:"Approved Component claims",controller:"AddReceiptsComponentClaimsController",controllerAs:"ctrl"}).state("payrolloverview.componentClaims.rejected",{url:"/rejected",templateUrl:"/payroll/RejectedComponentClaims",parentState:"payrolloverview",title:"Rejected Component claims",controller:"RejectedComponentClaimsController",controllerAs:"ctrl"}).state("payrolloverview.componentClaims.reviewClaim",{url:"/reviewClaim/:status/:employeeId/:claimId",title:"Review Componet Claim",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"Payroll/ReviewComponentClaim",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"ReviewComponentClaimController as ctrl",resolve:{ComponentClaim:function(){return{employeeId:e.employeeId,id:e.claimId}}}}).result.finally(function(){"pending"==e.status?window.location.href="/ui/#/payroll/component-claims/pending":"approved"==e.status?window.location.href="/ui/#/payroll/component-claims/approved":window.location.href="/ui/#/payroll/component-claims/rejected"})}]})},e.prototype.registerRedirections=function(){this.$urlRouterProvider.when("/payroll/overview","/payroll/overview/paygroup"),this.$urlRouterProvider.when("/payroll/overview/adminops","/payroll/overview/adminops/summary"),this.$urlRouterProvider.when("/payroll/overview/perquisites","/payroll/overview/perquisites/types"),this.$urlRouterProvider.when("/payroll/overview/loans","/payroll/overview/loans/outstanding"),this.$urlRouterProvider.when("/payroll/overview/form16","/payroll/overview/form16/summary"),this.$urlRouterProvider.when("/payroll/overview/loans/request","/payroll/overview/loans/request/all/pending"),this.$urlRouterProvider.when("/payroll/overview/componentClaims","/payroll/overview/componentClaims/Pending"),this.$urlRouterProvider.when("/payroll/overview/reports","/payroll/overview/reports/summary")},e}();e.DashBoardConfigurationRouting=t,angular.module("payroll").config(["$urlRouterProvider","$stateProvider",function(e,i){new t(e,i,this.appAccessKeys)}])}(e.routing||(e.routing={}))}(e.Configuration||(e.Configuration={}))}(Payroll||(Payroll={})),function(e){!function(t){var i=function(){function t(t,i,n,o,r){var a=this;this.appSettings=i,this.modelInstance=n,this.epfService=o,this.PayrollLookUpService=r,this.ecrGridTypeOptions=[{id:e.Model.PFECRFileType.Version2ECR,title:"ECR V2"},{id:e.Model.PFECRFileType.Version2ArrearECR,title:"Arrear ECR"}],this.exportECR=function(e){e.name="employerecr",e.ecrFileType=a.ecrFileType,e.enableHigherPension=a.payrollConfig.pf.enableHigherPension,e.cycleId=a.currentCycle.id,e.pfConfigurationId=a.pfConfigurationId,a.epfService.exportECR(a.payrollConfig.payGroupId,e)},this.closeModal=function(){a.modelInstance.close()},this.currentCycle=t.cycle,this.payrollConfig=t.payrollConfig,this.ecrFileType=e.Model.PFECRFileType.Version2ECR,this.changeECRGridType()}return t.prototype.initPFECRGridOptions=function(){this.pfECRGridOptions=angular.copy(this.appSettings.gridSettings),this.pfECRGridOptions.rowHeight=40,this.pfECRGridOptions.columnDefs=[{field:"uan",displayName:"UAN",cellTooltip:!0},{field:"memberName",displayName:"Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.memberName}}">{{row.entity.memberName}}</a></div>',cellTooltip:!0},{field:"gross",displayName:"Gross Wages",cellTooltip:!0,cellFilter:"currency:'':2"},{field:"epfWages",displayName:"EPF Wages",cellTooltip:!0,cellFilter:"currency:'':2"},{field:"epsWages",displayName:"EPS Wages",cellTooltip:!0,cellFilter:"currency:'':2"},{field:"edliWages",displayName:"EDLI Wages",cellTooltip:!0,cellFilter:"currency:'':2"},{field:"employeeShareRemitted",displayName:"EE Share Remitted ",cellTooltip:!0,cellFilter:"currency:'':2"},{field:"epsContributionRemitted",displayName:"EPS Contribution Remitted",cellTooltip:!0,cellFilter:"currency:'':2"},{field:"employerShareReimtted",displayName:"ER Share Remitte",cellTooltip:!0,cellFilter:"currency:'':2"},{field:"ncpDays",displayName:"NCP Days",cellTooltip:!0},{field:"refundOfAdvances",displayName:"Refunds",cellTooltip:!0,cellFilter:"currency:'':2"}],this.pfECRGridOptions.data="ctrl.pfECRLineItems | filter : vm.searchText"},t.prototype.initArrearPFECRGridOptions=function(){this.pfECRGridOptions=angular.copy(this.appSettings.gridSettings),this.pfECRGridOptions.rowHeight=40,this.pfECRGridOptions.columnDefs=[{field:"uan",displayName:"UAN",cellTooltip:!0},{field:"memberName",displayName:"Name",cellTooltip:!0},{field:"epfWages",displayName:"Arrear EPF Wages",cellTooltip:!0,cellFilter:"currency:'':2"},{field:"epsWages",displayName:"Arrear EPS Wages",cellTooltip:!0,cellFilter:"currency:'':2"},{field:"edliWages",displayName:"Arrear EDLI Wages",cellTooltip:!0,cellFilter:"currency:'':2"},{field:"epfEmployeeShare",displayName:"Employee share EPF",cellTooltip:!0,cellFilter:"currency:'':2"},{field:"epfEmployerShare",displayName:"Employer Share EPF",cellTooltip:!0,cellFilter:"currency:'':2"},{field:"epsContributionShare",displayName:"Pension Fund Contribution",cellTooltip:!0,cellFilter:"currency:'':2"}],this.pfECRGridOptions.data="ctrl.pfECRLineItems | filter : vm.searchText"},t.prototype.changeECRGridType=function(){var t=this;this.epfService.getEPFLineItems(this.payrollConfig.payGroupId,this.currentCycle.id,this.ecrFileType,this.payrollConfig.pf.enableHigherPension).then(function(i){switch(t.ecrFileType){case e.Model.PFECRFileType.Version2ECR:t.initPFECRGridOptions();break;case e.Model.PFECRFileType.Version2ArrearECR:t.initArrearPFECRGridOptions()}t.pfECRLineItems=i,t.AllPfECRLineItems=i,t.PayrollLookUpService.getStatutoryPFInfo(t.payrollConfig.payGroupId).then(function(e){t.pfLookup=e,e.length>0&&(t.pfConfigurationId=e[0].id,t.changePFEstablishmentId())})})},t.prototype.changePFEstablishmentId=function(){var e=this;this.pfECRLineItems=this.AllPfECRLineItems.filter(function(t){return t.pfConfigurationId==e.pfConfigurationId})},t.$inject=["payrollData","AppSettings","$uibModalInstance","EPFService","PayrollLookUpService"],t}();t.PFECRController=i;var n=function(){function e(e,t,i,n,o,r,a){var s=this;this.appSettings=t,this.modelInstance=i,this.ptService=n,this.$filter=o,this.appContext=r,this.appFeatures=a,this.initializeGridSettings=function(){s.registerGridOptions=angular.copy(s.appSettings.gridSettings),s.registerGridOptions.columnDefs=[{name:"employeeNumber",displayName:"Employee Number"},{name:"employeeName",displayName:"Employee Name"},{name:"month",displayName:"Month"},{name:"grossAmount",displayName:"Gross",cellFilter:"currency:'':2",type:"number"},{name:"state",displayName:"State"},{name:"taxAmount",displayName:"Professional Tax",cellFilter:"currency:'':2",cellTooltip:!0,headerTooltip:!0,type:"number"}],s.registerGridOptions.data="vm.employeePTSummary | filter : vm.searchText"},this.currentCycle=e.cycle,this.payrollConfig=e.payrollConfig,this.ptService.getEmployeesPT(this.payrollConfig.payGroupId,this.currentCycle.month+1,this.currentCycle.year).then(function(e){s.employeePTSummary=e,s.ptApplicableStates=Object.keys(s.$filter("groupBy")(s.employeePTSummary,"stateCode")),s.initializeGridSettings()}),this.statutorySettingsUrl=this.appContext.isFeaturePresent(this.appFeatures.Paygroups.title)?"settings.payroll.paygroup.details.getStarted.statutoryfilinginfo({ groupId: vm.payrollConfig.payGroupId })":"settings.payroll.getStarted.statutoryfilinginfo({ groupId: vm.payrollConfig.payGroupId })"}return e.prototype.getForm5=function(e){var t=this;this.ptService.exportPTForm5(this.payrollConfig.payGroupId,{year:this.currentCycle.year,month:this.currentCycle.month+1,state:e,format:"pdfform"}).then(function(e){e.isDownloaded||(t.isProfessionalTaxInfoNotAvaliable=!0)})},e.prototype.getPTStatment=function(e){this.ptService.exportPTStatment(this.payrollConfig.payGroupId,{year:this.currentCycle.year,month:this.currentCycle.month+1,format:e})},e.prototype.closeModal=function(){this.modelInstance.close()},e.$inject=["payrollData","AppSettings","$uibModalInstance","PTService","$filter","AppContext","AppFeatures"],e}();t.PTSummaryController=n;var o=function(){function t(t,i,n,o,r,a){this.payrollData=t,this.esiReportService=i,this.appSettings=n,this.uiGridGroupingConstants=o,this.uiGridExtensions=r,this.PayrollLookUpService=a,this.currentCycle=t.cycle,this.payrollConfig=t.payrollConfig,this.initGridSettings(),this.reasons=e.reports.model.ESIECRZeroWorkingDaysReason,this.getReportData()}return t.prototype.changeESIConfigurationId=function(){var e=this;this.filteredEsiECR=this.esiECR.filter(function(t){return t.esiConfigurationId==e.esiConfigurationId})},t.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTooltip:!0,enableGrouping:!1},{field:"esiNumber",displayName:"IP Number",cellTooltip:!0,enableGrouping:!1,cellTemplate:"<div class=\"ui-grid-cell-contents\"><span data-ng-if='row.entity.esiNumber' title='{{row.entity.esiNumber}}'>{{row.entity.esiNumber}}</span><span data-ng-if='!row.entity.esiNumber' class=\"error\">Missing IP No</span></div>"},{field:"employeeName",displayName:"IP Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.payslips({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',enableGrouping:!1},{field:"payDays",displayName:"Pay Days",enableGrouping:!1},{field:"totalWages",displayName:"Total Monthly Wages",enableGrouping:!1,type:"number",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"reasonForZeroWorkingDays",displayName:"Reason Code for Zero Working Day",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.appScope.reasons[row.entity.reasonForZeroWorkingDays]}}</div>'},{field:"exitDate",displayName:"Last Working Day"}],this.gridSettings.appScopeProvider=this,this.gridSettings.enableHorizontalScrollbar=!0,this.gridSettings.rowHeight=50,this.gridSettings.onRegisterApi=function(t){e.gridApi=t},this.gridSettings.data="ctrl.filteredEsiECR | filter : ctrl.filterText"},t.prototype.getReportData=function(){var e=this;this.esiReportService.getESIECR(this.payrollConfig.payGroupId,this.currentCycle.month+1,this.currentCycle.year).then(function(t){e.esiECR=t,e.filteredEsiECR=t}),this.PayrollLookUpService.getStatutoryESIInfo(this.payrollConfig.payGroupId).then(function(t){e.esiLookup=t,t.length>0&&(e.esiConfigurationId=t[0].id,e.changeESIConfigurationId())})},t.prototype.exportReport=function(e){this.esiReportService.exportESIECRReport(this.payrollConfig.payGroupId,this.esiConfigurationId,{month:this.currentCycle.month+1,year:this.currentCycle.year,format:e||"excel"})},t.$inject=["payrollData","ESIReportService","AppSettings","uiGridGroupingConstants","UiGridExtensions","PayrollLookUpService"],t}();t.MonthlyESIReturnController=o,angular.module("payroll").controller("PFECRController",i).controller("PTSummaryController",n).controller("MonthlyESIReturnController",o)}(e.PostPayrollActions||(e.PostPayrollActions={}))}(Payroll||(Payroll={})),function(e){!function(e){!function(e){var t=function(){function e(e,t,i){this.$urlRouterProvider=e,this.$stateProvider=t,this.appFeatures=i,this.registerPayrollReportsRoutes(),this.registerPFReportsRoutes(),this.registerpayrollRunReportsRoutes(),this.registerYTDReportsRoutes(),this.registerpayrollESIReportsRoutes(),this.registerIncomeTaxReportsRoutes(),this.registerProfessionalTaxReportsRoutes(),this.registerLoanReportsRoutes(),this.registerComplianceRoutes(),this.registerFullandFinalReportsRoutes()}return Object.defineProperty(e.prototype,"PaygroupsFeature",{get:function(){return"PAYRGROUPS"},enumerable:!0,configurable:!0}),e.prototype.registerPayrollReportsRoutes=function(){this.$stateProvider.state("payrolloverview.reports.summary.currentSalaryDetails",{url:"/currentsalarydetails",title:"Current Salary Structure Details",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"currentSalaryDetails",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x component-compare",controller:"EmployeesCurrentSalaryController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.currentSalaryDetailsWithBonuse",{url:"/currentsalarydetailswithbonus",title:"Current Salary Details with Bonus",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"currentSalaryDetailsWithBonus",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x component-compare",controller:"EmployeesCurrentSalaryWithBonusController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.annualsalarydetails",{url:"/annualsalarydetails",title:"Employees Current CTC Details",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"annualSalaryDetails",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x component-compare",controller:"EmployeesAnnualSalaryController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.currentctcdetails",{url:"/currentctcdetails",title:"Employees Current CTC Details",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"currentCTCDetails",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x component-compare",controller:"EmployeesCurrentCTCController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.expenseclaim",{url:"/expenseclaimreport",title:"Expense Claims Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"expenseClaimReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll",controller:"ExpenseClaimReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.expensetypesummary",{url:"/expensetypesummaryreport",title:"Expense Category Summary Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"expenseTypeSummaryReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll",controller:"ExpenseTypeSummaryReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.expenseclaimsBreakUp",{url:"/expenseclaimsBreakUpreport",title:"Expense Claims Break Up Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"expenseClaimsBreakUpReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll",controller:"ExpenseClaimBreakUpReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.financialinformation",{url:"/financialinformation",title:"Employee Financial Information",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"financial-report",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll",controller:"EmployeeFinancialReportController",controllerAs:"reportCtrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.perquisitesreport",{url:"/perquisitesreport",title:"Employee Perquisites Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal","PayrollService",function(e,t,i,n){i.open({templateUrl:"benefits-report",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll",controller:"EmployeeBenefitsReportController",controllerAs:"reportCtrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.bonusStatusReport",{url:"/bonusStatusReport",title:"Bonus Status Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"bonusStatusReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"BonusStatusReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.bonusRevisionReport",{url:"/bonusRevisionReport",title:"Bonus Revision Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"bonusRevisionReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"BonusRevisionReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]})},e.prototype.registerPFReportsRoutes=function(){this.$stateProvider.state("payrolloverview.reports.summary.pfremittancereport",{url:"/pfremittancereport",title:"PF Remittance Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"pfRemittanceReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x common-form-styles",controller:"PFRemittanceReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.pfmonthlyecr",{url:"/pfecr",title:"PF Monthly Electronic Return",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"pfECRReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"PFElectronicReturnController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.pfcontributioncard",{url:"/pfcontributioncard",title:"PF Contribution card - Form 6A",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"pfContributionCard",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"PFForm6AController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.pfjoineestatement",{url:"/pfjoineestatement",title:"PF Joinee Statement - Form 5",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"pfJoineeStatement",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"PFJoineeStatementController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.pfExitStatement",{url:"/pfexitstatement",title:"PF Exists Statement - Form 10",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"pfExitStatement",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"PFExitsStatementController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.pfform12astatement",{url:"/pfform12a",title:"PF Monthly Statement-Form 12A",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"pfForm12aStatement",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"PFForm12AController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.aadharsubmissionform",{url:"/aadharsubmissionform",title:"Aadhaar (UIDAI) submission Form",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"aadharSubmissionForm",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"AadharSubmissionController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.pfsummaryreport",{url:"/pfsummaryreport",title:"PF Summary Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"pfSummaryReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"PFSummaryReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.pfarrearreport",{url:"/pfarrearreport",title:"PF Arrear Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"pfArrearReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"PFArrearController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.pfadminchargesreport",{url:"/pfadminchargesreport",title:"PF Admin Charges Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"pfAdminChargesReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"PFAdminChargesController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]})},e.prototype.registerpayrollRunReportsRoutes=function(){this.$stateProvider.state("payrolloverview.reports.summary.payrollcomponentcomparision",{url:"/componentcomparision",title:"Employee Payroll Component Compare",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"payrollComponentComparision",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x component-compare",controller:"PRComponentCompareController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.monthlycomponentbreakup",{url:"/monthlycomponentbreakup",title:"Monthly Component Break Up",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"monthlyComponentBreakUp",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"PRMonthlyComponentBreakupController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.payRegisterAndFinacialDetails",{url:"/monthlycomponentbreakupwithFinacialDetails",title:"Monthly Component Break Up And FinacialDetails",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"monthlyComponentBreakUp",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"PRMonthlyComponentBreakupWithFinancialDetailsController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.arrearreport",{url:"/arrearreport",title:"Monthly Arrear Break Up",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"monthlyArrearReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"PRMonthlyArrearReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.contributionreconciliation",{url:"/contributionreconciliation",title:"Deduction and Contribution Reconciliation",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"contributionReconciliationReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x common-form-styles",controller:"ContributionReconciliationController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.employeepayrollstatus",{url:"/employeepayrollstatus",title:"Employee Payroll Status",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"employeePayrollStatus",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll",controller:"PREmployeePayrollStatusReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.employeereconciliation",{url:"/employeereconciliation",title:"Employee Monthly Reconciliation",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"employeeReconciliationReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x emp-reconcile-report common-form-styles",controller:"EmployeeReconciliationReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.grosscomponentsreconciliation",{url:"/grosscomponentsreconciliation",title:"Gross Components Reconciliation",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"grossComponentReconciliation",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x common-form-styles",controller:"GrosscomponentReconciliationController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.groupwisesummaryreport",{url:"/groupwisesummaryreport",title:"Group Wise Actuals Summary",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"groupwiseSummaryReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll  group-wise-report",controller:"GroupwiseSalarySumamryReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.salarydataandheadcount",{url:"/salarydataandheadcount",title:"Head Count Monthly Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"salaryDataAndHeadCountReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll head-count-report",controller:"HeadCountReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.monthlybatchpaymentstatement",{url:"/batchpaymentstatement",title:"Monthly Batch Payment Statement",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"monthlyBatchPayment",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x common-form-styles employee-payables-container",controller:"MonthlyBatchPaymentController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.tallyjournalvoucher",{url:"/salaryjournalvoucher",title:"Salary Journal Voucher",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"tallyJournalVoucher",windowClass:"full-screen-modal payroll-modal payroll-forms-container tally-vouchers-report no-scroll-x common-form-styles",controller:"PRTallyJournalVoucherReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.exitspayrollstatus",{url:"/exitspayrollstatus",title:"Exited Employees Payroll Status",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"exitsPayrollStatus",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll",controller:"PRExitsPayrollStatusController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.newjoineepayrollstatus",{url:"/newjoineepayrollstatus",title:"New Joinee Payroll Status",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"newJoineePayrollStatus",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll",controller:"PRNewJoineePayrollStatusController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.componentClaim",{url:"/componentClaim/:componentName",parentState:"payrolloverview.adminops",title:"Component Claim Reports",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"monthlyReimbursementReportTemplate",controller:"MonthlyReimbursementReportController as Ctrl",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x common-form-styles",controllerAs:"ctrl",backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.annualreimbursementclaimreport",{url:"/annualreimbursementclaim/:componentName",parentState:"payrolloverview.adminops",title:"Annual Reimbursement Claim Reports",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"annuallyReimbursementReportTemplate",controller:"AnnuallyReimbursementReportController as Ctrl",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x common-form-styles",controllerAs:"ctrl",backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.oneTimeDeductionReport",{url:"/oneTimeDeductionReport",title:"One Time Deduction Report",parentState:"payrolloverview.reports.summary",onEnter:["$state","$uibModal",function(e,t){t.open({templateUrl:"oneTimeTransactionReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll",controller:"OneTimeDeductionReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(t){angular.isDefined(t)&&e.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.oneTimePaymentsReport",{url:"/oneTimePayments",title:"One Time Payments Report",parentState:"payrolloverview.reports.summary",onEnter:["$state","$uibModal",function(e,t){t.open({templateUrl:"oneTimeTransactionReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll",controller:"OneTimePaymentReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(t){angular.isDefined(t)&&e.go("payrolloverview.reports.summary")})}]})},e.prototype.registerYTDReportsRoutes=function(){this.$stateProvider.state("payrolloverview.reports.summary.ytdReport",{url:"/ytdReport",title:"Salary YTD Report",parentState:"payrolloverview.reports.summary",onEnter:["$state","$uibModal",function(e,t){t.open({templateUrl:"ytdReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll",controller:"SalaryYTDReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.finally(function(){e.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.grossYTDReport",{url:"/grossYTDReport",title:"Gross YTD Report",parentState:"payrolloverview.reports.summary",onEnter:["$state","$uibModal",function(e,t){t.open({templateUrl:"GROSSYTDReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll",controller:"GrossYTDReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.finally(function(){e.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.tdsYTDReport",{url:"/tdsYTDReport",title:"TDS YTD Report",parentState:"payrolloverview.reports.summary",onEnter:["$state","$uibModal",function(e,t){t.open({templateUrl:"TDSYTDReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll",controller:"TDSYTDReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.finally(function(){e.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.pfYTDReport",{url:"/pfYTDReport",title:"PF YTD Report",parentState:"payrolloverview.reports.summary",onEnter:["$state","$uibModal",function(e,t){t.open({templateUrl:"PFYTDReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll",controller:"PFYTDReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.finally(function(){e.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.monthOnmonthYTDReport",{url:"/monthOnmonthYTDReport",title:"Month-on-Month YTD Report",parentState:"payrolloverview.reports.summary",onEnter:["$state","$uibModal",function(e,t){t.open({templateUrl:"monthOnmOnthYTDReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll",controller:"EmployeesMonthOnMonthYTDReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.finally(function(){e.go("payrolloverview.reports.summary")})}]})},e.prototype.registerpayrollESIReportsRoutes=function(){this.$stateProvider.state("payrolloverview.reports.summary.monthlyesistatement",{url:"/monthlyesistatement",title:"Monthly ESI Statement",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"monthlyEsiStatement",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x common-form-styles",controller:"MonthlyEsiStatementController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.esiemonthlyreturnecr",{url:"/esiemonthlyreturnecr",title:"ESI Monthly Return (Electronic)",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"esieMonthlyReturn",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"ESIReturnController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.esicontributionregister",{url:"/esicontributionregister",title:"Contribution Register (Form 6)",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"esiContributionRegister",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"ESIContributionController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.esioverridestemplate",{url:"/esioverrides",title:"ESI Deductions Override",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"esiOverridesTemplate",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"EsiOverrideReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.esisummaryreport",{url:"/esisummaryreport",title:"ESI Summary Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"esiSummaryReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"ESIMonthlySummaryController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]})},e.prototype.registerIncomeTaxReportsRoutes=function(){this.$stateProvider.state("payrolloverview.reports.summary.annualincometaxreport",{url:"/annualincometaxreport",title:"Annual Income Tax Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"annualIncomeTaxReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"AnnualIncomeTaxReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.annualincometaxdetailedreport",{url:"/annualincometaxdetailedreport",title:"Annual Income Tax Detailed Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"annualIncomeTaxDetailedReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"AnnualIncomeTaxDetailedReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.annualHraReport",{url:"/annualHraReport",title:"Annual HRA Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"annualHraReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"AnnualHRAReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.investmentdeclarationReport",{url:"/investmentdeclarationreport",title:"Investment Declaration Detailed Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"investmentdeclarationReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"DeclarationReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.investmentdeclarationSummaryReport",{url:"/investmentdeclarationSummaryReport",title:"Investment Declaration Summary Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"investmentdeclarationSummaryReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"DeclarationSummaryReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.declarationbreakup",{url:"/declarationbreakup",title:"Declaration Breakup Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"declarationBreakup",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"DeclarationBreakupReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.rentAndLandloardDetails",{url:"/rentAndLandloardDetails",title:"Rent Paid & Landloard Details",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"rentAndLandloardDetails",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"HouseRentDeclarationReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.monthlyincometaxstatement",{url:"/monthlyincometaxstatement",title:"Monthly Income Tax Statement",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"monthlyIncomeTaxStatement",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x income-tax-monthly-report common-form-styles",controller:"MonthlyIncomeTaxStatementController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.previousemploymentreport",{url:"/previousincomereport",title:"Previous Employment Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"previousIncomeDetailsReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"PreviousIncomeReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.tdsoverridestemplate",{url:"/tdsoverrides",title:"TDS Deductions Override",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"tdsOverridesTemplate",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"TdsOverridesReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.rentAndLandlordDetails",{url:"/rentAndLandlordDetails",title:"Rent Paid & Landlord Details",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"rentAndLandlordDetails",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"HouseRentDeclarationReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.finally(function(){t.go("payrolloverview.reports.summary")})}]})},e.prototype.registerProfessionalTaxReportsRoutes=function(){this.$stateProvider.state("payrolloverview.reports.summary.ptmonthlystatement",{url:"/ptmonthlystatement",title:"PT Monthly Statement",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"ptMonthlyStatement",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x common-form-styles",controller:"PTMonthlySatementController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.ptstatesummary",{url:"/ptstatesummary",title:"PT State Wise Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"ptStateWiseSummary",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"PTStateSummaryController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.ptoverridestemplate",{url:"/ptoverrides",title:"PT Deductions Overrides",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"ptOverridesTemplate",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x",controller:"PtOverridesReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]})},e.prototype.registerLoanReportsRoutes=function(){this.$stateProvider.state("payrolloverview.reports.summary.loanRequestReport",{url:"/loanrequestreport",title:"Loan Request Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"loanRequestReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll",controller:"LoanRequestReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.monthlyloanemireport",{url:"/monthlyloanemireport",title:"Monthly Loan EMI",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"monthlyLoanEMIReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll-x income-tax-monthly-report common-form-styles",controller:"MonthlyLoanEMIReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]}).state("payrolloverview.reports.summary.loanStatusReport",{url:"/loanstatusreport",title:"Loan Status Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"loanStatusReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll",controller:"LoanStatusReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]})},e.prototype.registerComplianceRoutes=function(){this.$stateProvider.state("payrolloverview.reports.compliancereports.forma",{url:"/forma",title:"Form A",parentState:"payrolloverview.reports.compliancereports",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"formA",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"FormAController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.compliancereports")})}]}).state("payrolloverview.reports.compliancereports.formc",{url:"/formc",title:"Form C",parentState:"payrolloverview.reports.compliancereports",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"formC",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"FormCController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.compliancereports")})}]}).state("payrolloverview.reports.compliancereports.formd",{url:"/formd",title:"Form D",parentState:"payrolloverview.reports.compliancereports",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"formD",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"FormDController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.compliancereports")})}]}).state("payrolloverview.reports.compliancereports.formq",{url:"/formq",title:"Form Q",parentState:"payrolloverview.reports.compliancereports",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"formQ",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"FormQController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.compliancereports")})}]}).state("payrolloverview.reports.compliancereports.formt",{url:"/formt",title:"Form T",parentState:"payrolloverview.reports.compliancereports",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"formT",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"FormTController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.finally(function(){t.go("payrolloverview.reports.compliancereports")})}]}).state("payrolloverview.reports.compliancereports.formv",{url:"/formv",title:"Form V",parentState:"payrolloverview.reports.compliancereports",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"formV",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"FormVController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.compliancereports")})}]}).state("payrolloverview.reports.compliancereports.formu",{url:"/formu",title:"Form U",parentState:"payrolloverview.reports.compliancereports",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"formU",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"FormUController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.compliancereports")})}]}).state("payrolloverview.reports.compliancereports.form11",{url:"/form11",title:"Form 11",parentState:"payrolloverview.reports.compliancereports",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"form11",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"Form11Controller",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.compliancereports")})}]}).state("payrolloverview.reports.compliancereports.formp",{url:"/formp",title:"Form P",parentState:"payrolloverview.reports.compliancereports",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"compliancereport/formP",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"FormPController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.compliancereports")})}]}).state("payrolloverview.reports.compliancereports.annexure1A",{url:"/annexure1a",title:"Annexure 1A",parentState:"payrolloverview.reports.compliancereports",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"compliancereport/annexure1A",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"Annexure1AController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.compliancereports")})}]}).state("payrolloverview.reports.compliancereports.formXIII",{url:"/formxiii",title:"Form XIII",parentState:"payrolloverview.reports.compliancereports",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"compliancereport/formXIII",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"FormXIIIController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.compliancereports")})}]}).state("payrolloverview.reports.compliancereports.forms",{url:"/forms",title:"Form S",parentState:"payrolloverview.reports.compliancereports",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"compliancereport/forms",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"FormSController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.compliancereports")})}]}).state("payrolloverview.reports.compliancereports.formqtamilnadu",{url:"/tamilnadu/formq",title:"Form Q | Tamil Nadu",parentState:"payrolloverview.reports.compliancereports",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"compliancereport/formqtamilnadu",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"FormQTamilNaduController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.compliancereports")})}]}).state("payrolloverview.reports.compliancereports.formii",{url:"/maharashtra/formii",title:"Form II | Maharashtra",parentState:"payrolloverview.reports.compliancereports",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"compliancereport/formII",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"FormIIController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.compliancereports")})}]})},e.prototype.registerFullandFinalReportsRoutes=function(){this.$stateProvider.state("payrolloverview.reports.summary.fullandfinalreport",{url:"/fullandfinalreport",title:"Full and Final Settlement Report",parentState:"payrolloverview.reports.summary",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"fullandfinalreport",windowClass:"full-screen-modal payroll-modal payroll-forms-container",controller:"FullandFinalReportsController",controllerAs:"ctrl",keyboard:!1,backdrop:!1}).result.catch(function(e){angular.isDefined(e)&&t.go("payrolloverview.reports.summary")})}]})},e}();e.RegisterReportsRouting=t,angular.module("payroll").config(["$urlRouterProvider","$stateProvider",function(e,i){new t(e,i,this.appAccessKeys)}])}(e.routing||(e.routing={}))}(e.reports||(e.reports={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){!function(e){var t=function(){function e(e){this.year=e.year,this.monthName=e.monthName,this.monthFullName=e.monthFullName,this.javascriptMonth=e.javascriptMonth}return Object.defineProperty(e.prototype,"month",{get:function(){return this.javascriptMonth+1},enumerable:!0,configurable:!0}),e.prototype.monthAndYear=function(){return this.monthName+" "+this.year},e.prototype.getDateOnlyString=function(){return new Date(this.year,this.javascriptMonth,1).dateOnlyString()},e}();e.PayrollMonth=t;var i=function(){function e(e){this.year=e.year,this.months=(e.months||[]).map(function(e){return new t(e)})||[]}return Object.defineProperty(e.prototype,"anyMonths",{get:function(){return this.months.length>0},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"anyTwoMonths",{get:function(){return this.months.length>1},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"lastMonth",{get:function(){return this.months[this.months.length-1]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"lastButOneMonth",{get:function(){return this.months[this.months.length-2]},enumerable:!0,configurable:!0}),e}();e.PayrollYear=i,function(e){e[e.None=0]="None",e[e.MonthWise=1]="MonthWise",e[e.MonthRange=2]="MonthRange",e[e.Compare=3]="Compare",e[e.FYWise=4]="FYWise"}(e.PayrollReportType||(e.PayrollReportType={}));var n=function(){return function(e){this.groupId=e.groupId,this.month=e.month,this.year=e.year,this.format=e.format,this.searchKey=e.searchKey}}();e.MonthlyExportRequest=n;var o=function(){return function(e){this.employeeId=e.employeeId,this.employeeName=e.employeeName,this.employeeNumber=e.employeeNumber,this.panNumber=e.panNumber,this.department=e.department,this.jobTitle=e.jobTitle}}();e.BaseEmployeeGridRow=o;var r=function(){function e(e){this.errorMessage=e.errorMessage,this.employeeId=e.employeeId,this.employeeName=e.employeeName,this.employeeNumber=e.employeeNumber,this.panNumber=e.panNumber,this.department=e.department,null==this.errorMessage&&(this.standardDeduction=e.standardDeduction,this.totalEarnings=e.totalEarnings,this.totalEmployerContributionTaxExemptions=e.totalEmployerContributionTaxExemptions,this.totalNonMonetaryPerquisitesExemptions=e.totalNonMonetaryPerquisitesExemptions,this.totalOtherDeductionExemptions=e.totalOtherDeductionExemptions,this.totalSalaryReceived=e.totalSalaryReceived,this.outsidePayrollBonusesIncome=e.outsidePayrollBonusesIncome,this.outsidePayrollOvertimeIncome=e.outsidePayrollOvertimeIncome,this.benefitsTaxableIncome=e.benefitsTaxableIncome,this.grossUnderSalaryHead=e.grossUnderSalaryHead,this.taxableIncomeUnderHeadSalaries=e.taxableIncomeUnderHeadSalaries,this.totalAnnualRentReceived=e.totalAnnualRentReceived,this.totalGrossUnderAllHeads=e.totalGrossUnderAllHeads,this.taxableIncomeUnderHousePropertyHead=e.taxableIncomeUnderHousePropertyHead,this.totalTaxableIncomeUnderAllHeads=e.totalTaxableIncomeUnderAllHeads,this.rawTax=e.rawTax,this.taxRebate=e.taxRebate,this.rawSurcharge=e.rawSurcharge,this.reliefOnSurcharge=e.reliefOnSurcharge,this.actualTax=e.actualTax,this.taxPaid=e.taxPaid,this.taxPayable=e.taxPayable)}return e.prototype.addPropertyBasedOnComponent=function(e,t){e.componentName in t||(t[e.componentName]=e),this[e.componentName]=e.amount||0},e.prototype.addPropertyBasedOnTaxExemption=function(e,t){e.taxExemptName in t||(t[e.taxExemptName]=e),this[e.taxExemptName]=e.amount||0},e}();e.AnnualIncomeTaxDetailedGridRow=r;var a=function(){function e(e){this.employeeId=e.employeeId,this.employeeName=e.employeeName,this.employeeNumber=e.employeeNumber,this.errorMessage=e.errorMessage,this.panNumber=e.panNumber,this.department=e.department,this.totalHRAExempted=e.totalHRAExempted,this.isDefaultHRA=e.isDefaultHRA,this.jobTitle=e.jobTitle}return e.prototype.addPropertyBasedOnMonth=function(e,t){e.from in t||(t[e.from]=e),this[e.from]=e},e}();e.AnnualHRAGridRow=a;var s=function(){function e(e){this.totalAmount=e.totalAmount,this.componentTitle=e.componentTitle}return e.prototype.addPropertyBasedOnComponent=function(e,t,i){e in i||(i[e]=e),this[e]=t||0},e}();e.EmployeeComponentsYTDGridRow=s;var l=function(e){function t(t){var i=e.call(this,t)||this;return i.errorMessage=t.errorMessage,i.requestedClaim=t.requestedClaim,i.pendingClaim=t.pendingClaim,i.rejectedClaim=t.rejectedClaim,i.approvedClaim=t.approvedClaim,i}return __extends(t,e),t.prototype.addPropertyBasedOnComponent=function(e,t){e.componentName in t||(t[e.componentName]=e),this[e.componentName]=e.amount||0},t.prototype.addPropertyBasedOnTaxExemption=function(e,t){e.taxExemptName in t||(t[e.taxExemptName]=e),this[e.taxExemptName]=e.amount||0},t}(o);e.DeclarationBreakupGridRow=l;var c=function(e){function t(t){var i=e.call(this,t)||this;return i.cashAdvanceAmount=t.cashAdvanceAmount,i.cashAdvanceSettlementAmount=t.cashAdvanceSettlementAmount,i}return __extends(t,e),t.prototype.addPropertyBasedOnComponent=function(e,t){e.componentName in t||(t[e.componentName]=e),this[e.componentName]=e.amount||0},t}(o);e.SalaryYTDGridRow=c;var p=function(e){function t(t){var i=e.call(this,t)||this;return i.pfEmployerTotalAmount=t.pfEmployerTotalAmount,i.pfTotalAmount=t.pfTotalAmount,i}return __extends(t,e),t.prototype.addPropertyBasedOnComponent=function(e,t,i){e in i||(i[e]=e),this[e]=t||0},t}(o);e.PFYTDGridRow=p;var u=function(e){function t(t){var i=e.call(this,t)||this;return i.totalAmount=t.totalAmount,i}return __extends(t,e),t.prototype.addPropertyBasedOnComponent=function(e,t,i){e in i||(i[e]=e),this[e]=t||0},t}(o);e.ComponentYTDGridRow=u;var d=function(e){function t(t){var i=e.call(this,t)||this;return i.earningsColumns={},i.contributionsColumns={},i.deductionsColumns={},i.reimbursmentsColumns={},i.addProperty=function(e,t){e.componentName in t||(t[e.componentName]=e),i[e.componentName]=e.amount||0},i.employeeName=t.employeeName,i.employeeNumber=t.employeeNumber,i.employeeId=t.employeeId,i.panNumber=t.panNumber,i.jobTitle=t.jobTitle,i.department=t.department,i.location=t.location,i.dateofJoining=t.dateofJoining,i.esiNumber=t.esiNumber,i.pfNumber=t.pfNumber,i.uanNumber=t.uanNumber,i.terminationReason=t.terminationReason,i.terminationType=t.terminationType,i.terminationNoticeDate=t.terminationNoticeDate,i.lastWorkingDay=t.lastWorkingDay,i.oktoRehire=t.oktoRehire,i.comments=t.comments,i.resignationNote=t.resignationNote,i.exitRequestStatus=t.exitRequestStatus,i.noOfPayDays=t.noOfPayDays,i.lossOfPayDays=t.lossOfPayDays,i.leaveEncashmentDays=t.leaveEncashmentDays,i.cashAdvanceAmount=t.cashAdvanceAmount,i.cashAdvanceSettlementAmount=t.cashAdvanceSettlementAmount,i.netAmount=t.netAmount,i.netRecovery=t.netRecovery,i.settlementDate=t.settlementDate,i.payAction=t.payAction,i.earningsColumns=t.earnings,i.contributionsColumns=t.contributions,i.deductionsColumns=t.deductions,i.reimbursmentsColumns=t.reimbursements,i}return __extends(t,e),t}(o);e.FullandFinalGridRow=d;var m=function(){return function(e){this.id=e.id,this.employeeNumber=e.employeeNumber,this.employeeName=e.employeeName,this.loanAmount=e.loanAmount,this.status=e.status,this.interestCalculationMethod=e.interestCalculationMethod,this.rateOfInterest=e.rateOfInterest,this.repaymentTerm=e.repaymentTerm,this.remainingTerm=e.remainingTerm,this.loanReleasedOn=new Date(e.loanReleasedOn),this.emiStartsFrom=new Date(e.emiStartsFrom),this.notes=e.notes,this.employeeId=e.employeeId,this.outstandingAmount=e.outstandingAmount}}();e.EmployeeLoanStatusView=m;var y=function(){function e(){}return e.WithoutReason=0,e.OnLeave=1,e.LeftService=2,e.Retired=3,e.OutOfCoverage=4,e.Expired=5,e.NonImplementedArea=6,e.ComplianceByImmediateEmployer=7,e.SuspensionOfWork=8,e.StrikeOrLockout=9,e.Retrenchment=10,e.NoWork=11,e.DoesntBelongToThisEmployer=12,e.DuplicateIP=13,e[0]="without reason",e[1]="on leave",e[2]="left service",e[3]="retired",e[4]="out of coverage",e[5]="expired",e[6]="non implemented area",e[7]="compliance by immediate employer",e[8]="suspension of work",e[9]="strike or lockout",e[10]="retrenchment",e[11]="no work",e[12]="doesn't belong to this employer",e[13]="duplicate IP",e}();e.ESIECRZeroWorkingDaysReason=y;var h=function(){function e(e){this.employeeId=e.employeeId,this.employeeNumber=e.employeeNumber,this.displayName=e.displayName,this.salaryComponents=e.salaryComponents}return e.prototype.doesComponentExist=function(e){return this.salaryComponents.hasOwnProperty(e)},e}();e.EmpOverrideRow=h}(e.model||(e.model={}))}(e.reports||(e.reports={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){!function(e){var t=function(){function e(e,t,i){this.resource=e,this.fileSaverService=t,this.blob=i,this.reportResource=this.resource("/api/payroll/reports/:groupId/:section/:fyYear/:action/:providentFundConfigId/:esiConfigId",{action:"@action",pfConfigId:"@pfConfigId",esiConfigId:"@esiConfigId"},{download:{method:"GET",responseType:"arraybuffer",transformResponse:function(e,t,i){var n={};return n.headers=t(),n.data=e,n.headers.status=i,n}}}),this.lookUpResource=this.resource("/api/lookup/:action",{action:"@action"})}return e.prototype.processDataAndDownload=function(e){if(200==e.headers.status){var t=new this.blob([e.data],{type:e.headers["content-type"]}),i=this.getFileName(e.headers["content-disposition"]);return this.fileSaverService.saveAs(t,i),{isDownloaded:!0}}return{isDownloaded:!0,status:e}},e.prototype.processErrorAndReject=function(e){return{isDownloaded:!1,status:e}},e.prototype.getFileName=function(e){return e?e.slice(e.indexOf("filename=")+"filename=".length,e.length).replace(/\"/g,""):"download"},e}();e.IReportService=t;var i=function(e){function t(t,i,n){return e.call(this,t,i,n)||this}return __extends(t,e),t.prototype.getMonthlyIncomeTaxReport=function(e,t,i){return this.reportResource.get({action:"monthlyincometaxstatement",groupId:e,month:t,year:i}).$promise},t.prototype.exportMonthlyIncomeTaxReport=function(e){var t=this,i=angular.extend({action:"monthlyincometaxstatement/export"},e);return this.reportResource.download(i).$promise.then(function(e){return t.processDataAndDownload(e)},function(e){return t.processErrorAndReject(e)})},t.prototype.getIncomeTaxAnnualReport=function(e,t){return this.reportResource.query({fyYear:"FY"+t,action:"annualincometaxreport",groupId:e}).$promise},t.prototype.exportAnnualIncomeTaxReport=function(e,t,i){var n=this,o=angular.extend({fyYear:"FY"+t,action:"annualincometaxreport/export",groupId:e},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.getIncomeTaxAnnualDetailedReport=function(e,t){return this.reportResource.query({fyYear:"FY"+t,action:"annualincometaxDetailedreport",groupId:e}).$promise},t.prototype.exportAnnualIncomeTaxDetailedReport=function(e,t,i){var n=this,o=angular.extend({fyYear:"FY"+t,action:"annualincometaxDetailedreport/export",groupId:e},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.getTDSOverridesReport=function(e,t){return this.reportResource.query({fyYear:"FY"+t,action:"employeesTaxOverride",groupId:e}).$promise},t.prototype.exportTDSOverridesReport=function(e,t,i){var n=this,o=angular.extend({fyYear:"FY"+t,action:"employeesTaxOverride/export",groupId:e},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.getAnnualHraReport=function(e,t){return this.reportResource.query({fyYear:"FY"+t,action:"annualHRAReport",groupId:e}).$promise},t.prototype.exportAnnualHRAReport=function(e,t,i){var n=this,o=angular.extend({fyYear:"FY"+t,action:"annualHRAReport/export",groupId:e},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.getDeclarationBreakupReport=function(e,t){return this.reportResource.query({fyYear:"FY"+t,action:"exemptionDetailsWithDeclaration",groupId:e}).$promise},t.prototype.exportDeclarationBreakupReport=function(e,t,i){var n=this,o=angular.extend({fyYear:"FY"+t,action:"exemptionDetailsWithDeclaration/export",groupId:e},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.getPreviousIncomeDetails=function(e,t,i){return this.reportResource.query({action:"previousincomedetails",groupId:e,from:t,to:i}).$promise},t.prototype.exportPreviousIncomeDetails=function(e,t){var i=this,n=angular.extend({action:"previousincomedetails/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.$inject=["$resource","FileSaver","Blob","$q"],t}(t);e.IncomeTaxReportService=i;var n=function(e){function t(t,i,n){return e.call(this,t,i,n)||this}return __extends(t,e),t.prototype.getDeclarationSummaryReport=function(e,t){return this.reportResource.query({section:"declaration",fyYear:"FY"+t,action:"summary",groupId:e}).$promise},t.prototype.exportDeclarationSummaryReport=function(e,t,i){var n=this,o=angular.extend({section:"declaration",fyYear:"FY"+t,action:"summary/export",groupId:e},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.getDeclarationReport=function(e,t){return this.reportResource.query({section:"declaration",fyYear:"FY"+t,action:"employees",groupId:e}).$promise},t.prototype.exportDeclarationReport=function(e,t,i){var n=this,o=angular.extend({section:"declaration",fyYear:"FY"+t,action:"employees/export",groupId:e},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.getEmployeeHouseRentReport=function(e,t){return this.reportResource.query({section:"declaration",action:"employees/houserentReport",fyYear:"FY"+t,groupId:e}).$promise},t.prototype.exportEmployeeHouseRentReport=function(e,t,i){var n=this,o=angular.extend({section:"declaration",fyYear:"FY"+t,action:"employees/houserentReport/export",groupId:e},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.$inject=["$resource","FileSaver","Blob","$q"],t}(t);e.DeclarationReportService=n;var o=function(e){function t(t,i,n){return e.call(this,t,i,n)||this}return __extends(t,e),t.prototype.getPFRemittanceReport=function(e,t,i){return this.reportResource.get({section:"pf",action:"monthlyremittance",groupId:e,month:t,year:i}).$promise},t.prototype.exportPFRemittanceReport=function(e,t,i){var n=this,o=angular.extend({section:"pf",action:"monthlyremittance/export",groupId:e,providentFundConfigId:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.getEPFLineItems=function(e,t,i,n,o){return this.reportResource.query({section:"pf",action:"ecr",groupId:e,month:t,year:i,ecrFileType:n,enableHigherPension:o}).$promise},t.prototype.exportECRReport=function(e,t,i){var n=this,o=angular.extend({section:"pf",action:"ecr/export",groupId:e,providentFundConfigId:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.exportForm6A=function(e,t,i){var n=this,o=angular.extend({section:"pf",action:"form6/export",groupId:e,providentFundConfigId:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.exportMonthlycombinedchallan=function(e,t,i){var n=this,o=angular.extend({section:"pf",action:"monthlycombinedchallan/export",groupId:e,providentFundConfigId:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.exportForm5=function(e,t,i){var n=this,o=angular.extend({section:"pf",action:"form5/export",groupId:e,providentFundConfigId:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.exportForm10=function(e,t,i){var n=this,o=angular.extend({section:"pf",action:"form10/export",groupId:e,providentFundConfigId:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.exportForm12A=function(e,t,i){var n=this,o=angular.extend({section:"pf",action:"form12a/export",groupId:e,providentFundConfigId:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.getArrearReport=function(e,t,i){var n=angular.extend({section:"pf",action:"arrearreport",groupId:e,providentFundConfigId:t},i);return this.reportResource.query(n).$promise},t.prototype.exportArrearReport=function(e,t,i){var n=this,o=angular.extend({section:"pf",action:"arrearreport/export",groupId:e,providentFundConfigId:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.getPFSummaryReport=function(e,t,i){var n=angular.extend({section:"pf",action:"summaryreport",groupId:e,providentFundConfigId:t},i);return this.reportResource.query(n).$promise},t.prototype.exportPFSummaryReport=function(e,t,i){var n=this,o=angular.extend({section:"pf",action:"summaryreport/export",groupId:e,providentFundConfigId:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.getAdminChargesReport=function(e,t,i){var n=angular.extend({section:"pf",action:"adminChargesreport",groupId:e,providentFundConfigId:t},i);return this.reportResource.query(n).$promise},t.prototype.exportAdminChargesReport=function(e,t,i){var n=this,o=angular.extend({section:"pf",action:"adminChargesreport/export",groupId:e,providentFundConfigId:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.exportAadhaarsubmissionreport=function(e,t,i){var n=this,o=angular.extend({section:"pf",action:"aadhaarsubmissionreport/export",groupId:e,providentFundConfigId:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.$inject=["$resource","FileSaver","Blob","$q"],t}(t);e.PFReportService=o;var r=function(e){function t(t,i,n){return e.call(this,t,i,n)||this}return __extends(t,e),t.prototype.getESIStatementReport=function(e,t,i){return this.reportResource.get({section:"esi",action:"monthlystatement",groupId:e,month:t,year:i}).$promise},t.prototype.exportESIStatementReport=function(e,t,i){var n=this,o=angular.extend({section:"esi",action:"monthlystatement/export",groupId:e,esiConfigId:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.getESIOverridesReport=function(e,t){return this.reportResource.query({section:"esi",fyYear:"FY"+t,action:"employeesoverride",groupId:e}).$promise},t.prototype.exportESIOverridesReport=function(e,t,i,n){var o=this,r=angular.extend({section:"esi",fyYear:"FY"+i,action:"employeesoverride/export",groupId:e,esiConfigId:t},n);return this.reportResource.download(r).$promise.then(function(e){return o.processDataAndDownload(e)},function(e){return o.processErrorAndReject(e)})},t.prototype.getESISummaryReport=function(e,t,i){var n=angular.extend({section:"esi",action:"summaryreport",groupId:e,month:t,year:i});return this.reportResource.query(n).$promise},t.prototype.exportESISummaryReport=function(e,t,i){var n=this,o=angular.extend({section:"esi",action:"summaryreport/export",groupId:e,esiConfigId:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.getESIECR=function(e,t,i){return this.reportResource.query({section:"esi",action:"ecr",groupId:e,month:t,year:i}).$promise},t.prototype.exportESIECRReport=function(e,t,i){var n=this,o=angular.extend({section:"esi",action:"ecr/export",groupId:e,esiConfigId:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.exportForm5Report=function(e,t,i){var n=this,o=angular.extend({section:"esi",action:"form5/export",groupId:e,esiConfigId:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.$inject=["$resource","FileSaver","Blob","$q"],t}(t);e.ESIReportService=r;var a=function(e){function t(t,i,n){return e.call(this,t,i,n)||this}return __extends(t,e),t.prototype.getPTStatementReport=function(e,t,i){return this.reportResource.get({section:"pt",action:"monthlystatement",groupId:e,month:t,year:i}).$promise},t.prototype.exportPTStatementReport=function(e,t){var i=this,n=angular.extend({section:"pt",action:"monthlystatement/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getPTOverridesReport=function(e,t){return this.reportResource.query({section:"pt",fyYear:"FY"+t,action:"employeesoverride",groupId:e}).$promise},t.prototype.exportPTOverridesReport=function(e,t,i){var n=this,o=angular.extend({section:"pt",fyYear:"FY"+t,action:"employeesoverride/export",groupId:e},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.getPTSummaryReport=function(e,t){var i=angular.extend({section:"pt",action:"summaryreport",groupId:e},t);return this.reportResource.query(i).$promise},t.prototype.exportPTSummaryReport=function(e,t){var i=this,n=angular.extend({section:"pt",action:"summaryreport/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getPTStateWiseSummary=function(e,t,i){var n=angular.extend({section:"pt",action:"statewisesummary",groupId:e,month:t,year:i});return this.reportResource.query(n).$promise},t.prototype.exportPTStateWiseReport=function(e,t){var i=this,n=angular.extend({section:"pt",action:"statewisesummary/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.exportPTForm5Report=function(e,t){var i=this,n=angular.extend({section:"pt",action:"form5/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.$inject=["$resource","FileSaver","Blob","$q"],t}(t);e.PTReportService=a;var s=function(e){function t(t,i,n){return e.call(this,t,i,n)||this}return __extends(t,e),t.prototype.getEmployeeBenefitsReport=function(e,t){return this.reportResource.query({fyYear:"FY"+t,action:"employeebenefits",groupId:e}).$promise},t.prototype.exportEmployeeBenefitsReport=function(e,t,i){var n=this,o=angular.extend({fyYear:"FY"+t,action:"employeebenefits/export",groupId:e},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.getFinancialDetailsReport=function(){return this.reportResource.query({action:"financialInfo"}).$promise},t.prototype.exportFinancialDetailsReport=function(e){var t=this,i=angular.extend({action:"financialInfo/export"},e);return this.reportResource.download(i).$promise.then(function(e){return t.processDataAndDownload(e)},function(e){return t.processErrorAndReject(e)})},t.prototype.getMonthlyReimbursementReport=function(e,t){var i=angular.extend({action:"monthlycomponentreimbursement",groupId:e},t);return this.reportResource.query(i).$promise},t.prototype.exportMonthlyReimbursementReport=function(e,t){var i=this,n=angular.extend({action:"monthlycomponentreimbursement/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getAnuallyReimbursementReport=function(e,t){var i=angular.extend({action:"anuallyReimbursementDetails",groupId:e},t);return this.reportResource.query(i).$promise},t.prototype.exportAnuallyReimbursementReport=function(e,t){var i=this,n=angular.extend({action:"anuallyReimbursementDetails/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.$inject=["$resource","FileSaver","Blob","$q"],t}(t);e.OtherReportsService=s;var l=function(e){function t(t,i,n){return e.call(this,t,i,n)||this}return __extends(t,e),t.prototype.getAnnualSalaryReport=function(){return this.reportResource.query({action:"all/annualsalary"}).$promise},t.prototype.exportAnnualSalaryReport=function(e){var t=this,i=angular.extend({action:"all/annualsalary/export"},e);return this.reportResource.download(i).$promise.then(function(e){return t.processDataAndDownload(e)},function(e){return t.processErrorAndReject(e)})},t.prototype.getCurrentSalaryDetails=function(){return this.reportResource.query({action:"all/structure"}).$promise},t.prototype.exportCurrentSalaryDetailsReport=function(e){var t=this,i=angular.extend({action:"all/structure/export"},e);return this.reportResource.download(i).$promise.then(function(e){return t.processDataAndDownload(e)},function(e){return t.processErrorAndReject(e)})},t.prototype.getCurrentSalaryDetailsWithBonus=function(){return this.reportResource.query({action:"currentsalaryWithbonus"}).$promise},t.prototype.exportCurrentSalaryDetailsWithBonus=function(e){var t=this,i=angular.extend({action:"currentsalaryWithbonus/export"},e);return this.reportResource.download(i).$promise.then(function(e){return t.processDataAndDownload(e)},function(e){return t.processErrorAndReject(e)})},t.prototype.getSalaryRevisionReport=function(e,t){return this.reportResource.query({action:"salaryRevision",from:e,to:t}).$promise},t.prototype.exportSalaryRevisionReport=function(e){var t=this,i=angular.extend({action:"salaryRevision/export"},e);return this.reportResource.download(i).$promise.then(function(e){return t.processDataAndDownload(e)},function(e){return t.processErrorAndReject(e)})},t.prototype.getCurrentCTCReport=function(){return this.reportResource.query({action:"currentctc"}).$promise},t.prototype.exportCurrentCTCReport=function(e){var t=this,i=angular.extend({action:"currentctc/export"},e);return this.reportResource.download(i).$promise.then(function(e){return t.processDataAndDownload(e)},function(e){return t.processErrorAndReject(e)})},t.prototype.getBonusStatusReport=function(e,t){return this.reportResource.query({action:"bonusStatus",from:e,to:t}).$promise},t.prototype.exportBonusStatusReport=function(e){var t=this,i=angular.extend({action:"bonusStatus/export"},e);return this.reportResource.download(i).$promise.then(function(e){return t.processDataAndDownload(e)},function(e){return t.processErrorAndReject(e)})},t.prototype.getBonusRevisionReport=function(e,t){return this.reportResource.query({action:"bonusRevision",from:e,to:t}).$promise},t.prototype.exportBonusRevisionReport=function(e){var t=this,i=angular.extend({action:"bonusRevision/export"},e);return this.reportResource.download(i).$promise.then(function(e){return t.processDataAndDownload(e)},function(e){return t.processErrorAndReject(e)})},t.$inject=["$resource","FileSaver","Blob","$q"],t}(t);e.EmployeeSalaryReportService=l;var c=function(e){function t(t,i,n){return e.call(this,t,i,n)||this}return __extends(t,e),t.prototype.getCyclePayreviews=function(e,t,i){return this.reportResource.get({action:"cyclepayreview",groupId:e,fromMonth:t,toMonth:i}).$promise},t.prototype.exportMonthlyCompareReport=function(e,t){var i=this,n=angular.extend({action:"cyclepayreview/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getMonthlyEmployeeReconcileReport=function(e,t,i){return this.reportResource.get({action:"monthlyemployeereconciliation",groupId:e,month:t,year:i}).$promise},t.prototype.exportMonthlyEmployeeReconcileReport=function(e,t){var i=this,n=angular.extend({action:"monthlyemployeereconciliation/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getGrossComponentReconciliation=function(e,t,i){return this.reportResource.get({action:"grosscomponentsreconciliation",groupId:e,fromMonth:t,toMonth:i}).$promise},t.prototype.exportGrossComponentsReport=function(e,t){var i=this,n=angular.extend({action:"grosscomponentsreconciliation/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getDeductionContributionReconciliation=function(e,t,i){return this.reportResource.get({action:"deductionandcontributionreconciliation",groupId:e,fromMonth:t,toMonth:i}).$promise},t.prototype.exportContributionComponentsReport=function(e,t){var i=this,n=angular.extend({action:"deductionandcontributionreconciliation/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getMonthlyComponentBreakupSummary=function(e,t,i){return this.reportResource.query({action:"componentwisebreakup",groupId:e,month:t,year:i}).$promise},t.prototype.exportMonthlyComponentBreakUp=function(e,t){var i=this,n=angular.extend({action:"componentwisebreakup/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getMonthlyComponentBreakupSummaryWithFinancialDetails=function(e,t,i){return this.reportResource.query({action:"componentwisebreakupwithfinacialdetails",groupId:e,month:t,year:i}).$promise},t.prototype.exportMonthlyComponentBreakupSummaryWithFinancialDetails=function(e,t){var i=this,n=angular.extend({action:"componentwisebreakupwithfinacialdetails/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getMonthlyArrearBreakupSummary=function(e,t,i){return this.reportResource.query({action:"arrearbreakup",groupId:e,month:t,year:i}).$promise},t.prototype.exportMonthlyArrearBreakupComponentBreakUp=function(e,t){var i=this,n=angular.extend({action:"arrearbreakup/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getNewJoineePayrollStatus=function(e,t,i){return this.reportResource.query({action:"payrollstatus/newjoinee",groupId:e,month:t,year:i}).$promise},t.prototype.exportNewJoineePayrollStatus=function(e,t){var i=this,n=angular.extend({action:"payrollstatus/newjoinee/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getExitsPayrollStatus=function(e,t,i){return this.reportResource.query({action:"payrollstatus/exits",groupId:e,month:t,year:i}).$promise},t.prototype.exportExitsPayrollStatus=function(e,t){var i=this,n=angular.extend({action:"payrollstatus/exits/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getAllEmployeePayrollStatus=function(e,t,i){return this.reportResource.query({action:"payrollstatus/allemployees",groupId:e,month:t,year:i}).$promise},t.prototype.exportAllEmployeePayrollStatus=function(e,t){var i=this,n=angular.extend({action:"payrollstatus/allemployees/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getGroupwiseSalarySummary=function(e,t,i){return this.reportResource.get({action:"deptandfunctionwisemonthlysalary",groupId:e,month:t,year:i}).$promise},t.prototype.exporGroupwiseSalarySummary=function(e,t){var i=this,n=angular.extend({action:"deptandfunctionwisemonthlysalary/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getHeadCountSummary=function(e,t,i){return this.reportResource.get({action:"cycleheadcountdetails",groupId:e,month:t,year:i}).$promise},t.prototype.exportHeadCountReport=function(e,t){var i=this,n=angular.extend({action:"cycleheadcountdetails/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getSalaryJournalVoucher=function(e,t,i){return this.reportResource.get({action:"monthlySalaryjv",groupId:e,month:t,year:i}).$promise},t.prototype.exportSalaryJVReport=function(e,t){var i=this,n=angular.extend({action:"monthlySalaryjv/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getBatchPaymentsSummary=function(e,t,i){return this.reportResource.get({action:"employeepayables/summary",groupId:e,month:t,year:i}).$promise},t.prototype.exportBatchPaymentReport=function(e,t){var i=this,n=angular.extend({action:"employeepayables/summary/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.exportConsolidatedBatchPaymentReport=function(e,t){var i=this,n=angular.extend({action:"employeepayables/summary/consolidateexport",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.exportOutsidePayrollPaymentReport=function(e,t){var i=this,n=angular.extend({action:"employeepayables/outsidepayroll/payments/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getMonthlyOneTimeDeductionReport=function(e,t,i){return this.reportResource.query({action:"onetimedeductions",groupId:e,month:t,year:i}).$promise},t.prototype.exportMonthlyOneTimeDeductionReport=function(e,t){var i=this,n=angular.extend({action:"onetimedeductions/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getMonthlyOneTimePaymentReport=function(e,t,i){return this.reportResource.query({action:"onetimepayments",groupId:e,month:t,year:i}).$promise},t.prototype.exportMonthlyOneTimePaymentReport=function(e,t){var i=this,n=angular.extend({action:"onetimepayments/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.$inject=["$resource","FileSaver","Blob","$q"],t}(t);e.PayrollRunReportService=c;var p=function(e){function t(t,i,n){return e.call(this,t,i,n)||this}return __extends(t,e),t.prototype.getMonthlyLoanEMIReport=function(e,t,i){return this.reportResource.query({section:"loan",action:"monthlyEMIReport",groupId:e,month:t,year:i}).$promise},t.prototype.exportMonthlyLoanEMIReport=function(e){var t=this,i=angular.extend({section:"loan",action:"monthlyEMIReport/export"},e);return this.reportResource.download(i).$promise.then(function(e){return t.processDataAndDownload(e)},function(e){return t.processErrorAndReject(e)})},t.prototype.getLoanRequestReport=function(e,t){return this.reportResource.query({section:"loan",action:"requests/report",fromDate:e,toDate:t}).$promise},t.prototype.exportLoanRequestReport=function(e){var t=this,i=angular.extend({section:"loan",action:"requests/report/export"},e);return this.reportResource.download(i).$promise.then(function(e){return t.processDataAndDownload(e)},function(e){return t.processErrorAndReject(e)})},t.prototype.getLoanStatusReport=function(e,t){return this.reportResource.query({section:"loan",action:"statusreport",fromDate:e,toDate:t}).$promise},t.prototype.exportLoanStatusReport=function(e){var t=this,i=angular.extend({section:"loan",action:"statusreport/export"},e);return this.reportResource.download(i).$promise.then(function(e){return t.processDataAndDownload(e)},function(e){return t.processErrorAndReject(e)})},t.$inject=["$resource","FileSaver","Blob","$q"],t}(t);e.LoanReportService=p;var u=function(e){function t(t,i,n){return e.call(this,t,i,n)||this}return __extends(t,e),t.prototype.getEmployeeAllComponentsYTDReport=function(e,t,i,n){return this.reportResource.get({action:"employee/all/components/ytdreport",groupId:e,employeeId:t,fromMonth:i,toMonth:n}).$promise},t.prototype.exportEmployeeAllComponentsYTDReport=function(e,t,i){var n=this,o=angular.extend({action:"employee/all/components/ytdreport/export",groupId:e,employeeId:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.getSalaryYtdReport=function(e,t,i){return this.reportResource.query({action:"salary/ytdreport",groupId:e,fromMonth:t,toMonth:i}).$promise},t.prototype.exportSalaryYTDReport=function(e,t){var i=this,n=angular.extend({action:"salary/ytdreport/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getTDSYtdReport=function(e,t,i){return this.reportResource.query({action:"tds/ytdreport",groupId:e,fromMonth:t,toMonth:i}).$promise},t.prototype.exportTDSYTDReport=function(e,t){var i=this,n=angular.extend({action:"tds/ytdreport/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getPFYtdReport=function(e,t,i){return this.reportResource.query({action:"pf/ytdreport",groupId:e,fromMonth:t,toMonth:i}).$promise},t.prototype.exportPFYTDReport=function(e,t){var i=this,n=angular.extend({action:"pf/ytdreport/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getGrossYtdReport=function(e,t,i){return this.reportResource.query({action:"gross/ytdreport",groupId:e,fromMonth:t,toMonth:i}).$promise},t.prototype.exportGrossYTDReport=function(e,t){var i=this,n=angular.extend({action:"gross/ytdreport/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.getEmployeesMonthOnMonthYTDReport=function(e,t,i){return this.reportResource.query({action:"employees/monthOnMonth/ytdreport",groupId:e,fromMonth:t,toMonth:i}).$promise},t.prototype.exportMonthOnMonthYTDReport=function(e,t){var i=this,n=angular.extend({action:"employees/monthOnMonth/ytdreport/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.$inject=["$resource","FileSaver","Blob","$q"],t}(t);e.PayrollYTDReportService=u;var d=function(e){function t(t,i,n){return e.call(this,t,i,n)||this}return __extends(t,e),t.prototype.exportFormtReport=function(e,t){var i=this,n=angular.extend({section:"compliance",action:"formt/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.exportFormAReport=function(e,t,i){var n=this,o=angular.extend({section:"compliance",action:"forma/export",groupId:e,year:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.exportFormXIIIReport=function(e,t,i){var n=this,o=angular.extend({section:"compliance",action:"formxiii/export",groupId:e,year:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.exportFormCReport=function(e,t,i){var n=this,o=angular.extend({section:"compliance",action:"formc/export",groupId:e,year:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.exportFormIIReport=function(e,t){var i=this,n=angular.extend({section:"compliance",action:"formii/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.exportFormDReport=function(e,t){var i=this,n=angular.extend({section:"compliance",action:"formd/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.exportAnnexure1AReport=function(e,t){var i=this,n=angular.extend({section:"compliance",action:"annexure1a/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.exportFormQTamilNaduReport=function(e,t){var i=this,n=angular.extend({section:"compliance",action:"formqtamilnadu/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.exportFormSReport=function(e,t){var i=this,n=angular.extend({section:"compliance",action:"forms/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.exportFormQReport=function(e,t){var i=this,n=angular.extend({section:"compliance",action:"formq/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.exportFormPReport=function(e,t){var i=this,n=angular.extend({section:"compliance",action:"formp/export",groupId:e},t);return this.reportResource.download(n).$promise.then(function(e){return i.processDataAndDownload(e)},function(e){return i.processErrorAndReject(e)})},t.prototype.exportFormUReport=function(e,t,i){var n=this,o=angular.extend({section:"compliance",action:"formu/export",groupId:e,year:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.getHolidaysList=function(){return this.lookUpResource.query({action:"holidaylists"}).$promise},t.prototype.exportFormVReport=function(e,t,i){var n=this,o=angular.extend({section:"compliance",action:"formv/export",groupId:e,year:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.prototype.exportForm11Report=function(e,t,i){var n=this,o=angular.extend({section:"compliance",action:"form11/export",groupId:e,year:t},i);return this.reportResource.download(o).$promise.then(function(e){return n.processDataAndDownload(e)},function(e){return n.processErrorAndReject(e)})},t.$inject=["$resource","FileSaver","Blob","$q"],t}(t);e.ComplianceService=d;var m=function(e){function t(t,i,n){return e.call(this,t,i,n)||this}return __extends(t,e),t.prototype.getFullandFinalReport=function(e,t){return this.reportResource.query({section:"fullandfinal",action:"settlementreport",fromDate:e,toDate:t}).$promise},t.prototype.getFullandFinalReportExport=function(e){var t=this,i=angular.extend({section:"fullandfinal",action:"settlementreport/export"},e);return this.reportResource.download(i).$promise.then(function(e){return t.processDataAndDownload(e)},function(e){return t.processErrorAndReject(e)})},t.$inject=["$resource","FileSaver","Blob","$q"],t}(t);e.FullandFinalReportService=m,angular.module("payroll").service("IncomeTaxReportService",i).service("DeclarationReportService",n).service("PFReportService",o).service("ESIReportService",r).service("PTReportService",a).service("OtherReportsService",s).service("EmployeeSalaryReportService",l).service("PayrollRunReportService",c).service("LoanReportService",p).service("ComplianceService",d).service("PayrollYTDReportService",u).service("FullandFinalReportService",m)}(e.services||(e.services={}))}(e.reports||(e.reports={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(t){var i,n,o,r,a;t.incomeTaxReports||(t.incomeTaxReports={}),i=function(e){function t(t,i,n,o,r,a){var s=e.call(this,a,n)||this;return s.incomeTaxReportService=t,s.appSettings=i,s.uiGridGroupingConstants=o,s.uiGridExtensions=r,s.initGridSettings(),s}return __extends(t,e),t.prototype.initGridSettings=function(){this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[this.getColumn({name:"employeeNumber",displayName:"Employee Number",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumn({name:"employeeName",displayName:"Employee Name",enablePinning:!0,pinnedLeft:!0,cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.incometax({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',cellClass:"ui-grid-cell  emp-name"}),this.getColumnWithDefaultTemplate({name:"panNumber",displayName:"PAN Number",defaultValue:"Not Available",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumnWithDefaultTemplate({name:"department",displayName:"Department",defaultValue:"Not Available",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"})],this.errorColumnRequired&&this.gridSettings.columnDefs.push(this.getColumnWithDefaultTemplate({name:"errorMessage",displayName:"Error Message",cellClass:"ui-grid-cell days"})),this.gridSettings.columnDefs.push(this.getColumn({name:"actualGross",displayName:"Actual Salary",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"projectedGross",displayName:"Projected Salary",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"totalEarnings",displayName:"Total Earnings",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"employerContributionTaxExemptions",displayName:"Less: Total Employer Share",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"nonMonetaryPerquisitesExemptions",displayName:"Less: Total Non Monetary Perquisites (17(2)(VIII))",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"otherDeductionExemptions",displayName:"Less: Total Other Deductions",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"totalSalaryReceived",displayName:"Total Salary Received",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"outsidePayrollBonusesIncome",displayName:"Outside Payroll Bonuses Income",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"outsidePayrollOvertimeIncome",displayName:"Outside Payroll Over time Income",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"benefitsTaxableIncome",displayName:"Perquisites Taxable Income",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"grossUnderSalaryHead",displayName:"Gross Under Salary Head",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"allowanceTaxExemptions",displayName:"Total Allowance Exemption",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"section16TaxExemptions",displayName:"Total section 16 Exemption",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxableIncomeUnderHeadSalaries",displayName:"Taxable Income Under Head Salaries",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"totalAnnualRentReceived",displayName:"Total Annual Rent Received",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"section24TaxExemptions",displayName:"Section24 Exemption",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxableIncomeUnderHousePropertyHead",displayName:"Taxable Income Under House Property Head",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"totalIncomeFromOtherSources",displayName:"Total Income Under OtherSources Head",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxableIncomeUnderOtherSourcesHead",displayName:"Taxable Income Under OtherSources Head",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"totalGrossUnderAllHeads",displayName:"Total Gross Under All Heads",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"group1o5Exemptions",displayName:"Group1.5Lac Exemptions",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"otherTaxExemptions",displayName:"Other tax Exemptions",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"totalTaxableIncomeUnderAllHeads",displayName:"Total Taxable Income Under All Heads",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"rawTax",displayName:"Tax On Taxable Income",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxRebate",displayName:"Tax Exemption Under Rebate",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"actualTax.incomeTax",displayName:"Income Tax",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"rawSurcharge",displayName:"Raw Surcharge",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"reliefOnSurcharge",displayName:"Relief On Surcharge",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"actualTax.surcharge",displayName:"Net Surcharge",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"actualTax.cess",displayName:"Cess",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"actualTax.totalTaxAmount",displayName:"Total Tax Liability",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxPaid.incomeTax",displayName:"Income Tax Paid",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxPaid.cess",displayName:"Cess Paid",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxPaid.surcharge",displayName:"Surcharge Paid",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxPaid.totalTaxAmount",displayName:"Total Tax Paid",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxPayable.incomeTax",displayName:"Income Tax Payable",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxPayable.cess",displayName:"Cess Payable",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxPayable.surcharge",displayName:"Surcharge Payable",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxPayable.totalTaxAmount",displayName:"Total Tax Payable",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.rowTemplate='<div class="register-row" data-ng-class="{\'no-details\' : row.entity.errorMessage != null}"><div ng-repeat="col in colContainer.renderedColumns track by col.colDef.name" class="ui-grid-cell" ui-grid-cell></div></div>',this.gridSettings.data="ctrl.incomeTaxRegister | filter: ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},t.prototype.getReportData=function(e){var t=this;this.selectFinancialYear(e)&&(this.incomeTaxRegister=[],this.errorColumnRequired=!1,this.incomeTaxReportService.getIncomeTaxAnnualReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear()).then(function(e){t.incomeTaxRegister=e.map(function(e){return e.errorMessage?(t.errorColumnRequired=!0,{errorMessage:e.errorMessage,employeeName:e.employeeName,employeeNumber:e.employeeNumber,employeeId:e.employeeId,panNumber:e.panNumber,department:e.department}):e}),t.initGridSettings()},function(e){console.log("Error occurred while fetch income tax annual report")}))},t.prototype.exportReport=function(e){this.incomeTaxReportService.exportAnnualIncomeTaxReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear(),{format:e||"excel",searchKey:(this.filterText||"").trim()})},t.$inject=["IncomeTaxReportService","AppSettings","PayrollModel","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],t}(t.IFYReportController),n=function(e){function i(t,i,n,o,r,a){var s=e.call(this,a,n)||this;return s.incomeTaxReportService=t,s.appSettings=i,s.uiGridGroupingConstants=o,s.uiGridExtensions=r,s}return __extends(i,e),i.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.onRegisterApi=this.onRegisterGridApi,this.gridSettings.columnDefs=[this.getColumn({name:"employeeNumber",displayName:"Employee Number",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumn({name:"employeeName",displayName:"Employee Name",enablePinning:!0,pinnedLeft:!0,cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.incometax({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',cellClass:"ui-grid-cell  emp-name"}),this.getColumnWithDefaultTemplate({name:"panNumber",displayName:"PAN Number",defaultValue:"Not Available",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumnWithDefaultTemplate({name:"department",displayName:"Department",defaultValue:"Not Available",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"})],this.errorColumnRequired&&this.gridSettings.columnDefs.push(this.getColumnWithDefaultTemplate({name:"errorMessage",displayName:"Error Message",cellClass:"ui-grid-cell days"})),Object.keys(this.dynamicColumnsTitle.earningsTitle).forEach(function(t){var i=e.dynamicColumnsTitle.earningsTitle[t];e.gridSettings.columnDefs.push(e.getColumn({name:i.componentName,displayName:i.componentTitle,cellFilter:"currency:'':2",uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions}))}),this.gridSettings.columnDefs.push(this.getColumn({name:"totalEarnings",displayName:"Total Earnings",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),Object.keys(this.dynamicColumnsTitle.employerexemptTitles).forEach(function(t){var i=e.dynamicColumnsTitle.employerexemptTitles[t];e.gridSettings.columnDefs.push(e.getColumn({name:i.taxExemptName,displayName:i.taxExemptTitle,cellFilter:"currency:'':2",uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions}))}),this.gridSettings.columnDefs.push(this.getColumn({name:"totalEmployerContributionTaxExemptions",displayName:"Less: Total Employer Share",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),Object.keys(this.dynamicColumnsTitle.nonMonetaryTaxExemptTitles).forEach(function(t){var i=e.dynamicColumnsTitle.nonMonetaryTaxExemptTitles[t];e.gridSettings.columnDefs.push(e.getColumn({name:i.taxExemptName,displayName:i.taxExemptTitle,cellFilter:"currency:'':2",uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions}))}),this.gridSettings.columnDefs.push(this.getColumn({name:"totalNonMonetaryPerquisitesExemptions",displayName:"Less: Total Non Monetary Perquisites (17(2)(VIII))",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),Object.keys(this.dynamicColumnsTitle.otherDeductionTaxExemptTitles).forEach(function(t){var i=e.dynamicColumnsTitle.otherDeductionTaxExemptTitles[t];e.gridSettings.columnDefs.push(e.getColumn({name:i.taxExemptName,displayName:i.taxExemptTitle,cellFilter:"currency:'':2",uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions}))}),this.gridSettings.columnDefs.push(this.getColumn({name:"totalOtherDeductionExemptions",displayName:"Less: Total Other Deductions",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"totalSalaryReceived",displayName:"Total Salary Received",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"outsidePayrollBonusesIncome",displayName:"Outside Payroll Bonuses Income",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"outsidePayrollOvertimeIncome",displayName:"Outside Payroll Over time Income",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"benefitsTaxableIncome",displayName:"Perquisites Taxable Income",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"grossUnderSalaryHead",displayName:"Gross Under Salary Head",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),Object.keys(this.dynamicColumnsTitle.allowancesTitle).forEach(function(t){var i=e.dynamicColumnsTitle.allowancesTitle[t];e.gridSettings.columnDefs.push(e.getColumn({name:i.taxExemptName,displayName:i.taxExemptTitle,cellFilter:"currency:'':2",uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions}))}),Object.keys(this.dynamicColumnsTitle.section16Titles).forEach(function(t){var i=e.dynamicColumnsTitle.section16Titles[t];e.gridSettings.columnDefs.push(e.getColumn({name:i.taxExemptName,displayName:i.taxExemptTitle,cellFilter:"currency:'':2",uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions}))}),this.gridSettings.columnDefs.push(this.getColumn({name:"taxableIncomeUnderHeadSalaries",displayName:"Taxable Income Under Head Salaries ",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"totalAnnualRentReceived",displayName:"Total Annual Rent Received",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),Object.keys(this.dynamicColumnsTitle.section24Titles).forEach(function(t){var i=e.dynamicColumnsTitle.section24Titles[t];e.gridSettings.columnDefs.push(e.getColumn({name:i.taxExemptName,displayName:i.taxExemptTitle,cellFilter:"currency:'':2",uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions}))}),this.gridSettings.columnDefs.push(this.getColumn({name:"taxableIncomeUnderHousePropertyHead",displayName:"Taxable Income Under House Property Head",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"totalIncomeFromOtherSources",displayName:"Total Income Under OtherSources Head",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxableIncomeUnderOtherSourcesHead",displayName:"Taxable Income Under OtherSources Head",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"totalGrossUnderAllHeads",displayName:"Total Gross Under All Heads",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),Object.keys(this.dynamicColumnsTitle.section1o5Titles).forEach(function(t){var i=e.dynamicColumnsTitle.section1o5Titles[t];e.gridSettings.columnDefs.push(e.getColumn({name:i.taxExemptName,displayName:i.taxExemptTitle,cellFilter:"currency:'':2",uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions}))}),Object.keys(this.dynamicColumnsTitle.otherTaxExemptTitles).forEach(function(t){var i=e.dynamicColumnsTitle.otherTaxExemptTitles[t];e.gridSettings.columnDefs.push(e.getColumn({name:i.taxExemptName,displayName:i.taxExemptTitle,cellFilter:"currency:'':2",uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions}))}),this.gridSettings.columnDefs.push(this.getColumn({name:"totalTaxableIncomeUnderAllHeads",displayName:"Total Taxable Income Under All Heads",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"rawTax",displayName:"Tax On Taxable Income",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxRebate",displayName:"Tax Exemption Under Rebate",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"actualTax.incomeTax",displayName:"Income Tax",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"rawSurcharge",displayName:"Raw Surcharge",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"reliefOnSurcharge",displayName:"Relief On Surcharge",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"actualTax.surcharge",displayName:"Net Surcharge",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"actualTax.cess",displayName:"Cess",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"actualTax.totalTaxAmount",displayName:"Total Tax Liability",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxPaid.incomeTax",displayName:"Income Tax Paid",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxPaid.cess",displayName:"Cess Paid",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxPaid.surcharge",displayName:"Surcharge Paid",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxPaid.totalTaxAmount",displayName:"Total Tax Paid",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxPayable.incomeTax",displayName:"Income Tax Payable",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxPayable.cess",displayName:"Cess Payable",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxPayable.surcharge",displayName:"Surcharge Payable",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"taxPayable.totalTaxAmount",displayName:"Total Tax Payable",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.rowTemplate='<div class="register-row" data-ng-class="{\'no-details\' : row.entity.errorMessage != null}"><div ng-repeat="col in colContainer.renderedColumns track by col.colDef.name" class="ui-grid-cell" ui-grid-cell></div></div>',this.gridSettings.data="ctrl.incomeTaxRegister | filter: ctrl.filterText"},i.prototype.getReportData=function(e){var i=this;this.selectFinancialYear(e)&&(this.incomeTaxRegister=[],this.errorColumnRequired=!1,this.incomeTaxReportService.getIncomeTaxAnnualDetailedReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear()).then(function(e){i.dynamicColumnsTitle={earningsTitle:{},allowancesTitle:{},employerexemptTitles:{},section16Titles:{},section24Titles:{},section1o5Titles:{},otherTaxExemptTitles:{},nonMonetaryTaxExemptTitles:{},otherDeductionTaxExemptTitles:{}},i.incomeTaxRegister=e.map(function(e){var n=new t.model.AnnualIncomeTaxDetailedGridRow(e);return null==e.errorMessage?(e.earnings.forEach(function(e){n.addPropertyBasedOnComponent(e,i.dynamicColumnsTitle.earningsTitle)}),e.allowanceTaxExemptions.forEach(function(e){n.addPropertyBasedOnTaxExemption(e,i.dynamicColumnsTitle.allowancesTitle)}),e.employerContributionTaxExemptions.forEach(function(e){n.addPropertyBasedOnTaxExemption(e,i.dynamicColumnsTitle.employerexemptTitles)}),e.section16TaxExemptions.forEach(function(e){n.addPropertyBasedOnTaxExemption(e,i.dynamicColumnsTitle.section16Titles)}),e.section24TaxExemptions.forEach(function(e){n.addPropertyBasedOnTaxExemption(e,i.dynamicColumnsTitle.section24Titles)}),e.group1o5Exemptions.forEach(function(e){n.addPropertyBasedOnTaxExemption(e,i.dynamicColumnsTitle.section1o5Titles)}),e.otherTaxExemptions.forEach(function(e){n.addPropertyBasedOnTaxExemption(e,i.dynamicColumnsTitle.otherTaxExemptTitles)}),(e.nonMonetaryPerquisitesExemptions||[]).forEach(function(e){n.addPropertyBasedOnTaxExemption(e,i.dynamicColumnsTitle.nonMonetaryTaxExemptTitles)}),(e.otherDeductionExemptions||[]).forEach(function(e){n.addPropertyBasedOnTaxExemption(e,i.dynamicColumnsTitle.otherDeductionTaxExemptTitles)})):i.errorColumnRequired=!0,n}),i.initGridSettings(),i.queueGridRefresh()},function(e){console.log("Error occurred while fetch income tax annual report")}))},i.prototype.exportReport=function(e){this.incomeTaxReportService.exportAnnualIncomeTaxDetailedReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear(),{format:e||"excel",searchKey:(this.filterText||"").trim()})},i.$inject=["IncomeTaxReportService","AppSettings","PayrollModel","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],i}(t.IFYReportController),o=function(e){function i(t,i,n,o,r){var a=e.call(this,r)||this;return a.incomeTaxReportService=t,a.appSettings=i,a.uiGridGroupingConstants=n,a.uiGridExtensions=o,a.initGridSettings(),a}return __extends(i,e),i.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[{field:"employeeName",displayName:"Employee Name",cellClass:"ui-grid-cell emp-name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.incometax({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',enableGrouping:!1},{field:"employeeNumber",displayName:"Employee Number",enableGrouping:!1},{field:"dateJoined",displayName:"Date Joined",cellFilter:'stringToDate : "dd-MMM-yyyy"',enableGrouping:!1},{field:"panNumber",displayName:"PAN Number",enableGrouping:!1},{field:"grossAmount",displayName:"GrossAmount",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"incomeTax",displayName:"Raw Tax",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"surcharge",displayName:"Surcharge",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"cess",displayName:"Cess",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"totalTaxAmount",displayName:"Income Tax",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],this.gridSettings.rowHeight=50,this.gridSettings.onRegisterApi=this.onRegisterGridApi,this.gridSettings.data="ctrl.incomeTaxData.employeeDetails | filter : ctrl.filterText"},i.prototype.exportReport=function(e){this.incomeTaxReportService.exportMonthlyIncomeTaxReport(new t.model.MonthlyExportRequest({groupId:this.payrollConfiguration.payGroupId,month:this.reportDate.month,year:this.reportDate.year,format:e||"excel",searchKey:(this.filterText||"").trim()}))},i.prototype.getReportData=function(e){var t=this;this.selectReportDate(e)&&(this.incomeTaxData=[],this.incomeTaxReportService.getMonthlyIncomeTaxReport(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year).then(function(e){t.incomeTaxData=e,t.queueGridRefresh()}))},i.$inject=["IncomeTaxReportService","AppSettings","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],i}(t.IMonthlyReportController),r=function(e){function t(t,i,n,o,r,a){var s=e.call(this,a,n)||this;return s.incomeTaxReportService=t,s.appSettings=i,s.uiGridGroupingConstants=o,s.uiGridExtensions=r,s.initGridSettings(),s}return __extends(t,e),t.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.rowHeight=50,this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",enableGrouping:!1},{field:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.incometax({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',cellTooltip:!0,headerCellTooltip:!0,enableGrouping:!1},{field:"grossSalary",displayName:"Gross Salary",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"monthlyRegularTDS",displayName:"Regular TDS",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"amount",displayName:"TDS Override",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"overrideRange",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.overrideRange.from | date: "MMM yyyy"}} to {{row.entity.overrideRange.to | date: "MMM yyyy"}}</div>',width:200,groupingShowAggregationMenu:!1},{field:"comment",displayName:"Comment",tooltip:!0,enableGrouping:!1}],this.gridSettings.onRegisterApi=this.onRegisterGridApi,this.gridSettings.data="ctrl.tdsOverridesData | filter : ctrl.filterText"},t.prototype.getReportData=function(e){var t=this;this.selectFinancialYear(e)&&(this.tdsOverridesData=[],this.incomeTaxReportService.getTDSOverridesReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear()).then(function(e){t.tdsOverridesData=e,t.queueGridRefresh()},function(e){console.log("Error occurred while fetch income tax annual report")}))},t.prototype.exportReport=function(e){this.incomeTaxReportService.exportTDSOverridesReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear(),{format:e||"excel",searchKey:(this.filterText||"").trim()})},t.$inject=["IncomeTaxReportService","AppSettings","PayrollModel","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],t}(t.IFYReportController),a=function(t){function i(e,i,n,o,r,a,s){var l=t.call(this,s)||this;return l.incomeTaxReportService=e,l.appSettings=i,l.payrollModel=n,l.timeoutService=o,l.uiGridGroupingConstants=r,l.uiGridExtensions=a,l.components={},l.previousIncomeDetails=[],l.initGridSettings(),l}return __extends(i,t),i.prototype.buildYearListBased=function(){var e=this.payrollModel.FinancialYear.getFinancialYear(new Date(this.payrollConfiguration.payCycle.kekaStartsFrom));return this.buildYearList(new Date(e.from),this.lastFinalizedCycle||this.payrollConfiguration.payCycle.firstCycle)},i.prototype.selectDefaultValue=function(){var e=new Date(this.payrollConfiguration.payCycle.kekaStartsFrom);this.setDefaultValue(this.getMonth(e.getMonth(),e.getFullYear()))},i.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[{name:"employeeNumber",enablePinning:!0,displayName:"Employee Number",pinnedLeft:!0,width:150,enableGrouping:!1},{name:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.summary({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',enablePinning:!0,pinnedLeft:!0,width:150,enableGrouping:!1},{name:"financialYear",displayName:"Financial Year",width:150,enablePinning:!0,pinnedLeft:!0,groupingShowAggregationMenu:!1},{name:"Formonth",displayName:"Month",width:150,enablePinning:!0,pinnedLeft:!0,groupingShowAggregationMenu:!1},{name:"incomeSource",displayName:"Income Source",width:150,enablePinning:!0,pinnedLeft:!0,groupingShowAggregationMenu:!1},{field:"noOfPayDays",displayName:"No Of Pay Days",width:150,enablePinning:!0,pinnedLeft:!0,groupingShowAggregationMenu:!1},{name:"grossAmount",displayName:"Gross Amount",enablePinning:!0,pinnedLeft:!0,width:150,type:"number",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],this.gridSettings.columnVirtualizationThreshold=200,angular.forEach(this.components,function(t,i){e.gridSettings.columnDefs.push({name:t.componentName,displayName:t.componentTitle.toUpperCase(),width:200,cellTooltip:!0,headerTooltip:!0,type:"number",cellFilter:"currency:'':2",treeAggregationType:e.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1})}),this.gridSettings.columnDefs.push({name:"netPay",displayName:"Net Pay",width:150,type:"number",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}),this.gridSettings.data="ctrl.previousIncomeDetails | filter: ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},i.prototype.getReportData=function(){var t=this;this.incomeTaxReportService.getPreviousIncomeDetails(this.payrollConfiguration.payGroupId,this.fromMonth.getDateOnlyString(),this.toMonth.getDateOnlyString()).then(function(i){t.components={},t.previousIncomeDetails=[],angular.forEach(i,function(i,n){var o=new e.Model.PreviousIncomeRegisterGridRow(i);angular.forEach(i.components,function(e,i){o.addProperty(e,t.components)}),t.previousIncomeDetails.push(o)}),t.initGridSettings(),t.queueGridRefresh()})},i.prototype.exportReport=function(e){this.incomeTaxReportService.exportPreviousIncomeDetails(this.payrollConfiguration.payGroupId,{groupId:this.payrollConfiguration.payGroupId,fromMonth:this.fromMonth.getDateOnlyString(),toMonth:this.toMonth.getDateOnlyString(),format:e,searchKey:(this.filterText||"").trim()})},i.$inject=["IncomeTaxReportService","AppSettings","PayrollModel","$timeout","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],i}(t.IMonthRangeReportController),angular.module("payroll").controller("MonthlyIncomeTaxStatementController",o).controller("AnnualIncomeTaxReportController",i).controller("AnnualIncomeTaxDetailedReportController",n).controller("TdsOverridesReportController",r).controller("PreviousIncomeReportController",a)}(e.reports||(e.reports={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){var t,i,n,o,r;e.declarationReports||(e.declarationReports={}),t=function(e){function t(t,i,n,o,r,a){var s=e.call(this,a,n)||this;return s.declarationReportService=t,s.appSettings=i,s.uiGridGroupingConstants=o,s.uiGridExtensions=r,s.initGridSettings(),s}return __extends(t,e),t.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",enableGrouping:!1},{field:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.managetax.declaration({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',enableGrouping:!1},{field:"requestedClaim",displyName:"Requested Claim",cellFilter:"currency: 'Rs. '",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"approvedClaim",displayName:"Approved Claim",cellFilter:"currency: 'Rs. '",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"rejectedClaim",displayName:"Rejected Claim",cellFilter:"currency: 'Rs. '",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"pendingClaim",displayName:"Pending Claim",cellFilter:"currency: 'Rs. '",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{name:"documentCount",displayName:"Document Count",enableGrouping:!1}],this.gridSettings.rowHeight=50,this.gridSettings.data="ctrl.employeeDeclarations | filter: ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},t.prototype.getReportData=function(e){var t=this;this.selectFinancialYear(e)&&(this.employeeDeclarations=[],this.declarationReportService.getDeclarationSummaryReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear()).then(function(e){t.employeeDeclarations=e,t.queueGridRefresh()},function(e){console.log("Error occurred while fetch declaration summary report")}))},t.prototype.exportReport=function(e){this.declarationReportService.exportDeclarationSummaryReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear(),{format:e||"excel",searchKey:(this.filterText||"").trim()})},t.$inject=["DeclarationReportService","AppSettings","PayrollModel","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],t}(e.IFYReportController),i=function(e){function t(t,i,n,o,r,a,s,l,c){var p=e.call(this,c,n)||this;return p.declarationReportService=t,p.appSettings=i,p.modalService=o,p.scope=r,p.timeoutService=a,p.uiGridGroupingConstants=s,p.uiGridExtensions=l,p.initGridSettings(),p.initEmployeeGridSettings(),p}return __extends(t,e),t.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",enableGrouping:!1},{field:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.managetax.declaration({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',enableGrouping:!1},{field:"requestedClaim",displyName:"Requested Claim",cellFilter:"currency: 'Rs. '",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"approvedClaim",displayName:"Approved Claim",cellFilter:"currency: 'Rs. '",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{name:"details",cellTemplate:"<div class='ui-grid-cell-contents'><span class='node add-link' data-ng-click='grid.appScope.ctrl.showClaimDetails(row.entity)'>View details</span></div>",enableSort:!1,width:150,enableGrouping:!1}],this.gridSettings.rowHeight=50,this.gridSettings.data="ctrl.employeeDeclarations | filter: ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},t.prototype.initEmployeeGridSettings=function(){this.declarationSummaryOptions=angular.copy(this.appSettings.gridSettings),this.declarationSummaryOptions.columnDefs=[{field:"title",displayName:"Component",cellTemplate:'<div class="ui-grid-cell-contents"><span title="{{row.entity.title}}">{{row.entity.title}}</span></div>',headerTooltip:!0},{field:"declared",displayName:"Declared",cellFilter:"currency:'':2",width:120,headerTooltip:!0},{field:"claimed",displayName:"Accepted",cellFilter:"currency:'':2",width:120,headerTooltip:!0},{field:"attachedDocumentsCount",displayName:"Documents Received",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{ row.entity.attachedDocumentsCount ?  "Yes" :  "No" }}</span></div>',headerTooltip:!0},{field:"attachedDocumentsCount",displayName:"Documents Attached",headerTooltip:!0}],this.declarationSummaryOptions.data="ctrl.currentEmployeeSummary"},t.prototype.showClaimDetails=function(e){var t=this;this.currentEmployeeSummary=e.taxDeductions,this.currentEmployeeName=e.employeeName,this.modalService.open({templateUrl:"employeeDeclarationSummary",windowClass:"bonus employee-profile-modal",scope:this.scope,backdrop:"static",keyboard:!1}).rendered.then(function(){t.timeoutService(function(){window.dispatchEvent(new Event("resize"))},200)})},t.prototype.getReportData=function(e){var t=this;this.selectFinancialYear(e)&&(this.employeeDeclarations=[],this.declarationReportService.getDeclarationReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear()).then(function(e){t.employeeDeclarations=e,t.queueGridRefresh()},function(e){console.log("Error occurred while fetch declaration summary report")}))},t.prototype.exportReport=function(e){this.declarationReportService.exportDeclarationReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear(),{format:e||"excel",searchKey:(this.filterText||"").trim()})},t.$inject=["DeclarationReportService","AppSettings","PayrollModel","$uibModal","$scope","$timeout","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],t}(e.IFYReportController),n=function(t){function i(e,i,n,o,r,a){var s=t.call(this,a,n)||this;return s.incomeTaxReportService=e,s.appSettings=i,s.uiGridGroupingConstants=o,s.uiGridExtensions=r,s}return __extends(i,t),i.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[this.getColumn({name:"employeeNumber",displayName:"Employee Number",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumn({name:"employeeName",displayName:"Employee Name",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.managetax.declaration({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>'}),this.getColumnWithDefaultTemplate({name:"panNumber",displayName:"PAN Number",defaultValue:"Not Available",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumnWithDefaultTemplate({name:"jobTitle",displayName:"Job Title",defaultValue:"Not Available",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumnWithDefaultTemplate({name:"department",displayName:"Department",defaultValue:"Not Available",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"})],this.errorMessageRequired&&this.gridSettings.columnDefs.push(this.getColumnWithDefaultTemplate({name:"errorMessage",displayName:"Error Message",cellClass:"ui-grid-cell days"})),this.gridSettings.columnDefs.push(this.getColumn({name:"totalHRAExempted",displayName:"Total HRA Exempted",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),Object.keys(this.dynamicmonthTitles).forEach(function(t){e.gridSettings.columnDefs.push(e.getColumn({name:t+".amount",displayName:t.toUpperCase(),uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions,actualColName:t,cellTemplate:'<div class="ui-grid-cell-contents"><div popover-class="md-popover high-index" data-uib-popover-template="\'annualHraBreakup\'" popover-append-to-body="true" data-popover-trigger="mouseenter">{{(grid.getCellValue(row, col) | currency: "":2) || 0}}</div></div>'}))}),this.gridSettings.rowTemplate='<div class="register-row" data-ng-class="{\'no-details\' : row.entity.errorMessage != null}"><div ng-repeat="col in colContainer.renderedColumns track by col.colDef.name" class="ui-grid-cell" ui-grid-cell></div></div>',this.gridSettings.rowHeight=50,this.gridSettings.data="ctrl.employeeAnnualHRA | filter: ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},i.prototype.getReportData=function(t){var i=this;this.selectFinancialYear(t)&&this.incomeTaxReportService.getAnnualHraReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear()).then(function(t){i.dynamicmonthTitles={},i.employeeAnnualHRA=t.map(function(t){var n=new e.model.AnnualHRAGridRow(t);return t.errorMessage?(i.errorMessageRequired=!0,n.totalHRAExempted=null):t.monthlyHRAExemptDetails.forEach(function(e){return n.addPropertyBasedOnMonth(e,i.dynamicmonthTitles)}),n}),i.initGridSettings(),i.queueGridRefresh()},function(e){console.log("Error occurred while fetch declaration summary report")})},i.prototype.exportReport=function(e){this.incomeTaxReportService.exportAnnualHRAReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear(),{format:e||"excel",searchKey:(this.filterText||"").trim()})},i.$inject=["IncomeTaxReportService","AppSettings","PayrollModel","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],i}(e.IFYReportController),o=function(t){function i(e,i,n,o,r,a){var s=t.call(this,a,n)||this;return s.incomeTaxReportService=e,s.appSettings=i,s.uiGridGroupingConstants=o,s.uiGridExtensions=r,s}return __extends(i,t),i.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[this.getColumn({name:"employeeNumber",displayName:"Employee Number",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumn({name:"employeeName",displayName:"Employee Name",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.managetax.declaration({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>'}),this.getColumnWithDefaultTemplate({name:"panNumber",displayName:"PAN Number",defaultValue:"Not Available",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumnWithDefaultTemplate({name:"jobTitle",displayName:"Job Title",defaultValue:"Not Available",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumnWithDefaultTemplate({name:"department",displayName:"Department",defaultValue:"Not Available",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"})],this.errorMessageRequired&&this.gridSettings.columnDefs.push(this.getColumnWithDefaultTemplate({name:"errorMessage",displayName:"Error Message",cellClass:"ui-grid-cell days"})),Object.keys(this.dynamicColumnsTitle.earningsTitle).forEach(function(t){var i=e.dynamicColumnsTitle.earningsTitle[t];e.gridSettings.columnDefs.push(e.getColumn({name:i.componentName,displayName:i.componentTitle,cellFilter:"currency:'':2",uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions}))}),this.gridSettings.columnDefs.push(this.getColumn({name:"requestedClaim",displayName:"Requested Claim",cellFilter:"currency:'':2"})),this.gridSettings.columnDefs.push(this.getColumn({name:"pendingClaim",displayName:"Pending Claim",cellFilter:"currency:'':2"})),this.gridSettings.columnDefs.push(this.getColumn({name:"rejectedClaim",displayName:"Rejected Claim",cellFilter:"currency:'':2"})),this.gridSettings.columnDefs.push(this.getColumn({name:"approvedClaim",displayName:"Approved Claim",cellFilter:"currency:'':2"})),Object.keys(this.dynamicColumnsTitle.sectionsTitles).forEach(function(t){var i=e.dynamicColumnsTitle.sectionsTitles[t];e.gridSettings.columnDefs.push(e.getColumn({name:i.taxExemptName,displayName:i.taxExemptName,cellFilter:"currency:'':2",uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions}))}),this.gridSettings.rowTemplate='<div class="register-row" data-ng-class="{\'no-details\' : row.entity.errorMessage != null}"><div ng-repeat="col in colContainer.renderedColumns track by col.colDef.name" class="ui-grid-cell" ui-grid-cell></div></div>',this.gridSettings.rowHeight=50,this.gridSettings.data="ctrl.employeesDeclarationBreakup | filter: ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},i.prototype.getReportData=function(t){var i=this;this.selectFinancialYear(t)&&this.incomeTaxReportService.getDeclarationBreakupReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear()).then(function(t){i.dynamicColumnsTitle={earningsTitle:{},sectionsTitles:{}},i.employeesDeclarationBreakup=t.map(function(t){var n=new e.model.DeclarationBreakupGridRow(t);return t.errorMessage?i.errorMessageRequired=!0:(t.totalEarnings.forEach(function(e){n.addPropertyBasedOnComponent(e,i.dynamicColumnsTitle.earningsTitle)}),t.taxExemptions.forEach(function(e){n.addPropertyBasedOnTaxExemption(e,i.dynamicColumnsTitle.sectionsTitles)})),n}),i.initGridSettings(),i.queueGridRefresh()},function(e){console.log("Error occurred while fetch declaration summary report")})},i.prototype.exportReport=function(e){this.incomeTaxReportService.exportDeclarationBreakupReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear(),{format:e||"excel",searchKey:(this.filterText||"").trim()})},i.$inject=["IncomeTaxReportService","AppSettings","PayrollModel","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],i}(e.IFYReportController),r=function(e){function t(t,i,n,o,r,a){var s=e.call(this,r,a)||this;return s.declarationReportService=t,s.appSettings=i,s.uiGridGroupingConstants=n,s.uiGridExtensions=o,s.PayrollModel=a,s.initGridSettings(),s}return __extends(t,e),t.prototype.initGridSettings=function(){this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[this.getColumn({name:"employeeNumber",displayName:"Employee Number",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumn({name:"employeeName",displayName:"Employee Name",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.managetax.declaration({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>'}),this.getColumn({name:"fromMonth",displayName:"From Month"}),this.getColumn({name:"toMonth",displayName:"To Month"}),this.getColumn({name:"address",displayName:"Address"}),this.getColumn({name:"city",displayName:"City"}),this.getColumn({name:"rentPaid",displayName:"Rent Paid",cellFilter:"currency:'':2"}),this.getColumn({name:"landLordName",displayName:"LandLord Name"}),this.getColumn({name:"landLordAddress",displayName:"LandLord Address"}),this.getColumn({name:"landLordPan",displayName:"LandLord Pan"}),this.getColumnWithDefaultTemplate({name:"isSignedDeclaration",displayName:"Signed Declaration",defaultValue:"Not Available"})],this.gridSettings.rowHeight=50,this.gridSettings.data="ctrl.houseRentreportData | filter: ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},t.prototype.getReportData=function(e){var t=this;this.selectFinancialYear(e)&&this.declarationReportService.getEmployeeHouseRentReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear()).then(function(e){t.houseRentreportData=e,t.queueGridRefresh()},function(e){console.log("Error occurred while fetch declaration summary report")})},t.prototype.exportReport=function(e){this.declarationReportService.exportEmployeeHouseRentReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear(),{format:e||"excel",searchKey:(this.filterText||"").trim()})},t.$inject=["DeclarationReportService","AppSettings","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService","PayrollModel"],t}(e.IFYReportController),angular.module("payroll").controller("DeclarationSummaryReportController",t).controller("DeclarationReportController",i).controller("HouseRentDeclarationReportController",r).controller("AnnualHRAReportController",n).controller("DeclarationBreakupReportController",o)}(e.reports||(e.reports={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(t){var i,n,o,r,a,s,l,c,p,u,d;t.pfReports||(t.pfReports={}),i=function(e){function t(t,i,n,o,r,a){var s=e.call(this,r)||this;return s.pfReportService=t,s.appSettings=i,s.uiGridGroupingConstants=n,s.uiGridExtensions=o,s.PayrollLookUpService=a,s.initGridSettings(),s}return __extends(t,e),t.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTooltip:!0,headerCellTooltip:!0,width:150,enablePinning:!0,pinnedLeft:!0,enableGrouping:!1},{field:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',cellTooltip:!0,headerCellTooltip:!0,width:150,pinnedLeft:!0,enableGrouping:!1},{field:"pfNumber",displayName:"PF Number",cellTooltip:!0,headerCellTooltip:!0,width:150,pinnedLeft:!0,enableGrouping:!1},{field:"employeeEPFWages",displayName:"Employee EPF Wages",cellTooltip:!0,width:200,headerCellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"employeeEPFShare",displayName:"Employee EPF Share",cellTooltip:!0,width:200,headerCellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"employeeVPFShare",displayName:"Employee VPF Share",cellTooltip:!0,width:200,headerCellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"employerEPSWages",displayName:"Employer EPS Wages",cellTooltip:!0,width:200,headerCellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"employerEPSShare",displayName:"Employer EPS Share",cellTooltip:!0,width:200,headerCellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"employerEPFShare",displayName:"Employer EPF Share",cellTooltip:!0,width:200,headerCellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"epfAdminCharge",displayName:"EPF Admin Charges (A/C 2)",cellTooltip:!0,width:200,headerCellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"edlisCharge",displayName:"EDLIS Charge (ER Share A/C 21)",cellTooltip:!0,width:200,headerCellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],(this.filteredPfRemittanceData||{}).totalEDLIAdminCharges>0&&this.gridSettings.columnDefs.push({field:"edlisAdminCharge",displayName:"EDLI Admin Charges (A/C 22)",cellTooltip:!0,width:200,headerCellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}),this.gridSettings.rowHeight=50,this.gridSettings.data="ctrl.filteredPfRemittanceData.employeesPFDetails | filter : {pfConfigurationId : ( ctrl.pfConfigurationId || '')} | filter : ctrl.filterText ",this.gridSettings.onRegisterApi=this.onRegisterGridApi},t.prototype.exportReport=function(e){this.pfReportService.exportPFRemittanceReport(this.payrollConfiguration.payGroupId,this.pfConfigurationId,{month:this.reportDate.month,year:this.reportDate.year,pfConfigurationId:this.pfConfigurationId,format:e||"excel",searchKey:(this.filterText||"").trim()})},t.prototype.changePFConfigurationId=function(){var e=this;this.filteredPfRemittanceData.employeesPFDetails=this.pfRemittanceData.employeesPFDetails.filter(function(t){return t.pfConfigurationId==e.pfConfigurationId});var t=0,i=0,n=0,o=0,r=0;this.filteredPfRemittanceData.employeesPFDetails.forEach(function(e){t+=e.employeeEPFShare+e.employerEPFShare,i+=e.employerEPSShare,n+=e.edlisCharge,o+=e.epfAdminCharge,r+=e.edlisAdminCharge}),this.filteredPfRemittanceData.totalEPF=t,this.filteredPfRemittanceData.totalEmployerEPSShare=i,this.filteredPfRemittanceData.totalEDLIContribution=n,this.filteredPfRemittanceData.totalEPFAdminCharges=o,this.filteredPfRemittanceData.totalEDLIAdminCharges=r},t.prototype.getReportData=function(e){var t=this;this.PayrollLookUpService.getStatutoryPFInfo(this.payrollConfiguration.payGroupId).then(function(e){t.pfLookup=e,e.length>0&&(t.pfConfigurationId=e[0].id)}),this.selectReportDate(e)&&this.pfReportService.getPFRemittanceReport(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year).then(function(e){t.pfRemittanceData=e,t.filteredPfRemittanceData=Object.assign([],e),t.changePFConfigurationId(),t.queueGridRefresh()})},t.$inject=["PFReportService","AppSettings","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService","PayrollLookUpService"],t}(t.IMonthlyReportController),n=function(t){function i(i,n,o,r,a,s){var l=t.call(this,a)||this;return l.pfReportService=i,l.appSettings=n,l.uiGridGroupingConstants=o,l.uiGridExtensions=r,l.PayrollLookUpService=s,l.ecrGridTypeOptions=[{id:e.Model.PFECRFileType.Version2ECR,title:"ECR V2"},{id:e.Model.PFECRFileType.Version2ArrearECR,title:"Arrear ECR"}],l.ecrFileType=e.Model.PFECRFileType.Version2ECR,l.initGridSettings(),l}return __extends(i,t),i.prototype.changeECRGridType=function(){var e=this;this.reportDate&&this.pfReportService.getEPFLineItems(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year,this.ecrFileType,this.payrollConfiguration.pf.enableHigherPension).then(function(t){e.pfECRLineItems=t,e.changePFConfigurationId(),e.initGridSettings()})},i.prototype.initGridSettings=function(){switch(this.ecrFileType){case e.Model.PFECRFileType.Version2ECR:this.initPFECRGridOptions();break;case e.Model.PFECRFileType.Version2ArrearECR:this.initArrearPFECRGridOptions()}},i.prototype.initializeLookups=function(){var e=this;this.PayrollLookUpService.getStatutoryPFInfo(this.payrollConfiguration.payGroupId).then(function(t){e.pfLookup=t,t.length>0&&(e.pfConfigurationId=t[0].id)})},i.prototype.changePFConfigurationId=function(){var e=this;this.filteredPfECRLineItems=this.pfECRLineItems.filter(function(t){return t.pfConfigurationId==e.pfConfigurationId})},i.prototype.initPFECRGridOptions=function(){var e=this;this.pfECRGridOptions=angular.copy(this.appSettings.gridSettings),this.pfECRGridOptions.rowHeight=40,this.pfECRGridOptions.showColumnFooter=!0,this.pfECRGridOptions.columnDefs=[{field:"uan",displayName:"UAN",cellTooltip:!0,enableGrouping:!1},{field:"memberName",displayName:"Member Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.memberName}}">{{row.entity.memberName}}</a></div>',cellTooltip:!0,enableGrouping:!1},{field:"gross",displayName:"Gross Wages",cellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"epfWages",displayName:"EPF Wages",cellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"epsWages",displayName:"EPS Wages",cellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"edliWages",displayName:"EDLI Wages",cellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"employeeShareRemitted",displayName:"EE Share Remitted ",cellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"epsContributionRemitted",displayName:"EPS Contribution Remitted",cellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"employerShareReimtted",displayName:"ER Share Remitte",cellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"ncpDays",displayName:"NCP Days",cellTooltip:!0,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"refundOfAdvances",displayName:"Refunds",cellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],this.pfECRGridOptions.data="ctrl.filteredPfECRLineItems | filter : ctrl.filterText",this.pfECRGridOptions.enableHorizontalScrollbar=!0,this.pfECRGridOptions.onRegisterApi=this.onRegisterGridApi},i.prototype.initArrearPFECRGridOptions=function(){var e=this;this.pfECRGridOptions=angular.copy(this.appSettings.gridSettings),this.pfECRGridOptions.showColumnFooter=!0,this.pfECRGridOptions.rowHeight=40,this.pfECRGridOptions.columnDefs=[{field:"uan",displayName:"UAN",cellTooltip:!0,enableGrouping:!1},{field:"memberName",displayName:"Member Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.memberName}}">{{row.entity.memberName}}</a></div>',cellTooltip:!0,enableGrouping:!1},{field:"epfWages",displayName:"Arrear EPF Wages",cellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"epsWages",displayName:"Arrear EPS Wages",cellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"edliWages",displayName:"Arrear EDLI Wages",cellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"epfEmployeeShare",displayName:"Employee share EPF",cellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"epfEmployerShare",displayName:"Employer Share EPF",cellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"epsContributionShare",displayName:"Pension Fund Contribution",cellTooltip:!0,cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],this.pfECRGridOptions.data="ctrl.filteredPfECRLineItems | filter : ctrl.filterText",this.pfECRGridOptions.enableHorizontalScrollbar=!0,this.pfECRGridOptions.onRegisterApi=this.onRegisterGridApi},i.prototype.exportReport=function(e){this.pfReportService.exportECRReport(this.payrollConfiguration.payGroupId,this.pfConfigurationId,{month:this.reportDate.month,year:this.reportDate.year,format:e,searchKey:(this.filterText||"").trim(),ecrFileType:this.ecrFileType,enableHigherPension:this.payrollConfiguration.pf.enableHigherPension})},i.prototype.getReportData=function(e){var t=this;this.selectReportDate(e)&&this.pfReportService.getEPFLineItems(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year,this.ecrFileType,this.payrollConfiguration.pf.enableHigherPension).then(function(e){t.pfECRLineItems=e,t.changePFConfigurationId(),t.gridApi&&t.queueGridRefresh()})},i.$inject=["PFReportService","AppSettings","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService","PayrollLookUpService"],i}(t.IMonthlyReportController),o=function(e){function t(t,i,n){var o=e.call(this,i)||this;return o.pfReportService=t,o.PayrollLookUpService=n,o}return __extends(t,e),t.prototype.initGridSettings=function(){},t.prototype.initializeLookups=function(){var e=this;this.PayrollLookUpService.getStatutoryPFInfo(this.payrollConfiguration.payGroupId).then(function(t){e.pfLookup=t,t.length>0&&(e.pfConfigurationId=t[0].id)})},t.prototype.getReportData=function(e){this.selectReportDate(e)},t.prototype.exportReport=function(e){var t=this;this.pfReportService.exportForm6A(this.payrollConfiguration.payGroupId,this.pfConfigurationId,{month:this.reportDate.month,year:this.reportDate.year,format:"pdfform"}).then(function(e){t.downloadStatus=!e.isDownloaded})},t.$inject=["PFReportService","PayGroupsAndConfigurationService","PayrollLookUpService"],t}(t.IMonthlyReportController),r=function(e){function t(t,i,n,o){var r=e.call(this,i)||this;return r.pfReportService=t,r.PayrollLookUpService=n,r}return __extends(t,e),t.prototype.initGridSettings=function(){},t.prototype.initializeLookups=function(){var e=this;this.PayrollLookUpService.getStatutoryPFInfo(this.payrollConfiguration.payGroupId).then(function(t){e.pfLookup=t,t.length>0&&(e.pfConfigurationId=t[0].id)})},t.prototype.getReportData=function(e){this.selectReportDate(e)},t.prototype.exportReport=function(e){var t=this;this.pfReportService.exportMonthlycombinedchallan(this.payrollConfiguration.payGroupId,this.pfConfigurationId,{month:this.reportDate.month,year:this.reportDate.year,format:"pdfform"}).then(function(e){t.downloadStatus=!e.isDownloaded})},t.$inject=["PFReportService","PayGroupsAndConfigurationService","PayrollLookUpService"],t}(t.IMonthlyReportController),a=function(e){function t(t,i,n){var o=e.call(this,i)||this;return o.pfReportService=t,o.PayrollLookUpService=n,o}return __extends(t,e),t.prototype.initGridSettings=function(){},t.prototype.initializeLookups=function(){var e=this;this.PayrollLookUpService.getStatutoryPFInfo(this.payrollConfiguration.payGroupId).then(function(t){e.pfLookup=t,t.length>0&&(e.pfConfigurationId=t[0].id)})},t.prototype.getReportData=function(e){this.selectReportDate(e)},t.prototype.exportReport=function(e){var t=this;this.pfReportService.exportForm5(this.payrollConfiguration.payGroupId,this.pfConfigurationId,{month:this.reportDate.getDateOnlyString(),format:e||"pdfform"}).then(function(e){t.downloadStatus=!e.isDownloaded})},t.$inject=["PFReportService","PayGroupsAndConfigurationService","PayrollLookUpService"],t}(t.IMonthlyReportController),s=function(e){function t(t,i,n){var o=e.call(this,i)||this;return o.pfReportService=t,o.PayrollLookUpService=n,o}return __extends(t,e),t.prototype.initGridSettings=function(){},t.prototype.initializeLookups=function(){var e=this;this.PayrollLookUpService.getStatutoryPFInfo(this.payrollConfiguration.payGroupId).then(function(t){e.pfLookup=t,t.length>0&&(e.pfConfigurationId=t[0].id)})},t.prototype.getReportData=function(e){this.selectReportDate(e)},t.prototype.exportReport=function(e){var t=this;this.pfReportService.exportForm10(this.payrollConfiguration.payGroupId,this.pfConfigurationId,{month:this.reportDate.getDateOnlyString(),format:e||"pdfform"}).then(function(e){t.downloadStatus=!e.isDownloaded})},t.$inject=["PFReportService","PayGroupsAndConfigurationService","PayrollLookUpService"],t}(t.IMonthlyReportController),l=function(e){function t(t,i,n){var o=e.call(this,i)||this;return o.pfReportService=t,o.PayrollLookUpService=n,o}return __extends(t,e),t.prototype.initGridSettings=function(){},t.prototype.initializeLookups=function(){var e=this;this.PayrollLookUpService.getStatutoryPFInfo(this.payrollConfiguration.payGroupId).then(function(t){e.pfLookup=t,t.length>0&&(e.pfConfigurationId=t[0].id)})},t.prototype.getReportData=function(e){this.selectReportDate(e)},t.prototype.exportReport=function(e){var t=this;this.pfReportService.exportForm12A(this.payrollConfiguration.payGroupId,this.pfConfigurationId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"pdfform"}).then(function(e){t.downloadStatus=!e.isDownloaded})},t.$inject=["PFReportService","PayGroupsAndConfigurationService","PayrollLookUpService"],t}(t.IMonthlyReportController),c=function(e){function t(t,i,n){var o=e.call(this,i)||this;return o.pfReportService=t,o.PayrollLookUpService=n,o}return __extends(t,e),t.prototype.initGridSettings=function(){},t.prototype.initializeLookups=function(){var e=this;this.PayrollLookUpService.getStatutoryPFInfo(this.payrollConfiguration.payGroupId).then(function(t){e.pfLookup=t,t.length>0&&(e.pfConfigurationId=t[0].id)})},t.prototype.getReportData=function(e){this.selectReportDate(e)},t.prototype.exportReport=function(e){var t=this;this.pfReportService.exportAadhaarsubmissionreport(this.payrollConfiguration.payGroupId,this.pfConfigurationId,{month:this.reportDate.getDateOnlyString(),format:e||"pdfform"}).then(function(e){t.downloadStatus=!e.isDownloaded})},t.$inject=["PFReportService","PayGroupsAndConfigurationService","PayrollLookUpService"],t}(t.IMonthlyReportController),p=function(e){function t(t,i,n,o,r,a){var s=e.call(this,r)||this;return s.pfReportService=t,s.appSettings=i,s.uiGridGroupingConstants=n,s.uiGridExtensions=o,s.PayrollLookUpService=a,s}return __extends(t,e),t.prototype.initializeLookups=function(){var e=this;this.PayrollLookUpService.getStatutoryPFInfo(this.payrollConfiguration.payGroupId).then(function(t){e.pfLookup=t,t.length>0&&(e.pfConfigurationId=t[0].id,e.reportDate=null,e.selectDefaultValue(),e.initGridSettings())})},t.prototype.changePFConfigurationId=function(){this.isPFConfigChanged=!0,this.getReportData(this.reportDate)},t.prototype.initGridSettings=function(){var e=this;this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.showColumnFooter=!0,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTooltip:!0,enableGrouping:!1},{field:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',enableGrouping:!1},{field:"pfNumber",displayName:"PF Number",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span data-ng-if='row.entity.pfNumber' title='{{row.entity.pfNumber}}'>{{row.entity.pfNumber}}</span><span data-ng-if='!row.entity.pfNumber' class=\"error\">Missing PF Number</span></div>",enableGrouping:!1},{field:"payDays",displayName:"Pay Days",enableGrouping:!1},{field:"arrearEmployeePFShare",displayName:"Employee PF Share",cellFilter:"currency:'':2",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"arrearEmployerPFShare",displayName:"Employer PF Share",cellFilter:"currency:'':2",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],this.gridOptions.appScopeProvider=this,this.gridOptions.enableHorizontalScrollbar=!0,this.gridOptions.rowHeight=50,this.gridOptions.onRegisterApi=this.onRegisterGridApi,this.gridOptions.data="ctrl.pfArrearData | filter : ctrl.filterText"},t.prototype.exportReport=function(e){this.pfReportService.exportArrearReport(this.payrollConfiguration.payGroupId,this.pfConfigurationId,{month:this.reportDate.getDateOnlyString(),format:e||"excel",searchKey:(this.filterText||"").trim()})},t.prototype.getReportData=function(e){var t=this;(this.selectReportDate(e)||this.isPFConfigChanged)&&void 0!=this.pfConfigurationId&&this.pfReportService.getArrearReport(this.payrollConfiguration.payGroupId,this.pfConfigurationId,{month:this.reportDate.getDateOnlyString()}).then(function(e){t.pfArrearData=e,t.queueGridRefresh()})},t.$inject=["PFReportService","AppSettings","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService","PayrollLookUpService"],t}(t.IMonthlyReportController),u=function(e){function t(t,i,n,o,r,a){var s=e.call(this,r)||this;return s.pfReportService=t,s.appSettings=i,s.uiGridGroupingConstants=n,s.uiGridExtensions=o,s.PayrollLookUpService=a,s}return __extends(t,e),t.prototype.initializeLookups=function(){var e=this;this.PayrollLookUpService.getStatutoryPFInfo(this.payrollConfiguration.payGroupId).then(function(t){e.pfLookup=t,t.length>0&&(e.pfConfigurationId=t[0].id,e.reportDate=null,e.selectDefaultValue(),e.initGridSettings())})},t.prototype.changePFConfigurationId=function(){this.isPFConfigChanged=!0,this.getReportData(this.reportDate)},t.prototype.initGridSettings=function(){var e=this;this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.showColumnFooter=!0,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTooltip:!0,enableGrouping:!1},{field:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',enableGrouping:!1},{field:"pfNumber",displayName:"PF Number",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span data-ng-if='row.entity.pfNumber' title='{{row.entity.pfNumber}}'>{{row.entity.pfNumber}}</span><span data-ng-if='!row.entity.pfNumber' class=\"error\">Missing PF Number</span></div>",enableGrouping:!1},{field:"edlisCharge",displayName:"EDLIS Charge (ER Share A/C 21)",cellFilter:"currency:'':2",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"edlisAdminCharge",displayName:"EDLI Admin Charges (A/C 22)",cellFilter:"currency:'':2",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"epfAdminCharge",displayName:"EPF Admin Charges (A/C 2)",cellFilter:"currency:'':2",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"totalAdminCharge",displayName:"Total Admin Charge",cellFilter:"currency:'':2",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],0==this.totalEDLIAdminCharges&&this.gridOptions.columnDefs.splice(4,1),this.gridOptions.appScopeProvider=this,this.gridOptions.enableHorizontalScrollbar=!0,this.gridOptions.rowHeight=50,this.gridOptions.onRegisterApi=this.onRegisterGridApi,this.gridOptions.data="ctrl.pfAdminChargesData | filter : ctrl.filterText"},t.prototype.exportReport=function(e){this.pfReportService.exportAdminChargesReport(this.payrollConfiguration.payGroupId,this.pfConfigurationId,{month:this.reportDate.getDateOnlyString(),format:e||"excel",searchKey:(this.filterText||"").trim()})},t.prototype.getReportData=function(e){var t=this;(this.selectReportDate(e)||this.isPFConfigChanged)&&void 0!=this.pfConfigurationId&&this.pfReportService.getAdminChargesReport(this.payrollConfiguration.payGroupId,this.pfConfigurationId,{month:this.reportDate.getDateOnlyString()}).then(function(e){t.pfAdminChargesData=e,t.totalEDLIAdminCharges=t.pfAdminChargesData.reduce(function(e,t){return e+t.edlisAdminCharge},0),t.initGridSettings(),t.queueGridRefresh()})},t.$inject=["PFReportService","AppSettings","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService","PayrollLookUpService"],t}(t.IMonthlyReportController),d=function(e){function t(t,i,n,o,r,a){var s=e.call(this,r)||this;return s.pfReportService=t,s.appSettings=i,s.uiGridGroupingConstants=n,s.uiGridExtensions=o,s.PayrollLookUpService=a,s}return __extends(t,e),t.prototype.initializeLookups=function(){var e=this;this.PayrollLookUpService.getStatutoryPFInfo(this.payrollConfiguration.payGroupId).then(function(t){e.pfLookup=t,t.length>0&&(e.pfConfigurationId=t[0].id,e.reportDate=null,e.selectDefaultValue(),e.initGridSettings())})},t.prototype.initGridSettings=function(){var e=this;this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.showColumnFooter=!0,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTooltip:!0,enableGrouping:!1},{field:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',enableGrouping:!1},{field:"locationName",displayName:"Location",groupingShowGroupingMenu:!1},{field:"pfNumber",displayName:"PF Number",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span data-ng-if='row.entity.pfNumber' title='{{row.entity.pfNumber}}'>{{row.entity.pfNumber}}</span><span data-ng-if='!row.entity.pfNumber' class=\"error\">Missing PF Number</span></div>",enableGrouping:!1},{field:"uan",displayName:"UAN Number",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span data-ng-if='row.entity.uan' title='{{row.entity.uan}}'>{{row.entity.uan}}</span><span data-ng-if='!row.entity.uan' class=\"error\">Missing UAN Number</span></div>",enableGrouping:!1},{field:"pfJoiningDate",displayName:"PF Date Joined",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.pfJoiningDate">{{row.entity.pfJoiningDate | date:\'mediumDate\'}}</span><span data-ng-if="!row.entity.pfJoiningDate"></span></div>',width:150,enableGrouping:!1},{field:"payDays",displayName:"Pay Days",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"employeePFShare",displayName:"Employee PF Share",cellFilter:"currency:'':2",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"employerPFShare",displayName:"Employer PF Share",cellFilter:"currency:'':2",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],this.gridOptions.appScopeProvider=this,this.gridOptions.enableHorizontalScrollbar=!0,this.gridOptions.rowHeight=50,this.gridOptions.onRegisterApi=this.onRegisterGridApi,this.gridOptions.data="ctrl.pfData | filter : ctrl.filterText"},t.prototype.exportReport=function(e){this.pfReportService.exportPFSummaryReport(this.payrollConfiguration.payGroupId,this.pfConfigurationId,{month:this.reportDate.getDateOnlyString(),format:e||"excel",searchKey:(this.filterText||"").trim()})},t.prototype.changePFConfigurationId=function(){this.isPFConfigChanged=!0,this.getReportData(this.reportDate)},t.prototype.getReportData=function(e){var t=this;(this.selectReportDate(e)||this.isPFConfigChanged)&&void 0!=this.pfConfigurationId&&this.pfReportService.getPFSummaryReport(this.payrollConfiguration.payGroupId,this.pfConfigurationId,{month:this.reportDate.getDateOnlyString()}).then(function(e){t.pfData=e,t.queueGridRefresh(),t.isPFConfigChanged=!1})},t.$inject=["PFReportService","AppSettings","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService","PayrollLookUpService"],t}(t.IMonthlyReportController),angular.module("payroll").controller("PFRemittanceReportController",i).controller("PFElectronicReturnController",n).controller("PFForm6AController",o).controller("MonthlyCombinedChallanController",r).controller("PFJoineeStatementController",a).controller("PFExitsStatementController",s).controller("PFForm12AController",l).controller("AadharSubmissionController",c).controller("PFArrearController",p).controller("PFAdminChargesController",u).controller("PFSummaryReportController",d)}(e.reports||(e.reports={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){var t,i,n,o,r;e.esiReports||(e.esiReports={}),t=function(e){function t(t,i,n,o,r,a){var s=e.call(this,r)||this;return s.esiReportService=t,s.appSettings=i,s.uiGridGroupingConstants=n,s.uiGridExtensions=o,s.PayrollLookUpService=a,s.initGridSettings(),s}return __extends(t,e),t.prototype.initializeLookups=function(){var e=this;this.PayrollLookUpService.getStatutoryESIInfo(this.payrollConfiguration.payGroupId).then(function(t){e.esiLookup=t,t.length>0&&(e.esiConfigurationId=t[0].id)})},t.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[{field:"insuranceNo",displayName:"Insurance No",enableGrouping:!1,cellTemplate:"<div class=\"ui-grid-cell-contents\"><span data-ng-if='row.entity.insuranceNo' title='{{row.entity.insuranceNo}}'>{{row.entity.insuranceNo}}</span><span data-ng-if='!row.entity.insuranceNo' class=\"error\">Missing Insurance No</span></div>"},{field:"employeeNumber",displayName:"Employee Number",enableGrouping:!1},{field:"locationName",displayName:"Location",groupingShowGroupingMenu:!1},{field:"nameOfInsuredPerson",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.payslips({id:row.entity.employeeId})" title="{{row.entity.nameOfInsuredPerson}}">{{row.entity.nameOfInsuredPerson}}</a></div>',enableGrouping:!1},{field:"employeeShare",displayName:"Employee Share",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"employerShare",displayName:"Employer Share",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"esiGross",displayName:"ESI Gross",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],this.gridSettings.rowHeight=50,this.gridSettings.data="ctrl.filteredEsiMonthlyData.employeesESIDetails | filter : ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},t.prototype.exportReport=function(e){this.esiReportService.exportESIStatementReport(this.payrollConfiguration.payGroupId,this.esiConfigurationId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel",searchKey:(this.filterText||"").trim()})},t.prototype.changeESIConfigurationId=function(){var e=this;this.filteredEsiMonthlyData.employeesESIDetails=this.esiMonthlyData.employeesESIDetails.filter(function(t){return t.esiConfigurationId==e.esiConfigurationId});var t=0,i=0,n=0;this.filteredEsiMonthlyData.employeesESIDetails.forEach(function(e){t+=e.esiGross,i+=e.employerShare,n+=e.employeeShare}),this.filteredEsiMonthlyData.totalESIGross=t,this.filteredEsiMonthlyData.totalEmployerShare=i,this.filteredEsiMonthlyData.totalEmployeeShare=n},t.prototype.getReportData=function(e){var t=this;this.selectReportDate(e)&&this.esiReportService.getESIStatementReport(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year).then(function(e){t.esiMonthlyData=e,t.filteredEsiMonthlyData=Object.assign([],e),t.changeESIConfigurationId(),t.queueGridRefresh()})},t.$inject=["ESIReportService","AppSettings","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService","PayrollLookUpService"],t}(e.IMonthlyReportController),i=function(e){function t(t,i,n,o,r,a){var s=e.call(this,r)||this;return s.esiReportService=t,s.appSettings=i,s.uiGridGroupingConstants=n,s.uiGridExtensions=o,s.PayrollLookUpService=a,s.initGridSettings(),s}return __extends(t,e),t.prototype.initializeLookups=function(){var e=this;this.PayrollLookUpService.getStatutoryESIInfo(this.payrollConfiguration.payGroupId).then(function(t){e.esiLookup=t,t.length>0&&(e.esiConfigurationId=t[0].id)})},t.prototype.changeESIConfigurationId=function(){var e=this;this.filteredEsiData=this.esiData.filter(function(t){return t.esiConfigurationId==e.esiConfigurationId})},t.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTooltip:!0,enableGrouping:!1},{field:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.payslips({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',enableGrouping:!1},{field:"locationName",displayName:"Location",groupingShowGroupingMenu:!1},{field:"esiNumber",displayName:"ESI Number",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span data-ng-if='row.entity.esiNumber' title='{{row.entity.esiNumber}}'>{{row.entity.esiNumber}}</span><span data-ng-if='!row.entity.esiNumber' class=\"error\">Missing ESI Number</span></div>",width:150,enableGrouping:!1},{field:"payDays",displayName:"Pay Days",enableGrouping:!1},{field:"employeeESIShare",displayName:"Employee ESI Share",cellFilter:"currency:'':2",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"employerESIShare",displayName:"Employer ESI Share",cellFilter:"currency:'':2",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],this.gridSettings.appScopeProvider=this,this.gridSettings.enableHorizontalScrollbar=!0,this.gridSettings.rowHeight=50,this.gridSettings.onRegisterApi=this.onRegisterGridApi,this.gridSettings.data="ctrl.filteredEsiData | filter : ctrl.filterText"},t.prototype.exportReport=function(e){this.esiReportService.exportESISummaryReport(this.payrollConfiguration.payGroupId,this.esiConfigurationId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel",searchKey:(this.filterText||"").trim()})},t.prototype.getReportData=function(e){var t=this;this.selectReportDate(e)&&this.esiReportService.getESISummaryReport(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year).then(function(e){t.esiData=e,t.filteredEsiData=e,t.changeESIConfigurationId(),t.queueGridRefresh()})},t.$inject=["ESIReportService","AppSettings","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService","PayrollLookUpService"],t}(e.IMonthlyReportController),n=function(t){function i(i,n,o,r,a,s){var l=t.call(this,a)||this;return l.esiReportService=i,l.appSettings=n,l.uiGridGroupingConstants=o,l.uiGridExtensions=r,l.PayrollLookUpService=s,l.initGridSettings(),l.reasons=e.model.ESIECRZeroWorkingDaysReason,l}return __extends(i,t),i.prototype.initializeLookups=function(){var e=this;this.PayrollLookUpService.getStatutoryESIInfo(this.payrollConfiguration.payGroupId).then(function(t){e.esiLookup=t,t.length>0&&(e.esiConfigurationId=t[0].id)})},i.prototype.changeESIConfigurationId=function(){var e=this;this.filteredEsiECR=this.esiECR.filter(function(t){return t.esiConfigurationId==e.esiConfigurationId})},i.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTooltip:!0,enableGrouping:!1},{field:"esiNumber",displayName:"IP Number",cellTooltip:!0,enableGrouping:!1,cellTemplate:"<div class=\"ui-grid-cell-contents\"><span data-ng-if='row.entity.esiNumber' title='{{row.entity.esiNumber}}'>{{row.entity.esiNumber}}</span><span data-ng-if='!row.entity.esiNumber' class=\"error\">Missing IP No</span></div>"},{field:"employeeName",displayName:"IP Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.payslips({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',enableGrouping:!1},{field:"payDays",displayName:"Pay Days",enableGrouping:!1},{field:"totalWages",displayName:"Total Monthly Wages",enableGrouping:!1,type:"number",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"reasonForZeroWorkingDays",displayName:"Reason Code for Zero Working Day",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.appScope.reasons[row.entity.reasonForZeroWorkingDays]}}</div>'},{field:"exitDate",displayName:"Last Working Day"}],this.gridSettings.appScopeProvider=this,this.gridSettings.enableHorizontalScrollbar=!0,this.gridSettings.rowHeight=50,this.gridSettings.onRegisterApi=this.onRegisterGridApi,this.gridSettings.data="ctrl.filteredEsiECR | filter : ctrl.filterText"},i.prototype.getReportData=function(e){var t=this;this.selectReportDate(e)&&this.esiReportService.getESIECR(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year).then(function(e){t.esiECR=e,t.filteredEsiECR=e,t.changeESIConfigurationId(),t.queueGridRefresh()})},i.prototype.exportReport=function(e){this.esiReportService.exportESIECRReport(this.payrollConfiguration.payGroupId,this.esiConfigurationId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"})},i.$inject=["ESIReportService","AppSettings","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService","PayrollLookUpService"],i}(e.IMonthlyReportController),o=function(e){function t(t,i,n,o,r,a,s){var l=e.call(this,a,n)||this;return l.esiReportService=t,l.appSettings=i,l.uiGridGroupingConstants=o,l.uiGridExtensions=r,l.PayrollLookUpService=s,l.initGridSettings(),l}return __extends(t,e),t.prototype.changeESIConfigurationId=function(){var e=this;this.filteredEsiOverridesData=this.esiOverridesData.filter(function(t){return t.esiConfigurationId==e.esiConfigurationId})},t.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.rowHeight=50,this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",enableGrouping:!1},{field:"fullName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay({id:row.entity.employeeId})" title="{{row.entity.fullName}}">{{row.entity.fullName}}</a></div>',cellTooltip:!0,headerCellTooltip:!0,enableGrouping:!1},{field:"locationName",displayName:"Location",groupingShowGroupingMenu:!1},{field:"grossSalary",displayName:"Monthly Gross Salary",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"monthlyRegularESI",displayName:"Employee Regular ESI",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"monthlyRegularESIEmployer",displayName:"Employer Regular ESI",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"employeeContribution",displayName:"Employee ESI Override",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"employerContribution",displayName:"Employer ESI Override",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"overrideRange",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.overrideRange.from | date: "MMM yyyy"}} to {{row.entity.overrideRange.to | date: "MMM yyyy"}}</div>',width:200,groupingShowAggregationMenu:!1},{field:"comment",displayName:"Comment",tooltip:!0,enableGrouping:!1}],this.gridSettings.onRegisterApi=this.onRegisterGridApi,this.gridSettings.data="ctrl.filteredEsiOverridesData | filter : ctrl.filterText"},t.prototype.getReportData=function(e){var t=this;this.selectFinancialYear(e)&&this.esiReportService.getESIOverridesReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear()).then(function(e){t.esiOverridesData=e,t.filteredEsiOverridesData=e,t.changeESIConfigurationId(),t.queueGridRefresh()},function(e){console.log("Error occurred while fetching ESI Override report")}),this.PayrollLookUpService.getStatutoryESIInfo(this.payrollConfiguration.payGroupId).then(function(e){t.esiLookup=e,e.length>0&&(t.esiConfigurationId=e[0].id)})},t.prototype.exportReport=function(e){this.esiReportService.exportESIOverridesReport(this.payrollConfiguration.payGroupId,this.esiConfigurationId,this.selectedFinancialYear.from.getFullYear(),{format:e||"excel",searchKey:(this.filterText||"").trim()})},t.$inject=["ESIReportService","AppSettings","PayrollModel","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService","PayrollLookUpService"],t}(e.IFYReportController),r=function(e){function t(t,i,n){var o=e.call(this,i)||this;return o.esiReportService=t,o.PayrollLookUpService=n,o}return __extends(t,e),t.prototype.initializeLookups=function(){var e=this;this.PayrollLookUpService.getStatutoryESIInfo(this.payrollConfiguration.payGroupId).then(function(t){e.esiLookup=t,t.length>0&&(e.esiConfigurationId=t[0].id)})},t.prototype.initGridSettings=function(){},t.prototype.getReportData=function(e){this.selectReportDate(e)},t.prototype.exportReport=function(e){var t=this;this.esiReportService.exportForm5Report(this.payrollConfiguration.payGroupId,this.esiConfigurationId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"}).then(function(e){t.downloadStatus=!e.isDownloaded})},t.$inject=["ESIReportService","PayGroupsAndConfigurationService","PayrollLookUpService"],t}(e.IMonthlyReportController),angular.module("payroll").controller("MonthlyEsiStatementController",t).controller("ESIMonthlySummaryController",i).controller("ESIReturnController",n).controller("EsiOverrideReportController",o).controller("ESIContributionController",r)}(e.reports||(e.reports={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){var t,i,n;e.ptReports||(e.ptReports={}),t=function(e){function t(t,i,n,o,r,a){var s=e.call(this,a)||this;return s.ptReportService=t,s.appSettings=i,s.lookupServices=n,s.uiGridGroupingConstants=o,s.uiGridExtensions=r,s.stateLookUp={},s.PTSettingsUrl=s.configService.hasPayGroupFeature?"settings.payroll.paygroup.details.getStarted.salarycomponentsandstructures({ groupId: ctrl.selectedPayGroup.id })":"settings.payroll.getStarted.salarycomponentsandstructures",s.lookupServices.lookup.query({id:"states"}).$promise.then(function(e){e.forEach(function(e,t){"IN"==e.countryCode&&(s.stateLookUp[e.code]=e)})}),s.initGridSettings(),s}return __extends(t,e),t.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.incometax({id:row.entity.employeeId})" title="{{row.entity.employeeNumber}}">{{row.entity.employeeNumber}}</a></div>',enableGrouping:!1},{field:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.incometax({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',enableGrouping:!1},{field:"locationName",displayName:"Location",groupingShowGroupingMenu:!1},{field:"ptGross",displayName:"PT Gross",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"taxAmount",displayName:"Tax Amount",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{name:"stateCode",displayName:"State",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.appScope.ctrl.stateLookUp[row.entity.professionalTaxAddress.stateCode].name}}</div>',enableGrouping:!1}],this.gridSettings.data="ctrl.employeePTData | filter: ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},t.prototype.exportReport=function(e){this.ptReportService.exportPTStatementReport(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel",searchKey:(this.filterText||"").trim()})},t.prototype.getReportData=function(e){var t=this;this.selectReportDate(e)&&this.payrollConfiguration.isPTComponentEnable()&&this.ptReportService.getPTStatementReport(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year).then(function(e){t.ptMonthlyData=e,t.employeePTData=[],Object.keys(e.ptStateWise).forEach(function(i,n){t.employeePTData=t.employeePTData.concat(e.ptStateWise[i].employeePTDetails)}),t.queueGridRefresh()})},t.$inject=["PTReportService","AppSettings","LookupServices","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],t}(e.IMonthlyReportController),i=function(e){function t(t,i,n,o,r,a){var s=e.call(this,a)||this;return s.ptReportService=t,s.appSettings=i,s.lookupServices=n,s.uiGridGroupingConstants=o,s.uiGridExtensions=r,s.stateLookUp={},s.configService.hasPayGroupFeature?(s.PTSettingsUrl="settings.payroll.paygroup.details.getStarted.salarycomponentsandstructures({ groupId: ctrl.selectedPayGroup.id })",s.statutorySettingsUrl="settings.payroll.paygroup.details.getStarted.statutoryfilinginfo({ groupId: ctrl.selectedPayGroup.id })"):(s.PTSettingsUrl="settings.payroll.getStarted.salarycomponentsandstructures",s.statutorySettingsUrl="settings.payroll.getStarted.statutoryfilinginfo({ groupId: ctrl.selectedPayGroup.id })"),s.lookupServices.lookup.query({id:"states"}).$promise.then(function(e){e.forEach(function(e,t){"IN"==e.countryCode&&(s.stateLookUp[e.code]=e)})}),s.initGridSettings(),s}return __extends(t,e),t.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[{field:"state",displayName:"State",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.groupHeader">{{grid.appScope.stateLookUp[row.entity.state].name}}</div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{COL_FIELD}}</div>',groupingShowAggregationMenu:!1,customTreeAggregationFinalizerFn:function(t){t.rendered=e.stateLookUp[t.groupVal].name+" ("+t.value+")"}},{field:"totalEmployees",displayName:"Total Employees",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"totalGrossAmount",displayName:"Total Gross Amount",cellFilter:"currency:'':2",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"totalTaxAmount",displayName:"Total Tax Amount",cellFilter:"currency:'':2",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{name:"action",displayName:"Action",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span class= 'horizontal-margin-sm'><a class='btn-lnk clear-left-padding' data-ng-click='grid.appScope.getStateReport(row.entity.state, \"pdfform\")'>PDF</a></span><span class= 'horizontal-margin-sm'><a class='btn-lnk clear-left-padding' data-ng-click='grid.appScope.getStateReport(row.entity.state, \"excel\")'>Excel</a></span><span class= 'horizontal-margin-sm'><a class='btn-lnk clear-left-padding' data-ng-click='grid.appScope.getForm5(row.entity.state)'>Form-5</a></span></div>",enableGrouping:!1}],this.gridSettings.appScopeProvider=this,this.gridSettings.enableHorizontalScrollbar=!0,this.gridSettings.rowHeight=50,this.gridSettings.onRegisterApi=this.onRegisterGridApi,this.gridSettings.data="ctrl.ptStateSummaryData | filter: ctrl.filterText"},t.prototype.exportReport=function(e){this.ptReportService.exportPTStateWiseReport(this.payrollConfiguration.payGroupId,{year:this.reportDate.year,month:this.reportDate.month,format:e||"excel",searchKey:(this.filterText||"").trim()})},t.prototype.getReportData=function(e){var t=this;this.selectReportDate(e)&&this.payrollConfiguration.isPTComponentEnable()&&this.ptReportService.getPTStateWiseSummary(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year).then(function(e){t.ptStateSummaryData=e,t.isProfessionalTaxInfoNotAvaliable=!1,t.queueGridRefresh()})},t.prototype.getStateReport=function(e,t){this.reportDate&&this.ptReportService.exportPTSummaryReport(this.payrollConfiguration.payGroupId,{year:this.reportDate.year,month:this.reportDate.month,state:e,format:t})},t.prototype.getForm5=function(e){var t=this;this.reportDate&&this.payrollConfiguration.isPTComponentEnable()&&this.ptReportService.exportPTForm5Report(this.payrollConfiguration.payGroupId,{year:this.reportDate.year,month:this.reportDate.month,state:e,format:"pdfform"}).then(function(e){e.isDownloaded||(t.isProfessionalTaxInfoNotAvaliable=!0)})},t.$inject=["PTReportService","AppSettings","LookupServices","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],t}(e.IMonthlyReportController),n=function(e){function t(t,i,n,o,r,a){var s=e.call(this,a,n)||this;return s.incomeTaxReportService=t,s.appSettings=i,s.uiGridGroupingConstants=o,s.uiGridExtensions=r,s.PTSettingsUrl=s.configService.hasPayGroupFeature?"settings.payroll.paygroup.details.getStarted.salarycomponentsandstructures({ groupId: ctrl.selectedPayGroup.id })":"settings.payroll.getStarted.salarycomponentsandstructures",s.initGridSettings(),s}return __extends(t,e),t.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.rowHeight=50,this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",enableGrouping:!1},{field:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.incometax({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',cellTooltip:!0,headerCellTooltip:!0,enableGrouping:!1},{field:"locationName",displayName:"Location",groupingShowGroupingMenu:!1},{field:"grossSalary",displayName:"Gross Salary",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"monthlyRegularPT",displayName:"Regular PT",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"amount",displayName:"PT Override",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"overrideRange",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.overrideRange.from | date: "MMM yyyy"}} to {{row.entity.overrideRange.to | date: "MMM yyyy"}}</div>',width:200,groupingShowAggregationMenu:!1},{field:"comment",displayName:"Comment",tooltip:!0,enableGrouping:!1}],this.gridSettings.onRegisterApi=this.onRegisterGridApi,this.gridSettings.data="ctrl.ptOverridesData | filter : ctrl.filterText"},t.prototype.getReportData=function(e){var t=this;this.selectFinancialYear(e)&&this.payrollConfiguration.isPTComponentEnable()&&this.incomeTaxReportService.getPTOverridesReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear()).then(function(e){t.ptOverridesData=e,t.queueGridRefresh()},function(e){console.log("Error occurred while fetch income tax annual report")})},t.prototype.exportReport=function(e){this.incomeTaxReportService.exportPTOverridesReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear(),{format:e||"excel",searchKey:(this.filterText||"").trim()})},t.$inject=["PTReportService","AppSettings","PayrollModel","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],t}(e.IFYReportController),angular.module("payroll").controller("PTStateSummaryController",i).controller("PTMonthlySatementController",t).controller("PtOverridesReportController",n)}(e.reports||(e.reports={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){var t,i,n,o,r;e.otherReports||(e.otherReports={}),t=function(){function e(e,t,i,n,o){var r=this;this.payrollLookUpService=e,this.payrollModel=t,this.modal=i,this.appContext=n,this.payrollLoanService=o,n.hasPrivilege(["PAYROLL.MANAGE"])&&this.payrollLoanService.getDoesLoanEnabled().then(function(e){r.isLoanEnable=e.isLoanEnabled||e.hasClearedLoans}),this.payrollLookUpService.getAllSalaryComponents().then(function(e){r.reimbursableComponents=e.filter(function(e){return e.headType==r.payrollModel.SalaryComponentTypes.reimbursable||e.headType==r.payrollModel.SalaryComponentTypes.reimbursement})})}return e.$inject=["PayrollLookUpService","PayrollModel","$uibModal","AppContext","PayrollLoanService"],e}(),i=function(e){function t(t,i,n,o,r,a){var s=e.call(this,a,n)||this;return s.otherReportsService=t,s.appSettings=i,s.uiGridGroupingConstants=o,s.uiGridExtensions=r,s.initGridSettings(),s}return __extends(t,e),t.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[{name:"Employee Number",field:"employeeNumber",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.managetax.declaration({id:row.entity.employeeId})" title="{{row.entity.employeeNumber}}">{{row.entity.employeeNumber}}</a></div>',enableGrouping:!1},{name:"Employee Name",field:"employeeName",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.managetax.declaration({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',cellTooltip:!0,enableGrouping:!1},{name:"Perquisite",field:"title",groupingShowAggregationMenu:!1},{name:"Perquisite Type",field:"benefitType",groupingShowAggregationMenu:!1},{name:"Amount",field:"amount",cellClass:"ui-grid-cell",cellFilter:"currency:'':2",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{name:"Taxable Amount",field:"taxAmount",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],this.gridSettings.data="reportCtrl.employeesPerks | filter : reportCtrl.filterText",this.gridSettings.appScopeProvider=this,this.gridSettings.enableHorizontalScrollbar=!0,this.gridSettings.onRegisterApi=this.onRegisterGridApi,this.gridSettings.rowHeight=50},t.prototype.getReportData=function(e){var t=this;this.selectFinancialYear(e)&&this.otherReportsService.getEmployeeBenefitsReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear()).then(function(e){t.employeesPerks=e,t.queueGridRefresh()},function(e){console.log("Error occurred while fetch declaration summary report")})},t.prototype.exportReport=function(e){this.otherReportsService.exportEmployeeBenefitsReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear(),{format:e||"excel",searchKey:(this.filterText||"").trim()})},t.$inject=["OtherReportsService","AppSettings","PayrollModel","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],t}(e.IFYReportController),n=function(t){function i(i,n,o,r){var a=t.call(this,e.model.PayrollReportType.None)||this;return a.otherReportsService=i,a.appSettings=n,a.financeModel=o,a.salaryPaymentMode=r,a.otherReportsService.getFinancialDetailsReport().then(function(e){a.financialDetails=e.map(function(e){return new a.financeModel.Employee(e)})}),a.initGridSettings(),a}return __extends(i,t),i.prototype.initGridSettings=function(){this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!1,this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.preferences({id:row.entity.id})" title="{{row.entity.employeeNumber}}">{{row.entity.employeeNumber}}</a></div>',enablePinning:!0,pinnedLeft:!0,width:150,cellTooltip:!0,enableGrouping:!1},{field:"displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.preferences({id:row.entity.id})" title="{{row.entity.diaplayName}}">{{row.entity.displayName}}</a></div>',enablePinning:!0,pinnedLeft:!0,width:150,cellTooltip:!0,enableGrouping:!1},{field:"bankDetails.salaryPaymentMode",name:"bankDetails",displayName:"Payment Mode",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span data-ng-if='row.entity.bankDetails.salaryPaymentMode'>{{grid.appScope.salaryPaymentMode.getById(row.entity.bankDetails.salaryPaymentMode).title}}</span><span data-ng-if='!row.entity.bankDetails.salaryPaymentMode' class=\"error\">Missing Payment mode</span></div>",enablePinning:!0,pinnedLeft:!0,width:150,groupingShowAggregationMenu:!1},{field:"bankDetails.bankName",name:"bank",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span data-ng-if='row.entity.bankDetails.bankName' title='{{row.entity.bankDetails.bankName}}'>{{row.entity.bankDetails.bankName}}</span><span data-ng-if='!row.entity.bankDetails.validState && !row.entity.bankDetails.bankName' class=\"error\">Missing Bank Information</span></div>",enablePinning:!0,pinnedLeft:!0,width:200,groupingShowAggregationMenu:!1},{field:"bankDetails.accountNumber",name:"account",displayName:"Account Number",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.bankDetails.accountNumber" title=\'{{row.entity.bankDetails.accountNumber}}\'>{{row.entity.bankDetails.accountNumber}}</span><span data-ng-if="!row.entity.bankDetails.validState && !row.entity.bankDetails.accountNumber" class="error">Missing Account Number</span></div>',width:200,enableGrouping:!1},{field:"bankDetails.nameOnTheAccount",name:"nameOnTheAccount",displayName:"Name on the account",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.bankDetails.nameOnTheAccount" title=\'{{row.entity.bankDetails.nameOnTheAccount}}\'>{{row.entity.bankDetails.nameOnTheAccount}}</span><span data-ng-if="!row.entity.bankDetails.validState && !row.entity.bankDetails.nameOnTheAccount" class="error">Missing name on the acccount</span></div>',width:200,enableGrouping:!1},{field:"bankDetails.ifscCode",name:"ifscCode",displayName:"IFSC Code",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span data-ng-if='row.entity.bankDetails.ifscCode' title='{{row.entity.bankDetails.ifscCode}}'>{{row.entity.bankDetails.ifscCode}}</span><span data-ng-if='!row.entity.bankDetails.validState && !row.entity.bankDetails.ifscCode' class=\"error\">Missing IFSC</span></div>",width:150,groupingShowAggregationMenu:!1},{field:"pan.panNotApplicable",displayName:"PAN Available",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span data-ng-if='row.entity.pan.panNotApplicable'>No</span><span data-ng-if='!row.entity.pan.panNotApplicable'>Yes</span></div></div>",width:150,enableGrouping:!1},{field:"pan.panNumber",name:"panNumber",displayName:"PAN Number",cellTemplate:"<div class=\"ui-grid-cell-contents\"><div data-ng-if='!row.entity.pan.panNotApplicable'><span data-ng-if='row.entity.pan.panNumber'>{{row.entity.pan.panNumber}}</span><span data-ng-if='!row.entity.pan.panNumber' class=\"error\">Missing PAN Number</span></div></div>",width:150,enableGrouping:!1},{field:"pan.dateOfBirth",name:"pandateOfBirth",displayName:"Date Of Birth",cellTemplate:'<div class="ui-grid-cell-contents"><div data-ng-if=\'!row.entity.pan.panNotApplicable\'><span data-ng-if="row.entity.pan.dateOfBirth">{{row.entity.pan.dateOfBirth | date:\'mediumDate\'}}</span><span data-ng-if="!row.entity.pan.dateOfBirth"></span></div></div>',width:150,groupingShowAggregationMenu:!1},{field:"pan.nameOnPanCard",name:"nameOnPanCard",displayName:"Name on PAN Card",cellTemplate:"<div class=\"ui-grid-cell-contents\"><div data-ng-if='!row.entity.pan.panNotApplicable'><span data-ng-if='row.entity.pan.nameOnPanCard'>{{row.entity.pan.nameOnPanCard}}</span><span data-ng-if='!row.entity.pan.nameOnPanCard' class=\"error\">Missing Name</span></div></div>",width:200,enableGrouping:!1},{field:"pan.fatherName",name:"fatherName",displayName:"Father's Name",cellTemplate:"<div class=\"ui-grid-cell-contents\"><div data-ng-if='!row.entity.pan.panNotApplicable'><span data-ng-if='row.entity.pan.fatherName'>{{row.entity.pan.fatherName}}</span><span data-ng-if='!row.entity.pan.fatherName' class=\"error\">Missing Father's Name</span></div></div>",width:200,enableGrouping:!1},{field:"pf.isPFNotAvailable",displayName:"PF Details Available",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span data-ng-if='row.entity.pf.isPFNotAvailable'>No</span><span data-ng-if='!row.entity.pf.isPFNotAvailable'>Yes</span></div></div>",width:200,enableGrouping:!1},{field:"pf.pfNumber",name:"pfNumber",displayName:"PF Number",cellTemplate:"<div class=\"ui-grid-cell-contents\"><div data-ng-if='!row.entity.pf.isPFNotAvailable'><span data-ng-if='row.entity.pf.pfNumber'>{{row.entity.pf.pfNumber}}</span><span data-ng-if='!row.entity.pf.pfNumber' class=\"error\">Missing PF Number</span></div></div>",width:150,enableGrouping:!1},{field:"pf.joinDate",name:"joinDate",displayName:"PF Date Joined",cellTemplate:'<div class="ui-grid-cell-contents"><div data-ng-if=\'!row.entity.pf.isPFNotAvailable\'><span data-ng-if="row.entity.pf.joinDate">{{row.entity.pf.joinDate | date:\'mediumDate\'}}</span><span data-ng-if="!row.entity.pf.joinDate"></span></div></div>',width:150,groupingShowAggregationMenu:!1},{field:"pf.nameOnTheAccount",name:"nameOnPfAccount",displayName:"PF Account Name",cellTemplate:"<div class=\"ui-grid-cell-contents\"><div data-ng-if='!row.entity.pf.isPFNotAvailable'><span data-ng-if='row.entity.pf.pfNumber'><span data-ng-if='row.entity.pf.nameOnTheAccount'>{{row.entity.pf.nameOnTheAccount}}</span><span data-ng-if='!row.entity.pf.nameOnTheAccount'></span></div></div>",width:200,enableGrouping:!1},{field:"pf.uan",name:"uan",displayName:"UAN",cellTemplate:"<div class=\"ui-grid-cell-contents\"><div data-ng-if='!row.entity.pf.isPFNotAvailable'><span data-ng-if='row.entity.pf.pfNumber'><span data-ng-if='row.entity.pf.uan'>{{row.entity.pf.uan}}</span><span data-ng-if='!row.entity.pf.uan' class=\"error\">Missing UAN</span></div></div>",width:200,enableGrouping:!1},{field:"esi.isESIEligible",displayName:"ESI Eligible",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{ row.entity.esi.isESIEligible ? 'Yes' : 'No' }}</span></div>",width:200,enableGrouping:!1},{field:"esi.esiNumber",name:"esiNumber",displayName:"ESI Number",cellTemplate:"<div class=\"ui-grid-cell-contents\"><div data-ng-if='row.entity.esi.isESIEligible'><span data-ng-if='row.entity.esi.esiNumber'>{{row.entity.esi.esiNumber}}</span><span data-ng-if='!row.entity.esi.esiNumber' class=\"error\">Missing ESI Number</span></div></div>",width:150,enableGrouping:!1},{field:"adharDetails.name",name:"nameOnAadhaar",displayName:"Name on Aadhaar",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span data-ng-if='row.entity.aadhaar.name' title='{{row.entity.aadhaar.name}}'>{{row.entity.aadhaar.name}}</span><span data-ng-if='!row.entity.aadhaar.name' class=\"error\">Missing Name on Aadhaar</span></div>",width:150,enableGrouping:!1},{field:"adharDetails.aadhaarNumber",name:"aadhaarNumber",displayName:"Aadhaar Number",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span data-ng-if='row.entity.aadhaar.aadhaarNumber' title='{{row.entity.aadhaar.aadhaarNumber}}'>{{row.entity.aadhaar.aadhaarNumber}}</span><span data-ng-if='!row.entity.aadhaar.aadhaarNumber' class=\"error\">Missing Aadhaar Number</span></div>",width:150,enableGrouping:!1},{field:"adharDetails.enrollmentNumber",name:"enrollmentNumber",displayName:"Enrollment Number",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span data-ng-if='row.entity.aadhaar.enrollmentNumber' title='{{row.entity.aadhaar.enrollmentNumber}}'>{{row.entity.aadhaar.enrollmentNumber}}</span><span data-ng-if='!row.entity.aadhaar.enrollmentNumber' class=\"error\">Missing Enrollment Number</span></div>",width:150,enableGrouping:!1}],this.gridSettings.data="reportCtrl.financialDetails | filter : reportCtrl.filterText",this.gridSettings.appScopeProvider=this,this.gridSettings.enableHorizontalScrollbar=!0,this.gridSettings.columnVirtualizationThreshold=100,this.gridSettings.onRegisterApi=this.onRegisterGridApi,this.gridSettings.rowHeight=50,this.gridSettings.onRegisterApi=this.onRegisterGridApi},i.prototype.exportReport=function(e){this.otherReportsService.exportFinancialDetailsReport({format:"excel",searchKey:(this.filterText||"").trim()})},i.$inject=["OtherReportsService","AppSettings","FinanceModel","SalaryPaymentMode","PayGroupsAndConfigurationService"],i}(e.IReportController),o=function(e){function t(t,i,n,o,r,a,s){var l=e.call(this,s)||this;return l.stateParams=t,l.payrollLookUpService=i,l.otherReportsService=n,l.appSettings=o,l.uiGridGroupingConstants=r,l.uiGridExtensions=a,l.initGridSettings(),l.payrollLookUpService.getAllSalaryComponents().then(function(e){l.componentTitle=e.find(function(e){return e.name==l.stateParams.componentName}).title}),l}return __extends(t,e),t.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTooltip:!0},{field:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.payslips({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',cellClass:"ui-grid-cell emp-name",enableGrouping:!1},{field:"accumulatedAmountForMonth",headerCellTemplate:'<div ng-class="{ \'sortable\': sortable }"><div class="ui-grid-cell-contents" col-index="renderIndex"><span class="ui-grid-header-cell-label"> Accumulated Amount in {{grid.appScope.reportDate.monthFullName}}</span><span ui-grid-visible="col.sort.direction" ng-class="{ \'ui-grid-icon-up-dir\': col.sort.direction == asc, \'ui-grid-icon-down-dir\': col.sort.direction == desc, \'ui-grid-icon-blank\': !col.sort.direction }"></span><div role="button" tabindex="0" ui-grid-one-bind-id-grid="col.uid + \'-menu-button\'" class="ui-grid-column-menu-button inline-block ng-scope" ng-if="grid.options.enableColumnMenus && !col.isRowHeader && col.colDef.enableColumnMenu !== false" ng-click="toggleMenu($event)" ng-class="{\'ui-grid-column-menu-button-last-col\': isLastCol}" ui-grid-one-bind-aria-label="i18n.headerCell.aria.columnMenuButtonLabel" aria-haspopup="true" aria-label="Column Menu"><i class="ui-grid-icon-angle-down" aria-hidden="true"></i></div></div></div></div></div>',cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"reimbursedAmountForMonth",headerCellTemplate:'<div ng-class="{ \'sortable\': sortable }"><div class="ui-grid-cell-contents" col-index="renderIndex"><span class="ui-grid-header-cell-label">Paid Amount in {{grid.appScope.reportDate.monthFullName}}</span><span ui-grid-visible="col.sort.direction" ng-class="{ \'ui-grid-icon-up-dir\': col.sort.direction == asc, \'ui-grid-icon-down-dir\': col.sort.direction == desc, \'ui-grid-icon-blank\': !col.sort.direction }"></span><div role="button" tabindex="0" ui-grid-one-bind-id-grid="col.uid + \'-menu-button\'" class="ui-grid-column-menu-button inline-block ng-scope" ng-if="grid.options.enableColumnMenus && !col.isRowHeader && col.colDef.enableColumnMenu !== false" ng-click="toggleMenu($event)" ng-class="{\'ui-grid-column-menu-button-last-col\': isLastCol}" ui-grid-one-bind-aria-label="i18n.headerCell.aria.columnMenuButtonLabel" aria-haspopup="true" aria-label="Column Menu"><i class="ui-grid-icon-angle-down" aria-hidden="true"></i></div></div></div>',cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"pendingClaim",headerCellTemplate:'<div ng-class="{ \'sortable\': sortable }"><div class="ui-grid-cell-contents" col-index="renderIndex"><span class="ui-grid-header-cell-label">Pending Claim Amount in {{grid.appScope.reportDate.monthFullName}}</span><span ui-grid-visible="col.sort.direction" ng-class="{ \'ui-grid-icon-up-dir\': col.sort.direction == asc, \'ui-grid-icon-down-dir\': col.sort.direction == desc, \'ui-grid-icon-blank\': !col.sort.direction }"></span><div role="button" tabindex="0" ui-grid-one-bind-id-grid="col.uid + \'-menu-button\'" class="ui-grid-column-menu-button inline-block ng-scope" ng-if="grid.options.enableColumnMenus && !col.isRowHeader && col.colDef.enableColumnMenu !== false" ng-click="toggleMenu($event)" ng-class="{\'ui-grid-column-menu-button-last-col\': isLastCol}" ui-grid-one-bind-aria-label="i18n.headerCell.aria.columnMenuButtonLabel" aria-haspopup="true" aria-label="Column Menu"><i class="ui-grid-icon-angle-down" aria-hidden="true"></i></div></div></div>',cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],this.gridSettings.appScopeProvider=this,this.gridSettings.enableHorizontalScrollbar=!0,this.gridSettings.showColumnFooter=!0,this.gridSettings.rowHeight=50,this.gridSettings.onRegisterApi=this.onRegisterGridApi,this.gridSettings.data="ctrl.reimbursementData | filter : ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},t.prototype.exportReport=function(e){null!=this.reimbursableComponent&&this.otherReportsService.exportMonthlyReimbursementReport(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel",componentName:this.stateParams.componentName,searchKey:(this.filterText||"").trim()})},t.prototype.getReportData=function(e){var t=this;this.reimbursableComponent=this.payrollConfiguration.getSupportedComponent(this.stateParams.componentName),null!=this.reimbursableComponent&&this.selectReportDate(e)&&this.otherReportsService.getMonthlyReimbursementReport(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,componentName:this.stateParams.componentName}).then(function(e){t.reimbursementData=e,t.queueGridRefresh()})},t.$inject=["$stateParams","PayrollLookUpService","OtherReportsService","AppSettings","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],t}(e.IMonthlyReportController),r=function(e){function t(t,i,n,o,r,a,s,l){var c=e.call(this,l,r)||this;return c.stateParams=t,c.payrollLookUpService=i,c.otherReportsService=n,c.appSettings=o,c.uiGridGroupingConstants=a,c.uiGridExtensions=s,c.initGridSettings(),c.payrollLookUpService.getAllSalaryComponents().then(function(e){c.componentTitle=e.find(function(e){return e.name==c.stateParams.componentName}).title}),c}return __extends(t,e),t.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTooltip:!0},{field:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.payslips({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',cellClass:"ui-grid-cell emp-name",enableGrouping:!1},{field:"pan",displayName:"PAN NUMBER",customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"department",displayName:"Department",cellTooltip:!0,groupingShowGroupingMenu:!1},{field:"totalAccrued",displayName:"Total Accrued",cellFilter:"currency:'':2",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"claimedAmount",displayName:"Claimed Amount",cellFilter:"currency:'':2",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"paidAmount",displayName:"Paid Amount",cellFilter:"currency:'':2",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"remainingBalance",displayName:"Remaining Balance",cellFilter:"currency:'':2",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],this.gridSettings.appScopeProvider=this,this.gridSettings.enableHorizontalScrollbar=!0,this.gridSettings.showColumnFooter=!0,this.gridSettings.rowHeight=50,this.gridSettings.onRegisterApi=this.onRegisterGridApi,this.gridSettings.data="ctrl.reimbursementData | filter : ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},t.prototype.exportReport=function(e){null!=this.reimbursableComponent&&this.otherReportsService.exportAnuallyReimbursementReport(this.payrollConfiguration.payGroupId,{year:this.selectedFinancialYear.from.getFullYear(),format:e||"excel",componentName:this.stateParams.componentName,searchKey:(this.filterText||"").trim()})},t.prototype.getReportData=function(e){var t=this;this.reimbursableComponent=this.payrollConfiguration.getSupportedComponent(this.stateParams.componentName),null!=this.reimbursableComponent&&this.selectFinancialYear(e)&&this.otherReportsService.getAnuallyReimbursementReport(this.payrollConfiguration.payGroupId,{year:this.selectedFinancialYear.from.getFullYear(),componentName:this.stateParams.componentName}).then(function(e){t.reimbursementData=e,t.queueGridRefresh()})},t.$inject=["$stateParams","PayrollLookUpService","OtherReportsService","AppSettings","PayrollModel","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],t}(e.IFYReportController),angular.module("payroll").controller("EmployeeBenefitsReportController",i).controller("EmployeeFinancialReportController",n).controller("MonthlyReimbursementReportController",o).controller("ReportDashboardController",t).controller("AnnuallyReimbursementReportController",r)}(e.reports||(e.reports={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(t){var i,n,o,r,a,s;t.employeeSalaryReports||(t.employeeSalaryReports={}),i=function(i){function n(n,o,r,a,s,l,c){var p=i.call(this,t.model.PayrollReportType.None)||this;return p.employeeSalaryReportService=n,p.appSettings=o,p.workerType=r,p.uiGridGroupingConstants=a,p.uiGridExtensions=s,p.employmentStatus=l,p.payrollLookUpService=c,p.remunerationTypes=[],p.remunerationType=e.Configuration.Model.RemunerationType,p.payrollLookUpService.getRemunerationTypes().then(function(t){p.remunerationTypes=t.map(function(t){return new e.Configuration.Model.RemunerationLookup(t)}),p.selectedRemuneration=p.remunerationTypes[0]}),p.employeeSalaryReportService.getAnnualSalaryReport().then(function(e){p.employeesCTCDetails=e.map(function(e){return e.workerType=p.workerType.getById(e.workerType).name,e.employmentStatus=p.employmentStatus.getById(e.employmentStatus).name,e}),p.initGridSettings()}),p}return __extends(n,i),n.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[{name:"employeeNumber",displayName:"Employee Number",cellClass:"ui-grid-cell",enableGrouping:!1},{name:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.payslips({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',cellClass:"ui-grid-cell emp-name",enableGrouping:!1},{name:"workerType",displayName:"Worker Type",cellClass:"ui-grid-cell",groupingShowAggregationMenu:!1},{name:"employmentStatus",displayName:"Employment Status",enablePinning:!0,cellClass:"ui-grid-cell",groupingShowAggregationMenu:!1},{name:"structureName",displayName:"Structure Name",cellClass:"ui-grid-cell",groupingShowAggregationMenu:!1},{name:"ctcAmount",displayName:"Salary",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.groupHeader"><span data-ng-if=\'row.entity.ctcAmount\' title= \'{{row.entity.ctcAmount | currency:"":2 }}\'>{{row.entity.ctcAmount | currency:\'\':2 }}</span><span data-ng-if=\'!row.entity.ctcAmount\' class="error">No Salary Found.</span></div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{COL_FIELD}}</div>',treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{name:"revisionEffectiveFrom",displayName:"Revision Effective From",cellClass:"ui-grid-cell emp-name",type:"date",cellFilter:'yyyymmddToDate:"mediumDate"',groupingShowAggregationMenu:!1},{name:"effectiveFrom",displayName:"Last Updated on",groupingShowAggregationMenu:!1}],this.gridSettings.data="ctrl.employeesCTCDetails | filter : ctrl.filterText | filter : {employmentStatus : (ctrl.filterEmploymentStatus || '')} | filter : {remunerationType : (ctrl.selectedRemuneration.type || 0)}",this.gridSettings.appScopeProvider=this,this.gridSettings.rowHeight=50,this.gridSettings.enableHorizontalScrollbar=!0,this.gridSettings.onRegisterApi=this.onRegisterGridApi},n.prototype.exportReport=function(e){this.employeeSalaryReportService.exportAnnualSalaryReport({format:"excel",searchKey:(this.filterText||"").trim()})},n.$inject=["EmployeeSalaryReportService","AppSettings","WorkerType","uiGridGroupingConstants","UiGridExtensions","EmploymentStatus","PayrollLookUpService"],n}(t.IReportController),n=function(i){function n(n,o,r,a,s,l,c){var p=i.call(this,t.model.PayrollReportType.None)||this;return p.employeeSalaryReportService=n,p.appSettings=o,p.workerType=r,p.uiGridGroupingConstants=a,p.uiGridExtensions=s,p.employmentStatus=l,p.payrollLookUpService=c,p.earningsColumns={},p.contributionsColumns={},p.deductionsColumns={},p.benefitsColumns={},p.remunerationTypes=[],p.remunerationType=e.Configuration.Model.RemunerationType,p.employeesSalaryDetails=[],p.isMonthView=!1,p.getAmount=function(e){if(e)return p.isMonthView&&p.selectedRemuneration.type==p.remunerationType.monthly?Number((e/12).toFixed(2)):e},p.payrollLookUpService.getRemunerationTypes().then(function(t){p.remunerationTypes=t.map(function(t){return new e.Configuration.Model.RemunerationLookup(t)}),p.selectedRemuneration=p.remunerationTypes[0]}),p.getData(),p}return __extends(n,i),n.prototype.getData=function(){var e=this;this.employeeSalaryReportService.getCurrentSalaryDetails().then(function(t){e.employeesSalaryDetails=t.map(function(t){return t.workerType=e.workerType.getById(t.workerType).name,t.employeeId=t.structure.employeeId,t.employmentStatus=e.employmentStatus.getById(t.employmentStatus).name,e.mapCurrentSalaryGridRow(t)}),e.initGridSettings()})},n.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[{name:"employeeNumber",displayName:"Employee Number",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name",enableColumnResizing:!1,width:150,enableGrouping:!1},{name:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name",enableColumnResizing:!1,width:150,enableGrouping:!1},{name:"workerType",displayName:"Worker Type",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name",enableColumnResizing:!1,width:150,groupingShowAggregationMenu:!1},{name:"employmentStatus",displayName:"Employment Status",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name",enableColumnResizing:!1,width:150,groupingShowAggregationMenu:!1},{name:"revisionEffectiveFrom",displayName:"Revision Effective From",enablePinning:!0,cellClass:"ui-grid-cell",width:180,enableColumnResizing:!1,cellFilter:'date:"dd MMM yyyy"',pinnedLeft:!0,groupingShowGroupingMenu:!1},{name:"effectiveFrom",displayName:"Last Updated on",cellClass:"ui-grid-cell",width:180,enableColumnResizing:!1,cellFilter:'date:"dd MMM yyyy"',pinnedLeft:!0,groupingShowGroupingMenu:!1},{name:"gross",displayName:"Gross",enablePinning:!0,cellClass:"ui-grid-cell",width:150,enableColumnResizing:!1,cellTemplate:'<div class="ui-grid-cell-contents">{{(grid.appScope.getAmount(row.entity[col.name]) | currency:"":2) || 0}}</div>',pinnedLeft:!0,type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.value=e.getAmount(t.value),t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],Object.keys(this.earningsColumns).forEach(function(t){e.AddNonDeductionColumn(e.earningsColumns[t])}),this.AddNonDeductionColumn({componentTitle:"Gross(A)",componentName:"gross"}),Object.keys(this.benefitsColumns).length>0&&(Object.keys(this.benefitsColumns).forEach(function(t){e.AddNonDeductionColumn(e.benefitsColumns[t])}),this.AddNonDeductionColumn({componentTitle:"Total",componentName:"total"})),Object.keys(this.contributionsColumns).forEach(function(t){e.AddDeductionColumn(e.contributionsColumns[t])}),Object.keys(this.deductionsColumns).forEach(function(t){e.AddDeductionColumn(e.deductionsColumns[t])}),this.gridSettings.columnDefs.push(this.getColumn({name:"netPayTotal",displayName:"Net Pay",cellTemplate:'<div class="ui-grid-cell-contents">{{(grid.appScope.getAmount(row.entity[col.name]) | currency:"":2) || 0}}</div>'})),this.gridSettings.data="ctrl.employeesSalaryDetails | filter : ctrl.filterText | filter : {employmentStatus : (ctrl.filterEmploymentStatus || '')} | filter : {remunerationType : (ctrl.selectedRemuneration.type || 0)}",this.gridSettings.appScopeProvider=this,this.gridSettings.enableHorizontalScrollbar=!0,this.gridSettings.rowHeight=50,this.gridSettings.onRegisterApi=this.onRegisterGridApi},n.prototype.mapCurrentSalaryGridRow=function(t){var i=this,n=new e.Model.CurrentSalaryGridRow(t);return t.structure.breakup.items.forEach(function(t){if(t.isBenefit)n.addProperty(t,i.benefitsColumns);else switch(t.componentType){case e.Model.SalaryComponentType.contribution:n.addProperty(t,i.contributionsColumns);break;case e.Model.SalaryComponentType.deduction:n.addProperty(t,i.deductionsColumns);break;default:n.addProperty(t,i.earningsColumns)}}),n},n.prototype.exportReport=function(e){this.employeeSalaryReportService.exportCurrentSalaryDetailsReport({format:"excel",searchKey:(this.filterText||"").trim(),reportType:this.isMonthView?"Monthly":"Annual"})},n.prototype.AddNonDeductionColumn=function(e){var t=this;this.gridSettings.columnDefs.push({name:e.componentName,displayName:e.componentTitle,cellClass:"ui-grid-cell non-deduction",width:200,cellTemplate:'<div class="ui-grid-cell-contents">{{(grid.appScope.getAmount(row.entity[col.name]) | currency:"":2) || 0}}</div>',headerCellClass:"non-deduction",cellTooltip:!0,headerTooltip:!0,type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.value=t.getAmount(e.value),e.rendered=t.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1})},n.prototype.AddDeductionColumn=function(e){var t=this;this.gridSettings.columnDefs.push({name:e.componentName,displayName:e.componentTitle,cellClass:"ui-grid-cell deduction",width:200,cellTemplate:'<div class="ui-grid-cell-contents">{{(grid.appScope.getAmount(row.entity[col.name]) | currency:"":2) || 0}}</div>',headerCellClass:"deduction",cellTooltip:!0,headerTooltip:!0,type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.value=t.getAmount(e.value),e.rendered=t.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1})},n.$inject=["EmployeeSalaryReportService","AppSettings","WorkerType","uiGridGroupingConstants","UiGridExtensions","EmploymentStatus","PayrollLookUpService"],n}(t.IReportController),o=function(i){function n(n,o,r,a,s,l,c){var p=i.call(this,t.model.PayrollReportType.None)||this;return p.employeeSalaryReportService=n,p.appSettings=o,p.workerType=r,p.uiGridGroupingConstants=a,p.uiGridExtensions=s,p.employmentStatus=l,p.payrollLookUpService=c,p.earningsColumns={},p.contributionsColumns={},p.deductionsColumns={},p.benefitsColumns={},p.bonusColumns={},p.remunerationTypes=[],p.remunerationType=e.Configuration.Model.RemunerationType,p.employeesSalaryWithBonusDetails=[],p.payrollLookUpService.getRemunerationTypes().then(function(t){p.remunerationTypes=t.map(function(t){return new e.Configuration.Model.RemunerationLookup(t)}),p.selectedRemuneration=p.remunerationTypes[0]}),p.employeeSalaryReportService.getCurrentSalaryDetailsWithBonus().then(function(e){p.employeesSalaryWithBonusDetails=e.map(function(e){return e.workerType=p.workerType.getById(e.workerType).name,e.employmentStatus=p.employmentStatus.getById(e.employmentStatus).name,p.mapCurrentSalaryGridRow(e,p.bonusColumns)}),p.initGridSettings()}),p}return __extends(n,i),n.prototype.exportReport=function(e){this.employeeSalaryReportService.exportCurrentSalaryDetailsWithBonus({format:"excel",searchKey:(this.filterText||"").trim()})},n.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[{name:"employeeNumber",displayName:"Employee Number",enablePinning:!0,cellClass:"ui-grid-cell emp-name",pinnedLeft:!0,enableColumnResizing:!1,width:150,enableGrouping:!1},{name:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',enablePinning:!0,cellClass:"ui-grid-cell emp-name",pinnedLeft:!0,enableColumnResizing:!1,width:150,enableGrouping:!1},{name:"workerType",displayName:"Worker Type",enablePinning:!0,cellClass:"ui-grid-cell emp-name",pinnedLeft:!0,enableColumnResizing:!1,width:150,groupingShowAggregationMenu:!1},{name:"employmentStatus",displayName:"Employment Status",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name",enableColumnResizing:!1,width:150,groupingShowAggregationMenu:!1},{name:"revisionEffectiveFrom",displayName:"Revision Effective From",enablePinning:!0,cellClass:"ui-grid-cell",width:180,enableColumnResizing:!1,cellFilter:'date:"dd MMM yyyy"',pinnedLeft:!0,groupingShowGroupingMenu:!1},{name:"effectiveFrom",displayName:"Last Updated on",cellClass:"ui-grid-cell",width:180,enableColumnResizing:!1,cellFilter:'date:"dd MMM yyyy"',pinnedLeft:!0,groupingShowGroupingMenu:!1},{name:"total",displayName:"CTC + Bonus",enablePinning:!0,cellClass:"ui-grid-cell",width:150,enableColumnResizing:!1,cellFilter:"currency:'':2",pinnedLeft:!0,type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{name:"totalBonusAmount",displayName:"Total Bonus",enablePinning:!0,cellClass:"ui-grid-cell",width:150,enableColumnResizing:!1,cellFilter:"currency:'':2",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],Object.keys(this.bonusColumns).forEach(function(t){e.gridSettings.columnDefs.push({name:t,displayName:t,cellClass:"ui-grid-cell",width:200,cellTemplate:'<div data-ng-if="!row.groupHeader" class="ui-grid-cell-contents">{{ (row.entity[col.name] | currency: "":2 ) || 0}}</div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{COL_FIELD}}</div>',cellTooltip:!0,headerTooltip:!0,type:"number",treeAggregationType:e.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1})}),this.gridSettings.columnDefs.push({name:"gross",displayName:"Current CTC",enablePinning:!0,cellClass:"ui-grid-cell",width:150,enableColumnResizing:!1,cellFilter:'currency: ""',type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}),Object.keys(this.earningsColumns).forEach(function(t){e.AddNonDeductionColumn(e.earningsColumns[t])}),Object.keys(this.benefitsColumns).length>0&&Object.keys(this.benefitsColumns).forEach(function(t){e.AddNonDeductionColumn(e.benefitsColumns[t])}),Object.keys(this.contributionsColumns).forEach(function(t){e.AddDeductionColumn(e.contributionsColumns[t])}),Object.keys(this.deductionsColumns).forEach(function(t){e.AddDeductionColumn(e.deductionsColumns[t])}),this.gridSettings.data="ctrl.employeesSalaryWithBonusDetails | filter : ctrl.filterText | filter : {employmentStatus : (ctrl.filterEmploymentStatus || '')} | filter : {remunerationType : (ctrl.selectedRemuneration.type || 0)}",this.gridSettings.appScopeProvider=this,this.gridSettings.enableHorizontalScrollbar=!0,this.gridSettings.rowHeight=50,this.gridSettings.onRegisterApi=this.onRegisterGridApi},n.prototype.mapCurrentSalaryGridRow=function(t,i){var n=this,o=new e.Model.CurrentSalaryWithBonusGridRow(t);return t.breakup.items.filter(function(e){return!e.outsideCTC}).forEach(function(t){if(t.isBenefit)o.addProperty(t,n.benefitsColumns);else switch(t.componentType){case e.Model.SalaryComponentType.contribution:o.addProperty(t,n.contributionsColumns);break;case e.Model.SalaryComponentType.deduction:o.addProperty(t,n.deductionsColumns);break;default:o.addProperty(t,n.earningsColumns)}}),Object.keys(t.bonuses).forEach(function(e){e in i||(i[e]=e),o[e]=t.bonuses[e]}),o},n.prototype.AddNonDeductionColumn=function(e){var t=this;this.gridSettings.columnDefs.push({name:e.componentName,displayName:e.componentTitle,cellClass:"ui-grid-cell non-deduction",width:200,cellTemplate:'<div data-ng-if="!row.groupHeader" class="ui-grid-cell-contents">{{ row.entity[col.name] | currency:"":2}}</div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{ COL_FIELD || 0}}</div>',cellTooltip:!0,headerTooltip:!0,headerCellClass:"non-deduction",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=t.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1})},n.prototype.AddDeductionColumn=function(e){var t=this;this.gridSettings.columnDefs.push({name:e.componentName,displayName:e.componentTitle,cellClass:"ui-grid-cell deduction",width:200,cellTemplate:'<div data-ng-if="!row.groupHeader" class="ui-grid-cell-contents">{{ row.entity[col.name] | currency:"":2}}</div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{ COL_FIELD || 0}}</div>',cellTooltip:!0,headerTooltip:!0,headerCellClass:"deduction",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=t.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1})},n.$inject=["EmployeeSalaryReportService","AppSettings","WorkerType","uiGridGroupingConstants","UiGridExtensions","EmploymentStatus","PayrollLookUpService"],n}(t.IReportController),r=function(i){function n(n,o,r,a,s,l,c){var p=i.call(this,t.model.PayrollReportType.None)||this;return p.employeeSalaryReportService=n,p.appSettings=o,p.workerType=r,p.uiGridGroupingConstants=a,p.uiGridExtensions=s,p.employmentStatus=l,p.payrollLookUpService=c,p.currentCTCDetails=[],p.earningsColumns={},p.contributionsColumns={},p.deductionsColumns={},p.benefitColumns={},p.bonusColumns={},p.outsideColumns={},p.remunerationTypes=[],p.remunerationType=e.Configuration.Model.RemunerationType,p.payrollLookUpService.getRemunerationTypes().then(function(t){p.remunerationTypes=t.map(function(t){return new e.Configuration.Model.RemunerationLookup(t)}),p.selectedRemuneration=p.remunerationTypes[0]}),p.employeeSalaryReportService.getCurrentCTCReport().then(function(e){p.currentCTCDetails=e.map(function(e){return e.workerType=p.workerType.getById(e.workerType).name,e.employmentStatus=p.employmentStatus.getById(e.employmentStatus).name,p.mapTotalCTCGridRow(e,p.outsideColumns,p.bonusColumns,p.benefitColumns)}),p.initGridSettings()}),p}return __extends(n,i),n.prototype.exportReport=function(e){this.employeeSalaryReportService.exportCurrentCTCReport({format:"excel",searchKey:(this.filterText||"").trim()})},n.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[{name:"employeeNumber",displayName:"Employee Number",enablePinning:!0,cellClass:"ui-grid-cell emp-name",pinnedLeft:!0,enableColumnResizing:!1,width:150,enableGrouping:!1},{name:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',enablePinning:!0,cellClass:"ui-grid-cell emp-name",pinnedLeft:!0,enableColumnResizing:!1,width:150,enableGrouping:!1},{name:"workerType",displayName:"Worker Type",enablePinning:!0,cellClass:"ui-grid-cell emp-name",pinnedLeft:!0,enableColumnResizing:!1,width:150,groupingShowAggregationMenu:!1},{name:"employmentStatus",displayName:"Employment Status",enablePinning:!0,pinnedLeft:!0,width:155,cellClass:"ui-grid-cell",groupingShowAggregationMenu:!1},{name:"revisionEffectiveFrom",displayName:"Revision Effective From",enablePinning:!0,cellClass:"ui-grid-cell",width:180,enableColumnResizing:!1,cellFilter:'date:"dd MMM yyyy"',pinnedLeft:!0,groupingShowGroupingMenu:!1},{name:"effectiveFrom",displayName:"Last Updated on",cellClass:"ui-grid-cell",width:180,enableColumnResizing:!1,cellFilter:'date:"dd MMM yyyy"',pinnedLeft:!0,groupingShowGroupingMenu:!1},{name:"totalCTC",displayName:"Total CTC",enablePinning:!0,cellClass:"ui-grid-cell",width:150,enableColumnResizing:!1,cellFilter:"currency:'':2",type:"number",headerCellTemplate:'<div ng-class="{ \'sortable\': sortable }" tooltip-append-to-body="true" uib-tooltip="This includes annual salary, outside payment, bonus and perks" tooltip-placement="top"><div class="ui-grid-cell-contents" col-index="renderIndex"><span class="ui-grid-header-cell-label">{{ col.displayName}}</span></div><div class="ui-grid-column-menu-button" ng-if="grid.options.enableColumnMenus && !col.isRowHeader  && col.colDef.enableColumnMenu !== false" class="ui-grid-column-menu-button" ng-click="toggleMenu($event)"><i class="ui-grid-icon-angle-down">&nbsp;</i></div></div>',treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{name:"totalBonusAmount",displayName:"Total Bonus",enablePinning:!0,cellClass:"ui-grid-cell",width:150,enableColumnResizing:!1,cellFilter:"currency:'':2",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],Object.keys(this.bonusColumns).forEach(function(t){e.gridSettings.columnDefs.push({name:t,displayName:t,cellClass:"ui-grid-cell",width:200,cellTemplate:'<div data-ng-if="!row.groupHeader" class="ui-grid-cell-contents">{{ (row.entity[col.name] | currency: "":2 )|| 0}}</div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{COL_FIELD}</div>',cellTooltip:!0,cellFilter:'currency: ""',headerTooltip:!0,type:"number",treeAggregationType:e.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1})}),this.gridSettings.columnDefs.push({name:"totalBenefitsAmount",displayName:"Total Perk",enablePinning:!0,cellClass:"ui-grid-cell",width:150,enableColumnResizing:!1,cellFilter:'currency: ""',type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}),Object.keys(this.benefitColumns).forEach(function(t){e.gridSettings.columnDefs.push({name:t,displayName:t,cellClass:"ui-grid-cell",width:200,cellTemplate:'<div data-ng-if="!row.groupHeader" class="ui-grid-cell-contents">{{ (row.entity[col.name] | currency: "":2) || 0}}</div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{COL_FIELD || 0}}</div>',cellTooltip:!0,headerTooltip:!0,type:"number",treeAggregationType:e.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1})}),Object.keys(this.outsideColumns).forEach(function(t){e.gridSettings.columnDefs.push({name:t,displayName:t,cellClass:"ui-grid-cell",width:200,cellTemplate:'<div data-ng-if="!row.groupHeader" class="ui-grid-cell-contents">{{ (row.entity[col.name] | currency: "":2) || 0 }}</div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{COL_FIELD || 0}}</div>',cellTooltip:!0,headerTooltip:!0,type:"number",treeAggregationType:e.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1})}),this.gridSettings.columnDefs.push({name:"gross",displayName:"Annual",enablePinning:!0,cellClass:"ui-grid-cell",width:150,enableColumnResizing:!1,cellFilter:"currency:'':2",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}),Object.keys(this.earningsColumns).forEach(function(t){e.AddNonDeductionColumn(e.earningsColumns[t])}),Object.keys(this.contributionsColumns).forEach(function(t){e.AddDeductionColumn(e.contributionsColumns[t])}),Object.keys(this.deductionsColumns).forEach(function(t){e.AddDeductionColumn(e.deductionsColumns[t])}),this.gridSettings.data="ctrl.currentCTCDetails | filter : ctrl.filterText | filter : {employmentStatus : (ctrl.filterEmploymentStatus || '')} | filter : {remunerationType : (ctrl.selectedRemuneration.type || 0)}",this.gridSettings.appScopeProvider=this,this.gridSettings.enableHorizontalScrollbar=!0,this.gridSettings.rowHeight=50,this.gridSettings.onRegisterApi=this.onRegisterGridApi},n.prototype.mapTotalCTCGridRow=function(t,i,n,o){var r=this,a=new e.Model.CurrentCTCGridRow(t);return t.breakup.items.filter(function(e){return!e.outsideCTC}).forEach(function(t){switch(t.componentType){case e.Model.SalaryComponentType.contribution:a.addProperty(t,r.contributionsColumns);break;case e.Model.SalaryComponentType.deduction:a.addProperty(t,r.deductionsColumns);break;default:a.addProperty(t,r.earningsColumns)}}),t.breakup.items.filter(function(e){return e.outsideCTC}).forEach(function(e){e in i||(i[e.componentTitle]=e),a[e.componentTitle]=e.amount}),Object.keys(t.bonuses).forEach(function(e){e in n||(n[e]=e),a[e]=t.bonuses[e]}),Object.keys(t.benefits).forEach(function(e){e in o||(o[e]=e),a[e]=t.benefits[e]}),a},n.prototype.AddNonDeductionColumn=function(e){var t=this;this.gridSettings.columnDefs.push({name:e.componentName,displayName:e.componentTitle,cellClass:"ui-grid-cell emp-name",width:200,cellTooltip:!0,headerTooltip:!0,headerCellClass:"non-deduction",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=t.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1})},n.prototype.AddDeductionColumn=function(e){var t=this;this.gridSettings.columnDefs.push({name:e.componentName,displayName:e.componentTitle,cellClass:"ui-grid-cell emp-name",width:200,cellTooltip:!0,headerTooltip:!0,headerCellClass:"deduction",type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=t.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1})},n.$inject=["EmployeeSalaryReportService","AppSettings","WorkerType","uiGridGroupingConstants","UiGridExtensions","EmploymentStatus","PayrollLookUpService"],n}(t.IReportController),a=function(e){function i(i,n,o){var r=e.call(this,t.model.PayrollReportType.None)||this;r.appSettings=i,r.uiGridGroupingConstants=n,r.salaryReportService=o,r.fromDateValid=!0;var a=new Date;return r.model={},r.model.fromDate=new Date(a.setDate(a.getDate()-30)),r.model.toDate=new Date((new Date).setHours(23,59,59,999)),r.getBonusStatusReport(r.model.fromDate,r.model.toDate),r.initGridSettings(),r}return __extends(i,e),i.prototype.initGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.showColumnFooter=!0,this.gridOptions.columnDefs=[this.getColumn({name:"employeeNumber",displayName:"Employee Number",enablePinning:!0,pinnedLeft:!0}),this.getColumn({name:"employeeName",displayName:"Employee Name",enablePinning:!0,pinnedLeft:!0,cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',cellClass:"ui-grid-cell  emp-name"}),this.getColumnWithDefaultTemplate({name:"jobTitle",displayName:"Job Title",enablePinning:!0,pinnedLeft:!0,defaultValue:"Not Available"}),this.getColumnWithDefaultTemplate({name:"location",displayName:"Location",enablePinning:!0,pinnedLeft:!0,defaultValue:"Not Available"}),this.getColumnWithDefaultTemplate({name:"department",displayName:"Department",enablePinning:!0,pinnedLeft:!0,defaultValue:"Not Available"})],this.gridOptions.columnDefs.push(this.getColumn({name:"bonusType",displayName:"Bonus Type",width:200})),this.gridOptions.columnDefs.push(this.getColumn({name:"payableAmount",displayName:"Payable Amount",cellFilter:"currency:'':2"})),this.gridOptions.columnDefs.push(this.getColumn({name:"dueDate",displayName:"Payout Date",cellFilter:"date: dd-MMM-yyyy"})),this.gridOptions.columnDefs.push(this.getColumn({name:"paidAmount",displayName:"Paid Amount",cellFilter:"currency:'':2"})),this.gridOptions.columnDefs.push(this.getColumn({name:"paidDate",displayName:"Paid Date",cellFilter:"date: dd-MMM-yyyy"})),this.gridOptions.columnDefs.push(this.getColumn({name:"status",displayName:"Status"})),this.gridOptions.columnDefs.push(this.getColumn({name:"remarks",displayName:"Remarks",width:300})),this.gridOptions.data="ctrl.employeeBonuses | filter : ctrl.filterText",this.gridOptions.appScopeProvider=this,this.gridOptions.onRegisterApi=this.onRegisterGridApi},i.prototype.getBonusStatusReport=function(e,t){var i=this;if(this.validateDates(e,t),this.fromDateValid){var n=e?e.dateOnlyString():"",o=t?t.dateOnlyString():"";this.salaryReportService.getBonusStatusReport(n,o).then(function(e){i.employeeBonuses=e})}},i.prototype.validateDates=function(e,t){this.fromDateValid=e&&t&&new Date(e).getTime()<=new Date(t).getTime()},i.prototype.exportReport=function(e){this.validateDates(this.model.fromDate,this.model.toDate),this.fromDateValid&&this.salaryReportService.exportBonusStatusReport({format:e||"excel",fromMonth:this.model.fromDate.dateOnlyString(),toMonth:this.model.toDate.dateOnlyString(),searchKey:(this.filterText||"").trim()})},i.$inject=["AppSettings","uiGridGroupingConstants","EmployeeSalaryReportService"],i}(t.IReportController),s=function(e){function i(i,n,o){var r=e.call(this,t.model.PayrollReportType.None)||this;r.appSettings=i,r.uiGridGroupingConstants=n,r.salaryReportService=o,r.fromDateValid=!0;var a=new Date;return r.model={},r.model.fromDate=new Date(a.setDate(a.getDate()-30)),r.model.toDate=new Date((new Date).setHours(23,59,59,999)),r.getBonusRevisionReport(r.model.fromDate,r.model.toDate),r.initGridSettings(),r}return __extends(i,e),i.prototype.initGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.showColumnFooter=!0,this.gridOptions.columnDefs=[this.getColumn({name:"employeeNumber",displayName:"Employee Number",enablePinning:!0,pinnedLeft:!0}),this.getColumn({name:"employeeName",displayName:"Employee Name",enablePinning:!0,pinnedLeft:!0,cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',cellClass:"ui-grid-cell  emp-name"}),this.getColumnWithDefaultTemplate({name:"jobTitle",displayName:"Job Title",enablePinning:!0,pinnedLeft:!0,defaultValue:"Not Available"}),this.getColumnWithDefaultTemplate({name:"location",displayName:"Location",enablePinning:!0,pinnedLeft:!0,defaultValue:"Not Available"}),this.getColumnWithDefaultTemplate({name:"department",displayName:"Department",enablePinning:!0,pinnedLeft:!0,defaultValue:"Not Available"})],this.gridOptions.columnDefs.push(this.getColumn({name:"bonusType",displayName:"Bonus Type",width:200})),this.gridOptions.columnDefs.push(this.getColumn({name:"amountPromised",displayName:"Amount Promised",cellFilter:"currency:'':2"})),this.gridOptions.columnDefs.push(this.getColumn({name:"revisedAmount",displayName:"Revised Amount",cellFilter:"currency:'':2"})),this.gridOptions.columnDefs.push(this.getColumn({name:"note",displayName:"Note"})),this.gridOptions.columnDefs.push(this.getColumn({name:"revisedBy",displayName:"Revised By"})),this.gridOptions.columnDefs.push(this.getColumn({name:"revisedOn",displayName:"Revised On",cellFilter:"date: dd-MMM-yyyy"})),this.gridOptions.columnDefs.push(this.getColumn({name:"dueDate",displayName:"Payout Date",cellFilter:"date: dd-MMM-yyyy"})),this.gridOptions.columnDefs.push(this.getColumn({name:"totalPaidAmount",displayName:"Total Paid Amounts",cellFilter:"currency:'':2"})),this.gridOptions.columnDefs.push(this.getColumn({name:"lastPaidOn",displayName:"Last Paid On",cellFilter:"date: dd-MMM-yyyy"})),this.gridOptions.columnDefs.push(this.getColumn({name:"status",displayName:"Status"})),this.gridOptions.columnDefs.push(this.getColumn({name:"remarks",displayName:"Remarks",width:300})),this.gridOptions.data="ctrl.employeeBonuses | filter : ctrl.filterText",this.gridOptions.appScopeProvider=this,this.gridOptions.onRegisterApi=this.onRegisterGridApi},i.prototype.getBonusRevisionReport=function(e,t){var i=this;if(this.validateDates(e,t),this.fromDateValid){var n=e?e.dateOnlyString():"",o=t?t.dateOnlyString():"";this.salaryReportService.getBonusRevisionReport(n,o).then(function(e){i.employeeBonuses=e})}},i.prototype.validateDates=function(e,t){this.fromDateValid=e&&t&&new Date(e).getTime()<=new Date(t).getTime()},i.prototype.exportReport=function(e){this.validateDates(this.model.fromDate,this.model.toDate),this.fromDateValid&&this.salaryReportService.exportBonusRevisionReport({format:e||"excel",fromMonth:this.model.fromDate.dateOnlyString(),toMonth:this.model.toDate.dateOnlyString(),searchKey:(this.filterText||"").trim()})},i.$inject=["AppSettings","uiGridGroupingConstants","EmployeeSalaryReportService"],i}(t.IReportController),angular.module("payroll").controller("EmployeesAnnualSalaryController",i).controller("EmployeesCurrentSalaryController",n).controller("EmployeesCurrentSalaryWithBonusController",o).controller("EmployeesCurrentCTCController",r).controller("BonusStatusReportController",a).controller("BonusRevisionReportController",s)}(e.reports||(e.reports={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(t){var i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v;t.runReports||(t.runReports={}),i=function(t){function i(e,i,n,o,r,a,s,l){var c=t.call(this,l)||this;return c.payrollRunReportService=e,c.appSettings=i,c.modalService=n,c.uiGridConstants=o,c.scope=r,c.uiGridGroupingConstants=a,c.uiGridExtensions=s,c.currentStructureDetails={},c.reviewData=[],c.initGridSettings(),c}return __extends(i,t),i.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.enableColumnResizing=!1,this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTemplate:"<div class='ui-grid-cell-contents name' title='{{row.entity.employeeNumber}}'><a target='_blank' ui-sref='employee.finances.summary({ id:row.entity.employeeId})'><b>{{row.entity.employeeNumber}}</b></a></div>",width:150,enableGrouping:!1,groupingShowAggregationMenu:!1},{field:"employeeName",displayName:"Employee Name",cellTemplate:"<div class='ui-grid-cell-contents name' title='{{row.entity.employeeName}}'><a target='_blank' ui-sref='employee.finances.summary({ id:row.entity.employeeId})'><b>{{row.entity.employeeName}}</b></a></div>",width:150,enableGrouping:!1,groupingShowAggregationMenu:!1},{field:"previousGrossAmount",displayName:"Gross Pay",cellFilter:"currency:'':2",type:"number",width:120,headerCellTemplate:"<div class='ui-grid-cell-contents over-header' ng-class=\"{ 'sortable': sortable }\"aria-sort=\"{{col.sort.direction == asc ? 'ascending' : ( col.sort.direction == desc ? 'descending' : (!col.sort.direction ? 'none' : 'other'))}}\""+'><div class="over-header-content" style="width: {{120 + 120 + 1}}px">{{grid.appScope.ctrl.reviewData[0].previousMonth}}</div><span class="ui-grid-header-cell-label">{{ col.displayName CUSTOM_FILTERS }}</span></div><div role="button" tabindex="0" ui-grid-one-bind-id-grid="col.uid + \'-menu-button\'"class="ui-grid-column-menu-button"ng-if="grid.options.enableColumnMenus && !col.isRowHeader && col.colDef.enableColumnMenu !== false"ng-click="toggleMenu($event)" ng-class="{\'ui-grid-column-menu-button-last-col\': isLastCol}"><i class="ui-grid-icon-angle-down node" aria-hidden="true"></i></div>',treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"previousPayableDays",displayName:"Payable days",type:"number",width:120,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"previousLOPDays",displayName:"LOP Days",type:"number",width:100,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)}},{field:"currentGrossAmount",displayName:"Gross Pay",cellFilter:"currency:'':2",type:"number",width:120,headerCellTemplate:"<div class='ui-grid-cell-contents over-header' ng-class=\"{ 'sortable': sortable }\"aria-sort=\"{{col.sort.direction == asc ? 'ascending' : ( col.sort.direction == desc ? 'descending' : (!col.sort.direction ? 'none' : 'other'))}}\""+'><div class="over-header-content" style="width: {{120 + 120 + 1}}px">{{grid.appScope.ctrl.reviewData[0].currentMonth}}</div><span class="ui-grid-header-cell-label">{{ col.displayName CUSTOM_FILTERS }}</span></div><div role="button" tabindex="0" ui-grid-one-bind-id-grid="col.uid + \'-menu-button\'"class="ui-grid-column-menu-button"ng-if="grid.options.enableColumnMenus && !col.isRowHeader && col.colDef.enableColumnMenu !== false"ng-click="toggleMenu($event)" ng-class="{\'ui-grid-column-menu-button-last-col\': isLastCol}"><i class="ui-grid-icon-angle-down node" aria-hidden="true"></i></div>',treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"currentPayableDays",displayName:"Payable days",type:"number",width:120,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"currentLOPDays",displayName:"LOP Days",type:"number",width:100,treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)}},{field:"grossChange",displayName:"% Change",cellTemplate:"<div class='ui-grid-cell-contents' data-ng-class=\" row.entity.grossChange > 0 ? 'non-deduction' : row.entity.grossChange < 0 ? 'deduction' : '' \">{{row.entity.grossChange}}</div>",sort:{direction:this.uiGridConstants.ASC,priority:1},sortingAlgorithm:this.absSortingFcn,width:90,enableGrouping:!1},{name:"reason",displayName:"Reason",enableSort:!1,groupingShowAggregationMenu:!1},{name:"details",cellTemplate:"<div class='ui-grid-cell-contents'><span class='node add-link' data-ng-click='grid.appScope.ctrl.getCompareStructures(row.entity)'>View details</span></div>",enableSort:!1,width:150,enableGrouping:!1}],this.gridSettings.data="ctrl.reviewData | filter: ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},i.prototype.getCompareStructures=function(e){this.modalService.open({templateUrl:"structureCompare",scope:this.scope,windowClass:"structure-compare",backdrop:"static"}),this.currentStructureDetails=e,this.initCompareGridSettings(),this.compareGridSettings.data=e.compareHeads},i.prototype.getReportData=function(){var t=this;this.payrollRunReportService.getCyclePayreviews(this.payrollConfiguration.payGroupId,this.month1.getDateOnlyString(),this.month2.getDateOnlyString()).then(function(i){t.reviewData=i.reviewDetails.map(function(t){return new e.Model.ReviewGridRow(t)}),t.queueGridRefresh()})},i.prototype.exportReport=function(e){this.payrollRunReportService.exportMonthlyCompareReport(this.payrollConfiguration.payGroupId,{fromMonth:this.month1.getDateOnlyString(),toMonth:this.month2.getDateOnlyString(),format:e||"excel",searchKey:(this.filterText||"").trim()})},i.prototype.initCompareGridSettings=function(){this.compareGridSettings=angular.copy(this.appSettings.gridSettings),this.compareGridSettings.columnDefs=[{field:"componentTitle",displayName:"Salary Break up",width:"45%"},{field:"previousAmount",displayName:this.reviewData[0].previousMonth,type:"number",cellFilter:"currency:'':2"},{field:"currentAmount",displayName:this.reviewData[0].currentMonth,type:"number",cellFilter:"currency:'':2"},{field:"changeDifference",displayName:"Change",type:"number",cellFilter:"currency:'':2",sort:{direction:this.uiGridConstants.ASC},sortingAlgorithm:this.absSortingFcn},{field:"change",displayName:"Change %",cellTemplate:"<div class='ui-grid-cell-contents' data-ng-class=\" row.entity.change > 0 ? 'non-deduction' : row.entity.change < 0 ? 'deduction' : '' \">{{row.entity.change + \"%\"}}</div>",sort:{direction:this.uiGridConstants.ASC}}]},i.prototype.absSortingFcn=function(e,t,i,n,o){var r=Math.abs(e),a=Math.abs(t);return r==a?0:r>a?-1:1},i.$inject=["PayrollRunReportService","AppSettings","$uibModal","uiGridConstants","$scope","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],i}(t.ICompareReportController),n=function(){function e(){}return e.$inject=[],e}(),o=function(e){function t(t,i,n){var o=e.call(this,n)||this;return o.payrollRunReportService=t,o.appSettings=i,o.initGridSettings(),o}return __extends(t,e),t.prototype.initGridSettings=function(){},t.prototype.exportReport=function(e){this.payrollRunReportService.exportMonthlyEmployeeReconcileReport(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"})},t.prototype.getReportData=function(e){var t=this;this.selectReportDate(e)&&this.payrollRunReportService.getMonthlyEmployeeReconcileReport(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year).then(function(e){t.reconcileData=e})},t.$inject=["PayrollRunReportService","AppSettings","PayGroupsAndConfigurationService"],t}(t.IMonthlyReportController),r=function(e){function t(t,i,n,o,r,a,s){var l=e.call(this,s)||this;return l.payrollRunReportService=t,l.appSettings=i,l.timeoutService=o,l.uiGridGroupingConstants=r,l.uiGridExtensions=a,l.initGridSettings(),l}return __extends(t,e),t.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.columnDefs=[{field:"componentTitle",displayName:"Components",enableGrouping:!1},{field:"previousTotalAmount",headerCellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.ctrl.grossComponentData.previousMonth}}</span><div role="button" tabindex="0" ui-grid-one-bind-id-grid="col.uid + \'-menu-button\'" class="ui-grid-column-menu-button inline-block ng-scope" ng-if="grid.options.enableColumnMenus && !col.isRowHeader && col.colDef.enableColumnMenu !== false" ng-click="toggleMenu($event)" ng-class="{\'ui-grid-column-menu-button-last-col\': isLastCol}" ui-grid-one-bind-aria-label="i18n.headerCell.aria.columnMenuButtonLabel" aria-haspopup="true" aria-label="Column Menu"><i class="ui-grid-icon-angle-down" aria-hidden="true"></i></div></div>',displayName:"Previous Amount",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"currentTotalAmount",headerCellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.ctrl.grossComponentData.currentMonth}}</span><div role="button" tabindex="0" ui-grid-one-bind-id-grid="col.uid + \'-menu-button\'" class="ui-grid-column-menu-button inline-block ng-scope" ng-if="grid.options.enableColumnMenus && !col.isRowHeader && col.colDef.enableColumnMenu !== false" ng-click="toggleMenu($event)" ng-class="{\'ui-grid-column-menu-button-last-col\': isLastCol}" ui-grid-one-bind-aria-label="i18n.headerCell.aria.columnMenuButtonLabel" aria-haspopup="true" aria-label="Column Menu"><i class="ui-grid-icon-angle-down" aria-hidden="true"></i></div></div>',displayName:"Current Amount",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],this.gridSettings.data="ctrl.grossComponentData.components | filter: ctrl.filterText",this.gridSettings.showColumnFooter=!0,this.gridSettings.onRegisterApi=this.onRegisterGridApi},t.prototype.getReportData=function(){var e=this;this.payrollRunReportService.getGrossComponentReconciliation(this.payrollConfiguration.payGroupId,this.month1.getDateOnlyString(),this.month2.getDateOnlyString()).then(function(t){e.grossComponentData=t,e.queueGridRefresh()})},t.prototype.exportReport=function(e){this.payrollRunReportService.exportGrossComponentsReport(this.payrollConfiguration.payGroupId,{fromMonth:this.month1.getDateOnlyString(),toMonth:this.month2.getDateOnlyString(),format:e,searchKey:(this.filterText||"").trim()})},t.$inject=["PayrollRunReportService","AppSettings","PayrollModel","$timeout","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],t}(t.ICompareReportController),a=function(e){function t(t,i,n,o,r,a,s){var l=e.call(this,s)||this;return l.payrollRunReportService=t,l.appSettings=i,l.timeoutService=o,l.uiGridGroupingConstants=r,l.uiGridExtensions=a,l.initGridSettings(),l}return __extends(t,e),t.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.columnDefs=[{field:"componentTitle",displayName:"Components"},{field:"previousTotalAmount",headerCellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.ctrl.contributionAndDeductionComponentData.previousMonth}}</span><div role="button" tabindex="0" ui-grid-one-bind-id-grid="col.uid + \'-menu-button\'" class="ui-grid-column-menu-button inline-block ng-scope" ng-if="grid.options.enableColumnMenus && !col.isRowHeader && col.colDef.enableColumnMenu !== false" ng-click="toggleMenu($event)" ng-class="{\'ui-grid-column-menu-button-last-col\': isLastCol}" ui-grid-one-bind-aria-label="i18n.headerCell.aria.columnMenuButtonLabel" aria-haspopup="true" aria-label="Column Menu"><i class="ui-grid-icon-angle-down" aria-hidden="true"></i></div></div>',displayName:"Previous Amount",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1},{field:"currentTotalAmount",headerCellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.ctrl.contributionAndDeductionComponentData.currentMonth}}</span><div role="button" tabindex="0" ui-grid-one-bind-id-grid="col.uid + \'-menu-button\'" class="ui-grid-column-menu-button inline-block ng-scope" ng-if="grid.options.enableColumnMenus && !col.isRowHeader && col.colDef.enableColumnMenu !== false" ng-click="toggleMenu($event)" ng-class="{\'ui-grid-column-menu-button-last-col\': isLastCol}" ui-grid-one-bind-aria-label="i18n.headerCell.aria.columnMenuButtonLabel" aria-haspopup="true" aria-label="Column Menu"><i class="ui-grid-icon-angle-down" aria-hidden="true"></i></div></div>',displayName:"Current Amount",cellFilter:"currency:'':2",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(t){t.rendered=e.uiGridExtensions.formatAggregation(t)},groupingShowGroupingMenu:!1}],this.gridSettings.data="ctrl.contributionAndDeductionComponentData.components | filter: ctrl.filterText",this.gridSettings.showColumnFooter=!0,this.gridSettings.onRegisterApi=this.onRegisterGridApi},t.prototype.getReportData=function(){var e=this;this.payrollRunReportService.getDeductionContributionReconciliation(this.payrollConfiguration.payGroupId,this.month1.getDateOnlyString(),this.month2.getDateOnlyString()).then(function(t){e.contributionAndDeductionComponentData=t,e.queueGridRefresh()})},t.prototype.exportReport=function(e){this.payrollRunReportService.exportContributionComponentsReport(this.payrollConfiguration.payGroupId,{fromMonth:this.month1.getDateOnlyString(),toMonth:this.month2.getDateOnlyString(),format:e,searchKey:(this.filterText||"").trim()})},t.$inject=["PayrollRunReportService","AppSettings","PayrollModel","$timeout","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],t}(t.ICompareReportController),s=function(t){function i(e,i,n,o,r,a,s,l){var c=t.call(this,s)||this;return c.payrollRunReportService=e,c.appSettings=i,c.timeoutService=n,c.employeePayrollCycleRunStatus=o,c.uiGridGroupingConstants=r,c.uiGridExtensions=a,c.gender=l,c.title="Monthly Component Break Up",c.adviceRegister=[],c}return __extends(i,t),i.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[this.getColumn({name:"status",displayName:"",width:50,enablePinning:!0,pinnedLeft:!0,cellClass:"status-box",cellTemplate:'<span class="advice-status" data-ng-class="{\'not-run\' : (row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.Executed.id && row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.FinalSettlement.id)}"></span>'}),this.getColumn({name:"employeeNumber",displayName:"Employee Number",enablePinning:!0,pinnedLeft:!0,cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.payslips({id:row.entity.employeeId})" title="{{row.entity.employeeNumber}}">{{row.entity.employeeNumber}}</a></div>',cellClass:"ui-grid-cell  emp-name"}),this.getColumn({name:"name",displayName:"Employee Name",enablePinning:!0,pinnedLeft:!0,cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.payslips({id:row.entity.employeeId})" title="{{row.entity.employee}}">{{row.entity.employee}}</a></div>',cellClass:"ui-grid-cell  emp-name"}),this.getColumn({name:"jobTitle",displayName:"Designation",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell days"}),this.getColumn({name:"monthName",displayName:"payroll Month",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumn({name:"days",displayName:"Days",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell days"}),this.getColumn({name:"dateJoined",displayName:"Date of joining",enablePinning:!0,cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.dateJoined | date:"dd MMM yyyy" }}</span>'}),this.getColumn({name:"gender",displayName:"Gender",enablePinning:!0,width:100,cellTemplate:'<div class="ui-grid-cell-contents">{{grid.appScope.ctrl.gender.getById(row.entity.gender).title}}</div>',cellClass:"ui-grid-cell  emp-name"}),this.getColumn({name:"dateOfBirth",displayName:"Date of birth",enablePinning:!0,cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.dateOfBirth != null">{{row.entity.dateOfBirth | date:"dd MMM yyyy"  }}</span><span data-ng-if="row.entity.dateOfBirth == null">Not Available</span>'}),this.getColumnWithDefaultTemplate({name:"location",displayName:"Location",defaultValue:"Not Available",enablePinning:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumnWithDefaultTemplate({name:"department",displayName:"Department",defaultValue:"Not Available",enablePinning:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumnWithDefaultTemplate({name:"panNumber",displayName:"PAN Number",defaultValue:"Not Available",enablePinning:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumnWithDefaultTemplate({name:"monthlyGross",displayName:"Monthly Gross",defaultValue:"Not Available",enablePinning:!0,cellClass:"ui-grid-cell emp-name"})],Object.keys(this.componentTitle.earningsTitle).forEach(function(t){e.AddNonDeductionColumn(e.componentTitle.earningsTitle[t])}),this.AddNonDeductionColumn({componentTitle:"Gross(A)",componentName:"gross"}),Object.keys(this.componentTitle.benefitsTitle).length>0&&(Object.keys(this.componentTitle.benefitsTitle).forEach(function(t){e.AddNonDeductionColumn(e.componentTitle.benefitsTitle[t])}),this.AddNonDeductionColumn({componentTitle:"Total",componentName:"total"})),Object.keys(this.componentTitle.contributionsTitle).forEach(function(t){e.AddDeductionColumn(e.componentTitle.contributionsTitle[t])}),this.AddDeductionColumn({componentName:"totalContributions",componentTitle:"Total Contributions(B)"}),Object.keys(this.componentTitle.deductionsTitle).forEach(function(t){e.AddDeductionColumn(e.componentTitle.deductionsTitle[t])}),this.AddDeductionColumn({componentName:"totalDeductions",componentTitle:"Total Deductions(C)"}),Object.keys(this.componentTitle.reimbursementsTitle).forEach(function(t){e.AddNonDeductionColumn(e.componentTitle.reimbursementsTitle[t])}),this.AddNonDeductionColumn({componentName:"totalReimbursements",componentTitle:"Total Reimbursements(D)"}),this.AddNonDeductionColumn({componentName:"netPay",componentTitle:"Total Net Pay(A-B-C+D)"}),this.gridSettings.data="ctrl.adviceRegister | filter : ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},i.prototype.exportReport=function(e){this.payrollRunReportService.exportMonthlyComponentBreakUp(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"})},i.prototype.getReportData=function(e){var t=this;this.selectReportDate(e)&&this.payrollRunReportService.getMonthlyComponentBreakupSummary(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year).then(function(e){t.componentTitle={earningsTitle:{},contributionsTitle:{},deductionsTitle:{},reimbursementsTitle:{},benefitsTitle:{}},t.applyPayRegisterData(e),t.initGridSettings(),t.timeoutService(function(){window.dispatchEvent(new Event("resize"))},200)})},i.prototype.applyPayRegisterData=function(t){var i=this,n=[];angular.forEach(t,function(t,o){var r=new e.Model.PayRegisterGridRow(t);t.status==i.employeePayrollCycleRunStatus.Executed.id||t.status==i.employeePayrollCycleRunStatus.FinalSettlement.id?(t.earnings.forEach(function(e){i.addProperty(e,i.componentTitle.earningsTitle,r)}),t.contributions.forEach(function(e){i.addProperty(e,i.componentTitle.contributionsTitle,r)}),t.deductions.forEach(function(e){i.addProperty(e,i.componentTitle.deductionsTitle,r)}),t.reimbursements.forEach(function(e){i.addProperty(e,i.componentTitle.reimbursementsTitle,r)}),t.benefits.forEach(function(e){i.addProperty(e,i.componentTitle.benefitsTitle,r)})):r.days=t.statusDescription,n.push(r)}),this.adviceRegister=n},i.prototype.addProperty=function(e,t,i){e.componentName in t||(t[e.componentName]=e),i[e.componentName]=e.amount||0},i.prototype.AddNonDeductionColumn=function(e){var t=this;this.gridSettings.columnDefs.push({name:e.componentName,displayName:e.componentTitle,cellClass:"ui-grid-cell non-deduction",width:200,cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="(row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.Executed.id || row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.FinalSettlement.id)">{{(grid.getCellValue(row, col) | currency:"") || 0}}</div>',headerCellClass:"non-deduction",cellTooltip:!0,headerTooltip:!0,type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=t.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1})},i.prototype.AddDeductionColumn=function(e){var t=this;this.gridSettings.columnDefs.push({name:e.componentName,displayName:e.componentTitle,cellClass:"ui-grid-cell deduction",width:200,cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="(row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.Executed.id || row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.FinalSettlement.id)">{{(grid.getCellValue(row, col) | currency:"") || 0}}</div>',headerCellClass:"deduction",cellTooltip:!0,headerTooltip:!0,type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=t.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1})},i.$inject=["PayrollRunReportService","AppSettings","$timeout","EmployeePayrollCycleRunStatus","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService","Gender"],i}(t.IMonthlyReportController),l=function(t){function i(e,i,n,o,r,a,s,l){var c=t.call(this,s)||this;return c.payrollRunReportService=e,c.appSettings=i,c.timeoutService=n,c.employeePayrollCycleRunStatus=o,c.uiGridGroupingConstants=r,c.uiGridExtensions=a,c.gender=l,c.adviceRegister=[],c.title="Monthly Component Break Up And Financial Details",c}return __extends(i,t),i.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[this.getColumn({name:"status",displayName:"",width:50,enablePinning:!0,pinnedLeft:!0,cellClass:"status-box",cellTemplate:'<span class="advice-status" data-ng-class="{\'not-run\' : (row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.Executed.id && row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.FinalSettlement.id)}"></span>'}),this.getColumn({name:"employeeNumber",displayName:"Employee Number",enablePinning:!0,pinnedLeft:!0,cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.payslips({id:row.entity.employeeId})" title="{{row.entity.employeeNumber}}">{{row.entity.employeeNumber}}</a></div>',cellClass:"ui-grid-cell  emp-name"}),this.getColumn({name:"employeeName",displayName:"Employee Name",enablePinning:!0,pinnedLeft:!0,cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.payslips({id:row.entity.employeeId})" title="{{row.entity.employee}}">{{row.entity.employee}}</a></div>',cellClass:"ui-grid-cell  emp-name"}),this.getColumn({name:"jobTitle",displayName:"Designation",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell days"}),this.getColumn({name:"days",displayName:"Days",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell days"}),this.getColumn({name:"gender",displayName:"Gender",enablePinning:!0,width:100,cellTemplate:'<div class="ui-grid-cell-contents">{{grid.appScope.ctrl.gender.getById(row.entity.gender).title}}</div>',cellClass:"ui-grid-cell  emp-name"}),this.getColumn({name:"dateOfBirth",displayName:"Date of birth",enablePinning:!0,cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.dateOfBirth != null">{{row.entity.dateOfBirth | date:"dd MMM yyyy"  }}</span><span data-ng-if="row.entity.dateOfBirth == null">Not Available</span>'}),this.getColumnWithDefaultTemplate({name:"location",displayName:"Location",defaultValue:"Not Available",enablePinning:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumnWithDefaultTemplate({name:"department",displayName:"Department",defaultValue:"Not Available",enablePinning:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumnWithDefaultTemplate({name:"panNumber",displayName:"PAN Number",defaultValue:"Not Available",enablePinning:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumnWithDefaultTemplate({name:"uan",displayName:"UAN",defaultValue:"Not Available",enablePinning:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumnWithDefaultTemplate({name:"paymentMode",displayName:"Payment Mode",defaultValue:"Not Available",enablePinning:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumnWithDefaultTemplate({name:"bankName",displayName:"Bank Name",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if=row.entity.paymentMode ==  \'BankTransfer\'">{{grid.getCellValue(row, col)}}</span></div>',enablePinning:!0}),this.getColumnWithDefaultTemplate({name:"accountNumber",enablePinning:!0,cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.paymentMode ==  \'BankTransfer\'">{{grid.getCellValue(row, col)}}</span></div>'}),this.getColumnWithDefaultTemplate({name:"ifscCode",displayName:"IFSC code",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.paymentMode ==  \'BankTransfer\'">{{grid.getCellValue(row, col)}}</span></div>',enablePinning:!0}),this.getColumn({name:"monthName",displayName:"payroll Month",enablePinning:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumnWithDefaultTemplate({name:"monthlyGross",displayName:"Monthly Gross",defaultValue:"Not Available",enablePinning:!0,cellClass:"ui-grid-cell emp-name"})],Object.keys(this.componentTitle.earningsTitle).forEach(function(t){e.AddNonDeductionColumn(e.componentTitle.earningsTitle[t])}),this.AddNonDeductionColumn({componentTitle:"Gross(A)",componentName:"gross"}),Object.keys(this.componentTitle.benefitsTitle).length>0&&(Object.keys(this.componentTitle.benefitsTitle).forEach(function(t){e.AddNonDeductionColumn(e.componentTitle.benefitsTitle[t])}),this.AddNonDeductionColumn({componentTitle:"Total",componentName:"total"})),Object.keys(this.componentTitle.contributionsTitle).forEach(function(t){e.AddDeductionColumn(e.componentTitle.contributionsTitle[t])}),this.AddDeductionColumn({componentName:"totalContributions",componentTitle:"Total Contributions(B)"}),Object.keys(this.componentTitle.deductionsTitle).forEach(function(t){e.AddDeductionColumn(e.componentTitle.deductionsTitle[t])}),this.AddDeductionColumn({componentName:"totalDeductions",componentTitle:"Total Deductions(C)"}),Object.keys(this.componentTitle.reimbursementsTitle).forEach(function(t){e.AddNonDeductionColumn(e.componentTitle.reimbursementsTitle[t])}),this.AddNonDeductionColumn({componentName:"totalReimbursements",componentTitle:"Total Reimbursements(D)"}),this.AddNonDeductionColumn({componentName:"netPay",componentTitle:"Total Net Pay(A-B-C+D)"}),this.gridSettings.data="ctrl.adviceRegister | filter : ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},i.prototype.exportReport=function(e){this.payrollRunReportService.exportMonthlyComponentBreakupSummaryWithFinancialDetails(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"})},i.prototype.getReportData=function(e){var t=this;this.selectReportDate(e)&&this.payrollRunReportService.getMonthlyComponentBreakupSummaryWithFinancialDetails(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year).then(function(e){t.componentTitle={earningsTitle:{},contributionsTitle:{},deductionsTitle:{},reimbursementsTitle:{},benefitsTitle:{}},t.applyPayRegisterData(e),t.initGridSettings(),t.timeoutService(function(){window.dispatchEvent(new Event("resize"))},200)})},i.prototype.applyPayRegisterData=function(t){var i=this,n=[];angular.forEach(t,function(t,o){var r=new e.Model.PayRegisterwithBankDetailsGridRow(t);t.status==i.employeePayrollCycleRunStatus.Executed.id||t.status==i.employeePayrollCycleRunStatus.FinalSettlement.id?(t.earnings.forEach(function(e){i.addProperty(e,i.componentTitle.earningsTitle,r)}),t.contributions.forEach(function(e){i.addProperty(e,i.componentTitle.contributionsTitle,r)}),t.deductions.forEach(function(e){i.addProperty(e,i.componentTitle.deductionsTitle,r)}),t.reimbursements.forEach(function(e){i.addProperty(e,i.componentTitle.reimbursementsTitle,r)}),t.benefits.forEach(function(e){i.addProperty(e,i.componentTitle.benefitsTitle,r)})):r.days=t.statusDescription,n.push(r)}),this.adviceRegister=n},i.prototype.addProperty=function(e,t,i){e.componentName in t||(t[e.componentName]=e),i[e.componentName]=e.amount||0},i.prototype.AddNonDeductionColumn=function(e){var t=this;this.gridSettings.columnDefs.push({name:e.componentName,displayName:e.componentTitle,cellClass:"ui-grid-cell non-deduction",width:200,cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="(row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.Executed.id || row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.FinalSettlement.id)">{{(grid.getCellValue(row, col) | currency:"") || 0}}</div>',headerCellClass:"non-deduction",cellTooltip:!0,headerTooltip:!0,type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=t.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1})},i.prototype.AddDeductionColumn=function(e){var t=this;this.gridSettings.columnDefs.push({name:e.componentName,displayName:e.componentTitle,cellClass:"ui-grid-cell deduction",width:200,cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="(row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.Executed.id || row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.FinalSettlement.id)">{{(grid.getCellValue(row, col) | currency:"") || 0}}</div>',headerCellClass:"deduction",cellTooltip:!0,headerTooltip:!0,type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=t.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1})},i.$inject=["PayrollRunReportService","AppSettings","$timeout","EmployeePayrollCycleRunStatus","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService","Gender"],i}(t.IMonthlyReportController),c=function(e){function t(t,i,n,o,r){var a=e.call(this,r)||this;return a.payrollRunReportService=t,a.appSettings=i,a.workerType=n,a.cycleRunStatus=o,a.initGridSettings(),a}return __extends(t,e),t.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!1,this.gridSettings.rowHeight=50,this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",enableGrouping:!1},{field:"displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.displayName}}">{{row.entity.displayName}}</a></div>',cellTooltip:!0,headerCellTooltip:!0,enableGrouping:!1},{field:"dateJoined",displayName:"Date Joined",cellFilter:'date: "dd-MMM-yyyy"',groupingShowAggregationMenu:!1},{field:"workerType",displayName:"Worker Type",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.groupHeader"><span> {{grid.appScope.ctrl.workerType.getById(row.entity.workerType).name}} </span></div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{COL_FIELD}}</div>',groupingShowAggregationMenu:!1,customTreeAggregationFinalizerFn:function(e){e&&e.groupVal&&(1==e.groupVal?e.rendered="Permanent ("+e.value+")":2==e.groupVal&&(e.rendered="Contract ("+e.value+")"))}},{field:"payrollStatus",displayName:"Payroll Status",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.groupHeader"><span>{{grid.appScope.ctrl.cycleRunStatus.getById(row.entity.payrollStatus).title}}</span></div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{COL_FIELD}}</div>',groupingShowAggregationMenu:!1,customTreeAggregationFinalizerFn:function(t){t&&t.groupVal>=0&&(t.rendered=e.cycleRunStatus.getById(t.groupVal).title+" ("+t.value+")")}},{field:"errorMessage",displayName:"Reason",groupingShowAggregationMenu:!1}],this.gridSettings.data="ctrl.employeePayrollStatus | filter : ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},t.prototype.exportReport=function(e){this.payrollRunReportService.exportNewJoineePayrollStatus(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"})},t.prototype.getReportData=function(e){var t=this;this.selectReportDate(e)&&this.payrollRunReportService.getNewJoineePayrollStatus(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year).then(function(e){t.employeePayrollStatus=e})},t.$inject=["PayrollRunReportService","AppSettings","WorkerType","EmployeePayrollCycleRunStatus","PayGroupsAndConfigurationService"],t}(t.IMonthlyReportController),p=function(e){function t(t,i,n,o,r){var a=e.call(this,r)||this;return a.payrollRunReportService=t,a.appSettings=i,a.workerType=n,a.cycleRunStatus=o,a.initGridSettings(),a}return __extends(t,e),t.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!1,this.gridSettings.rowHeight=50,this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",enableGrouping:!1},{field:"displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.displayName}}">{{row.entity.displayName}}</a></div>',cellTooltip:!0,headerCellTooltip:!0,enableGrouping:!1},{field:"dateJoined",displayName:"Date Joined",cellFilter:'date: "dd-MMM-yyyy"',groupingShowAggregationMenu:!1},{field:"exitDate",displayName:"Exit Date",cellFilter:'date: "dd-MMM-yyyy"',groupingShowAggregationMenu:!1},{field:"workerType",displayName:"Worker Type",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.groupHeader"><span> {{grid.appScope.ctrl.workerType.getById(row.entity.workerType).name}} </span></div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{COL_FIELD}}</div>',groupingShowAggregationMenu:!1,customTreeAggregationFinalizerFn:function(e){e&&e.groupVal&&(1==e.groupVal?e.rendered="Permanent ("+e.value+")":2==e.groupVal&&(e.rendered="Contract ("+e.value+")"))}},{field:"payrollStatus",displayName:"Payroll Status",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.groupHeader"><span>{{grid.appScope.ctrl.cycleRunStatus.getById(row.entity.payrollStatus).title}}</span></div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{COL_FIELD}}</div>',groupingShowAggregationMenu:!1,customTreeAggregationFinalizerFn:function(t){t&&t.groupVal>=0&&(t.rendered=e.cycleRunStatus.getById(t.groupVal).title+" ("+t.value+")")}},{field:"errorMessage",displayName:"Reason",groupingShowAggregationMenu:!1}],this.gridSettings.data="ctrl.employeePayrollStatus | filter : ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},t.prototype.exportReport=function(e){this.payrollRunReportService.exportExitsPayrollStatus(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"})},t.prototype.getReportData=function(e){var t=this;this.selectReportDate(e)&&this.payrollRunReportService.getExitsPayrollStatus(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year).then(function(e){t.employeePayrollStatus=e})},t.$inject=["PayrollRunReportService","AppSettings","WorkerType","EmployeePayrollCycleRunStatus","PayGroupsAndConfigurationService"],t}(t.IMonthlyReportController),u=function(e){function t(t,i,n,o,r){var a=e.call(this,r)||this;return a.payrollRunReportService=t,a.appSettings=i,a.workerType=n,a.cycleRunStatus=o,a.initGridSettings(),a}return __extends(t,e),t.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!1,this.gridSettings.rowHeight=50,this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",enableGrouping:!1},{field:"displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.displayName}}">{{row.entity.displayName}}</a></div>',cellTooltip:!0,headerCellTooltip:!0,enableGrouping:!1},{field:"dateJoined",displayName:"Date Joined",cellFilter:'date: "dd-MMM-yyyy"',groupingShowAggregationMenu:!1},{field:"workerType",displayName:"Worker Type",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.groupHeader"><span> {{grid.appScope.ctrl.workerType.getById(row.entity.workerType).name}} </span></div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{COL_FIELD}}</div>',groupingShowAggregationMenu:!1,customTreeAggregationFinalizerFn:function(e){e&&e.groupVal&&(1==e.groupVal?e.rendered="Permanent ("+e.value+")":2==e.groupVal&&(e.rendered="Contract ("+e.value+")"))}},{field:"monthName",displayName:"Month Name",groupingShowAggregationMenu:!1},{field:"payrollStatus",displayName:"Payroll Status",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.groupHeader"><span>{{grid.appScope.ctrl.cycleRunStatus.getById(row.entity.payrollStatus).title}}</span></div><div class="ui-grid-cell-contents">{{COL_FIELD}}</div>',groupingShowAggregationMenu:!1,customTreeAggregationFinalizerFn:function(t){t&&t.groupVal>=0&&(t.rendered=e.cycleRunStatus.getById(t.groupVal).title+" ("+t.value+")")}},{field:"errorMessage",displayName:"Reason",cellTooltip:!0,groupingShowAggregationMenu:!1}],this.gridSettings.data="ctrl.employeePayrollStatus | filter : ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},t.prototype.exportReport=function(e){this.payrollRunReportService.exportAllEmployeePayrollStatus(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"})},t.prototype.getReportData=function(e){var t=this;this.selectReportDate(e)&&(this.employeePayrollStatus=[],this.payrollRunReportService.getAllEmployeePayrollStatus(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year).then(function(e){t.employeePayrollStatus=e,t.queueGridRefresh()}))},t.$inject=["PayrollRunReportService","AppSettings","WorkerType","EmployeePayrollCycleRunStatus","PayGroupsAndConfigurationService"],t}(t.IMonthlyReportController),d=function(e){function t(t,i,n,o,r,a,s,l,c){var p=e.call(this,l)||this;return p.payrollRunReportService=t,p.appSettings=i,p.workerType=n,p.timeoutService=o,p.employeePayrollCycleRunStatus=r,p.uiGridGroupingConstants=a,p.uiGridExtensions=s,p.gender=c,p.allEmployees=[],p}return __extends(t,e),t.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.employeeNumber}}">{{row.entity.employeeNumber}}</a></div>',enablePinning:!0,pinnedLeft:!0,width:120,enableGrouping:!1},{field:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',enablePinning:!0,pinnedLeft:!0,width:120,enableGrouping:!1},{field:"dateJoined",displayName:"Date Joined",cellFilter:"date: dd-MMM-yyyy",width:120,enablePinning:!0,pinnedLeft:!0,groupingShowAggregationMenu:!1},{name:"gender",displayName:"Gender",enablePinning:!0,cellClass:"ui-grid-cell emp-name",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-class="{error: !row.entity[col.name]}"><span data-ng-if="row.entity[col.name]">{{grid.appScope.ctrl.gender.getById(row.entity.gender).title}}</span><span data-ng-if="!row.entity[col.name]">Not Available</span></div>',width:100,enableGrouping:!1},{name:"dateOfBirth",displayName:"Date of Birth",enablePinning:!0,cellClass:"ui-grid-cell emp-name",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-class="{error: !row.entity[col.name]}"><span data-ng-if="row.entity.dateOfBirth != null">{{ row.entity.dateOfBirth | date:"dd-MMM-yyyy" }}</span><span data-ng-if="row.entity.dateOfBirth == null">Not Available</span></div>',width:150,enableGrouping:!1},{field:"panNumber",displayName:"PAN Number",width:130,enableGrouping:!1},{field:"workerType",displayName:"Work Type",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.groupHeader"><span> {{grid.appScope.ctrl.workerType.getById(row.entity.workerType).name}} </span></div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{COL_FIELD}}</div>',width:120,groupingShowAggregationMenu:!1,customTreeAggregationFinalizerFn:function(e){1==e.groupVal?e.rendered="Permanent":2==e.groupVal&&(e.rendered="Contract")}},{field:"timeType",displayName:"Time Type",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.groupHeader"> <span data-ng-if="row.entity.timeType == 1">Full Time</span> <span data-ng-if="row.entity.timeType == 2">Contract</span></div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{COL_FIELD}}</div>',width:120,groupingShowAggregationMenu:!1,customTreeAggregationFinalizerFn:function(e){1==e.groupVal?e.rendered="Full Time":2==e.groupVal&&(e.rendered="Contract")}},{field:"designation",displayName:"Designation",width:150,groupingShowAggregationMenu:!1},{field:"department",displayName:"Department",width:150,groupingShowAggregationMenu:!1},{field:"location",displayName:"Location",width:120,groupingShowAggregationMenu:!1},{field:"state",displayName:"State",width:120,groupingShowAggregationMenu:!1},{field:"bankName",displayName:"Bank",width:150,groupingShowAggregationMenu:!1},{field:"bankAccountNo",displayName:"Bank Account No",width:150,enableGrouping:!1},{field:"ifscCode",displayName:"IFSC",width:100,groupingShowAggregationMenu:!1},{field:"salaryPaymentMode",displayName:"Salary Payment Mode",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.groupHeader"> <span data-ng-if="row.entity.salaryPaymentMode == 1">Bank Transfer</span> <span data-ng-if="row.entity.salaryPaymentMode == 2">Cheque</span> <span data-ng-if="row.entity.salaryPaymentMode == 3">Cash</span></div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{COL_FIELD}}</div>',customTreeAggregationFinalizerFn:function(e){1==e.groupVal?e.rendered="Bank Transfer":2==e.groupVal?e.rendered="Cheque":3==e.groupVal&&(e.rendered="Cash")},width:120,groupingShowAggregationMenu:!1},{field:"esiNumber",displayName:"ESI Number",width:150,enableGrouping:!1},{field:"pfNumber",displayName:"PF Number",width:150,enableGrouping:!1},{field:"pfuanNumber",displayName:"PF UAN Number",width:150,enableGrouping:!1}],Object.keys(this.componentTitle.earningsTitle).forEach(function(t){e.AddNonDeductionColumn(e.componentTitle.earningsTitle[t])}),this.AddNonDeductionColumn({componentTitle:"Gross(A)",componentName:"grossAmount"}),Object.keys(this.componentTitle.benefitsTitle).length>0&&(Object.keys(this.componentTitle.benefitsTitle).forEach(function(t){e.AddNonDeductionColumn(e.componentTitle.benefitsTitle[t])}),this.AddNonDeductionColumn({componentTitle:"Total",componentName:"total"})),Object.keys(this.componentTitle.contributionsTitle).forEach(function(t){e.AddDeductionColumn(e.componentTitle.contributionsTitle[t])}),this.AddDeductionColumn({componentName:"totalContributions",componentTitle:"Total Contributions(B)"}),Object.keys(this.componentTitle.deductionsTitle).forEach(function(t){e.AddDeductionColumn(e.componentTitle.deductionsTitle[t])}),this.AddDeductionColumn({componentName:"totalDeductions",componentTitle:"Total Deductions(C)"}),Object.keys(this.componentTitle.reimbursementsTitle).forEach(function(t){e.AddNonDeductionColumn(e.componentTitle.reimbursementsTitle[t])}),this.AddNonDeductionColumn({componentName:"totalReimbursements",componentTitle:"Total Reimbursements(D)"}),this.AddNonDeductionColumn({componentName:"totalNetPay",componentTitle:"Total Net Pay(A-B-C+D)"}),this.AddNonDeductionColumn({componentName:"totalCost",componentTitle:"Total Cost"}),this.gridSettings.data="ctrl.allEmployees | filter: ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},t.prototype.exportReport=function(e){this.payrollRunReportService.exporGroupwiseSalarySummary(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"})},t.prototype.getReportData=function(e){var t=this;this.selectReportDate(e)&&this.payrollRunReportService.getGroupwiseSalarySummary(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year).then(function(e){t.componentTitle={earningsTitle:{},contributionsTitle:{},deductionsTitle:{},reimbursementsTitle:{},benefitsTitle:{}},t.applyPayRegisterData(e.allEmployeesMonthlySalaryDetails),t.initGridSettings(),t.timeoutService(function(){window.dispatchEvent(new Event("resize"))},200)})},t.prototype.applyPayRegisterData=function(e){var t=this,i=[];angular.forEach(e,function(e,n){var o=angular.extend({},e);Object.keys(e.earnings).forEach(function(i){t.addProperty(e.earnings[i],t.componentTitle.earningsTitle,o)}),Object.keys(e.contributions).forEach(function(i){t.addProperty(e.contributions[i],t.componentTitle.contributionsTitle,o)}),Object.keys(e.deductions).forEach(function(i){t.addProperty(e.deductions[i],t.componentTitle.deductionsTitle,o)}),Object.keys(e.reimbursements).forEach(function(i){t.addProperty(e.reimbursements[i],t.componentTitle.reimbursementsTitle,o)}),Object.keys(e.benefits).forEach(function(i){t.addProperty(e.benefits[i],t.componentTitle.benefitsTitle,o)}),i.push(o)}),this.allEmployees=i},t.prototype.addProperty=function(e,t,i){e.componentName in this.componentTitle.earningsTitle||(t[e.componentName]=e),i[e.componentName]=e.amount||0},t.prototype.AddNonDeductionColumn=function(e){var t=this;this.gridSettings.columnDefs.push({name:e.componentName,displayName:e.componentTitle,cellClass:"ui-grid-cell non-deduction",width:200,cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="(row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.Executed.id || row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.FinalSettlement.id)">{{(grid.getCellValue(row, col) | currency:"") || 0}}</div>',headerCellClass:"non-deduction",cellTooltip:!0,headerTooltip:!0,type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=t.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1})},t.prototype.AddDeductionColumn=function(e){var t=this;this.gridSettings.columnDefs.push({name:e.componentName,displayName:e.componentTitle,cellClass:"ui-grid-cell deduction",width:200,cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="(row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.Executed.id || row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.FinalSettlement.id)">{{(grid.getCellValue(row, col) | currency:"") || 0}}</div>',headerCellClass:"deduction",cellTooltip:!0,headerTooltip:!0,type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=t.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1})},t.$inject=["PayrollRunReportService","AppSettings","WorkerType","$timeout","EmployeePayrollCycleRunStatus","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService","Gender"],t}(t.IMonthlyReportController),m=function(e){function t(t,i,n,o){var r=e.call(this,o)||this;return r.payrollRunReportService=t,r.appSettings=i,r.cycleRunStatus=n,r.initGridSettings(),r}return __extends(t,e),t.prototype.initGridSettings=function(){this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!1,this.gridSettings.rowHeight=50,this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",enableGrouping:!1},{field:"displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.summary({id:row.entity.id})" title="{{row.entity.displayName}}">{{row.entity.displayName}}</a></div>',cellTooltip:!0,headerCellTooltip:!0,enableGrouping:!1},{field:"dateJoined",displayName:"Date Joined",cellFilter:'date: "dd-MMM-yyyy"',groupingShowAggregationMenu:!1},{field:"exitDate",displayName:"Exit Date",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.groupHeader"><span data-ng-if="row.entity.exitDate">{{row.entity.exitDate | date: "dd-MMM-yyyy"}}</span><span data-ng-if="!row.entity.exitDate">NA</span></div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{COL_FIELD}}</div>',groupingShowAggregationMenu:!1},{name:"employmentStatus",displayName:"Status",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.groupHeader"><span class="badge active" data-ng-if="row.entity.isNewEmployee">New Joinee</span><span class="badge inactive" data-ng-if="row.entity.isExitEmployee">Exited</span></div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{COL_FIELD}}</div>',customTreeAggregationFinalizerFn:function(e){1==e.groupVal?e.rendered="Exited":0==e.groupVal&&(e.rendered="New Joinee")},enableSorting:!1,groupingShowAggregationMenu:!1}],this.gridSettings.data="ctrl.employeeData | filter : ctrl.searchText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},t.prototype.exportReport=function(e){this.payrollRunReportService.exportHeadCountReport(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"})},t.prototype.getReportData=function(e){var t=this;this.selectReportDate(e)&&this.payrollRunReportService.getHeadCountSummary(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year).then(function(e){t.headCountData=e;var i={};e.newEmployees.forEach(function(e){i[e.id]=e}),t.employeeData=e.newEmployees.concat(e.exitEmployees.filter(function(e){return!(e.id in i)}))})},t.$inject=["PayrollRunReportService","AppSettings","EmployeePayrollCycleRunStatus","PayGroupsAndConfigurationService"],t}(t.IMonthlyReportController),y=function(e){function t(t,i,n){var o=e.call(this,n)||this;return o.payrollRunReportService=t,o.appSettings=i,o.initGridSettings(),o}return __extends(t,e),t.prototype.initGridSettings=function(){},t.prototype.exportReport=function(e){this.payrollRunReportService.exportSalaryJVReport(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"})},t.prototype.getReportData=function(e){var t=this;this.selectReportDate(e)&&this.payrollRunReportService.getSalaryJournalVoucher(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year).then(function(e){t.salaryJvdata=e})},t.$inject=["PayrollRunReportService","AppSettings","PayGroupsAndConfigurationService"],t}(t.IMonthlyReportController),h=function(t){function i(i,n,o,r,a,s,l,c,p){var u=t.call(this,c)||this;return u.payrollRunReportService=i,u.appSettings=n,u.$q=o,u.payrollLookUpService=r,u.lookupServices=a,u.sharedModel=s,u.filter=l,u.PayrollModel=p,u.initDisbursalOutsidePayrollPayments=function(){u.alreadyPaidPaymentsGridOptions=angular.copy(u.appSettings.gridSettings),u.alreadyPaidPaymentsGridOptions.rowHeight=40,u.alreadyPaidPaymentsGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",cellTooltip:!0},{field:"employeeName",displayName:"Employee",cellTooltip:!0},{field:"monthName",displayName:"Month"},{field:"amount",displayName:"Amount",cellFilter:'currency:"":0'},{field:"disburalmode",displayName:"Disbursal Mode",cellTemplate:'<div class="ui-grid-cell-contents">Outside Payroll</div>'}],u.alreadyPaidPaymentsGridOptions.data="batch.payments | filter : vm.searchText"},u.init=function(){u.$q.all([u.payrollRunReportService.getBatchPaymentsSummary(u.payrollConfiguration.payGroupId,u.reportDate.month,u.reportDate.year),u.lookupServices.lookup.query({id:"banks"}).$promise,u.payrollLookUpService.getBankaccounts(u.payrollConfiguration.payFundConfig.legalEntityId)]).then(function(t){u.employeePayables=[],u.bankDetails={};var i={};t[2].forEach(function(e){this[e.id]=e},i),t[1].forEach(function(e){e.isTransferStatmentPresent=i.hasOwnProperty(e.id),this[e.id]=e},u.bankDetails);var n=t[0],o=(n.allPayments||[]).filter(function(e){return!e.disbursalWithInPayroll}),r=(n.allPayments||[]).filter(function(e){return e.disbursalWithInPayroll}),a=u.filter("groupBy")(r,"paymentForName"),s=u.filter("groupBy")(n.allBatches,"paymentForName");Object.keys(a).forEach(function(t){var i=u.filter("groupBy")(a[t].map(function(t){return new e.Model.Payment(t)}),"batchId"),n=[];s.hasOwnProperty(t)&&s[t].forEach(function(t){t.payments=i[t.id]||[],this.push(new e.Model.BatchPayment(t))},n);var o=a[t][0].paymentFor,r="";switch(o){case e.Model.PaymentFor.Salary:r="Salaries";break;case e.Model.PaymentFor.Bonus:r="Bonuses";break;case e.Model.PaymentFor.Reimbursement:r="Expenses";break;case e.Model.PaymentFor.CashAdvance:r="Cash Advances";break;case e.Model.PaymentFor.SalaryComponent:r=(u.payrollConfiguration.getSupportedComponent(t)||{}).title}u.employeePayables.push(new e.Model.EmployeePayables({paymentForName:t,paymentFor:o,pendingPayments:i.null,batches:n,title:r}))}),u.addAlreadyPaidPayments(o)},function(e){})},u.initGridSettings(),u.initDisbursalOutsidePayrollPayments(),u}return __extends(i,t),i.prototype.initGridSettings=function(){this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.rowHeight=40,this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee"},{field:"monthName",displayName:"Month"},{field:"amount",displayName:"Amount",cellFilter:"currency:'':2"},{field:"paymentMode",displayName:"Payment Mode"},{field:"bankDetails.bankName",displayName:"Bank Name",cellTooltip:function(e,t){return e.entity.bankDetails.bankName}},{field:"bankDetails.ifscCode",displayName:"IFSCCode",cellTooltip:function(e,t){return e.entity.bankDetails.bankName}}],this.gridSettings.data="batch.payments | filter : ctrl.filterText"},i.prototype.exportReport=function(e,t){this.payrollRunReportService.exportBatchPaymentReport(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,batchId:t,format:e||"excel"})},i.prototype.exportconsolidateReport=function(e,t){this.payrollRunReportService.exportConsolidatedBatchPaymentReport(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,batchId:t,format:e||"excel"})},i.prototype.exportOutsidePayrollPaymentReport=function(){this.payrollRunReportService.exportOutsidePayrollPaymentReport(this.selectedPayGroup.id,{month:this.reportDate.month,year:this.reportDate.year,format:"excel"})},i.prototype.getReportData=function(e){this.selectReportDate(e)&&this.init()},i.prototype.addAlreadyPaidPayments=function(t){if(t.length>0){var i={name:"Already Paid",status:e.Model.PaymentStatus.Paid,paymentForName:"alreadyPaid",paymentFor:e.Model.PaymentFor.None,payments:t,disbursalWithInPayroll:!1};this.employeePayables.push(new e.Model.EmployeePayables({paymentForName:"alreadyPaid",paymentFor:"alreadyPaid",pendingPayments:[],batches:[i],title:"Already Paid"}))}},i.$inject=["PayrollRunReportService","AppSettings","$q","PayrollLookUpService","LookupServices","SharedModel","$filter","PayGroupsAndConfigurationService","PayrollModel"],i}(t.IMonthlyReportController),function(e){function i(t,i,n,o,r,a,s,l){var c=e.call(this,l)||this;return c.payrollYTDReportService=t,c.appSettings=i,c.timeoutService=o,c.uiGridGroupingConstants=r,c.uiGridExtensions=a,c.modalService=s,c.dynamicColumnsTitle={},c.salaryYTDDetails=[],c}__extends(i,e),i.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[this.getColumn({name:"employeeNumber",displayName:"Employee Number"}),this.getColumn({name:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.managetax.declaration({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>'}),this.getColumn({name:"panNumber",displayName:"PAN Number"}),this.getColumn({name:"jobTitle",displayName:"Job Title"}),this.getColumn({name:"department",displayName:"Department"})],Object.keys(this.dynamicColumnsTitle.earningsTitle).forEach(function(t){var i=e.dynamicColumnsTitle.earningsTitle[t];e.gridSettings.columnDefs.push(e.getColumn({name:i.componentName,displayName:i.componentTitle,uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions,cellFilter:"currency:'':2"}))}),Object.keys(this.dynamicColumnsTitle.benefitsTitle).forEach(function(t){var i=e.dynamicColumnsTitle.benefitsTitle[t];e.gridSettings.columnDefs.push(e.getColumn({name:i.componentName,displayName:i.componentTitle,uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions,cellFilter:"currency:'':2"}))}),Object.keys(this.dynamicColumnsTitle.contributionsTitle).forEach(function(t){var i=e.dynamicColumnsTitle.contributionsTitle[t];e.gridSettings.columnDefs.push(e.getColumn({name:i.componentName,displayName:i.componentTitle,uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions,cellFilter:"currency:'':2"}))}),Object.keys(this.dynamicColumnsTitle.deductionsTitle).forEach(function(t){var i=e.dynamicColumnsTitle.deductionsTitle[t];e.gridSettings.columnDefs.push(e.getColumn({name:i.componentName,displayName:i.componentTitle,cellFilter:"currency:'':2"}))}),Object.keys(this.dynamicColumnsTitle.reimbursementsTitle).forEach(function(t){var i=e.dynamicColumnsTitle.reimbursementsTitle[t];e.gridSettings.columnDefs.push(e.getColumn({name:i.componentName,displayName:i.componentTitle,uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions,cellFilter:"currency:'':2"}))}),this.gridSettings.columnDefs.push(this.getColumn({name:"Action",displayName:"Details",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" data-ng-click="grid.appScope.ctrl.openComponentWiseReport(row.entity.employeeId)" title="{{row.entity.employeeName}}"> VIEW DETAILS</a></div>'})),this.gridSettings.columnVirtualizationThreshold=200,this.gridSettings.data="ctrl.salaryYTDDetails | filter: ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},i.prototype.getReportData=function(){var e=this;this.payrollYTDReportService.getSalaryYtdReport(this.payrollConfiguration.payGroupId,this.fromMonth.getDateOnlyString(),this.toMonth.getDateOnlyString()).then(function(i){e.dynamicColumnsTitle={earningsTitle:{},contributionsTitle:{},deductionsTitle:{},reimbursementsTitle:{},benefitsTitle:{}},e.salaryYTDDetails=i.map(function(i){var n=new t.model.SalaryYTDGridRow(i);return i.earnings.forEach(function(t){n.addPropertyBasedOnComponent(t,e.dynamicColumnsTitle.earningsTitle)}),i.benefits.forEach(function(t){n.addPropertyBasedOnComponent(t,e.dynamicColumnsTitle.benefitsTitle)}),i.contributions.forEach(function(t){n.addPropertyBasedOnComponent(t,e.dynamicColumnsTitle.contributionsTitle)}),i.deductions.forEach(function(t){n.addPropertyBasedOnComponent(t,e.dynamicColumnsTitle.deductionsTitle)}),i.reimbursements.forEach(function(t){n.addPropertyBasedOnComponent(t,e.dynamicColumnsTitle.reimbursementsTitle)}),n}),e.initGridSettings(),e.queueGridRefresh()})},i.prototype.openComponentWiseReport=function(e){var t=this;this.modalService.open({templateUrl:"employeeComponentsYTDReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll",controller:"EmployeeComponentWiseReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1,resolve:{payrollConfiguration:function(){return t.payrollConfiguration},currentFinancialYear:function(){return t.currentFinancialYear},lastFinalizedCycle:function(){return t.lastFinalizedCycle},employeeId:function(){return e},fromMonth:function(){return t.fromMonth},toMonth:function(){return t.toMonth}}})},i.prototype.exportReport=function(e){this.payrollYTDReportService.exportSalaryYTDReport(this.payrollConfiguration.payGroupId,{groupId:this.payrollConfiguration.payGroupId,fromMonth:this.fromMonth.getDateOnlyString(),toMonth:this.toMonth.getDateOnlyString(),format:e,searchKey:(this.filterText||"").trim()})},i.$inject=["PayrollRunReportService","AppSettings","PayrollModel","$timeout","uiGridGroupingConstants","UiGridExtensions","$uibModal","PayGroupsAndConfigurationService"]}(t.IMonthRangeReportController),f=function(t){function i(e,i,n,o,r,a,s){var l=t.call(this,s)||this;return l.payrollRunReportService=e,l.appSettings=i,l.timeoutService=n,l.employeePayrollCycleRunStatus=o,l.uiGridGroupingConstants=r,l.uiGridExtensions=a,l.adviceRegister=[],l}return __extends(i,t),i.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[this.getColumn({name:"status",displayName:"",width:50,enablePinning:!0,pinnedLeft:!0,cellClass:"status-box",cellTemplate:'<span class="advice-status" data-ng-class="{\'not-run\' : (row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.Executed.id && row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.FinalSettlement.id)}"></span>'}),this.getColumn({name:"employeeNumber",displayName:"Employee Number",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumn({name:"name",displayName:"Employee Name",enablePinning:!0,pinnedLeft:!0,cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.payslips({id:row.entity.employeeId})" title="{{row.entity.employee}}">{{row.entity.employee}}</a></div>',cellClass:"ui-grid-cell  emp-name"}),this.getColumnWithDefaultTemplate({name:"department",displayName:"Department",defaultValue:"Not Available",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumnWithDefaultTemplate({name:"panNumber",displayName:"PAN Number",defaultValue:"Not Available",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumn({name:"monthName",displayName:"payroll Month",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"})],Object.keys(this.componentTitle.earningsTitle).forEach(function(t){e.AddNonDeductionColumn(e.componentTitle.earningsTitle[t])}),this.AddNonDeductionColumn({componentTitle:"Arrear Gross(A)",componentName:"gross"}),Object.keys(this.componentTitle.benefitsTitle).length>0&&(Object.keys(this.componentTitle.benefitsTitle).forEach(function(t){e.AddNonDeductionColumn(e.componentTitle.benefitsTitle[t])}),this.AddNonDeductionColumn({componentTitle:"Total",componentName:"total"})),Object.keys(this.componentTitle.contributionsTitle).forEach(function(t){e.AddDeductionColumn(e.componentTitle.contributionsTitle[t])}),this.AddDeductionColumn({componentName:"totalContributions",componentTitle:"Total Contributions(B)"}),Object.keys(this.componentTitle.deductionsTitle).forEach(function(t){e.AddDeductionColumn(e.componentTitle.deductionsTitle[t])}),this.AddDeductionColumn({componentName:"totalDeductions",componentTitle:"Total Deductions(C)"}),Object.keys(this.componentTitle.reimbursementsTitle).forEach(function(t){e.AddNonDeductionColumn(e.componentTitle.reimbursementsTitle[t])}),this.gridSettings.data="ctrl.adviceRegister | filter : ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},i.prototype.exportReport=function(e){this.payrollRunReportService.exportMonthlyArrearBreakupComponentBreakUp(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"})},i.prototype.getReportData=function(e){var t=this;this.selectReportDate(e)&&this.payrollRunReportService.getMonthlyArrearBreakupSummary(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year).then(function(e){t.componentTitle={earningsTitle:{},contributionsTitle:{},deductionsTitle:{},reimbursementsTitle:{},benefitsTitle:{}},t.applyPayRegisterData(e),t.initGridSettings(),t.timeoutService(function(){window.dispatchEvent(new Event("resize"))},200)})},i.prototype.applyPayRegisterData=function(t){var i=this,n=[];angular.forEach(t,function(t,o){var r=new e.Model.PayRegisterGridRow(t);t.status==i.employeePayrollCycleRunStatus.Executed.id||t.status==i.employeePayrollCycleRunStatus.FinalSettlement.id?(t.earnings.forEach(function(e){i.addProperty(e,i.componentTitle.earningsTitle,r)}),t.contributions.forEach(function(e){i.addProperty(e,i.componentTitle.contributionsTitle,r)}),t.deductions.forEach(function(e){i.addProperty(e,i.componentTitle.deductionsTitle,r)}),t.reimbursements.forEach(function(e){i.addProperty(e,i.componentTitle.reimbursementsTitle,r)}),t.benefits.forEach(function(e){i.addProperty(e,i.componentTitle.benefitsTitle,r)})):r.days=t.statusDescription,n.push(r)}),this.adviceRegister=n},i.prototype.addProperty=function(e,t,i){e.componentName in t||(t[e.componentName]=e),i[e.componentName]=e.amount||0},i.prototype.AddNonDeductionColumn=function(e){var t=this;this.gridSettings.columnDefs.push({name:e.componentName,displayName:e.componentTitle,cellClass:"ui-grid-cell non-deduction",width:200,cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="(row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.Executed.id || row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.FinalSettlement.id)">{{(grid.getCellValue(row, col) | currency:"") || 0}}</div>',headerCellClass:"non-deduction",cellTooltip:!0,headerTooltip:!0,type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=t.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1})},i.prototype.AddDeductionColumn=function(e){var t=this;this.gridSettings.columnDefs.push({name:e.componentName,displayName:e.componentTitle,cellClass:"ui-grid-cell deduction",width:200,cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="(row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.Executed.id || row.entity.status != grid.appScope.ctrl.employeePayrollCycleRunStatus.FinalSettlement.id)">{{(grid.getCellValue(row, col) | currency:"") || 0}}</div>',headerCellClass:"deduction",cellTooltip:!0,headerTooltip:!0,type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=t.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1})},i.$inject=["PayrollRunReportService","AppSettings","$timeout","EmployeePayrollCycleRunStatus","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],i}(t.IMonthlyReportController),g=function(e){function t(t,i,n,o,r){var a=e.call(this,r)||this;return a.payrollRunReportService=t,a.appSettings=i,a.uiGridGroupingConstants=n,a.uiGridExtensions=o,a.transactionType="Deductions",a.initGridSettings(),a}return __extends(t,e),t.prototype.initGridSettings=function(){this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[this.getColumn({name:"employeeNumber",displayName:"Employee Number",width:"*",groupingShowAggregationMenu:!1}),this.getColumn({name:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.payslips({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',defaultValue:"Not Available",width:"*",groupingShowAggregationMenu:!1}),this.getColumn({name:"panNumber",displayName:"PAN Number",defaultValue:"Not Available",width:"*",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumn({name:"jobTitle",displayName:"Job Title",defaultValue:"Not Available",width:"*",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumn({name:"department",displayName:"Department",defaultValue:"Not Available",width:"*",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumn({name:"transactionCategory",displayName:"Deduction Name",defaultValue:"Not Available",width:"*",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumn({name:"amount",displayName:"Amount",defaultValue:"Not Available",width:"*",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions}),this.getColumn({name:"comment",displayName:"Comment",defaultValue:"Not Available",width:"*",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"})],this.gridSettings.rowHeight=50,this.gridSettings.onRegisterApi=this.onRegisterGridApi,this.gridSettings.data="ctrl.oneTimeTransactionsReportData | filter : ctrl.filterText"},t.prototype.exportReport=function(e){this.payrollRunReportService.exportMonthlyOneTimeDeductionReport(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"})},t.prototype.getReportData=function(e){var t=this;this.selectReportDate(e)&&this.payrollRunReportService.getMonthlyOneTimeDeductionReport(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year).then(function(e){t.oneTimeTransactionsReportData=e,t.queueGridRefresh(),t.initGridSettings()})},t.$inject=["PayrollRunReportService","AppSettings","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],t}(t.IMonthlyReportController),v=function(e){function t(t,i,n,o,r){var a=e.call(this,r)||this;return a.payrollRunReportService=t,a.appSettings=i,a.uiGridGroupingConstants=n,a.uiGridExtensions=o,a.transactionType="Payments",a.initGridSettings(),a}return __extends(t,e),t.prototype.initGridSettings=function(){this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[this.getColumn({name:"employeeNumber",displayName:"Employee Number",width:"*",groupingShowAggregationMenu:!1}),this.getColumn({name:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.payslips({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',defaultValue:"Not Available",width:"*",groupingShowAggregationMenu:!1}),this.getColumn({name:"panNumber",displayName:"PAN Number",defaultValue:"Not Available",width:"*",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumn({name:"jobTitle",displayName:"Job Title",defaultValue:"Not Available",width:"*",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumn({name:"department",displayName:"Department",defaultValue:"Not Available",width:"*",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumn({name:"transactionCategory",displayName:"Payment Name",defaultValue:"Not Available",width:"*",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumn({name:"amount",displayName:"Amount",defaultValue:"Not Available",width:"*",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions}),this.getColumn({name:"comment",displayName:"Comment",defaultValue:"Not Available",width:"*",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name"})],this.gridSettings.rowHeight=50,this.gridSettings.onRegisterApi=this.onRegisterGridApi,this.gridSettings.data="ctrl.oneTimeTransactionsReportData | filter : ctrl.filterText"},t.prototype.exportReport=function(e){this.payrollRunReportService.exportMonthlyOneTimePaymentReport(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"})},t.prototype.getReportData=function(e){var t=this;this.selectReportDate(e)&&this.payrollRunReportService.getMonthlyOneTimePaymentReport(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year).then(function(e){t.oneTimeTransactionsReportData=e,t.queueGridRefresh(),t.initGridSettings()})},t.$inject=["PayrollRunReportService","AppSettings","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],t}(t.IMonthlyReportController),angular.module("payroll").controller("PRComponentCompareController",i).controller("PRComponentAggregatesController",n).controller("EmployeeReconciliationReportController",o).controller("GrosscomponentReconciliationController",r).controller("ContributionReconciliationController",a).controller("PRMonthlyComponentBreakupController",s).controller("PRMonthlyComponentBreakupWithFinancialDetailsController",l).controller("PRNewJoineePayrollStatusController",c).controller("PRExitsPayrollStatusController",p).controller("PREmployeePayrollStatusReportController",u).controller("GroupwiseSalarySumamryReportController",d).controller("HeadCountReportController",m).controller("PRTallyJournalVoucherReportController",y).controller("MonthlyBatchPaymentController",h).controller("PRMonthlyArrearReportController",f).controller("OneTimeDeductionReportController",g).controller("OneTimePaymentReportController",v)}(e.reports||(e.reports={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(t){var i,n,o,r,a,s;t.runYTDReports||(t.runYTDReports={}),i=function(e){function i(t,i,n,o,r,a,s,l,c,p,u){var d=e.call(this,u,p)||this;return d.PayrollYTDReportService=t,d.appSettings=i,d.timeoutService=o,d.uiGridGroupingConstants=r,d.uiGridExtensions=a,d.dynamicColumnsTitle={},d.employeeComponentYTDDetails=[],d.employeeID=s,d.fromMonth=l,d.toMonth=c,d}return __extends(i,e),i.prototype.selectDefaultValue=function(){var e=this,t=this.yearList.find(function(t){return t.year==e.fromMonth.year}).months.find(function(t){return t.month==e.fromMonth.month}),i=this.yearList.find(function(t){return t.year==e.toMonth.year}).months.find(function(t){return t.month==e.toMonth.month});this.setDefaultValue(t,i)},i.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[this.getColumn({name:"componentTitle",displayName:"Component"})],this.gridSettings.columnDefs.push(this.getColumn({name:"totalAmount",displayName:"TOTAL",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),Object.keys(this.dynamicColumnsTitle.monthlyAmount).forEach(function(t){e.dynamicColumnsTitle.monthlyAmount[t];e.gridSettings.columnDefs.push(e.getColumn({name:t,displayName:t,uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions}))}),this.gridSettings.columnVirtualizationThreshold=200,this.gridSettings.data="ctrl.employeeComponentYTDDetails | filter: ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},i.prototype.getReportData=function(){var e=this;this.PayrollYTDReportService.getEmployeeAllComponentsYTDReport(this.payrollConfiguration.payGroupId,this.employeeID,this.fromMonth.getDateOnlyString(),this.toMonth.getDateOnlyString()).then(function(i){e.employeeName=i.employeeName,e.dynamicColumnsTitle={monthlyAmount:{},totalAmount:{}},e.employeeComponentYTDDetails=[],Object.keys(i.earnings).forEach(function(n){var o=new t.model.EmployeeComponentsYTDGridRow(i.earnings[n]);Object.keys(i.earnings[n].monthlyAmount).forEach(function(t){o.addPropertyBasedOnComponent(t,i.earnings[n].monthlyAmount[t],e.dynamicColumnsTitle.monthlyAmount)}),e.employeeComponentYTDDetails.push(o)}),Object.keys(i.contributions).forEach(function(n){var o=new t.model.EmployeeComponentsYTDGridRow(i.contributions[n]);Object.keys(i.contributions[n].monthlyAmount).forEach(function(t){o.addPropertyBasedOnComponent(t,i.contributions[n].monthlyAmount[t],e.dynamicColumnsTitle.monthlyAmount)}),e.employeeComponentYTDDetails.push(o)}),Object.keys(i.deductions).forEach(function(n){var o=new t.model.EmployeeComponentsYTDGridRow(i.deductions[n]);Object.keys(i.deductions[n].monthlyAmount).forEach(function(t){o.addPropertyBasedOnComponent(t,i.deductions[n].monthlyAmount[t],e.dynamicColumnsTitle.monthlyAmount)}),e.employeeComponentYTDDetails.push(o)}),Object.keys(i.cashAdvances).forEach(function(n){var o=new t.model.EmployeeComponentsYTDGridRow(i.cashAdvances[n]);Object.keys(i.cashAdvances[n].monthlyAmount).forEach(function(t){o.addPropertyBasedOnComponent(t,i.cashAdvances[n].monthlyAmount[t],e.dynamicColumnsTitle.monthlyAmount)}),e.employeeComponentYTDDetails.push(o)}),Object.keys(i.cashAdvanceSettlements).forEach(function(n){var o=new t.model.EmployeeComponentsYTDGridRow(i.cashAdvanceSettlements[n]);Object.keys(i.cashAdvanceSettlements[n].monthlyAmount).forEach(function(t){o.addPropertyBasedOnComponent(t,i.cashAdvanceSettlements[n].monthlyAmount[t],e.dynamicColumnsTitle.monthlyAmount)}),e.employeeComponentYTDDetails.push(o)}),Object.keys(i.reimbursements).forEach(function(n){var o=new t.model.EmployeeComponentsYTDGridRow(i.reimbursements[n]);Object.keys(i.reimbursements[n].monthlyAmount).forEach(function(t){o.addPropertyBasedOnComponent(t,i.reimbursements[n].monthlyAmount[t],e.dynamicColumnsTitle.monthlyAmount)}),e.employeeComponentYTDDetails.push(o)})}).then(function(){e.initGridSettings(),e.queueGridRefresh()})},i.prototype.exportReport=function(e){this.PayrollYTDReportService.exportEmployeeAllComponentsYTDReport(this.payrollConfiguration.payGroupId,this.employeeID,{groupId:this.payrollConfiguration.payGroupId,fromMonth:this.fromMonth.getDateOnlyString(),toMonth:this.toMonth.getDateOnlyString(),format:e,searchKey:(this.filterText||"").trim()})},i.$inject=["PayrollYTDReportService","AppSettings","PayrollModel","$timeout","uiGridGroupingConstants","UiGridExtensions","employeeId","fromMonth","toMonth","selectedPayGroupId","PayGroupsAndConfigurationService"],i}(t.IMonthRangeReportController),n=function(e){function i(t,i,n,o,r,a,s,l){var c=e.call(this,l)||this;return c.payrollYTDReportService=t,c.appSettings=i,c.timeoutService=o,c.uiGridGroupingConstants=r,c.uiGridExtensions=a,c.modalService=s,c.dynamicColumnsTitle={},c.salaryYTDDetails=[],c}return __extends(i,e),i.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[this.getColumn({name:"employeeNumber",displayName:"Employee Number"}),this.getColumn({name:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.managetax.declaration({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>'}),this.getColumn({name:"panNumber",displayName:"PAN Number"}),this.getColumn({name:"jobTitle",displayName:"Job Title"}),this.getColumn({name:"department",displayName:"Department"})],Object.keys(this.dynamicColumnsTitle.earningsTitle).forEach(function(t){var i=e.dynamicColumnsTitle.earningsTitle[t];e.gridSettings.columnDefs.push(e.getColumn({name:i.componentName,displayName:i.componentTitle,uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions,cellFilter:"currency:'':2"}))}),Object.keys(this.dynamicColumnsTitle.benefitsTitle).forEach(function(t){var i=e.dynamicColumnsTitle.benefitsTitle[t];e.gridSettings.columnDefs.push(e.getColumn({name:i.componentName,displayName:i.componentTitle,uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions,cellFilter:"currency:'':2"}))}),Object.keys(this.dynamicColumnsTitle.contributionsTitle).forEach(function(t){var i=e.dynamicColumnsTitle.contributionsTitle[t];e.gridSettings.columnDefs.push(e.getColumn({name:i.componentName,displayName:i.componentTitle,uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions,cellFilter:"currency:'':2"}))}),Object.keys(this.dynamicColumnsTitle.deductionsTitle).forEach(function(t){var i=e.dynamicColumnsTitle.deductionsTitle[t];e.gridSettings.columnDefs.push(e.getColumn({name:i.componentName,displayName:i.componentTitle,uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions,cellFilter:"currency:'':2"}))}),this.doesCashAdvanceExists&&this.gridSettings.columnDefs.push(this.getColumn({name:"cashAdvanceAmount",displayName:"Cash Advance",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions,cellFilter:"currency:'':2"})),this.doesCashAdvanceSettlementExists&&this.gridSettings.columnDefs.push(this.getColumn({name:"cashAdvanceSettlementAmount",displayName:"Settlement Aganist Advance",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions,cellFilter:"currency:'':2"})),Object.keys(this.dynamicColumnsTitle.reimbursementsTitle).forEach(function(t){var i=e.dynamicColumnsTitle.reimbursementsTitle[t];e.gridSettings.columnDefs.push(e.getColumn({name:i.componentName,displayName:i.componentTitle,uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions,cellFilter:"currency:'':2"}))}),this.gridSettings.columnDefs.push(this.getColumn({name:"Action",displayName:"Details",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" data-ng-click="grid.appScope.ctrl.openComponentWiseReport(row.entity.employeeId)" title="{{row.entity.employeeName}}"> VIEW DETAILS</a></div>'})),this.gridSettings.columnVirtualizationThreshold=200,this.gridSettings.data="ctrl.salaryYTDDetails | filter: ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},i.prototype.getReportData=function(){var e=this;this.payrollYTDReportService.getSalaryYtdReport(this.payrollConfiguration.payGroupId,this.fromMonth.getDateOnlyString(),this.toMonth.getDateOnlyString()).then(function(i){e.dynamicColumnsTitle={earningsTitle:{},contributionsTitle:{},deductionsTitle:{},reimbursementsTitle:{},benefitsTitle:{}},e.salaryYTDDetails=i.map(function(i){var n=new t.model.SalaryYTDGridRow(i);return i.earnings.forEach(function(t){n.addPropertyBasedOnComponent(t,e.dynamicColumnsTitle.earningsTitle)}),i.benefits.forEach(function(t){n.addPropertyBasedOnComponent(t,e.dynamicColumnsTitle.benefitsTitle)}),i.contributions.forEach(function(t){n.addPropertyBasedOnComponent(t,e.dynamicColumnsTitle.contributionsTitle)}),i.deductions.forEach(function(t){n.addPropertyBasedOnComponent(t,e.dynamicColumnsTitle.deductionsTitle)}),i.reimbursements.forEach(function(t){n.addPropertyBasedOnComponent(t,e.dynamicColumnsTitle.reimbursementsTitle)}),e.doesCashAdvanceExists=e.doesCashAdvanceExists||i.cashAdvanceAmount>0,e.doesCashAdvanceSettlementExists=e.doesCashAdvanceSettlementExists||0!=i.cashAdvanceSetlementAmount,n}),e.initGridSettings(),e.queueGridRefresh()})},i.prototype.openComponentWiseReport=function(e){var t=this;this.modalService.open({templateUrl:"employeeComponentsYTDReport",windowClass:"full-screen-modal payroll-modal payroll-forms-container no-scroll",controller:"EmployeeComponentWiseReportController",controllerAs:"ctrl",keyboard:!1,backdrop:!1,resolve:{employeeId:function(){return e},selectedPayGroupId:function(){return t.selectedPayGroup.id},fromMonth:function(){return t.fromMonth},toMonth:function(){return t.toMonth}}})},i.prototype.exportReport=function(e){this.payrollYTDReportService.exportSalaryYTDReport(this.payrollConfiguration.payGroupId,{groupId:this.payrollConfiguration.payGroupId,fromMonth:this.fromMonth.getDateOnlyString(),toMonth:this.toMonth.getDateOnlyString(),format:e,searchKey:(this.filterText||"").trim()})},i.$inject=["PayrollYTDReportService","AppSettings","PayrollModel","$timeout","uiGridGroupingConstants","UiGridExtensions","$uibModal","PayGroupsAndConfigurationService"],i}(t.IMonthRangeReportController),o=function(e){function i(t,i,n,o,r,a,s){var l=e.call(this,s)||this;return l.payrollYTDReportService=t,l.appSettings=i,l.timeoutService=o,l.uiGridGroupingConstants=r,l.uiGridExtensions=a,l.dynamicColumnsTitle={},l.grossYTDDetails=[],l}return __extends(i,e),i.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[this.getColumn({name:"employeeNumber",displayName:"Employee Number"}),this.getColumn({name:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.managetax.declaration({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>'}),this.getColumn({name:"panNumber",displayName:"PAN Number"}),this.getColumn({name:"jobTitle",displayName:"Job Title"}),this.getColumn({name:"department",displayName:"Department"})],this.gridSettings.columnDefs.push(this.getColumn({name:"totalAmount",displayName:"GROSS TOTAL",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions,cellFilter:"currency:'':2"})),Object.keys(this.dynamicColumnsTitle.monthlyAmount).forEach(function(t){e.dynamicColumnsTitle.monthlyAmount[t];e.gridSettings.columnDefs.push(e.getColumn({name:t,displayName:t,uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions,cellFilter:"currency:'':2"}))}),this.gridSettings.columnVirtualizationThreshold=200,this.gridSettings.data="ctrl.grossYTDDetails | filter: ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},i.prototype.getReportData=function(){var e=this;this.payrollYTDReportService.getGrossYtdReport(this.selectedPayGroup.id,this.fromMonth.getDateOnlyString(),this.toMonth.getDateOnlyString()).then(function(i){e.dynamicColumnsTitle={monthlyAmount:{},totalAmount:{}},e.grossYTDDetails=i.map(function(i){var n=new t.model.ComponentYTDGridRow(i);return Object.keys(i.monthlyAmount).forEach(function(t){n.addPropertyBasedOnComponent(t,i.monthlyAmount[t],e.dynamicColumnsTitle.monthlyAmount)}),n}),e.initGridSettings(),e.queueGridRefresh()})},i.prototype.exportReport=function(e){this.payrollYTDReportService.exportGrossYTDReport(this.payrollConfiguration.payGroupId,{groupId:this.payrollConfiguration.payGroupId,fromMonth:this.fromMonth.getDateOnlyString(),toMonth:this.toMonth.getDateOnlyString(),format:e,searchKey:(this.filterText||"").trim()})},i.$inject=["PayrollYTDReportService","AppSettings","PayrollModel","$timeout","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],i}(t.IMonthRangeReportController),r=function(e){function i(t,i,n,o,r,a,s){var l=e.call(this,s)||this;return l.payrollYTDReportService=t,l.appSettings=i,l.timeoutService=o,l.uiGridGroupingConstants=r,l.uiGridExtensions=a,l.dynamicColumnsTitle={},l.tdsYTDDetails=[],l}return __extends(i,e),i.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[this.getColumn({name:"employeeNumber",displayName:"Employee Number"}),this.getColumn({name:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.managetax.declaration({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>'}),this.getColumn({name:"panNumber",displayName:"PAN Number"}),this.getColumn({name:"jobTitle",displayName:"Job Title"}),this.getColumn({name:"department",displayName:"Department"})],this.gridSettings.columnDefs.push(this.getColumn({name:"totalAmount",displayName:"TDS TOTAL",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),Object.keys(this.dynamicColumnsTitle.monthlyAmount).forEach(function(t){e.dynamicColumnsTitle.monthlyAmount[t];e.gridSettings.columnDefs.push(e.getColumn({name:t,displayName:t,cellFilter:"currency:'':2",uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions}))}),this.gridSettings.columnVirtualizationThreshold=200,this.gridSettings.data="ctrl.tdsYTDDetails | filter: ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},i.prototype.getReportData=function(){var e=this;this.payrollYTDReportService.getTDSYtdReport(this.payrollConfiguration.payGroupId,this.fromMonth.getDateOnlyString(),this.toMonth.getDateOnlyString()).then(function(i){e.dynamicColumnsTitle={monthlyAmount:{},totalAmount:{}},e.tdsYTDDetails=i.map(function(i){var n=new t.model.ComponentYTDGridRow(i);return Object.keys(i.monthlyAmount).forEach(function(t){n.addPropertyBasedOnComponent(t,i.monthlyAmount[t],e.dynamicColumnsTitle.monthlyAmount)}),n}),e.initGridSettings(),e.queueGridRefresh()})},i.prototype.exportReport=function(e){this.payrollYTDReportService.exportTDSYTDReport(this.payrollConfiguration.payGroupId,{groupId:this.payrollConfiguration.payGroupId,fromMonth:this.fromMonth.getDateOnlyString(),toMonth:this.toMonth.getDateOnlyString(),format:e,searchKey:(this.filterText||"").trim()})},i.$inject=["PayrollYTDReportService","AppSettings","PayrollModel","$timeout","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],i}(t.IMonthRangeReportController),a=function(e){function i(t,i,n,o,r,a,s){var l=e.call(this,s)||this;return l.payrollYTDReportService=t,l.appSettings=i,l.timeoutService=o,l.uiGridGroupingConstants=r,l.uiGridExtensions=a,l.dynamicColumnsTitle={},l.pfYTDDetails=[],l}return __extends(i,e),i.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[this.getColumn({name:"employeeNumber",displayName:"Employee Number",enablePinning:!0,pinnedLeft:!0}),this.getColumn({name:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.managetax.declaration({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',enablePinning:!0,pinnedLeft:!0}),this.getColumn({name:"panNumber",displayName:"PAN Number"}),this.getColumn({name:"jobTitle",displayName:"Job Title"}),this.getColumn({name:"department",displayName:"Department"})],this.gridSettings.columnDefs.push(this.getColumn({name:"pfTotalAmount",displayName:"PF Employee TOTAL",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),this.gridSettings.columnDefs.push(this.getColumn({name:"pfEmployerTotalAmount",displayName:"PF Employer TOTAL",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions})),Object.keys(this.dynamicColumnsTitle.monthlyAmount).forEach(function(t){e.gridSettings.columnDefs.push(e.getColumn({name:t,displayName:t,cellFilter:"currency:'':2",uiGridGroupingConstants:e.uiGridGroupingConstants,uiGridExtensions:e.uiGridExtensions}))}),this.gridSettings.columnVirtualizationThreshold=200,this.gridSettings.data="ctrl.pfYTDDetails | filter: ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},i.prototype.getReportData=function(){var e=this;this.payrollYTDReportService.getPFYtdReport(this.payrollConfiguration.payGroupId,this.fromMonth.getDateOnlyString(),this.toMonth.getDateOnlyString()).then(function(i){e.dynamicColumnsTitle={monthlyAmount:{}},e.pfYTDDetails=i.map(function(i){var n=new t.model.PFYTDGridRow(i);return Object.keys(i.monthlyAmount).forEach(function(t){n.addPropertyBasedOnComponent(t,i.monthlyAmount[t],e.dynamicColumnsTitle.monthlyAmount)}),n}),e.initGridSettings(),e.queueGridRefresh()})},i.prototype.exportReport=function(e){this.payrollYTDReportService.exportPFYTDReport(this.payrollConfiguration.payGroupId,{groupId:this.payrollConfiguration.payGroupId,fromMonth:this.fromMonth.getDateOnlyString(),toMonth:this.toMonth.getDateOnlyString(),format:e,searchKey:(this.filterText||"").trim()})},i.$inject=["PayrollYTDReportService","AppSettings","PayrollModel","$timeout","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],i}(t.IMonthRangeReportController),s=function(t){function i(e,i,n,o,r,a,s){var l=t.call(this,s)||this;return l.payrollYTDReportService=e,l.appSettings=i,l.timeoutService=o,l.uiGridGroupingConstants=r,l.uiGridExtensions=a,l.configService=s,l.monthOnmonthYTDDetails=[],l}return __extends(i,t),i.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[this.getColumn({name:"employeeNumber",displayName:"Employee Number",enablePinning:!0,pinnedLeft:!0,cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.payslips({id:row.entity.employeeId})" title="{{row.entity.employeeNumber}}">{{row.entity.employeeNumber}}</a></div>',cellClass:"ui-grid-cell  emp-name"}),this.getColumn({name:"employeeName",displayName:"Employee Name",enablePinning:!0,pinnedLeft:!0,cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.payslips({id:row.entity.employeeId})" title="{{row.entity.employee}}">{{row.entity.employee}}</a></div>',cellClass:"ui-grid-cell  emp-name"}),this.getColumn({name:"dateJoined",displayName:"Date of joining",enablePinning:!0,cellClass:"ui-grid-cell emp-name",cellFilter:'date:"dd MMM yyyy"'}),this.getColumn({name:"monthName",displayName:"Payroll Month",enablePinning:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumnWithDefaultTemplate({name:"location",displayName:"Location",defaultValue:"Not Available",enablePinning:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumnWithDefaultTemplate({name:"department",displayName:"Department",defaultValue:"Not Available",enablePinning:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumnWithDefaultTemplate({name:"panNumber",displayName:"PAN Number",defaultValue:"Not Available",enablePinning:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumnWithDefaultTemplate({name:"paymentMode",displayName:"Payment Mode",defaultValue:"Not Available",enablePinning:!0,cellClass:"ui-grid-cell emp-name"}),this.getColumnWithDefaultTemplate({name:"bankName",displayName:"Bank Name",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if=row.entity.paymentMode ==  \'BankTransfer\'">{{grid.getCellValue(row, col)}}</span></div>',enablePinning:!0}),this.getColumnWithDefaultTemplate({name:"accountNumber",enablePinning:!0,cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.paymentMode ==  \'BankTransfer\'">{{grid.getCellValue(row, col)}}</span></div>'}),this.getColumnWithDefaultTemplate({name:"ifscCode",displayName:"IFSC code",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.paymentMode ==  \'BankTransfer\'">{{grid.getCellValue(row, col)}}</span></div>',enablePinning:!0}),this.getColumn({name:"days",displayName:"Days",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell days"})],Object.keys(this.componentTitle.earningsTitle).forEach(function(t){e.AddNonDeductionColumn(e.componentTitle.earningsTitle[t])}),this.AddNonDeductionColumn({componentTitle:"Gross(A)",componentName:"gross"}),Object.keys(this.componentTitle.benefitsTitle).length>0&&(Object.keys(this.componentTitle.benefitsTitle).forEach(function(t){e.AddNonDeductionColumn(e.componentTitle.benefitsTitle[t])}),this.AddNonDeductionColumn({componentTitle:"Total",componentName:"total"})),Object.keys(this.componentTitle.contributionsTitle).forEach(function(t){e.AddDeductionColumn(e.componentTitle.contributionsTitle[t])}),this.AddDeductionColumn({componentName:"totalContributions",componentTitle:"Total Contributions(B)"}),Object.keys(this.componentTitle.deductionsTitle).forEach(function(t){e.AddDeductionColumn(e.componentTitle.deductionsTitle[t])}),this.AddDeductionColumn({componentName:"totalDeductions",componentTitle:"Total Deductions(C)"}),this.AddNonDeductionColumn({componentName:"cashAdvanceAmount",componentTitle:"Cash Advance(D)"}),this.AddNonDeductionColumn({componentName:"cashAdvanceSettlementAmount",componentTitle:"Settlement Aganist Advance(E)"}),Object.keys(this.componentTitle.reimbursementsTitle).forEach(function(t){e.AddNonDeductionColumn(e.componentTitle.reimbursementsTitle[t])}),this.AddNonDeductionColumn({componentName:"totalReimbursements",componentTitle:"Total Reimbursements(F)"}),this.AddNonDeductionColumn({componentName:"netPay",componentTitle:"Total Net Pay(A-B-C+D+E+F)"}),this.gridSettings.data="ctrl.monthOnmonthYTDDetails | filter : ctrl.filterText",this.gridSettings.onRegisterApi=this.onRegisterGridApi},i.prototype.getReportData=function(){var e=this;this.payrollYTDReportService.getEmployeesMonthOnMonthYTDReport(this.payrollConfiguration.payGroupId,this.fromMonth.getDateOnlyString(),this.toMonth.getDateOnlyString()).then(function(t){e.componentTitle={earningsTitle:{},contributionsTitle:{},deductionsTitle:{},reimbursementsTitle:{},benefitsTitle:{}},e.applyPayRegisterData(t),e.initGridSettings(),e.queueGridRefresh()})},i.prototype.exportReport=function(e){this.payrollYTDReportService.exportMonthOnMonthYTDReport(this.payrollConfiguration.payGroupId,{groupId:this.payrollConfiguration.payGroupId,fromMonth:this.fromMonth.getDateOnlyString(),toMonth:this.toMonth.getDateOnlyString(),format:e,searchKey:(this.filterText||"").trim()})},i.prototype.applyPayRegisterData=function(t){var i=this,n=[];angular.forEach(t,function(t,o){var r=new e.Model.PayRegisterwithBankDetailsGridRow(t);t.earnings.forEach(function(e){i.addProperty(e,i.componentTitle.earningsTitle,r)}),t.contributions.forEach(function(e){i.addProperty(e,i.componentTitle.contributionsTitle,r)}),t.deductions.forEach(function(e){i.addProperty(e,i.componentTitle.deductionsTitle,r)}),t.reimbursements.forEach(function(e){i.addProperty(e,i.componentTitle.reimbursementsTitle,r)}),t.benefits.forEach(function(e){i.addProperty(e,i.componentTitle.benefitsTitle,r)}),n.push(r)}),this.monthOnmonthYTDDetails=n},i.prototype.addProperty=function(e,t,i){e.componentName in t||(t[e.componentName]=e),i[e.componentName]=e.amount||0},i.prototype.AddNonDeductionColumn=function(e){var t=this;this.gridSettings.columnDefs.push({name:e.componentName,displayName:e.componentTitle,cellClass:"ui-grid-cell non-deduction",width:200,cellTemplate:'<div class="ui-grid-cell-contents">{{(grid.getCellValue(row, col)) || 0}}</div>',headerCellClass:"non-deduction",cellTooltip:!0,headerTooltip:!0,type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=t.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1})},i.prototype.AddDeductionColumn=function(e){var t=this;this.gridSettings.columnDefs.push({name:e.componentName,displayName:e.componentTitle,cellClass:"ui-grid-cell deduction",width:200,cellTemplate:'<div class="ui-grid-cell-contents">{{(grid.getCellValue(row, col) | currency:"") || 0}}</div>',headerCellClass:"deduction",cellTooltip:!0,headerTooltip:!0,type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=t.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1})},i.$inject=["PayrollYTDReportService","AppSettings","PayrollModel","$timeout","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],i}(t.IMonthRangeReportController),angular.module("payroll").controller("TDSYTDReportController",r).controller("EmployeeComponentWiseReportController",i).controller("GrossYTDReportController",o).controller("PFYTDReportController",a).controller("SalaryYTDReportController",n).controller("EmployeesMonthOnMonthYTDReportController",s)}(e.reports||(e.reports={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(t){var i,n,o;t.LoanReports||(t.LoanReports={}),i=function(i){function n(n,o,r,a,s){var l=i.call(this,t.model.PayrollReportType.None)||this;l.loanReportService=n,l.appSettings=o,l.uiGridGroupingConstants=r,l.uiGridExtensions=a,l.configService=s,l.loanRequestStatus=e.loan.model.LoanRequestStatus,l.fromDateValid=!0;var c=new Date;return l.model={},l.model.fromDate=new Date(c.setDate(c.getDate()-30)),l.model.toDate=new Date((new Date).setHours(23,59,59,999)),l.getLoanRequestReportData(l.model.fromDate,l.model.toDate),l.initGridSettings(),l}return __extends(n,i),n.prototype.initGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.showColumnFooter=!0,this.gridOptions.columnDefs=[this.getColumn({name:"employeeNumber",displayName:"Employee Number",groupingShowAggregationMenu:!1}),this.getColumn({name:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.loans.outstanding({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',groupingShowAggregationMenu:!1}),this.getColumn({name:"loanAmount",displayName:"Loan Amount",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.currency.code}} {{(row.entity.loanAmount | currency:"") || 0}}</span></div>',uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions,groupingShowAggregationMenu:!1}),this.getColumn({name:"expectedDate",displayName:"Expected Date",groupingShowAggregationMenu:!1}),this.getColumn({name:"emiStartDate",displayName:"EMI Start Date",groupingShowAggregationMenu:!1}),this.getColumn({name:"repaymentTerm",displayName:"Actual Repayment Term"}),this.getColumn({name:"comment",displayName:"Comment",groupingShowAggregationMenu:!1}),this.getColumn({name:"requestedOn",displayName:"Requested On",groupingShowAggregationMenu:!1}),this.getColumn({name:"requestedName",displayName:"Requested By",groupingShowAggregationMenu:!1}),this.getColumn({name:"status",displayName:"Status",groupingShowAggregationMenu:!1}),this.getColumn({name:"actionTakenBy",displayName:"Action Taken By",groupingShowAggregationMenu:!1}),this.getColumn({name:"actionTakenOn",displayName:"Action Taken On",groupingShowAggregationMenu:!1})],this.gridOptions.data="ctrl.loanRequests | filter : ctrl.filterText",this.gridOptions.appScopeProvider=this,this.gridOptions.enableHorizontalScrollbar=!0,this.gridOptions.rowHeight=50,this.gridOptions.onRegisterApi=this.onRegisterGridApi},n.prototype.getLoanRequestReportData=function(e,t){var i=this;if(this.validateDates(e,t),this.fromDateValid){var n=e?e.dateOnlyString():"",o=t?t.dateOnlyString():"";this.loanReportService.getLoanRequestReport(n,o).then(function(e){i.loanRequests=e})}},n.prototype.validateDates=function(e,t){this.fromDateValid=e&&t&&new Date(e).getTime()<=new Date(t).getTime()},n.prototype.exportReport=function(e){if(this.validateDates(this.model.fromDate,this.model.toDate),this.fromDateValid){this.loanReportService.exportLoanRequestReport({FromMonth:this.model.fromDate,ToMonth:this.model.toDate,Format:e||"excel"}).then(function(e){}),this.queueGridRefresh()}},n.$inject=["LoanReportService","AppSettings","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],n}(t.IReportController),n=function(e){function i(t,i,n,o,r){var a=e.call(this,r)||this;return a.loanReportService=t,a.appSettings=i,a.uiGridGroupingConstants=n,a.uiGridExtensions=o,a.initGridSettings(),a}return __extends(i,e),i.prototype.initGridSettings=function(){this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.showColumnFooter=!0,this.gridSettings.columnDefs=[this.getColumn({name:"employeeNumber",displayName:"Employee Number",groupingShowAggregationMenu:!1}),this.getColumn({name:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.loans.outstanding({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',width:"*",groupingShowAggregationMenu:!1}),this.getColumn({name:"loanAmount",displayName:"Loan Amount",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.currency.code}} {{(row.entity.loanAmount | currency:"") || 0}}</span></div>',uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions}),this.getColumn({name:"loanReleasedOn",displayName:"Loan Released Date",groupingShowAggregationMenu:!1}),this.getColumn({name:"interestCalculationMethod",displayName:"Interest Calculation Method",width:"*",groupingShowAggregationMenu:!1}),this.getColumn({name:"rateOfInterest",displayName:"Rate Of Interest"}),this.getColumn({name:"paymentMode",displayName:"EMI Payment Mode",width:"*",groupingShowAggregationMenu:!1}),this.getColumn({name:"emiAmount",displayName:"EMI Amount",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions,width:"*"})],this.gridSettings.rowHeight=50,this.gridSettings.onRegisterApi=this.onRegisterGridApi,this.gridSettings.data="ctrl.loanEMIReportData | filter : ctrl.filterText"},i.prototype.exportReport=function(e){this.loanReportService.exportMonthlyLoanEMIReport(new t.model.MonthlyExportRequest({groupId:this.payrollConfiguration.payGroupId,month:this.reportDate.month,year:this.reportDate.year,format:e||"excel",searchKey:(this.filterText||"").trim()}))},i.prototype.getReportData=function(e){var t=this;this.selectReportDate(e)&&this.loanReportService.getMonthlyLoanEMIReport(this.payrollConfiguration.payGroupId,this.reportDate.month,this.reportDate.year).then(function(e){t.loanEMIReportData=e,t.queueGridRefresh()})},i.$inject=["LoanReportService","AppSettings","uiGridGroupingConstants","UiGridExtensions","PayGroupsAndConfigurationService"],i}(t.IMonthlyReportController),o=function(i){function n(n,o,r,a){var s=i.call(this,t.model.PayrollReportType.None)||this;s.loanReportService=n,s.appSettings=o,s.uiGridGroupingConstants=r,s.uiGridExtensions=a,s.fromDateValid=!0;var l=new Date;return s.model={},s.model.fromDate=new Date(l.setDate(l.getDate()-30)),s.model.toDate=new Date((new Date).setHours(23,59,59,999)),s.datePickerOptions=angular.copy(o.datepickerOptions),s.toDatePickerOptions=angular.extend(s.datePickerOptions,{minDate:s.model.fromDate}),s.loanRepaymentStatus=e.loan.model.RepaymentStatus,s.getLoanStatusReportData(s.model.fromDate,s.model.toDate),s.initGridSettings(),s}return __extends(n,i),n.prototype.initGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.showColumnFooter=!0,this.gridOptions.columnDefs=[this.getColumn({name:"employeeNumber",displayName:"Employee Number",groupingShowAggregationMenu:!1}),this.getColumn({name:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="{{grid.appScope.loanRepaymentStatus.Repaid == row.entity.status ? \'employee.finances.loans.cleared({id:row.entity.employeeId})\' : \'employee.finances.loans.outstanding({id:row.entity.employeeId})\' }}" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',groupingShowAggregationMenu:!1,groupingShowGroupingMenu:!0}),this.getColumn({name:"loanAmount",displayName:"Loan Amount",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.currency.code}} {{(row.entity.loanAmount| currency:"") || 0}}</span></div>',uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions,groupingShowAggregationMenu:!1}),this.getColumn({name:"loanReleasedOn",displayName:"loan Released On",cellFilter:'date:"dd MMM yyyy"'}),this.getColumn({name:"status",displayName:"Status",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.appScope.loanRepaymentStatus.getById(row.entity.status)}}</div>',groupingShowAggregationMenu:!1,groupingShowGroupingMenu:!0}),this.getColumn({name:"interestCalculationMethod",displayName:"Interest Calculation Method",groupingShowAggregationMenu:!1,groupingShowGroupingMenu:!0}),this.getColumn({name:"rateOfInterest",displayName:"Rate Of Interest",groupingShowGroupingMenu:!0}),this.getColumn({name:"emiStartsFrom",displayName:"EMI Starts From",cellFilter:'date:"dd MMM yyyy"',groupingShowAggregationMenu:!1}),this.getColumn({name:"repaymentTerm",displayName:"Actual Repayment Term"}),this.getColumn({name:"remainingTerm",displayName:"Remaining Term"}),this.getColumn({name:"outstandingAmount",displayName:"Outstanding Amount",cellFilter:"currency:'':2",uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions}),this.getColumn({name:"notes",displayName:"Notes",width:220})],this.gridOptions.data="ctrl.loanStatus | filter : ctrl.filterText",this.gridOptions.appScopeProvider=this,this.gridOptions.enableHorizontalScrollbar=!0,this.gridOptions.rowHeight=50,this.gridOptions.onRegisterApi=this.onRegisterGridApi},n.prototype.getLoanStatusReportData=function(t,i){var n=this;if(this.validateDates(t,i),this.fromDateValid){var o=t?t.dateOnlyString():"",r=i?i.dateOnlyString():"";this.loanReportService.getLoanStatusReport(o,r).then(function(t){n.loanStatus=t.map(function(t){return new e.reports.model.EmployeeLoanStatusView(t)})})}},n.prototype.validateDates=function(e,t){this.fromDateValid=e&&t&&new Date(e).getTime()<=new Date(t).getTime()},n.prototype.exportReport=function(e){if(this.validateDates(this.model.fromDate,this.model.toDate),this.fromDateValid){this.loanReportService.exportLoanStatusReport({FromMonth:this.model.fromDate,ToMonth:this.model.toDate,Format:e||"excel"}).then(function(e){}),this.queueGridRefresh()}},n.$inject=["LoanReportService","AppSettings","uiGridGroupingConstants","UiGridExtensions"],n}(t.IReportController),angular.module("payroll").controller("LoanRequestReportController",i).controller("MonthlyLoanEMIReportController",n).controller("LoanStatusReportController",o)}(e.reports||(e.reports={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(t){var i;t.FullandFinalReport||(t.FullandFinalReport={}),i=function(i){function n(e,n,o,r,a){var s=i.call(this,t.model.PayrollReportType.None)||this;s.fullandFinalReportService=e,s.appSettings=n,s.timeoutService=o,s.uiGridGroupingConstants=r,s.uiGridExtensions=a,s.fromDateValid=!0,s.earningsColumns={},s.contributionsColumns={},s.deductionsColumns={},s.reimbursmentsColumns={},s.employeesFandFDetails=[],s.employeefandfdetails=[];var l=new Date;return s.model={},s.model.fromDate=new Date(l.setDate(l.getDate()-30)),s.model.toDate=new Date((new Date).setHours(23,59,59,999)),s.getFullandFinalReport(s.model.fromDate,s.model.toDate),s.initGridSettings(),s}return __extends(n,i),n.prototype.initGridSettings=function(){var e=this;this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.showColumnFooter=!0,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",enablePinning:!0,pinnedLeft:!0,width:150,enableGrouping:!1},{field:"employeeName",displayName:"Employee Name ",cellTemplate:'<div class="ui-grid-cell-contents"><a target="_blank" ui-sref="employee.finances.pay.salary({id:row.entity.employeeId})" title="{{row.entity.employeeName}}">{{row.entity.employeeName}}</a></div>',width:150,enablePinning:!0,pinnedLeft:!0,enableGrouping:!1},{field:"dateofJoining",displayName:"Date of Joining",enablePinning:!0,pinnedLeft:!0,width:150,cellFilter:'date:"dd MMM yyyy"',enableGrouping:!1},{field:"jobTitle",displayName:"Job Title",enablePinning:!0,pinnedLeft:!0,width:150,enableGrouping:!1},{field:"department",displayName:"Department",enablePinning:!0,width:150,enableGrouping:!1},{field:"location",displayName:"Location",enablePinning:!0,width:150,enableGrouping:!1},{field:"panNumber",enablePinning:!0,displayName:"PAN Number",width:150,enableGrouping:!1},{field:"uanNumber",enablePinning:!0,displayName:"uan Number",width:150,enableGrouping:!1},{field:"pfNumber",enablePinning:!0,displayName:"pf Number",width:150,enableGrouping:!1},{field:"esiNumber",enablePinning:!0,displayName:"esi Number",width:150,enableGrouping:!1},{field:"terminationType",enablePinning:!0,displayName:"Termination Type",width:150,enableGrouping:!1},{field:"terminationReason",enablePinning:!0,displayName:"Termination Reason",width:150,enableGrouping:!1},{field:"resignationNote",enablePinning:!0,displayName:"Resignation Note",width:150,enableGrouping:!1},{field:"terminationNoticeDate",enablePinning:!0,displayName:"Termination Notice Date",width:150,cellFilter:'date:"dd MMM yyyy"',enableGrouping:!1},{field:"lastWorkingDay",enablePinning:!0,displayName:"Last Working Day",cellFilter:'date:"dd MMM yyyy"',width:150,enableGrouping:!1},{field:"oktoRehire",enablePinning:!0,displayName:"Ok to Rehire",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col) ? "Yes" : "No"}}</span></div>',width:150,enableGrouping:!1},{field:"comments",enablePinning:!0,displayName:"Comments",width:150,enableGrouping:!1},{field:"noOfPayDays",enablePinning:!0,displayName:"No of Pay Days",width:150,enableGrouping:!1},{field:"lossOfPayDays",enablePinning:!0,displayName:"Loss of Pay Days",width:150,enableGrouping:!1},{field:"leaveEncashmentDays",enablePinning:!0,displayName:"Leave Encashment Days",width:150,enableGrouping:!1}],Object.keys(this.earningsColumns).forEach(function(t){e.AddNonDeductionColumn(e.earningsColumns[t])}),Object.keys(this.contributionsColumns).forEach(function(t){e.AddDeductionColumn(e.contributionsColumns[t])}),Object.keys(this.deductionsColumns).forEach(function(t){e.AddDeductionColumn(e.deductionsColumns[t])}),this.doesCashAdvanceExists&&this.AddNonDeductionColumn({componentName:"cashAdvanceAmount",componentTitle:"Cash Advance"}),this.doesCashAdvanceSettlementExists&&this.AddNonDeductionColumn({componentName:"cashAdvanceSettlementAmount",componentTitle:"Settlement Aganist Advance"}),Object.keys(this.reimbursmentsColumns).forEach(function(t){e.AddNonDeductionColumn(e.reimbursmentsColumns[t])}),this.gridOptions.columnDefs.push({field:"netAmount",displayName:"Net Amount",enablePinning:!0,width:150,enableGrouping:!1}),this.gridOptions.columnDefs.push({field:"netRecovery",displayName:"Net Recovery",enablePinning:!0,width:150,enableGrouping:!1}),this.gridOptions.columnDefs.push({field:"exitRequestStatus",enablePinning:!0,displayName:"Exit Request Status",width:150,enableGrouping:!1}),this.gridOptions.columnDefs.push({field:"settlementDate",displayName:"Settlement Date",enablePinning:!0,width:150,cellFilter:'date:"dd MMM yyyy"',enableGrouping:!1}),this.gridOptions.columnDefs.push({field:"payAction",enablePinning:!0,displayName:"Pay Action",width:150,enableGrouping:!1}),this.gridOptions.onRegisterApi=this.onRegisterGridApi,this.gridOptions.rowHeight=50,this.gridOptions.data="ctrl.employeesFandFDetails | filter : ctrl.filterText",this.gridOptions.appScopeProvider=this},n.prototype.getFullandFinalReport=function(e,t){var i=this;if(this.validateDates(e,t),this.fromDateValid){e=e?e.dateOnlyString():"",t=t?t.dateOnlyString():"";this.fullandFinalReportService.getFullandFinalReport(e,t).then(function(e){i.employeesFandFDetails=e.map(function(e){return i.mapFandFGridRow(e)}),i.initGridSettings(),i.queueGridRefresh()})}},n.prototype.mapFandFGridRow=function(t){var i=this,n=new e.reports.model.FullandFinalGridRow(t);return t.earnings.forEach(function(e){n.addProperty(e,i.earningsColumns)}),t.contributions.forEach(function(e){n.addProperty(e,i.contributionsColumns)}),t.deductions.forEach(function(e){n.addProperty(e,i.deductionsColumns)}),t.reimbursements.forEach(function(e){n.addProperty(e,i.reimbursmentsColumns)}),this.doesCashAdvanceExists=this.doesCashAdvanceExists||t.cashAdvanceAmount>0,this.doesCashAdvanceSettlementExists=this.doesCashAdvanceSettlementExists||0!=t.cashAdvanceSetlementAmount,n},n.prototype.AddNonDeductionColumn=function(e){var t=this;this.gridOptions.columnDefs.push({name:e.componentName,displayName:e.componentTitle,cellClass:"ui-grid-cell non-deduction",width:200,headerCellClass:"non-deduction",cellTemplate:'<div data-ng-if="!row.groupHeader" class="ui-grid-cell-contents">{{ row.entity[col.name] | currency:"":2}}</div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{ COL_FIELD || 0}}</div>',uiGridGroupingConstants:this.uiGridGroupingConstants,uiGridExtensions:this.uiGridExtensions,cellFilter:"currency:'':2",cellTooltip:!0,enablePinning:!0,headerTooltip:!0,type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=t.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1})},n.prototype.AddDeductionColumn=function(e){var t=this;this.gridOptions.columnDefs.push({name:e.componentName,displayName:e.componentTitle,cellClass:"ui-grid-cell deduction",cellTemplate:'<div data-ng-if="!row.groupHeader" class="ui-grid-cell-contents">{{ row.entity[col.name] | currency:"":2}}</div><div class="ui-grid-cell-contents" data-ng-if="row.groupHeader">{{ COL_FIELD || 0}}</div>',width:200,headerCellClass:"deduction",cellTooltip:!0,enablePinning:!0,headerTooltip:!0,type:"number",treeAggregationType:this.uiGridGroupingConstants.aggregation.SUM,customTreeAggregationFinalizerFn:function(e){e.rendered=t.uiGridExtensions.formatAggregation(e)},groupingShowGroupingMenu:!1})},n.prototype.exportReport=function(e){this.validateDates(this.model.fromDate,this.model.toDate),this.fromDateValid&&this.fullandFinalReportService.getFullandFinalReportExport({format:e||"excel",fromMonth:this.model.fromDate.dateOnlyString(),toMonth:this.model.toDate.dateOnlyString(),searchKey:(this.filterText||"").trim()})},n.prototype.validateDates=function(e,t){this.fromDateValid=e&&t&&new Date(e).getTime()<=new Date(t).getTime()},n.$inject=["FullandFinalReportService","AppSettings","$timeout","uiGridGroupingConstants","UiGridExtensions"],n}(t.IReportController),angular.module("payroll").controller("FullandFinalReportsController",i)}(e.reports||(e.reports={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){var t,i,n,o,r,a,s,l,c,p,u,d,m,y;e.complianceReport||(e.complianceReport={}),t=function(e){function t(t,i,n,o){var r=e.call(this,n,i)||this;return r.appSettings=t,r.complianceService=o,r}return __extends(t,e),t.prototype.getReportData=function(e){this.selectedFinancialYear=e},t.prototype.initGridSettings=function(){},t.prototype.onChangeFinancialYear=function(e){this.selectedFinancialYear=e},t.prototype.exportReport=function(e){this.complianceService.exportFormAReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear(),{format:e||"excel"})},t.$inject=["AppSettings","PayrollModel","PayGroupsAndConfigurationService","ComplianceService"],t}(e.IFYReportController),i=function(e){function t(t,i,n,o){var r=e.call(this,n,i)||this;return r.appSettings=t,r.complianceService=o,r}return __extends(t,e),t.prototype.getReportData=function(e){this.selectedFinancialYear=e},t.prototype.initGridSettings=function(){},t.prototype.onChangeFinancialYear=function(e){this.selectedFinancialYear=e},t.prototype.exportReport=function(e){this.complianceService.exportFormCReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear(),{format:e||"excel"})},t.$inject=["AppSettings","PayrollModel","PayGroupsAndConfigurationService","ComplianceService"],t}(e.IFYReportController),n=function(e){function t(t,i,n){var o=e.call(this,n)||this;return o.complianceService=t,o.appSettings=i,o}return __extends(t,e),t.prototype.initGridSettings=function(){},t.prototype.getReportData=function(e){this.selectReportDate(e)},t.prototype.exportReport=function(e){this.complianceService.exportFormDReport(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"})},t.$inject=["ComplianceService","AppSettings","PayGroupsAndConfigurationService"],t}(e.IMonthlyReportController),o=function(e){function t(t,i,n){var o=e.call(this,n)||this;return o.complianceService=t,o.appSettings=i,o}return __extends(t,e),t.prototype.initGridSettings=function(){},t.prototype.getReportData=function(e){this.selectReportDate(e)},t.prototype.exportReport=function(e){this.complianceService.exportFormIIReport(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"})},t.$inject=["ComplianceService","AppSettings","PayGroupsAndConfigurationService"],t}(e.IMonthlyReportController),r=function(e){function t(t,i,n){var o=e.call(this,n)||this;return o.complianceService=t,o.appSettings=i,o}return __extends(t,e),t.prototype.initGridSettings=function(){},t.prototype.getReportData=function(e){this.selectReportDate(e)},t.prototype.exportReport=function(e){this.complianceService.exportAnnexure1AReport(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"})},t.$inject=["ComplianceService","AppSettings","PayGroupsAndConfigurationService"],t}(e.IMonthlyReportController),a=function(e){function t(t,i,n){var o=e.call(this,n)||this;return o.complianceService=t,o.appSettings=i,o}return __extends(t,e),t.prototype.initGridSettings=function(){},t.prototype.getReportData=function(e){this.selectReportDate(e)},t.prototype.exportReport=function(e){this.complianceService.exportFormQTamilNaduReport(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"})},t.$inject=["ComplianceService","AppSettings","PayGroupsAndConfigurationService"],t}(e.IMonthlyReportController),s=function(e){function t(t,i,n){var o=e.call(this,n)||this;return o.complianceService=t,o.appSettings=i,o}return __extends(t,e),t.prototype.initGridSettings=function(){},t.prototype.getReportData=function(e){this.selectReportDate(e)},t.prototype.exportReport=function(e){this.complianceService.exportFormSReport(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"})},t.$inject=["ComplianceService","AppSettings","PayGroupsAndConfigurationService"],t}(e.IMonthlyReportController),l=function(e){function t(t,i,n){var o=e.call(this,n)||this;return o.complianceService=t,o.appSettings=i,o}return __extends(t,e),t.prototype.initGridSettings=function(){},t.prototype.getReportData=function(e){this.selectReportDate(e)},t.prototype.exportReport=function(e){this.complianceService.exportFormQReport(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"})},t.$inject=["ComplianceService","AppSettings","PayGroupsAndConfigurationService"],t}(e.IMonthlyReportController),c=function(e){function t(t,i,n){var o=e.call(this,n)||this;return o.complianceService=t,o.appSettings=i,o}return __extends(t,e),t.prototype.initGridSettings=function(){},t.prototype.getReportData=function(e){this.selectReportDate(e)},t.prototype.exportReport=function(e){this.complianceService.exportFormtReport(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"})},t.$inject=["ComplianceService","AppSettings","PayGroupsAndConfigurationService"],t}(e.IMonthlyReportController),p=function(e){function t(t,i,n,o){var r=e.call(this,n,i)||this;return r.appSettings=t,r.complianceService=o,r.selectedFinancialYear=r.financialYearList[0],r}return __extends(t,e),t.prototype.getReportData=function(e){this.selectedFinancialYear=e},t.prototype.initGridSettings=function(){},t.prototype.onChangeFinancialYear=function(e){this.selectedFinancialYear=e},t.prototype.exportReport=function(e){this.complianceService.exportFormUReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear(),{format:e||"excel"})},t.$inject=["AppSettings","PayrollModel","PayGroupsAndConfigurationService","ComplianceService"],t}(e.IFYReportController),u=function(e){function t(t,i,n,o){var r=e.call(this,n,i)||this;return r.appSettings=t,r.complianceService=o,r.getAvailableHolidayListTypes(),r}return __extends(t,e),t.prototype.getAvailableHolidayListTypes=function(){var e=this;this.complianceService.getHolidaysList().then(function(t){e.holidayList=t,e.selectedHolidayList=e.holidayList[0]})},t.prototype.getReportData=function(e){this.selectedFinancialYear=e},t.prototype.initGridSettings=function(){},t.prototype.onChangeFinancialYear=function(e){this.selectedFinancialYear=e},t.prototype.exportReport=function(e){null!=this.selectedHolidayList&&this.complianceService.exportFormVReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear(),{format:e||"excel",year:this.selectedFinancialYear.from.getFullYear(),holidayListId:this.selectedHolidayList.id})},t.$inject=["AppSettings","PayrollModel","PayGroupsAndConfigurationService","ComplianceService"],t}(e.IFYReportController),d=function(e){function t(t,i,n,o){var r=e.call(this,n,i)||this;return r.appSettings=t,r.complianceService=o,r}return __extends(t,e),t.prototype.getReportData=function(e){this.selectedFinancialYear=e},t.prototype.initGridSettings=function(){},t.prototype.onChangeFinancialYear=function(e){this.selectedFinancialYear=e},t.prototype.exportReport=function(e){this.complianceService.exportForm11Report(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear(),{format:e||"excel"})},t.$inject=["AppSettings","PayrollModel","PayGroupsAndConfigurationService","ComplianceService"],t}(e.IFYReportController),m=function(e){function t(t,i,n,o){var r=e.call(this,n,i)||this;return r.appSettings=t,r.complianceService=o,r}return __extends(t,e),t.prototype.getReportData=function(e){this.selectedFinancialYear=e},t.prototype.initGridSettings=function(){},t.prototype.onChangeFinancialYear=function(e){this.selectedFinancialYear=e},t.prototype.exportReport=function(e){this.complianceService.exportFormXIIIReport(this.payrollConfiguration.payGroupId,this.selectedFinancialYear.from.getFullYear(),{format:e||"excel"})},t.$inject=["AppSettings","PayrollModel","PayGroupsAndConfigurationService","ComplianceService"],t}(e.IFYReportController),y=function(e){function t(t,i,n){var o=e.call(this,n)||this;return o.complianceService=t,o.appSettings=i,o}return __extends(t,e),t.prototype.initGridSettings=function(){},t.prototype.getReportData=function(e){this.selectReportDate(e)},t.prototype.exportReport=function(e){this.complianceService.exportFormPReport(this.payrollConfiguration.payGroupId,{month:this.reportDate.month,year:this.reportDate.year,format:e||"excel"})},t.$inject=["ComplianceService","AppSettings","PayGroupsAndConfigurationService"],t}(e.IMonthlyReportController),angular.module("payroll").controller("FormAController",t).controller("FormCController",i).controller("FormDController",n).controller("FormQController",l).controller("FormTController",c).controller("FormUController",p).controller("FormVController",u).controller("FormIIController",o).controller("FormPController",y).controller("FormQTamilNaduController",a).controller("Annexure1AController",r).controller("FormSController",s).controller("FormXIIIController",m).controller("Form11Controller",d)}(e.reports||(e.reports={}))}(Payroll||(Payroll={})),function(e){!function(e){var t=function(){function t(t,i,n,o,r,a){this.scope=t,this.modalService=i,this.payrollModel=n,this.notificationService=o,this.dialogService=r,this.appSettings=a,this.salaryComponentType=e.Model.salaryComponentTypes,this.availableComponents=[]}return t.prototype.isAutoCalculated=function(e){return isNaN(e.amountExpression)},t.prototype.$onInit=function(){this.buildComponentsGrid()},t.prototype.buildComponentsGrid=function(){var e=this;this.searchComponent="",this.availableComponents.map(function(e){return e.status=!1}),this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.columnDefs=[{name:"componentName",displayName:"Component Name",cellTemplate:'<div class="ui-grid-cell-contents tax-excempt">{{row.entity.title}}</div>'},{name:"componentType",displayName:"Type",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents capitalize">{{grid.appScope.salaryComponentType[row.entity.componentType]}}</div>'},{name:"taxExcempt",displayName:"Tax Exempt ",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents top-padding-10"><span data-ng-if="row.entity.hasTaxBenefits">Tax Exempt</span><span data-ng-if="!row.entity.hasTaxBenefits">Taxable</span><span class="text-muted clear-bottom section-name display-block" data-ng-if="row.entity.hasTaxBenefits">{{row.entity.sectionName}}</span></div>'},{name:"amountExpression",displayName:"MAX LIMIT(YEAR)",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="!grid.appScope.isAutoCalculated(row.entity)">{{row.entity.amountExpression | currency: "": 00 }}</span><span data-ng-if="grid.appScope.isAutoCalculated(row.entity)">Auto Calculated</span></div>'},{name:"status",displayName:"",cellClass:"ui-grid-cell",cellTemplate:'<div class="v-align-middle ui-grid-cell-contents"><div class="checkbox"><label><input type="checkbox" data-ng-model="row.entity.status" ng-checked="row.entity.status"/><span class="check-overlay large inverted node v-align-bottom"></span></label></div></div>'}],this.gridSettings.data="ctrl.availableComponents | filter : ctrl.searchComponent",this.gridSettings.appScopeProvider=this,this.gridSettings.rowHeight=50,this.gridSettings.onRegisterApi=function(t){e.gridApi=t}},t.prototype.includeComponents=function(){var e=[];this.availableComponents.forEach(function(t){t.status&&e.push(t)}),0!=e.length?this.modalInstance.close(e):this.notificationService.error("Please select atleast one component to continue.")},t.prototype.close=function(){this.modalInstance.close()},t.$inject=["$scope","$uibModal","PayrollModel","NotificationService","dialogs","AppSettings"],t}();e.AddSalaryComponentController=t,angular.module("payroll").component("addSalaryComponent",{templateUrl:"PayrollSettings/AddSalaryComponent",controller:t,controllerAs:"ctrl",bindings:{availableComponents:"=",modalInstance:"="}})}(e.Configuration||(e.Configuration={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(t){!function(i){var n=function(){function e(){this.salaryComponentType=t.Model.salaryComponentTypes,this.allowanceSectionsList=["Section_10(14)(i)","Section_10(14)(ii)","Section_10(5)","Section_17(2)(Viii)","Section_10(13)(a)"],this.deductionSectionList=["Section_16(iii)"],this.contributionSectionList=["Section_80CCD(2)"]}return e.prototype.AddNewSection=function(e){if(e.hasTaxBenefits)switch(e.componentType){case this.salaryComponentType.deduction:this.deductionSectionList.every(function(t){return t!=e.sectionName})&&this.deductionSectionList.push(e.sectionName);case this.salaryComponentType.allowance:case this.salaryComponentType.reimbursable:this.allowanceSectionsList.every(function(t){return t!=e.sectionName})&&this.allowanceSectionsList.push(e.sectionName);case this.salaryComponentType.contribution:this.contributionSectionList.every(function(t){return t!=e.sectionName})&&this.contributionSectionList.push(e.sectionName)}},e}();i.SectionController=n;var o=function(t){function i(i,n,o,r,a,s){var l=t.call(this)||this;return l.scope=i,l.modal=n,l.dialogs=o,l.payrollGlobalConfigurationService=r,l.notificationService=a,l.appSettings=s,l.model={},l.modalInstances={},l.salaryComponentKeys={},l.editNewSalaryComponent=function(t){l.payrollGlobalConfigurationService.getComponentSalaryStructureCount(t.componentName).then(function(i){l.componentSalaryStructureCount=new e.Model.componentSalaryStructureCount(i),l.addNewSalaryComponent(t)})},l.salaryComponentKeys=e.Configuration.Model.SalaryComponents,l.payrollGlobalConfigurationService.getRecurringComponents().then(function(t){l.recurringComponents=t.filter(function(e){return!e.isDeleted&&!e.internal&&-1==[l.salaryComponentKeys.PF,l.salaryComponentKeys.VPF,l.salaryComponentKeys.PFEmployer,l.salaryComponentKeys.ESI].indexOf(e.componentName)}).map(function(t){return l.AddNewSection(t),new e.Model.MasterComponent(t)})}),l.initGridSettings(),l}return __extends(i,t),i.prototype.updatetaxSectionsList=function(){var e=this.model.salaryComponent.componentType;e==this.salaryComponentType.allowance?this.taxSectionsList=this.allowanceSectionsList:(e=this.salaryComponentType.reimbursable)?this.taxSectionsList=this.deductionSectionList:this.taxSectionsList=this.contributionSectionList},i.prototype.addNewSalaryComponent=function(t){t?this.model.salaryComponent=angular.copy(t):(this.model.salaryComponent=new e.Model.MasterComponent({componentType:this.salaryComponentType.allowance,isCustom:!0,hasTaxBenefits:!1,isNew:!0}),this.componentSalaryStructureCount=new e.Model.componentSalaryStructureCount({isEditable:!0})),this.updatetaxSectionsList(),this.modalInstances.componentEditInstance=this.modal.open({templateUrl:"add-recuringComponent",windowClass:"structure-compare add-new-salary-component small-btn",backdrop:"static",scope:this.scope})},i.prototype.isFixedcomponent=function(e){return e.componentType==this.salaryComponentType.fixed},i.prototype.isSpecialAllowance=function(e){return e.componentName==this.salaryComponentKeys.Special},i.prototype.isFixedorSpecialComponent=function(e){return this.isFixedcomponent(e)||this.isSpecialAllowance(e)},i.prototype.isAutoCalculated=function(e){return this.isFixedorSpecialComponent(e)||e.componentName==this.salaryComponentKeys.ProfessionalTax},i.prototype.deleteCustomSalaryComponent=function(e){var t=this;this.payrollGlobalConfigurationService.doesComponentExistsInGroups(e.componentName).then(function(i){i.isExist?t.notificationService.error("This component cann't deleted as it is used in paygroups"):t.dialogs.confirm("Please Confirm","Are you sure want to delete this component").result.then(function(){t.disableBtnOnRequest=!0,t.payrollGlobalConfigurationService.deleteRecurringComponent(e.componentName).then(function(i){t.disableBtnOnRequest=!1,i.isDeleted&&(t.recurringComponents=t.recurringComponents.filter(function(t){return t.componentName!=e.componentName}),t.notificationService.success(e.title+" has been deleted successfully"))},function(i){t.notificationService.success(e.title+" deletion failed!"),t.disableBtnOnRequest=!1})})},function(i){t.notificationService.error(e.title+" deletion failed!")})},i.prototype.createNewSalaryComponent=function(){var t=this;this.form.addSalaryComponentForm.$valid&&(this.disableBtnOnRequest=!0,this.payrollGlobalConfigurationService.createSalaryComponent(this.model.salaryComponent).then(function(i){t.disableBtnOnRequest=!1;var n=new e.Model.MasterComponent(i);n.isCustom=!0,n.disabled=n.disabled,t.recurringComponents.push(n),t.AddNewSection(n),t.notificationService.success(n.title+" has been created successfully."),t.modalInstances.componentEditInstance.close()},function(e){t.notificationService.success(e.data.message),t.disableBtnOnRequest=!1}))},i.prototype.saveComponent=function(){var t=this;this.form.addSalaryComponentForm.$valid&&this.dialogs.confirm("Please Confirm","This will update the component name for all salary structures. Do you wish to continue?").result.then(function(){t.payrollGlobalConfigurationService.updateComponent(t.model.salaryComponent.componentName,new e.Model.MasterComponentOverride(t.model.salaryComponent)).then(function(e){if(e){t.disableBtnOnRequest=!1;var i=t.recurringComponents.find(function(e){return e.componentName==t.model.salaryComponent.componentName});i&&(i.requiredDeduction=t.model.salaryComponent.requiredDeduction,i.title=t.model.salaryComponent.title,i.helpText=t.model.salaryComponent.helpText,i.componentType=t.model.salaryComponent.componentType,i.hasTaxBenefits=t.model.salaryComponent.hasTaxBenefits,i.sectionName=t.model.salaryComponent.sectionName,i.sectionMaxAmount=t.model.salaryComponent.sectionMaxAmount,i.amount=t.model.salaryComponent.amount,i.componentType==t.salaryComponentType.allowance&&(i.onActuals=t.model.salaryComponent.onActuals),i.componentType!=t.salaryComponentType.reimbursable&&i.componentType!=t.salaryComponentType.reimbursement||(i.allowEmployeeToSubmitProof=t.model.salaryComponent.allowEmployeeToSubmitProof),i.componentName==t.salaryComponentKeys.GratuityContribution&&(i.eligibleMonths=t.model.salaryComponent.eligibleMonths),t.AddNewSection(i)),t.notificationService.success(t.model.salaryComponent.title+" updated successfully."),t.modalInstances.componentEditInstance.close()}else t.notificationService.error("Cannot update component, title already exists")},function(e){t.notificationService.error(e.data.message),t.disableBtnOnRequest=!1})})},i.prototype.resetOnActuals=function(){this.model.salaryComponent.hasTaxBenefits||(this.model.salaryComponent.onActuals=!1)},i.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.columnDefs=[{name:"componentName",displayName:"Component Name",cellTemplate:'<div class="ui-grid-cell-contents tax-excempt">{{row.entity.title}}</div>'},{name:"componentType",displayName:"Type",cellClass:"ui-grid-cell capitalize",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.appScope.salaryComponentType[row.entity.componentType]}}</div>'},{name:"taxExcempt",displayName:"Tax Exempt",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents top-padding-10"><span data-ng-if="row.entity.hasTaxBenefits">Tax Exempt</span><span data-ng-if="!row.entity.hasTaxBenefits">Taxable</span><span class="text-muted clear-bottom section-name display-block" data-ng-if="row.entity.hasTaxBenefits">{{row.entity.sectionName}}</span></div>'},{name:"amount",displayName:"MAX LIMIT(YEAR)",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="!grid.appScope.isAutoCalculated(row.entity)">{{row.entity.amount | currency: "": 00 }}</span><span data-ng-if="grid.appScope.isAutoCalculated(row.entity)">Auto Calculated</span></div>'},{name:"requireDocs",displayName:"Require Docs",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.onActuals">Yes</span><span data-ng-if="!row.entity.onActuals">No</span></div>'},{name:"Actions",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents edit-container"><a data-ng-click="grid.appScope.editNewSalaryComponent(row.entity)"><span class="icon-pencil symbol"></span>Edit</a><span data-ng-if="row.entity.isCustom"><a data-ng-click="grid.appScope.deleteCustomSalaryComponent(row.entity)" class="remove-lnk horizontal-margin-left"> <span class="icon-remove3 symbol"></span>Remove</a></span></div>'}],this.gridSettings.data="ctrl.recurringComponents | orderBy:'disabled' | filter : ctrl.searchComponent",this.gridSettings.appScopeProvider=this,this.gridSettings.rowHeight=50,this.gridSettings.onRegisterApi=function(t){e.gridApi=t}},i.$inject=["$scope","$uibModal","dialogs","payrollGlobalConfigurationService","NotificationService","AppSettings"],i}(n);i.RecurringController=o;var r=function(t){function i(i,n,o,r,a,s,l,c,p){var u=t.call(this)||this;return u.$state=i,u.scope=n,u.$stateParams=o,u.qservice=r,u.modal=a,u.PayrollSalaryStructureService=s,u.payrollGlobalConfigurationService=l,u.notificationService=c,u.dialogs=p,u.modalInstances={},u.currentComponent={},u.init=function(){u.qservice.all([u.PayrollSalaryStructureService.bonusType.query().$promise,u.PayrollSalaryStructureService.deductionType.query().$promise,u.payrollGlobalConfigurationService.getAdhocComponents()]).then(function(t){u.bonusTypes=t[0],u.deductionTypes=t[1].filter(function(e){return!e.isDeleted}),u.addhocComponents=t[2].filter(function(e){return!e.isDeleted}).map(function(t){return u.AddNewSection(t),new e.Model.MasterComponent(t)})})},u.saveDeductionType=function(){u.form.editDeductionForm.$valid&&(u.notificationService.information("Saving Deduction type ..."),u.PayrollSalaryStructureService.deductionType.save({},u.currentComponent).$promise.then(function(e){e.id?(u.deductionTypes.push(e),u.notificationService.success("Deduction type added Successfully."),u.modalInstances.deduction.close()):u.notificationService.error("Deduction type with same name already exists.")},function(e){u.notificationService.error(e.data.message)}))},u.updateDeductionType=function(){u.form.editDeductionForm.$valid&&(u.notificationService.information("Updating Deduction type ..."),u.PayrollSalaryStructureService.deductionType.update({},u.currentComponent).$promise.then(function(e){if(e.isUpdated){var t=u.deductionTypes.find(function(e){return e.id==u.currentComponent.id});t.title=u.currentComponent.title,t.description=u.currentComponent.description,t.affectOnGross=u.currentComponent.affectOnGross,u.notificationService.success("Deduction type updated Successfully."),u.modalInstances.deduction.close()}else u.notificationService.error("Deduction type with same name already exists.")},function(e){u.notificationService.error(e.data.message)}))},u.deleteDeductionType=function(e){u.dialogs.confirm("Please Confirm","Are you sure want to delete this Deduction?").result.then(function(){u.notificationService.information("Deleting Deduction type ..."),u.PayrollSalaryStructureService.deductionType.delete({id:e.id}).$promise.then(function(t){t.isDeleted&&(u.deductionTypes=u.deductionTypes.filter(function(t){return t.id!=e.id}),u.notificationService.information("Deduction type deleted successfully"))},function(e){u.notificationService.error("An error occurred while deleting deduction type.")})})},u.saveBonusType=function(){u.form.bonusEditForm.$valid&&(u.notificationService.information("Saving Bonus type ..."),u.PayrollSalaryStructureService.bonusType.save({},u.currentComponent).$promise.then(function(e){e.id?(u.bonusTypes.push(e),u.notificationService.success("Bonus type added Successfully."),u.modalInstances.bonus.close()):u.notificationService.information("Bonus type with same name already exists.")},function(e){u.notificationService.error(e.data.message)}))},u.updateBonusType=function(){u.form.bonusEditForm.$valid&&(u.notificationService.information("Updating Bonus type ..."),u.PayrollSalaryStructureService.bonusType.update({},u.currentComponent).$promise.then(function(e){if(e.isUpdated){var t=u.bonusTypes.find(function(e){return e.id==u.currentComponent.id});t.title=u.currentComponent.title,t.description=u.currentComponent.description,u.notificationService.success("Bonus type updated Successfully."),u.modalInstances.bonus.close()}else u.notificationService.information("Bonus type with same name already exists.")},function(e){u.notificationService.error(e.data.message)}))},u.deleteBonusType=function(e){u.dialogs.confirm("Please Confirm","Are you sure want to delete this Bonus?").result.then(function(){u.notificationService.information("Deleting Bonus type ..."),u.PayrollSalaryStructureService.bonusType.delete({id:e.id}).$promise.then(function(t){if(t.isDeleted){for(var i=0;i<=u.bonusTypes.length;i++){if(u.bonusTypes[i].id==e.id){u.bonusTypes.splice(i,1);break}}u.notificationService.success("Bonus type deleted successfully")}},function(e){u.notificationService.error(e.data.message)})})},u.addAdhocComponent=function(e){e?(u.currentComponent=angular.copy(e),u.currentComponent.onEdit=!0):u.currentComponent={hasTaxBenefits:!1,isCustom:!0},u.modalInstances.addhoc=u.modal.open({templateUrl:"editAdhocComponent",windowClass:"salary-component-modal",scope:u.scope,backdrop:"static"})},u.addDeduction=function(e){e?(u.currentComponent=angular.copy(e),u.currentComponent.onEdit=!0):(u.currentComponent={},u.currentComponent.affectOnGross=!1),u.modalInstances.deduction=u.modal.open({templateUrl:"editDeductionComponent",windowClass:"salary-component-modal",scope:u.scope,backdrop:"static"})},u.addBonus=function(e){e?(u.currentComponent=angular.copy(e),u.currentComponent.onEdit=!0):(u.currentComponent={},u.currentComponent.affectOnGross=!1),u.modalInstances.bonus=u.modal.open({templateUrl:"editBonusComponent",windowClass:"salary-component-modal",backdrop:"static",scope:u.scope})},u.init(),u}return __extends(i,t),i.prototype.saveAdhocAllowance=function(){var t=this;this.form.editAdhocAllowanceForm.$valid&&(this.disableBtnOnRequest=!0,this.payrollGlobalConfigurationService.saveCustomAdhocAllowance(this.currentComponent).then(function(i){t.disableBtnOnRequest=!1;var n=new e.Model.MasterComponent(i);n.isCustom=!0,n.disabled=n.disabled,t.addhocComponents.push(n),t.notificationService.success(n.title+" has been created successfully."),t.modalInstances.addhoc.close()},function(e){t.notificationService.error(e.data.message),t.disableBtnOnRequest=!1}))},i.prototype.updateAdhocAllowance=function(){var e=this;this.form.editAdhocAllowanceForm.$valid&&this.payrollGlobalConfigurationService.updateCustomAdhocAllowance(this.currentComponent).then(function(t){if(t){e.disableBtnOnRequest=!1;var i=e.addhocComponents.find(function(t){return t.componentName==e.currentComponent.componentName});i&&(i.requiredDeduction=e.currentComponent.requiredDeduction,i.title=e.currentComponent.title,i.componentType=e.currentComponent.componentType,i.hasTaxBenefits=e.currentComponent.hasTaxBenefits,i.sectionName=e.currentComponent.sectionName,i.sectionMaxAmount=e.currentComponent.sectionMaxAmount,i.componentType==e.salaryComponentType.allowance&&(i.onActuals=e.currentComponent.onActuals),e.AddNewSection(i)),e.notificationService.success(e.currentComponent.title+" updated successfully."),e.modalInstances.addhoc.close()}else e.notificationService.error("Cannot update component, title already exists")},function(t){e.notificationService.error(t.data.message),e.disableBtnOnRequest=!1})},i.prototype.deleteAdhocComponent=function(e){var t=this;this.payrollGlobalConfigurationService.doesComponentExistsInGroups(e.componentName).then(function(i){i.isExist?t.notificationService.error("This component cann't deleted as it is used in paygroups"):t.dialogs.confirm("Please Confirm","Are you sure want to delete this component").result.then(function(){t.disableBtnOnRequest=!0,t.payrollGlobalConfigurationService.deleteAdhocComponent(e.componentName).then(function(i){t.disableBtnOnRequest=!1,i.isDeleted&&(t.addhocComponents=t.addhocComponents.filter(function(t){return t.componentName!=e.componentName}),t.notificationService.success(e.title+" has been deleted successfully"))},function(i){t.notificationService.error(e.title+" deletion failed!"),t.disableBtnOnRequest=!1})})})},i.$inject=["$state","$scope","$stateParams","$q","$uibModal","PayrollSalaryStructureService","payrollGlobalConfigurationService","NotificationService","dialogs"],i}(n);i.AdhocController=r,angular.module("payroll").controller("recurringController",o).controller("adhocController",r)}(t.componentLibrary||(t.componentLibrary={}))}(e.Configuration||(e.Configuration={}))}(Payroll||(Payroll={})),function(e){!function(t){!function(i){var n,o;i.Custom||(i.Custom={}),n=function(){function i(e,t,i,n,o,r,a){this.$uibModal=e,this.PayrollSalaryConfigurationService=t,this.NotificationService=i,this.dialogs=n,this.payrollConfig=o,this.$uibModalInstance=r,this.rootScope=a,this.getAllCustomSalaryStructure()}return i.prototype.getAllCustomSalaryStructure=function(){var t=this;this.PayrollSalaryConfigurationService.getAllCustomSalaryStrutures(this.payrollConfig.payGroupId).then(function(i){t.customSalaryStructures=i.map(function(t){return new e.Configuration.Model.CustomSalaryStructureView(t)})})},i.prototype.addCustomSalaryStructure=function(){this.addEditOrCloneCustomSalaryStructure(0,!1)},i.prototype.editCustomSalaryStructure=function(e){this.addEditOrCloneCustomSalaryStructure(e,!1)},i.prototype.cloneCustomSalaryStructure=function(e){this.addEditOrCloneCustomSalaryStructure(e,!0)},i.prototype.addEditOrCloneCustomSalaryStructure=function(e,t){var i=this;this.$uibModal.open({controller:"CustomSalaryStructureController",templateUrl:"createCustomSalaryStructure",windowClass:"full-screen-modal no-overflow custom-structure-create",controllerAs:"ctrl",resolve:{PayrollConfig:function(){return i.payrollConfig},customSalaryStructureId:function(){return e},IsClone:function(){return t}}}).result.then(function(e){i.getAllCustomSalaryStructure()})},i.prototype.deleteCustomSalaryStructure=function(e){var i=this;this.dialogs.confirm("Please Confirm","Are you sure want to remove this Custom Salary structure ?").result.then(function(){i.PayrollSalaryConfigurationService.deleteCustomSalaryStructure(i.payrollConfig.payGroupId,e.id,t.Model.RemunerationType.monthly).then(function(t){t.isDeleted&&(i.NotificationService.success("Custom salary structure deleted successfully."),i.customSalaryStructures=i.customSalaryStructures.filter(function(t){return t.id!=e.id}))},function(e){i.NotificationService.error(e.data.message)})})},i.prototype.reviewCustomSalaryStructure=function(){var e=this;this.payrollConfig.customSalaryConfig.validState?this.closeModel():this.PayrollSalaryConfigurationService.reviewCustomSalaryStructure(this.payrollConfig.payGroupId,t.Model.RemunerationType.monthly).then(function(t){e.$uibModalInstance.close(),e.rootScope.$broadcast("payrollSetupStepClosed",{})})},i.prototype.closeModel=function(){this.$uibModalInstance.dismiss(),this.rootScope.$broadcast("payrollSetupStepClosed",{})},i.$inject=["$uibModal","PayrollSalaryConfigurationService","NotificationService","dialogs","payrollConfig","$uibModalInstance","$rootScope"],i}(),o=function(){function i(i,n,o,r,a,s,l,c,p){var u=this;this.PayrollSalaryConfigurationService=i,this.NotificationService=n,this.payrollConfig=o,this.dialogs=s,this.$uibModalInstance=l,this.$uibModal=c,this.$scope=p,this.addSalaryModalInstance={},this.availableComponents=[],this.salaryComponents=e.Configuration.Model.SalaryComponents,r?(this.onEdit=!a,this.PayrollSalaryConfigurationService.getCustomSalaryStructure(this.payrollConfig.payGroupId,r,t.Model.RemunerationType.monthly).then(function(t){var i=new e.Configuration.Model.CustomSalaryStructureConfiguration(t);u.model=new e.Configuration.Model.CustomStructureConfiguration(i,u.payrollConfig),a&&(u.model.id=null,u.model.title+="_clone",u.model.description+="_clone",u.model.components.forEach(function(e){e.updateOverrideAmount(e.amountExpression,u.payrollConfig)}))})):this.PayrollSalaryConfigurationService.initializeCustomSalaryStructure(this.payrollConfig.payGroupId,t.Model.RemunerationType.monthly).then(function(t){var i=new e.Configuration.Model.CustomSalaryStructureConfiguration(t);u.model=new e.Configuration.Model.CustomStructureConfiguration(i,u.payrollConfig)},function(e){u.NotificationService.error("Fail to initialize the salary components")})}return Object.defineProperty(i.prototype,"isOrganizationExemptFromPT",{get:function(){return this.payrollConfig.getSupportedComponent(this.salaryComponents.ProfessionalTax).disabled},enumerable:!0,configurable:!0}),i.prototype.addSalaryComponent=function(){var e=this;this.availableComponents=angular.copy(this.model.unUsedComponents),this.addSalaryModalInstance=this.$uibModal.open({scope:this.$scope,backdrop:"static",windowClass:"structure-compare small-btn",template:'<add-salary-component available-components = "ctrl.availableComponents" modal-instance="ctrl.addSalaryModalInstance"></add-salary-component>'}),this.addSalaryModalInstance.result.then(function(t){t&&(t.forEach(function(t){e.model.addComponent(t)}),e.model.updateAmountExpression())})},i.prototype.deleteComponent=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure want to remove this component ?").result.then(function(){t.model.removeComponent(e.componentName)})},i.prototype.openComponentEdit=function(e){var t=this;this.selectedComponent=angular.copy(e),this.validateResult={valid:!1},this.componentEditInstance=this.$uibModal.open({scope:this.$scope,templateUrl:"customStructureComponentEdit",windowClass:"structure-component-edit",backdrop:"static"}),this.componentEditInstance.result.then(function(){e.updateOverrideAmount(t.selectedComponent.amountExpression,t.payrollConfig),t.model.updateAmountExpression()})},i.prototype.creatCustomSalaryStructure=function(){var e=this;this.customStructureForm.customStructureForm.$valid&&this.PayrollSalaryConfigurationService.saveCustomSalaryStructure(this.payrollConfig.payGroupId,t.Model.RemunerationType.monthly,this.model).then(function(t){e.NotificationService.success(t.title+" salary structure created successfully."),e.$uibModalInstance.close()},function(t){return e.NotificationService.error(t.data.message)})},i.prototype.updateCustomSalaryStructure=function(){var e=this;this.onEdit&&this.customStructureForm.customStructureForm.$valid&&this.PayrollSalaryConfigurationService.updateCustomSalaryStructure(this.payrollConfig.payGroupId,this.model.id,t.Model.RemunerationType.monthly,this.model).then(function(t){e.NotificationService.success(t.title+" salary structure updated successfully."),e.$uibModalInstance.close()},function(t){return e.NotificationService.error(t.data.message)})},i.prototype.validateComponentAmountExpression=function(){var e=this;if(this.selectedComponent.amountExpression){var t={};this.payrollConfig.getAdhocAllowances().forEach(function(e){return t[e.componentName]=e.amountExpression}),this.model.getAllApplicableComponents().forEach(function(i){t[i.componentName]=e.selectedComponent.componentName!=i.componentName?i.amountExpression:e.selectedComponent.amountExpression.toLowerCase()}),this.PayrollSalaryConfigurationService.validateComponentAmountExpression(this.payrollConfig.payGroupId,this.selectedComponent.componentName,t).then(function(t){e.validateResult=t})}},i.$inject=["PayrollSalaryConfigurationService","NotificationService","PayrollConfig","customSalaryStructureId","IsClone","dialogs","$uibModalInstance","$uibModal","$scope"],i}(),angular.module("payroll").controller("CustomSalaryStructureSettingsController",n).controller("CustomSalaryStructureController",o)}(t.SalaryStruture||(t.SalaryStruture={}))}(e.Configuration||(e.Configuration={}))}(Payroll||(Payroll={})),function(e){!function(t){!function(t){var i=function(){function e(e,t,i,n,o){this._scope=e,this._stateParams=t,this._notificationService=i,this._fullAndFinalConfigService=n,this.payGroupId=o,this.getOpeningAndClosingStatements()}return e.prototype.getOpeningAndClosingStatements=function(){var e=this;this._fullAndFinalConfigService.getfullAndFinalConfig(this.payGroupId).then(function(t){e.model=t})},e.prototype.saveOpeningAndClosingStatements=function(){var e=this;this._fullAndFinalConfigService.updatefullAndFinalConfig(this.payGroupId,this.model).then(function(t){e._notificationService.success("F & F Statements Saved Successfully")})},e.$inject=["$scope","$stateParams","NotificationService","FullAndFinalSettlementConfigService","payGroupId"],e}();t.FullAndFinalSettlementConfigController=i;var n=function(){function t(t,i,n,o,r,a){var s=this;this.$uibModal=t,this.dialogs=i,this.notificationService=n,this.noticePeriodBuyOutConfigurationService=o,this.appSettings=r,this.payGroupId=a,this.buyOutPolicies=[],this.initGridSettings(),this.noticePeriodBuyOutConfigurationService.getNoticePeriodBuyOutConfigurations(this.payGroupId).then(function(t){t.forEach(function(t){return s.buyOutPolicies.push(new e.Configuration.Model.NoticePeriodBuyOutConfiguration(t))})})}return t.prototype.initGridSettings=function(){this.buyOutGridOptions=angular.copy(this.appSettings.gridSettings),this.buyOutGridOptions.columnDefs=[{field:"title",displayName:"Name"},{field:"expression",displayName:"BUY OUT CALCULATION",cellClass:"upper-case"},{name:"Actions",displayName:"ACTIONS",cellClass:"ui-grid-cell cell-tooltip ui-grid-cell-contents",cellTemplate:'<div class="ui-grid-cell-options "><span class="clearfix"><ul class="action-items list-inline"><li class="list-item"><a data-ng-click="grid.appScope.ctrl.editbuyOutPolicy(row.entity)" class=" list-link"><span class="icon-pencil5" uib-tooltip="Edit" tooltip-placement="left"></span></a></li><li class="list-item"><a data-ng-click="grid.appScope.ctrl.deleteBuyOutPolicy(row.entity)" class="list-link"><span class="icon-remove3" uib-tooltip="Delete" tooltip-placement="right"></span></a></li></ul></span></div>',enableSorting:!1}],this.buyOutGridOptions.data="ctrl.buyOutPolicies"},t.prototype.addBuyOutPolicy=function(){var e=this;this.$uibModal.open({templateUrl:"addBuyOutPolicy",windowClass:"structure-compare add-encashment small-btn",controller:o,controllerAs:"ctrl",keyboard:!1,backdrop:"static",resolve:{noticePeriodPolicy:function(){return null},payGroupId:function(){return e.payGroupId}}}).result.then(function(t){t&&e.buyOutPolicies.push(t.noticePeriodPayOutPolicy)})},t.prototype.editbuyOutPolicy=function(e){var t=this;this.$uibModal.open({templateUrl:"addBuyOutPolicy",windowClass:"structure-compare add-encashment small-btn",controller:o,controllerAs:"ctrl",keyboard:!1,backdrop:"static",resolve:{noticePeriodPolicy:function(){return Object.assign({},e)},payGroupId:function(){return t.payGroupId}}}).result.then(function(e){if(e){var i=t.buyOutPolicies.findIndex(function(t){return t.id==e.noticePeriodPayOutPolicy.id});-1!=i&&(t.buyOutPolicies[i]=e.noticePeriodPayOutPolicy)}})},t.prototype.deleteBuyOutPolicy=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure want to delete "+e.title+" ?").result.then(function(){t.notificationService.information("Deleting Notice Period Policy with title : ",e.title),t.noticePeriodBuyOutConfigurationService.deleteNoticePeriodBuyOut(t.payGroupId,e.id).then(function(i){i.isDeleted&&(t.buyOutPolicies.splice(t.buyOutPolicies.findIndex(function(t){return t.id==e.id}),1),t.notificationService.success("Notice Period Policy deleted successfully"))},function(e){t.notificationService.error(e.data.message)})})},t.prototype.closeModal=function(){this.uibModalInstance.dismiss()},t.$inject=["$uibModal","dialogs","NotificationService","NoticePeriodBuyOutConfigurationService","AppSettings","payGroupId"],t}();t.NoticePeriodBuyOutConfigController=n;var o=function(){function t(e,t,i,n,o,r,a){this.dialogs=e,this.noticePeriodBuyOutConfigurationService=t,this.notificationService=i,this.modalServiceInstane=n,this.noticePeriodPayOutPolicy=o,this.payrollGlobalConfigurationService=r,this.payGroupId=a,this.availableComponents={},o&&o.id&&(this.model=o)}return t.prototype.saveBuyOutPolicy=function(){var t=this;this.form.noticePeriodPayOutPolicyForm.$valid&&this.noticePeriodBuyOutConfigurationService.addNoticePeriodBuyOut(this.payGroupId,new e.Configuration.Model.NoticePeriodBuyOutConfiguration(this.model)).then(function(i){t.notificationService.success("Notice period pay out policy added successfully"),t.modalServiceInstane.close({noticePeriodPayOutPolicy:new e.Configuration.Model.NoticePeriodBuyOutConfiguration(i)})},function(e){t.notificationService.error(e.data.message)})},t.prototype.updateBuyOutPolicy=function(){var t=this;this.form.noticePeriodPayOutPolicyForm.$valid&&this.payrollGlobalConfigurationService.validateExpression(this.model.expression).then(function(i){t.validationResult=i,t.validationResult.valid?t.noticePeriodBuyOutConfigurationService.updateNoticePeriodBuyOut(t.payGroupId,t.model.id,t.model).then(function(i){i.isUpdated&&(t.notificationService.success("Notice Period Pay Out Policy updated successfully"),t.modalServiceInstane.close({noticePeriodPayOutPolicy:new e.Configuration.Model.NoticePeriodBuyOutConfiguration(t.model)}))},function(e){t.notificationService.error(e.data.message)}):t.notificationService.error("Expression is not valid, please check the expression")})},t.prototype.deleteBuyOutPolicy=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure want to delete "+e.name+" ?").result.then(function(){t.notificationService.information("Deleting provident fund info with name : ",e.name),t.noticePeriodBuyOutConfigurationService.deleteNoticePeriodBuyOut(t.payGroupId,e.id).then(function(i){i.isDeleted&&(t.buyOutPolicies.splice(t.buyOutPolicies.findIndex(function(t){return t.id==e.identifier}),1),t.notificationService.success("Provident Fund Info deleted successfully"))},function(e){t.notificationService.error(e.data.message)})})},t.prototype.expressionChanged=function(){this.model.expression||(this.validationResult=null)},t.prototype.validateComponentAmountExpression=function(){var e=this;if(this.model&&this.model.expression&&this.model.expression.length>0){var t=parseInt(this.model.expression);if(/^-?\d+(\.\d+)?$/.test(this.model.expression)&&t<0)return this.validationResult={valid:!1,errors:["Negative numbers are not allowed"]};this.payrollGlobalConfigurationService.validateExpression(this.model.expression).then(function(t){e.validationResult=t})}},t.$inject=["dialogs","NoticePeriodBuyOutConfigurationService","NotificationService","$uibModalInstance","noticePeriodPolicy","payrollGlobalConfigurationService","payGroupId"],t}();t.AddNoticePeriodPayOutConfigurationController=o,angular.module("payroll").controller("FullAndFinalSettlementConfigController",i),angular.module("payroll").controller("NoticePeriodBuyOutConfigController",n)}(t.FullAndFinalSettings||(t.FullAndFinalSettings={}))}(e.Configuration||(e.Configuration={}))}(Payroll||(Payroll={})),function(e){!function(t){!function(t){var i;t.Components||(t.Components={}),i=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y){var h=this;this.filter=t,this.$timeout=i,this.$uibModal=n,this.$uibModalInstance=o,this.AppContext=r,this.PayrollModel=a,this.notificationService=s,this.PayrollConfigurationService=l,this.SharedModel=c,this.PublicProfileServices=p,this.payrollConfig=u,this.rootScope=d,this.utilityService=m,this.approverTypes=y,this.approverLevels=[],this.approverGroups=[],this.filteredApprovers={},this.selectedRoles=[],this.orgFeatures=[],this.approverList=[],this.resetConfig=function(e){"afterProbation"in e&&e.afterProbation&&(h.model.eligibility.availability.daysAfterJoining=0),"limitGrossSalaryRange"in e&&(e.limitGrossSalaryRange||(h.model.eligibility.minSalary=0,h.model.eligibility.maxSalary=0)),"limitLoanAmount"in e&&(e.limitLoanAmount||(h.model.approvalProcess.loanLimit.percentageOfGrossSalary=null,h.model.approvalProcess.loanLimit.maxLoanLimit=null,h.model.approvalProcess.loanLimit.allowOverrideMaxLimit=!1,h.model.approvalProcess.loanLimit.overrideMaxLimitBy=[])),"allowOverrideMaxLimit"in e&&(e.allowOverrideMaxLimit||(h.model.approvalProcess.loanLimit.overrideMaxLimitBy=[]))},this.updateLoanConfiguration=function(){if(h.form.payrollLoanSetting.$valid){var e={enableEmployeeLoans:h.model.enableEmployeeLoans,loanConfiguration:{}};if(h.model.enableEmployeeLoans){if(h.removeEmptyLevels(!0)&&h.notificationService.information("Please select at least one role or employee"),h.model.approvalProcess.requireApprovalProcess&&0==h.approverLevels.length)return void h.notificationService.information("Please select at least one role or employee");if(!h.doesPayrollAdminExists())return void h.notificationService.information("Payroll Admin is required in the Approval chain. Please add Payroll Admin in any level");h.model.approvalProcess.approvalChain.approverLevels=h.approverLevels,e.loanConfiguration=h.model}h.saveConfig(e)}},this.doesPayrollAdminExists=function(){var e=!1;return h.approverLevels.forEach(function(t){t.approvers.forEach(function(t){t.approverType==ApprovalChain.ApproverType.PayrollAdmin&&(e=!0)})}),e},this.saveConfig=function(e){h.PayrollConfigurationService.saveLoanConfiguration(h.payrollConfig.payGroupId,e).then(function(t){h.notificationService.success("Loan settings saved successfully"),h.payrollConfig.enableEmployeeLoans=h.model.enableEmployeeLoans,h.payrollConfig.loanConfiguration=e.loanConfiguration,h.$uibModalInstance.close(),h.rootScope.$broadcast("payrollSetupStepClosed",{})},function(e){var t=e.data.message?e.data.message:"Error while saving loan settings.";h.notificationService.error(t)})},this.doesEmployeeExist=function(e){return!!h.approverList&&h.approverList.filter(function(t){return t.projectManager?t.projectManager.id==e.id:t.approverId==e.id}).length>0},this.model=new e.Configuration.Model.LoanConfiguration(this.payrollConfig.loanConfiguration),this.model.enableEmployeeLoans=this.payrollConfig.enableEmployeeLoans}return t.prototype.$onInit=function(){this.approverLevels=[],this.approverGroups=[],this.isRolesRequired=!1,this.filteredApprovers={},this.selectedRoles=[],this.orgFeatures=[],this.approverList=[],this.approverTypes=angular.copy(this.approverTypes),this.orgFeatures=this.AppContext.orgFeatures(),this.setApproverTypes(),this.getConfiguration(this.model.approvalProcess.approvalChain),this.setDefaults(),this.removeEmptyLevels(!1)},t.prototype.setApproverTypes=function(){if(this.approverTypes.payrollAdmin={id:7,title:"Payroll Admin"},!this.orgFeatures.some(function(e){return"TIMESHEET"==e})){var e=this.approverTypes.accountManager.id,t=this.approverTypes.projectManager.id;this.approverTypes=this.filter("removeWith")(this.approverTypes,{id:e}),this.approverTypes=this.filter("removeWith")(this.approverTypes,{id:t})}},t.prototype.getConfiguration=function(e){if(0==e.approverLevels.length){this.approverLevels=[];var t=new ApprovalChain.Approver(ApprovalChain.ApproverType.PayrollAdmin,0,"Payroll Admin"),i=new ApprovalChain.ApprovalChainLevel(1,[]);i.approvers.push(t),this.approverLevels.push(i),this.selectedRoles.push(t)}else this.approverLevels=angular.copy(e.approverLevels),angular.forEach(this.approverLevels,function(e,t){angular.forEach(e.approvers,function(e,t){this.selectedRoles.push(e)},this)},this)},t.prototype.addApprover=function(){!this.approverLevels.length||this.approverLevels[this.approverLevels.length-1].approvers.length?(this.approverLevels.push(new ApprovalChain.ApprovalChainLevel),this.setDefaults()):this.notificationService.error("Please select at least one approver.")},t.prototype.setDefaults=function(){this.approverGroups=[],angular.forEach(this.approverTypes,function(e,t){if(t&&"Employee"!=e.title&&"None"!=e.title){var i={approverType:e.id,approverId:0,approverName:e.title,id:-e.id,category:" Roles"};this.approverGroups.push(i)}},this),this.approverList=[],angular.forEach(this.approverLevels,function(e,t){this.approverList=this.approverList.concat(e.approvers)},this),this.filteredApprovers=this.filter("xor")(this.approverGroups,this.selectedRoles,"approverType"),this.filteredApprovers=this.filter("removeWith")(this.filteredApprovers,{approverType:99})},t.prototype.getFilteredEmployees=function(e){var t=this;if(e.length>2)return this.utilityService.getMatchedEmployees(e).then(function(e){var i=t.filter("xor")(t.approverGroups,t.selectedRoles,"approverType");i=t.filter("removeWith")(i,{approverType:99}),angular.forEach(e,function(e){e.approverType&&t.doesEmployeeExist(e)||(e.approverType?e.category="Roles":(e.approverType=99,e.approverId=e.id,e.approverName=e.displayName,e.category="Employees"),i.push(e))},t),t.filteredApprovers=i})},t.prototype.updateApproverList=function(e,t,i){i?e.approverType?this.selectedRoles=this.filter("removeWith")(this.selectedRoles,{approverType:e.approverType}):this.approverList&&this.approverList.length&&(this.approverList=this.filter("removeWith")(this.approverList,{approverId:e.approverId})):e.approverType?(this.isRolesRequired=!1,this.selectedRoles.push(e)):this.approverList.push(e),this.setDefaults(),this.removeEmptyLevels(!1)},t.prototype.removeEmptyLevels=function(e){var t=!1;return angular.forEach(this.approverLevels,function(i,n){i.approvers=null==i.approvers?[]:i.approvers,0!=i.approvers.length||e?0==i.approvers.length&&e&&(t=!0):this.approverLevels.splice(n,1)},this),t&&this.notificationService.error("Please select at least one role or employee"),t},t.$inject=["$filter","$timeout","$uibModal","$uibModalInstance","AppContext","PayrollModel","NotificationService","PayrollConfigurationService","SharedModel","PublicProfileServices","payrollConfig","$rootScope","Utils","ApproverType"],t}(),angular.module("payroll").controller("PayrollLoanSettingsController",i)}(t.Loan||(t.Loan={}))}(e.Setting||(e.Setting={}))}(Payroll||(Payroll={})),function(e){!function(e){!function(t){var i=function(){function e(e,t,i,n){var o=this;this.appSettings=e,this.modalServie=t,this.leaveEncashmentService=i,this.notificationService=n,this.initGridSettings(),this.leaveEncashmentService.getLeaveEncashmentPolicies().then(function(e){o.encashmentPolicyList=e.encashmentPolicies})}return e.prototype.openAddEncashmentPolicy=function(e){var t=this;if(e)var i=this.encashmentPolicyList.find(function(t){return t.identifier==e});this.modalServie.open({templateUrl:"addNewLeaveEncashmentPolicy",controller:n,controllerAs:"ctrl",windowClass:"structure-compare add-encashment small-btn",backdrop:"static",resolve:{encashmentPolicy:function(){return angular.copy(i)}}}).result.then(function(e){if(i){var n=t.encashmentPolicyList.indexOf(i);n>-1&&(t.encashmentPolicyList[n]=e.encashmentPolicy)}else t.encashmentPolicyList=e.policyList})},e.prototype.deleteEncashmentPolicy=function(e){var t=this;this.leaveEncashmentService.deleteLeaveEncashmentPolicy(e).then(function(i){i.isDeleted&&(t.encashmentPolicyList=t.encashmentPolicyList.filter(function(t){return t.identifier!=e}),t.notificationService.success("Leave encashment policy deleted successfully"))})},e.prototype.setDefaultLeaveEncashmentPolicy=function(e){var t=this;this.leaveEncashmentService.setDefaultLeaveEncashmentPolicy(e).then(function(i){if(i.isUpdated){var n=t.encashmentPolicyList.find(function(e){return e.isDefault});n&&(n.isDefault=!1);var o=t.encashmentPolicyList.find(function(t){return t.identifier==e});o.isDefault=!0,t.notificationService.success(o.name+" is set as default leave encashment policy")}else t.notificationService.error("Error in updating default leave encashment policy")})},e.prototype.initGridSettings=function(){this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.columnDefs=[{field:"name",displayName:"Name"},{field:"expression",displayName:"Encashments Per Day",cellClass:"upper-case"},{field:"isDefault",displayName:"Default",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.isDefault">Default</span></div>'},{field:"actions",cellTemplate:'<div class="ui-grid-cell-contents"><span class="icon-pencil5 information-tooltip tooltip-grey" tooltip-placement="left" data-uib-tooltip="Edit" data-ng-click="grid.appScope.ctrl.openAddEncashmentPolicy(row.entity.identifier)"></span><span data-ng-if="!row.entity.isDefault" class="icon-checkmark-circle information-tooltip node tooltip-grey" tooltip-placement="right" data-ng-click="grid.appScope.ctrl.setDefaultLeaveEncashmentPolicy(row.entity.identifier)" data-uib-tooltip="Set As Default"></span><span class="icon-remove3 information-tooltip tooltip-grey" tooltip-placement="right" data-ng-if="!row.entity.isDefault" data-uib-tooltip="Remove" data-ng-click="grid.appScope.ctrl.deleteEncashmentPolicy(row.entity.identifier)"></span></div>',enableSorting:!1}],this.gridSettings.data="ctrl.encashmentPolicyList"},e.$inject=["AppSettings","$uibModal","LeaveEncashmentService","NotificationService"],e}();t.LeaveEncashmentSettingsController=i;var n=function(){function t(e,t,i,n,o,r){this.leaveEncashmentService=e,this.notificationService=t,this.modalServiceInstane=i,this.payrollGlobalConfigurationService=o,this.qService=r,this.availableComponents={},n&&n.identifier&&(this.model=n)}return t.prototype.saveLeaveEncashmentPolicy=function(){var t=this;this.form.encashmentPolicyForm.$valid&&this.leaveEncashmentService.saveLeaveEncashmentPolicy(new e.Model.LeaveEncashmentPolicy(this.model)).then(function(i){t.notificationService.success("Leave encashment policy added successfully"),t.modalServiceInstane.close({policyList:i.encashmentPolicies.map(function(t){return new e.Model.LeaveEncashmentPolicy(t)})})})},t.prototype.updateLeaveEncashmentPolicy=function(){var t=this;this.form.encashmentPolicyForm.$valid&&this.payrollGlobalConfigurationService.validateExpression(this.model.expression).then(function(i){t.validationResult=i,t.validationResult.valid?t.leaveEncashmentService.updateLeaveEncashmentPolicy(t.model).then(function(i){i.identifier&&(t.notificationService.success("Leave encashment policy updated successfully"),t.modalServiceInstane.close({encashmentPolicy:new e.Model.LeaveEncashmentPolicy(i)}))}):t.notificationService.error("Expression is not valid, please check the expression")})},t.prototype.expressionChanged=function(){this.model.expression||(this.validationResult=null)},t.prototype.validateComponentAmountExpression=function(){var e=this;if(this.model&&this.model.expression&&this.model.expression.length>0){var t=parseInt(this.model.expression);if(/^-?\d+(\.\d+)?$/.test(this.model.expression)&&t<0)return this.validationResult={valid:!1,errors:["Negative numbers are not allowed"]};this.payrollGlobalConfigurationService.validateExpression(this.model.expression).then(function(t){e.validationResult=t})}},t.$inject=["LeaveEncashmentService","NotificationService","$uibModalInstance","encashmentPolicy","payrollGlobalConfigurationService","$q"],t}();t.AddLeaveEncashmentController=n;var o=function(){function t(t,i,n){var o=this;this.notificationService=t,this.payrollConfiguration=i,this.paymentSettingsService=n,this.paymentSettingsService.getPaymentSettings(this.payrollConfiguration.payGroupId).then(function(t){o.paymentsettings=new e.Model.PaymentSettings(t)})}return t.prototype.editPaymentSettings=function(){this.model=new e.Model.PaymentSettings(this.paymentsettings),this.isEditable=!0},t.prototype.savePaymentSettings=function(){var t=this;this.form.PaymentSettings.$valid&&this.paymentSettingsService.savePaymentSettings(this.payrollConfiguration.payGroupId,this.model).then(function(i){t.notificationService.success("Payment Settings saved successfully"),t.paymentsettings=new e.Model.PaymentSettings(t.model),t.isEditable=!1})},t.$inject=["NotificationService","payrollConfiguration","PaymentSettingsService"],t}();t.PaymentSettingsController=o;var r=function(){function t(e,t,i,n,o){this.scope=e,this.modalService=t,this.payrollConfiguration=i,this.payslipConfigurationServices=n,this.notificationService=o,this.getPaySlipFeilSettings()}return t.prototype.getPaySlipFeilSettings=function(){var t=this;this.payslipConfigurationServices.getpayslipConfiguration(this.payrollConfiguration.payGroupId).then(function(i){t.payslipConfiguration=new e.Model.PayslipConfiguration(i)},function(e){console.error(e)})},t.prototype.openEditPopUp=function(){this.model=angular.copy(this.payslipConfiguration),this._modalInstance=this.modalService.open({templateUrl:"payslipemployeefileds",windowClass:"full-screen-modal dark-modal action-content payslip-pf-container",controllerAs:"ctrl",keyboard:!1,backdrop:"static",scope:this.scope})},t.prototype.saveSettings=function(){var e=this;this.payslipConfigurationServices.updatepayslipConfiguration(this.payrollConfiguration.payGroupId,this.model).then(function(t){t&&(e._modalInstance.close(),e.payslipConfiguration=e.model,e.notificationService.success("Payslip options saved successfully"))},function(t){e.notificationService.error("Error occured Payslip options saved successfully")})},t.$inject=["$scope","$uibModal","payrollConfiguration","PaySlipConfigurationService","NotificationService"],t}();t.PayslipFieldSettingController=r;var a=function(){function t(e,t,i,n,o){this.notificationService=e,this.payrollConfiguration=t,this.roundOffSettingsService=i,this.payrollSalaryConfigurationService=n,this.$uibModal=o,this.init()}return t.prototype.init=function(){var t=this;this.roundOffSettingsService.getRoundOffSettings(this.payrollConfiguration.payGroupId).then(function(i){t.roundOffsettings=new e.Model.RoundOffSettings(i)})},t.prototype.editRoundOffSettings=function(){this.model=new e.Model.RoundOffSettings(this.roundOffsettings),this.isEditable=!0},t.prototype.updateRoundOffType=function(e){this.model.roundOffType=e},t.prototype.saveRoundOffSettings=function(){var t=this;this.roundOffSettingsService.saveRoundOffSettings(this.payrollConfiguration.payGroupId,this.model).then(function(i){t.notificationService.success("RoundOff Settings saved successfully"),t.showStructureUpdateProgress(),t.payrollSalaryConfigurationService.regenerateSalaryStucture(t.payrollConfiguration.payGroupId).then(function(e){t.structureUpdateProgressModal.close()},function(e){t.structureUpdateProgressModal.close(),t.notificationService.success("Error occured while regenerating the salary structure.")}),t.roundOffsettings=new e.Model.RoundOffSettings(t.model),t.isEditable=!1})},t.prototype.showStructureUpdateProgress=function(){this.structureUpdateProgressModal=this.$uibModal.open({templateUrl:"structureUpdateProgress",keyboard:!1,backdrop:"static",windowClass:"structure-compare update-structure"})},t.$inject=["NotificationService","payrollConfiguration","RoundOffSettingsService","PayrollSalaryConfigurationService","$uibModal"],t}();t.ComponentRoundOffSettingsController=a,angular.module("payroll").controller("LeaveEncashmentSettingsController",i).controller("PaymentSettingsController",o).controller("PayslipFieldSettingController",r).controller("ComponentRoundOffSettingsController",a)}(e.misc||(e.misc={}))}(e.Configuration||(e.Configuration={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){!function(e){e.SalaryComponents={get Basic(){return"basic"},get HRA(){return"hra"},get Medical(){return"medical"},get Transport(){return"transport"},get Special(){return"special"},get Professional(){return"professional"},get Travel(){return"travel"},get Food(){return"food"},get PF(){return"pf"},get VPF(){return"vpf"},get PFEmployer(){return"pfe"},get ProfessionalTax(){return"professionaltax"},get TDS(){return"tds"},get Bonus(){return"bonus"},get BonusJoining(){return"bonusjoining"},get BonusSales(){return"bonussales"},get Reimbursement(){return"reimbursement"},get Surcharge(){return"surcharge"},get EducationCess(){return"educationcess"},get ESI(){return"esi"},get ESIEmployer(){return"esie"},get Arrear(){return"arrear"},get CustomAllowance(){return"customallowance"},get CityCompensatoryAllowance(){return"citycompensatoryallowance"},get LeaveEncashment(){return"leaveencashment"},get DailyAllowance(){return"dailyallowance"},get Deduction(){return"deduction"},get Gratuity(){return"graduity"},get GratuityContribution(){return"graduityContribution"},get PFOtherCharges(){return"pfOtherCharges"},get DearnessAllowance(){return"da"},get NPSEmployer(){return"npse"},get AllBonuses(){return"all_bonuses"},get AllOneTimePayments(){return"all_onetimepayments"},get Gross(){return"gross"}};var t,i=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.allowance=1,t.contribution=2,t.adhoc=3,t.reimbursement=4,t.tax=5,t.fixed=6,t.arrear=7,t.deduction=8,t.reimbursable=9,t.others=50,t[1]="Allowance",t[2]="Contribution",t[3]="Adhoc ",t[4]="Reimbursement",t[5]="Tax",t[6]="fixed",t[7]="Arrear ",t[8]="Deduction ",t[9]="Reimbursable",t[50]="Others",t}(SharedPatterns.Enum);e.salaryComponentTypes=i,function(e){e[e.none=0]="none",e[e.weekly=1]="weekly",e[e.biWeekly=2]="biWeekly",e[e.monthly=3]="monthly",e[e.quaterly=4]="quaterly",e[e.biYearly=5]="biYearly",e[e.yearly=6]="yearly",e[e.once=7]="once"}(t=e.paidFrequency||(e.paidFrequency={})),function(e){e[e.none=0]="none",e[e.payslip=1]="payslip",e[e.benefits=2]="benefits"}(e.SalaryComponentVisibleType||(e.SalaryComponentVisibleType={}));var n=function(){return function(e){this.componentName=e.title.toLowerCase().replace(/\s/g,""),this.title=e.title,this.hasTaxBenefits=e.hasTaxBenefits,this.amountExpression=e.amount,this.deductSaperately=e.deductSaperately,this.onActuals=e.onActuals,this.affectedDueToWorkedRatio=e.affectedDueToWorkedRatio,this.allowEmployeeOverride=e.allowEmployeeOverride,this.componentVisibleType=e.componentVisibleType,this.componentType=e.componentType,this.sectionName=e.sectionName,this.disabled=e.disabled,this.paySeparately=e.paySeparately,this.requiredDeduction=e.requiredDeduction,this.sectionMaxAmount=e.sectionMaxAmount,this.canBeArrear=e.canBeArrear}}();e.CustomComponent=n;var o=function(){function i(e){this.affectedDueToLossOfPay=e.affectedDueToLossOfPay,this.allowEmployeeOverride=e.allowEmployeeOverride,this.amountExpression=e.amountExpression,this.amount=Number(e.amountExpression),this.allowOverride=e.allowOverride,this.canBeZero=e.canBeZero,this.canBeArrear=e.canBeArrear,this.componentName=e.componentName,this.componentType=e.componentType,this.firstPaidOn=e.firstPaidOn,this.helpText=e.helpText,this.isOptional=e.isOptional,this.maxExpression=e.maxExpression,this.outsideCTC=e.outsideCTC,this.paidFrequency=e.paidFrequency,this.title=e.title,this.disabled=e.disabled,this.isDeleted=e.isDeleted,this.isPartOfFBP=e.isPartOfFBP,this.hasTaxBenefits=e.hasTaxBenefits,this.internal=e.internal,this.autoCalculated=e.autoCalculated,this.requiredDeduction=e.requiredDeduction,this.componentVisibleType=e.componentVisibleType,this.sectionName=e.sectionName,this.sectionMaxAmount=Number(e.sectionMaxAmount),this.paySeparately=e.paySeparately,this.affectedDueToWorkedRatio=e.affectedDueToWorkedRatio,this.canAdjustDifferenceAmountDueWorkRatio=e.canAdjustDifferenceAmountDueWorkRatio,this.isCustom=e.isCustom,this.claimFrequency=e.claimFrequency,this.claimAndPaymentRules=new G(e.claimAndPaymentRules||{}),this.actionOnUnclaimedAmount=new $(e.actionOnUnclaimedAmount||{}),this.isClaimOnceAYear=this.claimFrequency==O.yearly,this.isIncluded=e.isIncluded}return i.prototype.getInstallmentAmount=function(){return this.paidFrequency==t.monthly?this.amount/12:this.amount},i.prototype.updateClaimFrequency=function(e){e?(this.claimFrequency=O.yearly,this.actionOnUnclaimedAmount.actionOnUnClaimedAmountForClaimFrequency=k.void,this.actionOnUnclaimedAmount.actionOnUnClaimedAmountForFinancialYearEnd=k.void):(this.claimFrequency=O.monthly,this.actionOnUnclaimedAmount.actionOnUnClaimedAmountForClaimFrequency=k.carryForward,this.actionOnUnclaimedAmount.actionOnUnClaimedAmountForFinancialYearEnd=k.void)},i.prototype.updateOverrideAmount=function(t,i){this.allowOverride?(this.isOverrided=!0,this.amountExpression=t.toLowerCase()):(this.componentName==e.SalaryComponents.PF&&i.pf.useStructureBasedPF||this.componentName==e.SalaryComponents.ESI&&i.esi.useStructureBasedESI)&&(this.isOverrided=!0,this.amountExpression=t.toLowerCase())},i.prototype.getOverride=function(){if(this.isOverrided)return{componentName:this.componentName,amount:this.amountExpression.toLowerCase(),takeSupportComponent:this.takeSupportComponent}},i}();e.SalaryComponentConfiguration=o;var r=function(e){function t(t){var i=e.call(this,t)||this;return i.eligibleMonths=t.eligibleMonths,i}return __extends(t,e),t}(o);e.ContributionConfiguration=r;var a=function(e){function t(t){var i=e.call(this,t)||this;return i.onActuals=t.onActuals,i}return __extends(t,e),t}(o);e.AllowanceConfiguration=a;var s=function(e){function t(t){var i=e.call(this,t)||this;return i.allowEmployeeToSubmitProof=t.allowEmployeeToSubmitProof,i}return __extends(t,e),t}(o);e.ReimbursableConfiguration=s,e.StandardSettings=function(t){var i=this;this.salaryComponents=[],angular.forEach(t.salaryComponents||{},function(t){i.salaryComponents.push(e.createSalaryComponentModel(t))})},e.createSalaryComponentModel=function(e){if(e.componentType===i.allowance)return new a(e);if(e.componentType===i.contribution)return new r(e);if(e.componentType===i.reimbursable||e.componentType===i.reimbursement)return new s(e);if(e.componentType===i.others||e.componentType===i.adhoc||e.componentType===i.tax||e.componentType===i.fixed||e.componentType===i.arrear||e.componentType===i.deduction)return new o(e);throw Error("Not a supported salary component type")};var l=function(){function t(e){this.id=e.id,this.name=e.name,this.title=e.title,this.description=e.description,this.lastUpdated=new Date(e.lastUpdated),this.isValid=e.isValid,this.components=[],this.updateComponents(e.components)}return t.prototype.updateComponents=function(t){var i=this;angular.forEach(t||{},function(t){i.components.push(e.createSalaryComponentModel(t))})},t.prototype.getPFComponentConfig=function(){return this.components.find(function(t){return t.componentName==e.SalaryComponents.PF})},t.prototype.updateConfig=function(e){this.title=e.title,this.description=e.description,this.lastUpdated=e.lastUpdated,this.components=e.components||[]},t}();e.SalaryStructureConfiguration=l;var c=function(e){function t(t){var i=e.call(this,t)||this;return i.advanceSettings=new y(t.advanceSettings||{}),i}return __extends(t,e),t}(l);e.CustomSalaryStructureConfiguration=c;var p=function(){return function(e){this.id=e.id,this.title=e.title,this.description=e.description,this.totalEmployees=e.totalEmployees,this.lastUpdatedOn=new Date(e.lastUpdatedOn)}}();e.CustomSalaryStructureView=p;var u=function(){function i(e,i){this.recuringComponents=[],this._components=[],this.originalComponents={},this.getRecuringComponents=function(){return this._components.filter(function(e){return"leaveencashment"!=e.componentName&&"workratioadjustment"!=e.componentName&&(!e.isOptional||!e.internal&&e.paidFrequency!=t.none&&e.paidFrequency!=t.once)})},this._payrollConfig=i,this.id=e.id,this.name=e.name,this.title=e.title,this.description=e.description,this.recuringComponents=this._payrollConfig.getRecurringComponents(),this.updateComponents(e.components||[])}return Object.defineProperty(i.prototype,"unUsedComponents",{get:function(){var e=this;return this.recuringComponents.filter(function(t){return!e._components.some(function(e){return e.componentName==t.componentName})})},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"components",{get:function(){return this.getRecuringComponents()},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"allComponents",{get:function(){return this._components},enumerable:!0,configurable:!0}),i.prototype.addComponent=function(t){return t.componentName in this.originalComponents&&(t.takeSupportComponent=!0,t.isOverrided=!0),t.isEditable=t.componentName!=e.SalaryComponents.PF&&t.componentName!=e.SalaryComponents.Special&&t.componentName!=e.SalaryComponents.ESI,t.isEditable=t.isEditable||t.componentName==e.SalaryComponents.PF&&this._payrollConfig.pf.useStructureBasedPF,t.isEditable=t.isEditable||t.componentName==e.SalaryComponents.ESI&&this._payrollConfig.esi.useStructureBasedESI,this._components.push(this.updateIsRemovable(t)),!0},i.prototype.removeComponent=function(e){this._components=this._components.filter(function(t){return t.componentName!=e})},i.prototype.updateComponents=function(t){var i=this;this._components=t.map(function(t){return t.isEditable=t.componentName!=e.SalaryComponents.PF&&t.componentName!=e.SalaryComponents.Special&&t.componentName!=e.SalaryComponents.ESI,t.isEditable=t.isEditable||t.componentName==e.SalaryComponents.PF&&i._payrollConfig.pf.useStructureBasedPF,t.isEditable=t.isEditable||t.componentName==e.SalaryComponents.ESI&&i._payrollConfig.esi.useStructureBasedESI,i.updateIsRemovable(t)}),angular.forEach(this._components,function(e){this[e.componentName]=angular.copy(e)},this.originalComponents),this.updateAmountExpression()},i.prototype.updateAmountExpression=function(){var t=this,i={};this._components.forEach(function(e){return i[e.componentName]=e.title}),i[e.SalaryComponents.Gross]="Gross",i[e.SalaryComponents.AllBonuses]="All Bonuses",i[e.SalaryComponents.AllOneTimePayments]="All OneTimePayments",this._components.forEach(function(e){e.amountExpressionValue=e.amountExpression,t.extractTokens(e.amountExpression,i).forEach(function(t){e.amountExpressionValue=e.amountExpressionValue.replace("["+t+"]","["+i[t]+"]")})})},i.prototype.getAllApplicableComponents=function(){return this._components},i.prototype.toJSON=function(){return{title:this.title,description:this.description,name:this.name,components:this._components.map(function(e){return e.componentName}),overrides:this._components.map(function(e){return e.getOverride()}).filter(function(e){return null!=e}),id:this.id}},i.prototype.updateIsRemovable=function(t){return t.isRemovable=t.allowOverride&&t.componentName!=e.SalaryComponents.Special&&t.componentName!=e.SalaryComponents.Basic&&t.componentName!=e.SalaryComponents.HRA,t},i.prototype.extractTokens=function(e,t){return(e||"").split(/[\]\[ ]/).filter(function(e){return e in t})},i}();e.StructureConfiguration=u;var d=function(){return function(e){this.title=e.title,this.name=e.name,this.max=e.max,this.min=e.min,this.isLast=e.isLast||!1,this.index=e.index}}();e.StructureSlab=d;var m=function(i){function n(n,o){var r=i.call(this,n,o)||this;return r.getRecuringComponents=function(){var i=this;return this._components.filter(function(n){return"leaveencashment"!=n.componentName&&"workratioadjustment"!=n.componentName&&(n.componentName==e.SalaryComponents.PF?i.advanceSettings.enablePF:n.componentName==e.SalaryComponents.ESI?i.advanceSettings.enableESI:!n.isOptional||!n.internal&&n.paidFrequency!=t.none&&n.paidFrequency!=t.once)})},r.advanceSettings=new y(n.advanceSettings||{}),r}return __extends(n,i),n.prototype.toJSON=function(){var e=i.prototype.toJSON.call(this);return e.advanceSettings=this.advanceSettings,e},n}(u);e.CustomStructureConfiguration=m;var y=function(){function e(e){this.enablePF=e.enablePF,this.enableESI=e.enableESI,this.enablePT=e.enablePT,this.enableTDS=e.enableTDS,this.deductFlatIncomeTax=this.enableTDS&&e.deductFlatIncomeTax,this.incomeTaxRate=this.deductFlatIncomeTax?e.incomeTaxRate:null}return e.prototype.construct=function(){this.constructor(this)},e}();e.AdvancedSettings=y;var h=function(){return function(e){this.encashmentPolicies=[],this.encashmentPolicies=e.encashmentPolicies.map(function(e){return new g(e)})}}();e.LeaveEncashmentConfiguration=h;var f=function(){function e(e){this.providentFundInfo=[],this.esiInfo=[],this.professionalTaxInfo=[],this.updateProfessionalTaxInfo(e.professionalTaxInfo),this.updateProvidentFundInfo(e.providentFundInfo),this.updateEsiInfo(e.esiInfo),this.esiInfo=e.esiInfo,this.incomeTaxInfo=e.incomeTaxInfo,this.labourWelfareFundInfo=e.labourWelfareFundInfo}return e.prototype.updateProvidentFundInfo=function(e){var t=this;angular.forEach(e||{},function(e){t.providentFundInfo.push(e)})},e.prototype.updateEsiInfo=function(e){var t=this;angular.forEach(e||{},function(e){t.esiInfo.push(e)})},e.prototype.updateProfessionalTaxInfo=function(e){var t=this;angular.forEach(e||{},function(e){t.professionalTaxInfo.push(e)})},e}();e.StatutoryConfiguration=f;var g=function(){return function(e){this.identifier=e.identifier,this.name=e.name,this.expression=e.expression,this.isDefault=e.isDefault}}();e.LeaveEncashmentPolicy=g;var v=function(){return function(e){this.payBonusOutSideSalary=e.payBonusOutSideSalary,this.payExpensesOutSideSalary=e.payExpensesOutSideSalary,this.payCashAdvancesOutSideSalary=e.payCashAdvancesOutSideSalary}}();e.PaymentSettings=v;var S=function(){return function(e){this.roundOffType=e.roundOffType,this.isRoundOffEnabled=0!=this.roundOffType,this.enableAdjustmentInDefaultBucket=e.enableAdjustmentInDefaultBucket}}();e.RoundOffSettings=S;var C=function(){function e(e){this.selectedFields=[],this.availableFields=[],this.template=e.template,this.allowBulkDownload=e.allowBulkDownload,this.includeTaxCalculationSummary=e.includeTaxCalculationSummary,this._includeYTDColumn=e.includeYTDColumn,this._includeGrossColumn=e.includeGrossColumn,this.includeArrearBreakup=e.includeArrearBreakup,this.enablePasswordProtection=e.enablePasswordProtection,this.excludeNAFields=e.excludeNAFields,this.includeLoanDetails=e.includeLoanDetails,this.showPaySlipsForImportedSalaries=e.showPaySlipsForImportedSalaries,this.buildSelectedAndAvailableFields(e.paySlipFields)}return Object.defineProperty(e.prototype,"includeAdditionalColumn",{get:function(){return this.includeYTDColumn||this.includeGrossColumn},set:function(e){e?this._includeYTDColumn=e:(this._includeYTDColumn=!1,this._includeGrossColumn=!1)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"includeYTDColumn",{get:function(){return this._includeYTDColumn},set:function(e){this._includeGrossColumn=!e,this._includeYTDColumn=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"includeGrossColumn",{get:function(){return this._includeGrossColumn},set:function(e){this._includeYTDColumn=!e,this._includeGrossColumn=e},enumerable:!0,configurable:!0}),e.prototype.canUpFieldOrder=function(e){return 0!=e&&this.selectedFields[e-1]&&!this.selectedFields[e-1].readOnly},e.prototype.canDownFieldOrder=function(e){return e+1!=this.selectedFields.length&&this.selectedFields[e+1]&&!this.selectedFields[e+1].readOnly},e.prototype.swapToSelectedFields=function(e){return!!e.isNotApplicable&&(e.isNotApplicable=!1,this.availableFields=this.availableFields.filter(function(t){return t.name!=e.name}),this.selectedFields.push(e),!0)},e.prototype.swapToAvailableFields=function(e){return!e.readOnly&&!e.isNotApplicable&&(e.isNotApplicable=!0,this.selectedFields=this.selectedFields.filter(function(t){return t.name!=e.name}),this.availableFields.push(e),!0)},e.prototype.changeFieldPosition=function(e,t){var i=this.selectedFields[t],n=this.selectedFields.indexOf(e);i&&!i.readOnly&&-1!=n&&(this.selectedFields[t]=e,this.selectedFields[n]=i)},e.prototype.buildSelectedAndAvailableFields=function(e){var t=this;e.forEach(function(e){var i=new w(e);i.isNotApplicable?t.availableFields.push(i):t.selectedFields.push(i)})},e.prototype.toJSON=function(){return{template:this.template,allowBulkDownload:this.allowBulkDownload,includeTaxCalculationSummary:this.includeTaxCalculationSummary,includeYTDColumn:this.includeYTDColumn,includeGrossColumn:this.includeGrossColumn,excludeNAFields:this.excludeNAFields,includeLoanDetails:this.includeLoanDetails,includeArrearBreakup:this.includeArrearBreakup,enablePasswordProtection:this.enablePasswordProtection,showPaySlipsForImportedSalaries:this.showPaySlipsForImportedSalaries,paySlipFields:[].concat(this.selectedFields,this.availableFields)}},e}();e.PayslipConfiguration=C;var w=function(){return function(e){var t=this;this.update=function(e){t.constructor(e)},this.name=e.name,this.title=e.title,this.isNotApplicable=e.isNotApplicable,this.readOnly=e.readOnly}}();e.PaySlipFieldSettings=w;var b=function(){return function(e){this.id=e.id,this.name=e.name,this.description=e.description,this.isDefault=e.isDefault||!1}}();e.Paygroup=b;var P=function(e){function t(t){var i=e.call(this,t)||this;return i.employeesAssigned=t.employeesAssigned||0,i}return __extends(t,e),t.prototype.update=function(e){this.constructor(e)},t}(b);e.PaygroupView=P;var T=function(){return function(e){this.componentName=e.componentName,this.amount=null!=e.amount?e.amount:e.amountExpression,this.onActuals=e.onActuals,this.title=e.title,this.isPartOfFBP=e.isPartOfFBP,this.hasTaxBenefits=e.hasTaxBenefits,this.allowEmployeeOverride=e.allowEmployeeOverride,this.componentType=e.componentType,this.eligibleMonths=e.eligibleMonths,this.componentVisibleType=e.componentVisibleType,this.affectedDueToWorkedRatio=e.affectedDueToWorkedRatio,this.sectionName=e.sectionName,this.sectionMaxAmount=Number(e.sectionMaxAmount),this.paySeparately=e.paySeparately,this.requiredDeduction=e.requiredDeduction,this.canBeArrear=e.canBeArrear,this.canAdjustDifferenceAmountDueWorkRatio=e.canAdjustDifferenceAmountDueWorkRatio,this.allowEmployeeToSubmitProof=e.allowEmployeeToSubmitProof,this.roundOffType=e.roundOffType,this.claimFrequency=e.claimFrequency,this.isClaimLimitedToAccrued=e.claimAndPaymentRules.isClaimLimitedToAccrued,this.payOnlyAccruedAmount=!!e.isClaimLimitedToAccrued||e.claimAndPaymentRules.payOnlyAccruedAmount,this.canAdjustExtraPaidAmountDueToLOP=!!this.payOnlyAccruedAmount||e.claimAndPaymentRules.canAdjustExtraPaidAmountDueToLOP,this.actionOnUnClaimedAmountForClaimFrequency=e.actionOnUnclaimedAmount.actionOnUnClaimedAmountForClaimFrequency,this.actionOnUnClaimedAmountForFinancialYearEnd=e.actionOnUnclaimedAmount.actionOnUnClaimedAmountForFinancialYearEnd,this.helpText=e.helpText}}();e.ComponentOverride=T;var D=function(){return function(e){var t=this;this.ValidState=function(){return t.isReviewedByUser},this.restrictEmployeeInProbation=e.restrictEmployeeInProbation,this.eligibility=e.eligibility,this.showApplicationToEmployee=e.showApplicationToEmployee,this.allowManagerToApply=e.allowManagerToApply,this.blockOnOutStandingLimit=e.blockOnOutStandingLimit,this.outStandingLimit=e.outStandingLimit,this.approvalProcess=new A(e),this.emiCalculation=e.emiCalculation,this.terminationOfEmployment=e.terminationOfEmployment,this.isReviewedByUser=e.isReviewedByUser,this.enableEmployeeLoans=e.enableEmployeeLoans}}();e.LoanConfiguration=D;var I=function(){return function(e){this.availability=e.availability,this.limitGrossSalaryRange=e.limitGrossSalaryRange,this.minSalary=e.minSalary,this.maxSalary=e.maxSalary,this.eligibleInNoticePeriod=e.eligibleInNoticePeriod}}();e.LoanEligibility=I;var A=function(e){function t(t){var i=e.call(this,t.approvalProcess)||this;return i.requireSignedLegalAgreement=t.requireSignedLegalAgreement,i.requireApprovalProcess=!0,i.requireApproval=!0,i.limitLoanAmount=t.approvalProcess.limitLoanAmount,i.loanLimit=new M(t.approvalProcess.loanLimit),i}return __extends(t,e),t}(ApprovalChain.ApprovalSettings);e.LoanApprovalProcess=A;var E=function(){return function(e){this.standardRateOfInterest=e.standardRateOfInterest,this.interestCalculationMethod=e.interestCalculationMethod,this.maximumInstallments=e.maximumInstallments}}();e.EMICalculation=E;var R=function(){return function(e){this.defaultInterestRate=e.defaultInterestRate,this.allowOneTimeLateRepayment=e.allowOneTimeLateRepayment,this.percentageOfOutStandingBalance=e.percentageOfOutStandingBalance,this.amount=e.amount}}();e.TerminationOfEmployment=R;var x=function(){return function(e){this.afterProbation=e.afterProbation,this.daysAfterJoining=e.daysAfterJoining}}();e.LoanAvailability=x;var M=function(){return function(e){this.percentageOfGrossSalary=e.percentageOfGrossSalary,this.maxLoanLimit=e.maxLoanLimit,this.allowOverrideMaxLimit=e.allowOverrideMaxLimit,this.overrideMaxLimitBy=e.overrideMaxLimitBy}}();e.LoanLimit=M;var N=function(){return function(e){this.openingStatement=e.openingStatement,this.closingStatement=e.closingStatement}}();e.FullAndFinalSettlement=N;var O,k,F=function(){return function(e){this.id=e.id||0,this.title=e.title,this.expression=e.expression}}();e.NoticePeriodBuyOutConfiguration=F,function(e){e[e.monthly=0]="monthly",e[e.daily=1]="daily",e[e.hourly=2]="hourly"}(e.RemunerationType||(e.RemunerationType={})),function(e){e[e.none=0]="none",e[e.monthly=1]="monthly",e[e.quarterly=2]="quarterly",e[e.yearly=3]="yearly",e[e.halfYearly=4]="halfYearly"}(O=e.ComponentClaimFrequency||(e.ComponentClaimFrequency={})),function(e){e[e.paidAsTaxable=0]="paidAsTaxable",e[e.carryForward=1]="carryForward",e[e.void=2]="void"}(k=e.ActionOnUnClaimedAmount||(e.ActionOnUnClaimedAmount={}));var $=function(){return function(e){this.actionOnUnClaimedAmountForClaimFrequency=e.actionOnUnClaimedAmountForClaimFrequency,this.actionOnUnClaimedAmountForFinancialYearEnd=e.actionOnUnClaimedAmountForFinancialYearEnd}}();e.ActionOnUnclaimedAmount=$;var G=function(){return function(e){this.isClaimLimitedToAccrued=e.isClaimLimitedToAccrued,this.payOnlyAccruedAmount=!!this.isClaimLimitedToAccrued||e.payOnlyAccruedAmount,this.canAdjustExtraPaidAmountDueToLOP=!!this.payOnlyAccruedAmount||e.canAdjustExtraPaidAmountDueToLOP}}();e.ClaimAndPaymentRules=G}(e.Model||(e.Model={}))}(e.Configuration||(e.Configuration={}))}(Payroll||(Payroll={})),function(e){!function(e){!function(e){var t=function(){function e(e,t,i){this.$urlRouterProvider=e,this.$stateProvider=t,this.appFeatures=i;var n="settings.payroll";-1!=this.appFeatures.indexOf(this.PaygroupsFeature)?(this.registerPayGroupSettingsBaseRoutes(),this.registerRedirectWhenPayGroupEnable(),n="settings.payroll.paygroup.details"):(this.registerSettingsBaseRoutes(),this.registerRedirectWhenPayGroupNotEnable()),this.registerSetupRoutes(n),this.registerMiscSettingsRoutes(n),this.registerPayslipSettingsRoutes(n),this.registerfullAndFinalSettlementConfigsRoutes(n)}return Object.defineProperty(e.prototype,"PaygroupsFeature",{get:function(){return"PAYGROUPS"},enumerable:!0,configurable:!0}),e.prototype.registerPayGroupSettingsBaseRoutes=function(){this.$stateProvider.state("settings.payroll",{url:"/payroll",templateUrl:"/PayrollSettings",title:"Payroll"}).state("settings.payroll.paygroup",{url:"/paygroup",templateUrl:"/PayrollSettings/PayGroups",controller:"PaygroupListController",title:"Payroll payGroup",parentState:"settings.payroll",controllerAs:"ctrl"}).state("settings.payroll.paygroup.details",{url:"/:groupId/details",templateUrl:"/PayrollSettings/PayGroupDetails",title:"Payroll payGroup",resolve:{payrollConfiguration:["PayrollConfigurationService","$stateParams",function(e,t){return e.getconfiguration(t.groupId)}]}}).state("settings.payroll.leaveEncashment",{url:"/leaveencashmentpolicies",templateUrl:"/PayrollSettings/LeaveEncashmentPolicies",title:"Leave Encashment Policies | Payroll",controller:"LeaveEncashmentSettingsController",controllerAs:"ctrl",parentState:"settings.payroll.components"}).state("settings.payroll.components",{url:"/components",templateUrl:"/PayrollSettings/Components",title:"Payroll"}).state("settings.payroll.components.recurring",{url:"/recurring",templateUrl:"/PayrollSettings/RecurringComponents",controller:"recurringController",controllerAs:"ctrl",title:"Payroll",parentState:"settings.payroll.components"}).state("settings.payroll.components.adhoc",{url:"/adhoc",templateUrl:"/PayrollSettings/adhocComponents",controller:"adhocController",controllerAs:"ctrl",title:"Payroll",parentState:"settings.payroll.components"}).state("settings.payroll.overtime",{url:"/overtime",templateUrl:"/payroll/overtimeindex",controller:"OvertimeController",title:"Overtime"}).state("settings.payroll.overtime.paycodes",{url:"/paycodes",template:"<pay-codes></pay-codes>",title:"Pay Codes",parentState:"settings.payroll.overtime"}).state("settings.payroll.overtime.policies",{url:"/policies",template:"<overtime-policies></overtime-policies>",title:"Overtime Policies",parentState:"settings.payroll.overtime"}).state("settings.payroll.overtime.policies.details",{url:"/:policyId/details",template:"<overtime-policies></overtime-policies>",title:"Overtime Policies",parentState:"settings.payroll.overtime"}).state("settings.payroll.overtime.addpolicy",{url:"/addPolicy",template:"<open-overtime-policy-modal></open-overtime-policy-modal>",title:"Add Overtime Policy",parentState:"settings.payroll.overtime.policies"}).state("settings.payroll.overtime.editpolicy",{url:"/:policyId/editPolicy",template:"<open-overtime-policy-modal></open-overtime-policy-modal>",title:"Edit Overtime Policy",parentState:"settings.payroll.overtime.policies"}).state("settings.payroll.overtime.viewpolicy",{url:"/policy/:policyId/view",template:"<open-overtime-policy-view-modal></open-overtime-policy-view-modal>",title:"View Overtime Policy",parentState:"settings.payroll.overtime.policies"})},e.prototype.registerRedirectWhenPayGroupEnable=function(){this.$urlRouterProvider.when("/settings/payroll","/settings/payroll/paygroup"),this.$urlRouterProvider.when("/settings/payroll/paygroup/:groupId/details","/settings/payroll/paygroup/:groupId/details/setup"),this.$urlRouterProvider.when("/settings/payroll/paygroup/:groupId/details/payslip","/settings/payroll/paygroup/:groupId/details/payslip/payslipoptions"),this.$urlRouterProvider.when("/settings/payroll/paygroup/:groupId/details/fullandfinalsettlement","/settings/payroll/paygroup/:groupId/details/fullandfinalsettlement/openingandclosingnotes"),this.$urlRouterProvider.when("/settings/payroll/paygroup/:groupId/details/misc","/settings/payroll/paygroup/:groupId/details/misc/paymentsettings"),this.$urlRouterProvider.when("/settings/payroll/components","/settings/payroll/components/recurring"),this.$urlRouterProvider.when("/settings/payroll/paygroup/:groupId/details/overtime","/settings/payroll/paygroup/:groupId/details/overtime/paycodes"),this.$urlRouterProvider.when("/settings/payroll/overtime","/settings/payroll/overtime/paycodes")},e.prototype.registerSettingsBaseRoutes=function(){this.$stateProvider.state("settings.payroll",{url:"/payroll",templateUrl:"/PayrollSettings/PayGroupDetails",title:"Payroll",resolve:{payrollConfiguration:["PayrollConfigurationService",function(e){return e.getconfiguration()}]}})},e.prototype.registerRedirectWhenPayGroupNotEnable=function(){this.$urlRouterProvider.when("/settings/payroll","/settings/payroll/setup"),this.$urlRouterProvider.when("/settings/payroll/payslip","/settings/payroll/payslip/payslipoptions"),this.$urlRouterProvider.when("/settings/payroll/misc","/settings/payroll/misc/leaveencashmentpolicies"),this.$urlRouterProvider.when("/settings/payroll/fullandfinalsettlement","/settings/payroll/fullandfinalsettlement/openingandclosingnotes"),this.$urlRouterProvider.when("/settings/payroll/overtime","/settings/payroll/overtime/paycodes")},e.prototype.registerSetupRoutes=function(e){this.$stateProvider.state(e+".getStarted",{url:"/setup",templateUrl:"/payroll/getstarted",controller:"PayrollGetStartedController",title:"Payroll Setup",parentState:"settings.payroll",controllerAs:"ctrl"}).state(e+".getStarted.companyinfo",{url:"/companyinfo",title:"Company Info | Payroll Setup",onEnter:["$uibModal","$state","$stateParams","payrollConfiguration",function(e,t,i,n){e.open({templateUrl:"payrollCompanyInformation",windowClass:"full-screen-modal no-scroll-x",backdrop:!1,controller:"PayrollCompanyInformationController",resolve:{payrollConfig:function(){return n}}}).result.finally(function(){t.go("^")})}]}).state(e+".getStarted.generalpayroll",{url:"/generalpayroll",title:"General Settings | Payroll Setup",onEnter:["$uibModal","$state","$stateParams","payrollConfiguration",function(e,t,i,n){e.open({templateUrl:"PayrollSettings/PayrollGeneralSettings",windowClass:"full-screen-modal",backdrop:!1,controller:"PayrollSetUpGeneralSettingsController",controllerAs:"ctrl",resolve:{payrollConfig:function(){return n}}}).result.finally(function(){t.go("^")})}]}).state(e+".getStarted.pfandesi",{url:"/pfandesi",title:"PF and ESI Settings | Payroll Setup",onEnter:["$uibModal","$state","$stateParams","payrollConfiguration",function(e,t,i,n){e.open({templateUrl:"pfAndESISetting",windowClass:"full-screen-modal pf-esi-settings-container",backdrop:!1,controller:"PayrollPFAndESISettingsController",resolve:{payrollConfig:function(){return n}}}).result.finally(function(){t.go("^")})}]}).state(e+".getStarted.salarycomponentsandstructures",{url:"/salarycomponentsandstructures",title:"Salary Structure and Component Settings | Payroll Setup",onEnter:["$uibModal","$state","$stateParams","payrollConfiguration",function(e,t,i,n){e.open({templateUrl:"salaryConfiguration",windowClass:"full-screen-modal",backdrop:!1,controller:"PayrollSalaryConfigurationController",resolve:{payrollConfig:function(){return n}}}).result.finally(function(){t.go("^")})}]}).state(e+".getStarted.customsalarysetting",{url:"/customsalarystructures",title:"Custom Salary Settings | Payroll Setup",onEnter:["$uibModal","$state","$stateParams","payrollConfiguration",function(e,t,i,n){e.open({templateUrl:"customSalaryConfiguration",windowClass:"full-screen-modal no-scroll-x",backdrop:!1,controller:"CustomSalaryStructureSettingsController",controllerAs:"vm",resolve:{payrollConfig:function(){return n}}}).result.finally(function(){t.go("^")})}]}).state(e+".getStarted.myfinancesetting",{url:"/myfinancesetting",title:"My Finance Settings | Payroll Setup",onEnter:["$uibModal","$state","$stateParams","payrollConfiguration",function(e,t,i,n){e.open({templateUrl:"itDeclarationSettings",windowClass:"full-screen-modal",backdrop:!1,controller:"ITDeclarationSettingsController",controllerAs:"ctrl",resolve:{payrollConfig:function(){return n}}}).result.finally(function(){t.go("^")})}]}).state(e+".getStarted.statutoryfilinginfo",{url:"/statutoryfilinginfo",title:"Statutory Filing Info | Payroll Setup",onEnter:["$uibModal","$state","$stateParams","payrollConfiguration",function(e,t,i,n){e.open({templateUrl:"statutoryFilingInformation",windowClass:"full-screen-modal no-scroll-x pt-setup-container",backdrop:!1,controller:"PayrollStatuaryFilingInformationController",controllerAs:"ctrl",resolve:{payrollConfig:function(){return n}}}).result.finally(function(){t.go("^")})}]}).state(e+".getStarted.loansettings",{url:"/loansettings",title:"Loan Settings | Payroll Setup",onEnter:["$uibModal","$state","$stateParams","payrollConfiguration",function(e,t,i,n){e.open({templateUrl:"loanSettings",windowClass:"full-screen-modal",backdrop:!1,controller:"PayrollLoanSettingsController as ctrl",resolve:{payrollConfig:function(){return n}}}).result.finally(function(){t.go("^")})}]}).state(e+".overtime",{url:"/overtime",templateUrl:"/payroll/overtimeindex",controller:"OvertimeController",title:"Overtime"}).state(e+".overtime.paycodes",{url:"/paycodes",template:"<pay-codes></pay-codes>",title:"Pay Codes",parentState:e+".overtime"}).state(e+".overtime.policies",{url:"/policies",template:"<overtime-policies></overtime-policies>",title:"Overtime Policies",parentState:e+".overtime"}).state(e+".overtime.policies.details",{url:"/:policyId/details",template:"<overtime-policies></overtime-policies>",title:"Overtime Policies",parentState:e+".overtime"}).state(e+".overtime.addpolicy",{url:"/addPolicy",template:"<open-overtime-policy-modal></open-overtime-policy-modal>",title:"Add Overtime Policy",parentState:e+".overtime.policies"}).state(e+".overtime.editpolicy",{url:"/:policyId/editPolicy",template:"<open-overtime-policy-modal></open-overtime-policy-modal>",title:"Edit Overtime Policy",parentState:e+".overtime.policies"}).state(e+".overtime.viewpolicy",{url:"/policy/:policyId/view",template:"<open-overtime-policy-view-modal></open-overtime-policy-view-modal>",title:"View Overtime Policy",parentState:e+".overtime.policies"})},e.prototype.registerMiscSettingsRoutes=function(e){this.$stateProvider.state(e+".misc",{url:"/misc",templateUrl:"/PayrollSettings/PayrollMiscSettings",title:"MISC Settings | Payroll"}).state(e+".misc.leaveencashmentpolicies",{url:"/leaveencashmentpolicies",templateUrl:"/PayrollSettings/LeaveEncashmentPolicies",title:"Leave Encashment Policies | Payroll",controller:"LeaveEncashmentSettingsController",controllerAs:"ctrl"}).state(e+".misc.paymentsettings",{url:"/paymentsettings",templateUrl:"/PayrollSettings/PaymentSettings",title:"MISC Settings | Payroll",controller:"PaymentSettingsController",controllerAs:"ctrl"}).state(e+".misc.componentRoundingSettings",{url:"/componentRounding",templateUrl:"/PayrollSettings/ComponentRoundingSettings",title:"MISC Settings | Payroll",controller:"ComponentRoundOffSettingsController",controllerAs:"ctrl"})},e.prototype.registerPayslipSettingsRoutes=function(e){this.$stateProvider.state(e+".payslip",{url:"/payslip",templateUrl:"/PayrollSettings/PayslipSettings",title:"Payslip Settings | Payroll"}).state(e+".payslip.options",{url:"/payslipoptions",templateUrl:"/PayrollSettings/PayslipOptions",title:"Payslip Options | Payroll",controller:"PayslipFieldSettingController",controllerAs:"ctrl",resolve:{payrollConfiguration:["payrollConfiguration",function(e){return e}]}}).state(e+".payslip.layout",{url:"/paysliplayout",templateUrl:"/PayrollSettings/PayslipLayout",title:"Payslip Layout | Payroll"})},e.prototype.registerfullAndFinalSettlementConfigsRoutes=function(e){this.$stateProvider.state(e+".fullAndFinalSettlement",{url:"/fullandfinalsettlement",templateUrl:"/PayrollSettings/FullAndFinalSettlementSettings",title:"f & f statement | Payroll"}).state(e+".fullAndFinalSettlement.openingAndClosingNotes",{url:"/openingandclosingnotes",templateUrl:"/PayrollSettings/openingAndClosingNotes",title:"Payslip Options | Payroll",controller:"FullAndFinalSettlementConfigController",controllerAs:"ctrl",resolve:{payGroupId:["payrollConfiguration",function(e){return e.payGroupId}]}}).state(e+".fullAndFinalSettlement.noticePeriodBuyOut",{url:"/noticeperiodbuyout",templateUrl:"/PayrollSettings/noticePeriodBuyOut",title:"Notice Period Buy Out | Payroll",controller:"NoticePeriodBuyOutConfigController",controllerAs:"ctrl",resolve:{payGroupId:["payrollConfiguration",function(e){return e.payGroupId}]}})},e}();e.RegisterConfigurationRouting=t,angular.module("payroll").config(["$urlRouterProvider","$stateProvider",function(e,i){new t(e,i,this.appAccessKeys)}])}(e.routing||(e.routing={}))}(e.Configuration||(e.Configuration={}))}(Payroll||(Payroll={}));var Payroll;__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(t){!function(i){!function(i){var n=function(){function i(i,n,o,r,a,s,l,c){var p=this;this.scope=i,this.qService=n,this.modalService=o,this.dialogService=r,this.PayrollSalaryConfigurationService=a,this.notificationService=s,this.appSettings=l,this.AppContext=c,this.model={},this.salaryComponentType=t.Model.salaryComponentTypes,this.paidFrequency=t.Model.paidFrequency,this.componentVisibleType=t.Model.SalaryComponentVisibleType,this.componentClaimFrequency=t.Model.ComponentClaimFrequency,this.actionOnUnClaimedAmount=t.Model.ActionOnUnClaimedAmount,this.standardSalaryComponents=[],this.tenantSalaryComponents=[],this.salaryComponents=[],this.modalInstances={},this.salaryComponentKeys={},this.isPaygroupEnable=this.AppContext.isFeaturePresent("PAYGROUPS"),this.isFBPFeaturePresent=this.AppContext.isFeaturePresent("FBP"),this.niceScrollOptions=this.appSettings.scrollSettings,this.allowanceSectionsList=["Section_10(14)(i)","Section_10(14)(ii)","Section_10(5)","Section_17(2)(Viii)","Section_10(13)(a)"],this.deductionSectionList=["Section_16(iii)"],this.contributionSectionList=["Section_80CCD(2)"],this.salaryStructureCopy=angular.copy(this.scope.payrollConfig.salaryStructures),this.salaryComponentKeys=e.Configuration.Model.SalaryComponents,this.qService.all([this.PayrollSalaryConfigurationService.getAllSalaryComponents(this.scope.payrollConfig.payGroupId),this.PayrollSalaryConfigurationService.getStandardSettings(this.scope.payrollConfig.countryCode,this.scope.payrollConfig.financialyear)]).then(function(t){p.standardSalaryComponents=new e.Configuration.Model.StandardSettings(t[1]).salaryComponents,0==p.scope.payrollConfig.supportedSalaryComponents.length&&angular.forEach(p.standardSalaryComponents,function(e){p.scope.payrollConfig.supportedSalaryComponents.push(e)}),t[0].forEach(function(t){p.tenantSalaryComponents.push(e.Configuration.Model.createSalaryComponentModel(t))});var i={};p.standardSalaryComponents.forEach(function(e){i[e.componentName]=e}),angular.forEach(p.tenantSalaryComponents,function(e){i.hasOwnProperty(e.componentName)||(e.isCustom=!0),e.isEnabled=!e.disabled,p.AddNewSection(e),p.salaryComponents.push(e)}),p.salaryComponents=p.salaryComponents.filter(function(e){return e.paidFrequency!=p.paidFrequency.none&&!e.isDeleted&&e.paidFrequency!=p.paidFrequency.once&&!e.internal&&-1==[p.salaryComponentKeys.PF,p.salaryComponentKeys.VPF,p.salaryComponentKeys.PFEmployer,p.salaryComponentKeys.ESI].indexOf(e.componentName)}),angular.forEach(p.salaryStructureCopy,function(e){p.salaryComponents.forEach(function(t){e.components.find(function(e){return e.componentName==t.componentName})&&(t.isIncluded=!0)})}),p.scope.payrollConfig.customSalaryConfig.customSalaryStructures&&p.scope.payrollConfig.customSalaryConfig.customSalaryStructures.length>0&&angular.forEach(p.scope.payrollConfig.customSalaryConfig.customSalaryStructures,function(e){p.salaryComponents.forEach(function(t){e.components.find(function(e){return e.componentName==t.componentName})&&(t.isIncluded=!0)})})}),this.initGridSettings()}return i.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.columnDefs=[{name:"componentName",displayName:"Component Name",cellTemplate:'<div class="ui-grid-cell-contents tax-excempt"><span class="componet-status enabled"data-ng-if="!row.entity.disabled"> On </span><span class= "componet-status "data-ng-if="row.entity.disabled"> Off </span>{{row.entity.title}}<span class= "icon-shopping-basket pull-right" data-uib-popover="This is FBP Component." data-popover-trigger="mouseenter" data-ng-if="row.entity.isPartOfFBP"></span></div>',enableGrouping:!1},{name:"componentType",displayName:"Type",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents capitalize">{{grid.appScope.salaryComponentType[row.entity.componentType]}}</div>',enableGrouping:!1},{name:"taxExcempt",displayName:"Tax Exempt",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents top-padding-10"><span data-ng-if="row.entity.hasTaxBenefits">Tax Exempt</span><span data-ng-if="!row.entity.hasTaxBenefits">Taxable</span><span class="text-muted clear-bottom section-name display-block" data-ng-if="row.entity.hasTaxBenefits">{{row.entity.sectionName}}</span></div>',enableGrouping:!1},{name:"maxLimit",displayName:"Max Limit(Year)",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="!grid.appScope.isAutoCalculated(row.entity)">{{row.entity.amount | currency: "": 00 }}</span><span data-ng-if="grid.appScope.isAutoCalculated(row.entity)">Auto Calculated</span></div>',enableGrouping:!1},{name:"requireDocs",displayName:"Require Docs",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.onActuals">Yes</span><span data-ng-if="!row.entity.onActuals">No</span></div>',enableGrouping:!1},{name:"individualOverride",displayName:"individual Override",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="!row.entity.allowEmployeeOverride">Not</span> Allowed</div>',enableGrouping:!1},{name:"Actions",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents edit-container"><span></span><a data-ng-click="grid.appScope.addSalaryComponent(row.entity)" data-ng-if="grid.appScope.isPaygroupEnable"><span class="icon-pencil symbol"></span>Edit</a><a data-ng-click="grid.appScope.addSalaryComponent(row.entity)" data-ng-if="!grid.appScope.isPaygroupEnable"><span class="icon-pencil symbol"></span>Edit</a><a data-ng-click="grid.appScope.deleteCustomSalaryComponent(row.entity)" class="remove-lnk" data-ng-if="row.entity.isCustom && !row.entity.isIncluded" > <span class="icon-remove3 symbol"></span>Remove</a></div>',enableGrouping:!1}],this.gridSettings.data="ctrl.salaryComponents | orderBy:'disabled' | filter : ctrl.searchComponent",this.gridSettings.appScopeProvider=this,this.gridSettings.rowHeight=50,this.gridSettings.onRegisterApi=function(t){e.gridApi=t}},i.prototype.getComponentMinValue=function(e){var t=0;if(!e)return t;var i=this.scope.payrollConfig.supportedSalaryComponents.find(function(t){return t.componentName==e});return i.allowOverride?(angular.forEach(this.scope.payrollConfig.salaryStructures,function(i,n){var o=i.components.find(function(t){return t.componentName==e});o&&(0==t?t=o.amount:t>o.amount&&(t=o.amount))}),t):i.amount},i.prototype.deleteCustomSalaryComponent=function(e){var t=this;this.dialogService.confirm("Please Confirm","Are you sure want to delete this component").result.then(function(){t.disableBtnOnRequest=!0,t.PayrollSalaryConfigurationService.deleteCustomComponent(t.scope.payrollConfig.payGroupId,e.componentName).then(function(i){if(t.disableBtnOnRequest=!1,i.isDeleted){t.salaryComponents=t.salaryComponents.filter(function(t){return t.componentName!=e.componentName}),t.scope.payrollConfig.supportedSalaryComponents=t.scope.payrollConfig.supportedSalaryComponents.filter(function(t){return t.componentName!=e.componentName});var n=t.scope.payrollConfig.supportedSalaryComponents.find(function(t){return t.componentName==e.componentName});n&&(n.isDeleted=!0),t.notificationService.success(e.title+" has been deleted successfully")}},function(i){t.notificationService.success(e.title+" deletion failed!"),t.disableBtnOnRequest=!1})})},i.prototype.saveSalaryComponentChanges=function(){var e=this;this.form.addSalaryComponentForm.$valid&&(this.disableBtnOnRequest=!0,this.model.salaryComponent.disabled?this.disableAllowanceComponent():this.isPaygroupEnable?this.saveAllowanceComponentChanges():this.dialogService.confirm("Please Confirm","This will update the component name for all salary structures. Do you wish to continue?").result.then(function(){e.saveAllowanceComponentChanges()},function(){e.disableBtnOnRequest=!1}))},i.prototype.saveAllowanceComponentChanges=function(){var t=this;this.PayrollSalaryConfigurationService.updateComponent(this.scope.payrollConfig.payGroupId,this.model.salaryComponent.componentName,new e.Configuration.Model.ComponentOverride(this.model.salaryComponent)).then(function(e){if(e){t.disableBtnOnRequest=!1;var i=t.salaryComponents.find(function(e){return e.componentName==t.model.salaryComponent.componentName});if(i){i.requiredDeduction=t.model.salaryComponent.requiredDeduction,i.title=t.model.salaryComponent.title,i.paySeparately=t.model.salaryComponent.paySeparately,i.allowEmployeeOverride=t.model.salaryComponent.allowEmployeeOverride,i.disabled=t.model.salaryComponent.disabled,i.componentType=t.model.salaryComponent.componentType,i.componentVisibleType=t.model.salaryComponent.componentVisibleType,i.hasTaxBenefits=t.model.salaryComponent.hasTaxBenefits,i.isPartOfFBP=t.model.salaryComponent.isPartOfFBP,i.sectionName=t.model.salaryComponent.sectionName,i.sectionMaxAmount=t.model.salaryComponent.sectionMaxAmount,i.affectedDueToWorkedRatio=t.model.salaryComponent.affectedDueToWorkedRatio,i.canAdjustDifferenceAmountDueWorkRatio=t.model.salaryComponent.canAdjustDifferenceAmountDueWorkRatio,i.amount=t.model.salaryComponent.amount,i.canBeArrear=t.model.salaryComponent.canBeArrear,i.amountExpression=t.model.salaryComponent.amount.toString(),i.componentType==t.salaryComponentType.allowance&&(i.onActuals=t.model.salaryComponent.onActuals),i.componentType!=t.salaryComponentType.reimbursable&&i.componentType!=t.salaryComponentType.reimbursement||(i.allowEmployeeToSubmitProof=t.model.salaryComponent.allowEmployeeToSubmitProof,i.claimFrequency=t.model.salaryComponent.claimFrequency,i.claimAndPaymentRules.isClaimLimitedToAccrued=t.model.salaryComponent.claimAndPaymentRules.isClaimLimitedToAccrued,i.claimAndPaymentRules.canAdjustExtraPaidAmountDueToLOP=t.model.salaryComponent.claimAndPaymentRules.canAdjustExtraPaidAmountDueToLOP,i.claimAndPaymentRules.payOnlyAccruedAmount=t.model.salaryComponent.claimAndPaymentRules.payOnlyAccruedAmount,i.actionOnUnclaimedAmount.actionOnUnClaimedAmountForClaimFrequency=t.model.salaryComponent.actionOnUnclaimedAmount.actionOnUnClaimedAmountForClaimFrequency,i.actionOnUnclaimedAmount.actionOnUnClaimedAmountForFinancialYearEnd=t.model.salaryComponent.actionOnUnclaimedAmount.actionOnUnClaimedAmountForFinancialYearEnd,i.isClaimOnceAYear=i.claimFrequency==t.componentClaimFrequency.yearly),i.componentName==t.salaryComponentKeys.GratuityContribution&&(i.eligibleMonths=t.model.salaryComponent.eligibleMonths);var n=t.scope.payrollConfig.supportedSalaryComponents.find(function(e){return e.componentName==i.componentName});if(t.AddNewSection(i),n){var o=t.scope.payrollConfig.supportedSalaryComponents.indexOf(n);t.scope.payrollConfig.supportedSalaryComponents[o]=angular.copy(i)}}t.notificationService.success(t.model.salaryComponent.title+" updated successfully."),t.modalInstances.componentEditInstance.close()}else t.notificationService.information("Component with same name already exists. Please use a different name.")},function(e){t.notificationService.error(e.data.message),t.disableBtnOnRequest=!1})},i.prototype.disableAllowanceComponent=function(){var e=this;this.PayrollSalaryConfigurationService.disableSalaryComponent(this.scope.payrollConfig.payGroupId,this.model.salaryComponent.componentName).then(function(t){if(e.disableBtnOnRequest=!1,t){var i=e.salaryComponents.find(function(t){return t.componentName==e.model.salaryComponent.componentName});if(i){i.disabled=!0;var n=e.scope.payrollConfig.supportedSalaryComponents.find(function(t){return t.componentName==e.model.salaryComponent.componentName});n&&(n.disabled=!0)}e.notificationService.success(e.model.salaryComponent.title+" disable successfully."),e.modalInstances.componentEditInstance.close()}},function(t){e.notificationService.error(t.data.message),e.disableBtnOnRequest=!1})},i.prototype.AddNewSection=function(e){if(e.hasTaxBenefits)switch(e.componentType){case this.salaryComponentType.deduction:this.deductionSectionList.every(function(t){return t!=e.sectionName})&&this.deductionSectionList.push(e.sectionName);case this.salaryComponentType.allowance:case this.salaryComponentType.reimbursable:this.allowanceSectionsList.every(function(t){return t!=e.sectionName})&&this.allowanceSectionsList.push(e.sectionName);case this.salaryComponentType.contribution:this.contributionSectionList.every(function(t){return t!=e.sectionName})&&this.contributionSectionList.push(e.sectionName)}},i.prototype.createNewSalaryComponent=function(){var t=this;this.form.addSalaryComponentForm.$valid&&(this.disableBtnOnRequest=!0,this.PayrollSalaryConfigurationService.createSalaryComponent(this.scope.payrollConfig.payGroupId,new e.Configuration.Model.ComponentOverride(this.model.salaryComponent)).then(function(i){t.disableBtnOnRequest=!1;var n=e.Configuration.Model.createSalaryComponentModel(i);n.isCustom=!0,n.disabled=n.disabled,t.salaryComponents.push(n),t.AddNewSection(n),t.scope.payrollConfig.supportedSalaryComponents.push(n),t.notificationService.success(n.title+" has been created successfully."),t.modalInstances.componentEditInstance.close()},function(e){t.notificationService.error(e.data.message),t.disableBtnOnRequest=!1}))},i.prototype.resetRequiredDeduciton=function(){this.model.salaryComponent.paySeparately||(this.model.salaryComponent.requiredDeduction=!1),this.model.salaryComponent.componentVisibleType=this.componentVisibleType.payslip},i.prototype.resetOnActuals=function(){this.model.salaryComponent.hasTaxBenefits||(this.model.salaryComponent.onActuals=!1)},i.prototype.addRecurringComponents=function(t){var i=this;this.modalInstances.componentEditInstance=this.modalService.open({templateUrl:"PayrollSettings/addNewSalaryComponent",windowClass:"structure-compare add-new-salary-component small-btn",controller:r,controllerAs:"ctrl",backdrop:"static",resolve:{salaryComponents:function(){return i.scope.payrollConfig.supportedSalaryComponents.filter(function(e){return!e.isDeleted})}}}),this.modalInstances.componentEditInstance.result.then(function(t){t.components.forEach(function(t){var n=e.Configuration.Model.createSalaryComponentModel(t);n.isCustom=!0,n.disabled=n.disabled,i.salaryComponents.every(function(e){return e.componentName!=t.componentName})&&i.salaryComponents.push(n);var o=i.scope.payrollConfig.supportedSalaryComponents.indexOf(n);o>-1?i.scope.payrollConfig.supportedSalaryComponents[o]=angular.copy(n):i.scope.payrollConfig.supportedSalaryComponents.push(n),i.AddNewSection(n)})}),this.initGridSettings()},i.prototype.addSalaryComponent=function(e){var i=this;this.model.salaryComponent=e?angular.copy(t.Model.createSalaryComponentModel(e)):new t.Model.SalaryComponentConfiguration({affectedDueToWorkedRatio:!1,componentType:this.salaryComponentType.allowance,disabled:!1,isNew:!0,componentVisibleType:this.componentVisibleType.payslip,isCustom:!0,canBeArrear:!1,claimAndPaymentRules:{isClaimLimitedToAccrued:!0,payOnlyAccruedAmount:!0,canAdjustExtraPaidAmountDueToLOP:!0},actionOnUnclaimedAmount:{actionOnUnClaimedAmountForClaimFrequency:this.actionOnUnClaimedAmount.carryForward,actionOnUnClaimedAmountForFinancialYearEnd:this.actionOnUnClaimedAmount.void},claimFrequency:this.componentClaimFrequency.monthly}),this.modalInstances.componentEditInstance=this.modalService.open({templateUrl:"base-recuringComponent",windowClass:"structure-compare add-new-salary-component small-btn",backdrop:"static",scope:this.scope}),this.modalInstances.componentEditInstance.result.then(function(e){i.initGridSettings()})},i.prototype.isFixedcomponent=function(e){return e.componentType==this.salaryComponentType.fixed},i.prototype.isSpecialAllowance=function(e){return e.componentName==this.salaryComponentKeys.Special},i.prototype.isFixedorSpecialComponent=function(e){return this.isFixedcomponent(e)||this.isSpecialAllowance(e)},i.prototype.isAutoCalculated=function(e){return this.isFixedorSpecialComponent(e)||e.componentName==this.salaryComponentKeys.ProfessionalTax},i.prototype.isFBPApplicableComponent=function(e){var t=[this.salaryComponentKeys.Basic,this.salaryComponentKeys.Special,this.salaryComponentKeys.DearnessAllowance,this.salaryComponentKeys.PF,this.salaryComponentKeys.PFEmployer,this.salaryComponentKeys.VPF,this.salaryComponentKeys.ProfessionalTax,this.salaryComponentKeys.ESI,this.salaryComponentKeys.ESIEmployer];return e.componentType!=this.salaryComponentType.deduction&&e.componentType!=this.salaryComponentType.contribution&&!t.includes(e.componentName)},i.$inject=["$scope","$q","$uibModal","dialogs","PayrollSalaryConfigurationService","NotificationService","AppSettings","AppContext"],i}(),o=function(){function e(e,t,i,n,o){this.payrollSalaryConfigurationService=e,this.notificationService=t,this.stateParams=i,this.modelInstance=n,this.appSettings=o,this.globalSalaryComponents=[],this.selectedComponents=[]}return e.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.columnDefs=[{name:"componentName",displayName:"Component Name",cellTemplate:'<div class="ui-grid-cell-contents tax-excempt">{{row.entity.title}}</div>'},{name:"componentType",displayName:"Type",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents capitalize">{{grid.appScope.salaryComponentType[row.entity.componentType]}}</div>'},{name:"taxExcempt",displayName:"Tax Exempt ",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents top-padding-10"><span data-ng-if="row.entity.hasTaxBenefits">Tax Exempt</span><span data-ng-if="!row.entity.hasTaxBenefits">Taxable</span><span class="text-muted clear-bottom section-name display-block" data-ng-if="row.entity.hasTaxBenefits">{{row.entity.sectionName}}</span></div>'},{name:"amountExpression",displayName:"MAX LIMIT(YEAR)",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.amountExpression | currency: "": 00 }}</span></div>'},{name:"status",displayName:"",cellClass:"ui-grid-cell",cellTemplate:'<div class="v-align-middle ui-grid-cell-contents"><div class="checkbox"><label><input type="checkbox" data-ng-model="row.entity.status" ng-checked="row.entity.status"/><span class="check-overlay large inverted node v-align-bottom"></span></label></div></div>'}],this.gridSettings.data="ctrl.globalSalaryComponents | filter : ctrl.searchComponent",this.gridSettings.appScopeProvider=this,this.gridSettings.rowHeight=50,this.gridSettings.onRegisterApi=function(t){e.gridApi=t}},e.prototype.addMasterComponents=function(){var e=this;this.globalSalaryComponents.forEach(function(t){t.status&&e.selectedComponents.push(t.componentName)}),this.selectedComponents.length>0?this.payrollSalaryConfigurationService.addMasterComponenets(this.stateParams.groupId,this.selectedComponents).then(function(t){t&&(e.notificationService.success("Components added successfully"),e.modelInstance.close({components:t.components}))}):this.notificationService.error("Please select atleast one component")},e}();i.AddMasterComponentController=o;var r=function(e){function i(i,n,o,r,a,s,l,c,p){void 0===p&&(p=[]);var u=e.call(this,s,l,o,r,c)||this;return u.scope=i,u.qService=n,u.stateParams=o,u.modelInstance=r,u.payrollGlobalConfigurationService=a,u.payrollSalaryConfigurationService=s,u.notificationService=l,u.appSettings=c,u.salaryComponents=p,u.salaryComponentType=t.Model.salaryComponentTypes,u.payrollGlobalConfigurationService.getRecurringComponents().then(function(e){e.filter(function(e){return!e.isDeleted}).forEach(function(e){u.salaryComponents.every(function(t){return t.componentName!=e.componentName})&&u.globalSalaryComponents.push(e)})}),u.initGridSettings(),u}return __extends(i,e),i.$inject=["$scope","$q","$stateParams","$uibModalInstance","payrollGlobalConfigurationService","PayrollSalaryConfigurationService","NotificationService","AppSettings","salaryComponents"],i}(o);i.AddRecurringComponentController=r;var a=function(e){function i(i,n,o,r,a,s,l,c,p){void 0===p&&(p=[]);var u=e.call(this,s,l,o,r,c)||this;return u.scope=i,u.qService=n,u.stateParams=o,u.modelInstance=r,u.payrollGlobalConfigurationService=a,u.payrollSalaryConfigurationService=s,u.notificationService=l,u.appSettings=c,u.salaryComponents=p,u.salaryComponentType=t.Model.salaryComponentTypes,u.payrollGlobalConfigurationService.getAdhocComponents().then(function(e){e.filter(function(e){return!e.isDeleted}).forEach(function(e){u.salaryComponents.every(function(t){return t.componentName!=e.componentName})&&u.globalSalaryComponents.push(e)})}),u.initGridSettings(),u.gridSettings.columnDefs.splice(3,1),u}return __extends(i,e),i.$inject=["$scope","$q","$stateParams","$uibModalInstance","payrollGlobalConfigurationService","PayrollSalaryConfigurationService","NotificationService","AppSettings","salaryComponents"],i}(o);i.AddAdhocComponentController=a,angular.module("payroll").controller("PayrollSalaryComponentsSettingController",n).controller("AddRecurringComponentController",r).controller("AddAdhocComponentController",a)}(i.Components||(i.Components={}))}(t.Salary||(t.Salary={}))}(e.Configuration||(e.Configuration={}))}(Payroll||(Payroll={})),function(e){!function(e){!function(t){var i;t.Range||(t.Range={}),i=function(){function t(e,t,i,n,o,r,a){var s=this;this.scope=e,this.qService=t,this.modalService=i,this.payrollModel=n,this.PayrollSalaryConfigurationService=o,this.notificationService=r,this.dialogService=a,this.modalInstances={},this.standardSalaryComponents={},this.availableComponents=[],this.model={},this.PayrollSalaryConfigurationService.getCtcBasedStructures(this.scope.payrollConfig.payGroupId).then(function(e){s.buildSalaryConfiguration(e)})}return t.prototype.buildSalaryConfiguration=function(e){var t=this;this.scope.payrollConfig.ctcRanges=e.ctcRanges.map(function(e){return new t.payrollModel.CTCRanges(e)}),this.scope.payrollConfig.salaryStructures=e.salaryStructures.map(function(e){return new t.payrollModel.SalaryStructureConfiguration(e)}),this.scope.payrollConfig.supportedSalaryComponents.filter(function(e){return!e.disabled}).forEach(function(e){t.standardSalaryComponents[e.componentName]=e}),this.salaryStructures={},this.scope.payrollConfig.salaryStructures.forEach(function(e){t.salaryStructures[e.name]=e}),this.buildSlabs(),this.setActiveStructure(this.slabRanges[0])},t.prototype.setActiveStructure=function(t){this.structureComponentEdit=!1;var i=this.salaryStructures[t.name];i&&(this.activeStructure=new e.Model.StructureConfiguration(i,this.scope.payrollConfig),t.title=this.activeStructure.title,this.activeSlab=t)},t.prototype.buildSlabs=function(){var t=this;this.slabRanges=this.scope.payrollConfig.ctcRanges.sort(function(e,t){return e.max<t.max?-1:1}).map(function(i,n,o){return new e.Model.StructureSlab({max:i.max,min:i.min,name:i.salaryConfigurationName,title:t.salaryStructures[i.salaryConfigurationName].title,isLast:o.length-1==n,index:n})})},t.prototype.resetSalaryStructureConfig=function(){var t=this.salaryStructures[this.activeStructure.name];this.activeStructure=new e.Model.StructureConfiguration(t,this.scope.payrollConfig),this.structureComponentEdit=!1},t.prototype.saveSalaryStructureConfiguration=function(){var e=this;this.dialogService.confirm("Please Confirm","This would also update Future Employee Salary Revisions Continue ?").result.then(function(){e.PayrollSalaryConfigurationService.saveSalaryStructure(e.scope.payrollConfig.payGroupId,e.activeStructure).then(function(t){var i=new e.payrollModel.SalaryStructureConfiguration(t);e.salaryStructures[t.name].updateConfig(i);var n=e.scope.payrollConfig.salaryStructures.find(function(e){return e.name==t.name});n&&n.updateConfig(i),e.setActiveStructure(e.activeSlab),e.notificationService.success("Salary Structure Configuration is saved")},function(t){e.notificationService.error(t.data.message)})})},t.prototype.splitRange=function(){var e=this;if(this.form.insertStructureRangeForm.$valid){var t=new this.payrollModel.CTCRanges({min:this.model.newSlab.split+1,max:this.activeSlab.max,salaryConfigurationName:this.model.newSlab.title});this.disableBtnOnRequest=!0,this.PayrollSalaryConfigurationService.createRange(this.scope.payrollConfig.payGroupId,t).then(function(t){e.buildSalaryConfiguration(t),e.modalInstances.splitRangeInstance.close(),e.notificationService.information("New Range "+e.model.newSlab.title+" has been created")},function(t){e.notificationService.error(t.data.message),e.disableBtnOnRequest=!1})}},t.prototype.changeRangeUpperLimit=function(){var e=this;this.form.modifyRangeForm.$valid&&(this.disableBtnOnRequest=!0,this.PayrollSalaryConfigurationService.updateRangeUpperLimit(this.scope.payrollConfig.payGroupId,this.activeSlab.name,this.model.newRangeLimit).then(function(t){e.scope.payrollConfig.ctcRanges=t.ctcRanges.map(function(t){return new e.payrollModel.CTCRanges(t)}),e.buildSlabs(),e.setActiveStructure(e.slabRanges.find(function(t){return t.name==e.activeSlab.name})),e.modalInstances.changeUpperLimitInstance.close(),e.notificationService.success("CTC range Configuration is saved")},function(t){e.notificationService.error(" An error occurred while saving the range configuration."),e.disableBtnOnRequest=!1}))},t.prototype.deleteCTCRange=function(){var e=this;this.PayrollSalaryConfigurationService.deleteRange(this.scope.payrollConfig.payGroupId,this.activeSlab.name).then(function(t){e.notificationService.success(e.activeStructure.title+" is deleted successfully"),e.scope.payrollConfig.ctcRanges=t.ctcRanges.map(function(t){return new e.payrollModel.CTCRanges(t)}),e.buildSlabs(),delete e.salaryStructures[e.activeSlab.name],e.scope.payrollConfig.salaryStructures=e.scope.payrollConfig.salaryStructures.filter(function(t){return t.name!=e.activeSlab.name}),e.setActiveStructure(e.slabRanges.find(function(t){return t.name==e.newSlab.name})),e.modalInstances.removeRangeModalInstance.close()},function(t){e.modalInstances.removeRangeModalInstance.close(),e.notificationService.error(t.data.message)})},t.prototype.deleteComponent=function(e){var t=this;this.dialogService.confirm("Please Confirm","Are you sure want to remove this component ?").result.then(function(){t.activeStructure.removeComponent(e.componentName)})},t.prototype.validateComponentAmountExpression=function(){var e=this;if(this.editSelectedComponent.amountExpression){var t={};this.scope.payrollConfig.getAdhocAllowances().forEach(function(e){return t[e.componentName]=e.amountExpression}),this.activeStructure.getAllApplicableComponents().forEach(function(i){t[i.componentName]=e.editSelectedComponent.componentName!=i.componentName?i.amountExpression:e.editSelectedComponent.amountExpression.toLowerCase()}),this.PayrollSalaryConfigurationService.validateComponentAmountExpression(this.scope.payrollConfig.payGroupId,this.editSelectedComponent.componentName,t).then(function(t){e.validateResult=t})}},t.prototype.buildCTCBasedSalaryStructures=function(){var t=this,i=[];return angular.forEach(this.salaryStructures,function(n){n.components.map(function(e){return e.componentName});i.push(new e.Model.StructureConfiguration(n,t.scope.payrollConfig))}),{salaryStructures:i,ctcRanges:this.scope.payrollConfig.ctcRanges}},t.prototype.saveAllSalaryStructureAndCTCRanges=function(){var e=this;this.dialogService.confirm("Please Confirm","This would also update Future Employee Salary Revisions Continue ?").result.then(function(){e.showStructureUpdateProgress(),e.PayrollSalaryConfigurationService.saveCtcBasedStructures(e.scope.payrollConfig.payGroupId,e.buildCTCBasedSalaryStructures()).then(function(t){e.modalInstances.updateProgressModal.close(),e.notificationService.success("CTC ranges and corresponding Salary structures are saved successfully."),e.scope.vm.currentStep.valid=!0,e.scope.complete()},function(t){e.notificationService.error(t.data.message),e.modalInstances.updateProgressModal.close()})})},t.prototype.addSalaryComponent=function(){var e=this;this.resetModal(),this.availableComponents=angular.copy(this.activeStructure.unUsedComponents),this.modalInstances.addSalaryModalInstance=this.modalService.open({scope:this.scope,windowClass:"structure-compare small-btn",backdrop:"static",template:'<add-salary-component available-components = "ctrl.availableComponents" modal-instance="ctrl.modalInstances.addSalaryModalInstance"></add-salary-component>'}),this.modalInstances.addSalaryModalInstance.result.then(function(t){t&&(t.forEach(function(t){e.activeStructure.addComponent(t)}),e.activeStructure.updateAmountExpression())})},t.prototype.openComponentEdit=function(e){var t=this;this.editSelectedComponent=angular.copy(e),this.validateResult={valid:!1},this.modalInstances.componentEditModalInstance=this.modalService.open({scope:this.scope,templateUrl:"structureComponentEdit",windowClass:"structure-component-edit structure-compare",backdrop:"static"}).result.then(function(){e.updateOverrideAmount(t.editSelectedComponent.amountExpression,t.scope.payrollConfig),t.activeStructure.updateAmountExpression()})},t.prototype.openSplitRange=function(){this.resetModal(),this.modalInstances.splitRangeInstance=this.modalService.open({templateUrl:"insertStructureRange",windowClass:"structure-compare range-array small-btn",scope:this.scope,backdrop:"static"})},t.prototype.openChangeUpperLimit=function(){this.nextSlab=this.slabRanges[this.activeSlab.index+1],this.resetModal(),this.modalInstances.changeUpperLimitInstance=this.modalService.open({templateUrl:"modifyStructureRange",windowClass:"structure-compare range-array small-btn",scope:this.scope,backdrop:"static"})},t.prototype.openRemoveRange=function(){this.resetModal(),this.newSlab=this.activeSlab.isLast?this.slabRanges[this.activeSlab.index-1]:this.slabRanges[this.activeSlab.index+1],this.modalInstances.removeRangeModalInstance=this.modalService.open({templateUrl:"deleteStructureRange",windowClass:"structure-compare range-array small-btn",scope:this.scope,backdrop:"static"})},t.prototype.showStructureUpdateProgress=function(){this.modalInstances.updateProgressModal=this.modalService.open({templateUrl:"structureUpdateProgress",keyboard:!1,backdrop:"static",windowClass:"structure-compare update-structure"})},t.prototype.resetModal=function(){this.model={},this.disableBtnOnRequest=!1,this.modalInstances={}},t.$inject=["$scope","$q","$uibModal","PayrollModel","PayrollSalaryConfigurationService","NotificationService","dialogs"],t}(),angular.module("payroll").controller("PayrollSalaryStructureSettingsController",i)}(e.Salary||(e.Salary={}))}(e.Configuration||(e.Configuration={}))}(Payroll||(Payroll={})),angular.module("payroll").controller("PayrollSalaryConfigurationController",["$scope","$stateParams","$state","SharedModel","$uibModalInstance","payrollConfig","NotificationService","$rootScope",function(e,t,i,n,o,r,a,s){e.vm={},e.modalInstance=o;e.payrollConfig=r,e.vm.wizard={steps:[new n.Step({title:"Recurring Components",name:"Recurring Components",index:1,valid:!0,template:"salaryComponents"}),new n.Step({title:"Adhoc Components",name:"Adhoc Components",index:2,valid:!0,template:"oneTimeSalaryComponents"})]},window.location.href.includes("Onboard")&&e.vm.wizard.steps.push(new n.Step({title:"Salary Ranges",name:"Salary Ranges",index:3,valid:e.payrollConfig.setupState.salaryStructuresComplete,template:"salaryStructures"})),e.vm.currentStep=e.vm.wizard.steps[0],e.closeModal=function(){e.modalInstance.dismiss(),s.$broadcast("payrollSetupStepClosed",{})},e.vm.isLastStep=function(){return e.vm.wizard.steps.indexOf(e.vm.currentStep)==e.vm.wizard.steps.length-1},e.complete=function(){e.vm.isLastStep()&&(e.modalInstance.close(),s.$broadcast("payrollSetupStepClosed",{}))},e.gotoStep=function(t){var i=e.vm.wizard.steps.find(function(e){return e.index==t-1});if(!i||i&&i.valid){var n=e.vm.wizard.steps.find(function(e){return e.index==t});e.vm.currentStep=n}else a.error(e.vm.errorMessage)}}]),angular.module("payroll").controller("PayrollOneTimeComponentSettingsController",["$scope","$q","$uibModal","dialogs","PayrollModel","PayrollSalaryConfigurationService","NotificationService","PayrollSalaryStructureService","AppContext",function(e,t,i,n,o,r,a,s,l){e.vm.allowanceSectionsList=["Section_10(14)(i)","Section_10(14)(ii)","Section_10(5)","Section_17(2)(Viii)","Section_10(13)(a)"];var c=function(t){if(t.hasTaxBenefits)switch(t.componentType){case o.SalaryComponentTypes.allowance:e.vm.allowanceSectionsList.every(function(e){return e!=t.sectionName})&&e.vm.allowanceSectionsList.push(t.sectionName)}};t.all([s.bonusType.query().$promise,s.deductionType.query().$promise]).then(function(t){e.vm.bonusTypes=t[0],e.vm.deductionTypes=t[1].filter(function(e){return!e.isDeleted})}),e.vm.adhocAllowances=[],e.vm.isPaygroupEnable=l.isFeaturePresent("PAYGROUPS"),e.payrollConfig.supportedSalaryComponents.filter(function(e){return!e.isDeleted&&!e.internal}).forEach(function(t){c(t),t.componentType==o.SalaryComponentTypes.adhoc&&t.paidFrequency==o.PaidFrequency.once&&e.vm.adhocAllowances.push(t)}),e.saveAdhocAllowance=function(){e.vm.adhocAllowanceForm.editAdhocAllowanceForm.$valid&&r.saveCustomAdhocAllowance(e.payrollConfig.payGroupId,e.vm.currentComponent).then(function(t){e.vm.adhocAllowances.push(t),c(t),e.payrollConfig.supportedSalaryComponents.push(t),a.success("Adhoc allowance added successfully"),e.closeModal()},function(e){a.error(e.data.message)})},e.updateAdhocAllowance=function(){e.vm.adhocAllowanceForm.editAdhocAllowanceForm.$valid&&r.updateCustomAdhocAllowance(e.payrollConfig.payGroupId,e.vm.currentComponent).then(function(t){var i=e.vm.adhocAllowances.find(function(t){return t.componentName==e.vm.currentComponent.componentName});i.title=e.vm.currentComponent.title,i.hasTaxBenefits=e.vm.currentComponent.hasTaxBenefits,i.helpText=e.vm.currentComponent.helpText,i.sectionName=e.vm.currentComponent.sectionName,i.sectionMaxAmount=e.vm.currentComponent.sectionMaxAmount,c(i),a.success("Adhoc allowance updated successfully"),e.closeModal()},function(e){a.error(e.data.message)})},e.removeAdhocAllowance=function(t){n.confirm("Please Confirm","Are you sure want to delete this Adhoc allowance?").result.then(function(){r.deleteCustomComponent(e.payrollConfig.payGroupId,t.componentName).then(function(i){i.isDeleted&&(e.vm.adhocAllowances=e.vm.adhocAllowances.filter(function(e){return e.componentName!=t.componentName}),e.payrollConfig.supportedSalaryComponents=e.payrollConfig.supportedSalaryComponents.filter(function(e){return e.componentName!=t.componentName}),a.success(t.title+" has been deleted successfully"))},function(e){a.error(e.data.message)})})},e.saveDeductionType=function(){e.vm.deductionForm.editDeductionForm.$valid&&(a.information("Saving Deduction type ..."),s.deductionType.save({},e.vm.currentComponent,function(t){e.vm.deductionTypes.push(t),a.success("Deduction type added Successfully."),e.closeModal()},function(e){a.error(e.data.message)}))},e.updateDeductionType=function(){e.vm.deductionForm.editDeductionForm.$valid&&(a.information("Updating Deduction type ..."),s.deductionType.update({},e.vm.currentComponent,function(t){var i=e.vm.deductionTypes.find(function(t){return t.id==e.vm.currentComponent.id});i.title=e.vm.currentComponent.title,i.description=e.vm.currentComponent.description,i.affectOnGross=e.vm.currentComponent.affectOnGross,a.success("Deduction type updated Successfully."),e.closeModal()},function(e){a.error(e.data.message)}))},e.deleteDeductionType=function(t){n.confirm("Please Confirm","Are you sure want to delete this Deduction?").result.then(function(){a.information("Deleting Deduction type ..."),s.deductionType.delete({id:t.id},function(i){if(i.isDeleted){for(var n=0;n<=e.vm.deductionTypes.length;n++){if(e.vm.deductionTypes[n].id==t.id){e.vm.deductionTypes.splice(n,1);break}}a.information("Deduction type deleted successfully")}},function(e){a.error(e.data.message)})})},e.updateBonusType=function(){e.vm.bonusType.bonusEditForm.$valid&&(a.information("Updating Bonus type ..."),s.bonusType.update({},e.vm.currentComponent,function(t){if(t.isUpdated){var i=e.vm.bonusTypes.find(function(t){return t.id==e.vm.currentComponent.id});i.title=e.vm.currentComponent.title,i.description=e.vm.currentComponent.description,a.success("Bonus type updated Successfully."),e.closeModal()}else a.information("Bonus type with same name already exists.")},function(e){a.error("An error occurred while updating bonus type.")}))},e.saveBonusType=function(){e.vm.bonusType.bonusEditForm.$valid&&(a.information("Saving Bonus type ..."),s.bonusType.save({},e.vm.currentComponent,function(t){e.vm.bonusTypes.push(t),a.success("Bonus type added Successfully."),e.closeModal()},function(e){a.error(e.data.message)}))},e.deleteBonusType=function(t){n.confirm("Please Confirm","Are you sure want to delete this Bonus?").result.then(function(){a.information("Deleting Bonus type ..."),s.bonusType.delete({id:t.id},function(i){if(i.isDeleted){for(var n=0;n<=e.vm.bonusTypes.length;n++){if(e.vm.bonusTypes[n].id==t.id){e.vm.bonusTypes.splice(n,1);break}}a.success("Bonus type deleted successfully")}else a.error("An error occurred while deleting bonus type.")},function(e){a.error("An error occurred while deleting bonus type.")})})},e.editAdhocComponent=function(t){e.vm.currentComponent=angular.copy(t),e.vm.currentComponent.onEdit=!0,e.modalInstance=i.open({templateUrl:"editAdhocComponent",windowClass:"salary-component-modal",scope:e,backdrop:"static"})},e.addNewAllowance=function(){e.vm.currentComponent={hasTaxBenefits:!1,isCustom:!0},e.modalInstance=i.open({templateUrl:"editAdhocComponent",windowClass:"salary-component-modal",scope:e,backdrop:"static"})},e.addAdhocComponents=function(){e.modalInstance=i.open({templateUrl:"PayrollSettings/addNewSalaryComponent",windowClass:"structure-compare small-btn",controller:"AddAdhocComponentController",controllerAs:"ctrl",resolve:{salaryComponents:function(){return e.payrollConfig.supportedSalaryComponents.filter(function(e){return!e.isDeleted})}},backdrop:"static"}).result.then(function(t){t.components.forEach(function(t){var i=o.CreateSalaryComponentModel(t);i.isCustom=!0,i.disabled=i.disabled,e.vm.adhocAllowances.every(function(e){return e.componentName!=t.componentName})&&(e.vm.adhocAllowances.push(i),c(i)),e.payrollConfig.supportedSalaryComponents.every(function(e){return e.componentName!=t.componentName})&&(e.payrollConfig.supportedSalaryComponents.push(i),c(i))})})},e.editDeduction=function(t){e.vm.currentComponent=angular.copy(t),e.vm.currentComponent.onEdit=!0,e.modalInstance=i.open({templateUrl:"editDeductionComponent",windowClass:"salary-component-modal",scope:e,backdrop:"static"})},e.addNewDeduction=function(){e.vm.currentComponent={affectOnGross:!1},e.modalInstance=i.open({templateUrl:"editDeductionComponent",windowClass:"salary-component-modal",scope:e,backdrop:"static"})},e.editBonusComponent=function(t){e.vm.currentComponent=angular.copy(t),e.vm.currentComponent.onEdit=!0,e.modalInstance=i.open({templateUrl:"editBonusComponent",windowClass:"salary-component-modal",scope:e,backdrop:"static"})},e.addNewBonus=function(){e.vm.currentComponent={},e.modalInstance=i.open({templateUrl:"editBonusComponent",windowClass:"salary-component-modal",scope:e,backdrop:"static"})},e.closeModal=function(){e.modalInstance.close()}}]),function(e){!function(e){!function(t){var i=function(){function e(e,t){this.payrollModel=t,this.payrollConfigResource=e("/api/payroll/config/:groupId/:action/",{action:"@action",groupId:"@groupId"},{update:{method:"PUT"}})}return e.prototype.getconfiguration=function(e){var t=this,i=e?{groupId:e}:{paygroupId:e||""};return this.payrollConfigResource.get(i).$promise.then(function(e){return new t.payrollModel.PayrollConfiguration(e)})},e.prototype.savePayfundconfiguration=function(e,t){return this.payrollConfigResource.save({action:"payfundconfig",groupId:e},t).$promise},e.prototype.savegeneralpayconfig=function(e,t){return this.payrollConfigResource.save({action:"generalpayconfig",groupId:e},t).$promise},e.prototype.generateNewCycles=function(e,t,i){return this.payrollConfigResource.save({action:"newpaycycles",groupId:e,count:i},t).$promise},e.prototype.savechangePayPeriod=function(e,t){return this.payrollConfigResource.save({action:"changePayPeriod",groupId:e},t).$promise},e.prototype.skipKekaStartingCycle=function(e,t){return this.payrollConfigResource.save({action:"skipKekaStartingCycle",groupId:e,forMonth:t},{}).$promise},e.prototype.savepfAndESIconfig=function(e,t){return this.payrollConfigResource.save({action:"pfAndESIconfig",groupId:e},t).$promise},e.prototype.saveptconfiguration=function(e,t){return this.payrollConfigResource.save({action:"ptconfig",groupId:e},t).$promise},e.prototype.saveEmployeeConfiguration=function(e,t){return this.payrollConfigResource.save({groupId:e,action:"employeeconfig"},t).$promise},e.prototype.saveTDSConfiguration=function(e,t){return this.payrollConfigResource.save({groupId:e,action:"tdsconfig"},t).$promise},e.prototype.saveLoanConfiguration=function(e,t){return this.payrollConfigResource.save({groupId:e,action:"loanconfiguration"},t).$promise},e.prototype.SaveSetupComplete=function(e){return this.payrollConfigResource.save({groupId:e,action:"setupcomplete"}).$promise},e.prototype.getPTApplicableStates=function(){return this.payrollConfigResource.query({action:"ptapplicablestates"}).$promise},e.prototype.getEmployeeConfiguration=function(e){return this.payrollConfigResource.get({action:"employee",employeeId:e}).$promise},e.$inject=["$resource","PayrollModel"],e}();t.PayrollConfigurationService=i;var n=function(){function t(e){this.salaryConfigResource=e("/api/payroll/config/:groupId/salary/:action/:id",{action:"@action",groupId:"@groupId"},{update:{method:"PUT"}}),this.customSalaryConfigResource=e("/api/payroll/config/:groupId/salary/:remunerationType/:action/:id",{action:"@action",groupId:"@groupId",remunerationType:"@remunerationType"},{update:{method:"PUT"}})}return t.prototype.regenerateSalaryStucture=function(e){return this.salaryConfigResource.save({groupId:e,action:"regenerate/structure"},{}).$promise},t.prototype.getStandardSettings=function(e,t){return this.salaryConfigResource.get({action:"standard",country:e,year:t}).$promise},t.prototype.getAllSalaryComponents=function(e){return this.salaryConfigResource.query({groupId:e,action:"component/all"}).$promise},t.prototype.createSalaryComponent=function(e,t){return this.salaryConfigResource.save({groupId:e,action:"component"},t).$promise},t.prototype.updateComponent=function(e,t,i){return this.salaryConfigResource.update({groupId:e,action:"component",componentName:t},i).$promise},t.prototype.addMasterComponenets=function(e,t){return this.salaryConfigResource.update({groupId:e,action:"components/add"},t).$promise},t.prototype.disableSalaryComponent=function(e,t){return this.salaryConfigResource.save({groupId:e,action:"component/disable",componentName:t},{}).$promise},t.prototype.deleteCustomComponent=function(e,t){return this.salaryConfigResource.delete({groupId:e,action:"component/Custom",componentName:t}).$promise},t.prototype.saveCustomAdhocAllowance=function(e,t){return this.salaryConfigResource.save({groupId:e,action:"component/adhoc"},t).$promise},t.prototype.updateCustomAdhocAllowance=function(e,t){return this.salaryConfigResource.update({groupId:e,action:"component/adhoc",componentName:t.componentName},t).$promise},t.prototype.getCtcBasedStructures=function(e){return this.salaryConfigResource.get({groupId:e,action:"ranges"}).$promise},t.prototype.createRange=function(e,t){return this.salaryConfigResource.save({groupId:e,action:"ctcrange/create"},t).$promise},t.prototype.updateRangeUpperLimit=function(e,t,i){return this.salaryConfigResource.update({groupId:e,action:"ctcrange/"+t},i).$promise},t.prototype.deleteRange=function(e,t){return this.salaryConfigResource.delete({groupId:e,action:"ctcrange/"+t}).$promise},t.prototype.saveSalaryStructure=function(e,t){return this.salaryConfigResource.save({groupId:e,action:"structureconfig"},t).$promise},t.prototype.saveCtcBasedStructures=function(e,t){return this.salaryConfigResource.save({groupId:e,action:"ranges"},t).$promise},t.prototype.reviewCustomSalaryStructure=function(e,t){return this.customSalaryConfigResource.save({action:"review/custom/structure",groupId:e,remunerationType:t},{}).$promise},t.prototype.getAllCustomSalaryStrutures=function(e){return this.customSalaryConfigResource.query({action:"structures/custom/monthly",groupId:e}).$promise},t.prototype.getCustomSalaryStructure=function(t,i,n){return this.customSalaryConfigResource.get({action:"structures/custom",groupId:t,id:i,remunerationType:e.Model.RemunerationType[n]}).$promise},t.prototype.initializeCustomSalaryStructure=function(t,i){return this.customSalaryConfigResource.get({action:"structures/custom/initialize",groupId:t,remunerationType:e.Model.RemunerationType[i]}).$promise},t.prototype.saveCustomSalaryStructure=function(t,i,n){return this.customSalaryConfigResource.save({action:"structures/custom",groupId:t,remunerationType:e.Model.RemunerationType[i]},n).$promise},t.prototype.updateCustomSalaryStructure=function(t,i,n,o){return this.customSalaryConfigResource.update({action:"structures/custom",groupId:t,id:i,remunerationType:e.Model.RemunerationType[n]},o).$promise},t.prototype.deleteCustomSalaryStructure=function(t,i,n){return this.customSalaryConfigResource.delete({action:"structures/custom",groupId:t,id:i,remunerationType:e.Model.RemunerationType[n]},{}).$promise},t.prototype.validateComponentAmountExpression=function(e,t,i){return this.salaryConfigResource.save({groupId:e,action:"component/validateAmountExpression/"+t},i).$promise},t.$inject=["$resource"],t}();t.PayrollSalaryConfigurationService=n;var o=function(){function e(e){this.resource=e,this.leaveEncashmentService=this.resource("/api/payroll/global/config/leaveencashment/:action/:policyId",{},{update:{method:"PUT"}})}return e.prototype.getLeaveEncashmentPolicies=function(){return this.leaveEncashmentService.get({action:"all"}).$promise},e.prototype.saveLeaveEncashmentPolicy=function(e){return this.leaveEncashmentService.save({action:"add"},e).$promise},e.prototype.updateLeaveEncashmentPolicy=function(e){return this.leaveEncashmentService.update({},e).$promise},e.prototype.deleteLeaveEncashmentPolicy=function(e){return this.leaveEncashmentService.delete({policyId:e}).$promise},e.prototype.setDefaultLeaveEncashmentPolicy=function(e){return this.leaveEncashmentService.update({action:"default",policyId:e},{}).$promise},e.$inject=["$resource"],e}();t.LeaveEncashmentService=o;var r=function(){function e(e){this.resource=e,this.paymentSettingsService=this.resource("/api/payroll/config/:payGroupId/misc/paymentSettings/:action",{},{})}return e.prototype.getPaymentSettings=function(e){return this.paymentSettingsService.get({payGroupId:e}).$promise},e.prototype.savePaymentSettings=function(e,t){return this.paymentSettingsService.save({payGroupId:e},t).$promise},e.$inject=["$resource"],e}();t.PaymentSettingsService=r;var a=function(){function e(e){this.resource=e,this.roundOffSettingsService=this.resource("/api/payroll/config/:payGroupId/misc/roundOffSettings/:action",{},{})}return e.prototype.getRoundOffSettings=function(e){return this.roundOffSettingsService.get({payGroupId:e}).$promise},e.prototype.saveRoundOffSettings=function(e,t){return this.roundOffSettingsService.save({payGroupId:e},t).$promise},e.$inject=["$resource"],e}();t.RoundOffSettingsService=a;var s=function(){function e(e){this.resource=e,this.paySlipConfigurationService=this.resource("/api/payroll/config/:payGroupId/misc/payslipConfiguration/:action",{},{update:{method:"PUT"}})}return e.prototype.updatepayslipConfiguration=function(e,t){return this.paySlipConfigurationService.save({payGroupId:e},t).$promise},e.prototype.getpayslipConfiguration=function(e){return this.paySlipConfigurationService.get({payGroupId:e}).$promise},e.$inject=["$resource"],e}();t.PaySlipConfigurationService=s;var l=function(){function e(e){this.resource=e,this.fullAndFinalSettlementConfigService=this.resource("/api/payroll/config/:payGroupId/misc/fullAndFinalSettlementConfig/:action",{},{update:{method:"PUT"}})}return e.prototype.updatefullAndFinalConfig=function(e,t){return this.fullAndFinalSettlementConfigService.save({payGroupId:e},t).$promise},e.prototype.getfullAndFinalConfig=function(e){return this.fullAndFinalSettlementConfigService.get({payGroupId:e}).$promise},e.$inject=["$resource"],e}();t.FullAndFinalSettlementConfigService=l;var c=function(){function e(e,t){this.payrollModel=t,this.benefitConfigResource=e("/api/payroll/global/config/benefitconfiguration/:action/:identifier",{action:"@action",identifier:"@identifier"},{update:{method:"PUT"}})}return e.prototype.getAllBenefitConfiguration=function(){return this.benefitConfigResource.get({action:"all"}).$promise},e.prototype.getAllBenefitConfigurationDetails=function(){return this.benefitConfigResource.get({action:"details"}).$promise},e.prototype.getBenefitConfiguration=function(e){return this.benefitConfigResource.get({identifier:e}).$promise},e.prototype.saveBenefitConfiguration=function(e){return this.benefitConfigResource.save({},e).$promise},e.prototype.updateBenefitConfiguration=function(e){return this.benefitConfigResource.update({},e).$promise},e.$inject=["$resource","PayrollModel"],e}();t.BenefitConfigurationService=c;var p=function(){function e(e){this.resource=e,this.payGroupConfigurationService=this.resource("/api/payroll/paygroup/:groupId/:action",{groupId:"@groupId"},{update:{method:"PUT"}})}return e.prototype.getAllPayGroups=function(){return this.payGroupConfigurationService.query({action:"all"}).$promise},e.prototype.deletePayGroup=function(e){return this.payGroupConfigurationService.delete({groupId:e}).$promise},e.prototype.savePaygroup=function(e){return this.payGroupConfigurationService.save({action:"add"},e).$promise},e.prototype.updatePaygroup=function(e,t){return this.payGroupConfigurationService.update({action:"update",groupId:e},t).$promise},e.prototype.getPayGroup=function(e){return this.payGroupConfigurationService.get({groupId:e}).$promise},e.$inject=["$resource"],e}();t.paygroupService=p;var u=function(){function e(e){this.resource=e,this.payGroupConfigurationService=this.resource("/api/payroll/global/config/:action/:id",{},{update:{method:"PUT"}})}return e.prototype.getAllSalaryComponents=function(){return this.payGroupConfigurationService.query({action:"component/all"}).$promise},e.prototype.getRecurringComponents=function(){return this.payGroupConfigurationService.query({action:"component/recurring"}).$promise},e.prototype.getAdhocComponents=function(){return this.payGroupConfigurationService.query({action:"component/adhoc"}).$promise},e.prototype.createSalaryComponent=function(e){return this.payGroupConfigurationService.save({action:"component"},e).$promise},e.prototype.updateComponent=function(e,t){return this.payGroupConfigurationService.update({action:"component",componentName:e},t).$promise},e.prototype.disableSalaryComponent=function(e){return this.payGroupConfigurationService.save({action:"component/disable",componentName:e},{}).$promise},e.prototype.deleteRecurringComponent=function(e){return this.payGroupConfigurationService.delete({action:"component/recurring",componentName:e}).$promise},e.prototype.deleteAdhocComponent=function(e){return this.payGroupConfigurationService.delete({action:"component/adhoc",componentName:e}).$promise},e.prototype.saveCustomAdhocAllowance=function(e){return this.payGroupConfigurationService.save({action:"component/adhoc"},e).$promise},e.prototype.updateCustomAdhocAllowance=function(e){return this.payGroupConfigurationService.update({action:"component/adhoc",componentName:e.componentName},e).$promise},e.prototype.validateExpression=function(e){return this.payGroupConfigurationService.save({action:"amountexpression/validate"},'"'+e+'"').$promise},e.prototype.getComponentSalaryStructureCount=function(e){return this.payGroupConfigurationService.get({action:"component/salarystructurecount",componentName:e}).$promise},e.prototype.doesComponentExistsInGroups=function(e){return this.payGroupConfigurationService.get({action:"component/isexist",componentName:e}).$promise},e.$inject=["$resource"],e}();t.payrollGlobalConfigurationService=u;var d=function(){function e(e){this.resource=e,this.noticePeriodBuyOutConfiguration=this.resource("/api/payroll/config/:payGroupId/misc/noticeperiodbuyout/:action/:policyId",{},{update:{method:"PUT"}})}return e.prototype.getNoticePeriodBuyOutConfigurations=function(e){return this.noticePeriodBuyOutConfiguration.query({payGroupId:e}).$promise},e.prototype.addNoticePeriodBuyOut=function(e,t){return this.noticePeriodBuyOutConfiguration.save({payGroupId:e},t).$promise},e.prototype.updateNoticePeriodBuyOut=function(e,t,i){return this.noticePeriodBuyOutConfiguration.update({payGroupId:e,id:t},i).$promise},e.prototype.deleteNoticePeriodBuyOut=function(e,t){return this.noticePeriodBuyOutConfiguration.delete({payGroupId:e,id:t}).$promise},e.$inject=["$resource"],e}();t.NoticePeriodBuyOutConfigurationService=d,angular.module("payroll").service("PayrollSalaryConfigurationService",n).service("LeaveEncashmentService",o).service("PaymentSettingsService",r).service("PaySlipConfigurationService",s).service("paygroupService",p).service("PayrollConfigurationService",i).service("BenefitConfigurationService",c).service("payrollGlobalConfigurationService",u).service("FullAndFinalSettlementConfigService",l).service("NoticePeriodBuyOutConfigurationService",d).service("RoundOffSettingsService",a)}(e.Services||(e.Services={}))}(e.Configuration||(e.Configuration={}))}(Payroll||(Payroll={})),function(e){!function(e){!function(e){!function(e){var t=function(){function e(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f){var g=this;this.scope=e,this.stateParams=t,this.appSettings=i,this.state=n,this.q=o,this.$uibModalInstance=r,this.notificationService=a,this.SharedModel=s,this.payrollModel=l,this.payrollConfig=c,this.orgSettingServices=p,this.lookupServices=u,this.payrollConfigurationService=d,this.$uibModal=m,this.rootScope=y,this.dialogs=h,this.statutorySettingsService=f,this.steps=[],this.states={},this.ptApplicableStates={},this.pendingStates=[],this.wizard={steps:[]},this.q.all([this.orgSettingServices.getLegalEntity(this.payrollConfig.payFundConfig.legalEntityId),this.lookupServices.lookup.query({id:"states"}).$promise]).then(function(e){g.legalEntityDetails=new s.LegalEntity(e[0]),g.authorizedSignatories=g.legalEntityDetails.signatory,angular.forEach(e[1],function(e){"IN"==e.countryCode&&(g.states[e.code]=e)}),g.itInfo=new Settings.Model.IncomeTaxInfo({}),g.pfInfo=new Array,g.esiInfo=new Array,g.ptInfo=new Array,g.buildWizardSteps(),g.currentStep=g.wizard.steps[0],g.currentStep.init(),g.initGridSettings()})}return e.prototype.buildWizardSteps=function(){var e=this,t=1;this.legalEntityDetails;this.wizard.steps.push(new SharedModel.Step(t++,"Income Tax Info","incomeTaxInfo","incomeTaxInformation",this.itInfo.valid,function(){e.statutorySettingsService.getItInfo(e.payrollConfig.payGroupId).then(function(t){e.itInfo=new Settings.Model.IncomeTaxInfo(t)})})),this.payrollConfig.isPFFilingRequired()&&this.wizard.steps.push(new SharedModel.Step(t++,"Provident Fund Info","pfInfo","pfInformation",this.pfInfo.every(function(e){return e.valid}),function(){e.statutorySettingsService.getPfInfo(e.payrollConfig.payGroupId).then(function(t){e.pfInfo=new Array,t.forEach(function(t){var i=new Settings.Model.ProvidentFundInfo(t);e.setSignatoryData(i),e.pfInfo.push(i)})})})),this.payrollConfig.isESIFilingRequired()&&this.wizard.steps.push(new SharedModel.Step(t++,"ESI Info","esiInfo","esiInformation",this.esiInfo.every(function(e){return e.valid}),function(){e.statutorySettingsService.getEsiInfo(e.payrollConfig.payGroupId).then(function(t){e.esiInfo=new Array,t.forEach(function(t){var i=new Settings.Model.ESIInfo(t);e.setSignatoryData(i),e.esiInfo.push(i)})})})),this.payrollConfig.isPTFilingRequired()&&this.wizard.steps.push(new SharedModel.Step(t++,"Professional Tax Info","PtInfo","ptInformation",this.ptInfo.every(function(e){return e.valid}),function(){e.model={pt:e.payrollConfig.pt.clone()},e.hasLabourWelfareFund()&&e.statutorySettingsService.getLabourWelfareInfo(e.payrollConfig.payGroupId).then(function(t){e.model.labourWelfare=t}),e.ptApplicableStates={},e.payrollConfig.ptApplicableStates.map(function(t){return e.ptApplicableStates[t]=t}),e.getPTinformation()}))},e.prototype.getPTinformation=function(){var e=this;this.statutorySettingsService.getPtInfo(this.payrollConfig.payGroupId).then(function(t){e.ptInfo=t,e.buildPendingStates()})},e.prototype.buildPendingStates=function(){var e=this,t=[];this.pendingStates=[],this.ptInfo.forEach(function(e){t.push(e.stateCode),e.otherApplicableStates.forEach(function(e){return t.push(e)})}),this.payrollConfig.payFundConfig.locations.forEach(function(i){t.includes(i.stateCode)||e.pendingStates.includes(i.stateCode)||e.pendingStates.push(i.stateCode)})},e.prototype.setSignatoryData=function(e){var t=this.authorizedSignatories.find(function(t){return t.identifier==e.signatoryId})||new Settings.Model.Signatory({});e.signatoryFatherName=t.fatherName,e.signatoryDesignation=t.designation,e.signatoryName=t.name},e.prototype.savePtAndLabourWelfareInfo=function(){var e=this;this.form.ptAndlabourWelfareInfo.$valid&&!this.form.ptAndlabourWelfareInfo.$dirty&&this.ptInfo.length>0&&!this.isPTModified?this.gotoStep(this.currentStep.index+1):this.form.ptAndlabourWelfareInfo.$valid?!this.model.pt.isOrganizationNotExempt||this.model.pt.isOrganizationNotExempt&&this.ptInfo.length>0?this.hasLabourWelfareFund()?(this.model.labourWelfare.stateCode="MH",this.q.all([this.payrollConfigurationService.saveptconfiguration(this.payrollConfig.payGroupId,this.model.pt),this.statutorySettingsService.saveLabourWelfareFundInfo(this.payrollConfig.payGroupId,this.model.labourWelfare)]).then(function(t){e.notificationService.success("Professional Tax and Labour Welfare Fund Information is successfully saved."),e.payrollConfig.statutoryConfiguration.professionalTaxInfo=e.ptInfo,e.payrollConfig.statutoryConfiguration.labourWelfareFundInfo=e.model.labourWelfare,e.payrollConfig.pt=e.model.pt,e.gotoStep(e.currentStep.index+1)},function(t){e.notificationService.error("An error occurred while saving PT and labour welfare fund information.")})):this.payrollConfigurationService.saveptconfiguration(this.payrollConfig.payGroupId,this.model.pt).then(function(t){e.notificationService.success("Professional Tax Information is successfully saved."),e.payrollConfig.pt=e.model.pt,e.payrollConfig.statutoryConfiguration.professionalTaxInfo=e.ptInfo,e.gotoStep(e.currentStep.index+1)},function(t){e.notificationService.error("An error occurred while saving PT information.")}):this.notificationService.error("Please add at least one PT statutory information."):this.notificationService.error("Please provide necessary information to continue.")},e.prototype.initGridSettings=function(){var e=this;this.pfGridOptions=angular.copy(this.appSettings.gridSettings),this.pfGridOptions.columnDefs=[{field:"name",displayName:"NAME",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name",enableColumnResizing:!1,width:190,groupingShowAggregationMenu:!1},{field:"pfNumber",displayName:"PF REGISTRATION NUMBER (ESTABLISHMENT ID)",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name",enableColumnResizing:!1,width:200,enableGrouping:!1},{field:"registrationDate",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{grid.getCellValue(row,col) | date : ' dd MMM yyyy' }}</span></div>",cellClass:"ui-grid-cell",enablePinning:!0,pinnedLeft:!0,enableColumnResizing:!1,width:180,groupingShowAggregationMenu:!1},{name:"signatoryName",displayName:"SIGNATORY",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name",enableColumnResizing:!1,width:200,groupingShowAggregationMenu:!1},{field:"signatoryDesignation",displayName:"SIGNATORY DESIGNATION",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name",enableColumnResizing:!1,width:200,groupingShowAggregationMenu:!1},{field:"signatoryFatherName",displayName:"SIGNATORY FATHER NAME",pinnedLeft:!0,cellClass:"ui-grid-cell emp-name",enableColumnResizing:!1,width:200,groupingShowAggregationMenu:!1},{name:"Actions",enableSorting:!1,displayName:"ACTIONS",cellClass:"ui-grid-cell cell-tooltip ui-grid-cell-contents",cellTemplate:'<div class="ui-grid-cell-options "><span class="clearfix"><ul class="action-items list-inline"><li class="list-item"><a data-ng-click="grid.appScope.ctrl.editPfInfo(row.entity)" class=" list-link"><span class="icon-pencil5" uib-tooltip="Edit" tooltip-placement="left"></span></a></li><li class="list-item"><a data-ng-click="grid.appScope.ctrl.deletePfInfo(row.entity)" class="list-link"><span class="icon-remove3" uib-tooltip="Delete" tooltip-placement="right"></span></a></li></ul></span></div>',enableColumnResizing:!1,groupingShowAggregationMenu:!1,width:160}],this.gridApi=function(t){return e.gridApi=t},this.pfGridOptions.data="ctrl.pfInfo",this.esiGridOptions=angular.copy(this.appSettings.gridSettings),this.esiGridOptions.columnDefs=[{field:"name",displayName:"NAME",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name",enableColumnResizing:!1,width:190,groupingShowAggregationMenu:!1},{field:"esiNumber",displayName:"ESI REGISTRATION NUMBER (ESTABLISHMENT ID)",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name",enableColumnResizing:!1,width:200,enableGrouping:!1},{field:"registrationDate",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{grid.getCellValue(row,col) | date : ' dd MMM yyyy' }}</span></div>",cellClass:"ui-grid-cell",pinnedLeft:!0,enableColumnResizing:!1,width:180,groupingShowAggregationMenu:!1},{name:"signatoryName",displayName:"SIGNATORY",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name",enableColumnResizing:!1,width:200,groupingShowAggregationMenu:!1},{field:"signatoryDesignation",displayName:"SIGNATORY DESIGNATION",enablePinning:!0,pinnedLeft:!0,cellClass:"ui-grid-cell emp-name",enableColumnResizing:!1,width:200,groupingShowAggregationMenu:!1},{field:"signatoryFatherName",displayName:"SIGNATORY FATHER NAME",pinnedLeft:!0,cellClass:"ui-grid-cell emp-name",enableColumnResizing:!1,width:200,groupingShowAggregationMenu:!1},{name:"Actions",enableSorting:!1,displayName:"ACTIONS",cellClass:"ui-grid-cell cell-tooltip ui-grid-cell-contents",cellTemplate:'<div class="ui-grid-cell-options "><span class="clearfix"><ul class="action-items list-inline"><li class="list-item"><a data-ng-click="grid.appScope.ctrl.editEsiInfo(row.entity)" class=" list-link"><span class="icon-pencil5" uib-tooltip="Edit" tooltip-placement="left"></span></a></li><li class="list-item"><a data-ng-click="grid.appScope.ctrl.deleteEsiInfo(row.entity)" class="list-link"><span class="icon-remove3" uib-tooltip="Delete" tooltip-placement="right"></span></a></li></ul></span></div>',enableColumnResizing:!1,groupingShowAggregationMenu:!1,width:160}],this.esiGridOptions.data="ctrl.esiInfo"},e.prototype.nextStep=function(){"pfInfo"==this.currentStep.name?0==this.pfInfo.length?this.notificationService.error("Please add atleast one PF Statutory Information."):this.gotoStep(this.currentStep.index+1):"esiInfo"==this.currentStep.name&&(0==this.esiInfo.length?this.notificationService.error("Please add atleast one ESI Statutory Information."):this.gotoStep(this.currentStep.index+1))},e.prototype.gotoStep=function(e){var t=this.wizard.steps.find(function(t){return t.index==e-1});if(!t||t&&t.valid){var i=this.wizard.steps.find(function(t){return t.index==e});i?(this.currentStep=i,this.currentStep.init()):(this.$uibModalInstance.close(),this.rootScope.$broadcast("payrollSetupStepClosed",{}))}},e.prototype.addNewPFInfo=function(){var e=this;this.$uibModal.open({templateUrl:"addNewPfInfo",windowClass:"structure-compare small-btn",controller:o,controllerAs:"ctrl",keyboard:!1,backdrop:"static",resolve:{pfModel:function(){return null},pfEdit:function(){return!1},payrollConfig:function(){return e.payrollConfig},legalEntityDetails:function(){return e.legalEntityDetails}}}).result.then(function(t){t&&(t.registrationDate=Date.getDateObj(t.registrationDate),e.setSignatoryData(t),e.pfInfo.push(t))})},e.prototype.editPfInfo=function(e){var t=this;this.$uibModal.open({templateUrl:"addNewPfInfo",windowClass:"structure-compare small-btn",controller:o,controllerAs:"ctrl",keyboard:!1,backdrop:"static",resolve:{pfModel:function(){return Object.assign({},e)},pfEdit:function(){return!0},payrollConfig:function(){return t.payrollConfig},legalEntityDetails:function(){return t.legalEntityDetails}}}).result.then(function(e){if(e){var i=t.pfInfo.findIndex(function(t){return t.id==e.id});-1!=i&&(t.setSignatoryData(e),t.pfInfo[i]=e)}})},e.prototype.deletePfInfo=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure want to delete "+e.name+" ?").result.then(function(){t.statutorySettingsService.deletePfInfo(t.payrollConfig.payGroupId,e.id).then(function(i){i.isDeleted&&(t.pfInfo.splice(t.pfInfo.findIndex(function(t){return t.id==e.id}),1),t.notificationService.success("Provident Fund Info deleted successfully"))},function(e){t.notificationService.error(e.data.message)})})},e.prototype.addNewEsiInfo=function(){var e=this;this.$uibModal.open({templateUrl:"addNewEsiInfo",windowClass:"structure-compare small-btn",controller:i,controllerAs:"ctrl",keyboard:!1,backdrop:"static",resolve:{esiModel:function(){return null},esiEdit:function(){return!1},payrollConfig:function(){return e.payrollConfig},legalEntityDetails:function(){return e.legalEntityDetails}}}).result.then(function(t){t&&(t.registrationDate=Date.getDateObj(t.registrationDate),e.setSignatoryData(t),e.esiInfo.push(t))})},e.prototype.editEsiInfo=function(e){var t=this;this.$uibModal.open({templateUrl:"addNewEsiInfo",windowClass:"structure-compare small-btn",controller:"EsiInfoController",controllerAs:"ctrl",keyboard:!1,backdrop:"static",resolve:{esiModel:function(){return Object.assign({},e)},esiEdit:function(){return!0},payrollConfig:function(){return t.payrollConfig},legalEntityDetails:function(){return t.legalEntityDetails}}}).result.then(function(e){if(e){var i=t.esiInfo.findIndex(function(t){return t.id==e.id});-1!=i&&(t.setSignatoryData(e),t.esiInfo[i]=e)}})},e.prototype.deleteEsiInfo=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure want to delete "+e.name+" ?").result.then(function(){t.statutorySettingsService.deleteEsiInfo(t.payrollConfig.payGroupId,e.id).then(function(i){i.isDeleted&&(t.esiInfo.splice(t.esiInfo.findIndex(function(t){return t.id==e.id}),1),t.notificationService.success("Esi Info deleted successfully"))},function(e){t.notificationService.error(e.data.message)})})},e.prototype.close=function(){this.$uibModalInstance.dismiss()},e.prototype.addPTStatutory=function(e){var t=this;this.buildPendingStates(),e?(this.selectedPT=angular.copy(e),this.selectedPT.registrationDate=this.selectedPT.registrationDate?new Date(this.selectedPT.registrationDate):this.selectedPT.registrationDate,this.pendingStates.push(e.stateCode)):this.selectedPT=new Settings.Model.ProfessionalTaxInfo({}),this.defaultPTModal=this.$uibModal.open({templateUrl:"addPTStatutoryTemplate",scope:this.scope,windowClass:"structure-compare pt-state-group pt-setup-container",backdrop:"static"}),this.defaultPTModal.result.then(function(){t.buildPendingStates()})},e.prototype.savePTStatutory=function(){var e=this;this.ptForm.ptAddingForm.$valid&&this.statutorySettingsService.savePtInfo(this.payrollConfig.payGroupId,this.selectedPT).then(function(t){e.notificationService.success("PT Info added successfully"),e.getPTinformation(),e.defaultPTModal.close()})},e.prototype.updatePTStatutory=function(){var e=this;this.ptForm.ptAddingForm.$valid&&this.statutorySettingsService.updatePTInfo(this.payrollConfig.payGroupId,this.selectedPT.id,this.selectedPT).then(function(t){e.notificationService.success("PT Info updated successfully"),e.getPTinformation(),e.defaultPTModal.close()},function(t){e.notificationService.error(t.data.message)})},e.prototype.deletePTInfo=function(e){var t=this;this.dialogs.confirm("Please Confirm","Are you sure want to delete "+this.states[e.stateCode].name+" ?").result.then(function(){t.statutorySettingsService.deletePTInfo(t.payrollConfig.payGroupId,e.id).then(function(e){t.getPTinformation(),t.notificationService.success("PT Info deleted successfully")},function(e){t.notificationService.error(e.data.message)})})},e.prototype.removeState=function(e){this.selectedPT.otherApplicableStates=this.selectedPT.otherApplicableStates.filter(function(t){return t!==e}),this.pendingStates.push(e)},e.prototype.addState=function(e){e&&!this.selectedPT.otherApplicableStates.includes(e)&&(this.selectedPT.otherApplicableStates.push(e),this.pendingStates=this.pendingStates.filter(function(t){return t!==e}))},e.prototype.getOtherApplicableStates=function(){var e=this;return this.pendingStates.filter(function(t){return t!==e.selectedPT.stateCode})},e.prototype.hasLabourWelfareFund=function(){return null!=this.payrollConfig.ptApplicableStates.find(function(e){return"MH"==e})},e.prototype.isLastStep=function(){return this.wizard.steps.indexOf(this.currentStep)+1==this.wizard.steps.length},e.prototype.saveItInfo=function(){var e=this;!this.form.itInfo.$valid||this.form.itInfo.$dirty?this.form.itInfo.$valid?this.statutorySettingsService.saveOrUpdateItInfo(this.payrollConfig.payGroupId,this.itInfo).then(function(t){t.isSaved?(e.notificationService.success("Income tax information saved successfully"),e.payrollConfig.statutoryConfiguration.incomeTaxInfo=e.itInfo,e.gotoStep(e.currentStep.index+1)):e.notificationService.error("An error occurred while saving income tax information.")},function(t){e.notificationService.error("An error occurred while saving income tax information.")}):this.notificationService.error("Please fill income tax information to continue."):this.gotoStep(this.currentStep.index+1)},e.$inject=["$scope","$stateParams","AppSettings","$state","$q","$uibModalInstance","NotificationService","SharedModel","PayrollModel","payrollConfig","OrgSettingServices","LookupServices","PayrollConfigurationService","$uibModal","$rootScope","dialogs","StatutorySettingsService"],e}();e.PayrollStatuaryFilingInformationController=t;var i=function(){function e(e,t,i,n,o,r,a,s,l){this.appSettings=e,this.$stateParams=t,this.statutorySettingsService=i,this.notificationService=n,this.legalEntityDetails=o,this.uibModalInstance=r,this.esiModel=a,this.esiEdit=s,this.payrollConfig=l,this.legalEntityId=this.$stateParams.id,this.authorizedSignatories=this.legalEntityDetails.signatory}return e.prototype.saveEsiInfo=function(){var e=this;this.form.newEsiInfo.$valid?this.statutorySettingsService.saveEsiInfo(this.payrollConfig.payGroupId,new Settings.Model.ESIInfo(this.esiModel)).then(function(t){null!=t?(e.notificationService.success("ESI information saved successfully"),e.payrollConfig.statutoryConfiguration.esiInfo.push(e.esiModel),e.uibModalInstance.close(t)):e.notificationService.error("Failed to save ESI information")},function(t){e.notificationService.error(t.data.message)}):this.notificationService.error("Please fill all the required fields to continue.")},e.prototype.updateEsiInfo=function(){var e=this;this.form.newEsiInfo.$valid?this.statutorySettingsService.updateEsiInfo(this.payrollConfig.payGroupId,this.esiModel.id,new Settings.Model.ESIInfo(this.esiModel)).then(function(t){e.uibModalInstance.close(e.esiModel),e.notificationService.success("ESI information updated successfully.")},function(t){e.notificationService.error(t.data.message)}):this.notificationService.error("Please fill all the required fields to continue.")},e.prototype.setSignatoryData=function(){var e=this,t=this.authorizedSignatories.find(function(t){return t.identifier==e.esiModel.signatoryId})||new Settings.Model.Signatory({});this.esiModel.signatoryFatherName=t.fatherName,this.esiModel.signatoryDesignation=t.designation},e.prototype.closeModal=function(){this.uibModalInstance.close()},e.prototype.clearForm=function(){this.model=this.model.map(function(e){return new Settings.Model.ESIInfo({esiNumber:e.esiNumber})}),this.form.newEsiInfo.$setPristine()},e.$inject=["AppSettings","$stateParams","StatutorySettingsService","NotificationService","legalEntityDetails","$uibModalInstance","esiModel","esiEdit","payrollConfig"],e}();e.EsiInfoController=i;var n=function(){function e(e,t,i,n,o,r,a){this.appSettings=e,this.$stateParams=t,this.orgSettingServices=i,this.notificationService=n,this.legalEntityDetails=o,this.payrollConfig=r,this.statutorySettingsService=a,this.legalEntityId=this.$stateParams.id,this.model=new Settings.Model.IncomeTaxInfo(this.payrollConfig.statutoryConfiguration.incomeTaxInfo||{}),this.authorizedSignatories=this.legalEntityDetails.signatory}return e.prototype.clearForm=function(){this.model=new Settings.Model.IncomeTaxInfo({}),this.form.itInfo.$setPristine()},e.$inject=["AppSettings","$stateParams","OrgSettingServices","NotificationService","legalEntityDetails","payrollConfig","StatutorySettingsService"],e}();e.ItInfoController=n;var o=function(){function e(e,t,i,n,o,r,a,s,l,c){this.appSettings=e,this.$stateParams=t,this.StatutorySettingsService=i,this.notificationService=n,this.legalEntityDetails=o,this.uibModalInstance=r,this.dialogs=a,this.pfModel=s,this.pfEdit=l,this.payrollConfig=c,this.legalEntityId=this.$stateParams.id,this.datepickerOptions=angular.copy(this.appSettings.datepickerOptions),this.authorizedSignatories=this.legalEntityDetails.signatory}return e.prototype.savePfInfo=function(){var e=this;this.form.ctrl.newPfInfo.$valid?this.StatutorySettingsService.savePfInfo(this.payrollConfig.payGroupId,new Settings.Model.ProvidentFundInfo(this.pfModel)).then(function(t){null!=t?(e.notificationService.success("Provident fund information saved successfully"),e.uibModalInstance.close(t)):e.notificationService.error("Failed to save provident fund information")},function(t){e.notificationService.error(t.data.message)}):this.notificationService.error("Please fill all the required fields to continue.")},e.prototype.updatePfInfo=function(){var e=this;this.form.ctrl.newPfInfo.$valid?this.StatutorySettingsService.updatePfInfo(this.payrollConfig.payGroupId,this.pfModel.id,this.pfModel).then(function(t){e.uibModalInstance.close(e.pfModel),e.notificationService.success("Provident fund information updated successfully.")},function(t){e.notificationService.error(t.data.message)}):this.notificationService.error("Please fill all the required fields to continue.")},e.prototype.setSignatoryData=function(){var e=this,t=this.authorizedSignatories.find(function(t){return t.identifier==e.pfModel.signatoryId})||new Settings.Model.Signatory({});this.pfModel.signatoryFatherName=t.fatherName,this.pfModel.signatoryDesignation=t.designation},e.prototype.clearForm=function(){this.model=this.model.map(function(e){return new Settings.Model.ProvidentFundInfo({pfNumber:e.pfNumber})}),this.form.newPfInfo.$setPristine()},e.prototype.closeModal=function(){this.uibModalInstance.close()},e.$inject=["AppSettings","$stateParams","StatutorySettingsService","NotificationService","legalEntityDetails","$uibModalInstance","dialogs","pfModel","pfEdit","payrollConfig"],e}();e.PfInfoController=o;var r=function(){function e(e,t,i,n,o,r,a,s,l){var c=this;this.appSettings=e,this.$stateParams=t,this.orgSettingServices=i,this.notificationService=n,this.legalEntityDetails=o,this.$q=r,this.payrollConfigurationService=a,this.lookupServices=s,this.payrollConfig=l,this.legalEntityId=this.$stateParams.id,this.legalEntityDetails&&(this.authorizedSignatories=this.legalEntityDetails.signatory,this.$q.all([this.lookupServices.lookup.query({id:"states"}).$promise,this.orgSettingServices.organization.query({action:"locations"}).$promise]).then(function(e){c.states=e[0],c.orgLocations=e[1],c.model=c.payrollConfig.statutoryConfiguration.professionalTaxInfo.map(function(e){return new Settings.Model.ProfessionalTaxInfo(e)}),c.payrollConfigurationService.getPTApplicableStates().then(function(e){c.ptEnforedStates=e})}))}return e.prototype.savePtInfo=function(){var e=this;this.form.ptInfoForm.$valid&&this.orgSettingServices.savePtInfo(this.legalEntityId,this.model).then(function(t){t.isSaved?(e.notificationService.success("Professional tax information saved successfully"),e.payrollConfig.statutoryConfiguration.professionalTaxInfo=e.model):e.notificationService.error("Failed to save professional tax information")},function(t){e.notificationService.error("Failed to save professional tax information")})},e.prototype.getStateName=function(e){return this.states?this.states.find(function(t){return t.code==e}).name:" "},e.prototype.clearForm=function(){this.model=this.model.map(function(e){return new Settings.Model.ProfessionalTaxInfo({stateCode:e.stateCode})}),this.form.ptInfoForm.$setPristine()},e.$inject=["AppSettings","$stateParams","OrgSettingServices","NotificationService","legalEntityDetails","$q","PayrollConfigurationService","LookupServices","payrollConfig"],e}();e.PtInfoController=r,angular.module("payroll").controller("PayrollStatuaryFilingInformationController",t).controller("EsiInfoController",i).controller("ItInfoController",n).controller("PfInfoController",o).controller("PtInfoController",r)}(e.Custom||(e.Custom={}))}(e.StatutoryFilingInformations||(e.StatutoryFilingInformations={}))}(e.Configuration||(e.Configuration={}))}(Payroll||(Payroll={})),function(e){!function(e){!function(e){var t=function(){return function(e){this.id=e.id,this.name=e.name,this.title=e.title,this.remunerationType=e.remunerationType,this.pfEnabled=e.pfEnabled,this.esiEnabled=e.esiEnabled}}();e.CustomSalaryStructureLookup=t;var i=function(){return function(e){this.type=e.type,this.name=e.name}}();e.RemunerationLookup=i;var n=function(){return function(e){this.id=e.id,this.name=e.name,this.description=e.description,this.isDefault=e.isDefault,this.legalEntityName=e.legalEntityName,this.pfEnabled=e.pfEnabled,this.esiEnabled=e.esiEnabled,this.ptEnabled=e.ptEnabled,this.allowPFOverride=e.allowPFOverride}}();e.PaygroupLookup=n;var o=function(){return function(){}}();e.StatutoryPFLookup=o;var r=function(){return function(){}}();e.StatutoryESILookup=r}(e.Model||(e.Model={}))}(e.Configuration||(e.Configuration={}))}(Payroll||(Payroll={})),function(e){!function(e){!function(e){var t=function(){function e(e){this.resource=e,this.lookupresource=this.resource("/api/payroll/lookups/:paygroupId/:action/",{action:"@action"},{update:{method:"PUT"}})}return e.prototype.getAllCustomSalaryStructures=function(e){return this.lookupresource.query({action:"customSalaryStructures",paygroupId:e}).$promise},e.prototype.getCustomSalaryStructures=function(e,t){return this.lookupresource.query({action:"customSalaryStructures/"+t,paygroupId:e}).$promise},e.prototype.getAllRemunerationTypes=function(e){return this.lookupresource.query({action:"remunerationTypes",paygroupId:e}).$promise},e.prototype.getPayGroups=function(){return this.lookupresource.query({action:"paygroups"}).$promise},e.prototype.getRemunerationTypes=function(){return this.lookupresource.query({action:"remunerationTypes"}).$promise},e.prototype.getStatutoryPFInfo=function(e){return this.lookupresource.query({action:"statutoryPF",paygroupId:e}).$promise},e.prototype.getStatutoryESIInfo=function(e){return this.lookupresource.query({action:"statutoryESI",paygroupId:e}).$promise},e.prototype.getNoticePeriodBuyOutPolicies=function(e){return this.lookupresource.query({action:"noticePeriodBuyOutPolicies",employeeId:e}).$promise},e.prototype.getDeductiontypes=function(){return this.lookupresource.query({action:"deductiontypes"}).$promise},e.prototype.getAllSalaryComponents=function(){return this.lookupresource.query({action:"salarycomponent/recurring"}).$promise},e.prototype.getBankaccounts=function(e){return this.lookupresource.query({action:"legalEntity/bankaccounts",legalEntityId:e}).$promise},e.prototype.getAllBenefitConfiguration=function(){return this.lookupresource.query({action:"benefitconfiguration"}).$promise},e.$inject=["$resource"],e}();e.PayrollLookUpService=t,angular.module("payroll").service("PayrollLookUpService",t)}(e.Services||(e.Services={}))}(e.Configuration||(e.Configuration={}))}(Payroll||(Payroll={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();var payroll,Expenses,Tenantbilling,PayrollImportDashboardController=function(){function e(e,t){var i=this;this._modal=e,this.payrollLookUpService=t,this.payrollLookUpService.getAllSalaryComponents().then(function(e){i.components=e.filter(function(e){return e.headType==Payroll.Model.SalaryComponentType.reimbursable||e.headType==Payroll.Model.SalaryComponentType.reimbursement})})}return e.$inject=["$uibModal","PayrollLookUpService"],e}(),PayrollImporController=function(e){function t(t,i,n,o){var r=e.call(this,t,i,n)||this;return r.steps=t,r.importService=i,r.notificationService=n,r.paygroupService=o,r.init=function(){r.paygroupService.getAllPayGroups().then(function(e){r.paygroups=e.map(function(e){return new Payroll.Configuration.Model.Paygroup(e)}),r.selectedPayGroup=r.paygroups[0],r.switchToPayGroup(r.selectedPayGroup.id)})},r.switchToPayGroup=function(e){r.importService.params.groupId=e},r.init(),r}return __extends(t,e),t.prototype.downloadImportSample=function(){},t}(SharedPatterns.ImportController),PayrollPreviousSalaryImportController=function(e){function t(i,n,o,r,a,s,l,c){var p=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.PreviousSalaries,r.import,{}),n,l)||this;return p.location=i,p.modalInstance=o,p.appSettings=a,p.month=s,p.fileDownloadService=c,p}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.selectedPayGroup.id+"/upload/EmployerPreviousSalary"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/import/"+this.selectedPayGroup.id+"/previoussalaries/sample/template?month="+this.month)},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1;var e=[{field:"employeeNumber",displayName:"Employee Number",width:150},{field:"employeeName",displayName:"Employee Name",width:200},{field:"sheetName",displayName:"Month",width:200},{field:"monthlyGross",displayName:"Monthly Gross",width:150},{field:"netPay",displayName:"Net Pay",width:150},{field:"noOfPayDays",displayName:"No Of Pay Days",width:150}];this.uploadedDetails.length>0&&angular.forEach(this.uploadedDetails[0].components,function(e,t){this.push({field:"components."+t,displayName:t.toUpperCase(),width:200})},e),e.push({field:"incomeTax",displayName:"Income Tax",width:150}),this.gridOptions.columnDefs=e,this.gridOptions.data=this.uploadedDetails},t.steps=[new SharedModel.Step(1,"Upload Excel File","","previousSalary-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","previousSalary-validation-details",!1),new SharedModel.Step(3,"Preview","","previousSalary-details-preview",!1)],t.$inject=["$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","Month","paygroupService","FileDownloadService"],t}(PayrollImporController),PayrollCurrentSalaryImportController=function(e){function t(i,n,o,r,a,s,l,c){var p=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.CurrentSalary,r.import,{}),n,l)||this;return p.location=i,p.modalInstance=o,p.payrollService=r,p.appSettings=a,p.timeoutService=s,p.fileDownloadService=c,p.importTitle="Import Current Salary",p}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.selectedPayGroup.id+"/upload/EmployeeCurrentSalary"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/import/"+this.selectedPayGroup.id+"/currentSalary/sample/template")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee Name"},{field:"annualSalary",displayName:"Annual Salary"}],this.gridOptions.data=this.uploadedDetails,this.timeoutService(function(){window.dispatchEvent(new Event("resize"))},200)},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","currentSalary-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","currentSalary-validation-details",!1),new SharedModel.Step(3,"Preview","","currentSalary-details-preview",!1)],t.$inject=["$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","$timeout","paygroupService","FileDownloadService"],t}(PayrollImporController),PayrollCurrentSalaryWithStructureTypeImportController=function(e){function t(i,n,o,r,a,s,l){var c=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.CurrentSalaryWithStructureType,r.import,{}),n,a)||this;return c.location=i,c.modalInstance=o,c.payrollService=r,c.appSettings=s,c.fileDownloadService=l,c.importTitle="Import Current Salary With Structure Type",c}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.selectedPayGroup.id+"/upload/EmployeeCurrentSalaryWithStructureType"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/import/"+this.selectedPayGroup.id+"/currentSalaryWithStructureType/sample/template")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee Name"},{field:"workerType",displayName:"Worker Type"},{field:"structureType",displayName:"Salary Structure Type",cellTooltip:function(e,t){return e.entity.structureType}},{field:"annualSalary",displayName:"Salary (Annual / Daily)"}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","currentSalaryWithStructureType-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","currentSalary-validation-details",!1),new SharedModel.Step(3,"Preview","","currentSalary-details-preview",!1)],t.$inject=["$location","NotificationService","$uibModalInstance","PayrollService","paygroupService","AppSettings","FileDownloadService"],t}(PayrollImporController),PayrollEffectiveSalaryImportController=function(e){function t(i,n,o,r,a,s,l){var c=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.EffectiveSalary,r.import,{}),n,s)||this;return c.location=i,c.modalInstance=o,c.payrollService=r,c.appSettings=a,c.fileDownloadService=l,c}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.selectedPayGroup.id+"/upload/EmployeeEffectiveSalary"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/import/"+this.selectedPayGroup.id+"/effectivesalary/sample/template")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee Name"},{field:"workerType",displayName:"Worker Type"},{field:"currentSalary",displayName:"Current Salary"},{field:"structureType",displayName:"Salary Structure Type"},{field:"annualSalary",displayName:"Salary (Annual / Daily)"},{field:"percentage",displayName:"Percentage (%)"},{field:"effectiveFrom",displayName:"Effective From",type:"date",cellFilter:'date:"dd MMM yyyy"'}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","effectiveSalary-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","effectiveSalary-validation-details",!1),new SharedModel.Step(3,"Preview","","effectiveSalary-details-preview",!1)],t.$inject=["$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","paygroupService","FileDownloadService"],t}(PayrollImporController),PayrollBonusImportController=function(e){function t(i,n,o,r,a,s,l){var c=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.Bonuses,a.import,{importParams:"cycle/"+i.id,groupId:i.paygroupId}),o)||this;return c.currentCycle=i,c.location=n,c.modalInstance=r,c.payrollService=a,c.appSettings=s,c.fileDownloadService=l,c}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.currentCycle.paygroupId+"/cycle/"+this.currentCycle.id+"/upload/bonuses"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/excel/template/"+this.currentCycle.paygroupId+"/cycle/"+this.currentCycle.id+"/bonuses")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee Name"},{field:"bonusType",displayName:"Bonus Type"},{field:"amount",displayName:"Amount"}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close(this.isImportCompleted)},t.prototype.completeImport=function(){this.modalInstance.close(this.isImportCompleted)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","bonus-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","bonus-validation-details",!1),new SharedModel.Step(3,"Preview","","bonus-details-preview",!1)],t.$inject=["currentCycle","$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","FileDownloadService"],t}(SharedPatterns.ImportController),PayrollBonusActionImportController=function(e){function t(i,n,o,r,a,s,l){var c=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.bonusesWithAction,a.import,{importParams:"cycle/"+i.id,groupId:i.paygroupId}),o)||this;return c.currentCycle=i,c.location=n,c.modalInstance=r,c.payrollService=a,c.appSettings=s,c.fileDownloadService=l,c.payTypes=[{name:"On Hold",value:0},{name:"Void (Never Pay)",value:1},{name:"Pay",value:2},{name:"Paid Outside Keka Payroll",value:3},{name:"Partially Pay",value:4}],c}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.currentCycle.paygroupId+"/cycle/"+this.currentCycle.id+"/upload/bonusesWithAction"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/excel/template/"+this.currentCycle.paygroupId+"/cycle/"+this.currentCycle.id+"/bonusesWithAction")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee No"},{field:"employeeName",displayName:"Employee Name"},{field:"dueDate",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.dueDate | date:"dd MMM yyyy"}}</div>',displayName:"Payout Date"},{field:"bonusType",displayName:"Bonus Type"},{field:"amount",displayName:"Amount"},{field:"payAction",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.appScope.ctrl.payTypes[row.entity.payAction].name}}</div>',displayName:"Pay Action"},{field:"payPercentage",displayName:"Pay Percentage"},{field:"payAmount",displayName:"Pay Amount"},{field:"actionOnRemainingBalance",displayName:"Action on Remaining Amount"},{field:"comment",displayName:"Comment",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.comments}}</div>'}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close(this.isImportCompleted)},t.prototype.completeImport=function(){this.modalInstance.close(this.isImportCompleted)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","bonus-action-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","bonus-action-validation-details",!1),new SharedModel.Step(3,"Preview","","bonus-action-details-preview",!1)],t.$inject=["currentCycle","$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","FileDownloadService"],t}(SharedPatterns.ImportController),PayrollEffectiveBonusImportController=function(e){function t(i,n,o,r,a,s){var l=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.EffectiveBonuses,r.import,{}),n)||this;return l.location=i,l.modalInstance=o,l.payrollService=r,l.appSettings=a,l.fileDownloadService=s,l.payTypes={4:"Pending",5:"Paid Outside Keka Payroll"},l}return __extends(t,e),t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/excel/template/effectivebonusimport")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee Name"},{field:"bonusType",displayName:"Bonus Type"},{field:"amount",displayName:"Amount"},{field:"effectiveFrom",displayName:"Payout Date",type:"date",cellFilter:'date:"dd MMM yyyy"'},{field:"status",cellTemplate:'<div class="ui-grid-cell-contents">{{grid.appScope.bonusImportCtrl.payTypes[row.entity.status]}}</div>',displayName:"Status"},{field:"paidOn",displayName:"Paid On",type:"date",cellFilter:'date:"dd MMM yyyy"'},{field:"isIncludeInTax",displayName:"Include In Tax Calculation",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.status == 5">{{row.entity.isIncludeInTax ? "Yes" :  "No" }}</span></div>'}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","effectivebonus-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","effectivebonus-validation-details",!1),new SharedModel.Step(3,"Preview","","effectivebonus-details-preview",!1)],t.$inject=["$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","FileDownloadService"],t}(SharedPatterns.ImportController),PayrollLossOfDaysImportController=function(e){function t(i,n,o,r,a,s,l){var c=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.LossOfDays,a.import,{importParams:"cycle/"+i.id,groupId:i.paygroupId}),o)||this;return c.currentCycle=i,c.location=n,c.modalInstance=r,c.payrollService=a,c.appSettings=s,c.fileDownloadService=l,c}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.currentCycle.paygroupId+"/cycle/"+this.currentCycle.id+"/upload/lossOfDays"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/excel/template/"+this.currentCycle.paygroupId+"/cycle/"+this.currentCycle.id+"/lossOfDays")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",width:150},{field:"employeeName",displayName:"Employee Name"},{field:"lossOfPayDays",displayName:"Loss of days"},{field:"comment",displayName:"Comment"}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","Loss-of-days-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","Loss-of-days-validation-details",!1),new SharedModel.Step(3,"Preview","","Loss-of-days-details-preview",!1)],t.$inject=["currentCycle","$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","FileDownloadService"],t}(SharedPatterns.ImportController),PayrollLopReversalImportController=function(e){function t(i,n,o,r,a,s,l){var c=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.LopReversalDays,a.import,{importParams:"cycle/"+i.id,groupId:i.paygroupId}),o)||this;return c.currentCycle=i,c.location=n,c.modalInstance=r,c.payrollService=a,c.appSettings=s,c.fileDownloadService=l,c}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.currentCycle.paygroupId+"/cycle/"+this.currentCycle.id+"/upload/LopReversalDays"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/excel/template/"+this.currentCycle.paygroupId+"/cycle/"+this.currentCycle.id+"/LopReversalDays")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",width:150},{field:"employeeName",displayName:"Employee Name"},{field:"forCycle",displayName:"For Cycle",cellFilter:'date:"dd-MMM-yyyy"'},{field:"actualLopDaysAvailable",displayName:"Lop Days Available"},{field:"days",displayName:"Lop Reversal Days"},{field:"comment",displayName:"Comment"}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","lop-reversal-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","lop-reversal-validation-details",!1),new SharedModel.Step(3,"Preview","","lop-reversal-details-preview",!1)],t.$inject=["currentCycle","$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","FileDownloadService"],t}(SharedPatterns.ImportController),PayrollFinancialImportController=function(e){function t(i,n,o,r,a,s){var l=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.Financial,r.import,{}),n)||this;return l.location=i,l.modalInstance=o,l.payrollService=r,l.appSettings=a,l.fileDownloadService=s,l}return __extends(t,e),t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/excel/template/financialImport")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",width:150},{field:"displayName",displayName:"Employee Name",width:200},{field:"panAvailable",displayName:"Pan Available",width:200,cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.panAvailable ? "Yes" :  "No" }}</div>'},{field:"panNumber",displayName:"Pan Number",width:200},{field:"dateOfBirthOnPan",displayName:"Date Of Birth On Pan",width:200,type:"date",cellFilter:'date:"dd MMM yyyy"'},{field:"nameOnPan",displayName:"Name On Pan",width:200},{field:"fatherNameOnPan",displayName:"Father Name On Pan",width:200},{field:"salaryPaymentMode",displayName:"Salary Payment Mode",width:200},{field:"bankName",displayName:"Bank Name",width:200},{field:"ifsCode",displayName:"IFS Code",width:200},{field:"bankAccountNumber",displayName:"Bank Account Number",width:200},{field:"nameOnBankAccount",displayName:"Name On Bank Account",width:200},{field:"pfEstablishmentCode",displayName:"PF Establishment Id",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.pfEstablishmentCode}}</div>',width:200},{field:"pfDetailsAvailable",displayName:"PF Details Available",width:200,cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.pfDetailsAvailable ? "Yes" :  "No" }}</div>'},{field:"pfNumber",displayName:"PF Number",width:200},{field:"pfJoiningDate",displayName:"PF Joining Date",width:200,type:"date",cellFilter:'date:"dd MMM yyyy"'},{field:"nameOnPFAccount",displayName:"Name On PF Account",width:200},{field:"uan",displayName:"UAN",width:200},{field:"esiEligible",displayName:"ESI Eligible",width:200,cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.esiEligible ? "Yes" :  "No" }}</div>'},{field:"employerESINumber",displayName:"Employer ESI Number",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.employerESINumber}}</div>',width:200},{field:"esiNumber",displayName:"ESI Number",width:200},{field:"aadhaarNumber",displayName:"Aadhaar Number",width:200},{field:"nameOnAadhaar",displayName:"Name On Aadhaar",width:200},{field:"aadhaarEnrollmentNumber",displayName:"Aadhaar Enrollment Number",width:200}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","financial-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","financial-validation-details",!1),new SharedModel.Step(3,"Preview","","financial-details-preview",!1)],t.$inject=["$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","FileDownloadService"],t}(SharedPatterns.ImportController),PayrollDeclarationImportController=function(e){function t(i,n,o,r,a,s,l){var c=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.Declaration,r.import,{importParams:"tax"}),n,a)||this;return c.location=i,c.modalInstance=o,c.payrollService=r,c.appSettings=s,c.fileDownloadService=l,c}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.selectedPayGroup.id+"/tax/upload/declaration"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/import/"+this.selectedPayGroup.id+"/tax/declaration/sample/template")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1;var e=[{field:"employeeNumber",displayName:"Employee Number",width:150},{field:"employeeName",displayName:"Employee Name",width:200}];this.uploadedDetails.length>0&&angular.forEach(this.uploadedDetails[0].declarations,function(e,t){this.push({field:"declarations."+t,displayName:t.toUpperCase(),width:200})},e),e.push({field:"currentResidence",displayName:"Current Residence",width:150}),e.push({field:"currentResidenceAddress",displayName:"Current Residence Address",width:150}),e.push({field:"houseRentPaid",displayName:"House Rent Paid",width:150}),e.push({field:"landlordName",displayName:"Landlord Name",width:200}),e.push({field:"landlordAddress",displayName:"Landlord Address",width:200}),e.push({field:"landlordPan",displayName:"Landlord Pan",width:200}),e.push({field:"landlordType",displayName:"Landlord Type",width:150}),e.push({field:"selfOccupiedHomeLoanInterest",displayName:"Self Occupied Home Loan Interest",width:200}),e.push({field:"purposeOfLoan",displayName:"Purpose of Loan",width:150}),e.push({field:"annualRentReceived",displayName:"Annual Rent Received",width:200}),e.push({field:"municipalTaxesPaid",displayName:"Municipal Taxes Paid",width:200}),e.push({field:"unrealizedRent",displayName:"Unrealized Rent",width:200}),e.push({field:"interestOfHousingLoan",displayName:"Interest of Housing Loan",width:150}),e.push({field:"netInterestReceived",displayName:"Net Interest Received (Other Sources)",width:150}),e.push({field:"commissionIncome",displayName:"Commission Income (Other Sources)",width:150}),e.push({field:"otherProfessionalIncome",displayName:"Other Professional Income (Other Sources)",width:150}),this.gridOptions.columnDefs=e,this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","declaration-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","declaration-validation-details",!1),new SharedModel.Step(3,"Preview","","declaration-details-preview",!1)],t.$inject=["$location","NotificationService","$uibModalInstance","PayrollService","paygroupService","AppSettings","FileDownloadService"],t}(PayrollImporController),PayrollTDSOverrideImportController=function(e){function t(i,n,o,r,a,s,l){var c=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.TDSOverride,r.import,{importParams:"tax",groupId:s.id}),n)||this;return c.location=i,c.modalInstance=o,c.payrollService=r,c.appSettings=a,c.paygroup=s,c.fileDownloadService=l,c}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.paygroup.id+"/tax/upload/TDSOverride"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/import/"+this.paygroup.id+"/tax/TDSOverride/sample/template")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee Name"},{field:"fromMonth",displayName:"From Month"},{field:"toMonth",displayName:"To Month"},{field:"amount",displayName:"Amount"},{field:"comment",displayName:"Comment"}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","tdsOverride-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","tdsOverride-validation-details",!1),new SharedModel.Step(3,"Preview","","tdsOverride-details-preview",!1)],t.$inject=["$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","paygroup","FileDownloadService"],t}(SharedPatterns.ImportController),PayrollESIOverrideImportController=function(e){function t(i,n,o,r,a,s,l){var c=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.ESIOverride,r.import,{groupId:s.id,importParams:"override"}),n)||this;return c.location=i,c.modalInstance=o,c.payrollService=r,c.appSettings=a,c.paygroup=s,c.fileDownloadService=l,c}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.paygroup.id+"/override/upload/esiOverride"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/import/"+this.paygroup.id+"/override/esiOverride/sample/template")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee Name"},{field:"fromMonth",displayName:"From Month"},{field:"toMonth",displayName:"To Month"},{field:"employeeContribution",displayName:"Employee ESI Override"},{field:"employerContribution",displayName:"Employer ESI Override"},{field:"comment",displayName:"Comment"}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","esiOverride-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","esiOverride-validation-details",!1),new SharedModel.Step(3,"Preview","","esiOverride-details-preview",!1)],t.$inject=["$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","paygroup","FileDownloadService"],t}(SharedPatterns.ImportController),PayrollPTOverrideImportController=function(e){function t(i,n,o,r,a,s,l){var c=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.PTOverride,r.import,{importParams:"tax",groupId:s.id}),n)||this;return c.location=i,c.modalInstance=o,c.payrollService=r,c.appSettings=a,c.paygroup=s,c.fileDownloadService=l,c}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.paygroup.id+"/tax/upload/PTOverride"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/import/"+this.paygroup.id+"/tax/PTOverride/sample/template")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee Name"},{field:"fromMonth",displayName:"From Month"},{field:"toMonth",displayName:"To Month"},{field:"amount",displayName:"Amount"},{field:"comment",displayName:"Comment"}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","ptOverride-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","ptOverride-validation-details",!1),new SharedModel.Step(3,"Preview","","ptOverride-details-preview",!1)],t.$inject=["$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","paygroup","FileDownloadService"],t}(SharedPatterns.ImportController),PayrollPFOverrideImportController=function(e){function t(i,n,o,r,a,s,l){var c=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.PFOverride,r.import,{groupId:s.id,importParams:"override"}),n)||this;return c.location=i,c.modalInstance=o,c.payrollService=r,c.appSettings=a,c.paygroup=s,c.fileDownloadService=l,c}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.paygroup.id+"/override/upload/pfOverride"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/import/"+this.paygroup.id+"/override/pfOverride/sample/template")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee Name"},{field:"monthlyBasic",displayName:"Monthly Basic"},{field:"pfOverride",displayName:"PF Override",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.pfOverride ? "Yes" :  "No"}}</div>'},{field:"monthlyEmployerShare",displayName:"Monthly Employer Share"},{field:"monthlyEmployeeShare",displayName:"Monthly Employee Share"},{field:"proratePFForLOPAdjustment",displayName:"Prorate PF for LOP adjustment",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.proratePFForLOPAdjustment ? "Yes" :  "No"}}</div>'}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","pfOverride-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","pfOverride-validation-details",!1),new SharedModel.Step(3,"Preview","","pfOverride-details-preview",!1)],t.$inject=["$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","paygroup","FileDownloadService"],t}(SharedPatterns.ImportController),PayrollComponentsOverrideImportController=function(e){function t(i,n,o,r,a,s,l){var c=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.ComponentsOverride,r.import,{groupId:s.id,importParams:"override"}),n)||this;return c.location=i,c.modalInstance=o,c.payrollService=r,c.appSettings=a,c.paygroup=s,c.fileDownloadService=l,c}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.paygroup.id+"/override/upload/componentsOverride"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/import/"+this.paygroup.id+"/override/componentsOverride/sample/template")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1;var e=[{field:"employeeNumber",displayName:"Employee Number",minWidth:100},{field:"employeeName",displayName:"Employee Name",minWidth:200}];this.uploadedDetails.length>0&&angular.forEach(this.uploadedDetails[0].components,function(e,t){this.push({field:"components."+t,displayName:t.toUpperCase(),width:200})},e),this.gridOptions.columnDefs=e,this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","componentsOverride-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","componentsOverride-validation-details",!1),new SharedModel.Step(3,"Preview","","componentsOverride-details-preview",!1)],t.$inject=["$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","paygroup","FileDownloadService"],t}(SharedPatterns.ImportController),PayrollPFAndESIImportController=function(e){function t(i,n,o,r,a,s,l){var c=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.PFAndESIDetails,r.import,{groupId:s.id,importParams:"financial"}),n)||this;return c.location=i,c.modalInstance=o,c.payrollService=r,c.appSettings=a,c.paygroup=s,c.fileDownloadService=l,c}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.paygroup.id+"/financial/upload/PFAndESIDetails"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/import/"+this.paygroup.id+"/financial/PFAndESIDetails/sample/template")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee Name"},{field:"pfEstablishmentId",displayName:"PF Establishment Id",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.pfEstablishmentId}}</div>'},{field:"pfDetailsAvailable",displayName:"PF Details Available",width:200,cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.pfDetailsAvailable ? "Yes" :  "No"}}</div>'},{field:"pfNumber",displayName:"PF Number"},{field:"pfJoiningDate",displayName:"PF Joining Date",cellFilter:'date:"dd MMM yyyy"'},{field:"nameOnPFAccount",displayName:"Name On PF Account"},{field:"uan",displayName:"UAN"},{field:"esiEligible",displayName:"ESI Eligible",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.esiEligible ? "Yes" :  "No"}}</div>'},{field:"employerESINumber",displayName:"Employer ESI Number",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.employerESINumber}}</div>'},{field:"esiNumber",displayName:"ESI Number"}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","pfAndESI-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","pfAndESI-validation-details",!1),new SharedModel.Step(3,"Preview","","pfAndESI-details-preview",!1)],t.$inject=["$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","payGroup","FileDownloadService"],t}(SharedPatterns.ImportController),PayrollEmployeeLoanImportController=function(e){function t(i,n,o,r,a,s){var l=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.Loans,r.import,{}),n)||this;return l.location=i,l.modalInstance=o,l.payrollService=r,l.appSettings=a,l.fileDownloadService=s,l}return __extends(t,e),t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/Content/assets/LoanImportSample.xlsx","LoanImportSample")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee Name"},{field:"loanAmount",displayName:"Loan Amount"},{field:"rateOfInterest",displayName:"Rate Of Interest"},{field:"repaymentTerm",displayName:"Repayment Term"},{field:"interestCalculationMethod",displayName:"Interest Calculation Method"},{field:"disbursalMode",displayName:"Disbursal Mode"},{field:"loanReleasedOn",displayName:"Loan Released On",cellFilter:'date:"dd MMM yyyy"'}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","loan-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","loan-validation-details",!1),new SharedModel.Step(3,"Preview","","loan-details-preview",!1)],t.$inject=["$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","FileDownloadService"],t}(SharedPatterns.ImportController),PayrollComponentAccrualImportController=function(e){function t(i,n,o,r,a,s,l,c,p){var u=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.ComponentAccrual,a.import,{importParams:"reimburseComponent/"+n.componentName}),o,s)||this;return u.location=i,u.stateParams=n,u.modalInstance=r,u.payrollService=a,u.payrollLookUpService=l,u.appSettings=c,u.fileDownloadService=p,u.payrollLookUpService.getAllSalaryComponents().then(function(e){u.componentTitle=e.find(function(e){return e.name==u.stateParams.componentName}).title}),u}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.selectedPayGroup.id+"/reimburseComponent/"+this.stateParams.componentName+"/upload/componentAccrual"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/import/"+this.selectedPayGroup.id+"/reimburseComponent/"+this.stateParams.componentName+"/componentAccrual/sample/template")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee Name"},{field:"accrualAmount",displayName:"Accrual Amount"}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","reimbursable-accrual-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","reimbursable-accrual-validation-details",!1),new SharedModel.Step(3,"Preview","","reimbursable-accrual-details-preview",!1)],t.$inject=["$location","$stateParams","NotificationService","$uibModalInstance","PayrollService","paygroupService","PayrollLookUpService","AppSettings","FileDownloadService"],t}(PayrollImporController),PayrollPreviousComponentClaimImportController=function(e){function t(t,i,n,o,r,a,s,l,c){var p=e.call(this,PayrollComponentAccrualImportController.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.PreviousComponentClaim,r.import,{importParams:"reimburseComponent/"+i.componentName}),n,a)||this;return p.location=t,p.stateParams=i,p.modalInstance=o,p.payrollService=r,p.payrollLookUpService=s,p.appSettings=l,p.fileDownloadService=c,p.payrollLookUpService.getAllSalaryComponents().then(function(e){p.componentTitle=e.find(function(e){return e.name==p.stateParams.componentName}).title}),p}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.selectedPayGroup.id+"/reimburseComponent/"+this.stateParams.componentName+"/upload/previousComponentClaim"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/import/"+this.selectedPayGroup.id+"/reimburseComponent/"+this.stateParams.componentName+"/previousComponentClaim/sample/template")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee Name"},{field:"claimAmount",displayName:"Claim Amount"},{field:"paidOn",displayName:"Paid On",cellFilter:'date:"dd MMM yyyy"'}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","reimbursable-accrual-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","reimbursable-accrual-validation-details",!1),new SharedModel.Step(3,"Preview","","reimbursable-accrual-details-preview",!1)],t.$inject=["$location","$stateParams","NotificationService","$uibModalInstance","PayrollService","paygroupService","PayrollLookUpService","AppSettings","FileDownloadService"],t}(PayrollImporController),PayrollComponentClaimImportController=function(e){function t(i,n,o,r,a,s,l,c){var p=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.ComponentClaim,r.import,{importParams:"reimburseComponent/"+s,groupId:l.payGroupId}),n)||this;return p.location=i,p.modalInstance=o,p.payrollService=r,p.appSettings=a,p.componentName=s,p.payrollConfiguration=l,p.fileDownloadService=c,p.componentTitle=p.payrollConfiguration.getSupportedComponent(p.componentName).title,p}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.payrollConfiguration.payGroupId+"/reimburseComponent/"+this.componentName+"/upload/componentClaim"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/import/"+this.payrollConfiguration.payGroupId+"/reimburseComponent/"+this.componentName+"/componentClaim/sample/template")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee Name"},{field:"claimAmount",displayName:"Claim Amount"}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close(this.isImportCompleted)},t.prototype.completeImport=function(){this.modalInstance.close(this.isImportCompleted)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","reimbursable-claim-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","reimbursable-claim-validation-details",!1),new SharedModel.Step(3,"Preview","","reimbursable-claim-details-preview",!1)],t.$inject=["$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","componentName","payrollConfiguration","FileDownloadService"],t}(SharedPatterns.ImportController),PayrollOneTimPaymentsImportController=function(e){function t(i,n,o,r,a,s,l,c){var p=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.OneTimePayments,s.import,{importParams:"cycle/"+n.id,groupId:i}),r)||this;return p.paygroupId=i,p.currentCycle=n,p.location=o,p.modalInstance=a,p.payrollService=s,p.appSettings=l,p.fileDownloadService=c,p}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.currentCycle.paygroupId+"/cycle/"+this.currentCycle.id+"/upload/OneTimePayments"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/excel/template/"+this.currentCycle.paygroupId+"/cycle/"+this.currentCycle.id+"/OneTimePayments")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee Name"},{field:"oneTimePaymentType",displayName:"OneTime Payment Type"},{field:"amount",displayName:"Amount"},{field:"comment",displayName:"Comment"}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close(this.isImportCompleted)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","one-time-payments-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","one-time-payments-validation-details",!1),new SharedModel.Step(3,"Preview","","one-time-payments-details-preview",!1)],t.$inject=["PaygroupId","currentCycle","$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","FileDownloadService"],t}(SharedPatterns.ImportController),PayrollOneTimDeductionsImportController=function(e){function t(i,n,o,r,a,s,l){var c=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.OneTimeDeductions,a.import,{importParams:"cycle/"+i.id,groupId:i.paygroupId}),o)||this;return c.currentCycle=i,c.location=n,c.modalInstance=r,c.payrollService=a,c.appSettings=s,c.fileDownloadService=l,c}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.currentCycle.paygroupId+"/cycle/"+this.currentCycle.id+"/upload/OneTimeDeductions"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/excel/template/"+this.currentCycle.paygroupId+"/cycle/"+this.currentCycle.id+"/OneTimeDeductions")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee Name"},{field:"oneTimeDeductionType",displayName:"OneTime Deduction Type"},{field:"amount",displayName:"Amount"},{field:"comment",displayName:"Comment"}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close(this.isImportCompleted)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","one-time-deductions-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","one-time-deductions-validation-details",!1),new SharedModel.Step(3,"Preview","","one-time-deductions-details-preview",!1)],t.$inject=["currentCycle","$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","FileDownloadService"],t}(SharedPatterns.ImportController),PayrollEmployeePerksImportController=function(e){function t(i,n,o,r,a,s,l,c){var p=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.perks,r.import,{groupId:s,year:l}),n)||this;return p.location=i,p.modalInstance=o,p.payrollService=r,p.appSettings=a,p.groupId=s,p.selectedFinancialYear=l,p.fileDownloadService=c,p}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.groupId+"/upload/perks"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/import/"+this.groupId+"/perks/sample/template?year="+this.selectedFinancialYear)},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee Name"},{field:"perkType",displayName:"perk Type"},{field:"amountGiven",displayName:"Amount Given"},{field:"taxableAmount",displayName:"Taxable Amount"}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","perk-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","perk-validation-details",!1),new SharedModel.Step(3,"Preview","","perk-details-preview",!1)],t.$inject=["$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","groupId","selectedFinancialYear","FileDownloadService"],t}(SharedPatterns.ImportController),PayGroupAssignmentImportController=function(e){function t(i,n,o,r,a,s,l){var c=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.PayGroupAssignment,r.import,{}),n)||this;return c.location=i,c.modalInstance=o,c.payrollService=r,c.dialogs=a,c.appSettings=s,c.fileDownloadService=l,c}return __extends(t,e),t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/excel/template/paygroupassignmentimport")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee Name"},{field:"payGroupName",displayName:"Pay Group Name"}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.prototype.import=function(){var e=this;this.dialogs.confirm("Please Confirm","Changing Pay Group of an employee will remove all payroll related data for the employee. You will be required to add the Salary data, PF and ESI Establishment codes again.").result.then(function(){e.importFile()})},t.steps=[new SharedModel.Step(1,"Upload Excel File","","paygroup-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","paygroup-validation-details",!1),new SharedModel.Step(3,"Preview","","paygroup-details-preview",!1)],t.$inject=["$location","NotificationService","$uibModalInstance","PayrollService","dialogs","AppSettings","FileDownloadService"],t}(SharedPatterns.ImportController),PayrollPayDaysImportController=function(e){function t(i,n,o,r,a,s,l,c){var p=e.call(this,t.steps,new SharedPatterns.ImportService(SharedPatterns.ExcelImportType.PayableDaysOverride,s.import,{importParams:"cycle/"+n,groupId:i}),r)||this;return p.paygroupId=i,p.currentCycle=n,p.location=o,p.modalInstance=a,p.payrollService=s,p.appSettings=l,p.fileDownloadService=c,p}return __extends(t,e),t.prototype.uploadTo=function(){return"/api/payroll/import/"+this.paygroupId+"/cycle/"+this.currentCycle+"/upload/payableDaysOverride"},t.prototype.downloadImportSample=function(){this.fileDownloadService.downloadFile("/api/payroll/excel/template/"+this.paygroupId+"/cycle/"+this.currentCycle+"/payableDaysOverride")},t.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.enableHorizontalScrollbar=1,this.gridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number",width:150},{field:"employeeName",displayName:"Employee Name"},{field:"units",displayName:"Payable Days"}],this.gridOptions.data=this.uploadedDetails},t.prototype.closeModal=function(){this.modalInstance.close()},t.prototype.completeImport=function(){this.modalInstance.close(!0)},t.steps=[new SharedModel.Step(1,"Upload Excel File","","pay-days-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","pay-days-validation-details",!1),new SharedModel.Step(3,"Preview","","pay-days-details-preview",!1)],t.$inject=["paygroupId","currentCycle","$location","NotificationService","$uibModalInstance","PayrollService","AppSettings","FileDownloadService"],t}(SharedPatterns.ImportController);angular.module("payroll").controller("PayrollImportDashboardController",PayrollImportDashboardController).controller("PayrollCurrentSalaryImportController",PayrollCurrentSalaryImportController).controller("PayrollEffectiveSalaryImportController",PayrollEffectiveSalaryImportController).controller("PayrollPreviousSalaryImportController",PayrollPreviousSalaryImportController).controller("PayrollFinancialImportController",PayrollFinancialImportController).controller("PayrollDeclarationImportController",PayrollDeclarationImportController).controller("PayrollLopReversalImportController",PayrollLopReversalImportController).controller("PayrollLossOfDaysImportController",PayrollLossOfDaysImportController).controller("PayrollBonusImportController",PayrollBonusImportController).controller("PayrollOneTimPaymentsImportController",PayrollOneTimPaymentsImportController).controller("PayrollOneTimDeductionsImportController",PayrollOneTimDeductionsImportController).controller("PayrollEmployeeLoanImportController",PayrollEmployeeLoanImportController).controller("PayrollEffectiveBonusImportController",PayrollEffectiveBonusImportController).controller("PayrollCurrentSalaryWithStructureTypeImportController",PayrollCurrentSalaryWithStructureTypeImportController).controller("PayrollTDSOverrideImportController",PayrollTDSOverrideImportController).controller("PayrollESIOverrideImportController",PayrollESIOverrideImportController).controller("PayrollPTOverrideImportController",PayrollPTOverrideImportController).controller("PayrollPFOverrideImportController",PayrollPFOverrideImportController).controller("PayrollComponentsOverrideImportController",PayrollComponentsOverrideImportController).controller("PayrollPFAndESIImportController",PayrollPFAndESIImportController).controller("PayrollComponentAccrualImportController",PayrollComponentAccrualImportController).controller("PayrollPreviousComponentClaimImportController",PayrollPreviousComponentClaimImportController).controller("PayrollComponentClaimImportController",PayrollComponentClaimImportController).controller("PayrollBonusActionImportController",PayrollBonusActionImportController).controller("PayrollEmployeePerksImportController",PayrollEmployeePerksImportController).controller("PayGroupAssignmentImportController",PayGroupAssignmentImportController).controller("PayrollPayDaysImportController",PayrollPayDaysImportController),appRoot.factory("DeductionStatus",["Constants",function(e){return new e({None:{id:0,title:"None"},NotSubmitted:{id:1,title:"NotSubmitted"},Submitted:{id:2,title:"To be reviewed"},Accepted:{id:3,title:"Accepted"},Rejected:{id:4,title:"Rejected"}})}]),appRoot.factory("PaymentStatus",["Constants",function(e){return new e({Void:{id:2,title:"Void"},Paid:{id:3,title:"Paid"},Pending:{id:4,title:"Pending"},PaidOutsideKekaPayroll:{id:5,title:"Paid Outside Keka Payroll"},PartiallyPaid:{id:6,title:"Partially Paid"}})}]),appRoot.factory("ClaimStatus",["Constants",function(e){return new e({None:{id:0,title:"Draft"},NoProofSubmitted:{id:1,title:"NoProofSubmitted"},PendingForApproval:{id:2,title:"Pending"},Approved:{id:3,title:"Approved"},Rejected:{id:4,title:"Rejected"},Paid:{id:5,title:"Paid"},InApprovalProcess:{id:6,title:"In Approval Process",description:"InApprovalProcess"}})}]),appRoot.factory("BillStatus",["Constants",function(e){return new e({None:{id:0,title:"--"},Processing:{id:1,title:"Processing"},Completed:{id:2,title:"Completed"}})}]),appRoot.factory("AlertPriority",["Constants",function(e){return new e({None:{id:0,title:"None"},High:{id:1,title:"High"},Medium:{id:2,title:"Medium"},Low:{id:3,title:"Low"}})}]),appRoot.factory("SalaryStructureGenerateSource",["Constants",function(e){return new e({None:{id:0,title:"None"},Range:{id:1,title:"Range Based"},CustomStructure:{id:2,title:"Custom Structures"},Auto:{id:3,title:"Auto Generated"}})}]),appRoot.factory("GenerationSource",["Constants",function(e){return new e({None:{id:0,title:"None",name:"None"},InsideKeka:{id:1,title:"Processed",name:"InsideKeka"},CurrentEmploymentImport:{id:2,title:"Imported from old payroll system",name:"CurrentEmploymentImport"},Projected:{id:3,title:"Projected",name:"Projected"},PreviousEmployment:{id:4,title:"Previous employer",name:"PreviousEmployment"}})}]),appRoot.factory("TaxSectionGroup",["Constants",function(e){return new e({group1o5Lac:{id:"80CCE",title:"Group 1.5 Lac"},otherSections:{id:"otherSections",title:"Other Sections"},allowances:{id:"allowances",title:"Allowances"},house:{id:"house",title:"house"}})}]),angular.module("payroll").controller("FinancesController",["$scope","EmployeeAndPayrollDetails","setupUrl","$state","showMyPay","PayrollVisibilityPermission","AppContext","SharedDataService",function(e,t,i,n,o,r,a,s){e.vm={};isSetupCompleted=function(){var e=!0;return t.payrollSetUp?e&=t.payrollSetUp.setupComplete:t.employee.payrollEnable?e&=t.employee.reviewPayrollSetup.allReviewed:e=!1,e},e.vm.payrollVisibilityPermission=r||a.payrollVisibilityPermission,e.vm.showMyPay=o,e.vm.isLoanEnable=!e.vm.payrollVisibilityPermission.hideLoans,e.vm.employeeAttributes=s.getEmployeeAttributes(),i==n.current.name||isSetupCompleted()||n.go(i),e.$on("$stateChangeStart",function(e,t,o,r,a){var s=n.includes("myfinances")?"myfinances":"employee.finances";-1!=t.name.indexOf(s)&&i!=t.name&&(isSetupCompleted()||(e.preventDefault(),n.go(i)))})}]),angular.module("payroll").controller("FinancesPinRegistrationController",["$scope","AppContext",function(e,t){}]),angular.module("payroll").controller("FinancesSummaryController",["$scope","$uibModal","FinanceService","EmployeeAndPayrollDetails","Params","AlertPriority","showMyPay","SharedDataService",function(e,t,i,n,o,r,a,s){e.vm={},e.vm.financeService=i,e.vm.params=o;e.openInsuranceGuide=function(){t.open({templateUrl:"insuranceGuide",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,scope:e})},e.vm.showMyPay=a,e.vm.isLoanEnable=n.config.enableEmployeeLoans,e.vm.alertPriority=r,e.vm.payrollConfig=n.config,e.vm.employeeAttributes=s.getEmployeeAttributes()}]),appRoot.controller("FinancesIncomeTaxController",["$scope","FinanceService","EmployeeAndPayrollDetails","Params","FinanceModel","currentFinancialYear","dialogs","$state","GenerationSource","financialYearList",function(e,t,i,n,o,r,a,s,l,c){e.vm={},e.vm.generationSource=l,e.vm.financialYearList=c,e.vm.taxRegime={},e.vm.isMyFinance=!1,e.vm.employeeId=0;var p=angular.copy(n);e.getIncomeTaxDetails=function(i){e.vm.selectedFinancialYear=i,p.year=i.from.getFullYear(),t.getIncomeTaxDetails(p).then(function(t){t.errorMessage?a.error("Income Tax Stats Error",t.errorMessage).result.finally(function(){s.go(s.current.parentState)}):e.vm.incomeTaxStats=new o.IncomeTaxStats(t)},function(e){}),t.myfinances?e.vm.isMyFinance=!0:e.vm.employeeId=p.id,t.getTaxRegimeDetails(p).then(function(t){t.errorMessage?a.error("Regime Stats Error",t.errorMessage).result.finally(function(){s.go(s.current.parentState)}):e.vm.taxRegime=t},function(e){})},e.setArrearBreakUpDetails=function(t){e.vm.arrearBreakUpDetails=t||[]},e.downloadPdf=function(){var i=new o.IncomeTaxComputationRequest({year:e.vm.selectedFinancialYear.from.getFullYear()});t.exportIncomeTaxComputation(n.id,i)},e.getIncomeTaxDetails(r),e.vm.payrollConfig=i.config}]),angular.module("payroll").controller("FinancesDeclarationController",["$scope","$state","AppContext","FinanceService","Params","FinanceModel","EmployeeAndPayrollDetails","PayrollModel","currentFinancialYear","TaxSectionGroup","financialYearList","SharedDataService",function(e,t,i,n,o,r,a,s,l,c,p,u){e.vm={},e.vm.financialYearList=p;e.getTaxDeclarationSummary=function(t){var i=e.vm.financialYear&&e.vm.financialYear!=t;e.vm.financialYear=t,e.vm.isCutOffDateComplete=e.vm.payrollConfig.employee.declaration.isCutOffDateComplete(t),e.vm.params.year=t.from.getFullYear(),e.vm.financeService.gettaxDeclarationSummary(angular.copy(e.vm.params)).then(function(t){e.getIncomeTaxDeductionSummary(i),t.groupedTaxSections.forEach(function(t){e.vm.groupedTaxSections[t.name]=t}),e.vm.investmentDeclaration=new r.Declaration(t.declaration)})},e.getIncomeTaxDeductionSummary=function(n){!i.hasPrivilege(["EmployeeFinance.ViewIncomeTaxDetails","EmployeeFinance.Implicit.ViewIncomeTaxDetails"],e.vm.employeeAttributes)&&t.includes("employee.finances")||(t.includes("employee.finances")||!e.vm.payrollConfig.employee.hideMyTaxableIncome?(e.vm.params.year=e.vm.financialYear.from.getFullYear(),e.vm.financeService.getIncomeTaxDeductionSummary(angular.copy(e.vm.params)).then(function(t){e.vm.incomeTaxDeductionSummary=new r.IncomeTaxDeductionSummary(t),e.$broadcast("incomeTaxSummaryChanged",{investmentDeclaration:e.vm.investmentDeclaration,incometaxStats:e.vm.incomeTaxDeductionSummary,npsEmployerAmount:e.vm.incomeTaxDeductionSummary.npsEmployerGrossAmount,isNPSEmployerComponentEnable:e.vm.incomeTaxDeductionSummary.isNPSEmployerComponentEnable,isfinancialYearChanged:n})})):e.vm.financeService.getTaxDeclarationInputs(angular.copy(e.vm.params)).then(function(t){e.vm.incomeTaxDeductionSummary=new r.IncomeTaxDeductionSummary(t),e.$broadcast("incomeTaxSummaryChanged",{investmentDeclaration:e.vm.investmentDeclaration,incometaxStats:e.vm.incomeTaxDeductionSummary,npsEmployerAmount:e.vm.incomeTaxDeductionSummary.npsEmployerGrossAmount,isNPSEmployerComponentEnable:e.vm.incomeTaxDeductionSummary.isNPSEmployerComponentEnable,isfinancialYearChanged:n})}))},e.saveDeclaration=function(){return e.vm.params.year=e.vm.financialYear.from.getFullYear(),e.vm.financeService.saveInvestmentDeclaration(angular.copy(e.vm.params),e.vm.investmentDeclaration.deductions).then(function(t){return e.vm.investmentDeclaration=new r.Declaration(t),e.vm.investmentDeclaration})},e.getAllowances=function(){return e.vm.params.year=e.vm.financialYear.from.getFullYear(),e.vm.financeService.getTaxFreeAllowanceComponents(e.vm.params)},e.updateDeduction=function(t){return e.vm.params.year=e.vm.financialYear.from.getFullYear(),e.vm.financeService.updateDeduction(angular.copy(e.vm.params),t).then(function(t){return e.vm.investmentDeclaration=new r.Declaration(t),e.vm.investmentDeclaration})},e.clearDeduction=function(t){return e.vm.params.year=e.vm.financialYear.from.getFullYear(),e.vm.financeService.clearDeduction(angular.copy(e.vm.params),t).then(function(t){return e.vm.investmentDeclaration=new r.Declaration(t),e.vm.investmentDeclaration})},e.saveSelfOccupiedLoanDetail=function(t){return e.vm.params.year=e.vm.financialYear.from.getFullYear(),e.vm.financeService.saveSelfOccupiedLoanDetail(angular.copy(e.vm.params),t).then(function(t){return e.vm.investmentDeclaration=new r.Declaration(t),e.vm.investmentDeclaration})},e.saveOrUpdateRentalDetail=function(t){return e.vm.params.year=e.vm.financialYear.from.getFullYear(),e.vm.financeService.saveOrUpdateRentalDetail(angular.copy(e.vm.params),t).then(function(t){return e.vm.investmentDeclaration=new r.Declaration(t),e.vm.investmentDeclaration})},e.deleteRentalDetail=function(t){return e.vm.params.year=e.vm.financialYear.from.getFullYear(),e.vm.financeService.deleteRentalDetail(angular.copy(e.vm.params),t)},e.saveOrUpdateLetOutProperty=function(t){return e.vm.params.year=e.vm.financialYear.from.getFullYear(),e.vm.financeService.saveOrUpdateOtherHouseResidence(angular.copy(e.vm.params),t).then(function(t){return e.vm.investmentDeclaration=new r.Declaration(t),e.vm.investmentDeclaration})},e.deleteOtherHouseResidence=function(t){return e.vm.params.year=e.vm.financialYear.from.getFullYear(),e.vm.financeService.deleteOtherHouseResidence(angular.copy(e.vm.params),t)},e.saveOrUpdateOtherSources=function(t){return e.vm.params.year=e.vm.financialYear.from.getFullYear(),e.vm.financeService.saveOrUpdateOtherSourcesIncome(angular.copy(e.vm.params),t).then(function(t){return e.vm.investmentDeclaration=new r.Declaration(t),e.vm.investmentDeclaration})},e.deleteOtherSource=function(){return e.vm.params.year=e.vm.financialYear.from.getFullYear(),e.vm.financeService.deleteOtherSourceIncome(angular.copy(e.vm.params)).then(function(t){return t.isDeleted&&(e.vm.investmentDeclaration.deductionsFromOtherSources=new Payroll.Model.Finance.IncomeFromOtherSources({status:0})),e.vm.investmentDeclaration.deductionsFromOtherSources})},e.vm.employeeAttributes=u.getEmployeeAttributes(),e.vm.financeService=n,e.vm.params=angular.copy(o),e.vm.employee=a.employee,e.vm.taxSectionGroup=c,e.vm.groupedTaxSections={},e.vm.payrollConfig=a.config,e.getTaxDeclarationSummary(l),e.vm.cutOffdate=e.vm.payrollConfig.employee.declaration.cutOffDate(e.vm.financialYear),e.vm.payrollConfig.employee.declaration.hasProofCutOffDate&&(e.vm.proofCutOffDate=e.vm.payrollConfig.employee.declaration.proofCutOffDate(e.vm.financialYear))}]),angular.module("payroll").controller("PreviousEmploymentController",["$scope","$q","$uibModal","AppSettings","AppContext","FinanceModel","NotificationService","PayrollModel","dialogs","FinanceService","Params","EmployeeAndPayrollDetails","currentFinancialYear","SharedDataService",function(e,t,i,n,o,r,a,s,l,c,p,u,d,m){function y(e){this.month=e.month,this.monthlygrosssalary=e.monthlygrosssalary||0,this.basic=e.basic,this.pf=e.pf,this.esi=e.esi,this.hra=e.hra,this.professionaltax=e.professionaltax,this.tds=e.tds,this.otherTaxableComponents=e.otherTaxableComponents,this.otherTaxFreeComponents=e.otherTaxFreeComponents,this.editablemodel=null,this.update=function(e){this.constructor(e)},this.isValidGross=function(){return this.monthlygrosssalary==(this.basic||0)+(this.hra||0)+(this.otherTaxableComponents||0)+(this.otherTaxFreeComponents||0)}}var h=function(){var t=new Date(e.vm.employee.dateJoined);t>s.FinancialYear.getFinancialYear(u.config.payrollSchedule.payCycle.kekaStartsFrom).from&&(e.vm.previousDetailsRequired=!0,e.vm.salaryDetailsRange=new s.FinancialYear({from:s.FinancialYear.getFinancialYear(t).from,to:t}),e.vm.employmentDetailsRows=f(e.vm.salaryDetailsRange),e.vm.financialYear.includes(t)&&o.hasPrivilege(["EmployeeFinance.ViewIncomeTaxDetails"],e.vm.employeeAttributes)&&e.employmentGridOptions.columnDefs.push({name:"actions",displayName:"Actions",headerTooltip:!0,cellClass:"ui-grid-cell ui-grid-cell-contents",cellTemplate:'<div class="plan-edit clearfix"><ul class="action-items"><li class="list-item" data-ng-if="!row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.enableRowEdit(row.entity)"><span class="icon-pencil5 information-tooltip tooltip-grey" uib-tooltip="Edit" tooltip-placement="left"></span></a></li><li class="list-item" data-ng-if="row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.saveRowEdit(row.entity)"><span class="icon-checkmark-circle information-tooltip tooltip-grey" uib-tooltip="Submit" tooltip-placement="left"></span></a></li><li class="list-item" data-ng-if="row.entity.isEditable"><a class="list-link" data-ng-click="grid.appScope.cancelRowEdit(row.entity)"><span class="icon-cancel-circle information-tooltip tooltip-grey" uib-tooltip="Cancel" tooltip-placement="left"></span></a></li></ul></div>'}))},f=function(e){for(var t=[],i=e.from,n=e.to,o=new Date(i);o<n;o=new Date(o.setMonth(o.getMonth()+1))){var r=new y({month:new Date(o),monthlygrosssalary:0,pf:0,professionaltax:0,tds:0,surcharge:0,educationcess:0});t.push(r)}return t},g=function(t){var i=e.vm.employmentDetailsRows;i.forEach(function(e,n){var o=t.find(function(t){return t.month==e.month.getMonth()+1});if(o){var r=new y(o.components);r.month=e.month,r.monthlygrosssalary=o.grossAmount,i.splice(n,1,r)}})};e.enableRowEdit=function(e){e.editablemodel=new y(e),e.isEditable=!0},e.saveRowEdit=function(e){e.isEditable=!1,e.update(e.editablemodel)},e.cancelRowEdit=function(e){e.editablemodel=null,e.isEditable=!1},e.savePreviousEmployment=function(){e.gridApi.grid.rows.forEach(function(e){e.entity.isEditable=!1});var t,i,n=angular.copy(e.vm.params);e.vm.financeService.savePreviousIncomeDetails(n,(t=e.gridApi.grid.rows,i=[],t.forEach(function(e){var t=new function(e){this.month=e.month,this.components=e.components,this.grossAmount=e.grossAmount}({month:e.entity.month.getMonth()+1,components:new function(e){this.monthlygrosssalary=e.monthlygrosssalary||0,this.pf=e.pf,this.esi=e.esi,this.hra=e.hra,this.professionaltax=e.professionaltax,this.tds=e.tds,this.basic=e.basic,this.otherTaxableComponents=e.otherTaxableComponents,this.otherTaxFreeComponents=e.otherTaxFreeComponents}(e.entity),grossAmount:e.entity.monthlygrosssalary});i.push(t)}),i)).then(function(e){e.previousIncome?a.success("Previous Income is saved successfully."):a.error("An error occurred while saving previous income data.")})},e.validateAndsavePreviousEmployment=function(){if(e.vm.grossMissMatchMonths=e.gridApi.grid.rows.filter(function(e){return!e.entity.isValidGross()}),e.vm.grossMissMatchMonths.length>0)return e.grossMissMatchConformation();e.savePreviousEmployment()},e.grossMissMatchConformation=function(){i.open({templateUrl:"confirm-priviousIncome-grossMissMatch",keyboard:!1,backdrop:"static",windowClass:"finalize-payroll-modal grey-modal-header",scope:e})},e.vm.financeService=c,e.vm.employeeAttributes=m.getEmployeeAttributes(),e.vm.params=angular.copy(p),e.vm.employee=u.employee,e.vm.payrollConfig=u.config,e.vm.financialYear=d,e.vm.financeService.getPreviousIncomeDetails(e.vm.params).then(function(t){h(),g(e.previousIncomeDetails=t.previousIncome)}),e.employmentGridOptions=angular.copy(n.gridSettings),e.employmentGridOptions.columnDefs=[{field:"month",displayName:"Month",cellClass:"ui-grid-cell",cellFilter:"date : 'MMMM - yyyy'",headerTooltip:!0},{field:"monthlygrosssalary",displayName:"Gross",headerTooltip:"Monthly gross Salary",cellClass:"ui-grid-cell",headerTooltip:!0,cellTemplate:'<div class="ui-grid-cell-contents " data-ng-if="!row.entity.isEditable">{{grid.getCellValue(row, col)}}</div><div class="ui-grid-cell-options ui-grid-cell-contents align-cell-text" data-ng-if="row.entity.isEditable"><input type="number" class="form-control" data-ng-model="row.entity.editablemodel.monthlygrosssalary" /></div>'},{field:"basic",displayName:"Basic",cellClass:"ui-grid-cell",headerTooltip:!0,cellTemplate:'<div class="ui-grid-cell-contents " data-ng-if="!row.entity.isEditable">{{grid.getCellValue(row, col)}}</div><div class="ui-grid-cell-options  ui-grid-cell-contents align-cell-text" data-ng-if="row.entity.isEditable"><input type="number" class="form-control" data-ng-model="row.entity.editablemodel.basic" /></div>'},{field:"hra",displayName:"House Rental Allowance",cellClass:"ui-grid-cell",headerTooltip:!0,cellTemplate:'<div class="ui-grid-cell-contents " data-ng-if="!row.entity.isEditable">{{grid.getCellValue(row, col)}}</div><div class="ui-grid-cell-options  ui-grid-cell-contents align-cell-text" data-ng-if="row.entity.isEditable"><input type="number" class="form-control" data-ng-model="row.entity.editablemodel.hra" /></div>'},{field:"pf",displayName:"Employee Provident Fund",cellClass:"ui-grid-cell",headerTooltip:!0,cellTemplate:'<div class="ui-grid-cell-contents " data-ng-if="!row.entity.isEditable">{{grid.getCellValue(row, col)}}</div><div class="ui-grid-cell-options ui-grid-cell-contents align-cell-text" data-ng-if="row.entity.isEditable"><input type="number" class="form-control" data-ng-model="row.entity.editablemodel.pf" /></div>'},{field:"esi",displayName:"ESI",cellClass:"ui-grid-cell",headerTooltip:!0,cellTemplate:'<div class="ui-grid-cell-contents " data-ng-if="!row.entity.isEditable">{{grid.getCellValue(row, col)}}</div><div class="ui-grid-cell-options ui-grid-cell-contents align-cell-text" data-ng-if="row.entity.isEditable"><input type="number" class="form-control" data-ng-model="row.entity.editablemodel.esi" /></div>'},{field:"professionaltax",displayName:"Professional Tax",cellClass:"ui-grid-cell",headerTooltip:!0,cellTemplate:'<div class="ui-grid-cell-contents " data-ng-if="!row.entity.isEditable">{{grid.getCellValue(row, col)}}</div><div class="ui-grid-cell-options  ui-grid-cell-contents align-cell-text" data-ng-if="row.entity.isEditable"><input type="number" class="form-control" data-ng-model="row.entity.editablemodel.professionaltax" /></div>'},{field:"tds",displayName:"Income Tax",cellClass:"ui-grid-cell",headerTooltip:!0,cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.entity.isEditable">{{grid.getCellValue(row, col)}}</div><div class="ui-grid-cell-options ui-grid-cell-contents align-cell-text" data-ng-if="row.entity.isEditable"><input type="number" class="form-control" data-ng-model="row.entity.editablemodel.tds" /></div>'},{field:"otherTaxFreeComponents",displayName:"Other Tax Free Components",headerTooltip:!0,cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.entity.isEditable">{{grid.getCellValue(row, col)}}</div><div class="ui-grid-cell-options ui-grid-cell-contents align-cell-text" data-ng-if="row.entity.isEditable"><input type="number" class="form-control" data-ng-model="row.entity.editablemodel.otherTaxFreeComponents" /></div>'},{field:"otherTaxableComponents",displayName:"Other Taxable Components",cellClass:"ui-grid-cell",headerTooltip:!0,cellTemplate:'<div class="ui-grid-cell-contents" data-ng-if="!row.entity.isEditable">{{grid.getCellValue(row, col)}}</div><div class="ui-grid-cell-contents align-cell-text" data-ng-if="row.entity.isEditable"><input type="number" class="form-control" data-ng-model="row.entity.editablemodel.otherTaxableComponents" /></div>'}],e.employmentGridOptions.data="vm.employmentDetailsRows",e.employmentGridOptions.onRegisterApi=function(t){e.gridApi=t}}]),appRoot.controller("FinancialPreferencesController",["$scope","FinanceService","EmployeeAndPayrollDetails","Params","SalaryPaymentMode",function(e,t,i,n,o){e.vm={},e.vm.salaryPaymentMode=o;e.vm.bankDetails=i.employee.bankDetails,e.vm.pfDetails=i.employee.pf,e.vm.esiDetails=i.employee.esi,e.vm.panDetails=i.employee.pan}]),function(e){!function(e){!function(e){var t=function(){function e(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g){var v=this;this.scope=e,this._filter=t,this.expenseClaim=i,this.availableExpense=n,this.employeeExpensePolicy=o,this.readOnlyView=r,this.editView=a,this.modal=s,this._modalInstance=l,this.employeeExpensesService=c,this.params=p,this.expenseClaimStatus=u,this.expenseRequestStatus=d,this.dialogs=m,this.notificationService=y,this.natureOfExpense=h,this.state=f,this.canAddExpense=g,this.expenseCategories=[],this.expenseClaim.isAdvanceRequest?this.employeeExpensesService.getAdvanceRequestDetails(this.expenseClaim.employeeId,this.expenseClaim.id).then(function(e){v.claim=e.advanceRequest,v.expenses=e.expenses,v.setCurrentExpense(v.expenses[0]),v.receiptIndex=0,v.dateValid=!0,v.receiptNo=v.receiptIndex+1,(v.state&&v.state.current.name.contains("pending.view")||v.state.current.name.contains("approved.view"))&&(v.params={id:e.advanceRequest.employeeId},v.employeeExpensesService.getEmployeePendingCycles(v.params,3).then(function(e){v.pendingCycles=e}))}):this.employeeExpensesService.getExpenseClaimDetails(this.expenseClaim.employeeId,this.expenseClaim.id).then(function(e){v.claim=e.claim,v.expenses=e.expenses,v.setCurrentExpense(v.expenses[0]),v.receiptIndex=0,v.dateValid=!0,v.receiptNo=v.receiptIndex+1,(v.state&&v.state.current.name.contains("pending.view")||v.state.current.name.contains("approved.view"))&&(v.params={id:e.claim.employeeId},v.employeeExpensesService.getEmployeePendingCycles(v.params,3).then(function(e){v.pendingCycles=e}))}),angular.equals(this.employeeExpensePolicy,{})||(this.expenseCategories=this.employeeExpensePolicy.configuration.map(function(e){return e})),this.params&&this.params.id&&this.employeeExpensesService.getEmployeePendingCycles(this.params,3).then(function(e){v.pendingCycles=e})}return e.prototype.addExpenses=function(){var e=this;this.availableExpense.length>0?this.modal.open({templateUrl:"selectExpense",controller:"SelectExpenses",controllerAs:"ctrl",resolve:{ExpenseService:function(){return e.employeeExpensesService},Params:function(){return e.params},AvailableExpense:function(){return angular.copy(e.availableExpense)}}}).result.then(function(t){t&&(t.forEach(function(t){e.availableExpense=e.availableExpense.filter(function(e){return e.selected=!1,t.id!=e.id}),e.expenses.push(t),e.claim.expenseIds.push(t.id)}),e.claim.totalAmount=e.expenses.reduce(function(e,t){return e+t.amount},0))}):this.notificationService.error("No expenses available to add to this claim")},e.prototype.updateExpenseClaim=function(){var e=this;this.form.manageClaim.$valid&&this.employeeExpensesService.updateExpenseClaim(this.params.id,this.claim).then(function(t){e.notificationService.success("Expense claim updated successfully"),e._modalInstance.close({claim:e.claim})},function(t){e.notificationService.error("Error in updating claim")})},e.prototype.editExpenseDetails=function(e){var t=this;this.modal.open({templateUrl:"addEmployeeExpense",windowClass:"full-screen-modal",controller:"NewExpenseController",controllerAs:"ctrl",resolve:{ExpenseService:function(){return t.employeeExpensesService},Params:function(){return t.params},ExpenseDetails:function(){return angular.copy(e)},ExpensePolicy:function(){return t.employeeExpensePolicy}}}).result.then(function(e){if(e){var i=t.expenses.find(function(t){return t.id==e.expenseDetails.id}),n=t.expenses.indexOf(i);t.expenses[n]=e.expenseDetails,t.claim.totalAmount=t.expenses.reduce(function(e,t){return e+t.amount},0),t.setCurrentExpense(t.expenses[n])}})},e.prototype.setCurrentExpense=function(e){this.currentExpense=e,this.setSelectedExpense(e.expenseTypeId),this.setPdfUrl()},e.prototype.setSelectedExpense=function(e){this.selectedExpenseCategory=this.expenseCategories.filter(function(t){return e==t.expenseType.id})[0]},e.prototype.setPdfUrl=function(){this.currentExpense&&this.currentExpense.expenseReceipts?(this.currentExpense.expenseReceipts.length>0?this.scope.pdfUrl=this._filter("privateStorageAccountUrl")(this.currentExpense.expenseReceipts[0].location):this.scope.pdfUrl="",this.receiptIndex=0,this.receiptNo=this.receiptIndex+1):this.scope.pdfUrl=""},e.prototype.nextReceipt=function(){this.currentExpense.expenseReceipts.length>this.receiptIndex+1&&(this.receiptIndex++,this.receiptNo=this.receiptIndex+1,this.scope.pdfUrl=this._filter("privateStorageAccountUrl")(this.currentExpense.expenseReceipts[this.receiptIndex].location))},e.prototype.previousReceipt=function(){this.receiptIndex>0&&(this.receiptIndex--,this.receiptNo=this.receiptIndex+1,this.scope.pdfUrl=this._filter("privateStorageAccountUrl")(this.currentExpense.expenseReceipts[this.receiptIndex].location))},e.prototype.changeReceipt=function(e){this.receiptIndex=e,this.receiptNo=this.receiptIndex+1,this.scope.pdfUrl=this._filter("privateStorageAccountUrl")(this.currentExpense.expenseReceipts[this.receiptIndex].location)},e.prototype.approveExpenseClaim=function(){var e=this;this.modal.open({templateUrl:"approve-claim",scope:this.scope,controller:"ApproveClaimController",controllerAs:"ctrl",resolve:{ExpenseService:function(){return e.employeeExpensesService},SelectedClaims:function(){return[e.claim]},PendingCycles:function(){return e.pendingCycles}}}).result.then(function(t){t&&t.claims&&e._modalInstance.close({status:e.expenseClaimStatus.Approved.id})})},e.prototype.rejectExpenseClaim=function(e){var t=this;this.employeeExpensesService.rejectExpenseClaim(this.claim,e).then(function(e){t.notificationService.success(t.claim.title+" Rejected Successfully"),t._modalInstance.close({status:t.expenseClaimStatus.Rejected.id})},function(e){t.notificationService.error("Error occured while rejecting "+t.claim.title)})},e.prototype.removeExpense=function(e){this.expenses.length>1?(this.expenses=this.expenses.filter(function(t){return t.id!=e.id}),this.claim.expenseIds=this.claim.expenseIds.filter(function(t){return t!=e.id}),this.availableExpense.push(e),this.setCurrentExpense(this.expenses[0]),this.claim.totalAmount=this.expenses.reduce(function(e,t){return e+t.amount},0),this.notificationService.success("Expense removed sucessfully from this claim")):this.notificationService.information("All expenses cannot be removed from the claim.")},e.prototype.deleteExpenseClaim=function(){var e=this;this.dialogs.confirm("Confirm","This will permanently delete claim and all the expenses linked to it. Do you want to delete ?").result.then(function(t){e.employeeExpensesService.deleteExpenseClaim(e.params.id,e.claim.id).then(function(t){e.notificationService.success("Claim and linked Expenses deleted successfully."),e._modalInstance.close(!0)},function(t){e.notificationService.error("Error in deleting Expense Claim.")})})},e.prototype.validDate=function(e,t){!e&&t?(this.dateValid=!1,this.validationMsg="Enter from date"):e&&!t?(this.dateValid=!1,this.validationMsg="Enter to date"):e>t?(this.dateValid=!1,this.validationMsg="From date should be less than to date"):(this.dateValid=!0,this.validationMsg="")},e.prototype.validate=function(e,t){!e&&t?(this.dateValid=!1,this.validationMsg="Enter from date"):e&&!t?(this.dateValid=!1,this.validationMsg="Enter to date"):this.updateExpenseClaim()},e.$inject=["$scope","$filter","expenseClaim","AvailableExpense","ExpensePolicy","ReadOnlyView","EditView","$uibModal","$uibModalInstance","ExpenseService","Params","ExpenseClaimStatus","ExpenseRequestStatus","dialogs","NotificationService","NatureOfExpense","$state","CanAddExpense"],e}();e.ManageExpenseClaimsController=t;var i=function(){function e(e,t,i,n,o,r,a,s,l,c,p){this._scope=e,this._state=t,this.dialogs=i,this._modalInstance=n,this.selectedClaims=o,this.expenseClaimPayInCycle=r,this.expenseService=a,this.expenseClaimStatus=s,this.expenseClaimPaymentStatus=l,this.expenseClaimPaymentMode=c,this.notificationService=p,this.model={},this.submitted=!1,this.model.paymentStatus=this.expenseClaimPaymentStatus.YetToBePaid.id}return e.prototype.paymentStatusChanged=function(){var e=this.model.paymentStatus;this.model={},this.submitted=!1,this.model.paymentStatus=e},e.prototype.paymentModeChanged=function(){this.submitted=!1,this.model.expenseClaimPayInCycle=null,this.model.paymentDate=null},e.prototype.approveClaims=function(){var e=this;this.form.approveClaim.$valid&&this.dialogs.confirm("Please Confirm","Are you sure you want to approve the claim ? ").result.then(function(t){var i={expenseClaimIds:e.selectedClaims.map(function(e){return e.id}),paymentMode:e.model.paymentStatus==e.expenseClaimPaymentStatus.Paid.id?e.expenseClaimPaymentMode.PaidOutsidePayroll.id:e.model.paymentMode,paymentDate:e.model.paymentDate?e.model.paymentDate.dateOnlyString():null,payDate:e.model.payDate?e.model.payDate.dateOnlyString():null,expenseClaimPayInCycle:e.model.paymentStatus!=e.expenseClaimPaymentStatus.Paid.id?e.model.expenseClaimPayInCycle:null,paymentStatus:e.model.paymentStatus};e.selectedClaims.length>1?e.expenseService.bulkApproveExpenseClaim(i).then(function(t){e.notificationService.success("Selected expenses Approved Successfully"),e._modalInstance.close({claims:e.selectedClaims})},function(t){e.notificationService.error("Error occurred while approving selected expenses")}):e.expenseService.approveExpenseClaim(e.selectedClaims[0].employeeId,i).then(function(t){e.notificationService.success(e.selectedClaims[0].title+" Approved Successfully"),e._modalInstance.close({claims:e.selectedClaims})},function(t){e.notificationService.error("Error occurred while approving "+e.selectedClaims[0].title)})})},e.$inject=["$scope","$state","dialogs","$uibModalInstance","SelectedClaims","ExpenseClaimPayInCycle","ExpenseService","ExpenseClaimStatus","ExpenseClaimPaymentStatus","ExpenseClaimPaymentMode","NotificationService"],e}();angular.module("payroll").controller("ManageExpenseClaimsController",t).controller("ApproveClaimController",i)}(e.ExpenseClaims||(e.ExpenseClaims={}))}(e.Finance||(e.Finance={}))}(payroll||(payroll={})),function(e){!function(e){var t=function(){return function(e,t,i,n,o,r,a){this.id=e,this.name=t,this.description=i,this.currency=n,this.currencyId=o,this.configuration=r,this.expenseApproval=a,a||(this.expenseApproval=new SharedModel.ApprovalSettings(null),this.expenseApproval.approvalRequestType=ApprovalChain.ApprovalRequestType.Expense,this.expenseApproval.requireApproval=!0)}}();e.ExpensePolicy=t;var i=function(){return function(e,t,i,n){this.expenseType=e,this.expenseRestrictions=t,this.applyingExpense=i,this.mileageSettings=n}}();e.ExpenseTypeConfig=i;var n=function(){return function(e,t,i,n,o,r,a){this.hasUpperLimitOnExpense=e,this.upperLimitAmount=t,this.upperLimitDuration=i,this.limitNoOfInstances=n,this.noOfInstancesTimePeriod=o,this.limitExpenseClaimInDays=r,this.expenseClaimExpirationInDays=a}}();e.ExpenseRestrictions=n;var o=function(){return function(e,t,i,n){this.requireReceipt=e,this.requireReceiptExceedAmount=t,this.requireComment=i,this.requireCommentAmountExceed=n}}();e.ApplyingExpense=o;var r=function(){return function(e,t,i){this.mileageUnit=e,this.defaultRate=t,this.trackDistance=i}}();e.MileageSettings=r;var a=function(){return function(e){this.id=e.id,this.expenseCode=e.expenseCode,this.name=e.name,this.natureOfExpense=e.natureOfExpense,this.description=e.description}}();e.ExpenseType=a;var s=function(){return function(e,t){this.unit=e,this.duration=t}}();e.TimePeriod=s;var l=function(){function e(e){this.expenseReceipts=[],this.id=e.id,this.employeeId=e.employeeId,this.title=e.title,this.billingDate=e.billingDate?e.billingDate.stringToDate():e.billingDate,this.billingNumber=e.billingNumber,this.merchantName=e.merchantName,this.amount=e.amount,this.expenseTypeId=e.expenseTypeId,this.comment=e.comment,this.expenseClaimId=e.expenseClaimId,this.expenseReceipt=e.expenseReceipt,this.expenseReceipts=e.expenseReceipts,this.hasReceipt=e.hasReceipt,this.hasComment=e.hasComment,this.tripStart=e.tripStart,this.tripEnd=e.tripEnd,this.totalDistance=e.totalDistance}return e.prototype.updateTripAmount=function(e){if(e.expenseType.natureOfExpense==c.Mileage){if(e.mileageSettings.trackDistance){var t=this.tripStart||0,i=this.tripEnd||0;this.totalDistance=parseFloat(Math.abs(i-t).toFixed(3))}this.amount=parseFloat((this.totalDistance*e.mileageSettings.defaultRate).toFixed(3))}},e.prototype.toJSON=function(){var e=angular.copy(this);return e.billingDate=this.billingDate.dateOnlyString(),e},e.prototype.resetValues=function(){this.merchantName=null,this.billingNumber=null,this.amount=null,this.totalDistance=null},e}();e.Expense=l;var c,p=function(){function e(e){this.id=e.id,this.title=e.title,this.comment=e.comment,this.totalAmount=e.totalAmount,this.expenseIds=e.expenseIds,this.status=e.status,this.submittedOn=e.submittedOn,this.payMonth=e.payDate?e.payDate.stringToDate():e.payDate,this.approvedOn=e.approvedOn?e.approvedOn.stringToDate():e.approvedOn,this.approvedBy=e.approvedBy,this.employeeId=e.employeeId,this.fromDate=null!=e.fromDate?new Date(e.fromDate):null,this.toDate=null!=e.toDate?new Date(e.toDate):null,this.paymentMode=e.paymentMode}return e.prototype.toJSON=function(){var e=angular.copy(this);return e.fromDate=null==this.fromDate?null:this.fromDate.dateOnlyString(),e.toDate=null==this.toDate?null:this.toDate.dateOnlyString(),e},e}();e.ExpenseClaim=p,function(e){e[e.None=0]="None",e[e.Pending=1]="Pending",e[e.Submitted=2]="Submitted",e[e.Approved=3]="Approved",e[e.Rejected=4]="Rejected",e[e.Paid=5]="Paid",e[e.InApprovalProcess=6]="InApprovalProcess"}(e.ExpenseClaimStatus||(e.ExpenseClaimStatus={})),function(e){e[e.None=0]="None",e[e.Hours=1]="Hours",e[e.Days=2]="Days",e[e.Weeks=3]="Weeks",e[e.Months=4]="Months"}(e.TimeDuration||(e.TimeDuration={})),function(e){e[e.KM=0]="KM",e[e.Mi=1]="Mi"}(e.MileageUnit||(e.MileageUnit={})),function(e){e[e.None=0]="None",e[e.General=1]="General",e[e.Mileage=2]="Mileage",e[e.PerDiem=3]="PerDiem"}(c=e.NatureOfExpense||(e.NatureOfExpense={}))}(e.Model||(e.Model={}))}(Expenses||(Expenses={})),function(e){!function(e){var t=function(){function e(e,t){this.resource=e,this.q=t,this.myExpenses=this.resource("/api/me/expenses/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getExpensePolicy=function(){return this.myExpenses.get({action:"policy"}).$promise},e.$inject=["$resource","$q"],e}();e.MyExpensesService=t;var i=function(){function e(e,t,i){this.resource=e,this.q=t,this.payrollModel=i,this.employeeExpenses=this.resource("/api/employee/:employeeId/expense/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.employeeFinance=this.resource("/api/employee/:id/finance/:action/",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.employeesFinance=this.resource("/api/employees/finance/:action/",{action:"@action"}),this.expenseResource=this.resource("/api/expenses/:action/:groupId",{action:"@action"}),this.employeeExpenseResource=this.resource("/api/expense/claims/:action",{action:"@action"},{update:{method:"PUT"}})}return e.prototype.getExpensePolicy=function(e){return this.employeeExpenses.get({action:"policy",employeeId:e}).$promise},e.prototype.getPendingExpenses=function(e){return this.employeeExpenses.get({id:"bills/pending",employeeId:e,action:"bills"}).$promise},e.prototype.getPendingClaims=function(e){return this.employeeExpenses.query({id:"claims/pending",employeeId:e,action:"claims"}).$promise},e.prototype.getPastClaims=function(e){return this.employeeExpenses.query({id:"claims/past",employeeId:e,action:"claims"}).$promise},e.prototype.getExpense=function(e,t){return this.employeeExpenses.get({action:"bill",employeeId:e,id:t}).$promise},e.prototype.addReceipt=function(e,t){return this.employeeExpenses.save({action:"bill/receipt",employeeId:t,id:void 0},e).$promise},e.prototype.updateReceipt=function(e,t,i){return this.employeeExpenses.update({action:"bill/receipt",id:t,employeeId:e},i).$promise},e.prototype.addExpense=function(e,t){return this.employeeExpenses.save({employeeId:t,action:"bill"},e).$promise},e.prototype.updateExpenseDetails=function(e,t){return this.employeeExpenses.update({employeeId:e,action:"bill",id:t.id},t).$promise},e.prototype.saveExpenseClaim=function(e,t){return this.employeeExpenses.save({employeeId:t,action:"claim"},e).$promise},e.prototype.deleteExpenseClaim=function(e,t){return this.employeeExpenses.delete({employeeId:e,action:"claim",id:t}).$promise},e.prototype.getExpenseClaimDetails=function(e,t){return this.employeeExpenses.get({employeeId:e,id:t,action:"claim"}).$promise},e.prototype.getAdvanceRequestDetails=function(e,t){return this.employeeExpenses.get({employeeId:e,id:t,action:"advancerequest"}).$promise},e.prototype.updateExpenseClaim=function(e,t){return this.employeeExpenses.update({employeeId:e,action:"claim",expenseClaimId:t.id},t).$promise},e.prototype.submitExpenseClaim=function(e,t){return this.employeeExpenses.save({employeeId:e,action:"claim/submit",expenseClaimId:t},{}).$promise},e.prototype.getEmployeeExpenseCategories=function(e){return this.employeeExpenses.query({employeeId:e,action:"expensecategories"}).$promise},e.prototype.deleteReceipt=function(e,t){return this.employeeExpenses.delete({employeeId:e.employeeId,action:"bill/receipt",id:e.id,receiptId:t}).$promise},e.prototype.deleteExpenseAndReceipt=function(e,t){return this.employeeExpenses.delete({employeeId:e,action:"bill",id:t.id}).$promise},e.prototype.rejectExpenseClaim=function(e,t){return this.employeeExpenses.update({action:"reject",employeeId:e},t).$promise},e.prototype.approveExpenseClaim=function(e,t){return this.employeeExpenses.update({action:"approve",employeeId:e},t).$promise},e.prototype.bulkApproveExpenseClaim=function(e){return this.employeeExpenseResource.update({action:"approve"},e).$promise},e.prototype.payExpenseClaim=function(e,t){return this.employeeExpenses.update({action:"pay",employeeId:t.employeeId,claimId:e},t).$promise},e.prototype.getPendingExpenseClaimsCount=function(){return this.employeeExpenseResource.get({action:"pendingapprovalscount"}).$promise},e.prototype.getAllUnpaidexpense=function(e){return this.expenseResource.query({action:"unpaidexpense",to:e}).$promise},e.prototype.getAllPendingExpenses=function(e){return this.expenseResource.query({action:"pending/all",groupId:e}).$promise},e.prototype.getAllApprovedExpenses=function(e){return this.expenseResource.query({action:"approved/all",groupId:e}).$promise},e.prototype.getAllPastExpenses=function(e,t){return this.expenseResource.query({action:"past/all",fromDate:e,toDate:t}).$promise},e.prototype.getExpenseCategories=function(){return this.expenseResource.query({action:"categories"}).$promise},e.prototype.getEmployeePendingCycles=function(e,t){var i=this;return e.action="getpendingcycles",e.count=t,this.employeeFinance.query(e).$promise.then(function(e){return e.map(function(e){return new i.payrollModel.PayrollCycle(e)})})},e.prototype.getPendingCyclesForGroup=function(e,t){var i=this;return this.employeesFinance.query({groupId:e,count:t,action:"getpendingcycles"}).$promise.then(function(e){return e.map(function(e){return new i.payrollModel.PayrollCycle(e)})})},e.prototype.getExpenseClaims=function(e,t){return this.expenseResource.query({action:"claims",from:e,to:t}).$promise},e.prototype.getExpenseTypeSummary=function(e,t){return this.expenseResource.query({action:"typesummary",from:e,to:t}).$promise},e.prototype.getExpenseClaimBreakups=function(e,t){return this.expenseResource.query({action:"claimsBreakup",from:e,to:t}).$promise},e.prototype.getAllPaygroups=function(){return this.employeeFinance.query({action:"paygroups"}).$promise},e.$inject=["$resource","$q","PayrollModel"],e}();e.EmployeeExpenseService=i,angular.module("xhr").service("MyExpensesService",t),angular.module("xhr").service("EmployeeExpenseService",i)}(e.Services||(e.Services={}))}(Expenses||(Expenses={})),function(e){!function(e){var t=function(){function e(e,t,i,n,o,r,a,s,l){var c=this;this._scope=e,this._state=t,this._stateParams=i,this._modalService=n,this._subscriptionService=o,this._appSetting=r,this._tenantBillingStatus=a,this._subscriptionInvoiceStatus=s,this._dateServices=l,this.tenantBillingStatus=a,this.subscriptionInvoiceStatus=s,this.dateServices=l,this._subscriptionService.getOpenInvoices().then(function(e){c.openInvoices=angular.copy(e),c.currentInvoice=angular.copy(e[0])},function(e){console.log(e)}),this._subscriptionService.getOrgSubscription().then(function(e){c.subscription=angular.copy(e)},function(e){console.log(e)}),this.currentDate=this.dateServices.dateOnlyString(new Date),this.initializeGridSettings()}return e.prototype.initializeGridSettings=function(){this.billingGridOptions=angular.copy(this._appSetting.gridSettings),this.billingGridOptions.rowTemplate='<div data-ng-repeat="col in colContainer.renderedColumns track by col.colDef.name"  class="ui-grid-cell" ui-grid-cell></div>',this.billingGridOptions.enableGridMenu=!1,this.billingGridOptions.enableColumnMenus=!1,this.billingGridOptions.enableSorting=!1,this.billingGridOptions.columnDefs=[{field:"invoiceNumber",displayName:"INVOICE#",cellClass:"ui-grid-cell",width:100},{field:"invoiceDate",displayName:"Date",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row, col) | date: "dd MMM yyyy"}}</span></div>',cellClass:"ui-grid-cell",width:140},{field:"invoiceDueDate",displayName:"Description",cellTemplate:'<div class="ui-grid-cell-contents"><span>Payment due for period {{row.entity.invoicedFromDate | date: "dd MMM yyyy"}} to {{row.entity.invoicedToDate | date: "dd MMM yyyy"}}</span></div>',cellClass:"ui-grid-cell",cellTooltip:!0,headerTooltip:!0},{field:"invoiceStatus",displayName:"Status",cellTemplate:'<div class="ui-grid-cell-contents"><span class="billing-status due" data-ng-if="grid.appScope.currentDate <= row.entity.invoiceDueDate">Due</span><span class="billing-status over-due" data-ng-if="grid.appScope.currentDate > row.entity.invoiceDueDate">Overdue</span></div>',cellClass:"ui-grid-cell",width:120}],this.billingGridOptions.data="ctrl.openInvoices",this.billingGridOptions.appScopeProvider=this},e.prototype.isDue=function(e){return Boolean(new Date<e)},e.$inject=["$scope","$state","$stateParams","$uibModal","SubscriptionInvoiceServices","AppSettings","TenantBillingStatus","SubscriptionInvoiceStatus","DateServices"],e}();e.InvoiceNotifyController=t;var i=function(){function e(e,t){this.resource=e,this.q=t,this.subscription=this.resource("/api/subscription/invoice/:action/:id",{action:"@action",id:"@id"},{update:{method:"PUT"}})}return e.prototype.getOpenInvoices=function(){return this.subscription.query({action:"open"}).$promise},e.prototype.getOrgSubscription=function(){return this.subscription.get({action:"subscription"}).$promise},e.$inject=["$resource","$q"],e}();e.SubscriptionInvoiceServices=i,angular.module("xhr").controller("InvoiceNotifyController",t).service("SubscriptionInvoiceServices",i)}(e.Controllers||(e.Controllers={}))}(Tenantbilling||(Tenantbilling={})),angular.module("payroll").factory("PayrollSalaryStructureService",["$http","$resource","$q","PayrollModel",function(e,t,i,n){var o={structure:{}},r=t("/api/payroll/salary/employee/:employeeId/structure/:action"),a=t("/api/payroll/salary/employee/:employeeId/bonus/:action",{},{update:{method:"PUT"}});return o.addSalaryAndBonus=function(e,i){return t("/api/payroll/salary/employee/:employeeId/:action").save({employeeId:e,action:"addSalaryAndBonus"},i).$promise},o.updateRemuneration=function(e,i){return t("/api/payroll/salary/employee/:employeeId/:action",{},{update:{method:"PUT"}}).update({employeeId:e,action:"updateRemuneration/"+i},{}).$promise},o.getDoesSalaryStructureExist=function(e,i){return t("/api/payroll/salary/employee/:employeeId/:action").get({action:"doesstructureexist",employeeId:i,identifier:e}).$promise},o.getSalaryStructures=function(e){return r.query({employeeId:e,action:"/structure/all"}).$promise.then(function(e){return e.map(function(e){return new n.SalaryStructure(e)})})},o.getFutureRevision=function(e){return r.get({employeeId:e,action:"/revision/future"}).$promise.then(function(e){return new n.SalaryStructure(e.data)})},o.generateStructureBasedPaygroup=function(e){return t("/api/payroll/salary/employee/:employeeId/:action").save({employeeId:e.employee.id,action:"paygroup/"+e.payGroupId+"/structure/generate"},e).$promise.then(function(e){return e})},o.generateStructure=function(e){return r.save({employeeId:e.employee.id,action:"generate"},{ctc:e.ctc,structureGenerateSource:e.structureGenerateSource,salaryStructureConfiguration:e.salaryStructureConfiguration,adhocComponents:e.adhocComponents,PayGroupId:e.payGroupId,doNotDeductPF:e.doNotDeductPF,isESIEligible:e.isESIEligible,effectiveFrom:e.effectiveFrom&&e.effectiveFrom instanceof Date?new Date(e.effectiveFrom.getTime()-6e4*e.effectiveFrom.getTimezoneOffset()):e.effectiveFrom}).$promise.then(function(e){return e})},o.createRevision=function(e,t){return r.save({employeeId:e,action:"revision"},{ctc:t.ctc,effectiveFrom:new Date(t.effectiveFrom.getTime()-6e4*t.effectiveFrom.getTimezoneOffset()),nextRevisionDate:t.nextRevisionDate,structureGenerateSource:t.structureGenerateSource,salaryStructureConfiguration:t.salaryStructureConfiguration}).$promise.then(function(e){return new n.SalaryStructure(e)})},o.updateSalary=function(e,t){return r.save({employeeId:e,action:"update"},{ctc:t.ctc,effectiveFrom:new Date(t.effectiveFrom.getTime()-6e4*t.effectiveFrom.getTimezoneOffset()),nextRevisionDate:t.nextRevisionDate,salaryId:t.salaryId,structureGenerateSource:t.structureGenerateSource,salaryStructureConfiguration:t.salaryStructureConfiguration}).$promise.then(function(e){return new n.SalaryStructure(e)})},o.deleteSalary=function(e,t){return r.delete({employeeId:e,action:t+"/delete"},{}).$promise},o.addBonus=function(e,t,i){return a.save({employeeId:e,salaryStructureIdentifier:t},i).$promise},o.updateBonus=function(e,t,i){return a.update({employeeId:e,bonusId:t},i).$promise},o.bonusRevision=function(e,t,i){return a.update({action:"revision",employeeId:e,bonusId:t},i).$promise},o.bonusRevisionHistory=function(e,t){return a.query({action:"revisionHistory",employeeId:e,bonusId:t}).$promise},o.bonusPaymentHistory=function(e,t){return a.query({action:"paymentHistory",employeeId:e,bonusId:t}).$promise},o.deleteBonus=function(e,t){return a.delete({employeeId:e,action:t+"/delete"},{}).$promise},o.updateAdhocPayments=function(t,n){if(0==n.length)return i.when({});var o=n[0].effectiveFrom.getTimezoneOffset(),r=n.map(function(e){var t=angular.copy(e);return t.effectiveFrom=new Date(t.effectiveFrom.getTime()-6e4*o),t.componentName=t.componentType.name,t});return e.post("/api/payroll/salary/employee/"+t+"/adhocpayments",r)},o.salaryStructures=t("/api/payroll/salary/:action/:id",{id:"@id",action:"@action"}),o.getSalaryStructure=function(e){return r.get({employeeId:e}).$promise.then(function(e){return e.structure?new n.SalaryStructure(e.structure):null})},o.bonusType=t("/api/payroll/salary/bonustype",{},{update:{method:"PUT"}}),o.getAllDeductionType=function(){return t("/api/payroll/salary/deductiontype/all",{}).query().$promise},o.deductionType=t("/api/payroll/salary/deductiontype",{},{update:{method:"PUT"}}),o}]),angular.module("payroll").factory("SalarySharedModel",["SharedModel","PaymentStatus","$filter","WorkerType","SalaryStructureGenerateSource","PayrollModel",function(e,t,i,n,o,r){var a=Class.extend({init:function(e){var t=e.ctc,i=e.effectiveFrom,n=this,r=(e.generateStructure,e.salaryStructureConfiguration);Object.defineProperty(this,"ctc",{get:function(){return t},set:function(e){t!=e&&(t=e,this.hasPayrollFeature&&this.generateSalaryStructure())},enumerable:!0}),Object.defineProperty(this,"hasPayrollFeature",{get:function(){return e.hasPayrollFeature}}),Object.defineProperty(this,"effectiveFrom",{get:function(){return i},set:function(e){i!=e&&(i=e,this.hasPayrollFeature&&this.generateSalaryStructure())},enumerable:!0}),this.employee=e.employee,this.generateSalaryStructure=function(){""!==this.ctc&&this.ctc>=0&&(this.structureGenerateSource==this.generateSources.Range.id||null!=this.salaryStructureConfiguration)?e.generateSalaryStructure(this).then(function(e){n.salaryItemsView=e}):this.resetBreakup()},this.salaryItemsView=e.salaryItemsView,Object.defineProperty(this,"monthlySalary",{get:function(){return this.total/12}}),Object.defineProperty(this,"total",{get:function(){if(this.salaryItemsView)return this.salaryItemsView.netPayAmount()},configurable:!0});e.config;var a=e.structureGenerateSource;e.structureGenerateSource||(a=o.Range.id,r=null),Object.defineProperty(this,"structureGenerateSource",{get:function(){return a},set:function(e){a!=e&&(r=null,(a=e)==this.generateSources.Range.id||null!=this.salaryStructureConfiguration?this.hasPayrollFeature&&this.ctc>=0&&this.generateSalaryStructure():this.resetBreakup())},enumerable:!0}),Object.defineProperty(this,"salaryStructureConfiguration",{get:function(){return r},set:function(e){r!=e&&((r=e)?this.hasPayrollFeature&&this.ctc>=0&&this.generateSalaryStructure():this.resetBreakup())},enumerable:!0}),this.generateSources=o,this.resetBreakup=function(){return this.salaryItemsView=null}}}),s=a.extend({init:function(e){this._super(e);var t,i,n=e.adhocComponents||[];Object.defineProperty(this,"currentAdhocComponent",{get:function(){return i}}),Object.defineProperty(this,"adhocComponents",{get:function(){return n},enumerable:!0}),Object.defineProperty(this,"variablePayIndex",{get:function(){return t}}),this.selectAdhocComponent=function(e){t=e,i=new l(this.adhocComponents[t])},this.saveAdhocComponent=function(){n.push(this.currentAdhocComponent),this.resetAdhocComponent()},this.updateAdhocComponent=function(){this.adhocComponents[t]=this.currentAdhocComponent,this.resetAdhocComponent()},this.deleteAdhocComponent=function(e){this.adhocComponents.splice(e,1)},this.resetAdhocComponent=function(){t=null,i=null},this.initializeNewAdhocComponent=function(){(i=new l({})).isIncludeInTax=!0},this.getTotalAdhocAmount=function(){this.adhocComponents.reduce(function(e,t){return e+t.amount},0)},Object.defineProperty(this,"total",{get:function(){if(this.salaryItemsView)return this.salaryItemsView.netPayAmount()+this.getTotalAdhocAmount()}})}});function l(e){this.componentType=e.componentType,this.effectiveFrom=e.effectiveFrom,this.paidOn=e.paidOn,this.isIncludeInTax=e.isIncludeInTax,Object.defineProperty(this,"componentName",{get:function(){return this.componentType.identifier},enumerable:!0}),Object.defineProperty(this,"type",{get:function(){if(this.componentType)return this.componentType.title}}),this.amount=e.amount,this.status=e.status||t.Pending.id,this.note=e.note,this.getStatusName=function(){var e=t.getById(this.status);if(e)return e.title},this.toJSON=function(){return{amount:this.amount,componentName:this.componentName,status:this.status,note:this.note,effectiveFrom:this.effectiveFrom.dateOnlyString(),isIncludeInTax:this.isIncludeInTax,paidOn:this.paidOn?this.paidOn.dateOnlyString():null}}}var c=a.extend({init:function(e){this._super(e);var t,i,n,o=this;this.nextRevisionDate=e.nextRevisionDate,this.ctcPercentage=e.ctcPercentage,this.showSalaryStructure=!1,Object.defineProperty(this,"currentSalary",{get:function(){return e.currentSalary}}),Object.defineProperty(this,"compareBreakups",{get:function(){return t}}),this.generatePercentage=function(){this.ctc!=i&&(this.ctcPercentage=parseFloat(((this.ctc-this.currentSalary.ctc)/this.currentSalary.ctc*100).toFixed(2)),i=this.ctc,n=this.ctcPercentage)},this.generateCtc=function(){this.ctcPercentage!=n&&(this.ctc=parseFloat((this.currentSalary.ctc+this.currentSalary.ctc/100*this.ctcPercentage).toFixed(2)),n=this.ctcPercentage,i=this.ctc)},this.resetBreakup=function(){return t=null},this.generateSalaryStructure=function(){""!=this.ctc&&this.ctc>=0&&(this.structureGenerateSource==this.generateSources.Range.id||null!=this.salaryStructureConfiguration)?e.generateSalaryStructure(this).then(function(e){t={};var i=new p({});e.getInSideCtcComponents().forEach(function(e){t[e.componentTitle]=new p({newAmount:e.amount}),i.newAmount+=e.amount}),o.currentSalary.getInSideCtcComponents().forEach(function(e){e.componentTitle in t?t[e.componentTitle].oldAmount=e.amount:t[e.componentTitle]=new p({oldAmount:e.amount}),i.oldAmount+=e.amount}),t.Total=i}):this.resetBreakup()}}});function p(e){this.oldAmount=e.oldAmount||0,this.newAmount=e.newAmount||0}var u=Class.extend({init:function(e){this.id=e.id,this.type=e.type,this.status=t.getById(e.status).title,this.payBy=Date.getDateObj(e.payBy),this.paidOn=Date.getDateObj(e.paidOn),this.salaryIdentifier=e.salaryIdentifier||e.salaryStructureIdentifier,this.amount=e.amount,this.note=e.note,this.isIncludeInTax=e.isIncludeInTax,this.isModifiable=e.isModifiable,this.balanceAmount=e.balanceAmount,this.paidAmount=e.partiallyPaidTransactions&&e.partiallyPaidTransactions.length>0?e.amount-e.balanceAmount:null,this.doesNotAffectInSalary=e.doesNotAffectInSalary||!1,this.originalAmount=e.originalAmount||0,this.canChangeAmount=e.status===t.PartiallyPaid.id&&this.balanceAmount||e.status===t.PaidOutsideKekaPayroll.id||e.status===t.Pending.id}}),d=u.extend({init:function(e){var i=this;this._super(e),this.salaryStructureIdentifier=e.salaryStructureIdentifier,this.partiallyPaidTransactions=(e.partiallyPaidTransactions||[]).map(function(e,n,o){return e.previousBalance=0==e.previousBalance?i.amount:e.previousBalance,e.status==t.Void.id&&(e.previousBalance-=o.filter(function(i){return e.transactionOn==i.transactionOn&&i.status!=t.Void.id}).reduce(function(e,t){return e+t.amount},0)),new function(e){this.amount=e.amount,this.bonusId=e.bonusId,this.previousBalance=e.previousBalance,this.transactionOn=Date.getDateObj(e.transactionOn),this.status=t.getById(e.status).title,this.paymentMode=e.paymentMode,this.balanceAmount=function(){return this.previousBalance-this.amount}}(e)}),this.totalPaidAmount=function(){return Number(this.partiallyPaidTransactions.reduce(function(e,t){return e+t.amount},0).toFixed(2))}}});var m=Class.extend({init:function(e){var t=e.oneTimePayments||[],n=e.perks||[];this.id=e.structure.id,this.employeeId=e.employeeId,this.effectiveFrom=e.structure.effectiveFrom,this.isModifiable=e.structure.isModifiable,this.identifier=e.structure.identifier,this.reasons=e.structure.reasons,this.version=e.structure.version,Object.defineProperty(this,"extras",{get:function(){return t}}),Object.defineProperty(this,"perks",{get:function(){return n}}),Object.defineProperty(this,"isCurrent",{get:function(){return e.isCurrent}}),this.showExtras=this.isCurrent,this.showAnnualSummary=this.isCurrent,this.showSummary=this.isCurrent;var o=0;this.calculateTotalExtraAmount=function(){o=0,this.extras.forEach(function(e){o+=e.doesNotAffectInSalary?e.originalAmount:e.amount})},this.calculateTotalExtraAmount(),Object.defineProperty(this,"name",{get:function(){return this.isCurrent?"Current":i("date")(this.effectiveFrom,"MMM yyyy")}}),Object.defineProperty(this,"annualSalary",{get:function(){return e.structure.ctc}}),Object.defineProperty(this,"monthlySalary",{get:function(){return e.structure.getMonthlySalary()}}),Object.defineProperty(this,"totalExtrasAmount",{get:function(){return o}}),Object.defineProperty(this,"totalPerksAmount",{get:function(){return n.reduce(function(e,t){return e+t.amount},0)}}),Object.defineProperty(this,"monthly",{get:function(){return this.total/12}}),this.total=function(){return this.annualSalary+this.totalExtrasAmount+this.totalPerksAmount},this.addExtras=function(e){t.push(e),this.calculateTotalExtraAmount()},this.canDeleteBonus=function(e){return t.some(function(t){return t.id==e.id&&t.isModifiable})},this.getSalaryDetails=function(){return e.structure}}}),y=m.extend({init:function(e){var i=e.structure.getSalaryItemsView();this._super(e),this.breakupItems=i.breakupItems,this.benefitItems=i.benefitItems,this.deductionItems=i.deductionItems,this.outsideItems=i.outsideItems,this.totalBreakupAmount=i.totalBreakupAmount,this.totalOutsideAmount=i.totalOutsideAmount,this.grossAmount=i.grossAmount(),this.netPayAmount=i.netPayAmount(),this.remunerationType=e.structure.remunerationType,this.monthlyTotalBreakupAmount=i.monthlyTotalBreakupAmount,this.monthlyGrossAmount=i.monthlyGrossAmount(),this.monthlyNetPayAmount=i.monthlyNetPayAmount(),this.canDelete=function(){return 0==e.oneTimePayments.filter(e=>!e.isModifiable||e.status==t.getById(5).title).length},this.total=function(){return this.annualSalary+this.totalExtrasAmount+this.totalOutsideAmount+this.totalPerksAmount}}}),h=Class.extend({init:function(t){var n=this;function o(){if(n.isSalaryAdded){var o=i("orderBy")(t.structures,"effectiveFrom",!0),a=angular.copy(t.oneTimePayments),s=angular.copy(t.perks)||[],l=o.find(function(t){return t.effectiveFrom<=new e.DateWithZeroTime}),c=l?l.effectiveFrom:o[0].effectiveFrom;if(n.salaries=o.map(function(e,t,i){var o={isCurrent:e.effectiveFrom==c,structure:e,oneTimePayments:a.filter(function(t){return t.salaryIdentifier==e.identifier}),perks:s.filter(function(t){var i=r.FinancialYear.getFinancialYear(e.effectiveFrom).from.getFullYear();return t.financialYear==i})};return o.oneTimePayments.forEach(function(e){a.splice(a.indexOf(e),1)}),o.perks.forEach(function(e){s.splice(s.indexOf(e),1)}),n.mapTo(o)}),0!=s.length){var p=minSalaryEffectiveFinacialYear=r.FinancialYear.getFinancialYear(n.salaries[0].effectiveFrom).from.getFullYear();n.salaries.length>1&&n.salaries.forEach(function(e){var t=r.FinancialYear.getFinancialYear(e.effectiveFrom).from.getFullYear();t>p?p=t:t<minSalaryEffectiveFinacialYear&&(minSalaryEffectiveFinacialYear=t)}),s.forEach(function(e){!function(e,t,i){var o=angular.copy(e.financialYear)-1;for(;t<=o;){var a=n.salaries.findIndex(function(e){return r.FinancialYear.getFinancialYear(e.effectiveFrom).from.getFullYear()==o});if(a>-1)return void n.salaries[a].perks.push(e);o--}o=angular.copy(e.financialYear)+1;for(;i>=o;){var s=n.salaries.findIndex(function(e){return r.FinancialYear.getFinancialYear(e.effectiveFrom).from.getFullYear()==o});if(s>-1)return void n.salaries[s].perks.push(e);o++}}(e,minSalaryEffectiveFinacialYear,p)})}}}Object.defineProperty(this,"hasPayrollFeature",{get:function(){return t.hasPayrollFeature}}),Object.defineProperty(this,"isSalaryAdded",{get:function(){return t.structures.length>0}}),Object.defineProperty(this,"canManage",{get:function(){return t.canManage}}),this.reviseSalary=function(e){this.canManage&&(t.structures.push(e),o())},this.deleteSalary=function(e){if(this.canManage){var i=this.salaries.find(function(t){return t.id==e});t.structures=t.structures.filter(function(t){return t.id!=e}),t.oneTimePayments=t.oneTimePayments.filter(function(e){return!i.canDeleteBonus(e)}),o()}},this.addSalaryAndBonuses=function(e){this.canManage&&(t.structures.push(e.salary),[].push.apply(t.oneTimePayments,e.bonuses),o())},this.editSalary=function(e){if(this.canManage){var i=t.structures.findIndex(function(t){return t.id==e.id});null!=i&&(t.structures[i]=e,o())}},this.issueBonus=function(e){this.canManage&&(salaryTimeLine=this.salaries.find(function(t){return t.identifier==e.salaryIdentifier}),salaryTimeLine||(salaryTimeLine=this.salaries[0]),salaryTimeLine.addExtras(e),t.oneTimePayments.push(e))},this.deleteBonus=function(e){this.canManage&&(t.oneTimePayments=t.oneTimePayments.filter(function(t){return t.id!=e}),o())},this.getCurrentSalary=function(){var e=this.getCurrentSalaryTimeline();if(e)return e.getSalaryDetails()},this.getCurrentSalaryTimeline=function(){return this.salaries.find(function(e){return e.isCurrent})},this.mapTo=t.mapTo||function(e){return new m(e)},o()}});return{SalaryAndBonusDetails:s,ReviseSalaryDetails:c,AdhocComponent:l,PayrollPayTimeline:h.extend({init:function(e){e.mapTo=function(e){return new y(e)},this._super(e)}}),PayTimeLine:h,Bonus:u,PayrollBonus:d,EmployeeSalary:function(e){this.id=e.id,this.employeeId=e.employeeId,this.ctc=e.ctc,this.identifier=e.identifier,this.effectiveFrom=Date.getDateObj(e.effectiveFrom),this.isModifiable=function(){return e.isModifiable||!1},this.getMonthlySalary=function(){return Math.floor(this.ctc/12)}},BonusType:function(e){this.id=e.id||0,this.identifier=e.identifier,this.title=e.title},SalaryDetails:a}}]),angular.module("payroll").factory("EmployeeSalaryService",["$http","$resource","$q","PayrollModel","SalarySharedModel",function(e,t,i,n,o){var r={},a=t("/api/employee/:employeeId/salary/:action"),s=t("/api/salary/bonustype",{},{});return r.createRevision=function(e,t){return a.save({employeeId:e,action:"revision"},{ctc:t.ctc,effectiveFrom:new Date(t.effectiveFrom.getTime()-6e4*t.effectiveFrom.getTimezoneOffset()),nextRevisionDate:t.nextRevisionDate}).$promise.then(function(e){return new o.EmployeeSalary(e)})},r.updateSalary=function(e,t){return a.save({employeeId:e,action:"update"},{ctc:t.ctc,effectiveFrom:new Date(t.effectiveFrom.getTime()-6e4*t.effectiveFrom.getTimezoneOffset()),nextRevisionDate:t.nextRevisionDate,salaryId:t.salaryId}).$promise.then(function(e){return new o.EmployeeSalary(e)})},r.deleteSalary=function(e,t){return a.delete({employeeId:e,action:t+"/delete"}).$promise},r.deleteBonus=function(e,t){return a.delete({employeeId:e,action:"bonus/"+t+"/delete"}).$promise},r.addBonus=function(e,t,i){return a.save({employeeId:e,salaryStructureIdentifier:t,action:"bonus"},i).$promise},r.getSalaryDetails=function(e){return a.get({employeeId:e}).$promise},r.bonusType=s,r.getAllBonusTypes=function(){return s.query().$promise},r.addSalaryAndBonus=function(e,t){return a.save({employeeId:e,action:"addSalaryAndBonus"},t).$promise},r}]),angular.module("payroll").controller("EmployeePayTimelineController",["$scope","$q","$stateParams","$state","$uibModal","dialogs","AppSettings","EmployeeSalaryService","NotificationService","SalarySharedModel","EmployeeProfileService","SharedDataService",function(e,t,i,n,o,r,a,s,l,c,p,u){e.vm={},e.vm.niceScrollOptions=angular.copy(a.scrollSettings),e.vm.datepickerOptions=angular.copy(a.datepickerOptions),e.vm.employeeAttributes=u.getEmployeeAttributes();p.getEmployeeProfile(i.id).then(function(i){e.vm.employee=i,t.all([s.getSalaryDetails(e.vm.employee.id),s.getAllBonusTypes()]).then(function(t){e.vm.oneTimePaymentTypes=t[1].reduce(function(e,t,i){return e[t.identifier]=t,e},{}),e.vm.payTimeLine=new c.PayTimeLine({canManage:t[0].canManage||!0,structures:t[0].salaries.map(function(e){return new c.EmployeeSalary(e)}),oneTimePayments:t[0].oneTimePayments.map(function(t){return t.type=e.vm.oneTimePaymentTypes[t.bonusTypeId].title,new c.Bonus(t)})})})}),e.openReviseSalary=function(){e.vm.reviseSalaryModelInstance=o.open({templateUrl:"nonpayroll-revise-salary-template",windowClass:"revise-salary-template",controller:"ReviseSalaryWithNoPayrollController",resolve:{Model:function(){return new c.ReviseSalaryDetails({employee:{id:e.vm.employee.id,name:e.vm.employee.displayName,dateOfJoined:e.vm.employee.dateJoined},currentSalary:e.vm.payTimeLine.getCurrentSalary()})},SalaryService:function(){return s}}}),e.vm.reviseSalaryModelInstance.result.then(function(t){e.vm.payTimeLine.reviseSalary(t)})},e.openIssueBonus=function(t){e.vm.payTimeLine.canManage&&(e.addBonusModelInstance=o.open({templateUrl:"nonpayroll-add-bonus-template",controller:"AddBonusController",resolve:{EmployeeDetails:function(){return{id:e.vm.employee.id,name:e.vm.employee.displayName,dateOfJoined:e.vm.employee.dateJoined}},SalaryService:function(){return s},Config:null,salaryStructureIdentifier:function(){return t}}}),e.addBonusModelInstance.result.then(function(t){e.vm.payTimeLine.issueBonus(t)},function(){}))},e.deleteSalary=function(t){t.isModifiable&&r.confirm("Please Confirm","Are you Sure Want to delete Salary of Rs."+t.annualSalary+" which was effective from "+t.effectiveFrom.toDateString()+" ?").result.then(function(){s.deleteSalary(e.vm.employee.id,t.id).then(function(i){i.isDeleted?(e.vm.payTimeLine.deleteSalary(t.id),l.success("Salary Deleted successfully.")):l.error("This salary is in use and cannot be deleted.")},function(e){l.error("An error occurred while deleting salary.")})})},e.deletebonus=function(t){t.isModifiable&&r.confirm("Please Confirm","Are you Sure Want to delete "+t.type+" of "+t.amount+" ?").result.then(function(){s.deleteBonus(e.vm.employee.id,t.id).then(function(i){i.isDeleted&&(e.vm.payTimeLine.deleteBonus(t.id),l.success("bonus Deleted successfully."))},function(e){l.error(e.data.message)})})},e.editSalary=function(t){var i=t.getSalaryDetails();e.editSalaryModelInstance=o.open({templateUrl:"nonpayroll-edit-salary-template",controller:"SalaryEditController",windowClass:"add-salary-modal",resolve:{Model:function(){return new c.SalaryDetails({ctc:i.ctc,effectiveFrom:i.effectiveFrom,employee:{id:e.vm.employee.id,name:e.vm.employee.displayName,dateOfJoined:e.vm.employee.dateJoined}})},SalaryId:function(){return t.id},payGroupId:function(){return null},remunerationType:function(){return null},SalaryService:function(){return s}}}),e.editSalaryModelInstance.result.then(function(t){e.vm.payTimeLine.editSalary(t)})},e.openAddSalaryWidget=function(){e.addSalaryModelInstance=o.open({templateUrl:"nonpayroll-add-salary-template",controller:"SalaryDetailsController",controllerAs:"ctrl",windowClass:"add-salary-modal",resolve:{Model:function(){return new c.SalaryAndBonusDetails({employee:{id:e.vm.employee.id,name:e.vm.employee.displayName,dateOfJoined:e.vm.employee.dateJoined}})},SalaryService:function(){return s},Config:null}}),e.addSalaryModelInstance.result.then(function(t){var i=t.salaryDetails.bonusTypes.reduce(function(e,t,i){return e[t.identifier]=t,e},{});e.vm.payTimeLine.addSalaryAndBonuses({salary:new c.EmployeeSalary(t.salaryDetails.salary),bonuses:t.salaryDetails.bonuses.map(function(e){return e.type=i[e.bonusTypeId].title,new c.Bonus(e)})})})}}]),angular.module("payroll").controller("SalaryBreakDowmDisplay",["$scope","$uibModalInstance","salaryTimeLine","PayGroupName","AppContext","AppFeatures","breakUp",function(e,t,i,n,o,r,a){e.vm={},e.closeStructure=function(){t.close()};e.vm.hasPayGroupFeature=o.isFeaturePresent(r.Paygroups.title),e.vm.salaryTimeLine=i,e.vm.remunerationType=Payroll.Configuration.Model.RemunerationType,e.vm.payGroupName=i.payGroup,e.vm.salaryStructureName=i.salaryStructureName,e.vm.breakupItems=a}]),angular.module("payroll").controller("AddBonusController",["$scope","$uibModalInstance","AppSettings","EmployeeDetails","PaymentStatus","NotificationService","SalaryService","Config","SalarySharedModel","salaryStructureIdentifier",function(e,t,i,n,o,r,a,s,l,c){e.vm={},e.model={},e.vm.paymentStatus=o,e.vm.niceScrollOptions=angular.copy(i.scrollSettings),e.vm.datepickerOptions=angular.copy(i.datepickerOptions),e.vm.employee=n,e.vm.config=s,e.vm.validateName=!1,e.vm.hasPayrollFeature=null!=s;e.vm.bonusTypeErrors="",e.model=new l.AdhocComponent({}),e.vm.hasPayrollFeature&&(e.model.isIncludeInTax=!0),a.bonusType.query({},function(t){e.vm.bonusTypes=t.map(function(e){return new l.BonusType(e)}),e.vm.bonusTypes.unshift(new l.BonusType({title:"Create new One Time Component"}))}),e.resetNewbonusType=function(){e.vm.createOneTimePaymentType=!1,e.vm.oneTimeComponentName=null},e.saveBonusType=function(){e.vm.form.bonusType.$valid&&a.bonusType.save({title:e.vm.oneTimeComponentName}).$promise.then(function(t){e.vm.bonusTypes.push(t),e.model.componentType=t,e.resetNewbonusType(),r.success("One Time Payment Type Created Successfully.")},function(t){r.error(t.data.message),e.resetNewbonusType()})},e.addBonus=function(){e.vm.createOneTimePaymentType?e.vm.bonusTypeErrors="Please save the bonus type":e.oneTimeComponents.$valid&&a.addBonus(e.vm.employee.id,c,e.model).then(function(i){i.type=e.model.type,i.salaryIdentifier=c,t.close(new l.Bonus(i)),r.success("Bonus Added successfully.")},function(e){r.error("An error occurred while adding bonus. "+e.data.message+".")})},e.close=function(){t.dismiss()}}]),angular.module("payroll").controller("SalaryEditController",["$scope","$uibModalInstance","AppSettings","Model","PaymentStatus","NotificationService","SalaryService","PayrollLookUpService","SalarySharedModel","SalaryId","payGroupId","remunerationType",function(e,t,i,n,o,r,a,s,l,c,p,u){e.vm={},e.model={},e.vm.paymentStatus=o,e.vm.niceScrollOptions=angular.copy(i.scrollSettings),e.vm.datepickerOptions=angular.copy(i.datepickerOptions),e.vm.modelOptions=i.modelBlurSettings;e.model=n,e.vm.model=angular.copy(n),e.vm.minCTC=0,p&&(e.model.remunerationType=n.salaryItemsView.remunerationType,e.vm.remunerationType=Payroll.Configuration.Model.RemunerationType,s.getCustomSalaryStructures(p,u).then(function(t){e.vm.customsalaryStructures=t.map(function(e){return new Payroll.Configuration.Model.CustomSalaryStructureLookup(e)})})),e.updateSalary=function(){if(e.salary.$valid){var i={ctc:e.model.ctc,effectiveFrom:e.model.effectiveFrom,salaryId:c,structureGenerateSource:e.model.structureGenerateSource,salaryStructureConfiguration:e.model.salaryStructureConfiguration};a.updateSalary(e.model.employee.id,i).then(function(e){t.close(e),r.success("Salary Updated successfully.")},function(e){r.error(e.data.message)})}},e.close=function(){t.dismiss()}}]),angular.module("payroll").controller("ReviseSalaryWithNoPayrollController",["$scope","$uibModalInstance","SalaryService","NotificationService","Model","SalarySharedModel","AppSettings",function(e,t,i,n,o,r,a){e.vm={},e.vm.modelOptions=a.modelBlurSettings,e.vm.datepickerOptions=angular.copy(a.datepickerOptions),e.model={};e.model=o,e.reviseSalary=function(){if(e.salaryRevisionForm.$valid){var o={ctc:e.model.ctc,effectiveFrom:e.model.effectiveFrom,structureGenerateSource:e.model.structureGenerateSource,salaryStructureConfiguration:e.model.salaryStructureConfiguration,nextRevisionDate:e.model.nextRevisionDate};i.createRevision(e.model.employee.id,o).then(function(e){t.close(e)},function(e){n.error(e.data.message)})}},e.closeReviseSalary=function(){t.dismiss()}}]),appRoot.factory("FinanceModel",["DeductionStatus","SalarySharedModel","PayrollModel","EmployeeModel","Gender","SalaryPaymentMode","SharedModel",function(e,t,i,n,o,r,a){var s=[{name:"JAN",fullName:"January"},{name:"FEB",fullName:"February"},{name:"MAR",fullName:"March"},{name:"APR",fullName:"April"},{name:"MAY",fullName:"May"},{name:"JUN",fullName:"June"},{name:"JUL",fullName:"July"},{name:"AUG",fullName:"August"},{name:"SEP",fullName:"September"},{name:"OCT",fullName:"October"},{name:"NOV",fullName:"November"},{name:"DEC",fullName:"December"}];function l(t,i,n){this.name=t.name,this.maxLimit=t.maxLimit,this.deductions=t.deductions.filter(function(e){return e.availableToUser}).map(function(t){return null!=n&&t.name in n?(t.readOnly=!0,new c(t,new p({name:t.name,amount:n[t.name],attachedDocuments:[],status:e.NotSubmitted.id}),new u({againstDeduction:t.name,claimedAmount:n[t.name]}))):new c(t,i.getDeduction(t.name),i.getDeductionClaim(t.name))}),this.reset=function(){this.deductions.forEach(function(e){return e.reset()})},this.totalDeclaredAmount=function(){return this.deductions.reduce(function(e,t){return e+(t.amountDeclared?t.amountDeclared:0)},0)},this.totalClaimAmount=function(){return this.deductions.reduce(function(e,t){return e+(t.amountClaimed?t.amountClaimed:0)},0)}}function c(t,i,n){var o=angular.copy(n),r=angular.copy(i);function a(){i.status!=e.Submitted.id&&(i.status=e.Submitted.id)}this.name=t.name,this.section=t.section,this.title=t.title,this.description=t.description,this.readOnly=t.readOnly,this.maxLimit=t.maxLimit,this.comment=i.comment,this.maxLimitFor60AndAbove=t.maxLimitFor60AndAbove,Object.defineProperty(this,"amountDeclared",{get:function(){return i.amount},set:function(e){i.amount=e,a()}}),Object.defineProperty(this,"amountClaimed",{get:function(){return n.claimedAmount}}),Object.defineProperty(this,"status",{get:function(){return i.status}}),Object.defineProperty(this,"isProofSubmitted",{get:function(){return i.isProofSubmitted()}}),Object.defineProperty(this,"isProofAccepted",{get:function(){return i.isProofAccepted()}}),Object.defineProperty(this,"isProofRejected",{get:function(){return i.isProofRejected()}}),Object.defineProperty(this,"attachedDocuments",{get:function(){return i.attachedDocuments},set:function(e){i.attachedDocuments=e.map(function(e){return new d(e)}),a()}}),this.resetDocuments=function(){i.attachedDocuments=[]},this.reset=function(){i.constructor(r),n.constructor(o)},this.getDeclare=function(){return i}}function p(t){angular.copy(t.amount),angular.copy(t.attachedDocuments);this.name=t.name,this.amount=t.amount,this.status=t.status,this.comment=t.comment,this.attachedDocuments=t.attachedDocuments.map(function(e){return new d(e)}),this.isProofSubmitted=function(){return this.attachedDocuments.length>0},this.isProofAccepted=function(){return this.isProofSubmitted()&&this.status==e.Accepted.id},this.isProofRejected=function(){return this.isProofSubmitted()&&this.status==e.Rejected.id},this.valid=function(){return null!=this.name&&this.status!=e.None.id}}function u(e){this.againstDeduction=e.againstDeduction,this.claimedAmount=e.claimedAmount}function d(e){this.name=e.name,this.location=e.location,this.uploadedOn=e.uploadedOn,this.uploadedBy=e.uploadedBy,Object.defineProperty(this,"pdfURl",{get:function(){return this.location.replace(/\..+$/,"").replace("taxbills/","documents/converted/")+".pdf"}})}function m(e){this.isESIEligible=e.isESIEligible||!1,this.esiNumber=e.esiNumber,this.esiConfigurationId=e.esiConfigurationId||null,this.esiEstablishmentCode=e.esiEstablishmentCode,this.validState=e.validState}function y(e){this.isPFNotAvailable=e.isPFNotAvailable||!1,this.uan=e.uan,this.pfNumber=e.pfNumber,this.pfConfigurationId=e.pfConfigurationId,this.pfEstablishmentCode=e.pfEstablishmentCode,this.joinDate=Date.getDateObj(e.joinDate),this.exitDate=Date.getDateObj(e.exitDate),this.exitReason=e.exitReason,this.branchName=e.branchName,this.nameOnTheAccount=e.nameOnTheAccount,this.validState=e.validState,this.toJSON=function(){var e=angular.copy(this);return e.joinDate=this.joinDate?this.joinDate.dateOnlyString():this.joinDate,e.exitDate=this.exitDate?this.exitDate.dateOnlyString():this.exitDate,e},this.construct=function(){this.constructor(this)}}function h(e){this.panNotApplicable=e.panNotApplicable,this.panNumber=this.panNotApplicable?null:e.panNumber,this.dateOfBirth=this.panNotApplicable?null:Date.getDateObj(e.dateOfBirth),this.nameOnPanCard=this.panNotApplicable?null:e.nameOnPanCard,this.fatherName=this.panNotApplicable?null:e.fatherName,this.attachedDocuments=e.attachedDocuments,this.validState=e.validState,this.toJSON=function(){var e=angular.copy(this);return this.dateOfBirth&&(e.dateOfBirth=this.dateOfBirth.dateOnlyString()),e},this.construct=function(){this.constructor(this)}}function f(e){this.name=e.name,this.aadhaarNumber=e.aadhaarNumber,this.enrollmentNumber=e.enrollmentNumber}function g(e){this.monthName=e.monthName,this.year=e.year,this.components=e.components,this.grossAmount=e.grossAmount,this.getComponentNames=function(){return Object.keys(this.components)},this.getComponentAmount=function(e){var t=this.components[e];return t?t.amount:0},this.getMonth=function(){return this.monthName+","+this.year}}return{HRADeduction:function(e){this.rentPaid=e.rentPaid,this.landlordInfo=new function(e){this.name=e.name,this.address=e.address,this.pan=e.pan,this.isVerified=e.isVerified,this.signedDeclaration=e.signedDeclaration?new d(e.signedDeclaration):null}(e.landlordInfo),this.deductionStatus=e.deductionStatus,this.comment=e.comment,this.isLandlordInfoRequired=function(){return this.rentPaid>1e5},this.isPanRequired=function(){return this.isLandlordInfoRequired()&&!this.landlordInfo.signedDeclaration}},AttachedDocuments:d,Declaration:function(t){var i=t.deductions.map(function(e){return new p(e)});this.id=t.id,this.employeeId=t.employeeId,this.deductionClaims=t.deductionClaims.map(function(e){switch(e.againstDeduction){case"incomefromhouseproperty":return new Payroll.Model.IncomeFromHousePropertyClaim(e);case"houseRent":return new Payroll.Model.HouseRentClaim(e);case"homeloaninterest":return new Payroll.Model.HouseLoanClaim(e);case"incomefromothersources":return new Payroll.Model.IncomeFromOtherSourcesClaim(e);default:return new u(e)}}),this.updateOrSetDeduction=function(e){if(e){var t=i.findIndex(function(t){return t.name==e.name});t>-1?i[t]=e:i.push(e)}},this.clearDeduction=function(t){var n=i.findIndex(function(e){return e.name==t}),o=this.deductionClaims.findIndex(function(e){return e.againstDeduction==t});n>-1&&(i[n].amount=null,i[n].status=e.NotSubmitted.id),o>-1&&this.deductionClaims.splice(o,1)},Object.defineProperty(this,"deductions",{get:function(){return i.filter(function(t){return t.valid()&&t.status==e.Submitted.id})},enumerable:!0}),this.deductionsUnderHouseProperty=new Payroll.Model.Finance.DeductionsUnderHouseProperty(t.deductionsUnderHouseProperty),this.deductionsFromOtherSources=new Payroll.Model.Finance.IncomeFromOtherSources(t.deductionsFromOtherSources),this.getDeductionClaim=function(e){var t=this.deductionClaims.find(function(t){return t.againstDeduction==e});return t||(t=new u({againstDeduction:e})),t},this.getDeduction=function(t){var n=i.find(function(e){return e.name==t});return n||(n=new p({name:t,status:e.NotSubmitted.id,attachedDocuments:[]}),i.push(n)),n},this.validateProofSubmission=function(){return this.deductions.filter(function(e){return e.amount>0}).every(function(e){return e.attachedDocuments.length>0})}},DeductionClaim:u,Deduction:p,TaxSection:l,TaxDeduction:c,PFStats:function(e){this.employee=e.employee,this.employer=e.employer},Employee:function(e){this.id=e.id,this.displayName=e.displayName,this.employeeNumber=e.employeeNumber,this.gender=e.gender,this.dateOfBirth=Date.getDateObj(e.dateOfBirth),this.dateJoined=Date.getDateObj(e.dateJoined),this.address=e.address,this.exitDate=Date.getDateObj(e.exitDate),this.bankDetails=new n.BankAccountDetails(e.bankDetails||{}),this.pf=new y(e.pf||{}),this.esi=new m(e.esi||{}),this.esiEstablishmentId=e.esiEstablishmentId,this.pfConfigurationId=e.pfConfigurationId||null,this.esiConfigurationId=e.esiConfigurationId||null,this.pfEstablishmentId=e.pfEstablishmentId,this.pan=new h(e.pan||{}),this.aadhaar=new f(e.aadhaar||{}),this.payrollEnable=e.payrollEnable,this.reviewPayrollSetup=e.reviewPayrollSetup,this.workerType=e.workerType,this.jobTitle=e.jobTitle,this.timeType=e.timeType},PayrollSetUp:function(e){this.salarySetupComplete=e.salarySetupComplete,this.bankAndPanSetupComplete=e.bankAndPanSetupComplete,this.pfAndESISetupComplete=e.pfAndESISetupComplete,Object.defineProperty(this,"setupComplete",{get:function(){return this.salarySetupComplete&&this.bankAndPanSetupComplete&&this.pfAndESISetupComplete}})},PreviousIncome:g,SalaryInformation:function(e){var n,o=this,r=e.oneTimePaymentTypes.reduce(function(e,t){return e[t.identifier]=t,e},{}),a=new t.PayrollPayTimeline({hasPayrollFeature:e.hasPayrollFeature,structures:e.salaryStructures.map(function(e){return new i.SalaryStructure(e)}),oneTimePayments:e.oneTimePayments.map(function(i){return i.type=r[i.bonusTypeId].title,e.partiallyBonusTransactions.filter(function(e){return e.bonusId==i.id}),new t.PayrollBonus(i)}),perks:(e.perks||[]).map(function(e){return new Payroll.Model.EmployeeBenefit(e)})});this.salaryTimeLine=a.getCurrentSalaryTimeline(),this.previousMonthSalaries={},Object.defineProperty(this,"months",{get:function(){return Object.keys(this.previousMonthSalaries.total)}}),Object.defineProperty(this,"isPreviousSalariesAvailable",{get:function(){return e.previousMonthSalary.length>0}}),n={title:"Monthly Gross"},e.previousMonthSalary.forEach(function(e){var t=new g(e),i=t.getMonth();angular.forEach(t.components,function(e,t){t in o.previousMonthSalaries||(o.previousMonthSalaries[t]={title:e.componentTitle}),o.previousMonthSalaries[t][i]=e.amount}),n[i]=t.grossAmount}),o.previousMonthSalaries.total=n},PanDetails:h,PFDetails:y,ESIDetails:m,IncomeTaxStats:function(e){var t=[];this.earnings=e.earnings.reduce(function(e,t,i){var n=t.month;switch(t.salaryGenerationSource){case 2:n+=" ^";break;case 3:n+=" *";break;case 4:n+=" #"}return e[n]=t,e},{}),Object.defineProperty(this,"breakups",{get:function(){return t}}),this.totalEarnings=this.earnings.Total.components.total.amount,this.useClaimsToValidateDeductions=e.useClaimsToValidateDeductions,this.taxableIncomeOnAllHeads=e.taxableIncomeOnAllHeads,this.surchargeAndCess=e.surchargeAndCess,this.totalSurchargeAndCess=this.surchargeAndCess.reduce(function(e,t){return e+t.amount},0),this.taxableIncome=e.taxableIncome,this.netTaxRoundOff=e.netTaxRoundOff,this.taxableIncomeRoundOff=e.taxableIncomeRoundOff,this.taxableBenefits=e.taxableBenefits,this.outsidePayrollBonusesIncome=e.outsidePayrollBonusesIncome,this.outsidePayrollOvertimeIncome=e.outsidePayrollOvertimeIncome,this.taxCalculation=e.taxCalculation,this.incomeTax=e.incomeTax,this.netTaxPayable=e.netTaxPayable,this.totalTaxPaid=e.totalTaxPaid,this.totalTaxPending=e.totalTaxPending,this.taxDeductionDetails=e.taxDeductionDetails.map(function(e){switch(e.taxSource){case 2:e.month+=" ^";break;case 3:e.month+=" *";break;case 4:e.month+=" #"}return e}),angular.forEach(this.earnings.Total.components,function(e){"total"!=e.componentName&&this.push(e)},t),t.push(this.earnings.Total.components.total),this.hasAnyTaxablePayOffIncluded=e.earnings.some(function(e){var t=!1;return angular.forEach(e.components,function(e){t=t||e.hasAnyTaxablePayOffIncluded}),t}),this.hasAnyPayOffFinalized=this.hasAnyTaxablePayOffIncluded&&e.earnings.some(function(e){var t=!1;return 1==e.salaryGenerationSource&&angular.forEach(e.components,function(e){t=t||e.hasAnyTaxablePayOffIncluded}),t}),this.taxablePayOffComponent=(t.find(function(e){return"special"==e.componentName})||{}).componentTitle,this.totalExemptionUnderAllowances=function(){var e=this.taxableIncomeOnAllHeads.taxableIncomeFromAllHeads.find(function(e){return 1==e.incomeSource});return e?e.allowanceTaxExemptions.reduce(function(e,t){return e+t.amount},0):0},this.employerContributionTaxExemptions=function(){var e=this.taxableIncomeOnAllHeads.taxableIncomeFromAllHeads.find(function(e){return 1==e.incomeSource});return e?e.employerContributionTaxExemptions:[]},this.employerContributionTotalTaxExemptions=function(){var e=this.taxableIncomeOnAllHeads.taxableIncomeFromAllHeads.find(function(e){return 1==e.incomeSource});return e?e.employerContributionTaxExemptions.reduce(function(e,t){return e+t.amount},0):0},this.totalsection16TaxExemptions=function(){var e=this.taxableIncomeOnAllHeads.taxableIncomeFromAllHeads.find(function(e){return 1==e.incomeSource});return e?e.section16TaxExemptions.reduce(function(e,t){return e+t.amount},0):0},this.totalsection24TaxExemptions=function(){var e=this.taxableIncomeOnAllHeads.taxableIncomeFromAllHeads.find(function(e){return 2==e.incomeSource});return e?e.section24TaxExemptions.reduce(function(e,t){return e+t.amount},0):0},this.totalTaxExemptionsOf1o5Group=function(){return this.taxableIncomeOnAllHeads.group1o5Deductions.reduce(function(e,t){return e+t.amount},0)},this.totalOtherTaxExemptions=function(){return this.taxableIncomeOnAllHeads.otherTaxDeductions.reduce(function(e,t){return e+t.amount},0)},this.nonMonetaryPerquisitesExemptions=function(){var e=this.taxableIncomeOnAllHeads.taxableIncomeFromAllHeads.find(function(e){return 1==e.incomeSource});return e?e.nonMonetaryPerquisitesExemptions:[]},this.totalNonMonetaryPerquisitesExemptions=function(){var e=this.taxableIncomeOnAllHeads.taxableIncomeFromAllHeads.find(function(e){return 1==e.incomeSource});return e?e.nonMonetaryPerquisitesExemptions.reduce(function(e,t){return e+t.amount},0):0},this.otherDeductionExemptions=function(){var e=this.taxableIncomeOnAllHeads.taxableIncomeFromAllHeads.find(function(e){return 1==e.incomeSource});return e?e.otherDeductionExemptions:[]},this.totalOtherDeductionExemptions=function(){var e=this.taxableIncomeOnAllHeads.taxableIncomeFromAllHeads.find(function(e){return 1==e.incomeSource});return e?e.otherDeductionExemptions.reduce(function(e,t){return e+t.amount},0):0},this.getTotalSalaryReceived=function(e){return e-this.outsidePayrollBonusesIncome-this.outsidePayrollOvertimeIncome-this.employerContributionTotalTaxExemptions()-this.totalOtherDeductionExemptions()-this.totalNonMonetaryPerquisitesExemptions()}},PaySlipSummary:function(e){this.monthName=e.monthName,this.cycleLastDate=Date.getDateObj(e.cycleLastDate),this.lossOfDays=e.lossOfPayDays,this.noOfPayDays=e.noOfPayDays,this.paymentMode=r.getById(e.paymentMode)},PaySlipView:function(e){o.getById(e.gender),this.companyInfo=new a.CompanyInfo(e.companyInfo),this.orgLogo=e.orgLogo,this.source=e.source,this.cycleId=e.cycleId,this.forMonth=e.month-1,this.forMonthName=s[this.forMonth].fullName,this.forYear=e.year,this.displayName=e.displayName,this.paySlipFields=e.paySlipFields||[],this.fieldBorderCount=(this.paySlipFields.length%4==0?this.paySlipFields.length-4:4*Math.round(this.paySlipFields.length/4))-1,this.cyclePayDays=e.cyclePayDays,this.totalWorkingDays=e.noOfPayDays,this.lossOfPayDays=e.lossOfPayDays,this.includeYTDValues=e.includeYTDValues,this.includeGrossSalary=e.includeGrossSalary,Object.defineProperty(this,"noOfPayDays",{get:function(){return this.totalWorkingDays-this.lossOfPayDays}}),this.earnings=e.earnings||[],this.contributions=e.contributions,this.deductions=e.deductions,this.reimbursements=e.reimbursements,this.totalEarnings=e.totalEarnings,this.totalContributions=e.totalContributions,this.totalDeductions=e.totalDeductions,this.totalReimbursements=e.totalReimbursements,this.totalCashAdvances=e.totalCashAdvances,this.totalCashAdvanceSettlements=e.totalCashAdvanceSettlements,this.netPay=e.netPay,this.isRecurringReimbursementPresent=this.earnings.some(function(e){return 4===e.componentType})},AadhaarDetails:f,GroupedTaxSection:function(e,t,i){this.name=e.name,this.description=e.description,this.title=e.title,this.maxLimit=e.maxLimit,this.sections=e.sections.map(function(e){return new l(e,t,i)}),this.totalDeclaredAmount=function(){return this.sections.reduce(function(e,t){return e+t.totalDeclaredAmount()},0)},this.totalClaimAmount=function(){return this.sections.reduce(function(e,t){return e+t.totalClaimAmount()},0)},this.reset=function(){this.sections.forEach(function(e){return e.reset()})}},IncomeTaxDeductionSummary:function(e){this.errorMessage=e.errorMessage,this.netTaxRoundOff=e.netTaxRoundOff,this.taxableIncomeRoundOff=e.taxableIncomeRoundOff,this.epfGrossAmount=e.epfGrossAmount,this.vpfGrossAmount=e.vpfGrossAmount,this.npsEmployerGrossAmount=e.npsEmployerGrossAmount,this.isNPSEmployerComponentEnable=e.isNPSEmployerComponentEnable,this.taxDeductionDetails=null!=e.taxDeductionDetails?e.taxDeductionDetails.map(function(e){switch(e.taxSource){case 2:e.month+=" ^";break;case 3:e.month+=" *";break;case 4:e.month+=" #"}return e}):[]},IncomeTaxComputationRequest:function(e){this.name="IncomeTaxComputation",this.format="pdfform",this.year=e.year}}}]),function(e){!function(e){!function(t){var i=function(){function e(){}return e.$inject=[],e}();t.EmployeeLettersController=i;var n=function(){function t(t,i,n,o,r,a,s){var l=this;this._modal=t,this.EmployeeLetterService=i,this.appSettings=n,this.filter=o,this.notificationService=r,this.fileDownloadService=a,this.dialogs=s,this.paginationIndex=0,this.letterPublishStatus=e.Models.LetterPublishStatus,this.downloadLetter=function(e,t){l.fileDownloadService.downloadFileFromBlob(e,t)},this.emailLetter=function(e){l._modal.open({controller:p,templateUrl:"email-attachments-modal",keyboard:!1,controllerAs:"ctrl",resolve:{letter:function(){return angular.copy(e)}}})},this.EmployeeLetterService.getAllPublishedLetters().then(function(t){l.generatedLettersData=t.map(function(t){return new e.Models.PublishedLetter(t)}),l.initializeLetterDetails()})}return t.prototype.initializeLetterDetails=function(){var e=this;this.publishedLetters=[],this.generatedLettersData=this.filter("orderBy")(this.generatedLettersData,["publishedBatchId"]),this.generatedLettersData.forEach(function(t){var i=e.publishedLetters.length-1;if(e.publishedLetters.length>0&&e.publishedLetters[i].publishedBatchId>0&&e.publishedLetters[i].publishedBatchId==t.publishedBatchId)e.publishedLetters[i].letters.push(t);else{var n={};n.generatedFor=t.generatedFor,n.employee=t.employee,n.generatedOn=t.generatedOn,n.generatedByName=t.generatedByName,n.name=t.name,n.status=t.status,n.publishedBatchId=t.publishedBatchId,n.id=t.id,n.letters=[],n.letters.push(t),n.show=null==n.publishedBatchId,e.publishedLetters.push(n)}}),this.publishedLetters=this.filter("orderBy")(this.publishedLetters,["-id"])},t.prototype.deleteLetter=function(e,t){var i=this;this.dialogs.confirm("Please Confirm","Are you sure you want to delete this generated letter?").result.then(function(){e.id&&i.EmployeeLetterService.deletePublishedLetter(e.id).then(function(n){if(n.isDeleted){i.notificationService.success(e.name+" for "+e.employee+" is deleted successfully.");var o=i.publishedLetters.indexOf(t);if(o>-1){var r=t.letters.indexOf(e);t.letters.splice(r,1),0==t.letters.length&&i.publishedLetters.splice(o,1)}}else i.notificationService.error("An error occurred while deleting "+e.name)})})},t.$inject=["$uibModal","EmployeeLetterService","AppSettings","$filter","NotificationService","FileDownloadService","dialogs"],t}();t.GeneratedLettersController=n;var o=function(){function t(e,t,i,n,o,r){var a=this;this._scope=e,this._modal=t,this.employeeLetterSerivice=i,this.dialogs=n,this.notificationService=o,this.appSettings=r,i.getAllTemplates().then(function(e){a.letterTemplates=e,a.updateLetterGroups()}),this._scope.$on("createLetterTemplate",function(e,t){if(t.model){var i=a.letterTemplates.findIndex(function(e){return e.id==t.model.id});i>-1?a.letterTemplates[i]=t.model:a.letterTemplates.push(t.model)}a.updateLetterGroups()}),this._scope.$on("letterGenerateComplete",function(e,t){if(t.history){var i=a.letterTemplates.findIndex(function(e){return e.id==t.templateId});i>-1&&a.letterTemplates[i].generateHistory.push(t.history)}})}return t.prototype.updateLetterGroups=function(){this.employeeLetterTemplates=this.letterTemplates.filter(function(t){return t.letterType==e.Models.LetterTemplateType.EmployeeLetter})},t.prototype.openTemplateCreateWizard=function(e){var t=this;this._modal.open({controller:r,windowClass:"full-screen-modal modal-content-clip",templateUrl:"createLetterTemplate",keyboard:!1,controllerAs:"ctrl",resolve:{editTemplate:function(){return angular.copy(e)}}}).result.then(function(i){if(e){var n=t.letterTemplates.indexOf(e);n>-1&&(t.letterTemplates[n]=i.model)}else t.letterTemplates.push(i.model);t.updateLetterGroups()})},t.prototype.deleteLetterTemplate=function(e){var t=this;this.dialogs.confirm("Please Confirm",'Are you sure you want to delete "'+e.name+'" template?').result.then(function(){t.employeeLetterSerivice.deleteLetterTemplate(e.id).then(function(i){i.isDeleted?(t.letterTemplates=t.letterTemplates.filter(function(t){return t.id!=e.id}),t.updateLetterGroups(),t.notificationService.success(e.name+" Deleted successfully")):t.notificationService.success("Unable to Delete "+e.name)})})},t.prototype.openGenerateLetterWizard=function(e){var t=this;this._modal.open({templateUrl:"generateLetterWizard",controller:l,controllerAs:"ctrl",windowClass:"full-screen-modal modal-content-clip",backdrop:!1,keyboard:!1,resolve:{generateTemplate:function(){return angular.copy(e)}}}).result.then(function(i){var n=t.letterTemplates.indexOf(e);n>-1&&t.letterTemplates[n].generateHistory.push(i)})},t.prototype.openTemplateHistory=function(e){this.currentTemplate=e,this._modal.open({templateUrl:"templateGenerateHistory",windowClass:"structure-compare template-preview",backdrop:"static",keyboard:!1,scope:this._scope})},t.$inject=["$scope","$uibModal","EmployeeLetterService","dialogs","NotificationService","AppSettings"],t}();t.LetterTemplatesController=o;var r=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f){var g=this;this._scope=t,this._q=i,this._modal=n,this._modalInstance=o,this.sharedModel=r,this.letterTemplateTypes=a,this.employeeLetterService=s,this.notificationService=l,this.editTemplate=c,this.appSettings=p,this.rootScope=u,this.fileDownloadService=d,this.letterSize=m,this.borderSize=y,this.fieldType=h,this._stateParams=f,this.letterDetailsModel=new e.Models.LetterTemplate,this.letterHeaderModel=new e.Models.LetterTemplate,this.letterFooterModel=new e.Models.LetterTemplate,this.borderWidth=e.Models.BorderWidth,this.media=e.Models.Media,this.letterTypes=e.Models.LetterTemplateType,this.pageOrientation=e.Models.PageOrientation,this.tinyMceImageUrl=[],this.editHeader=!0,this.editFooter=!0,this.updateLetterBookMark=function(){g.editorLetterBookmark=g.activeLetterEditor.selection.getBookmark(2,!0)},this.updateHeaderBookMark=function(){g.editorHeaderBookmark=g.activeHeaderEditor.selection.getBookmark(2,!0)},this.updateFooterBookMark=function(){g.editorFooterBookmark=g.activeFooterEditor.selection.getBookmark(2,!0)},this.updateLetterTrackers=function(){g.updateLetterBookMark()},this.updateHeaderTrackers=function(){g.updateHeaderBookMark()},this.updateFooterTrackers=function(){g.updateFooterBookMark()},this.doesNameExist=function(e){var t=g._q.defer();return e&&g.letterDetailsModelNameCopy!=e?g.employeeLetterService.letterService.get({action:"doestemplatenameexist",name:e.toString()},function(e){e.result?t.resolve(!1):t.resolve(!0)}):t.resolve(!0),t.promise},this.letterTemplateSteps=[new this.sharedModel.Step({title:"Basic Details",name:"basicDetails",template:"basicLetterDetails",index:1,valid:!1}),new this.sharedModel.Step({title:"Header & Footer",name:"headerFooter",template:"documentHeaderFooter",index:2,valid:!1}),new this.sharedModel.Step({title:"Document Template",name:"documentTemplate",template:"createDocumentTemplate",index:3,valid:!1})],this.letterSizes=m.getAll(),this.borderSizes=y.getAll(),this.fieldTypes=h.getAll(),this.modelOptions=p.modelBlurSettings,this.currentStep=this.letterTemplateSteps[0],this.fileUploadSettings=angular.copy(p.fileUploadSettings),this.scrollSettings=angular.copy(p.scrollSettings);var v=this._stateParams.id;v?this.employeeLetterService.getTemplate(v).then(function(e){g.editTemplate=e,g.letterDetailsModel=g.editTemplate,g.letterDetailsModel.headerExcerpt?(g.letterHeaderModel.template=g.letterDetailsModel.headerTemplate,g.letterHeaderModel.excerpt=g.letterDetailsModel.headerExcerpt,g.activateHeaderEditor=!0,g.editHeader=!1):(g.activateHeaderEditor=!1,g.editHeader=!0),g.letterDetailsModel.footerExcerpt?(g.letterFooterModel.template=g.letterDetailsModel.footerTemplate,g.letterFooterModel.excerpt=g.letterDetailsModel.footerExcerpt,g.activateFooterEditor=!0,g.editFooter=!1):(g.activateFooterEditor=!1,g.editFooter=!0),g.getLetterHeadersdata(),g.getLetterMetaData()},function(e){}):(this.letterDetailsModel.letterType=e.Models.LetterTemplateType.EmployeeLetter,this.letterDetailsModel.pageProperties=new e.Models.PageProperties(e.Models.LetterSize.A4,e.Models.BorderWidth.None,e.Models.PageOrientation.Portrait,e.Models.Media.Plainpaper,0,0,0,0),this.getLetterHeadersdata(),this.getLetterMetaData()),this._scope.$watch("ctrl.letterFieldTrack",function(e,t){if(e){g.letterDetailsModel.letterFields=[],g.letterDetailsModel.customFields.forEach(function(e){e.isUsed=!1}),e.forEach(function(e,t){if(e){var i=e.replace(/{{([^{}]+)}}/g,"$1").split("."),n=g.letterAttributes.find(function(e){return e.name==i[0]});if(n){var o=n.fields.find(function(e){return e.name==i[1]});o&&(n.isCustom?o.isUsed=!0:g.letterDetailsModel.letterFields.push(o))}}});var i="CustomAttributes.";g.letterDetailsModel.customFields.forEach(function(e){e.isUsed=g.letterHeaderModel.excerpt&&g.letterHeaderModel.excerpt.includes(i.concat(e.name))||g.letterFooterModel.excerpt&&g.letterFooterModel.excerpt.includes(i.concat(e.name))||g.letterDetailsModel.excerpt&&g.letterDetailsModel.excerpt.includes(i.concat(e.name))})}}),this.letterDetailsModelNameCopy=angular.copy(this.letterDetailsModel.name)}return t.prototype.getLetterHeadersdata=function(){var t=this;this.employeeLetterService.getLetterHeadersdata().then(function(i){t.metaHeaderFields=i.toJSON(),t.letterHeaderAttributes=[],angular.forEach(t.metaHeaderFields,function(i,n){"object"==typeof i&&t.letterHeaderAttributes.push(new e.Models.LetterHeaderAttributes(i.summary.typeKey,i.summary.title,!1,i.fields))}),t.letterHeaderAttributes.push(new e.Models.LetterHeaderAttributes("CustomAttributes","Custom Attributes",!0,[])),t.letterDetailsModel.id&&t.letterDetailsModel.id>0&&(t.letterDetailsModel.customFields=t.letterDetailsModel.customFields.map(function(t){return new e.Models.CustomFieldModel(t.title,t.fieldElementType,t.fieldOptions,t.isUsed)}),t.letterHeaderAttributes[t.letterHeaderAttributes.length-1].fields=t.letterDetailsModel.customFields)})},t.prototype.getLetterMetaData=function(){var t=this;this.employeeLetterService.getLetterMetaData().then(function(i){t.metaDataFields=i.toJSON(),t.letterAttributes=[],angular.forEach(t.metaDataFields,function(i,n){"object"==typeof i&&0!=i.fields.length&&t.letterAttributes.push(new e.Models.LetterAttributes(i.summary.typeKey,i.summary.title,!1,i.fields))}),t.letterAttributes.push(new e.Models.LetterAttributes("CustomAttributes","Custom Attributes",!0,[])),t.letterDetailsModel.id&&t.letterDetailsModel.id>0&&(t.letterDetailsModel.customFields=t.letterDetailsModel.customFields.map(function(t){return new e.Models.CustomFieldModel(t.title,t.fieldElementType,t.fieldOptions,t.isUsed)}),t.letterAttributes[t.letterAttributes.length-1].fields=t.letterDetailsModel.customFields)})},t.prototype.onLetterEditorReady=function(){this.activeLetterEditor=tinyMCE.activeEditor,this.activeLetterEditor.on("keyup",this.updateLetterTrackers),this.activeLetterEditor.on("cut",this.updateLetterTrackers),this.activeLetterEditor.on("paste",this.updateLetterTrackers),this.activeLetterEditor.on("click",this.updateLetterTrackers),this.activeLetterEditor.on("ExecCommand",this.updateLetterTrackers)},t.prototype.onHeaderEditorReady=function(){this.activeHeaderEditor=tinyMCE.activeEditor,this.headerEditorId=tinyMCE.activeEditor.id,this.activeHeaderEditor.on("keyup",this.updateHeaderTrackers),this.activeHeaderEditor.on("cut",this.updateHeaderTrackers),this.activeHeaderEditor.on("paste",this.updateHeaderTrackers),this.activeHeaderEditor.on("click",this.updateHeaderTrackers),this.activeHeaderEditor.on("ExecCommand",this.updateHeaderTrackers)},t.prototype.onFooterEditorReady=function(){this.activeFooterEditor=tinyMCE.activeEditor,this.footerEditorId=tinyMCE.activeEditor.id,this.activeFooterEditor.on("keyup",this.updateFooterTrackers),this.activeFooterEditor.on("cut",this.updateFooterTrackers),this.activeFooterEditor.on("paste",this.updateFooterTrackers),this.activeFooterEditor.on("click",this.updateFooterTrackers),this.activeFooterEditor.on("ExecCommand",this.updateFooterTrackers)},t.prototype.gotoStep=function(e){var t=this.letterTemplateSteps.find(function(e){return 1==e.index});if(!t||t&&t.valid){var i=this.letterTemplateSteps.find(function(t){return t.index==e});i&&(this.currentStep=i)}2!=e&&(this.editHeader=!1,this.editFooter=!1)},t.prototype.addLetterDetails=function(){this.form.letterDetailsForm.letterDetails.$valid&&(this.letterTemplateSteps[0].valid=!0,this.gotoStep(2))},t.prototype.addFieldAtLetterCursor=function(e,t){this.editorLetterBookmark&&this.activeLetterEditor.selection.moveToBookmark(this.editorLetterBookmark),t.fieldType==this.fieldType.Image.title?this.activeLetterEditor.execCommand("mceInsertContent",!1," <span class='insert-content'>&nbsp;<span class='field-insert mceNonEditable'>{{ImageFormatter "+e.name+"."+t.name+"}}</span>&nbsp;</span>"):this.activeLetterEditor.execCommand("mceInsertContent",!1," <span class='insert-content'>&nbsp;<span class='field-insert mceNonEditable'>{{"+e.name+"."+t.name+"}}</span>&nbsp;</span> "),this.editorLetterBookmark=this.activeLetterEditor.selection.getBookmark(2,!0)},t.prototype.addFieldAtCursor=function(e,t){tinyMCE.activeEditor.id==this.headerEditorId?(this.editorHeaderBookmark&&this.activeHeaderEditor.selection.moveToBookmark(this.editorHeaderBookmark),this.activeHeaderEditor.execCommand("mceInsertContent",!1," <span class='insert-content'>&nbsp;<span class='field-insert mceNonEditable'>{{"+e.name+"."+t.name+"}}</span>&nbsp;</span> "),this.editorHeaderBookmark=this.activeHeaderEditor.selection.getBookmark(2,!0)):tinyMCE.activeEditor.id==this.footerEditorId&&(this.editorFooterBookmark&&this.activeFooterEditor.selection.moveToBookmark(this.editorFooterBookmark),this.activeFooterEditor.execCommand("mceInsertContent",!1," <span class='insert-content'>&nbsp;<span class='field-insert mceNonEditable'>{{"+e.name+"."+t.name+"}}</span>&nbsp;</span> "),this.editorFooterBookmark=this.activeFooterEditor.selection.getBookmark(2,!0))},t.prototype.addNewCustomField=function(){var e=this;this._modal.open({templateUrl:"createCustomField",controller:a,controllerAs:"ctrl",windowClass:"full-screen-modal",keyboard:!1,backdrop:"static",resolve:{templateDetails:function(){return angular.copy(e.letterDetailsModel)}}}).result.then(function(t){var i=e.letterAttributes.find(function(e){return"CustomAttributes"==e.name}),n=e.letterHeaderAttributes.find(function(e){return"CustomAttributes"==e.name});i.fields=e.letterDetailsModel.customFields=t,n.fields=t})},t.prototype.saveHeaders=function(){this.activateHeaderEditor?(this.letterDetailsModel.headerTemplate=this.letterHeaderModel.template,this.letterDetailsModel.headerExcerpt=this.letterHeaderModel.excerpt):(this.letterDetailsModel.headerTemplate=null,this.letterDetailsModel.headerExcerpt=null),this.activateFooterEditor?(this.letterDetailsModel.footerTemplate=this.letterFooterModel.template,this.letterDetailsModel.footerExcerpt=this.letterFooterModel.excerpt):(this.letterDetailsModel.footerTemplate=null,this.letterDetailsModel.footerExcerpt=null)},t.prototype.saveLetterTemplate=function(){var e=this;this.saveHeaders(),this.letterDetailsModel.template.trim().length>0?this.employeeLetterService.saveLetterTemplate(this.letterDetailsModel).then(function(t){t.id?(e.letterDetailsModel.id=t.id,e.notificationService.success("Employee Letter Saved Successfully."),e.rootScope.$broadcast("createLetterTemplate",{model:e.letterDetailsModel}),e._modalInstance.close(),e.dismissModalAndRedirect()):e.notificationService.success("Unable to save Employee Letter")}):this.notificationService.error("Template cannot be empty.")},t.prototype.updateLetterTemplate=function(){var e=this;this.saveHeaders(),this.letterDetailsModel.template.trim().length>0?this.employeeLetterService.updateLetterTemplate(this.letterDetailsModel.id,this.letterDetailsModel).then(function(t){null!=t.updateTemplate?(e.notificationService.success("Employee Letter Updated Successfully."),e.letterDetailsModel=t.updateTemplate,e.rootScope.$broadcast("createLetterTemplate",{model:e.letterDetailsModel}),e._modalInstance.close({model:e.letterDetailsModel}),e.dismissModalAndRedirect()):e.notificationService.error("An error occurred while updating letter template.")}):this.notificationService.error("Template cannot be empty.")},t.prototype.showPreview=function(){var e=this;if(this.saveHeaders(),this.letterDetailsModel.template.trim().length>0){var t=angular.copy(this.letterDetailsModel);t.id=null,this.employeeLetterService.getLetterTemplatePreview(t).then(function(t){e._scope.pdfUrl="data:application/pdf;base64,"+t.pdfString,e._modal.open({templateUrl:"rawTemplatePreview",windowClass:"full-screen-modal letter-generate-wizard",scope:e._scope,backdrop:"static"}).rendered.then(function(){e._scope.$broadcast("resizeNiceScroll",{delay:350})})},function(t){e.notificationService.error("An error occurred while generating letter template preview.")})}else this.notificationService.error("Letter template preview cannot generated because it is empty.")},t.prototype.downloadTemplatePdf=function(){var e=angular.copy(this.letterDetailsModel);e.id=null;this.fileDownloadService.downloadFileWithPost("/api/employee/letter/template/preview/download",e)},t.prototype.dismissModalAndRedirect=function(){this._modalInstance.dismiss(),location.href="/ui/#/org/documents/letters/templates"},t.$inject=["$scope","$q","$uibModal","$uibModalInstance","SharedModel","LetterTemplateTypes","EmployeeLetterService","NotificationService","editTemplate","AppSettings","$rootScope","FileDownloadService","LetterSizes","BorderSizes","FieldTypes","$stateParams"],t}();t.CreateLetterTemplateController=r;var a=function(){function t(t,i,n,o,r){var a=this;this._scope=t,this.employeeLetterService=i,this.templateDetails=n,this.modalInstance=o,this.notificationService=r,0==this.templateDetails.customFields.length&&(this.templateDetails.customFields=[new e.Models.CustomFieldModel("click to edit label",e.Models.CustomFieldType.TextBox,[],!1)]),this._scope.$on("deleteCustomComponent",function(e,t){var i=a.templateDetails.customFields.indexOf(t.fieldModel);i>-1&&a.templateDetails.customFields.splice(i,1)})}return t.prototype.createNewCustomField=function(){this.templateDetails.customFields.push(new e.Models.CustomFieldModel("click to edit label",e.Models.CustomFieldType.TextBox,[],!1))},t.prototype.saveCustomFields=function(){var e=this.templateDetails.customFields.map(function(e){return e.title});e.some(function(t,i){return e.indexOf(t)!=i})?this.notificationService.information("A field with same name already exists. Please use a different name."):this.modalInstance.close(this.templateDetails.customFields)},t.$inject=["$scope","EmployeeLetterService","templateDetails","$uibModalInstance","NotificationService"],t}();t.ManageCustomFieldController=a;var s=function(){function t(e,t){this._scope=e,this.customFieldTypes=t}return t.prototype.fieldTypeChange=function(){this.fieldModel.fieldElementType!=e.Models.CustomFieldType.DropDown&&this.fieldModel.fieldElementType!=e.Models.CustomFieldType.Radio||0!=this.fieldModel.fieldOptions.length||(this.fieldModel.fieldOptions.push("option 1"),this.fieldModel.fieldOptions.push("option 2"))},t.prototype.addNewOption=function(){var e=this.fieldModel.fieldOptions.length+1;this.fieldModel.fieldOptions.push("option "+e.toString())},t.prototype.removeOption=function(e){var t=this.fieldModel.fieldOptions.indexOf(e);t>-1&&this.fieldModel.fieldOptions.length>1&&this.fieldModel.fieldOptions.splice(t,1)},t.prototype.deleteField=function(){this._scope.$emit("deleteCustomComponent",{fieldModel:this.fieldModel})},t.$inject=["$scope","CustomFieldTypes"],t}();t.CustomFieldController=s;var l=function(){function t(e,t,i,n,o,r,a,s,l,c,p,u,d){var m=this;this._scope=e,this.generateTemplate=t,this.sharedModel=i,this.employeeLookupService=n,this._q=o,this.notificationService=r,this.employeeLetterService=a,this.modalInstance=s,this.appSettings=l,this.dialogs=c,this.rootScope=p,this.fileDownloadService=u,this._stateParams=d,this.downloadDocxLetterPreview=function(){if(m.generateTemplate.template.trim().length>0){angular.copy(m.generateTemplate);var e="/api/employee/letter/template/docxpreview?templateId="+m.generateTemplate.id+"&employeeId="+m.letterEmployee.id,t=JSON.stringify(m.customFieldData);t.length>2&&(e+="&customFieldData="+t),m.fileDownloadService.downloadFile(e)}else m.notificationService.error("Letter template preview cannot generated because it is empty.")},this.wizardSteps=[new this.sharedModel.Step({title:"Field Details",name:"letterFieldDetails",template:"letterFieldDetails",index:1,valid:!1}),new this.sharedModel.Step({title:"Generate Options",name:"letterGenerateSaveOptions",template:"letterGenerateSaveOptions",index:2,valid:!1})],this.currentStep=this.wizardSteps[0],this.scrollSettings=angular.copy(l.scrollSettings),this.employeeLetterService.getTemplate(this._stateParams.id).then(function(e){m.generateTemplate=e,m.prepareCustomFields()})}return t.prototype.prepareCustomFields=function(){this.applicableCustomFields=this.generateTemplate.customFields.filter(function(e){return e.isUsed}),this.applicableCustomFields.forEach(function(e){e.writable=!0,e[e.name]=""}),this.customFieldData={}},t.prototype.gotoStep=function(e){var t=this.wizardSteps.find(function(t){return t.index==e-1});if(t&&t.valid||!t){var i=this.wizardSteps.find(function(t){return t.index==e});i&&(this.currentStep=i)}},t.prototype.employeeSelected=function(e){var t=this;(null==e.reportingTo||0==e.reportingTo)&&this.generateTemplate.excerpt.indexOf("{{ReportingManager")>-1&&this.dialogs.confirm("Reporting Manager Not Assigned",e.displayName+" has no reporting Manager, but Letter requires Reporting Manager Data.Do you want to proceed ?").result.then(function(e){},function(e){t.notificationService.success("Letter Generation Stopped."),t.modalInstance.close()})},t.prototype.getMatchedEmployees=function(e){if(e&&e.length>=2){var t=this._q.defer();return this.employeeLookupService.searchAllEmployees(e).then(function(e){0==e.length&&e.push({noResults:!0}),t.resolve(e)}),t.promise}},t.prototype.saveLetterFieldDetails=function(){var t=this;if(this.letterDetailsFillForm.letterDetailsFill.$valid&&this.letterEmployee.id){var i=!0;if(this.applicableCustomFields.forEach(function(e){(!e[e.name]||e[e.name]&&0==e[e.name].length)&&(i=!1)}),!i)return $(".custom-control").addClass("form-invalid"),this.wizardSteps[0].valid=!1,void this.notificationService.error("Information in custom fields is invalid, please correct the information and try again.");this.wizardSteps[0].valid=!0,this.applicableCustomFields.forEach(function(e){t.customFieldData[e.name]=e[e.name]}),this.employeeLetterService.getEmployeeLetterPreview(this.generateTemplate.id,new e.Models.GenerateLetterDetails(this.letterEmployee.id,this.customFieldData,!1)).then(function(e){t.generatePdfPreviewUrl(e.pdfContent),t.notificationService.success("Letter details saved successfully."),t.currentStep.valid=!0,t.gotoStep(2)})}else $(".custom-control").addClass("form-invalid")},t.prototype.generatePdfPreviewUrl=function(e){this._scope.pdfUrl="data:application/pdf;base64,"+e},t.prototype.downloadLetterPdf=function(){var t="/api/employee/letter/employeeletter/"+this.generateTemplate.id+"/download";this.fileDownloadService.downloadFileWithPost(t,new e.Models.GenerateLetterDetails(this.letterEmployee.id,this.customFieldData,!1))},t.prototype.generateAndFinish=function(){var t=this;this.employeeLetterService.saveEmployeeLetter(this.generateTemplate.id,new e.Models.GenerateLetterDetails(this.letterEmployee.id,this.customFieldData,this.saveInDocuments)).then(function(e){e.isSaved?(t.notificationService.success("Letter Generated Successfully"),t.modalInstance.close(e.generateHistory),t.rootScope.$broadcast("letterGenerateComplete",{history:e.generateHistory,templateId:t.generateTemplate.id}),location.href="/ui/#/org/documents/letters/templates"):t.notificationService.error("An error occurred while generating a letter. Please try again.")})},t.prototype.dismissModalAndRedirect=function(){this.modalInstance.dismiss(),location.href="/ui/#/org/documents/letters/templates"},t.$inject=["$scope","generateTemplate","SharedModel","EmployeeLookupService","$q","NotificationService","EmployeeLetterService","$uibModalInstance","AppSettings","dialogs","$rootScope","FileDownloadService","$stateParams"],t}();t.LetterGenerateWizardController=l;var c=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y){var h=this;this._scope=t,this.generateTemplate=i,this.sharedModel=n,this.lookupServices=o,this.publicProfileServices=r,this._q=a,this.notificationService=s,this.employeeLetterService=l,this.modalInstance=c,this.appSettings=p,this.dialogs=u,this.rootScope=d,this.fileDownloadService=m,this._stateParams=y,this.customFieldData={},this.saveDocuments=!1,this.letterGenerationRequest=new e.Models.LetterGenerationBatchRequest({}),this.isGroupbyLocation=!1,this.disableGenerateButton=!1,this.downloadDocxLetterPreview=function(){if(h.generateTemplate.template.trim().length>0){angular.copy(h.generateTemplate);var e="/api/employee/letter/template/docxpreview?templateId="+h.generateTemplate.id+"&employeeId="+h.visibleEmployee.id;h.fileDownloadService.downloadFile(e)}else h.notificationService.error("Letter template preview cannot generated because it is empty.")},this.wizardSteps=[new this.sharedModel.Step({title:"Select Employees",name:"bulkEmployeeSelection",template:"bulkEmployeeSelection",index:1,valid:!1}),new this.sharedModel.Step({title:"preview letter",name:"previewLetters",template:"previewLetters",index:2,valid:!1})],this.employeeLetterService.getTemplate(this._stateParams.id).then(function(e){h.generateTemplate=e,h.letterGenerationRequest.letterTemplateId=h.generateTemplate.id}),this._q.all([this.lookupServices.lookup.query({id:"departments"}).$promise,this.lookupServices.lookup.query({id:"locations"}).$promise,this.employeeLetterService.getEmployees()]).then(function(e){h.departments=e[0],h.locations=e[1],h.employeeList=e[2],h.initailizeGroupData()}),this.currentStep=this.wizardSteps[0],this.scrollSettings=angular.copy(p.scrollSettings),this.selectionCriteria()}return t.prototype.initailizeGroupData=function(){var e=this;this.departmentsViewModel=[],this.departments.forEach(function(t){var i=e.employeeList.filter(function(e){return e.departmentId==t.id});i.length>0&&(t.employees=i,e.departmentsViewModel.push(t))}),this.locationsViewModel=[],this.locations.forEach(function(t){var i=e.employeeList.filter(function(e){return e.locationId==t.id});i.length>0&&(t.employees=i,e.locationsViewModel.push(t))})},t.prototype.selectionCriteria=function(){this.criteria==this.departments?this.criteriaID="departmentId":this.criteriaID="locationId"},t.prototype.gotoStep=function(e){var t=this.wizardSteps.find(function(t){return t.index==e});if(t&&t.valid||!t){var i=this.wizardSteps.find(function(t){return t.index==e+1});i&&(this.currentStep=i)}},t.prototype.toggleAllEmployees=function(e,t){e.employees.forEach(function(e){e.isSelected=t.currentTarget.checked}),this.setSelectionForViews()},t.prototype.setSelectionForViews=function(){this.locationsViewModel.forEach(function(e){var t=e.employees.filter(function(e){return e.isSelected});e.isChecked=e.employees.length==t.length}),this.departmentsViewModel.forEach(function(e){var t=e.employees.filter(function(e){return e.isSelected});e.isChecked=e.employees.length==t.length})},t.prototype.updateEmployeeSelection=function(e){var t=this.locationsViewModel.filter(function(t){return t.id==e.locationId})[0],i=t.employees.filter(function(e){return e.isSelected});t.isChecked=i.length==t.employees.length;var n=this.departmentsViewModel.filter(function(t){return t.id==e.departmentId})[0],o=n.employees.filter(function(e){return e.isSelected});n.isChecked=o.length==n.employees.length},t.prototype.toggleDropDown=function(e){e.hide=!e.hide},t.prototype.saveLetterFieldDetails=function(){var e=this;this.employeesSelected=[],angular.forEach(this.employeeList.filter(function(e){return e.isSelected}),function(t){e.employeesSelected.push(t)}),0!=this.employeesSelected.length?(this.currentStep.valid=!0,this.gotoStep(1),this.currentIndex=0,this.visibleEmployee=this.employeesSelected[0],this.createTemplateForEmployee(this.visibleEmployee.id)):this.notificationService.error("Please select at least one employee.")},t.prototype.createTemplateForEmployee=function(t){var i=this;this._scope.$broadcast("resetPdfCanvas"),this.employeeLetterService.getEmployeeLetterPreview(this.generateTemplate.id,new e.Models.GenerateLetterDetails(t,this.customFieldData,!1)).then(function(e){i.generatePdfPreviewUrl(e.pdfContent)})},t.prototype.createTemplateForNextEmployee=function(e){this.currentIndex<this.employeesSelected.length-1&&(this.visibleEmployee=this.employeesSelected[++this.currentIndex],this.createTemplateForEmployee(this.visibleEmployee.id))},t.prototype.createTemplateForPreviousEmployee=function(e){this.currentIndex>0&&(this.visibleEmployee=this.employeesSelected[--this.currentIndex],this.createTemplateForEmployee(this.visibleEmployee.id))},t.prototype.generatePdfPreviewUrl=function(e){this._scope.pdfUrl="data:application/pdf;base64,"+e},t.prototype.downloadLetterPdf=function(){var t="/api/employee/letter/employeeletter/"+this.generateTemplate.id+"/download";this.fileDownloadService.downloadFileWithPost(t,new e.Models.GenerateLetterDetails(this.visibleEmployee.id,this.customFieldData,!1))},t.prototype.generateAndFinish=function(){var e=this;this.disableGenerateButton=!0,this.letterGenerationRequest.employeeIds=new Array,this.employeesSelected.forEach(function(t){e.letterGenerationRequest.employeeIds.push(t.id)}),this.employeeLetterService.registerLetterGenerationBatchRequest(this.letterGenerationRequest).then(function(t){e.notificationService.success("Letters generated successfully."),e.modalInstance.close(),e.disableGenerateButton=!1,location.href="/ui/#/org/documents/letters/templates"},function(t){e.notificationService.error("An error occurred while generating a letter. Please try again."),e.disableGenerateButton=!1})},t.prototype.dismissModalAndRedirect=function(){this.modalInstance.dismiss(),location.href="/ui/#/org/documents/letters/templates"},t.$inject=["$scope","generateTemplate","SharedModel","LookupServices","PublicProfileServices","$q","NotificationService","EmployeeLetterService","$uibModalInstance","AppSettings","dialogs","$rootScope","FileDownloadService","$stateParams"],t}();t.BulkLetterGenerateWizardController=c;var p=function(){function e(e,t,i,n,o,r){var a=this;this.modalInstance=e,this.letter=t,this.appSettings=i,this.blobContainers=n,this.employeeLetterService=o,this.notificationService=r,this.disableSendButton=!1,this.sendEmail=function(){a.disableSendButton||(a.disableSendButton=!0,a.letter.attachments=angular.copy(a.attachments),a.letter.attachments.splice(0,1),a.employeeLetterService.emailEmployeeLetter(a.letter).then(function(e){a.disableSendButton=!1,a.notificationService.success("Email sent successfully."),a.modalInstance.close()},function(e){a.disableSendButton=!1,a.notificationService.error("An error occurred while sending the email.")}))},this.cancelEmailSending=function(){a.disableSendButton||a.modalInstance.close()},this.attachments=[{name:t.name+"_"+t.employee+".pdf"}],this.fileUploadSettings=angular.copy(i.fileUploadSettings),this.fileUploadSettings.acceptFileTypes=/(\.|\/)(jpe?g|png|doc|docx|pdf|txt|xps|rtf)$/i,this.fileUploadSettings.allowedFileTypes="png,jpg,jpeg,doc,docx,pdf,rtf,xps,txt",this.fileUploadSettings.maxNumberOfFiles=10,this.fileUploadSettings.maxFileSize=1e6,this.fileUploadSettings.dragZone="#dragZone"}return e.$inject=["$uibModalInstance","letter","AppSettings","BlobContainers","EmployeeLetterService","NotificationService"],e}();t.EmailLetterController=p}(e.Components||(e.Components={}))}(e.Letters||(e.Letters={}))}(Employee||(Employee={})),angular.module("xhr").controller("CreateLetterTemplateController",Employee.Letters.Components.CreateLetterTemplateController).controller("EmployeeLettersController",Employee.Letters.Components.EmployeeLettersController).controller("GeneratedLettersController",Employee.Letters.Components.GeneratedLettersController).controller("LetterTemplatesController",Employee.Letters.Components.LetterTemplatesController).controller("CustomFieldController",Employee.Letters.Components.CustomFieldController).controller("LetterGenerateWizardController",Employee.Letters.Components.LetterGenerateWizardController).controller("BulkLetterGenerateWizardController",Employee.Letters.Components.BulkLetterGenerateWizardController);__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();function ImageField(){return{scope:{},controller:Employee.Profile.CutomFields.Components.ImageFieldController,controllerAs:"ctrl",bindToController:{field:"=",submitted:"="},templateUrl:"imagePreviewTemplate"}}!function(e){!function(e){!function(e){!function(e){e[e.EmployeeLetter=0]="EmployeeLetter",e[e.HiringLetter=1]="HiringLetter",e[e.Others=2]="Others"}(e.LetterTemplateType||(e.LetterTemplateType={})),function(e){e[e.A3=0]="A3",e[e.A4=1]="A4",e[e.A5=2]="A5",e[e.Legal=3]="Legal",e[e.Letter=4]="Letter"}(e.LetterSize||(e.LetterSize={})),function(e){e[e.None=0]="None",e[e.HalfPoint=1]="HalfPoint",e[e.OnePoint=2]="OnePoint",e[e.OneandHalfPoint=3]="OneandHalfPoint",e[e.TwoPoint=4]="TwoPoint",e[e.ThreePoint=5]="ThreePoint",e[e.FourPoint=6]="FourPoint",e[e.SixPoint=7]="SixPoint"}(e.BorderWidth||(e.BorderWidth={}));var t=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.Portrait=0,t.Landscape=1,t[0]="Portrait",t[1]="Landscape",t}(SharedPatterns.Enum);e.PageOrientation=t;var i=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.Plainpaper=0,t.Letterhead=1,t[0]="Plainpaper",t[1]="Letterhead",t}(SharedPatterns.Enum);e.Media=i,function(e){e[e.TextBox=1]="TextBox",e[e.Radio=3]="Radio",e[e.DropDown=5]="DropDown"}(e.CustomFieldType||(e.CustomFieldType={}));var n=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.None=0,t.InProgress=1,t.Published=2,t.Failed=3,t[0]="None",t[1]="In Progress",t[2]="Completed",t[3]="Failed",t}(SharedPatterns.Enum);e.LetterPublishStatus=n,function(e){e[e.None=0]="None",e[e.Requested=1]="Requested",e[e.GenerationStarted=2]="GenerationStarted",e[e.GenerationCompleted=3]="GenerationCompleted"}(e.LetterGenerationStatus||(e.LetterGenerationStatus={}));var o=function(){function e(e){return this._constants=e,new e({EmployeeLetter:{id:0,name:"EmployeeLetter",title:"Employee Letter"},HiringLetter:{id:1,name:"HiringLetter",title:"Hiring Letter"},Others:{id:2,name:"Others",title:"Others"}})}return e.$inject=["Constants"],e}();e.LetterTemplateTypes=o;var r=function(){function e(e){return this._constants=e,new e({TextBox:{id:1,name:"TextBox",title:"Text Box"},DropDown:{id:5,name:"DropDown",title:"Dropdown"},Radio:{id:3,name:"Radio",title:"Radio Button"}})}return e.$inject=["Constants"],e}();e.CustomFieldTypes=r;var a=function(){function e(e){return this._constants=e,new e({A3:{id:0,name:"A3",title:"A3 (29.7 x 42cm)"},A4:{id:1,name:"A4",title:"A4 (21 x 29.7cm)"},A5:{id:2,name:"A3",title:"A5 (14.8 x 21cm)"},Legal:{id:3,name:"Legal",title:"Legal (21.59 x 35.56cm)"},Letter:{id:4,name:"Letter",title:"Letter (21.59 x 27.94cm)"}})}return e.$inject=["Constants"],e}();e.LetterSizes=a;var s=function(){function e(e){return this._constants=e,new e({None:{id:0,name:"None",title:"None"},HalfPoint:{id:1,name:"HalfPoint",title:"½ pt"},OnePoint:{id:2,name:"OnePoint",title:"1 pt"},OneandHalfPoint:{id:3,name:"OneandHalfPoint",title:"1½ pt"},TwoPoint:{id:4,name:"TwoPoint",title:"2 pt"},ThreePoint:{id:5,name:"ThreePoint",title:"3 pt"},FourPoint:{id:6,name:"FourPoint",title:"4 pt"},SixPoint:{id:7,name:"SixPoint",title:"6pt"}})}return e.$inject=["Constants"],e}();e.BorderSizes=s;var l=function(){return function(t){this.id=t.id,this.name=t.name,this.generatedFor=t.generatedFor,this.generatedBy=t.generatedBy,this.generatedByName=t.generatedByName,this.letterType=e.LetterTemplateType[t.letterTemplateType],this.employee=t.employee,this.generatedOn=t.generatedOn,this.storageUrl=t.storageUrl,this.attachments=new Array,this.status=t.status,this.publishedBatchId=t.publishedBatchId}}();e.PublishedLetter=l;var c=function(){return function(e){this.id=e.id,this.letterTemplateId=e.letterTemplateId,this.employeeIds=e.employeeIds||new Array,this.requestedBy=e.requestedBy,this.status=e.status,this.saveInDocuments=e.saveInDocuments,this.emailAsAttachment=e.emailAsAttachment}}();e.LetterGenerationBatchRequest=c;var p=function(){return function(e,t,i,n,o,r,a,s,l,c,p,u,d){void 0===p&&(p=[]),void 0===u&&(u=[]),void 0===d&&(d=[]),this.id=e,this.name=t,this.letterType=i,this.headerTemplate=n,this.footerTemplate=o,this.template=r,this.headerExcerpt=a,this.footerExcerpt=s,this.excerpt=l,this.pageProperties=c,this.letterFields=p,this.customFields=u,this.generateHistory=d}}();e.LetterTemplate=p;var u=function(){return function(e,t,i,n){this.name=e,this.title=t,this.isCustom=i,this.fields=n}}();e.LetterHeaderAttributes=u;var d=function(){return function(e,t,i,n){this.name=e,this.title=t,this.isCustom=i,this.fields=n}}();e.LetterAttributes=d;var m=function(){return function(e,t,i,n){this.id=e,this.name=t,this.title=i,this.attributeId=n}}();e.AttributeField=m;var y=function(){return function(e,t,i,n,o,r,a,s){this.letterSize=e,this.borderWidth=t,this.pageOrientation=i,this.media=n,this.marginTop=o,this.marginBottom=r,this.borderMarginHorizontal=a,this.borderMarginVertical=s}}();e.PageProperties=y;var h=function(){function e(e,t,i,n){this.title=e,this.fieldElementType=t,this.fieldOptions=i,this.isUsed=n}return Object.defineProperty(e.prototype,"name",{get:function(){var e=this.title.split(" ");return e.forEach(function(e){e[0].toUpperCase()}),e.join("").replace(/[^\w\s]/gi,"")},enumerable:!0,configurable:!0}),e.prototype.toJSON=function(){return{name:this.name,title:this.title,fieldElementType:this.fieldElementType,isUsed:this.isUsed,fieldOptions:this.fieldOptions}},e}();e.CustomFieldModel=h;var f=function(){return function(e,t,i){this.employeeId=e,this.customFieldData=t,this.saveInDocuments=i}}();e.GenerateLetterDetails=f;var g=function(){return function(e,t,i,n){this.contentType=e,this.location=t,this.name=i,this.size=n}}();e.Attachment=g}(e.Models||(e.Models={}))}(e.Letters||(e.Letters={}))}(Employee||(Employee={})),angular.module("xhr").factory("LetterTemplateTypes",Employee.Letters.Models.LetterTemplateTypes).factory("CustomFieldTypes",Employee.Letters.Models.CustomFieldTypes).factory("LetterSizes",Employee.Letters.Models.LetterSizes).factory("BorderSizes",Employee.Letters.Models.BorderSizes),function(e){!function(e){!function(e){var t=function(){function e(e){this.Utils=e}return e.prototype.$onInit=function(){this.guidArray=[];for(var e=0;e<=this.fieldModel.fieldOptions.length;e++)this.guidArray.push(this.Utils.getGuid().replace(/-/g,""))},e.prototype.getGuid=function(e){return this.guidArray[e]},e.$inject=["Utils"],e}();angular.module("xhr").component("customField",{templateUrl:"customFieldTemplate",controller:"CustomFieldController",controllerAs:"$ctrl",bindings:{fieldModel:"="}}).component("textField",{templateUrl:"textFieldTemplate",controller:function(){},controllerAs:"$ctrl",bindings:{fieldModel:"="}}).component("dropdownField",{templateUrl:"dropdownFieldTemplate",controllerAs:"$ctrl",controller:function(){},bindings:{fieldModel:"="}}).component("radioField",{templateUrl:"radioFieldTemplate",controllerAs:"$ctrl",controller:t,bindings:{fieldModel:"="}})}(e.Directives||(e.Directives={}))}(e.Letters||(e.Letters={}))}(Employee||(Employee={})),function(e){!function(e){!function(e){var t=function(){function e(e,t){var i=this;this.resource=e,this.q=t,this.letterService=this.resource("/api/employee/letter/:action/:id",{id:"@id",action:"@action"},{update:{method:"put"}}),this.getEmployees=function(){return i.letterService.query({action:"employees"}).$promise}}return e.prototype.saveLetterTemplate=function(e){return this.letterService.save({action:"template"},e).$promise},e.prototype.getLetterTemplatePreview=function(e){return this.letterService.save({action:"template/preview"},e).$promise},e.prototype.getAllTemplates=function(){return this.letterService.query({action:"templates"}).$promise},e.prototype.getTemplate=function(e){return this.letterService.get({action:"template",id:e}).$promise},e.prototype.getAllPublishedLetters=function(){return this.letterService.query({action:"published"}).$promise},e.prototype.getEmployeePublishedLetters=function(e){return this.letterService.query({action:"published/employee/",id:e}).$promise},e.prototype.updateLetterTemplate=function(e,t){return this.letterService.update({action:"template",id:e},t).$promise},e.prototype.deleteLetterTemplate=function(e){return this.letterService.delete({action:"template",id:e}).$promise},e.prototype.deletePublishedLetter=function(e){return this.letterService.delete({action:"published",id:e}).$promise},e.prototype.getLetterHeadersdata=function(){return this.letterService.get({action:"letterheaders"}).$promise},e.prototype.getLetterMetaData=function(){return this.letterService.get({action:"letterfields"}).$promise},e.prototype.getEmployeeLetterPreview=function(e,t){return this.letterService.save({action:"employeeletter",id:e},t).$promise},e.prototype.saveEmployeeLetter=function(e,t){return this.letterService.save({action:"saveemployeeletter",id:e},t).$promise},e.prototype.registerLetterGenerationBatchRequest=function(e){return this.letterService.save({action:"lettergenerationbatch"},e).$promise},e.prototype.emailEmployeeLetter=function(e){return this.letterService.update({action:"emailemployeeletter",id:e.id},e).$promise},e.$inject=["$resource","$q"],e}();e.EmployeeLetterService=t}(e.Services||(e.Services={}))}(e.Letters||(e.Letters={}))}(Employee||(Employee={})),function(e){!function(e){!function(e){var t=function(){function e(e,t){var i=this;this.resource=e,this.q=t,this.documentService=this.resource("/api/employee/document/:action/:id",{id:"@id",action:"@action"},{update:{method:"put"}}),this.getPendingApprovals=function(){return i.documentService.query({action:"pending"}).$promise},this.getSubmittedDocuments=function(){return i.documentService.query({action:"submitted"}).$promise},this.approveDocument=function(e){return i.documentService.update({action:"approve"},e).$promise},this.rejectDocument=function(e){return i.documentService.update({action:"reject"},e).$promise}}return e.$inject=["$resource","$q"],e}();e.EmployeeDocumentService=t}(e.Services||(e.Services={}))}(e.Documents||(e.Documents={}))}(Employee||(Employee={})),angular.module("xhr").service("EmployeeLetterService",Employee.Letters.Services.EmployeeLetterService).service("EmployeeDocumentService",Employee.Documents.Services.EmployeeDocumentService),function(e){!function(e){!function(e){!function(e){var t=function(){function e(e){this.sections=[],this.id=e.id||null,this.sections=e.sections?e.sections.map(function(e){return new i(e)}):[],this.dbStoreViewName=e.dbStoreViewName||null,this.identifier=e.identifier||null}return e.prototype.add=function(e){this.sections.push(e)},e.prototype.addAt=function(e,t){this.sections.splice(e,1,t)},e.prototype.remove=function(e){this.sections.splice(e,1)},e.prototype.removeSection=function(e){c(this.sections,e)},e}();e.ViewSetup=t;var i=function(){function e(e){this.fieldGroups=[],this.identifier=e.identifier,this.title=e.title||null,this.isSystemDefined=e.isSystemDefined||!1,this.fieldGroups=e.fieldGroups?e.fieldGroups.map(function(e){return new n(e)}):[]}return e.prototype.add=function(e){this.fieldGroups.push(e)},e.prototype.update=function(e,t){this.fieldGroups[e]=t},e.prototype.addAt=function(e,t){this.fieldGroups.splice(e,1,t)},e.prototype.remove=function(e){this.fieldGroups.splice(e,1)},e}();e.Section=i;var n=function(){function e(e){this.fields=[],this.identifier=e.identifier,this.title=e.title||null,this.canAddMultipleGroups=e.canAddMultipleGroups||!1,this.isSystemDefined=e.isSystemDefined||!1,this.fields=e.fields?e.fields.map(function(e){return new o(e)}):[]}return e.prototype.add=function(e){this.fields.push(e)},e.prototype.update=function(e,t){this.fields[e]=t},e.prototype.addAt=function(e,t){this.fields.splice(e,1,t)},e.prototype.remove=function(e){this.fields.splice(e,1)},e.prototype.removeField=function(e){var t=this.fields.find(function(t){return t.name==e.name});c(this.fields,t)},e}();e.FieldGroup=n;var o=function(){return function(e){this.fieldPermissions={},this.fieldChoices=[],this.identifier=e.identifier,this.name=e.name||l(),this.title=e.title||null,this.fieldType=e.fieldType||null,this.path=e.path||null,this.required=e.required,this.defaultValue=e.defaultValue||null,this.readOnly=e.readOnly||!1,this.formElementHint=e.formElementHint||null,this.isSystemDefined=e.isSystemDefined||!1,this.description=e.description||null,this.group=e.group||null,this.renderSettings=e.renderSettings||null,this.fieldPermissions=e.fieldPermissions||[],this.fieldChoices=e.fieldChoices||[]}}();e.Field=o;var r=function(){return function(e){this.role=e.role||null,this.visibility=e.visibility||0,this.approval=e.approval||0}}();e.FieldPermissions=r;var a=function(){return function(e){}}();e.RenderSettings=a;var s=function(){return function(e){this.numberOfRows=2}}();function l(){return Math.random().toString(36).substr(2,4)}function c(e,t){var i=e.indexOf(t);i>=0&&e.splice(i,1)}e.TextAreaRenderSetting=s,e.renderSettingsBuilder=function(e){return"textarea"===e.formElementHint?new s(e.renderSettings?JSON.parse(e.renderSettings):{}):new a({})},e.getRandomString=l,e.removeArrayElement=c;var p=function(){return function(){}}();e.JobDetailsUpdateEventModel=p,function(e){e[e.Others=0]="Others",e[e.Created=1]="Created",e[e.Updated=2]="Updated",e[e.Deleted=3]="Deleted",e[e.View=4]="View"}(e.EventType||(e.EventType={}));var u=function(){function e(){}return e.EmployeeJobDetailsUpdated="employeejobdetailsupdated",e.EmployeeJobTitleUpdated="employeejobtitleupdated",e.EmployeeLeavePlanUpdated="employeeleaveplanupdated",e.EmployeeLocationUpdated="employeelocationupdated",e.EmployeeProbationEndDateUpdated="employeeprobationenddateupdated",e.EmployeeReportingManagerUpdated="employeereportingmanagerupdated",e.EmployeeNumberUpdated="employeenumberupdated",e.EmployeeBusinessUnitUpdated="employeebusinessunitupdated",e.EmployeeDepartmentUpdated="employeedepartmentupdated",e.EmployeeCostCenterUpdated="employeecostcenterupdated",e.EmployeeAttendanceNumberUpdated="employeeattendancenumberupdated",e.EmployeeWorkerTypeUpdated="employeeworkertypeupdated",e}();e.EventTypeIdentifiers=u;var d=function(){function e(){}return e.AttendanceNumber="ATTENDANCE NUMBER",e.CostCenter="COST CENTER",e.BusinessUnit="BUSINESSUNIT",e.Department="DEPARTMENT",e.ProbationEndDate="PROBATION END DATE",e.EmployeeNumber="EMPLOYEE NUMBER",e.JobInfo="JOB INFO",e.Location="LOCATION",e.JobTitle="JOB TITLE",e.ReportingManager="REPORTING MANAGER",e.LeavePlan="LEAVE PLAN",e.WorkerType="WORKER TYPE",e}();e.FieldNames=d}(e.Model||(e.Model={}))}(e.CutomFields||(e.CutomFields={}))}(e.Profile||(e.Profile={}))}(Employee||(Employee={})),function(e){!function(e){!function(e){!function(t){var i=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m){var y=this;this._scope=t,this._modal=i,this._modalInstance=n,this.customFieldService=o,this.notificationService=r,this.fieldTypes=a,this.fieldPermissionRoles=s,this.fieldVisibility=l,this.fieldApproval=c,this._dialogs=p,this.bloodGroup=u,this.supportedViews=d,this.compositeViewType=m,this.submitted=!1,this.requestCount=0,this.isFieldTitleValid=function(e){var t=!1;return e&&y.customFieldConfig.sections.forEach(function(i){i.fieldGroups.forEach(function(i){i.fields.forEach(function(i){(y.field.identifier?i.identifier==y.field.identifier:i.name==y.field.name)||i.title.toLowerCase()!=e.toLowerCase()||(t=!0)})})}),!t},delete this.fieldTypes.Rating,this.saveInProcess=!1,this.customFieldService.getView(this.compositeViewType.EmployeeProfile.id,this.supportedViews.EmployeeProfile.value,this.supportedViews.EmployeeProfile.value).then(function(t){y.customFieldConfig=new e.Model.ViewSetup(t)})}return t.prototype.addFieldGroup=function(t,i){var n=new e.Model.FieldGroup({});n.title="Details",this.customFieldConfig.sections[t].fieldGroups.push(n)},t.prototype.deleteSection=function(e){var t=this;this._dialogs.confirm("Please Confirm","Are you sure you want to delete this section ?").result.then(function(i){t.customFieldConfig.sections.splice(e,1)})},t.prototype.deleteFieldGroup=function(e,t){var i=this;this._dialogs.confirm("Please Confirm","Are you sure want to delete this field card ?").result.then(function(n){i.customFieldConfig.sections[e].fieldGroups.splice(t,1)})},t.prototype.addNewSection=function(){var t=new e.Model.Section({});t.title="Information",this.customFieldConfig.add(t)},t.prototype.editGroupTitle=function(e){this.activeGroup&&this.activeGroup.id==e.identifier?(this.activeGroup={},this.canEditGroupTitle=!1):(this.activeGroup=angular.copy(e),this.canEditGroupTitle=!0)},t.prototype.onTypeChange=function(){null!=this.field.fieldType&&(this.field.formElementHint=this.field.fieldType,this.field.fieldChoices=[],this.field.fieldType!=this.fieldTypes.Dropdown.template&&this.field.fieldType!=this.fieldTypes.Radio.template&&this.field.fieldType!=this.fieldTypes.Checkbox.template||this.field.fieldChoices.push({value:""}))},t.prototype.sortItems=function(e,t){var i,n=t[e.currentIndex];i=e.nextElementIndex&&e.prevElementIndex?e.currentIndex>e.nextElementIndex?e.nextElementIndex:e.prevElementIndex:e.nextElementIndex?e.nextElementIndex:e.prevElementIndex,t.splice(e.currentIndex,1),t.splice(i,0,n),this._scope.$apply()},t.prototype.addChoice=function(){this.field.fieldChoices.push({value:""})},t.prototype.doesOptionExist=function(e){return null==this.field.fieldChoices.find(function(t){return t.value&&t.value.toLowerCase()==e.toLowerCase()})},t.prototype.deleteChoice=function(e,t){e.fieldChoices.splice(t,1)},t.prototype.editSectionTitle=function(e){this.activeSection&&this.activeSection.id==e.id?(this.activeSection={},this.canEditSectionTitle=!1):(this.activeSection=e,this.canEditSectionTitle=!0)},t.prototype.addField=function(t,i,n){this.sectionIndex=t,this.groupIndex=i,this.activeGroup=angular.copy(n),this.field=new e.Model.Field({}),this.renderSettings=null,this.setFieldPermissions(),this.isFieldEdit=!1,this.submitted=!1,this.requestCount=0,this.modalInstance=this._modal.open({scope:this._scope,templateUrl:"add-field-template",windowClass:"field-setting-modal"}),this.modalInstance.result.then(function(e){})},t.prototype.editField=function(t,i,n,o){this.sectionIndex=t,this.groupIndex=i;var r=angular.copy(o);this.activeGroup=angular.copy(n),this.field=new e.Model.Field(r),this.renderSettings=JSON.parse(this.field.renderSettings),["TextBox","Email","Number","url"].indexOf(o.formElementHint)>0&&(this.field.fieldType=this.fieldTypes.Textbox.template),this.setFieldPermissions(),this.isFieldEdit=!0,this.submitted=!1,this.requestCount=0,this.modalInstance=this._modal.open({scope:this._scope,templateUrl:"add-field-template",windowClass:"field-setting-modal"}),this.modalInstance.result.then(function(e){})},t.prototype.saveField=function(t){if(this.form.addFieldForm.$valid){if(this.modalInstance.close(),this.renderSettings&&(this.field.renderSettings=JSON.stringify(this.renderSettings)),this.requestCount=this.requestCount+1,1==this.requestCount){if(this.isFieldEdit){var i=angular.copy(this.field),n=t.fields.find(function(e){return e.identifier==i.identifier}),o=t.fields.indexOf(n);t.addAt(o,i)}else t.add(new e.Model.Field(this.field));this.customFieldConfig.sections[this.sectionIndex].fieldGroups[this.groupIndex]=angular.copy(t)}this.isFieldEdit=!1}},t.prototype.setFieldPermissions=function(){var t=this,i=[];this.fieldPermissionRoles.getAll().forEach(function(n){if(0!=n.id){var o=t.field.fieldPermissions.find(function(e){return e.role==n.id});i.push(new e.Model.FieldPermissions(o||{role:n.id}))}}),this.field.fieldPermissions=angular.copy(i)},t.prototype.deleteField=function(e,t){e.removeField(t),this.customFieldConfig.sections[this.sectionIndex].fieldGroups[this.groupIndex]=angular.copy(e),this.modalInstance.close()},t.prototype.getFieldRenderTemplate=function(e){if(e.formElementHint)return"Image"===e.formElementHint?"CustomFieldImage-preview":e.formElementHint+"-preview"},t.prototype.getFieldPropertyPopupTemplate=function(e){if(e.formElementHint)return["TextBox","Email","Number","url"].indexOf(e.formElementHint)>=0?"TextBox-properties":e.formElementHint+"-properties"},t.prototype.cancel=function(){var e=this;this._dialogs.confirm("Discard Changes?","Are you sure do you to discard unsaved changed?").result.then(function(t){e._modalInstance.close()})},t.prototype.saveChanges=function(){var e=this,t=this;this.saveInProcess||(this.saveInProcess=!0,this.customFieldConfig.id?this.customFieldService.updateView(this.compositeViewType.EmployeeProfile.id,this.supportedViews.EmployeeProfile.value,this.customFieldConfig).then(function(i){t._modalInstance.close({config:i}),e.saveInProcess=!1,t.notificationService.success("Employee profile configuration updated successfully")},function(i){e.saveInProcess=!1,t.notificationService.error("An error occurred while updating profile configuration.")}):(this.customFieldConfig.identifier="employeeprofile",this.customFieldService.createView(this.compositeViewType.EmployeeProfile.id,this.supportedViews.EmployeeProfile.value,this.customFieldConfig).then(function(i){t.customFieldConfig.id=i.id,t._modalInstance.close({config:i}),e.saveInProcess=!1,t.notificationService.success("Employee profile configuration saved successfully")},function(i){e.saveInProcess=!1,t.notificationService.error("An error occurred while saving profile configuration.")})))},t.$inject=["$scope","$uibModal","$uibModalInstance","CustomFieldService","NotificationService","FieldTypes","FieldPermissionRoles","FieldVisibility","FieldApproval","dialogs","BloodGroup","SupportedViews","CompositeViewType"],t}();t.EmployeeCustomFieldsController=i;var n=function(){function e(e,t,i){this._scope=e,this._notificationService=t,this._dialogs=i}return e.$inject=["$scope","NotificationService","dialogs"],e}();t.EmployeeProfileChangesController=n;var o=function(){function e(e,t,i,n,o,r,a,s,l,c){var p=this;this._scope=e,this.filter=t,this.state=i,this.employeeProfileChangesService=n,this.myTeamServices=o,this._notificationService=r,this._appSettings=a,this.relationTypes=s,this.fieldTypes=l,this.bloodGroup=c,this.pendingApprovals=[],this.pendingApprovalsCopy=[],this.selectedRequests=[],this.isHRAdmin=!1,this.isPendingApprovals=!0,this.selectedRowsCount=0,this.setGridApi=function(e){p.gridApi=e,p.gridApi.selection.on.rowSelectionChanged(p._scope,function(e){p.selectedRowsCount=p.selectedRowsCount+(e.isSelected?1:-1)}),p.gridApi.selection.on.rowSelectionChangedBatch(p._scope,function(e){p.selectedRowsCount=e[0].isSelected?p.pendingApprovals.length:0})},this.isHRAdmin="employees.reports.profilechanges"==this.state.$current.parentState,this.setGridData()}return e.prototype.setGridData=function(){var e=this;(this.isHRAdmin?this.employeeProfileChangesService.getPendingRequests():this.myTeamServices.getPendingProfileChangeRequests()).then(function(t){e.config=t.config,e.pendingApprovals=angular.copy(t.requests),e.pendingApprovalsCopy=angular.copy(t.requests),e.initializeGridSettings()})},e.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this._appSettings.gridSettings),this.gridOptions.rowTemplate='<div title="Click to view more details" data-ng-click="grid.appScope.showRequestDetails(row)" data-ng-repeat="col in colContainer.renderedColumns track by col.colDef.name" class="ui-grid-cell" ui-grid-cell></div>',this.gridOptions.columnDefs=[{field:"employeeName",cellClass:"ui-grid-cell",displayName:"Employee"},{field:"fieldLog",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.getFieldLogCount(grid.getCellValue(row,col))}} CHANGES</span></div>',cellClass:"ui-grid-cell",displayName:"Changes"},{field:"requestedOn",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{grid.getCellValue(row,col) | date : ' dd MMM yyyy' }}</span></div>",cellClass:"ui-grid-cell",displayName:"Date Updated",sort:{direction:"desc",priority:1}}],this.gridOptions.rowHeight=45,this.gridOptions.data="ctrl.pendingApprovals",this.gridOptions.multiSelect=!0,this.gridOptions.onRegisterApi=this.setGridApi,this.gridOptions.enableRowSelection=!0,this.gridOptions.appScopeProvider=this},e.prototype.getFieldLogCount=function(e){var t=this;return e.filter(function(e){return t.isHRAdmin?e.canHRAdminApprove:e.canReportingManagerApprove}).length},e.prototype.refreshData=function(){this.pendingApprovals=this.filter("filter")(this.pendingApprovalsCopy,this.filterText,!1)},e.prototype.getFieldName=function(e){return this.activeGroup.fields.find(function(t){return t.identifier==e}).title},e.prototype.getFieldStyle=function(e){return this.activeGroup.fields.find(function(t){return t.identifier==e}).renderSettings},e.prototype.getFieldValue=function(e,t){if(t){var i=this.activeGroup.fields.find(function(t){return t.identifier==e});if(0==i.fieldChoices.length)return i.formElementHint==this.fieldTypes.Date.template?this.filter("date")(new Date(t),"dd-MMM-yyyy"):t;if(i.formElementHint==this.fieldTypes.Checkbox.template){var n=[],o=JSON.parse(t);return"object"!=typeof o&&(o=JSON.parse(o)),o.forEach(function(e){var t=i.fieldChoices.find(function(t){return t.identifier==e});null!=t&&n.push(t.value)}),n.length>0?n.join(", "):"Not Available"}var r="BloodGroup"!=i.identifier?i.fieldChoices.find(function(e){return e.identifier==t}):this.bloodGroup.getById(parseInt(t));return r?"BloodGroup"!=i.identifier?r.value:r.identifier:"Not Available"}return"Not Available"},e.prototype.isImageField=function(e){return this.activeGroup.fields.find(function(t){return t.identifier==e}).fieldType==this.fieldTypes.Image.title},e.prototype.setRequest=function(e){var t=this,i=e.fieldLog[0];this.config.sections.forEach(function(e){e.fieldGroups.forEach(function(n){n.fields.find(function(e){return e.identifier==i.identifier})&&(t.activeSection=angular.copy(e),t.activeGroup=angular.copy(n))})}),this.activeGroup.canAddMultipleGroups&&this.selectedRequest.fieldLog.forEach(function(e){e.newValue=JSON.parse(e.newValue),e.originalValue=JSON.parse(e.originalValue)})},e.prototype.showRequestDetails=function(e){this.selectedRequest=angular.copy(e.entity),this.setRequest(e.entity)},e.prototype.approveRequest=function(){var e=this;(this.isHRAdmin?this.employeeProfileChangesService.approveRequest(this.selectedRequest.id,this.selectedRequest):this.myTeamServices.approveProfileChangeRequest(this.selectedRequest.id,this.selectedRequest)).then(function(t){var i=e.pendingApprovals.find(function(t){return t.id==e.selectedRequest.id}),n=e.pendingApprovals.indexOf(i);e.pendingApprovals.splice(n,1),e.pendingApprovalsCopy.splice(n,1),e.selectedRequest={},e._scope.$emit("profileChangesApprovalCountChanged",{profileChangeRequestsCount:e.pendingApprovals.length}),e._notificationService.success("Request approved successfully")},function(t){e._notificationService.error("An error occurred while approving profile change.")})},e.prototype.approveSelected=function(){var e=this,t=this.gridApi.selection.getSelectedRows();0!=t.length?(this.isHRAdmin?this.employeeProfileChangesService.bulkApproveRequests(t):this.myTeamServices.bulkApproveProfileChangeRequests(t)).then(function(i){t.forEach(function(t){var i=e.pendingApprovals.find(function(e){return e.id==t.id});e.pendingApprovals.splice(e.pendingApprovals.indexOf(i),1),e.pendingApprovalsCopy.splice(e.pendingApprovalsCopy.indexOf(i),1)}),e.gridApi.selection.clearSelectedRows(),e.selectedRowsCount=0,e._scope.$emit("profileChangesApprovalCountChanged",{profileChangeRequestsCount:e.pendingApprovals.length}),e._notificationService.success("Selected requests approved successfully"),e.selectedRequest={}},function(t){e._notificationService.error(t.data.message),e.setGridData(),e.gridApi.grid.selection.selectAll=!1}):this._notificationService.error("Please select at least one record.")},e.prototype.rejectRequest=function(){var e=this;(this.isHRAdmin?this.employeeProfileChangesService.rejectRequest(this.selectedRequest.id,this.selectedRequest):this.myTeamServices.rejectProfileChangeRequest(this.selectedRequest.id,this.selectedRequest)).then(function(t){var i=e.pendingApprovals.find(function(t){return t.id==e.selectedRequest.id}),n=e.pendingApprovals.indexOf(i);e.pendingApprovals.splice(n,1),e.pendingApprovalsCopy.splice(n,1),e.selectedRequest={},e._scope.$emit("profileChangesApprovalCountChanged",{profileChangeRequestsCount:e.pendingApprovals.length}),e._notificationService.success("Request rejected successfully")},function(t){e._notificationService.error("An error occurred while rejecting profile change.")})},e.prototype.rejectSelected=function(){var e=this,t=this.gridApi.selection.getSelectedRows();0!=t.length?(this.isHRAdmin?this.employeeProfileChangesService.bulkRejectRequests(t):this.myTeamServices.bulkRejectProfileChangeRequests(t)).then(function(i){t.forEach(function(t){var i=e.pendingApprovals.find(function(e){return e.id==t.id});e.pendingApprovals.splice(e.pendingApprovals.indexOf(i),1),e.pendingApprovalsCopy.splice(e.pendingApprovalsCopy.indexOf(i),1)}),e.selectedRowsCount=0,e.gridApi.selection.clearSelectedRows(),e._scope.$emit("profileChangesApprovalCountChanged",{profileChangeRequestsCount:e.pendingApprovals.length}),e._notificationService.success("Selected requests rejected successfully"),e.selectedRequest={}},function(t){e._notificationService.error("An error occurred while rejecting selected profile changes.")}):this._notificationService.error("Please select at least one record.")},e.prototype.getFieldRenderTemplate=function(e){return e+"-preview"},e.$inject=["$scope","$filter","$state","EmployeeProfileChangesService","MyTeamServices","NotificationService","AppSettings","RelationTypes","FieldTypes","BloodGroup"],e}();t.EmployeePendingProfileChnagesController=o;var r=function(){function e(e,t,i,n,o,r,a,s,l,c,p){var u=this;this._scope=e,this.state=t,this.employeeProfileChangesService=i,this.myTeamServices=n,this.filter=o,this._notificationService=r,this._appSettings=a,this.fieldRequestStatus=s,this.relationTypes=l,this.fieldTypes=c,this.bloodGroup=p,this.pastApprovals=[],this.pastApprovalsCopy=[],this.gridOptions={},this.isPendingApprovals=!1,this.isHRAdmin=!1,this.setGridApi=function(e){u.gridApi=e},this.isHRAdmin="employees.reports.profilechanges"==this.state.$current.parentState,(this.isHRAdmin?this.employeeProfileChangesService.getPastRequests():this.myTeamServices.getPastProfileChangeRequests()).then(function(e){u.config=e.config,u.pastApprovals=angular.copy(e.requests.filter(function(e){return!e.fieldLog.some(function(e){return"EducationDetails"==e.identifier||"MyExperience"==e.identifier})})),u.pastApprovalsCopy=angular.copy(u.pastApprovals),u.initializeGridSettings()})}return e.prototype.initializeGridSettings=function(){this.gridOptions=angular.copy(this._appSettings.gridSettings),this.gridOptions.rowTemplate='<div title="Click to view more details" data-ng-click="grid.appScope.showRequestDetails(row)" data-ng-repeat="col in colContainer.renderedColumns track by col.colDef.name" class="ui-grid-cell" ui-grid-cell></div>',this.gridOptions.columnDefs=[{field:"employeeName",cellClass:"ui-grid-cell",displayName:"Employee"},{field:"fieldLog",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.getCellValue(row,col).length}} CHANGES</span></div>',cellClass:"ui-grid-cell",displayName:"Changes"},{field:"requestedOn",cellTemplate:"<div class=\"ui-grid-cell-contents\"><span>{{grid.getCellValue(row,col) | date : ' dd MMM yyyy' }}</span></div>",cellClass:"ui-grid-cell",displayName:"Date Updated",sort:{direction:"desc",priority:1}},{field:"approverName",cellClass:"ui-grid-cell",displayName:"Approver"}],this.gridOptions.rowHeight=45,this.gridOptions.multiSelect=!1,this.gridOptions.data="ctrl.pastApprovals",this.gridOptions.onRegisterApi=this.setGridApi,this.gridOptions.appScopeProvider=this},e.prototype.refreshData=function(){this.pastApprovals=this.filter("filter")(this.pastApprovalsCopy,this.filterText,!1)},e.prototype.getFieldName=function(e){return this.activeGroup.fields.find(function(t){return t.identifier==e||t.name==e}).title},e.prototype.getFieldStyle=function(e){return this.activeGroup.fields.find(function(t){return t.identifier==e}).renderSettings},e.prototype.getFieldValue=function(e,t){if(t){var i=this.activeGroup.fields.find(function(t){return t.identifier==e});if(0==i.fieldChoices.length)return i.formElementHint==this.fieldTypes.Date.template?this.filter("date")(new Date(t),"dd-MMM-yyyy"):t;if(i.formElementHint==this.fieldTypes.Checkbox.template){var n=[],o=JSON.parse(t);return"object"!=typeof o&&(o=JSON.parse(o)),o.forEach(function(e){var t=i.fieldChoices.find(function(t){return t.identifier==e});null!=t&&n.push(t.value)}),n.length>0?n.join(", "):"Not Available"}var r="BloodGroup"!=i.identifier?i.fieldChoices.find(function(e){return e.identifier==t}):this.bloodGroup.getById(parseInt(t));return r?"BloodGroup"!=i.identifier?r.value:r.identifier:"Not Available"}return"Not Available"},e.prototype.setRequest=function(e){var t=this,i=e.fieldLog[0];this.config.sections.forEach(function(e){e.fieldGroups.forEach(function(n){n.fields.find(function(e){return e.identifier==i.identifier})&&(t.activeSection=angular.copy(e),t.activeGroup=angular.copy(n))})}),this.activeGroup.canAddMultipleGroups&&this.selectedRequest.fieldLog.forEach(function(e){e.newValue=JSON.parse(e.newValue),e.originalValue=JSON.parse(e.originalValue)})},e.prototype.isImageField=function(e){return this.activeGroup.fields.find(function(t){return t.identifier==e}).fieldType==this.fieldTypes.Image.title},e.prototype.showRequestDetails=function(e){this.selectedRequest=angular.copy(e.entity),this.setRequest(e.entity)},e.prototype.getFieldRenderTemplate=function(e){return e+"-preview"},e.$inject=["$scope","$state","EmployeeProfileChangesService","MyTeamServices","$filter","NotificationService","AppSettings","FieldRequestStatus","RelationTypes","FieldTypes","BloodGroup"],e}();t.EmployeeApprovedChangesController=r;var a=function(){function e(e,t,i){this._scope=e,this.appSettings=t,this._blobContainers=i,this.initblobSetting()}return e.prototype.initblobSetting=function(){this.fileUploadSettings=angular.copy(this.appSettings.fileUploadSettings),this.fileUploadSettings.acceptFileTypes=/(\.|\/)(jpe?g|png)$/i,this.fileUploadSettings.allowedFileTypes="png,jpg,jpeg",this.fileUploadSettings.maxFileSize=2e6,this.fileUploadSettings.dragZone="#dragZone"},e.prototype.onFileUploaded=function(e){this.field.value=e.location,this._scope.$apply()},e.$inject=["$scope","AppSettings","BlobContainers"],e}();t.ImageFieldController=a}(e.Components||(e.Components={}))}(e.CutomFields||(e.CutomFields={}))}(e.Profile||(e.Profile={}))}(Employee||(Employee={})),angular.module("xhr").controller("EmployeeCustomFieldsController",Employee.Profile.CutomFields.Components.EmployeeCustomFieldsController).controller("EmployeeProfileChangesController",Employee.Profile.CutomFields.Components.EmployeeProfileChangesController).controller("EmployeePendingProfileChnagesController",Employee.Profile.CutomFields.Components.EmployeePendingProfileChnagesController).controller("EmployeeApprovedChangesController",Employee.Profile.CutomFields.Components.EmployeeApprovedChangesController).directive("imageField",ImageField),function(e){!function(e){!function(e){!function(e){var t=function(){function e(e,t){this.resource=e,this.q=t,this.compositeViewResource=this.resource("/api/compositeviews/:compositeviewtype/:viewName/:identifier",{},{update:{method:"PUT"}}),this.compositeViewDataResource=this.resource("/api/compositeviews/:compositeviewtype/:viewName/:identifier/data",{},{update:{method:"PUT"}})}return e.prototype.getView=function(e,t,i){return this.compositeViewResource.get({compositeviewtype:e,viewName:i,identifier:t}).$promise},e.prototype.createView=function(e,t,i){return this.compositeViewResource.save({compositeviewtype:e,viewName:t},i).$promise},e.prototype.updateView=function(e,t,i){return this.compositeViewResource.update({compositeviewtype:e,viewName:t},i).$promise},e.prototype.getViewData=function(e,t,i,n){return this.compositeViewDataResource.query(angular.extend({compositeviewtype:e,identifier:t,viewName:i},n)).$promise},e.$inject=["$resource","$q"],e}();e.CustomFieldService=t;var i=function(){function e(e,t){this.resource=e,this._q=t,this.profileChangesResource=this.resource("/api/profile/changes/:action/:id",{action:"@action",id:"@id"},{update:{method:"PUT"}})}return e.prototype.getPendingRequests=function(){return this.profileChangesResource.get({action:"pending"}).$promise},e.prototype.getPendingRequestsCount=function(){return this.profileChangesResource.get({action:"pending/count"}).$promise},e.prototype.getPastRequests=function(){return this.profileChangesResource.get({action:"past"}).$promise},e.prototype.approveRequest=function(e,t){return this.profileChangesResource.update({action:"approve",id:e},t).$promise},e.prototype.bulkApproveRequests=function(e){return this.profileChangesResource.update({action:"bulkapprove"},e).$promise},e.prototype.rejectRequest=function(e,t){return this.profileChangesResource.update({action:"reject",id:e},t).$promise},e.prototype.bulkRejectRequests=function(e){return this.profileChangesResource.update({action:"bulkreject"},e).$promise},e.$inject=["$resource","$q"],e}();e.EmployeeProfileChangesService=i}(e.Services||(e.Services={}))}(e.CutomFields||(e.CutomFields={}))}(e.Profile||(e.Profile={}))}(Employee||(Employee={})),angular.module("xhr").service("CustomFieldService",Employee.Profile.CutomFields.Services.CustomFieldService).service("EmployeeProfileChangesService",Employee.Profile.CutomFields.Services.EmployeeProfileChangesService),appRoot.controller("EmployeesSummaryController",["$scope","EmployeeServices","AppSettings","$filter","Gender","WorkerType","TimeType","ExperienceRange","AgeRange","$uibModal",function(e,t,i,n,o,r,a,s,l,c){e.vm={},e.genders=o,e.workerTypes=r,e.timeTypes=a,e.ageRanges=l,e.experienceRanges=s,e.vm.employeeGenders=[],e.vm.employeeWorkerTypes=[],e.vm.employeeTimeTypes=[],e.vm.employeeWorkerTypes=[],e.vm.employeeExperiences=[],e.vm.employeeAges=[];var p=new Date,u={key:"0 employees",y:100,color:"#8B8970"},d=0,m=0,y=0,h=0,f=0,g=0,v=0,S=0,C=["#90CC6D","#E3D850","#FFB272","#FF7C7C","#C888FD","#2EB059","#555555","#483D8B","#2F4F4F","#4F4F2F","#008B8B"],w=angular.copy(i.donutChartOptions);w.height=250,w.donutRatio=.4,w.growOnHover=!1,w.tooltipContent=function(e,t,i,n){return console.log(e),'<h4 style="text-align:center;margin:10px 10px;">'+e.data.key+"</h4><p>"+e.data.y+"% </p>"};var b=function(e){return null!=C[e]?C[e]:"#"+("000000"+((1<<24)*Math.random()|0).toString(16)).slice(-6)};e.barChartOptions={chart:{type:"multiBarChart",height:120,margin:{top:40,right:20,bottom:20,left:20},reduceXTicks:!1,clipEdge:!0,staggerLabels:!1,transitionDuration:500,groupSpacing:.2,stacked:!0,tooltips:!0,tooltipContent:function(e,t,i,n,o){return"<p>"+e.data.key+": "+e.data.y+"</p>"},showLegend:!1,showControls:!1,showYAxis:!1,xAxis:{tickFormat:function(e){return e},tickPadding:6},yAxis:{axisLabelDistance:100,tickFormat:function(e){return d3.format("^,")(e)},x:function(e){return-30},tickPadding:30,tickWidth:50}}},e.vm.joiningVsAttritionChartOptions={chart:{type:"lineChart",height:120,margin:{top:20,right:20,bottom:20,left:20},x:function(e){return e.x},y:function(e){return e.y},useInteractiveGuideline:!0,interactiveLayer:{showGuideLine:!1},dispatch:{stateChange:function(e){console.log("stateChange")},changeState:function(e){console.log("changeState")},tooltipShow:function(e){console.log("tooltipShow")},tooltipHide:function(e){console.log("tooltipHide")}},xAxis:{axisLabel:"",tickFormat:function(t){return e.vm.employeesSummary.employeeCount[t].monthName.substr(0,3)}},yAxis:{axisLabel:"",axisLabelDistance:-1}}},e.vm.loginActivityChartOptions={chart:{type:"lineChart",height:120,margin:{top:20,right:20,bottom:20,left:20},x:function(e){return e.x},y:function(e){return e.y},useInteractiveGuideline:!0,interactiveLayer:{showGuideLine:!1},dispatch:{stateChange:function(e){console.log("stateChange")},changeState:function(e){console.log("changeState")},tooltipShow:function(e){console.log("tooltipShow")},tooltipHide:function(e){console.log("tooltipHide")}},xAxis:{axisLabel:"",tickFormat:function(t){return n("date")(e.vm.employeesSummary.loginActivitySummary[t].loginDate,"dd MMM")}},yAxis:{axisLabel:"",axisLabelDistance:-1}}},e.addEmployee=function(){e.modalInstance=c.open({templateUrl:"employees/addnewemployee",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"NewEmployeeController",controllerAs:"ctrl",resolve:{NewEmployeeModel:function(){return new EmployeeProfile.Model.NewEmployee({})},OfferModel:function(){return null}}})},t.employee.get({action:"dashboardsummary"},function(t){e.vm.employeesSummary=t,angular.forEach(e.vm.employeesSummary.locationEmployees,function(e,t){y+=e.employeeCount,e.color=b(t)}),angular.forEach(e.vm.employeesSummary.departmentEmployees,function(e,t){d+=e.employeeCount,e.color=b(t)}),angular.forEach(e.vm.employeesSummary.jobTitleEmployees,function(e,t){m+=e.employeeCount,e.color=b(t)}),angular.forEach(e.genders.getAll(),function(t){if(!e.vm.employeeGenders.find(function(e){return 0==e.id})){var i=e.vm.employeesSummary.employeeGenders.find(function(e){return 0==e.gender});i&&(h+=i.employees,e.vm.employeeGenders.push({id:0,name:"Not Specified",employees:i.employees,color:b(0)}))}var n=e.vm.employeesSummary.employeeGenders.find(function(e){return e.gender==t.id}),o=n?n.employees:0;h+=o,e.vm.employeeGenders.push({id:t.id,name:t.title,employees:o,color:b(t.id)})}),angular.forEach(e.timeTypes.getAll(),function(t){if(!e.vm.employeeTimeTypes.find(function(e){return 0==e.id})){var i=e.vm.employeesSummary.employeeTimeTypes.find(function(e){return 0==e.timeType});i&&(f+=i.employees,e.vm.employeeTimeTypes.push({id:0,name:"None",employees:i.employees,color:b(0)}))}var n=e.vm.employeesSummary.employeeTimeTypes.find(function(e){return e.timeType==t.id}),o=n?n.employees:0;f+=o,e.vm.employeeTimeTypes.push({id:t.id,name:t.name,employees:o,color:b(t.id)})}),angular.forEach(e.workerTypes.getAll(),function(t){if(!e.vm.employeeWorkerTypes.find(function(e){return 0==e.id})){var i=e.vm.employeesSummary.employeeWorkerTypes.find(function(e){return 0==e.workerType});i&&(g+=i.employees,e.vm.employeeWorkerTypes.push({id:0,name:"None",employees:i.employees,color:b(0)}))}var n=e.vm.employeesSummary.employeeWorkerTypes.find(function(e){return e.workerType==t.id}),o=n?n.employees:0;g+=o,e.vm.employeeWorkerTypes.push({id:t.id,name:t.name,employees:o,color:b(t.id)})}),angular.forEach(e.ageRanges.getAll(),function(t){var i=e.vm.employeesSummary.employeeAges.find(function(e){return e.ageRange==t.id}),n=i?i.employees:0;S+=n,e.vm.employeeAges.push({id:t.id,name:t.title,employees:n,color:b(t.id)})}),angular.forEach(e.experienceRanges.getAll(),function(t){var i=e.vm.employeesSummary.employeeExperiences.find(function(e){return e.experienceRange==t.id}),n=i?i.employees:0;v+=n,e.vm.employeeExperiences.push({id:t.id,name:t.title,employees:n,color:b(t.id)})}),e.vm.currentSummary=e.vm.employeesSummary.employeeCount.find(function(e){return e.month==p.getMonth()+1&&e.year==p.getFullYear()}),e.vm.locationsDonutChart={chart:w},e.vm.locations=[],y>0?e.vm.employeesSummary.locationEmployees.forEach(function(t){var i=t.employeeCount/y*100;e.vm.locations.push({key:t.name+" - "+t.employeeCount,y:i,color:t.color})}):e.vm.locations.push(u),e.vm.departmentsDonutChart={chart:w},e.vm.departments=[],d>0?e.vm.employeesSummary.departmentEmployees.forEach(function(t){var i=t.employeeCount/d*100;e.vm.departments.push({key:t.name+" - "+t.employeeCount,y:i,color:t.color})}):e.vm.departments.push(u),e.vm.jobTitlesDonutChart={chart:w},e.vm.jobTitles=[],m>0?e.vm.employeesSummary.jobTitleEmployees.forEach(function(t){var i=t.employeeCount/m*100;e.vm.jobTitles.push({key:t.name+" - "+t.employeeCount,y:i,color:t.color})}):e.vm.jobTitles.push(u),e.vm.genderDonutChart={chart:w},e.vm.genders=[],h>0?e.vm.employeeGenders.forEach(function(t){var i=t.employees/h*100;e.vm.genders.push({key:t.name+" - "+t.employees,y:i,color:t.color})}):e.vm.genders.push(u),e.vm.timeTypeDonutChart={chart:w},e.vm.timeTypes=[],f>0?e.vm.employeeTimeTypes.forEach(function(t){var i=t.employees/f*100;e.vm.timeTypes.push({key:t.name+" - "+t.employees,y:i,color:t.color})}):e.vm.timeTypes.push(u),e.vm.workerTypeDonutChart={chart:w},e.vm.workerTypes=[],g>0?e.vm.employeeWorkerTypes.forEach(function(t){var i=t.employees/g*100;e.vm.workerTypes.push({key:t.name+" - "+t.employees,y:i,color:t.color})}):e.vm.workerTypes.push(u),e.vm.experienceDonutChart={chart:w},e.vm.experienceRanges=[],v>0?e.vm.employeeExperiences.forEach(function(t){var i=t.employees/v*100;e.vm.experienceRanges.push({key:t.name+" - "+t.employees,y:i,color:t.color})}):e.vm.experienceRanges.push(u),e.vm.ageRangeDonutChart={chart:w},e.vm.ageRanges=[],S>0?e.vm.employeeAges.forEach(function(t){var i=t.employees/S*100;e.vm.ageRanges.push({key:t.name+" - "+t.employees,y:i,color:t.color})}):e.vm.ageRanges.push(u),e.vm.monthlySummary=function(){for(var t=[],i=0;i<e.vm.employeesSummary.employeeCount.length;i++){var n=e.vm.employeesSummary.employeeCount[i],o=n.monthName.substr(0,3);t.push({x:o,y:n.totalEmployees?n.totalEmployees:0})}return[{key:"Total Employees",color:"#009bce",values:t}]},e.vm.joiningVsAttritionSummary=function(){var t=[],i=[];return angular.forEach(e.vm.employeesSummary.employeeCount,function(e,n){t.push({x:n,y:e.joinedEmployees}),i.push({x:n,y:e.relievedEmployees})}),[{values:t,key:"Joining",color:"#efdcff",area:!0},{values:i,key:"Attrition",color:"#a8ddfb",area:!0}]},e.vm.loginActivitySummary=function(){var t=[];return angular.forEach(e.vm.employeesSummary.loginActivitySummary,function(e,i){t.push({x:i,y:e.successfulLogins})}),[{values:t,key:"Logins",color:"#efdcff",area:!0}]}})}]),appRoot.controller("EmployeesReportDashboardController",["$scope","$q","EmployeeServices","AppSettings","$filter","$uibModal","EmployeeReportServices","EmployeeProfileChangesService","AccountStatus","$timeout",function(e,t,i,n,o,r,a,s,l,c){e.vm={};var p=function(e,t,i){return 0===e&&11===t?i:11===e&&0===t?31*(t+12)+i:31*(t+1)+i};e.inviteAll=function(){var t=r.open({templateUrl:"inviteEmployees",controller:"InviteEmployeesController",windowClass:"invite-employees",backdrop:"static",resolve:{employeesList:function(){return e.uninvitedEmployees.filter(function(e){return e.invitationStatus==l.notInvited.id})}}});e.modalInstance=t,t.rendered.then(function(){c(function(){window.dispatchEvent(new Event("resize"))},200)}),t.result.then(function(t){if(t){var i=angular.copy(t);angular.forEach(i,function(t){e.uninvitedEmployees.find(function(e){return t.id==e.id}).invitationStatus=l.invited.id})}})},e.openCutomizationModal=function(){e.modalInstance=r.open({templateUrl:"profile-customize-modal",windowClass:"full-screen-modal profile-cutomize-modal",backdrop:!1,keyboard:!1,controller:"EmployeeCustomFieldsController as ctrl",controllerAs:"ctrl"})},e.addEmployee=function(){e.modalInstance=r.open({templateUrl:"employees/addnewemployee",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"NewEmployeeController",controllerAs:"ctrl",resolve:{NewEmployeeModel:function(){return new EmployeeProfile.Model.NewEmployee({})},OfferModel:function(){return null}}})},e.vm.scrollSettings=angular.copy(n.scrollSettings),t.all([i.getReportDashboardDetails(),a.getUnInvitedEmployees(),s.getPendingRequestsCount()]).then(function(t){e.vm.leavingEmployees=t[0].leavingEmployees,e.vm.newJoinees=t[0].newJoinies.sort((e,t)=>new Date(e.datejoined).getTime()-new Date(t.datejoined).getTime()),e.vm.upcomingBirthdays=t[0].upcomingBirthdays.sort((e,t)=>p((new Date).getUTCMonth(),new Date(e.dateofbirth).getUTCMonth(),new Date(e.dateofbirth).getUTCDate())-p((new Date).getUTCMonth(),new Date(t.dateofbirth).getUTCMonth(),new Date(t.dateofbirth).getUTCDate()));const i=new Date,n=31*(i.getUTCMonth()+1)+i.getUTCDate();var o=[],r=[];t[0].workAnniversaries.forEach(e=>{const t=new Date(e.datejoined);e.workAnniversaryPriority=p(i.getUTCMonth(),t.getUTCMonth(),t.getUTCDate()),e.workAnniversaryPriority>=n?r.push(e):o.push(e)}),e.vm.workAnniversaries=r.sort((e,t)=>e.workAnniversaryPriority-t.workAnniversaryPriority).concat(o.sort((e,t)=>t.workAnniversaryPriority-e.workAnniversaryPriority)),e.uninvitedEmployees=t[1],e.vm.profileChangeRequestCount=t[2].requestsCount})}]),function(e){!function(e){var t=function(){function e(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v,S,C,w,b,P,T,D,I,A,E,R,x,M,N,O,k,F,$,G,L){var q=this;this._scope=e,this._modal=t,this._modalInstance=i,this.sharedModel=n,this.notificationService=o,this.appContext=r,this.appSettings=a,this.pmsSettings=s,this._q=l,this.employeeLookupService=c,this.workerType=p,this.timeType=u,this.employeeServices=d,this.numberSeriesService=m,this._filter=y,this._state=h,this.payrollSalaryStructureService=f,this.employeeSalaryService=g,this.employeesFinanceServices=v,this.employeeFinanceServices=S,this.payrollLookUpService=C,this.salarySharedModel=w,this.paymentStatus=b,this.salaryStructureGenerateSource=P,this.appFeatures=T,this.dialogs=D,this.financeModel=I,this.newEmployeeModel=A,this.offerModel=E,this.departmentSettingsService=R,this.businessUnitService=x,this.departmentLookUpService=M,this.gender=N,this.payrollModel=O,this.usernameType=k,this.orgSettingServices=F,this.authenticationMode=$,this.customUsernameType=G,this.employeesService=L,this.model=new EmployeeProfile.Model.NewEmployee({}),this.submitted=!1,this.timeUnits=[{id:2,name:"Days"},{id:3,name:"Weeks"},{id:4,name:"Months"}],this.addSalaryFromHiro=!0,this.enableSave=!0,this.departmentGroups=[],this.allGroups=[],this.employeePayrollModel={},this.paygroups=[],this.remunerationTypes=[],this.remunerationType=Payroll.Configuration.Model.RemunerationType,this.customsalaryStructures=[],this.minimumCTC=0,this.datepickerOptions={showWeeks:!1,minDate:new Date("1900-01-01")},this.loadRoleWiseSteps=function(e,t){q.isHrExecutive=e,q.isGlobal=t,e&&!q.isEmployeeAddedFromHiro||q.addEmployeeSteps.push(new q.sharedModel.Step({title:"Salary Details",name:"employeeSalary",template:"employeeCompensationDetails",index:4,valid:!1}))},this.initializeEmployeePayroll=function(){q.employeePayrollModel.effectiveFrom=q.model.dateJoined.dateOnlyString(),q.employeePayrollModel.structureGenerateSource=q.salaryStructureGenerateSource.Range.id,q.employeePayrollModel.adhocComponents=[],q.model.salaryDetails.selectedTaxRegime="0",q.offerModel&&(q.employeePayrollModel.ctc=q.offerModel.annualSalary,q.offerModel.salaryCompensation&&(q.selectedpayGroupId=q.offerModel.salaryCompensation.payGroupId,q.employeePayrollModel.remunerationType=q.offerModel.salaryCompensation.remunerationType,q.employeePayrollModel.ctc=q.offerModel.salaryCompensation.ctc,q.employeePayrollModel.structureGenerateSource=q.offerModel.salaryCompensation.structureGenerateSource,q.employeePayrollModel.salaryStructureConfiguration=q.offerModel.salaryCompensation.salaryConfigurationIdentifier)),q.getBonusTypes().then(function(e){if(e&&(q.bonusTypes=e.map(function(e){return new q.salarySharedModel.BonusType(e)}),q.bonusTypes.unshift(new q.salarySharedModel.BonusType({title:"Create new One Time Component"}))),q.offerModel&&q.offerModel.salaryCompensation){var t=[];q.offerModel.salaryCompensation.bonusPayments.forEach(function(i){i.effectiveFrom=q.model.dateJoined,i.status=q.paymentStatus.Pending.id,e=e||[],i.componentType=q.bonusTypes.find(function(e){return e.identifier==i.bonusTypeId})||q.bonusTypes[0],i.componentType&&t.push(new q.salarySharedModel.AdhocComponent(i))}),q.employeePayrollModel.adhocComponents=t}q.hasPayrollFeature?q.getPaygroups().then(function(e){q.paygroups=e,q.selectedpayGroupId=q.selectedpayGroupId||q.paygroups[0].id,q.getPayrollConfig(q.selectedpayGroupId)}):(q.initializSalaryDetails(),q.nextStep())})},this.getPayrollConfiguration=function(e){var t=q._q.defer();return!q.isHrExecutive&&q.hasPayrollFeature?q.employeesFinanceServices.getPayrollConfig(e).then(function(e){return t.resolve(new q.payrollModel.PayrollConfiguration(e))}):t.resolve(null),t.promise},this.getBonusTypes=function(){var e=q._q.defer();return!q.isHrExecutive&&q.hasPayrollFeature?q.payrollSalaryStructureService.bonusType.query({},function(t){e.resolve(t)}):q.hasPayrollFeature?e.resolve(null):q.employeeSalaryService.bonusType.query({},function(t){e.resolve(t)}),e.promise},this.saveBonusType=function(){q.form.bonusType.$valid&&(q.hasPayrollFeature?q.payrollSalaryStructureService.bonusType.save({title:q.oneTimeComponentName}).$promise.then(function(e){q.bonusTypes.push(e),q.model.salaryDetails.currentAdhocComponent.componentType=e,q.resetNewbonusType(),q.notificationService.success("One Time Payment Type Created Successfully.")},function(e){q.notificationService.error(e.data.message),q.resetNewbonusType()}):q.employeeSalaryService.bonusType.save({title:q.oneTimeComponentName}).$promise.then(function(e){q.bonusTypes.push(e),q.model.salaryDetails.currentAdhocComponent.componentType=e,q.resetNewbonusType(),q.notificationService.success("One Time Payment Type Created Successfully.")},function(e){q.notificationService.error(e.data.message),q.resetNewbonusType()}))},this.resetNewbonusType=function(){q.createOneTimePaymentType=!1,q.oneTimeComponentName=null},this.saveAdhocComponent=function(){q.createOneTimePaymentType?q.bonusTypeErrors="Please save the bonus type":q.form.oneTimeComponents.$valid&&(q.model.salaryDetails.saveAdhocComponent(),q.resetNewbonusType())},this.updateAdhocComponent=function(){q.createOneTimePaymentType?q.bonusTypeErrors="Please save the bonus type":q.form.oneTimeComponents.$valid&&(q.model.salaryDetails.updateAdhocComponent(),q.resetNewbonusType())},this.savePayrollData=function(){if(q.addSalaryFromHiro)if(q.isHrExecutive)q.employeesService.postSalaryCompensation(q.model.id,q.offerModel.id);else{var e=q.model.salaryDetails.structureGenerateSource==q.salaryStructureGenerateSource.Range.id||null!=q.model.salaryDetails.salaryStructureConfiguration;if(q.payrollProfileInput=new Payroll.Model.Finance.EmployeePayrollProfileInput(q.model.salaryDetails),q.payrollProfileInput.employeeId=q.model.id,q.model.salaryDetails.startOnJoining&&(q.payrollProfileInput.payrollDateJoined=q.model.dateJoined.dateOnlyString()),!q.form.oneTimeComponents||q.form.oneTimeComponents.$valid&&!q.model.salaryDetails.currentAdhocComponent)if(q.form.addEmployeeForm.$valid&&e)if(q.hasPayrollFeature){var t=[];t.push(q.employeeFinanceServices.updateEmployeePayrollProfileInputs({id:q.model.id},q.payrollProfileInput)),q.isPFFilingRequired&&t.push(q.employeeFinanceServices.updateDoNotDeductPF({id:q.model.id},q.model.salaryDetails.doNotDeductPF)),q._q.all(t).then(function(e){q.payrollSalaryStructureService.addSalaryAndBonus(q.model.id,q.model.salaryDetails).then(function(e){q.notificationService.success("Employee salary details added successfully"),q._modalInstance.close(!0),q.navigateToEmployeeProfile()},function(e){q.notificationService.error(e.data.message)})})}else q.employeeSalaryService.addSalaryAndBonus(q.model.id,q.model.salaryDetails).then(function(e){q.notificationService.success("Employee salary details added successfully"),q._modalInstance.close(!0),q.navigateToEmployeeProfile()},function(e){q.notificationService.error(e.data.message)});else!e&&q.isHrExecutive&&q.dialogs.notify("Application notification","The salary structure associated with this offer has been deleted. Therefore. you cannot save the payroll details for the created employee. Please uncheck the box or skip this step.",{keyboard:!1,backdrop:"static"});else q.notificationService.error("Please save the bonus component before saving the salary details.")}else q.navigateToEmployeeProfile()},this.skipPayrollStep=function(){q.navigateToEmployeeProfile()},this.emailPattern=/^([\w\.\-]+)+@((([\-\w]+\.)+[a-zA-Z]{2,})|(([0-9]{1,3}\.){3}[0-9]{1,3}))$/,this.model=angular.copy(this.newEmployeeModel),this.modelOptions=angular.copy(a.modelBlurSettings),this.createOneTimePaymentType=!1,this.addEmployeeSteps=[new this.sharedModel.Step({title:"Basic Details",name:"basicDetails",template:"employeeBasicDetails",index:1,valid:!1}),new this.sharedModel.Step({title:"Job Details",name:"jobDetails",template:"employeeJobDetails",index:2,valid:!1}),new this.sharedModel.Step({title:"Job Filling",name:"jobFilling",template:"employeeJobFilling",index:3,valid:!1})],this.isEmployeeAddedFromHiro=!!this.offerModel,this.hasPayrollFeature=this.appContext.isFeaturePresent(this.appFeatures.Payroll.title),this.bonusTypeErrors="",this.currentStep=this.addEmployeeSteps[0],this.employeeLookupService.getAddEmployeeJobInfoLookups().then(function(e){q.jobDetails=e;var t=q.jobDetails.holidayLists.find(function(e){return e.isDefault})||{},i=q.jobDetails.leavePlans.find(function(e){return e.isDefault})||{},n=q.jobDetails.shiftPolices.find(function(e){return e&&e.isDefault})||{},o=q.jobDetails.trackingPolicies.find(function(e){return e.isDefault})||{},r=q.jobDetails.expensePolicies.find(function(e){return e.isDefault})||{},a=q.jobDetails.weeklyOffPolicies.find(function(e){return e&&e.isDefault})||{},s=q.jobDetails.attendanceCaptureSchemes.find(function(e){return e.isDefault})||{},l=q.jobDetails.noticePeriods.find(function(e){return e.isDefault})||{},c=q.appSettings.employeeDefaultSettings;q.model.leavePlanId=i.id,q.model.trackingPolicyId=o.identifier,q.model.shiftPolicyId=n.identifier,q.model.weeklyOffPolicyId=a.identifier,q.model.overtimePolicyId=null,q.model.attendanceCaptureSchemeId=s.id,q.model.holidayListId=t.id,q.model.expensePolicyId=r.id,q.model.probationPeriod=new EmployeeProfile.Model.TimePeriod(c.probationPeriod.unit,c.probationPeriod.duration),q.model.workerType=c.workerType,q.model.timeType=c.timeType,q.model.noticePeriodId=l.id}),this.numberSeriesService.getAllNumberSeries().then(function(e){q.employeeNumberSeries=e,q.employeeNumberSeries=q.employeeNumberSeries.filter(function(e){return e.isEnabled}),q.numberSeriesDict=q.employeeNumberSeries.reduce(function(e,t,i){return e[t.id]=new NumberSeries.Model.NumberSeries(t),e},{});var t=q.employeeNumberSeries.find(function(e){return e.isDefault});q.employeeNumberSeries.unshift({id:null,name:"Manually"}),q.model.numberSeriesId=null!=t?t.id:null,q.setEmployeeNumber()}),this.orgSettingServices.getAuthenticationMode().then(function(e){q.authunticationDetails=e,q.authunticationDetails.authenticationMode==q.authenticationMode.UsernameOnly.id||q.authunticationDetails.authenticationMode==q.authenticationMode.EmailOrUsername.id&&q.authunticationDetails.customUsernameType==q.customUsernameType.EmployeeNumber.id?q.isEmailRequired=q.isMobileRequired=!1:(q.isEmailRequired=q.authunticationDetails.authenticationMode!=q.authenticationMode.UsernameOnly.id,q.isMobileRequired=q.authunticationDetails.authenticationMode!=q.authenticationMode.EmailOnly.id&&q.authunticationDetails.customUsernameType==q.customUsernameType.MobileNumber.id)}),this.departmentSettingsService.getAllDepartments().then(function(e){q.departmentGroups=q.createDepartmentTree(e)})}return e.prototype.createDepartmentTree=function(e){var t=[];return e.filter(function(e){return null==e.parentGroupId}).sort(function(e,t){return e.name.toLowerCase()>t.name.toLowerCase()?1:-1}).forEach(function(i){i.depth=1,t.push(i),e.filter(function(e){return e.parentGroupId==i.id}).sort(function(e,t){return e.name.toLowerCase()>t.name.toLowerCase()?1:-1}).forEach(function(e){e.depth=2,t.push(e)})}),t},e.prototype.gotoStep=function(e){if(!this.addEmployeeSteps.find(function(t){return t.index==e-1})||e<this.currentStep.index){var t=this.addEmployeeSteps.find(function(t){return t.index==e});t&&!t.disabled&&(this.currentStep=t)}},e.prototype.setCurrentStep=function(e){var t=this.addEmployeeSteps.find(function(t){return t.index==e});t&&!t.disabled&&(this.currentStep=t)},e.prototype.nextStep=function(){this.submitted=!0,this.updateFirstStepRequiredFeilds();var e=angular.copy(this.currentStep.index);1==e?this.validateFirstStep():2==e?this.validateSecondStep():this.form.addEmployeeForm.$valid&&(this.addEmployeeSteps[e-1].valid=!0,this.setCurrentStep(e+1),this.submitted=!1),this.hasPayrollFeature||4!=this.currentStep.index||(this.submitted=!1)},e.prototype.validateFirstStep=function(){var e=this;this.model.email&&this.model.email.length>0&&this.model.mobilePhone&&this.model.mobilePhone.length>0?this._q.all([this.employeeServices.employee.get({id:0,action:"doesemailexist",email:this.model.email}).$promise,this.employeeServices.employee.get({id:0,action:"doesmobilenumberexist",mobile:this.model.mobilePhone}).$promise]).then(function(t){t[0].result||t[1].result||!e.form.addEmployeeForm.$valid||(e.addEmployeeSteps[0].valid=!0,e.setCurrentStep(2),e.submitted=!1)}):this.model.email&&this.model.email.length>0?this.employeeServices.employee.get({id:0,action:"doesemailexist",email:this.model.email},function(t){!t.result&&e.form.addEmployeeForm.$valid&&(e.addEmployeeSteps[0].valid=!0,e.setCurrentStep(2),e.submitted=!1)}):this.model.mobilePhone&&this.model.mobilePhone.length>0?this.employeeServices.employee.get({id:0,action:"doesmobilenumberexist",mobile:this.model.mobilePhone},function(t){!t.result&&e.form.addEmployeeForm.$valid&&(e.addEmployeeSteps[0].valid=!0,e.setCurrentStep(2),e.submitted=!1)}):this.authunticationDetails.authenticationMode!=this.authenticationMode.EmailOnly.id&&this.authunticationDetails.customUsernameType==this.customUsernameType.EmployeeNumber.id&&this.form.addEmployeeForm.$valid&&(this.addEmployeeSteps[0].valid=!0,this.setCurrentStep(2),this.submitted=!1)},e.prototype.validateSecondStep=function(){var e=this;this.model.employeeNumber&&this.model.employeeNumber.length>0&&this.model.attendanceNumber&&this.model.attendanceNumber.length>0?this._q.all([this.employeeServices.employee.get({id:0,action:"doesemployeenumberexist",number:this.model.employeeNumber}).$promise,this.employeeServices.employee.get({id:0,action:"doesattendancenumberexist",number:this.model.attendanceNumber}).$promise]).then(function(t){e.isDuplicateEmployeeNumber=t[0].result,e.isDuplicateAttendanceNumber=t[1].result,t[0].result||t[1].result||!e.form.addEmployeeForm.$valid||(e.addEmployeeSteps[1].valid=!0,e.setCurrentStep(3),e.submitted=!1)}):this.model.employeeNumber&&this.model.employeeNumber.length>0?this.employeeServices.employee.get({id:0,action:"doesemployeenumberexist",number:this.model.employeeNumber},function(t){e.isDuplicateEmployeeNumber=t.result,!t.result&&e.form.addEmployeeForm.$valid&&(e.addEmployeeSteps[1].valid=!0,e.setCurrentStep(3),e.submitted=!1)}):this.model.attendanceNumber&&this.model.attendanceNumber.length>0&&this.employeeServices.employee.get({id:0,action:"doesattendancenumberexist",number:this.model.attendanceNumber},function(t){e.isDuplicateAttendanceNumber=t.result,!t.result&&e.form.addEmployeeForm.$valid&&(e.addEmployeeSteps[1].valid=!0,e.setCurrentStep(3),e.submitted=!1)})},e.prototype.updateFirstStepRequiredFeilds=function(){1==this.currentStep.index&&this.authunticationDetails.authenticationMode==this.authenticationMode.EmailOrUsername.id&&this.authunticationDetails.customUsernameType==this.customUsernameType.MobileNumber.id&&(this.model.email?(this.isEmailRequired=this.model.email.length>0,this.isMobileRequired=!this.isEmailRequired):this.model.mobilePhone?(this.isMobileRequired=this.model.mobilePhone.length>0,this.isEmailRequired=!this.isMobileRequired):this.isEmailRequired=this.isMobileRequired=!0)},e.prototype.disablePreviousSteps=function(e){this.addEmployeeSteps.filter(function(t){return t.index<e}).forEach(function(e){e.disabled=!0})},e.prototype.addEmployee=function(){var e=this;this.submitted=!0;var t=angular.copy(this.currentStep.index);this.form.addEmployeeForm.$valid&&this.enableSave&&(this.enableSave=!1,this.addEmployeeSteps[t-1].valid=!0,this.modelCopy=angular.copy(this.model),this.modelCopy.dateJoined=this.modelCopy.dateJoined.dateOnlyString(),this.modelCopy.dateOfBirth=this.modelCopy.dateOfBirth.dateOnlyString(),this.hasPayrollFeature&&this.isEmployeeAddedFromHiro&&this.offerModel.identificationDetails&&(this.modelCopy.panNumber=this.offerModel.identificationDetails.panNumber,this.modelCopy.aadhaarNumber=this.offerModel.identificationDetails.aadharNumber),this.employeeServices.addEmployee(this.modelCopy).then(function(i){e.enableSave=!0,e.model.id=i.id,e.disablePreviousSteps(t+1),e.setCurrentStep(t+1),e.notificationService.success("Employee added successfully"),e.isHrExecutive&&!e.isEmployeeAddedFromHiro?(e._modalInstance.close(!0),e.navigateToEmployeeProfile()):e.isHrExecutive||e.initializeEmployeePayroll()},function(t){e.notificationService.error("An error occurred while adding an employee.")}),this.submitted=!1)},e.prototype.getTotalAdhocAmount=function(){return this.employeePayrollModel.adhocComponents.reduce(function(e,t){return e+t.amount},0)},e.prototype.getPaygroups=function(){var e=this._q.defer();return!this.isHrExecutive&&this.hasPayrollFeature?this.payrollLookUpService.getPayGroups().then(function(t){e.resolve(t.map(function(e){return new Payroll.Configuration.Model.PaygroupLookup(e)}))}):e.resolve(null),e.promise},e.prototype.getPayrollConfig=function(e){var t=this;this.initializSalaryDetails();var i=this.paygroups.find(function(t){return t.id==e});this.isESIFilingRequired=i.esiEnabled,this.isPFFilingRequired=i.allowPFOverride,this.setPFAndESIElibity(),this.payrollLookUpService.getAllRemunerationTypes(e).then(function(e){t.remunerationTypes=e.map(function(e){return new Payroll.Configuration.Model.RemunerationLookup(e)}),null!=t.model.salaryDetails.remunerationType&&void 0!=t.model.salaryDetails.remunerationType||(t.model.salaryDetails.remunerationType=t.remunerationTypes[0].type,t.onSelectRemuneration(),t.model.salaryDetails.generateSalaryStructure())}),this.payrollLookUpService.getAllCustomSalaryStructures(e).then(function(e){t.customsalaryStructures=e.map(function(e){return new Payroll.Configuration.Model.CustomSalaryStructureLookup(e)})})},e.prototype.onSelectRemuneration=function(){this.model.salaryDetails.ctc=0,this.model.salaryDetails.structureGenerateSource=this.model.salaryDetails.remunerationType==this.remunerationType.monthly?this.model.salaryDetails.generateSources.Range.id:this.model.salaryDetails.generateSources.CustomStructure.id},e.prototype.initializSalaryDetails=function(){this.model.salaryDetails=new this.salarySharedModel.SalaryAndBonusDetails({ctc:this.employeePayrollModel.ctc,effectiveFrom:this.employeePayrollModel.effectiveFrom,structureGenerateSource:this.employeePayrollModel.structureGenerateSource,employee:{id:this.model.id,name:this.model.displayName,dateOfJoined:this.model.dateJoined.dateOnlyString()},salaryStructureConfiguration:this.employeePayrollModel.salaryStructureConfiguration,generateSalaryStructure:this.payrollSalaryStructureService.generateStructureBasedPaygroup,adhocComponents:this.employeePayrollModel.adhocComponents,config:this.hasPayrollFeature?this.payrollConfig:null,hasPayrollFeature:this.hasPayrollFeature}),this.model.salaryDetails.remunerationType=this.employeePayrollModel.remunerationType,this.model.salaryDetails.payGroupId=this.selectedpayGroupId,this.model.salaryDetails.selectedTaxRegime="0",this.model.salaryDetails.enablePayroll=!0,this.model.salaryDetails.startOnJoining=!0,this.model.salaryDetails.hasPayrollFeature=this.hasPayrollFeature,this.hasPayrollFeature&&(this.model.salaryDetails.generateSalaryStructure(),this.setPFAndESIElibity())},e.prototype.setPFAndESIElibity=function(){this.model.salaryDetails.isESIEligible=!this.isESIFilingRequired&&null,this.model.salaryDetails.doNotDeductPF=!!this.isPFFilingRequired||null,this.isESIFilingRequired&&this.isPFFilingRequired?this.pfandesimessage="":this.isESIFilingRequired||this.isPFFilingRequired?this.isPFFilingRequired?this.isESIFilingRequired||(this.pfandesimessage="ESI is not applicable for the selected Pay Group"):this.pfandesimessage="Ability to override employee PF values is turned off":this.pfandesimessage="Ability to override employee PF values is turned off and ESI is not applicable for the selected Pay Group"},e.prototype.navigateToEmployeeProfile=function(){this.isGlobal?location.href="/ui/#/employee/"+this.model.id+"/job":this._state.go("employee.summary",{id:this.model.id})},e.prototype.setReportToId=function(){this.reportTo.noResults?this.reportTo=null:(this.reportingManager=this.reportTo,this.model.reportTo=this.reportTo.id)},e.prototype.doesEmailExist=function(e){var t=this,i=this._q.defer();return this.employeeServices.employee.get({id:0,action:"doesemailexist",email:e},function(e){e.result?i.resolve(!1):(t.updateFirstStepRequiredFeilds(),i.resolve(!0))}),i.promise},e.prototype.doesMobileExist=function(e){var t=this,i=this._q.defer();return this.employeeServices.employee.get({id:0,action:"doesmobilenumberexist",mobile:e},function(e){e.result?i.resolve(!1):(t.updateFirstStepRequiredFeilds(),i.resolve(!0))}),i.promise},e.prototype.doesEmployeeNumberExist=function(e){var t=this,i=this._q.defer();return e&&e.length>0?this.employeeServices.employee.get({id:0,action:"doesemployeenumberexist",number:e},function(e){t.isDuplicateEmployeeNumber=e.result,e.result?i.resolve(!1):i.resolve(!0)}):(this.isDuplicateEmployeeNumber=!1,i.resolve(!0)),i.promise},e.prototype.doesAttendanceNumberExist=function(e){var t=this,i=this._q.defer();return e&&e.length>0?this.employeeServices.employee.get({id:0,action:"doesattendancenumberexist",number:e},function(e){t.isDuplicateAttendanceNumber=e.result,e.result?i.resolve(!1):i.resolve(!0)}):(this.isDuplicateAttendanceNumber=!1,i.resolve(!0)),i.promise},e.prototype.getFilteredEmployees=function(e){if(e&&e.length>=2){var t=this._q.defer();return this.employeeLookupService.searchEmployees(e).then(function(e){0==e.length&&e.push({noResults:!0}),t.resolve(e)}),t.promise}},e.prototype.validateEmployeeNumber=function(e){return this.model.numberSeriesId?void 0:this.doesEmployeeNumberExist(e)},e.prototype.validateAttendanceNumber=function(e){return this.doesAttendanceNumberExist(e)},e.prototype.setEmployeeNumber=function(){if(this.model.numberSeriesId>0){var e=this.numberSeriesDict[this.model.numberSeriesId];if(e)return void(this.model.employeeNumber=e.getPreviewNumber())}this.model.employeeNumber=null},e.$inject=["$scope","$uibModal","$uibModalInstance","SharedModel","NotificationService","AppContext","AppSettings","PMSSettings","$q","EmployeeLookupService","WorkerType","TimeType","EmployeeServices","NumberSeriesService","$filter","$state","PayrollSalaryStructureService","EmployeeSalaryService","EmployeesFinanceServices","EmployeeFinanceServices","PayrollLookUpService","SalarySharedModel","PaymentStatus","SalaryStructureGenerateSource","AppFeatures","dialogs","FinanceModel","NewEmployeeModel","OfferModel","DepartmentSettingsService","BusinessUnitService","DepartmentLookUpService","Gender","PayrollModel","UsernameType","OrgSettingServices","AuthenticationMode","CustomUsernameType","EmployeesService"],e}();e.NewEmployeeController=t,angular.module("xhr").controller("NewEmployeeController",t)}(e.Controllers||(e.Controllers={}))}(Employee||(Employee={})),function(e){!function(t){var i=function(){function t(e,t){this.$urlRouterProvider=e,this.$stateProvider=t,this.registerRedirects(),this.registerSetupRoutes(),this.registerSettingRoutes(),this.registerPerformanceGoalRoutes(),this.registerReviewAdministrationRoutes(),this.registerSkillRoutes(),this.registerQuetionnaireTemplateRoutes(),this.registerJobfunctionRoutes(),this.registerPerformanceReportRoutes(),this.registerMyTeamRoutes(),this.registerEmployeeRoutes(),this.registerMeRoutes(),this.registerImportRoutes()}return t.prototype.registerSetupRoutes=function(){this.$stateProvider.state("performancesetup",{url:"/performancesetup",templateUrl:"performancesetup/index",controller:"PerformanceSetupController as ctrl",title:"Performance Management | Setup",resolve:{PMSSettingsView:["PerformanceSetupService","$q","$state",function(t,i,n){var o=i.defer();return t.getPerformanceSettings().then(function(t){var i=new e.Model.PMSSettingsView(t);o.resolve(i),i.isSetupCompleted&&n.go("performance")}),o.promise}]}}).state("performancesetup.wizard",{url:"/wizard",templateUrl:"performancesetup/setupwizard",controller:"SetupWizardController as ctrl",title:"Performance Management | SetUpWizard",parentState:"performancesetup",description:""}).state("performancesetup.feedbacksettings",{url:"/feedback",onEnter:["$uibModal","$state","$stateParams","PMSSettingsView",function(e,t,i,n){e.open({templateUrl:"performancesetup/feedbacksetup",windowClass:"full-screen-modal dark-modal card-cover pms-setup-wizard",backdrop:!1,keyboard:!1,controller:"FeedbackSetUpController",resolve:{PMSSettingsView:function(){return n}},controllerAs:"ctrl"}).result.finally(function(){t.go("^")})}],title:"Performance Management | Setup Wizard | FeedbackAndRecognitionSettings"}).state("performancesetup.goalsettings",{url:"/goals",onEnter:["$uibModal","$state","$stateParams","PMSSettingsView",function(e,t,i,n){e.open({templateUrl:"performancesetup/goalsconfiguration",windowClass:"full-screen-modal dark-modal card-cover pms-setup-wizard",backdrop:!1,keyboard:!1,controller:"GoalsConfigurationController",resolve:{PMSSettingsView:function(){return n}},controllerAs:"ctrl"}).result.finally(function(){t.go("^")})}],title:"Performance Management | Setup Wizard | Goals Configuration"}).state("performancesetup.reviewsetup",{url:"/reviews",onEnter:["$uibModal","$state","$stateParams","PMSSettingsView",function(e,t,i,n){e.open({templateUrl:"performancesetup/reviewsetup",windowClass:"full-screen-modal dark-modal card-cover",backdrop:!1,keyboard:!1,controller:"ReviewsConfigurationController",resolve:{PMSSettingsView:function(){return n}},controllerAs:"ctrl"}).result.finally(function(){t.go("^")})}],title:"Performance Management | Setup Wizard | Reviews Configuration"}).state("performancesetup.competencies",{url:"/competencies",templateUrl:"/performancesetup/competencies",controller:"CompetenciesSetupController as ctrl",title:"Setup | Competencies",parentState:"performancesetup",description:""}).state("performancesetup.competencies.core",{url:"/core",templateUrl:"/skill/corecompetencies",controller:"CoreCompetenciesSetupController as ctrl",title:"Setup | Core Competencies",parentState:"performancesetup.competencies",description:""}).state("performancesetup.competencies.commonsuccess",{url:"/commonsuccess",templateUrl:"/skill/commonsuccesscompetencies",controller:"CommonSuccessCompetenciesSetupController as ctrl",title:"Setup | Common Success Competencies",parentState:"performancesetup.competencies",description:""}).state("performancesetup.competencies.jobspecific",{url:"/jobspecific",templateUrl:"/skill/jobspecificcompetencies",controller:"JobSpecificCompetenciesSetupController as ctrl",title:"Setup | Job Specific Competencies",parentState:"performancesetup.competencies",description:""}).state("performancesetup.competencies.importfromkekalibrary",{url:"/import",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"skill/ImportCompetencyFromKekaLibrary",windowClass:"full-screen-modal employee-exit-modal dark-modal wizard-head action-content",backdrop:!1,keyboard:!1,controller:"ImportCompetencySetupController as ctrl"}).result.finally(function(){t.go("^")})}],title:"Setup | Import Competencies"}).state("performancesetup.corevalues",{url:"/corevalues",templateUrl:"skill/CoreValues",controller:"CoreValuesSetupController",parentState:"performancesetup",controllerAs:"ctrl",title:"Setup | Core Values"}).state("performancesetup.jobfunctions",{url:"/jobfunctions",templateUrl:"performance/jobfunctionslist",controller:"JobFunctionsSetupController",controllerAs:"ctrl",parentState:"performancesetup",title:"Setup | Job Functions"}).state("performancesetup.jobfunctions.about",{url:"/about",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"performance/AboutJobFunction",windowClass:"full-screen-modal  dark-modal action-content",backdrop:!1,keyboard:!1,controller:"AboutJobFunctionsController",controllerAs:"ctrl"}).result.finally(function(){t.go("performancesetup.jobfunctions")})}],title:"Setup | Job Functions | About"}).state("performancesetup.jobfunctions.add",{url:"/add",params:{departmentId:null},onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"performance/AddJobFunction",windowClass:"full-screen-modal employee-exit-modal dark-modal wizard-head action-content",backdrop:!1,keyboard:!1,controller:"AddJobFunctionController as ctrl",resolve:{DepartmentId:function(){return i.departmentId}}}).result.finally(function(){t.go("performancesetup.jobfunctions",{},{reload:!0})})}],title:"Setup | Add Job Functions"}).state("performancesetup.jobfunctions.edit",{url:"/edit/:id",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"performance/AddJobFunction",windowClass:"full-screen-modal employee-exit-modal dark-modal wizard-head action-content",backdrop:!1,keyboard:!1,controller:"AddJobFunctionController as ctrl",resolve:{id:function(){return i.id},DepartmentId:function(){return null}}}).result.finally(function(){t.go("performancesetup.jobfunctions",{},{reload:!0})})}],title:"Performance | Edit Job Functions"}).state("performancesetup.metricunits",{url:"/metricunits",templateUrl:"/performance/metricunits",controller:"MetricUnitSetupController",controllerAs:"ctrl",title:"Setup | Metric Units",parentState:"performancesetup"})},t.prototype.registerSettingRoutes=function(){this.$stateProvider.state("performance",{url:"/performance",templateUrl:"/performance",controller:"PerformanceController as ctrl",description:""}).state("performance.dashboard",{url:"/dashboard",templateUrl:"/performance/dashboard",controller:"PerformanceDashboardController as ctrl",title:"Performance Management | Dashboard",parentState:"performance",description:""}).state("performance.dashboard.submitfeedback",{url:"/submitfeedback",onEnter:["$uibModal","$state","$stateParams","PMSFeedbackService",function(t,i,n,o){t.open({templateUrl:"performanceemployees/submitfeedback",controller:"FeedbackSubmitController",controllerAs:"ctrl",windowClass:"full-screen-modal dark-modal submit-feedback-container",backdrop:!1,keyboard:!1,resolve:{FeedbackModel:new e.Model.Feedback({}),FeedbackService:function(){return o}}}).result.finally(function(){i.go("^")})}],title:"Performance Management | Dashboard | Submit Feedback"}).state("performance.reviews",{url:"/reviews",templateUrl:"/performance/reviews",controller:"PerformanceReviewsController as ctrl",title:"Performance Management | 360 Reviews",parentState:"performance",description:""})},t.prototype.registerPerformanceGoalRoutes=function(){this.$stateProvider.state("performance.goals",{url:"/goals",templateUrl:"/performance/goals",controller:"PerformanceGoalsController as ctrl",title:"Performance Management | Goals",parentState:"performance",description:""}).state("performance.goals.library",{url:"/library",templateUrl:"/performance/goallibrary",controller:"GoalLibraryController as ctrl",title:"Performance Management | Goals | Goal Library",parentState:"performance.goals",description:""}).state("performance.goals.goal",{url:"/details/:goalId",template:'<goal-details goal-component-service="ctrl.goalsService" can-clone-goal="true" previous-state="ctrl.previousState" previous-state-params="ctrl.previousStateParams"></goal-details>',title:"Performance Management | Goal Details",parentState:"performance.goals"}).state("performance.goals.goal.clone",{url:"/clone",template:'<goal-clone goal="ctrl.goal" goal-component-service="ctrl.goalComponentService"></goal-clone>',title:"Performance | Goal Details",parentState:"performance.goals"}).state("performance.goals.addgoal",{url:"/addgoal",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"performance/addgoal",windowClass:"full-screen-modal employee-exit-modal dark-modal wizard-head performance-commons",backdrop:!1,keyboard:!1,controller:"AddGoalController",controllerAs:"ctrl"})}],title:"Performance Management | Goals | Add New Goal"}).state("performance.goals.editgoal",{url:"/editgoal/:id",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"performance/addgoal",windowClass:"full-screen-modal employee-exit-modal dark-modal wizard-head performance-commons",backdrop:!1,keyboard:!1,controller:"AddGoalController",controllerAs:"ctrl"})}],title:"Performance Management | Goals | Add New Goal"}).state("performance.goals.goalimport",{url:"/import",title:"Goals Import | Performance Management",onEnter:["$state","$uibModal",function(e,t){t.open({templateUrl:"employeegoals/goalImport",controller:"GoalImportController",controllerAs:"ctrl",windowClass:"full-screen-modal dark-modal",keyboard:!1,backdrop:!1}).result.finally(function(){e.go("^")})}]})},t.prototype.registerReviewAdministrationRoutes=function(){this.$stateProvider.state("performance.reviews.administration",{url:"/administration"}).state("performance.reviews.administration.start",{url:"/:groupId/start"}).state("performance.reviews.administration.start.employeereviewsummary",{url:"/:cycleId/reviewsummary/:employeeId",onEnter:["$uibModal","$stateParams","$window",function(e,t,i){e.open({templateUrl:"/performance/employeereviewsummary",windowClass:"full-screen-modal dark-modal action-content performance-commons card-cover employee-review-container review-employee-container",backdrop:!1,keyboard:!1,controller:"EmployeeReviewSummaryController",controllerAs:"ctrl"}).result.finally(function(){i.location="ui/#/performance/reviews/administration/"+t.groupId+"/start/"+t.cycleId})}],title:"Performance Management | Review Summary"}).state("performance.reviews.administration.nomination",{url:"/:groupId/nomination"}).state("performance.reviews.administration.nomination.employeereviewsummary",{url:"/:cycleId/reviewsummary/:employeeId",onEnter:["$uibModal","$stateParams","$window",function(e,t,i){e.open({templateUrl:"/performance/employeereviewsummary",windowClass:"full-screen-modal dark-modal action-content performance-commons card-cover employee-review-container review-employee-container",backdrop:!1,keyboard:!1,controller:"EmployeeReviewSummaryController",controllerAs:"ctrl"}).result.finally(function(){i.location="ui/#/performance/reviews/administration/"+t.groupId+"/nomination/"+t.cycleId})}],title:"Performance Management | Review Summary"}).state("performance.reviews.administration.nomination.nominatereviewers",{url:"/:cycleId/nominatereviewers/:employeeId",title:"Nominate Reviewers | Employee",onEnter:["$uibModal","$stateParams","$window","PMSEmployeeService",function(e,t,i,n){e.open({templateUrl:"/performanceemployees/nominatereviewers",controller:"NominateReviewersModalController",windowClass:"full-screen-modal dark-modal reviewer-nomination-container performance-commons",controllerAs:"ctrl",backdrop:!1,resolve:{PerformanceService:function(){return n},IsApprover:function(){return!0}}}).result.finally(function(){i.location="ui/#/performance/reviews/administration/"+t.groupId+"/nomination/"+t.cycleId})}]}).state("performance.reviews.administration.progress",{url:"/:groupId/progress"}).state("performance.reviews.administration.progress.reviewmeeting",{url:"/:cycleId/meeting/:employeeId",title:"Informal Meeting | Employee",onEnter:["$uibModal","$stateParams","PMSEmployeeService","$window",function(e,t,i,n){e.open({templateUrl:"/performance/informalmeeting",controller:"ReviewMeetingModalController",windowClass:"full-screen-modal dark-modal reviewer-nomination-container",controllerAs:"ctrl",backdrop:!1,resolve:{EmployeeReviewDataService:function(){return i}}}).result.finally(function(){n.location="ui/#/performance/reviews/administration/"+t.groupId+"/progress/"+t.cycleId})}]}).state("performance.reviews.administration.progress.employeereviewsummary",{url:"/:cycleId/reviewsummary/:employeeId",onEnter:["$uibModal","$stateParams","$window",function(e,t,i){e.open({templateUrl:"/performance/employeereviewsummary",windowClass:"full-screen-modal dark-modal action-content performance-commons card-cover employee-review-container review-employee-container",backdrop:!1,keyboard:!1,controller:"EmployeeReviewSummaryController",controllerAs:"ctrl"}).result.finally(function(){i.location="ui/#/performance/reviews/administration/"+t.groupId+"/progress/"+t.cycleId})}],title:"Performance Management | Review Summary"}).state("performance.reviews.administration.calibration",{url:"/:groupId/calibration"}).state("performance.reviews.administration.calibration.employeereviewsummary",{url:"/:cycleId/reviewsummary/:employeeId",onEnter:["$uibModal","$stateParams","$window",function(e,t,i){e.open({templateUrl:"/performance/employeereviewsummary",windowClass:"full-screen-modal dark-modal action-content performance-commons card-cover employee-review-container review-employee-container",backdrop:!1,keyboard:!1,controller:"EmployeeReviewSummaryController",controllerAs:"ctrl"}).result.finally(function(){i.location="ui/#/performance/reviews/administration/"+t.groupId+"/calibration/"+t.cycleId})}],title:"Performance Management | Review Summary"}).state("performance.reviews.administration.finalized",{url:"/:groupId/finalized"}).state("performance.reviews.administration.finalized.employeereviewsummary",{url:"/:cycleId/reviewsummary/:employeeId",onEnter:["$uibModal","$stateParams","$window",function(e,t,i){e.open({templateUrl:"/performance/employeereviewsummary",windowClass:"full-screen-modal dark-modal action-content performance-commons card-cover employee-review-container review-employee-container",backdrop:!1,keyboard:!1,controller:"EmployeeReviewSummaryController",controllerAs:"ctrl"}).result.finally(function(){i.location="ui/#/performance/reviews/administration/"+t.groupId+"/finalized/"+t.cycleId})}],title:"Performance Management | Review Summary"}).state("performance.reviews.administration.finalized.employeepastreviewsummary",{url:"/:cycleId/pastreviewsummary/:employeeId",onEnter:["$uibModal","$stateParams","$window",function(e,t,i){e.open({templateUrl:"/performance/employeereviewsummary",windowClass:"full-screen-modal dark-modal action-content performance-commons card-cover employee-review-container",backdrop:!1,keyboard:!1,controller:"EmployeeReleasedReviewSummaryController",controllerAs:"ctrl"}).result.finally(function(){i.location="ui/#/performance/reviews/administration/"+t.groupId+"/finalized/"+t.cycleId})}],title:"Performance Management | Released Review Summary"})},t.prototype.registerSkillRoutes=function(){this.$stateProvider.state("performance.skills",{url:"/skills",templateUrl:"/skill/skills",controller:"CompetenciesController as ctrl",title:"Performance Management | Competencies",parentState:"performance",description:""}).state("performance.skills.bulkimport",{url:"/import",templateUrl:"skill/competencybulkimport",title:"Performance Management | Bulk Import",parentState:"performance.skills"}).state("performance.skills.import",{url:"/competencyimport",title:"Performance Management | Import Competencies",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"skill/CompetencyImport",controller:"ImportCompetenciesController as ctrl",windowClass:"full-screen-modal employee-exit-modal dark-modal wizard-head action-content",keyboard:!1,backdrop:!1}).result.finally(function(){t.go("performance.skills.bulkimport")})}]}).state("performance.skills.importbehaviours",{url:"/competencybehavioursimport",title:"Performance Management | Import Competency Behaviours",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"skill/CompetencyBehavioursImport",controller:"ImportCompetencyBehavioursController as ctrl",windowClass:"full-screen-modal employee-exit-modal dark-modal wizard-head action-content",keyboard:!1,backdrop:!1}).result.finally(function(){t.go("performance.skills.bulkimport")})}]}).state("performance.skills.competencies",{url:"/competencies",templateUrl:"/skill/competencies",title:"Performance Management | Competencies",parentState:"performance.skills",description:""}).state("performance.skills.competencies.core",{url:"/core",templateUrl:"/skill/corecompetencies",controller:"CoreCompetenciesController as ctrl",title:"Performance Management | Core Competencies",parentState:"performance.skills.competencies",description:""}).state("performance.skills.competencies.common",{url:"/commonsuccess",templateUrl:"/skill/commonsuccesscompetencies",controller:"CommonSuccessCompetenciesController as ctrl",title:"Performance Management | CommonSuccess Competencies",parentState:"performance.skills.competencies"}).state("performance.skills.competencies.jobspecific",{url:"/jobspecific",templateUrl:"/skill/jobspecificcompetencies",controller:"JobSpecificCompetenciesController as ctrl",title:"Performance Management | Job Specific Competencies",parentState:"performance.skills.competencies",description:""}).state("performance.skills.importfromkekalibrary",{url:"/import",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"skill/ImportCompetencyFromKekaLibrary",windowClass:"full-screen-modal employee-exit-modal dark-modal wizard-head action-content",backdrop:!1,keyboard:!1,controller:"ImportCompetencyController as ctrl"}).result.finally(function(){t.go("^")})}],title:"Performance Management | Import Competency From Keka Library"}).state("performance.skills.jobfunctionsimport",{url:"/jobfunctionsimport",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"performance/ImportJobFunction",windowClass:"full-screen-modal employee-exit-modal dark-modal wizard-head action-content",backdrop:!1,keyboard:!1,controller:"ImportJobFunctionController as ctrl"}).result.finally(function(){t.go("performance.competencies.jobfunctions")})}],title:"Performance Management | Import Job Functions"}).state("performance.skills.corevalues",{url:"/corevalues",templateUrl:"skill/CoreValues",controller:"CoreValuesController",parentState:"performance.skills",controllerAs:"ctrl",title:"Performance ManageMent | Core Values"})},t.prototype.registerQuetionnaireTemplateRoutes=function(){this.$stateProvider.state("performance.reviews.formtemplates",{url:"/questionbank",templateUrl:"/reviewquestionnaire/reviewquestionnairetemplates",controller:"ReviewQuestionnaireTemplateController as ctrl",parentState:"performance.reviews",title:"Performance Management | 360 Reviews | Review Questionnaire Templates"}).state("performance.reviews.addformtemplate",{url:"/addquestiontemplate",title:"Performance Management | 360 Reviews | Add Review Questionnaire Templates",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"/reviewquestionnaire/addreviewquestionnairetemplate",windowClass:"full-screen-modal dark-modal performance-commons",controller:"AddReviewQuestionTemplateController",controllerAs:"ctrl"}).result.finally(function(){t.go("performance.reviews.formtemplates")})}]}).state("performance.reviews.editformtemplate",{url:"/editquestiontemplate/:id",title:"Performance Management | 360 Reviews | Add Review Questionnaire Templates",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"/reviewquestionnaire/addreviewquestionnairetemplate",windowClass:"full-screen-modal dark-modal performance-commons",controller:"AddReviewQuestionTemplateController",controllerAs:"ctrl"}).result.finally(function(){t.go("performance.reviews.formtemplates")})}]})},t.prototype.registerJobfunctionRoutes=function(){this.$stateProvider.state("performance.jobfunctions",{url:"/jobfunctions",templateUrl:"/performance/jobfunctions",title:"Performance Management | Job Functions",parentState:"performance",description:""}).state("performance.jobfunctions.manage",{url:"/manage",templateUrl:"performance/jobfunctionslist",controller:"JobFunctionsController",controllerAs:"ctrl",parentState:"performance.jobfunctions",title:"Performance Management | Job Functions"}).state("performance.jobfunctions.about",{url:"/about",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"performance/aboutjobfunction",windowClass:"full-screen-modal employee-exit-modal dark-modal wizard-head action-content",backdrop:!1,keyboard:!1}).result.finally(function(){t.go("performance.jobfunctions.manage")})}],title:"Performance | About Job Functions"}).state("performance.jobfunctions.assign",{url:"/assign",templateUrl:"performance/assignjobfunctions",controller:"AssignJobFunctionsController",controllerAs:"ctrl",parentState:"performance.jobfunctions",title:"Performance Management | Assign Job Functions"}).state("performance.jobfunctions.addjobfunction",{url:"/jobfunctions/add",params:{departmentId:null},onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"performance/AddJobFunction",windowClass:"full-screen-modal employee-exit-modal dark-modal wizard-head action-content",backdrop:!1,keyboard:!1,controller:"AddJobFunctionController as ctrl",resolve:{DepartmentId:function(){return i.departmentId}}}).result.finally(function(){t.go("performance.jobfunctions")})}],title:"Performance | Add Job Functions"}).state("performance.jobfunctions.editjobfunction",{url:"/jobfunctions/edit/:id",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"performance/AddJobFunction",windowClass:"full-screen-modal employee-exit-modal dark-modal wizard-head action-content",backdrop:!1,keyboard:!1,controller:"AddJobFunctionController as ctrl",resolve:{id:function(){return i.id},DepartmentId:function(){return null}}}).result.finally(function(){t.go("performance.jobfunctions")})}],title:"Performance | Add Job Functions"})},t.prototype.registerPerformanceReportRoutes=function(){this.$stateProvider.state("performance.dashboard.releasedreviews",{url:"/releasedreviews",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"/reviewadministration/reviewsreleased",windowClass:"full-screen-modal dark-modal no-scroll",backdrop:!1,keyboard:!1,controller:"ReviewsReleasedController",controllerAs:"ctrl"}).result.finally(function(){t.go("^")})}],title:"Performance Management | Released reviews"}).state("performance.dashboard.employeesfeedback",{url:"/employeesfeedback",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"/performancereports/employeesfeedback",windowClass:"full-screen-modal dark-modal",backdrop:!1,keyboard:!1,controller:"PMSEmployeesFeedbackController",controllerAs:"ctrl"}).result.finally(function(){t.go("^")})}],title:"Performance Management | Employees Feedback"}).state("performance.dashboard.employeereviewobjectivewiseratingreport",{url:"/employeereviewparameterwiseratingreport",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"/performancereports/employeereviewobjectivewiseratingreport",windowClass:"full-screen-modal dark-modal no-scroll",backdrop:!1,keyboard:!1,controller:"EmployeeRevieweObjectiveWiseRatingReportController",controllerAs:"ctrl"}).result.finally(function(){t.go("^")})}],title:"Performance Management | Reviewer wise rating report"}).state("performance.dashboard.questionnaireoverallratingreport",{url:"/questionnaireoverallratingreport",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"/performancereports/questionnaireoverallratingreport",windowClass:"full-screen-modal dark-modal no-scroll",backdrop:!1,keyboard:!1,controller:"QuestionnaireOverallRatingReportController",controllerAs:"ctrl"}).result.finally(function(){t.go("^")})}],title:"Performance Management | Questionnaire overall rating report"}).state("performance.dashboard.goalratings",{url:"/goalratings",onEnter:["$uibModal","$state","$stateParams",function(e,t,i){e.open({templateUrl:"/performancereports/goalratings",windowClass:"full-screen-modal dark-modal no-scroll-x",backdrop:!1,keyboard:!1,controller:"EmployeeGoalRatingDetailsController",controllerAs:"ctrl"}).result.finally(function(){t.go("^")})}],title:"Goal Ratings - Detailed Report"}).state("performance.dashboard.importcompetencies",{url:"/competencyimport",title:"Performance Management | Import Competencies",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"skill/CompetencyImport",controller:"ImportCompetenciesController as ctrl",windowClass:"full-screen-modal employee-exit-modal dark-modal wizard-head action-content",keyboard:!1,backdrop:!1}).result.finally(function(){t.go("performance.dashboard")})}]}).state("performance.dashboard.importcompetencybehaviours",{url:"/competencybehavioursimport",title:"Performance Management | Import Competency Behaviours",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"skill/CompetencyBehavioursImport",controller:"ImportCompetencyBehavioursController as ctrl",windowClass:"full-screen-modal employee-exit-modal dark-modal wizard-head action-content",keyboard:!1,backdrop:!1}).result.finally(function(){t.go("performance.dashboard")})}]})},t.prototype.registerMyTeamRoutes=function(){this.$stateProvider.state("team.performance",{url:"/performance",templateUrl:"/myteamperformance/index",controller:"MyTeamPeformanceController",controllerAs:"ctrl",title:"Team | Performance",parentState:"team"}).state("team.performance.reviews",{url:"/reviews"}).state("team.performance.reviews.directreports",{url:"/directreports"}).state("team.performance.reviews.indirectreports",{url:"/indirectreports"}).state("team.performance.reviews.mydepartments",{url:"/mydepartments"}).state("team.performance.reviews.directreports.reviewsummary",{url:"/:employeeId/reviewsummary/:cycleId",title:"Team | Performance | Review Summary",onEnter:["$uibModal","$state","$stateParams","$window","MyTeamEmployeeReviewService","ReviewerType",function(e,t,i,n,o,r){e.open({templateUrl:"/reviewsummary/previewemployeereview",controller:"EmployeePastReviewPreviewController",windowClass:"full-screen-modal dark-modal action-content performance-commons card-cover employee-review-container",controllerAs:"ctrl",backdrop:!1,resolve:{ReviewAdministrationService:function(){return o},Reviewer:function(){return r.reportingManager.id}}}).result.finally(function(){this.window.location="/ui/#/myteam/performance/reviews/direct/"+i.cycleId+"/reviews"})}]}).state("team.performance.reviews.indirectreports.reviewsummary",{url:"/:employeeId/reviewsummary/:cycleId",title:"Team | Performance | Review Summary",onEnter:["$uibModal","$state","$stateParams","MyTeamEmployeeReviewService","ReviewerType",function(e,t,i,n,o){e.open({templateUrl:"/reviewsummary/previewemployeereview",controller:"EmployeePastReviewPreviewController",windowClass:"full-screen-modal dark-modal action-content performance-commons card-cover employee-review-container",controllerAs:"ctrl",backdrop:!1,resolve:{ReviewAdministrationService:function(){return n},Reviewer:function(){return o.managerOfManager.id}}}).result.finally(function(){this.window.location="/ui/#/myteam/performance/reviews/indirect/"+i.cycleId+"/reviews"})}]}).state("team.performance.reviews.mydepartments.employeereviewsummary",{url:"/:employeeId/reviewsummary/:cycleId",title:"Team | Performance | Review Summary",onEnter:["$uibModal","$state","$stateParams","MyTeamEmployeeReviewService","ReviewerType",function(e,t,i,n,o){e.open({templateUrl:"/reviewsummary/previewemployeereview",controller:"EmployeePastReviewPreviewController",windowClass:"full-screen-modal dark-modal action-content performance-commons card-cover employee-review-container",controllerAs:"ctrl",backdrop:!1,resolve:{ReviewAdministrationService:function(){return n},Reviewer:function(){return o.departmentHead.id}}}).result.finally(function(){this.window.location="/ui/#/myteam/performance/reviews/mydepartment/"+i.cycleId+"/reviews"})}]}).state("team.performance.goals",{url:"/goals",templateUrl:"/myteamperformance/goals",controller:"MyTeamGoalsController",controllerAs:"ctrl",title:"Team | Performance | Goals",parentState:"team.performance"}).state("team.performance.goal",{url:"/goal/:goalId",template:'<goal-details is-my-team-goals-page="true" can-clone-goal="true" goal-component-service="ctrl.myTeamGoalsService" previous-state="ctrl.previousState" previous-state-params="ctrl.previousStateParams"></goal-details>',title:"Team | Performance | Goal Details",parentState:"team.performance.goals"}).state("team.performance.goal.clone",{url:"/clone",template:'<goal-clone goal="ctrl.goal" goal-component-service="ctrl.goalComponentService"></goal-clone>',title:"Team | Performance | Goal Details",parentState:"team.performance"})},t.prototype.registerMeRoutes=function(){this.$stateProvider.state("me.talent",{url:"/talent",templateUrl:"/myperformance/talent",title:"My Talent",parentState:"me",controller:"MyTalentController",controllerAs:"ctrl"}).state("me.talent.summary",{url:"/summary",templateUrl:"myperformance/talentsummary",controller:"MyTalentSummaryController",controllerAs:"ctrl",title:"Summary",parentState:"me.talent"}).state("me.talent.summary.nominatereviewers",{url:"/:cycleId/nominatereviewers",title:"Me | Talent Summary | Nominate Reviewers",onEnter:["$uibModal","$state","$stateParams","MyPerformanceService",function(e,t,i,n){e.open({templateUrl:"/myperformance/nominatereviewers",controller:"NominateReviewersModalController",windowClass:"full-screen-modal dark-modal reviewer-nomination-container performance-commons",controllerAs:"ctrl",backdrop:!1,resolve:{PerformanceService:function(){return n},IsApprover:function(){return!1}}}).result.finally(function(){t.go("^",{},{reload:!0})})}]}).state("me.talent.summary.review",{url:"/:cycleId/submitreview",onEnter:["$uibModal","$state","MyPerformanceService",function(e,t,i){e.open({templateUrl:"/myperformance/reviewemployee",windowClass:"review-employee-container full-screen-modal dark-modal action-content card-cover",backdrop:!1,keyboard:!1,controller:"ReviewEmployeeModalController as ctrl",resolve:{EmployeeReviewDataService:function(){return i},IsEdit:function(){return!0}}}).result.finally(function(){t.go("^",{},{reload:!0})})}],title:"Me | Talent Summary | Review Employee"}).state("me.talent.summary.reviewmeeting",{url:"/:cycleId/meeting",title:"Me | Talent Summary | My Review",onEnter:["$uibModal","$state","$stateParams","MyPerformanceService",function(e,t,i,n){e.open({templateUrl:"/myperformance/informalmeeting",controller:"ReviewMeetingModalController",windowClass:"full-screen-modal dark-modal reviewer-nomination-container",controllerAs:"ctrl",backdrop:!1,resolve:{EmployeeReviewDataService:function(){return n}}}).result.finally(function(){t.go("^",{},{reload:!0})})}]}).state("me.talent.goals",{url:"/goals",templateUrl:"/myperformance/goals",controller:"MyPerformanceGoalsController",controllerAs:"ctrl",title:"My goals",parentState:"me.talent"}).state("me.talent.goal",{url:"/goal/:goalId",template:'<goal-details is-my-goal-page="true" goal-component-service="ctrl.goalsService" previous-state="ctrl.previousState" previous-state-params="ctrl.previousStateParams"></goal-details>',title:"Goal Details",parentState:"me.talent.goals"}).state("me.talent.reviews",{url:"/reviews",templateUrl:"/myperformance/myreviews",controller:"MyReviewsController as ctrl",title:"My Reviews",parentState:"me.talent"}).state("me.talent.reviews.nominatereviewers",{url:"/:cycleId/nominatereviewers",title:"Me | Talent | Reviews | Nominate Reviewers",onEnter:["$uibModal","$state","$stateParams","MyPerformanceService",function(e,t,i,n){e.open({templateUrl:"/myperformance/nominatereviewers",controller:"NominateReviewersModalController",windowClass:"full-screen-modal dark-modal reviewer-nomination-container performance-commons",controllerAs:"ctrl",backdrop:!1,resolve:{PerformanceService:function(){return n},IsApprover:function(){return!1}}}).result.finally(function(){t.go("^",{},{reload:!0})})}]}).state("me.talent.reviews.viewform",{url:"/viewform/:reviewId",onEnter:["$uibModal","$state",function(e,t){e.open({templateUrl:"/myperformance/SubmittedReviewSummary",windowClass:"review-employee-container full-screen-modal dark-modal action-content card-cover",backdrop:!1,keyboard:!1,controller:"SubmittedReviewSummaryController as ctrl"}).result.finally(function(){t.go("^")})}],title:"Me | Talent | Reviews | View Submitted Form"}).state("me.talent.reviews.viewnominations",{url:"/viewnominations/:cycleId",onEnter:["$uibModal","$state",function(e,t){e.open({templateUrl:"/myperformance/nominationsummary",windowClass:"review-employee-container full-screen-modal dark-modal action-content card-cover",backdrop:!1,keyboard:!1,controller:"EmployeePastNominationsSummaryController as ctrl"}).result.finally(function(){t.go("^")})}],title:"Me | Talent | Reviews | View Nominations Summary"}).state("me.talent.reviews.reviewSummary",{url:"/reviewsummary/:cycleId",title:"Me | Talent | Reviews | Review Summary",onEnter:["$uibModal","$state","MyPerformanceService","ReviewerType",function(e,t,i,n){e.open({templateUrl:"/reviewsummary/previewemployeereview",controller:"EmployeeReviewPreviewController",windowClass:"full-screen-modal dark-modal action-content performance-commons card-cover employee-review-container",controllerAs:"ctrl",backdrop:!1,resolve:{ReviewAdministrationService:function(){return i},Reviewer:function(){return n.self.id}}}).result.finally(function(){t.go("^")})}]}).state("me.talent.reviews.review",{url:"/:cycleId/submitreview",onEnter:["$uibModal","$state","MyPerformanceService",function(e,t,i){e.open({templateUrl:"/myperformance/reviewemployee",windowClass:"review-employee-container full-screen-modal dark-modal action-content card-cover",backdrop:!1,keyboard:!1,controller:"ReviewEmployeeModalController as ctrl",resolve:{EmployeeReviewDataService:function(){return i},IsEdit:function(){return!0}}}).result.finally(function(){t.go("^",{},{reload:!0})})}],title:"Me | Talent | Reviews | Submit Review"}).state("me.talent.reviews.reviewmeeting",{url:"/:cycleId/meeting",title:"Me | Talent | Reviews | Submit Meeting",onEnter:["$uibModal","$state","$stateParams","MyPerformanceService",function(e,t,i,n){e.open({templateUrl:"/myperformance/informalmeeting",controller:"ReviewMeetingModalController",windowClass:"full-screen-modal dark-modal reviewer-nomination-container",controllerAs:"ctrl",backdrop:!1,resolve:{EmployeeReviewDataService:function(){return n}}}).result.finally(function(){t.go("^",{},{reload:!0})})}]}).state("me.talent.feedback",{url:"/feedback",templateUrl:"/myperformance/feedbackreceived",controller:"MyFeedbackController",controllerAs:"ctrl",title:"My Appraisals",parentState:"me.talent"}).state("me.talent.skills",{url:"/skills",templateUrl:"/myperformance/skills",controller:"MySkillsController",controllerAs:"ctrl",title:"Competencies & Core Values",parentState:"me.talent"}).state("mytime.performance",{url:"/performance",templateUrl:"/myperformance/index",controller:"MyPerformanceController",controllerAs:"ctrl",title:"Me | Performance",parentState:"mytime"}).state("mytime.performance.summary",{url:"/summary",templateUrl:"/myperformance/performancesummary",controller:"MyPerformanceSummaryController",controllerAs:"ctrl",title:"Me | Performance | Summary",parentState:"mytime.performance"}).state("mytime.performance.goals",{url:"/goals",templateUrl:"/myperformance/goals",controller:"MyPerformanceGoalsController",controllerAs:"ctrl",title:"Me | Performance | My goals",parentState:"mytime.performance"}).state("mytime.performance.reviews",{url:"/reviews",templateUrl:"/myperformance/reviews",title:"Me | Performance | Reviews",parentState:"mytime.performance"}).state("mytime.performance.reviews.myreviews",{url:"/myreviews",templateUrl:"/myperformance/myreviews",controller:"MyReviewsController as ctrl",title:"Me | Performance | Reviews | My Reviews",parentState:"mytime.performance.reviews"}).state("mytime.performance.reviews.myreviews.viewform",{url:"/viewform/:reviewId",onEnter:["$uibModal","$state",function(e,t){e.open({templateUrl:"/myperformance/SubmittedReviewSummary",windowClass:"review-employee-container full-screen-modal dark-modal action-content card-cover",backdrop:!1,keyboard:!1,controller:"SubmittedReviewSummaryController as ctrl"}).result.finally(function(){this.window.location="/ui/#/me/performance/reviews/myreviews"})}],title:"Me | Performance | Reviews | View Submitted Form"}).state("mytime.performance.reviews.myreviews.viewnominations",{url:"/viewnominations/:cycleId",onEnter:["$uibModal","$state",function(e,t){e.open({templateUrl:"/myperformance/nominationsummary",windowClass:"review-employee-container full-screen-modal dark-modal action-content card-cover",backdrop:!1,keyboard:!1,controller:"EmployeePastNominationsSummaryController as ctrl"}).result.finally(function(){this.window.location="/ui/#/me/performance/reviews/myreviews"})}],title:"Me | Performance | Reviews | View Nominations Summary"}).state("mytime.performance.reviews.myreviews.reviewSummary",{url:"/reviewsummary/:cycleId",title:"Me | Performance Reviews | Review Summary",onEnter:["$uibModal","$state","MyPerformanceService","ReviewerType","$window",function(e,t,i,n,o){e.open({templateUrl:"/reviewsummary/previewemployeereview",controller:"EmployeeReviewPreviewController",windowClass:"full-screen-modal dark-modal action-content performance-commons card-cover employee-review-container",controllerAs:"ctrl",backdrop:!1,resolve:{ReviewAdministrationService:function(){return i},Reviewer:function(){return n.self.id}}}).result.finally(function(){this.window.location="/ui/#/me/performance/reviews/myreviews"})}]}).state("mytime.performance.reviews.submittedreviews",{url:"/submittedreviews",templateUrl:"/myperformance/submittedreviews",controller:"SubmittedReviewsController as ctrl",title:"Me | Performance | Reviews | Submitted Reviews",parentState:"mytime.performance.reviews"}).state("mytime.performance.reviews.submittedreviews.reviewsummary",{url:"/reviewsummary/:reviewId",onEnter:["$uibModal","$state","$window",function(e,t,i){e.open({templateUrl:"/myperformance/SubmittedReviewSummary",windowClass:"review-employee-container full-screen-modal dark-modal action-content card-cover",backdrop:!1,keyboard:!1,controller:"SubmittedReviewSummaryController as ctrl"}).result.finally(function(){this.window.location="/ui/#/me/performance/reviews/reviews-to-others"})}],title:"Me | Performance | Reviews | Reviews To Others | Preview"}).state("mytime.performance.goal",{url:"/goal/:goalId",template:'<goal-details is-my-goal-page="true" goal-component-service="ctrl.myGoalsService" previous-state="ctrl.previousState" previous-state-params="ctrl.previousStateParams"></goal-details>',title:"Me | Performance | Goal Details",parentState:"mytime.performance.goals"}).state("mytime.performance.feedback",{url:"/myfeedback",templateUrl:"/myperformance/feedbackreceived",controller:"MyFeedbackController",controllerAs:"ctrl",title:"Me | Performance | My Appraisals",parentState:"mytime.performance"}).state("mytime.performance.submittedfeedback",{url:"/submittedfeedback",templateUrl:"/myperformance/feedbacksubmitted",controller:"SubmittedAppraisalsController",controllerAs:"ctrl",title:"Me | Performance | Submitted Appraisals",parentState:"mytime.performance"}).state("mytime.performance.skills",{url:"/skills",templateUrl:"/myperformance/skills",controller:"MySkillsController",controllerAs:"ctrl",title:"Me | Performance | Competencies & CoreValues",parentState:"mytime.performance"})},t.prototype.registerImportRoutes=function(){this.$stateProvider.state("importemployeepmsdetails",{url:"/employees/importemployeeperformancedetails",title:"Import Employee Performance Details",onEnter:["$stateParams","$state","$uibModal",function(e,t,i){i.open({templateUrl:"performance/employeePmsDetailsImport",controller:"ExcelImportEmployeePMSDetailsController",controllerAs:"ctrl",windowClass:"full-screen-modal dark-modal performance-commons no-scroll-x",keyboard:!1,backdrop:!1}).result.finally(function(){t.go("performance")})}]})},t.prototype.registerEmployeeRoutes=function(){this.$stateProvider.state("employeereview",{url:"/pmsemployee/:cycleId",templateUrl:"/performanceemployees/performance",title:"Employee | Performance",parentState:"employee"}).state("employeereview.nominatereviewers",{url:"/nominatereviewers/:employeeId",title:"Nominate Reviewers | Employee",onEnter:["$uibModal","$state","$stateParams","$window","PMSEmployeeService",function(e,t,i,n,o){e.open({templateUrl:"/performanceemployees/nominatereviewers",controller:"NominateReviewersModalController",windowClass:"full-screen-modal dark-modal reviewer-nomination-container performance-commons",controllerAs:"ctrl",backdrop:!1,resolve:{PerformanceService:function(){return o}}}).result.finally(function(){this.window.history.back()})}]})},t.prototype.registerRedirects=function(){this.$urlRouterProvider.when("/performancesetup","/performancesetup/wizard"),this.$urlRouterProvider.when("/performancesetup/competencies","/performancesetup/competencies/core"),this.$urlRouterProvider.when("/performance/goals","/performance/goals/library"),this.$urlRouterProvider.when("/performance/reviews","/performance/reviews/groups"),this.$urlRouterProvider.when("/performance/skills","/performance/skills/competencies"),this.$urlRouterProvider.when("/performance/skills/competencies","/performance/skills/competencies/core"),this.$urlRouterProvider.when("/performance/jobfunctions","/performance/jobfunctions/manage"),this.$urlRouterProvider.when("/performance/settings","/performance/settings/feedback"),this.$urlRouterProvider.when("/me/performance","/me/performance/summary"),this.$urlRouterProvider.when("/me/performance/reviews","/me/performance/reviews/myreviews"),this.$urlRouterProvider.when("/me/performance/oneonones","/me/performance/oneonones/mymeetings"),this.$urlRouterProvider.when("/employee/:id/performance","/employee/:id/performance/summary"),this.$urlRouterProvider.when("/performance","/performance/dashboard"),this.$urlRouterProvider.when("/me/talent","/me/talent/summary")},t}();t.RegisterPerformanceRoutes=i,angular.module("PMS").config(["$urlRouterProvider","$stateProvider",function(e,t){new i(e,t)}])}(e.Routes||(e.Routes={}))}(PMS||(PMS={})),function(e){!function(e){var t=function(){function e(e,t,i,n){this._scope=e,this._state=t,this.notificationService=i,this.pmsSettings=n}return e.$inject=["$scope","$state","NotificationService","PMSSettings"],e}();e.PerformanceController=t;var i=function(){function e(e,t,i,n,o,r,a,s){var l=this;this._scope=e,this._state=t,this.notificationService=i,this.pmsSettings=n,this.appContext=o,this.modalService=r,this.pmsService=a,this.reviewObjectives=s,this.giveFeedback=function(){l._state.go("performance.dashboard.submitfeedback")}}return e.$inject=["$scope","$state","NotificationService","PMSSettings","AppContext","$uibModal","PMSService","ReviewObjectives"],e}();e.PerformanceDashboardController=i;var n=function(){function e(){this.employeeList=[]}return e.$inject=[],e}();e.RapidReviewController=n;var o=function(){function e(e,t,i){this.notificationService=e,this.appSettings=t,this.appContext=i}return e.$inject=["NotificationService","AppSettings","AppContext"],e}();e.PerformanceReviewsController=o}(e.Controllers||(e.Controllers={}))}(PMS||(PMS={})),angular.module("PMS").controller("PerformanceController",PMS.Controllers.PerformanceController).controller("PerformanceDashboardController",PMS.Controllers.PerformanceDashboardController).controller("RapidReviewController",PMS.Controllers.RapidReviewController).controller("PerformanceReviewsController",PMS.Controllers.PerformanceReviewsController),function(e){!function(t){var i=function(){function t(t,i,n,o,r,a,s,l){var c=this;this.state=t,this.pmsService=i,this.appSettings=n,this.modalService=o,this.reviewResponseType=r,this.stateParams=a,this.dialogsService=s,this.notificationService=l,this.questionTemplates=[],this.initGridSettings(),this.pmsService.getAllReviewFormQuestionTemplates().then(function(t){c.questionTemplates=t.map(function(t){return new e.Model.CustomFormQuestionTemplate(t)})})}return t.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.columnDefs=[{field:"processedTemplate",displayName:"Title",width:600,cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-bind-html="row.entity.template"></span></div>'},{name:"actions",displayName:"Actions",cellTemplate:'<div class="ui-grid-cell-contents"><a title="Edit Question" class="inline-block horizontal-margin-left text-muted v-align-middle vertical-top-margin-sm" ui-sref="performance.reviews.editformtemplate({id: row.entity.id})" data-ng-click="grid.appScope.ctrl.editQuestion(row.entity.id)"><span class="icon-pencil"></span><a><a class="horizontal-margin-left" title="Delete Question" data-ng-click="grid.appScope.ctrl.deleteQuestion(row.entity.id)"><span class="icon-remove3"></span></a></div>'}],this.gridSettings.data="ctrl.questionTemplates | filter: ctrl.filterText",this.gridSettings.enableColumnMenus=!1,this.gridSettings.enableGridMenu=!1,this.gridSettings.onRegisterApi=function(t){e.gridApi=t}},t.prototype.deleteQuestion=function(e){var t=this;this.dialogsService.confirm("Please Confirm","Are you sure you want to delete this question?").result.then(function(){t.pmsService.deleteReviewFormQuestionTemplate(e).then(function(i){if(i.isDeleted){t.notificationService.success("Review Questionnaire template deleted successfully.");var n=t.questionTemplates.findIndex(function(t){return t.id==e});n>-1&&t.questionTemplates.splice(n,1)}})})},t.$inject=["$state","PMSService","AppSettings","$uibModal","ReviewResponseType","$stateParams","dialogs","NotificationService"],t}();t.ReviewQuestionnaireTemplateController=i;var n=function(){function t(t,i,n,o,r,a,s,l,c){var p=this;this.qService=t,this.appSettings=i,this.pmsService=n,this.lookupService=o,this.reviewerType=r,this.reviewResponseType=a,this.notificationService=s,this.modalInstance=l,this.stateParams=c,this.questionModel=new e.Model.CustomFormQuestionTemplate({}),this.ratingScales=[],this.isUpdateDisabled=!1,this.editorSettings=angular.copy(this.appSettings.trumbowygConfig);var u=this.stateParams.id?[this.lookupService.getRatingScaleLookups(),this.pmsService.getPlaceholderFields(),this.pmsService.getReviewFormQuestionTemplate(this.stateParams.id)]:[this.lookupService.getRatingScaleLookups(),this.pmsService.getPlaceholderFields()];this.qService.all(u).then(function(t){p.ratingScales=t[0].map(function(t){return new e.Model.RatingScale(t)}),p.editorSettings.setPlaceholderFields(t[1].toJSON().placeholderFields),p.editorSettings.usePlaceholders=!0,p.stateParams.id&&(p.questionModel=new e.Model.CustomFormQuestionTemplate(t[2]))})}return t.prototype.addOption=function(){this.questionModel.options.push(new e.Model.FormChoice({}))},t.prototype.removeOption=function(e){this.questionModel.options.splice(e,1)},t.prototype.questionTypeChanged=function(){this.questionModel.questionType!=e.Model.ReviewResponseType.Radio||this.questionModel.options.length||this.addOption(),this.questionModel.questionType==e.Model.ReviewResponseType.Rating&&this.ratingScales.length>0?this.questionModel.ratingScaleId=this.ratingScales[0].id:this.questionModel.ratingScaleId=0},t.prototype.saveQuestion=function(){var e=this;this.questionModel.excerpt&&this.form.reviewFormQuestionTemplate.$valid&&this.validateData()&&!this.isUpdateDisabled&&this.pmsService.saveReviewFormQuestionTemplate(this.questionModel).then(function(t){e.notificationService.success("Question added successfully."),e.isUpdateDisabled=!0,e.modalInstance.close()})},t.prototype.validateData=function(){return!(!this.questionModel.options.length&&this.questionModel.questionType==e.Model.ReviewResponseType.Radio)||(this.notificationService.error("Add at least one answer to the list."),!1)},t.prototype.updateQuestion=function(){var e=this;this.form.reviewFormQuestionTemplate.$valid&&this.questionModel.excerpt&&this.validateData()&&this.pmsService.updateReviewFormQuestionTemplate(this.stateParams.id,this.questionModel).then(function(t){t.isUpdated&&e.notificationService.success("Question updated successfully."),e.modalInstance.close()})},t.$inject=["$q","AppSettings","PMSService","PMSLookupService","ReviewerType","ReviewResponseType","NotificationService","$uibModalInstance","$stateParams"],t}();t.AddReviewQuestionTemplateController=n;var o=function(){function e(e,t,i){var n=this;this.appSettings=e,this.pmsService=t,this.modalInstance=i,this.reviewQuestions=[],this.initGridSettings(),this.pmsService.getAllReviewFormQuestionTemplateList().then(function(e){Object.keys(e).forEach(function(t){if(!isNaN(t)){var i=e[t];i=null!==i?i.replace(/[^\x20-\x7E]/g,""):i,n.reviewQuestions.push({id:t,title:e[t]})}})})}return e.prototype.initGridSettings=function(){var e=this;this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.columnDefs=[{name:"title",displayName:"Title",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-bind-html="row.entity.title"></span></div>'}],this.gridSettings.data="ctrl.reviewQuestions | filter: ctrl.filterText",this.gridSettings.enableGridMenu=!1,this.gridSettings.enableColumnMenus=!1,this.gridSettings.onRegisterApi=function(t){e.gridApi=t}},e.prototype.copySelectedItem=function(){if(this.gridApi.selection.getSelectedCount()>0){var e=angular.copy(this.gridApi.selection.getSelectedRows());this.modalInstance.close({selectedRowIds:e.map(function(e){return e.id})})}},e.$inject=["AppSettings","PMSService","$uibModalInstance"],e}();t.ReviewQuestionnaireCopyController=o}(e.Controllers||(e.Controllers={}))}(PMS||(PMS={})),angular.module("PMS").controller("ReviewQuestionnaireTemplateController",PMS.Controllers.ReviewQuestionnaireTemplateController).controller("AddReviewQuestionTemplateController",PMS.Controllers.AddReviewQuestionTemplateController).controller("ReviewQuestionnaireCopyController",PMS.Controllers.ReviewQuestionnaireCopyController),function(e){!function(t){var i=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f){var g=this;this.q=i,this.utilService=n,this.stateParams=o,this.stateService=r,this.feedbackService=s,this.notificationService=l,this.modalInstance=p,this.appSettings=u,this.blobcontainers=d,this.appContext=m,this.feedbackTypes=y,this.dialogsService=h,this.pmsSettings=f,this.feedbackRoles=new Array,this.showSearch=!0,this.coreValues=[],this.getSettings=function(){g.feedbackSettings=g.pmsSettings.feedbackSettings,g.feedbackSettings&&g.feedbackSettings.enableCoreValues&&g.getCoreAndCompetencies()},this.getCoreAndCompetencies=function(){g.feedbackService.getCoreValuesAndCompetencies().then(function(t){g.coreValues=t.coreValues.map(function(t){return new e.Model.CoreValue(t)})})},this.saveFeedback=function(){if(g.form.feedbackSubmitForm.$valid&&g.isSelectedEmployeesValid()){if(0==g.feedback.toEmployees.length)return void g.notificationService.error("Please select atleast one employee");g.feedbackService.saveFeedback(g.feedback).then(function(e){g.feedback.id=e,g.setFeedbackGivenBy(),g.modalInstance.close(g.feedback),g.notificationService.success("Feedback submitted successfully")},function(e){g.notificationService.error("Error while submitting feedback")})}},this.isSelf=!this.stateParams.id,this.feedback=a,this.getSettings(),this.isSelf||this.stateParams.id==this.appContext.myPublicProfile.id||(this.showSearch=!1,this.feedbackService.getEmployeeProfile(this.stateParams.id).then(function(e){g.feedback.toEmployees=[{id:e.id,profilePic:e.profileImageUrl,name:e.displayName}]}))}return t.prototype.setSelectedCoreValue=function(e){this.coreValues.forEach(function(e){return e.isSelected=!1}),this.feedback.coreValue&&this.feedback.coreValue.id==e.id?this.feedback.coreValue=null:(this.feedback.coreValue=e,this.feedback.coreValue.isSelected=!0)},t.prototype.getMatchedEmployees=function(t){var i=[];return this.feedback.feedbackType==e.Model.FeedbackTypes.Appreciate&&(i=this.feedback.toEmployees.map(function(e){return e.id})),i.push(this.appContext.myPublicProfile.id),this.utilService.getMatchedEmployeesExcluding(t,i)},t.prototype.employeeSelected=function(t){this.selectedEmployee=t,this.showSearch=!1,this.feedback.toEmployees.push(new e.Model.EmployeeDetail({id:t.id,name:t.displayName,profilePic:t.profileImageUrl})),this.selectedEmployee=null},t.prototype.removeEmployee=function(e){this.feedback.toEmployees=this.feedback.toEmployees.filter(function(t,i){return i!=e})},t.prototype.isSelectedEmployeesValid=function(){return this.feedback.feedbackType==e.Model.FeedbackTypes.Appreciate?this.feedback.toEmployees.length>0:1==this.feedback.toEmployees.length},t.prototype.setFeedbackGivenBy=function(){this.feedback.fromEmployee.id=this.appContext.myPublicProfile.id,this.feedback.fromEmployee.name=this.appContext.myPublicProfile.displayName,this.feedback.fromEmployee.profilePic=this.appContext.myPublicProfile.profileImageUrl},t.$inject=["$scope","$q","Utils","$stateParams","$state","FeedbackModel","FeedbackService","NotificationService","$uibModal","$uibModalInstance","AppSettings","BlobContainers","AppContext","FeedBackTypes","dialogs","PMSSettings"],t}();t.FeedbackSubmitController=i;var n=function(){function e(e,t,i,n,o,r,a,s,l,c){var p=this;this.scope=e,this._q=t,this._state=i,this.filter=n,this.modal=o,this.appSettings=r,this._notificationService=a,this.pmsService=s,this.dialogs=l,this.pmsSettingsView=c,this.metricUnits=[],this.model={},this.modelCopy={},this.submitted=!1,this.isValid=!1,this.intializeGridSettings=function(){p.gridOptions=angular.copy(p.appSettings.gridSettings),p.gridOptions.columnDefs=[{field:"name",displayName:"Name",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.name}}</span></div>'},{field:"description",displayName:"Description",cellClass:"ui-grid-cell",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row, col) != null">{{grid.getCellValue(row, col)}}</span><span data-ng-if="grid.getCellValue(row, col) == null">Not Available</span></div>'},{name:"Actions",enableSorting:!1,displayName:"Actions",cellClass:"ui-grid-cell cell-tooltip ui-grid-cell-contents",cellTemplate:'<div class="ui-grid-cell-options "><span class="clearfix"><ul class="action-items list-inline"><li class="list-item"><a data-ng-click="grid.appScope.ctrl.addMetricUnit(row.entity);" class=" list-link"><span class="icon-pencil5" uib-tooltip="Edit" tooltip-placement="left"></span></a></li><li class="list-item"><a data-ng-click="grid.appScope.ctrl.deleteMetricUnit(row.entity.id);" class="list-link"><span class="icon-remove3" uib-tooltip="Delete" tooltip-placement="right"></span></a></li></ul></span></div>'}],p.gridOptions.data="ctrl.metricUnits"},this.addMetricUnit=function(e){p.submitted=!1,p.model=angular.copy(e),p.modelCopy=angular.copy(e),p.isValid=!0,p.modalInstance=p.modal.open({templateUrl:"add-metric-unit-modal",windowClass:"full-screen-modal employee-exit-modal dark-modal wizard-head action-content",scope:p.scope})},this.saveMetricUnit=function(){p._q.all([p.doesNameExist(p.model.name)]).then(function(e){e[0]&&p.form.createMetricUnit.$valid&&p.isValid&&(p.model.id?p.pmsService.updateMetricUnit(p.model.id,p.model):p.pmsService.saveMetricUnit(p.model)).then(function(e){if(p.modalInstance.close(),p._notificationService.success(p.model.id?"Metric unit updated successfully":"Metric unit added successfully"),p.submitted=!1,p.model.id){var t=p.metricUnits.map(function(e){return e.id}).indexOf(p.model.id);p.metricUnits[t]=angular.copy(p.model),p.metricUnits=p.filter("orderBy")(p.metricUnits,"name")}else p.model.id=e.id,p.metricUnits.push(p.model),p.metricUnits=p.filter("orderBy")(p.metricUnits,"name");p.updateSetupMetricUnitCount()},function(e){p._notificationService.error(p.model.id?"error in updating metric unit":"error in adding metric unit")})})},this.deleteMetricUnit=function(e){p.dialogs.confirm("Please Confirm","Are you sure you want to delete metric unit?").result.then(function(t){p.pmsService.deleteMetricUnit(e).then(function(t){if(t.isDeleted){var i=p.metricUnits.find(function(t){return t.id==e}),n=p.metricUnits.indexOf(i);p.metricUnits.splice(n,1),p.updateSetupMetricUnitCount(),p._notificationService.success("Metric unit deleted successfully")}else p._notificationService.error("Unable to delete metric unit which is assigned to goals")},function(e){p._notificationService.error("Error in deleting metric unit")})})},this.doesNameExist=function(e){if(e){p.isValid=!1;var t=p._q.defer();return p.model.id&&e.toLowerCase()==p.modelCopy.name.toLowerCase()&&(p.isValid=!0,t.resolve(!0)),p.pmsService.doesMetricUnitExist(e).then(function(e){p.isValid=!e.result,t.resolve(!e.result)}),t.promise}},this.intializeGridSettings(),this.pmsService.getMetricUnits().then(function(e){p.metricUnits=e,p.metricUnits=p.filter("orderBy")(p.metricUnits,"name")}),this.modelOptions=angular.copy(this.appSettings.modelBlurSettings)}return e.prototype.updateSetupMetricUnitCount=function(){this.pmsSettingsView&&(this.pmsSettingsView.metricUnitsCount=this.metricUnits.length)},e.$inject=["$scope","$q","$state","$filter","$uibModal","AppSettings","NotificationService","PMSService","dialogs"],e}();t.MetricUnitController=n}(e.Controllers||(e.Controllers={}))}(PMS||(PMS={})),angular.module("PMS").controller("FeedbackSubmitController",PMS.Controllers.FeedbackSubmitController);__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){var t=function(){return function(e){this.isSetupCompleted=!1,this.id=e.id,this.isSetupCompleted=e.isSetupCompleted||!1,this.goalSettings=e.goalSettings||new n({}),this.reviewSettings=e.reviewSettings||new a({}),this.feedbackSettings=e.feedbackSettings||new l({}),this.skillSettings=e.skillSettings||new c({})}}();e.PMSSettings=t;var i=function(e){function t(t){var i=e.call(this,t.performanceSettings||{})||this;return i.jobFunctionsCount=t.jobFunctionsCount,i.competenciesCount=t.competenciesCount,i.coreValuesCount=t.coreValuesCount,i.metricUnitsCount=t.metricUnitsCount,i}return __extends(t,e),Object.defineProperty(t.prototype,"isSetupDataValid",{get:function(){return!!(this.reviewSettings.isFeatureEnabled||this.goalSettings.isFeatureEnabled||this.feedbackSettings.isFeatureEnabled)&&((!this.goalSettings.isFeatureEnabled||0!=this.metricUnitsCount)&&(!this.feedbackSettings.isFeatureEnabled||!this.feedbackSettings.enableCoreValues||0!=this.coreValuesCount))},enumerable:!0,configurable:!0}),t}(t);e.PMSSettingsView=i;var n=function(){function t(t){this.isFeatureEnabled=!1,this.areWeightagesEnabled=!1,this.keyResultRequirementType=e.KeyResultRequirementType.NotRequired,this.trackingLabels=[],this.isFeatureEnabled=t.isFeatureEnabled||!1,this.goalAlias=t.goalAlias||"Goal",this.keyResultAlias=t.keyResultAlias||"Key Result",this.areWeightagesEnabled=t.areWeightagesEnabled||!1,this.keyResultRatingEnabled=t.keyResultRatingEnabled||!1,this.keyResultRequirementType=t.keyResultRequirementType||e.KeyResultRequirementType.NotRequired,this.canEmployeeAddGoals=t.canEmployeeAddGoals,this.trackingLabels=t.trackingLabels&&t.trackingLabels.length>0?t.trackingLabels.map(function(e){return new I(e)}):[],this.checkInReminderSettings=new o(t.checkInReminderSettings||{}),this.arePrioritiesEnabled=t.arePrioritiesEnabled,this.goalVisibilitySettings=new r(t.goalVisibilitySettings||{}),this.goalMethod=t.goalMethod||e.GoalMethod.Standard}return Object.defineProperty(t.prototype,"goalAliasPlural",{get:function(){return this.goalAlias+"s"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"keyResultAliasPlural",{get:function(){return this.keyResultAlias+"s"},enumerable:!0,configurable:!0}),t.prototype.getTrackingLabel=function(e){return this.trackingLabels.filter(function(t){return t.trackingStatus==e})[0].trackingLabel},t}();e.GoalSettings=n;var o=function(){return function(e){this.duration=e.duration,this.durationUnit=e.durationUnit||Leaves.Model.TimeDuration.Days}}();e.CheckInReminderSetting=o;var r=function(){return function(t){this.departmentGoalVisibility=t.departmentGoalVisibility||e.GoalVisibility.None,this.individualGoalVisibility=t.individualGoalVisibility||e.GoalVisibility.None}}();e.GoalVisibilitySettings=r;var a=function(){return function(e){this.isFeatureEnabled=!1,this.isFeatureEnabled=e.isFeatureEnabled||!1,this.globalRatingScale=e.globalRatingScale>0?e.globalRatingScale:null}}();e.ReviewSettings=a;var s=function(){return function(e){this.reviewRatingMetrics=[],this.reviewSettings=e.reviewSettings||new a({}),this.ratingScale=e.ratingScale||new R({}),this.reviewRatingMetrics=e.reviewRatingMetrics}}();e.ReviewSetup=s;var l=function(){return function(e){this.isFeatureEnabled=!1,this.minimumLimit=0,this.maximumLimit=0,this.badgeList=new Array,this.isFeatureEnabled=e.isFeatureEnabled||!1,this.hasMaximumLimit=e.hasMaximumLimit||!1,this.minimumLimit=e.minimumLimit||0,this.maximumLimit=e.maximumLimit||0,this.enableBadge=e.enableBadge||!1,this.enableCoreValues=e.enableCoreValues||!1,this.badgeList=e.badgeList||new Array}}();e.FeedbackSettings=l;var c=function(){return function(e){this.coreValueOwners=[],this.coreValueOwners=e.coreValueOwners}}();e.SkillSetting=c;var p=function(){return function(e){this.isReviewGroupEditable=!1,this.id=e.id||0,this.employeeId=e.employeeId||0,this.reviewGroupId=e.reviewGroupId||0,this.reviewGroupName=e.reviewGroupName||""}}();e.PMSEmployeePerformanceDetails=p;var u=function(){return function(e){this.id=e.id,this.employeeId=e.employeeId||0,this.name=e.name||"",this.jobFunctionId=e.jobFunctionId,this.jobGroupId=e.jobGroupId||0,this.weightage=e.weightage||0}}();e.PMSEmployeeJobFunction=u;var d=function(e){function t(t){var i=e.call(this,t)||this;return i.name=t.name,i.isEdit=!!t.isEdit&&t.isNew,i.isNew=!!t.isNew&&t.isNew,i}return __extends(t,e),t}(u);e.PMSEmployeeJobFunctionView=d;var m=function(){return function(t){this.jobFunctions=[],this.isReviewDelayed=!1,this.canEmployeeRate=!1,this.areCompetenciesReviewed=!1,this.areGoalsReviewed=!1,this.areCoreValuesReviewed=!1,this.isFormReviewed=!1,this.canEmployeeSubmitMeetingSummary=!1,this.id=t.id,this.cycleName=t.cycleName,this.employeeId=t.employeeId,this.jobFunctions=t.jobFunctions&&t.jobFunctions.length?t.jobFunctions.map(function(e){return new v(e)}):[],this.reviewCycleId=t.reviewCycleId,this.reviewCycleProcessSettings=t.reviewCycleProcessSettings,this.reviewCycleFormSettings=t.reviewCycleFormSettings,this.cycleStartDate=t.cycleStartDate,this.createdOn=t.createdOn,this.startDate=t.startDate,this.startedBy=t.startedBy,this.completedOn=t.completedOn,this.completedBy=t.completedBy,this.cancelledOn=t.cancelledOn,this.cancelledBy=t.cancelledBy,this.status=t.status,this.reviewReleaseStatus=t.reviewReleaseStatus,this.reviewType=t.reviewType,this.overallRating=t.overallRating,this.comments=t.comments,this.ratingScales=t.ratingScales,this.log=t.log,this.currentStepIdentifier=t.currentStepIdentifier,this.reviewCycleId=t.reviewCycleId,this.reviewGroupId=t.reviewGroupId,this.reviewOverride=t.reviewOverride?new e.ReviewOverride(t.reviewOverride):null,this.reviewStepLog=t.reviewStepLog,this.totalDaysCompleted=t.totalDaysCompleted,this.isReviewDelayed=t.isReviewDelayed,this.canEmployeeRate=t.canEmployeeRate,this.areCompetenciesReviewed=t.areCompetenciesReviewed,this.areGoalsReviewed=t.areGoalsReviewed,this.areCoreValuesReviewed=t.areCoreValuesReviewed,this.isFormReviewed=t.isFormReviewed,this.canEmployeeSubmitMeetingSummary=t.canEmployeeSubmitMeetingSummary}}();e.EmployeeReview=m;var y=function(e){function t(t){var i=e.call(this,t)||this;return i.canEmployeeNominate=!1,i.isSelected=!1,i.jobFunctionNames=[],i.displayName=t.displayName,i.jobTitle=t.jobTitle,i.profileImageUrl=t.profileImageUrl,i.startedByEmployee=t.startedByEmployee,i.reviewProcessName=t.reviewProcessName,i.canEmployeeSubmitMeetingSummary=t.canEmployeeSubmitMeetingSummary,i.canEmployeeNominate=t.canEmployeeNominate||!1,i.isSelected=t.isSelected,i.jobFunctionNames=t.jobFunctionNames,i.jobFunctionNamesList=t.jobFunctionNamesList,i}return __extends(t,e),t}(m);e.EmployeeReviewView=y;var h=function(){return function(e){this.id=e.id,this.employeeId=e.employeeId,this.displayName=e.displayName,this.profileImageUrl=e.profileImageUrl,this.jobTitle=e.jobTitle,this.reviewCycleId=e.reviewCycleId,this.reviewCycleName=e.reviewCycleName,this.reviewSummary=e.reviewSummary,this.overallRating=e.overallRating,this.bandLabel=e.bandLabel,this.reviewStepsInfo=e.reviewStepsInfo}}();e.EmployeePastReviewSummary=h;var f=function(){return function(e){this.cycleName=e.cycleName,this.displayName=e.displayName,this.profileImageUrl=e.profileImageUrl,this.jobTitle=e.jobTitle,this.approvedNominations=e.approvedNominations}}();e.EmployeeApprovedNominationsSummary=f;var g=function(){return function(t){this.jobFunctions=[],this.areCommentsMandatoryForOverriddenRating=!1,this.reviewObjectiveWeightageConfig=[],this.reviewRatings=[],this.reviewRatingTransactions=[],this.ratingScales=[],this.id=t.id,this.reviewCycleId=t.reviewCycleId,this.employeeId=t.employeeId,this.cycleName=t.cycleName,this.startDate=t.startDate,this.displayName=t.displayName,this.profileImageUrl=t.profileImageUrl,this.jobFunctions=t.jobFunctions,this.jobTitle=t.jobTitle,this.instructions=t.instructions,this.areCommentsMandatoryForOverriddenRating=t.areCommentsMandatoryForOverriddenRating,this.reviewObjectiveWeightageConfig=t.reviewObjectiveWeightageConfig?t.reviewObjectiveWeightageConfig.map(function(t){return new e.ReviewObjectiveWeightageConfigView(t)}):[],this.reviewRatings=t.reviewRatings?t.reviewRatings.map(function(e){return new ge(e)}):[],this.reviewRatingTransactions=t.reviewRatingTransactions?t.reviewRatingTransactions.map(function(e){return new Ce(e)}):[],this.ratingScales=t.ratingScales}}();e.ReviewSummary=g;var v=function(){return function(e){this.jobFunctionId=e.jobFunctionId,this.jobFunctionWeightage=e.jobFunctionWeightage,this.jobFunctionName=e.jobFunctionName}}();e.ReviewJobFunctionConfiguration=v;var S=function(){return function(e){this.reviewCycleName=e.reviewCycleName,this.reviewInitiatedDate=e.reviewInitiatedDate,this.cycleStartDate=e.cycleStartDate,this.startedBy=e.startedBy,this.startedByEmployee=e.startedByEmployee,this.status=e.status,this.reviewReleaseStatus=e.reviewReleaseStatus,this.overallRating=e.overallRating,this.completedOn=e.completedOn,this.cancelledOn=e.cancelledOn}}();e.EmployeeReviewListView=S;var C=function(){return function(e){this.id=e.id,this.employeeId=e.employeeId,this.displayName=e.displayName,this.departmentId=e.departmentId,this.jobTitle=e.jobTitle,this.cycleId=e.cycleId,this.cycleName=e.cycleName,this.cycleStartDate=e.cycleStartDate,this.createdOn=e.createdOn,this.startDate=e.startDate,this.startedBy=e.startedBy,this.employeeNumber=e.employeeNumber,this.startedByEmployee=e.startedByEmployee,this.cancelledOn=e.cancelledOn,this.status=e.status,this.cancelledBy=e.cancelledBy,this.cancelledByEmployee=e.cancelledByEmployee}}();e.CancelledEmployeeReviewReportView=C;var w=function(){return function(t){this.id=t.id,this.reviewId=t.reviewId,this.reviewerId=t.reviewerId,this.employeeId=t.employeeId,this.displayName=t.displayName,this.jobTitle=t.jobTitle,this.reviewerName=t.reviewerName,this.reviewerType=t.reviewerType||e.ReviewerType.None,this.submittedOn=t.submittedOn,this.profileImageUrl=t.profileImageUrl,this.isDraft=t.isDraft||!1}}();e.SubmittedReviewsView=w;var b=function(){return function(e,t,i,n){void 0===i&&(i=!1),void 0===n&&(n=!1),this.name=e,this.type=t,this.isSelected=i,this.isAdded=n}}();e.EmployeeReviewer=b;var P=function(){return function(e){this.id=e.id||"",this.name=e.name||""}}();e.FeedbackRoleModel=P;var T=function(){function t(t){this.feedbackType=e.FeedbackTypes.Appreciate,this.isDescriptionhidden=!0,this.fromEmployee=new D({}),this.id=t.id||"",this.title=t.title||"",this.description=t.description||"",this.feedbackType=t.feedbackType||e.FeedbackTypes.Appreciate,this.feedbackTypeName=t.feedbackTtpeName,this.fromEmployee=new D(t.fromEmployee||{}),this.toEmployees=t.toEmployees||new Array,this.toEmployeesNames=t.toEmployeesNames,this.badge=t.badge||null,this.sharedWith=t.role||new Array,this.sharedWithDepartments=t.sharedWithDepartments,this.givenOn=t.givenOn||new Date,this.coreValue=t.coreValue,this.competencyId=t.competencyId,this.competencyName=t.competencyName}return Object.defineProperty(t.prototype,"truncatedDescription",{get:function(){return this.description.slice(0,65)},enumerable:!0,configurable:!0}),t}();e.Feedback=T;var D=function(){return function(e){this.id=e.id||"",this.name=e.name||"",this.profilePic=e.profilePic||""}}();e.EmployeeDetail=D;var I=function(){return function(t){this.trackingLabel=t.trackingLabel,this.trackingStatus=t.trackingStatus||e.GoalTrackingStatus.OnTrack}}();e.TrackingLabelItem=I;var A=function(){return function(){this.title=""}}();e.Badge=A;var E=function(){return function(){}}();e.FileDetails=E;var R=function(){function e(e){this.ratingScaleLevels=[],this.id=e.id,this.name=e.name||"",this.ratingScaleLevelCount=e.ratingScaleLevelCount,this.ratingScaleLevels=e.ratingScaleLevels&&e.ratingScaleLevels.length?e.ratingScaleLevels.map(function(e){return new x(e)}):[]}return e.prototype.getTitle=function(e){if(e>0)return this.ratingScaleLevels.find(function(t){return t.score==e}).label},e}();e.RatingScale=R;var x=function(){return function(e){this.isVisited=!1,this.isActive=!1,this.isLabelDuplicate=!1,this.score=e.score||0,this.label=e.label,this.description=e.description,this.isVisited=e.isVisited,this.isActive=e.isActive}}();e.RatingScaleLevel=x;var M=function(){return function(e){this.isSelected=!1,this.showNotApplicable=!1,this.weightage=e.weightage,this.reviewObjective=e.reviewObjective,this.isSelected=e.isSelected,this.showNotApplicable=e.showNotApplicable,this.ratingScale=e.ratingScale}}();e.RatingScaleConfig=M;var N=function(){return function(t){this.id=t.id,this.identifier=t.identifier,this.type=t.type||e.SkillType.None,this.name=t.name||"",this.competencyType=t.competencyType||null,this.competencyTypeName=t.competencyType!=e.CompetencyType.None?t.competencyTypeName:"Core Competency",this.description=t.description||"",this.createdOn=t.createdOn||new Date,this.lastModified=t.lastModified||new Date,this.authorId=t.authorId||0,this.authorName=t.authorName||0}}();e.Skill=N;var O=function(t){function i(i){var n=t.call(this,i)||this;return n.type=e.SkillType.Competency,n.competencyType=i.competencyType>0?i.competencyType:"",n}return __extends(i,t),i}(N);e.Competency=O;var k=function(t){function i(i){var n=t.call(this,i)||this;return n.isSelected=!1,n.type=e.SkillType.CoreValue,n.badge=i.badge,n.isSelected=i.isSelected,n}return __extends(i,t),i}(N);e.CoreValue=k;var F=function(e){function t(t){var i=e.call(this,t)||this;return i.behaviours=[],i.competencyJobFunctions=[],i.isSelected=!1,i.behaviours=t.behaviours||[new L({isEdit:!0,useInRatings:!0,shownToEmployee:!0})],i.competencyJobFunctions=t.competencyJobFunctions||[],i.behaviourCount=t.behaviourCount,i.jobFunctionCount=t.jobFunctionCount,i.weightage=t.weightage,i.jobFunctionId=t.jobFunctionId,i.isSelected=!1,i}return __extends(t,e),t}(O);e.CompetencyView=F;var $=function(e){function t(t){var i=e.call(this,t)||this;return i.behaviours=[],i.competencyJobFunctions=[],i.isSelected=!1,i.behaviours=t.behaviours||[new q({isEdit:!0,useInRatings:!0,shownToEmployee:!0})],i.competencyJobFunctions=t.competencyJobFunctions||[],i.behaviourCount=t.behaviourCount,i.jobFunctionCount=t.jobFunctionCount,i.isSelected=!1,i}return __extends(t,e),t}(k);e.CoreValueView=$;var G=function(){function t(t){this.useInRatings=!0,this.shownToEmployee=!0,this.isEdit=!0,this.isSelected=!1,this.id=t.id||0,this.skillId=t.skillId||0,this.skillIdentifier=t.skillIdentifier,this.skillType=t.skillType||e.SkillType.None,this.title=t.title||"",this.authorId=t.authorId||0,this.createdOn=t.createdOn||new Date,this.useInRatings=t.useInRatings,this.shownToEmployee=t.shownToEmployee,this.isEdit=!0,this.isSelected=!1}return t.prototype.isValid=function(){return""!=this.title},t}();e.SkillBehavoiur=G;var L=function(t){function i(i){var n=t.call(this,i)||this;return n.skillType=e.SkillType.Competency,n}return __extends(i,t),i}(G);e.CompetencyBehaviour=L;var q=function(t){function i(i){var n=t.call(this,i)||this;return n.skillType=e.SkillType.CoreValue,n}return __extends(i,t),i}(G);e.CoreValueBehaviour=q;var j=function(){return function(e){this.isCore=!1,this.id=e.id,this.name=e.name,this.description=e.description,this.jobFunctionId=e.jobFunctionId,this.isCore=e.isCore,this.competencyType=e.competencyType,this.weightage=e.weightage}}();e.ReviewCompetenciesView=j;var B=function(){return function(e){this.hasMultipleLevels=!1,this.jobFunctions=[],this.departments=[],this.id=e.id,this.identifier=e.identifier,this.name=e.name,this.description=e.description,this.hasMultipleLevels=e.hasMultipleLevels,this.numberOfLevels=e.numberOfLevels,this.jobFunctions=e.jobFunctions||[],this.departments=e.departments||[],this.allowCompetencyWeightages=!e.id||e.allowCompetencyWeightages}}();e.JobGroup=B;var U=function(){return function(e){this.isDeleted=!1,this.id=e.id,this.name=e.name}}();e.JobGroupDepartment=U;var _=function(){return function(e){var t=this;this.competencies=[],this.areWeightagesValid=!1,this.deleteCompetency=function(e){t.competencies.splice(e,1)},this.id=e.id,this.name=e.name,this.description=e.description,this.jobGroupIdentifier=e.jobGroupIdentifier,this.jobGroupId=e.jobGroupId,this.competencies=e.competencies||[],this.areWeightagesValid=e.areWeightagesValid||!1}}();e.JobFunction=_;var H=function(){return function(e){this.weightage=0,this.expectedRating=0,this.id=e.id,this.jobFunctionId=e.jobFunctionId,this.skillId=e.skillId,this.skillType=e.skillType,this.weightage=e.weightage||0,this.expectedRating=e.expectedRating||0}}();e.JobFunctionCompetency=H;var V=function(e){function t(t){var i=e.call(this,t)||this;return i.isSelected=!1,i.name=t.name,i}return __extends(t,e),t}(H);e.JobFunctionCompetencyView=V;var Y=function(){return function(t){this.options=[],this.allReviewersSelected=!1,this.id=t.id,this.description=t.description,this.addDescription=!1,this.template=t.template,this.processedTemplate=t.processedTemplate,this.excerpt=t.excerpt,this.sequenceOrder=t.sequenceOrder,this.questionType=t.questionType||e.ReviewResponseType.TextBox,this.groupId=t.groupId,this.compiledTemplate=t.compiledTemplate,this.compiledExcerpt=t.compiledExcerpt,this.reviewGroupId=t.reviewGroupId,this.reviewCycleId=t.reviewCycleId,this.isCommentRequired=t.isCommentRequired,this.allowAttachments=t.allowAttachments,this.ratingScaleId=t.ratingScaleId,this.reviewersWhoCanProvideFeedback=t.reviewersWhoCanProvideFeedback,this.accordionOpen=t.accordionOpen,this.allReviewersSelected=t.allReviewersSelected,t.options&&t.options.length&&(this.options=t.options.map(function(e){return new J(e)}))}}();e.ReviewFormQuestion=Y;var z=function(){return function(t){this.options=[],this.id=t.id,this.description=t.description,this.template=t.template,this.processedTemplate=t.processedTemplate,this.excerpt=t.excerpt,this.questionType=t.questionType||e.ReviewResponseType.TextBox,this.options=t.options||[],this.compiledTemplate=t.compiledTemplate,this.compiledExcerpt=t.compiledExcerpt,this.isCommentRequired=t.isCommentRequired,this.ratingScaleId=t.ratingScaleId}}();e.CustomFormQuestionTemplate=z;var W=function(){return function(e){this.title=e.title,this.name=e.name,this.tooltip=e.tooltip}}();e.PlaceholderField=W;var J=function(){return function(e){this.text=e.text,this.identifier=e.identifier}}();e.FormChoice=J;var K=function(){function t(t){this.isUpdated=!1,this.id=t.id>0?t.id:null,this.identifier=t.identifier,this.name=t.name,this.startValue=null!=t.startValue?t.startValue:0,this.targetValue=null!=t.targetValue?t.targetValue:100,this.metricType=t.metricType||e.GoalMetricType.Percentage,this.metricUnitId=t.metricUnitId||null,this.actualValue=t.actualValue,this.weightage=t.weightage,this.isDecreasingGoal=t.isDecreasingGoal,this.isDevelopmentGoal=t.isDevelopmentGoal,this.isPrivateGoal=t.isPrivateGoal}return Object.defineProperty(t.prototype,"isFinished",{set:function(e){this.actualValue=e?this.targetValue:0},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"progress",{get:function(){return(this.actualValue-this.startValue)/(this.targetValue-this.startValue)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"progressPercentage",{get:function(){return 100*this.progress},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"weightageContribution",{get:function(){return this.weightage/100},enumerable:!0,configurable:!0}),t}();e.Objective=K;var Q=function(t){function i(i){var n=t.call(this,i)||this;return n.log=[],n.includeInReview=!0,n.priority=e.Priority.Low,n.description=i.description,n.entitySource=i.entitySource,n.entityReference=i.entityReference||null,n.goalType=i.goalType,n.categoryId=i.categoryId,n.startDate=i.startDate?"string"==typeof i.startDate?i.startDate.stringToDateWithZeroTime():new Date(i.startDate):null,n.endDate=i.endDate?"string"==typeof i.endDate?i.endDate.stringToDateWithZeroTime():new Date(i.endDate):null,n.isCompleted=i.isCompleted||!1,n.hasKeyResults=i.hasKeyResults||!1,n.areWeightagesEnabled=!!i.areWeightagesEnabled,n.authorId=i.authorId,n.createdOn=i.createdOn?new Date(i.createdOn):null,n.includeInReview=null==i.includeInReview||i.includeInReview,n.priority=i.priority||e.Priority.Low,n.checkInReminderSettings=new o(i.checkInReminderSettings||{}),n.businessUnitId=i.businessUnitId,i.log&&i.log.length&&(n.log=i.log.map(function(e){return new le(e)})),n.metricType==e.GoalMetricType.Checkbox&&(n.checkInValue=n.actualValue),n}return __extends(i,t),Object.defineProperty(i.prototype,"isFinished",{get:function(){return this.metricType==e.GoalMetricType.Checkbox&&this.actualValue==this.targetValue},enumerable:!0,configurable:!0}),i}(K);e.Goal=Q;var Z=function(e){function t(t){var i=e.call(this,t)||this;return i.parentGoalId=t.parentGoalId,i}return __extends(t,e),t}(K);e.KeyResult=Z;var X=function(t){function i(e){var i=t.call(this,e)||this;return i.goalOwners=[],i.keyResults=[],i.removeGoalOwner=function(e){i.goalOwners.splice(e,1)},i.goalOwners=e.goalOwners||[],i.keyResultCount=e.keyResultCount,i.keyResults=e.keyResults&&e.keyResults.length?e.keyResults.map(function(e){return new Z(e)}):[],i}return __extends(i,t),Object.defineProperty(i.prototype,"trackingStatus",{get:function(){var t=this.log.filter(function(t){return t.type==e.GoalLogItemType.CheckIn}).map(function(e){return new ce(e)});return t.length?t[t.length-1].checkInData.trackingStatus:e.GoalTrackingStatus.None},enumerable:!0,configurable:!0}),i}(Q);e.GoalListItem=X;var ee=function(e){function t(t){var i=e.call(this,t)||this;return i.goalCompetencies=[],i.assignedGroupIds=[],i.startValue=null!=t.startValue?t.startValue:0,i.targetValue=null!=t.targetValue?t.targetValue:100,i.actualValue=t.actualValue,i.assignedGroupIds=t.assignedGroupIds,t.keyResults&&t.keyResults.length&&(i.keyResults=t.keyResults.map(function(e){return new Q(e)})),t.goalCompetencies&&t.goalCompetencies.length&&(i.goalCompetencies=t.goalCompetencies.map(function(e){return new oe(e)})),i}return __extends(t,e),Object.defineProperty(t.prototype,"keyResultProgress",{get:function(){return this.keyResults.length?this.keyResults.map(function(e){return e.progress*e.weightageContribution}).reduce(function(e,t){return e+t}):0},enumerable:!0,configurable:!0}),t.prototype.addKeyResult=function(){this.keyResults.push(new Z({targetValue:100,startValue:0,actualValue:0}))},t.prototype.getKeyResult=function(e){return this.keyResults.filter(function(t){return t.identifier==e})[0]},t.prototype.removeKeyResult=function(e){var t=this.keyResults.indexOf(e);this.keyResults.splice(t,1)},t}(X);e.GoalViewModel=ee;var te=function(e){function t(t){var i=e.call(this,t)||this;return i.employeeIds=t&&t.employeeIds&&t.employeeIds.length?t.employeeIds:[],i}return __extends(t,e),t}(ee);e.GoalCloneRequest=te;var ie=function(t){function i(i){var n=t.call(this,i)||this;return n.checkInType=n.metricType==e.GoalMetricType.Checkbox?e.GoalCheckInValueType.Total:i.isDecreasingGoal?e.GoalCheckInValueType.Decrement:e.GoalCheckInValueType.Increment,n}return __extends(i,t),i}(K);e.CheckInGoalModel=ie;var ne=function(e){function t(t){var i=e.call(this,t)||this;return i.trackingStatus=t.trackingStatus||null,i.hasKeyResults=t.hasKeyResults,i.keyResults=t.keyResults&&t.keyResults.length?t.keyResults.map(function(e){return new ie(e)}):[],i}return __extends(t,e),t}(ie);e.GoalCheckInRequest=ne;var oe=function(){return function(e){this.id=e.id,this.name=e.name}}();e.LookupItem=oe;var re=function(){function t(t){this.keyResults=[],this.id=t.id,this.name=t.name,this.description=t.description,this.goalType=t.goalType||e.GoalType.Individual,this.categoryId=t.categoryId,this.keyResults=t.keyResults||new Array,this.hasKeyResults=t.hasKeyResults,this.startValue=null!=t.startValue?t.startValue:0,this.targetValue=null!=t.targetValue?t.targetValue:100,this.actualValue=t.actualValue}return t.prototype.addKeyResult=function(){this.keyResults.push(new ae({targetValue:100,startValue:0,actualValue:0}))},t.prototype.removeKeyResult=function(e){var t=this.keyResults.indexOf(e);this.keyResults.splice(t,1)},t}();e.GoalTemplate=re;var ae=function(e){function t(t){var i=e.call(this,t)||this;return i.keyResults=[],i}return __extends(t,e),t}(re);e.KeyResultsTemplate=ae;var se=function(){return function(e){this.id=e.id,this.name=e.name,this.goalType=e.goalType}}();e.GoalTemplateViewModel=se;var le=function(){return function(t){this.id=t.id,this.goalName=t.goalName,this.childGoalName=t.childGoalName,this.metricType=t.metricType,this.metricUnitName=t.metricUnitName,this.loggedBy=t.loggedBy,this.loggedByName=t.loggedByName,this.loggedOn=t.loggedOn?new Date(t.loggedOn):null,this.goalIdentifier=t.goalIdentifier,this.childGoalIdentifier=t.childGoalIdentifier,this.type=t.type||e.GoalLogItemType.None,this.logSource=t.logSource||e.GoalLogSource.Goal,this.metadata=t.metadata,t.type==e.GoalLogItemType.CheckIn&&(this.metadata=new pe(t.metadata||{}))}}();e.GoalLogItem=le;var ce=function(t){function i(i){var n=t.call(this,i)||this;return n.type=i.type||e.GoalLogItemType.CheckIn,n.checkInData=new pe(i.checkInData||i.metadata||{}),n}return __extends(i,t),i}(le);e.GoalCheckInLogItem=ce;var pe=function(){return function(e){this.note=e.note,this.trackingStatus=e.trackingStatus,this.checkInValue=e.checkInValue,this.checkInItemType=e.checkInItemType,this.newValue=e.newValue,this.oldValue=e.oldValue}}();e.GoalCheckInMetadata=pe;var ue=function(){return function(e){this.id=e.id,this.goalId=e.goalId,this.employeeId=e.employeeId,this.goalType=e.goalType}}();e.GoalEmployeeAssignment=ue;var de=function(){return function(e){this.id=e.id,this.name=e.name}}();e.GoalCategory=de;var me=function(){return function(e){this.date=e.date,this.peopleCount=e.peopleCount}}();e.PastReviewFilter=me;var ye=function(){return function(e){this.id=e.id,this.reviewId=e.reviewId,this.reviewGroupId=e.reviewGroupId,this.reviewCycleId=e.reviewCycleId,this.employeeId=e.employeeId,this.employeeName=e.employeeName,this.employeeNumber=e.employeeNumber,this.jobTitle=e.jobTitle,this.departmentId=e.departmentId,this.departmentName=e.departmentName,this.locationId=e.locationId,this.locationName=e.locationName,this.reportingManager=e.reportingManager,this.dateJoined=e.dateJoined,this.status=e.status,this.reviewReleaseStatus=e.reviewReleaseStatus,this.currentStepName=e.currentStepName}}();e.ReviewGroupEmployeeReviewsView=ye;var he=function(){return function(e){this.jobFunctions=[],this.id=e.id||0,this.reviewCycleId=e.reviewCycleId,this.reviewGroupId=e.reviewGroupId,this.employeeId=e.employeeId,this.employeeNumber=e.employeeNumber,this.displayName=e.displayName,this.jobFunctions=e.jobFunctions,this.reportingManager=e.reportingManager,this.cycleStartDate=e.cycleStartDate,this.lastReviewedOn=e.lastReviewedOn,this.dateJoined=e.dateJoined,this.status=e.status,this.departmentId=e.departmentId}}();e.EmployeeReviewsNotStarted=he;var fe=function(){return function(t){this.log=[],this.id=t.id,this.reviewId=t.reviewId,this.employeeId=t.employeeId,this.nominatedEmployeeId=t.nominatedEmployeeId,this.nominatedEmployee=t.nominatedEmployee,this.nominatedBy=t.nominatedBy,this.nominatedByEmployee=t.nominatedByEmployee,this.nomineeType=t.nomineeType,this.status=t.status,this.profileImageUrl=t.profileImageUrl,this.jobTitle=t.jobTitle,this.typeIdentifier=t.typeIdentifier,this.comments=t.comments,this.log=t.log,this.status=t.status||e.NominationRequestStatus.Pending,this.nomineeTypeName=t.nomineeTypeName}}();e.ReviewerNomination=fe;var ge=function(){function t(t){this.isDraft=!1,this.id=t.id,this.reviewId=t.reviewId,this.reviewerId=t.reviewerId,this.reviewerName=t.reviewerName,this.reviewerTypeIdentifier=t.reviewerTypeIdentifier,this.reviewerType=t.reviewerType||e.ReviewerType.None,this.reviewerTypeIdentifier=t.reviewerTypeIdentifier,this.reviewerTypeName=t.reviewerTypeName,this.reviewerTypeIdentifier=t.reviewerTypeIdentifier,this.autoCalculatedRating=t.autoCalculatedRating,this.originalGivenRating=t.originalGivenRating||null,this.submittedOn=t.submittedOn,this.moderatedRating=t.moderatedRating,this.comments=t.comments,this.moderatedBy=t.moderatedBy,this.moderatedOn=t.moderatedOn,this.isDraft=t.isDraft||!1,this.weightage=t.weightage,this.moderatedByName=t.moderatedByName,this.profileImageUrl=t.profileImageUrl,this.overallRating=t.overallRating}return Object.defineProperty(t.prototype,"weightedRating",{get:function(){return this.overallRating*(this.weightage/100)},enumerable:!0,configurable:!0}),t}();e.ReviewRating=ge;var ve=function(){return function(e){this.reviewRatingTransactions=[],this.reviewRating=e.reviewRating,this.reviewRatingTransactions=e.reviewRatingTransactions}}();e.ReviewRatingViewModel=ve;var Se=function(){function t(t){this.originalGivenRating=0,this.ratingNotApplicable=!1,this.options=[],this.selectedAnswers=[],this.isDraft=!1,this.attachments=[],this.otherEmployeeRatings=[],this.isEdit=!1,this.isSubmitted=!1,this.isPreview=!1,this.id=t.id,this.ratingId=t.ratingId,this.reviewId=t.reviewId,this.employeeId=t.employeeId||0,this.reviewerId=t.reviewerId||0,this.reviewerType=t.reviewerType||e.ReviewerType.None,this.reviewerTypeIdentifier=t.reviewerTypeIdentifier,this.stepIdentifier=t.stepIdentifier,this.reviewObjective=t.reviewObjective||0,this.reviewObjectiveId=t.reviewObjectiveId||0,this.reviewObjectiveGroupId=t.reviewObjectiveGroupId,this.title=t.title,this.description=t.description,this.originalGivenRating=t.originalGivenRating||0,this.comments=t.comments,this.weightage=t.weightage,this.objectiveComponents=t.objectiveComponents?t.objectiveComponents.map(function(t){return new e.ObjectiveComponent(t)}):[],this.submittedOn=t.submittedOn,this.ratingNotApplicable=t.ratingNotApplicable,this.reviewGoalDetails=new be(t.reviewGoalDetails||{}),this.responseType=t.responseType,this.options=t.options,this.selectedAnswers=t.selectedAnswers,this.ratingScaleId=t.ratingScaleId,this.isCommentRequired=t.isCommentRequired,this.allowAttachments=t.allowAttachments,this.isDraft=t.isDraft||!1,this.attachments=t.attachments||[],this.responseComments=t.responseComments,this.otherEmployeeRatings=t.otherEmployeeRatings||[],this.isPreview=t.isPreview,this.isEdit=!this.isPreview&&(!!this.isDraft||!(this.autoCalculatedRating>0||this.ratingNotApplicable||this.responseType==e.ReviewResponseType.Radio&&(this.selectedAnswers.length>0||this.ratingNotApplicable)&&(!this.isCommentRequired||this.comments)||this.responseType==e.ReviewResponseType.TextBox&&this.comments)),this.isSubmitted=!1,this.ratingScale=t.ratingScale}return Object.defineProperty(t.prototype,"autoCalculatedRating",{get:function(){var t=this;if(this.responseType!=e.ReviewResponseType.Rating)return null;if(this.reviewObjective!=e.ReviewObjective.Goals&&this.objectiveComponents.length>0){var i=0,n=0;return this.objectiveComponents.forEach(function(e){e.ratingNotApplicable||(i+=e.rating,n++)}),n>0?i/n:0}if(this.reviewGoalDetails.keyResultRatingEnabled&&this.objectiveComponents.length>0){var o=0,r=0,a=0;return this.objectiveComponents.forEach(function(e){e.ratingNotApplicable||(o=t.reviewGoalDetails.areWeightagesEnabled?o+e.rating*e.weightage:o+e.rating,a+=e.weightage,r++)}),this.reviewGoalDetails.areWeightagesEnabled&&o>0?o/a:r>0?o/r:0}return this.originalGivenRating},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isCompleted",{get:function(){if(this.isPreview)return!0;if(this.reviewObjective!=e.ReviewObjective.Goals&&this.objectiveComponents.length>0||this.reviewObjective==e.ReviewObjective.Goals&&this.reviewGoalDetails.keyResultRatingEnabled&&this.objectiveComponents.length>0)return this.objectiveComponents.every(function(e){return e.isCompleted});switch(this.responseType){case e.ReviewResponseType.Radio:return!(!(this.selectedAnswers.length>0||this.ratingNotApplicable)||this.isCommentRequired&&!this.comments);case e.ReviewResponseType.Rating:return!(!((this.autoCalculatedRating||this.originalGivenRating)>0||this.ratingNotApplicable)||this.isCommentRequired&&!this.comments);case e.ReviewResponseType.TextBox:return!!this.comments}},enumerable:!0,configurable:!0}),t}();e.ReviewRatingTransaction=Se;var Ce=function(e){function t(t){var i=e.call(this,t)||this;return i.displayName=t.displayName,i.profileImageUrl=t.profileImageUrl,i.moderatedEmployee=t.moderatedEmployee,i}return __extends(t,e),t}(Se);e.ReviewRatingTransactionView=Ce;var we=function(){function t(e){this.rating=0,this.ratingNotApplicable=!1,this.selectedAnswers=[],this.options=[],this.isEdit=!1,this.isSubmitted=!1,this.isPreview=!1,this.componentId=e.componentId,this.reviewObjective=e.reviewObjective,this.title=e.title,this.description=e.description,this.rating=e.rating||0,this.ratingNotApplicable=e.ratingNotApplicable,this.comments=e.comments,this.reviewerId=e.reviewerId,this.selectedAnswers=e.selectedAnswers,this.responseType=e.responseType,this.ratingScaleId=e.ratingScaleId,this.options=e.options,this.isCommentRequired=e.isCommentRequired,this.displayName=e.displayName,this.submittedOn=e.submittedOn,this.goalMeasurements=new Pe(e.goalMeasurements||{}),this.responseComments=e.responseComments,this.weightage=e.weightage,this.isPreview=e.isPreview,this.isEdit=!this.isPreview&&!this.isCompleted,this.isSubmitted=!1}return Object.defineProperty(t.prototype,"isCompleted",{get:function(){if(this.isPreview)return!0;switch(this.responseType){case e.ReviewResponseType.Radio:return!(!(this.selectedAnswers.length>0||this.ratingNotApplicable)||this.isCommentRequired&&!this.comments);case e.ReviewResponseType.Rating:return!(!(this.rating>0||this.ratingNotApplicable)||this.isCommentRequired&&!this.comments);case e.ReviewResponseType.TextBox:return!!this.comments}},enumerable:!0,configurable:!0}),t}();e.ObjectiveComponent=we;var be=function(){return function(t){this.areWeightagesEnabled=t.areWeightagesEnabled,this.keyResultRatingEnabled=t.keyResultRatingEnabled||!1,this.goalType=t.goalType||e.GoalType.Individual,this.identifier=t.identifier,this.endDate=t.endDate,this.goalMeasurements=new Pe(t.goalMeasurements||{})}}();e.ReviewGoalDetails=be;var Pe=function(){function e(e){this.startValue=e.startValue,this.actualValue=e.actualValue,this.targetValue=e.targetValue}return Object.defineProperty(e.prototype,"progress",{get:function(){return(this.actualValue-this.startValue)/(this.targetValue-this.startValue)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"progressPercentage",{get:function(){return 100*this.progress},enumerable:!0,configurable:!0}),e}();e.GoalMeasurements=Pe;var Te=function(){return function(e){this.participants=[],this.id=e.id,this.reviewId=e.reviewId,this.stepIdentifier=e.stepIdentifier,this.meetingDate=e.meetingDate?new Date(e.meetingDate):new Date,this.participants=(e.participants||[]).map(function(e){return new De(e)}),this.meetingSummary=e.meetingSummary,this.submittedOn=e.submittedOn,this.submittedBy=e.submittedBy,this.lastSubmittedBy=e.lastSubmittedBy}}();e.EmployeeReviewMeeting=Te;var De=function(){return function(e){this.reviewerType=e.reviewerType,this.employeeId=e.employeeId,this.displayName=e.displayName,this.profileImageUrl=e.profileImageUrl,this.jobTitle=e.jobTitle,this.isPresent=e.isPresent}}();e.ReviewMeetingParticipant=De;var Ie=function(){return function(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y){this.id=e,this.employeeNumber=t,this.displayName=i,this.jobTitle=n,this.reportingManager=o,this.departmentId=r,this.departmentName=a,this.reviewCycleName=s,this.reviewProcessName=l,this.primaryJobFunctionName=c,this.primaryJobFunctionWeightage=p,this.secondaryJobFunctionName=u,this.secondaryJobFunctionWeightage=d,this.cycleStartDate=m,this.lastReviewDate=y}}();e.EmployeePerformanceInformation=Ie;var Ae=function(){return function(e){this.reviewRatings=[],this.reviewId=e.reviewId,this.comments=e.comments,this.reviewRatings=e.reviewRatings,this.reviewReleaseStatus=e.reviewReleaseStatus}}();e.ReviewFinalizeViewModel=Ae;var Ee=function(){return function(e){this.reviewerOverride=[],this.reviewerOverride=e.reviewerOverride?e.reviewerOverride.map(function(e){return new Re(e)}):[]}}();e.ReviewOverride=Ee;var Re=function(){function e(e){this.stepOverrides=[],this.canReviewerTypeAddInNextStep=!1,this.canReviewerTypeAddInCurrentStep=!1,this.canReviewerAddInCurrentStep=!1,this.canRemoveReviewerType=!1,this.identifier=e.identifier,this.reviewerType=e.reviewerType,this.reviewerTypeName=e.reviewerTypeName,this.isAdditionalReviewer=e.isAdditionalReviewer,this.stepOverrides=e.stepOverrides?e.stepOverrides.map(function(e){return new Me(e)}):[],this.setReviewerOverrideAttributes()}return e.prototype.setReviewerOverrideAttributes=function(){var e=this;this.stepOverrides.forEach(function(t){return e[t.stepIdentifier]=t})},e.prototype.toJSON=function(){return{identifier:this.identifier,reviewerType:this.reviewerType,reviewerTypeName:this.reviewerTypeName,isAdditionalReviewer:this.isAdditionalReviewer,stepOverrides:this.stepOverrides}},e.prototype.getReviewStepOverrideAttribute=function(e){return this.stepOverrides.find(function(t){return t.stepIdentifier==e})},e}();e.ReviewerOverride=Re;var xe=function(){function e(e){this.$type=e.$type,this.stepIdentifier=e.stepIdentifier,this.stepType=e.stepType,this.sequenceOrder=e.sequenceOrder,this.reviewerWeightage=e.reviewerWeightage,this.reviewerOverrideDetails=e.reviewerOverrideDetails?e.reviewerOverrideDetails.map(function(e){return new Ne(e)}):[],this.reviewerOverrideBufferDetails=e.reviewerOverrideDetails?e.reviewerOverrideDetails.slice(0,2):[],this.isParticipant=this.isReviewerInSequence,this.durationInDays=e.durationInDays,this.instructions=e.instructions,this.isAdded=e.isAdded||!1}return Object.defineProperty(e.prototype,"isReviewerInSequence",{get:function(){return this.reviewerOverrideDetails&&0!=this.reviewerOverrideDetails.length&&this.reviewerOverrideDetails.filter(function(e){return!e.isRemoved}).length>0},enumerable:!0,configurable:!0}),e}();e.ReviewerStepOverride=xe;var Me=function(e){function t(t){var i=e.call(this,t)||this;return i.accessibleReviewerFeedback=[],i.hideReviewerIdentity=t.hideReviewerIdentity,i.accessibleReviewerFeedback=t.accessibleReviewerFeedback,i}return __extends(t,e),t}(xe);e.ReviewerFormStepOverride=Me;var Ne=function(){return function(e){this.isAdded=!1,this.isRemoved=!1,this.employeeId=e.employeeId,this.employeeIdentifier=e.employeeIdentifier,this.employeeName=e.employeeName,this.reviewSubmissionStatus=e.reviewSubmissionStatus,this.isAdded=e.isAdded||!1,this.isRemoved=e.isRemoved||!1,this.note=e.note,this.isDefaultlyAdded=e.isDefaultlyAdded||!1}}();e.ReviewerOverrideDetails=Ne;var Oe=function(){return function(t){this.id=t.id,this.reviewOverride=new e.ReviewOverride(t.reviewOverride),this.employeeId=t.employeeId,this.employeeName=t.employeeName,this.reportingTo=t.reportingTo,this.reportingManager=t.reportingManager,this.l2ManagerId=t.l2ManagerId,this.l2Manager=t.l2Manager,this.departmentHeads=t.departmentHeads,this.externalReviewerProfiles=t.externalReviewerProfiles||[]}}();e.EmployeeReviewersManagementView=Oe;var ke=function(){function e(e){this.id=e.id,this.identifier=e.identifier,this.firstName=e.firstName,this.lastName=e.lastName,this.jobTitle=e.jobTitle,this.company=e.company,this.email=e.email}return Object.defineProperty(e.prototype,"displayName",{get:function(){return this.firstName+" "+this.lastName},enumerable:!0,configurable:!0}),e}();e.ExternalReviewerProfile=ke;var Fe=function(){return function(e){this.id=e.id,this.order=e.order,this.reviewerId=e.reviewerId,this.reviewerType=e.reviewerType,this.reviewerTypeIdentifier=e.reviewerTypeIdentifier,this.reviewFor=e.reviewFor,this.reviewId=e.reviewId,this.stepIdentifier=e.stepIdentifier,this.stepType=e.stepType,this.reviewSubmissionStatus=e.reviewSubmissionStatus}}();e.CurrentReviewer=Fe;var $e=function(){return function(e){this.reviewerId=e.reviewerId,this.reviewerType=e.reviewerType,this.reviewerEmployeeNumber=e.reviewerEmployeeNumber,this.reviewerTypeIdentifier=e.reviewerTypeIdentifier,this.reviewerName=e.reviewerName,this.submittedOn=e.submittedOn,this.comments=e.comments,this.sequenceOrder=e.sequenceOrder}}();e.ReviewUnlockViewModel=$e;var Ge=function(){return function(e){this.id=e.id,this.employeeId=e.employeeId,this.reviewCycleId=e.reviewCycleId,this.displayName=e.displayName,this.employeeNumber=e.employeeNumber,this.jobTitle=e.jobTitle,this.reportingManager=e.reportingManager,this.status=e.status,this.reviewReleaseStatus=e.reviewReleaseStatus,this.reviewCycleName=e.reviewCycleName,this.overallRating=e.overallRating,this.completedOn=e.completedOn,this.cancelledOn=e.cancelledOn}}();e.EmployeeSubOrdinateReviewView=Ge;var Le=function(){return function(e){this.enableCalibration=e.enableCalibration,this.usePerformanceBands=e.usePerformanceBands,this.isSetupCompleted=void 0!=this.enableCalibration&&void 0!=this.usePerformanceBands}}();e.CalibrationSettings=Le}(e.Model||(e.Model={}))}(PMS||(PMS={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){!function(e){e[e.Active=0]="Active",e[e.Completed=1]="Completed",e[e.Cancelled=2]="Cancelled",e[e.Skipped=3]="Skipped"}(e.MeetingStatus||(e.MeetingStatus={})),function(e){e[e.Organizer=0]="Organizer",e[e.Participant=1]="Participant",e[e.Observer=2]="Observer"}(e.MeetingParticipantType||(e.MeetingParticipantType={})),function(e){e[e.None=0]="None",e[e.BasedOnJoiningDate=1]="BasedOnJoiningDate",e[e.BasedOnProbationEndDate=2]="BasedOnProbationEndDate"}(e.CycleBeginCondition||(e.CycleBeginCondition={})),function(e){e[e.None=0]="None",e[e.Monthly=1]="Monthly",e[e.Quarterly=2]="Quarterly",e[e.HalfYearly=3]="HalfYearly",e[e.Yearly=4]="Yearly"}(e.CycleFrequency||(e.CycleFrequency={})),function(e){e[e.None=0]="None",e[e.Self=1]="Self",e[e.ReportingManager=2]="ReportingManager",e[e.ManagerOfManager=3]="ManagerOfManager",e[e.HRManager=4]="HRManager",e[e.DepartmentHead=5]="DepartmentHead",e[e.Peer=6]="Peer",e[e.External=7]="External",e[e.Subordinate=8]="Subordinate",e[e.BusinessUnitHead=9]="BusinessUnitHead",e[e.OtherEmployee=10]="OtherEmployee"}(e.ReviewerType||(e.ReviewerType={})),function(e){e[e.NotSubmitted=0]="NotSubmitted",e[e.Submitted=1]="Submitted",e[e.Unlocked=2]="Unlocked"}(e.ReviewSubmissionStatus||(e.ReviewSubmissionStatus={})),function(e){e[e.Appreciate=0]="Appreciate",e[e.Personal=1]="Personal",e[e.Private=2]="Private"}(e.FeedbackTypes||(e.FeedbackTypes={})),function(e){e[e.None=0]="None",e[e.Nomination=1]="Nomination",e[e.Meeting=2]="Meeting",e[e.Form=3]="Form",e[e.Calibration=4]="Calibration",e[e.FinalStep=5]="FinalStep"}(e.ReviewStepType||(e.ReviewStepType={})),function(e){e[e.None=0]="None",e[e.Competencies=1]="Competencies",e[e.Goals=2]="Goals",e[e.ReviewForm=3]="ReviewForm",e[e.CoreValues=4]="CoreValues",e[e.Skill=5]="Skill"}(e.ReviewObjective||(e.ReviewObjective={})),function(e){e[e.Rating=0]="Rating",e[e.PerformanceBand=1]="PerformanceBand"}(e.RatingVisibilityType||(e.RatingVisibilityType={})),function(e){e[e.None=0]="None",e[e.CommonSuccess=1]="CommonSuccess",e[e.JobSpecific=2]="JobSpecific",e[e.Core=3]="Core"}(e.CompetencyType||(e.CompetencyType={})),function(e){e[e.None=0]="None",e[e.TextBox=1]="TextBox",e[e.Radio=3]="Radio",e[e.Rating=22]="Rating"}(e.ReviewResponseType||(e.ReviewResponseType={})),function(e){e[e.Individual=0]="Individual",e[e.Team=1]="Team",e[e.Department=2]="Department",e[e.Organization=3]="Organization"}(e.GoalType||(e.GoalType={})),function(e){e[e.New=0]="New",e[e.Copied=1]="Copied"}(e.GoalSource||(e.GoalSource={})),function(e){e[e.Percentage=0]="Percentage",e[e.Number=1]="Number",e[e.Checkbox=2]="Checkbox"}(e.GoalMetricType||(e.GoalMetricType={})),function(e){e[e.None=0]="None",e[e.PerformanceReview=1]="PerformanceReview",e[e.ReviewInternal=2]="ReviewInternal",e[e.ReviewExternal=3]="ReviewExternal"}(e.ReviewProcessType||(e.ReviewProcessType={})),function(e){e[e.NotStarted=0]="NotStarted",e[e.Nominating=1]="Nominating",e[e.InNominationApproval=2]="InNominationApproval",e[e.InProgress=3]="InProgress",e[e.InCalibration=4]="InCalibration",e[e.Finalized=5]="Finalized",e[e.Cancelled=6]="Cancelled",e[e.CalibrationInitiated=7]="CalibrationInitiated",e[e.CalibrationCompleted=8]="CalibrationCompleted",e[e.WritingReviewSummary=9]="WritingReviewSummary",e[e.AwaitingForRelease=10]="AwaitingForRelease",e[e.Completed=11]="Completed"}(e.ReviewStatus||(e.ReviewStatus={})),function(e){e[e.NotStarted=0]="NotStarted",e[e.Initiated=1]="Initiated",e[e.AwaitingForBandAssignment=2]="AwaitingForBandAssignment",e[e.Finalized=3]="Finalized",e[e.Completed=4]="Completed",e[e.Disabled=5]="Disabled"}(e.ReviewCalibrationStatus||(e.ReviewCalibrationStatus={})),function(e){e[e.None=0]="None",e[e.NotReleased=1]="NotReleased",e[e.Released=2]="Released",e[e.Hidden=3]="Hidden"}(e.ReviewReleaseStatus||(e.ReviewReleaseStatus={})),function(e){e[e.SystemGenerated=0]="SystemGenerated",e[e.Manual=1]="Manual"}(e.ReviewType||(e.ReviewType={})),function(e){e[e.Pending=0]="Pending",e[e.Approved=1]="Approved",e[e.Rejected=2]="Rejected",e[e.PartApproved=3]="PartApproved"}(e.NominationRequestStatus||(e.NominationRequestStatus={})),function(e){e[e.None=0]="None",e[e.Independently=1]="Independently",e[e.Collaboratively=2]="Collaboratively",e[e.Sequentially=3]="Sequentially"}(e.StepFunction||(e.StepFunction={})),function(e){e[e.Days=2]="Days",e[e.Weeks=3]="Weeks",e[e.Months=4]="Months"}(e.GoalConsiderationPeriodUnit||(e.GoalConsiderationPeriodUnit={})),function(e){e[e.None=0]="None",e[e.OnTrack=1]="OnTrack",e[e.OffTrack=2]="OffTrack",e[e.AtRisk=3]="AtRisk"}(e.GoalTrackingStatus||(e.GoalTrackingStatus={})),function(e){e[e.None=0]="None",e[e.Create=1]="Create",e[e.Update=2]="Update",e[e.CheckIn=3]="CheckIn",e[e.KeyResultUpdate=4]="KeyResultUpdate",e[e.EmployeeAssignment=5]="EmployeeAssignment",e[e.GroupAssignment=6]="GroupAssignment",e[e.Alignment=7]="Alignment",e[e.Delete=8]="Delete",e[e.Archive=9]="Archive",e[e.Complete=10]="Complete",e[e.Reopen=11]="Reopen"}(e.GoalLogItemType||(e.GoalLogItemType={})),function(e){e[e.Goal=0]="Goal",e[e.ChildGoal=1]="ChildGoal",e[e.KeyResult=2]="KeyResult"}(e.GoalLogSource||(e.GoalLogSource={})),function(e){e[e.Increment=0]="Increment",e[e.Decrement=1]="Decrement",e[e.Total=2]="Total"}(e.GoalCheckInValueType||(e.GoalCheckInValueType={})),function(e){e[e.None=0]="None",e[e.Manager=1]="Manager",e[e.ManagerAndEmployee=2]="ManagerAndEmployee"}(e.StepSignOffBy||(e.StepSignOffBy={})),function(e){e[e.None=0]="None",e[e.EqualsTo=1]="EqualsTo",e[e.NotEqualsTo=2]="NotEqualsTo",e[e.In=3]="In",e[e.NotIn=4]="NotIn"}(e.ComparatorType||(e.ComparatorType={})),function(e){e[e.NotRequired=0]="NotRequired",e[e.Optional=1]="Optional",e[e.Required=2]="Required"}(e.KeyResultRequirementType||(e.KeyResultRequirementType={})),function(e){e[e.Low=0]="Low",e[e.Medium=1]="Medium",e[e.High=2]="High"}(e.Priority||(e.Priority={})),function(e){e[e.None=0]="None",e[e.Skill=1]="Skill",e[e.Competency=2]="Competency",e[e.CoreValue=3]="CoreValue"}(e.SkillType||(e.SkillType={})),function(e){e[e.None=0]="None",e[e.Everyone=1]="Everyone",e[e.EmployeeOnly=2]="EmployeeOnly",e[e.ManagersOnly=3]="ManagersOnly"}(e.ReviewItemVisibility||(e.ReviewItemVisibility={})),function(e){e[e.CommonCycle=0]="CommonCycle",e[e.IndividualCycle=1]="IndividualCycle"}(e.ReviewCycleType||(e.ReviewCycleType={})),function(e){e[e.None=0]="None",e[e.Standard=1]="Standard",e[e.OKR=2]="OKR"}(e.GoalMethod||(e.GoalMethod={})),function(e){e[e.None=0]="None",e[e.OnlyManagers=1]="OnlyManagers",e[e.WithinDepartment=2]="WithinDepartment",e[e.Everyone=3]="Everyone"}(e.GoalVisibility||(e.GoalVisibility={})),function(e){e[e.Monthly=0]="Monthly",e[e.BiMonthly=1]="BiMonthly",e[e.Quarterly=2]="Quarterly",e[e.HalfYearly=3]="HalfYearly",e[e.Yearly=4]="Yearly"}(e.Frequency||(e.Frequency={})),function(e){e[e.AfterJoining=0]="AfterJoining",e[e.AfterProbation=1]="AfterProbation"}(e.ReviewEligibilityCriteria||(e.ReviewEligibilityCriteria={}));var t=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.None=0,t.ProgressUpdate=1,t.StatusUpdate=2,t.ProgressAndStatusUpdate=3,t[0]="None",t[1]="Progress Update",t[2]="Status Update",t[3]="Progress and Status Update",t}(SharedPatterns.Enum);e.GoalCheckInItemType=t,function(e){e[e.NotStarted=0]="NotStarted",e[e.InProgress=1]="InProgress",e[e.Completed=2]="Completed"}(e.ReviewGroupCycleStatus||(e.ReviewGroupCycleStatus={})),function(e){e[e.StandardCycle=0]="StandardCycle",e[e.AdhocCycle=1]="AdhocCycle"}(e.ReviewCycleCategory||(e.ReviewCycleCategory={})),function(e){e[e.None=0]="None",e[e.Hours=1]="Hours",e[e.Days=2]="Days",e[e.Weeks=3]="Weeks",e[e.Months=4]="Months",e[e.HalfYear=5]="HalfYear",e[e.Year=6]="Year",e[e.Quarterly=7]="Quarterly"}(e.TimeDuration||(e.TimeDuration={}))}(e.Model||(e.Model={}))}(PMS||(PMS={})),function(e){!function(t){var i=function(){function t(t,i,n,o,r,a,s){var l=this;this._scope=t,this.stateParams=i,this.reviewAdministrationService=n,this.reviewStepType=o,this.reviewLogItemType=r,this.reviewObjectives=a,this.reviewer=s,this.cycleId=this.stateParams.cycleId,this.employeeId=this.stateParams.employeeId,(this.employeeId?this.reviewAdministrationService.getEmployeeReviewSummary(this.employeeId,this.cycleId):this.reviewAdministrationService.getEmployeeReviewSummary(this.cycleId)).then(function(t){l.selectedReview=new e.Model.EmployeePastReviewSummary(t),l.currentStep=l.selectedReview.reviewStepsInfo[0]})}return t.$inject=["$scope","$stateParams","ReviewAdministrationService","ReviewStepType","ReviewLogItemType","ReviewObjectives","Reviewer"],t}();t.EmployeeReviewPreviewController=i;var n=function(){function t(t,i,n,o,r,a,s){var l=this;this._scope=t,this.stateParams=i,this.reviewAdministrationService=n,this.reviewStepType=o,this.reviewLogItemType=r,this.reviewObjectives=a,this.reviewer=s,this.cycleId=this.stateParams.cycleId,this.employeeId=this.stateParams.employeeId,this.reviewAdministrationService.getEmployeeReviewSummary(this.employeeId,this.cycleId,this.reviewer).then(function(t){l.selectedReview=new e.Model.EmployeePastReviewSummary(t),l.currentStep=l.selectedReview.reviewStepsInfo[0]})}return t.$inject=["$scope","$stateParams","ReviewAdministrationService","ReviewStepType","ReviewLogItemType","ReviewObjectives","Reviewer"],t}();t.EmployeePastReviewPreviewController=n;var o=function(){function e(e,t,i,n,o,r){this.scope=e,this.stateParams=t,this.reviewerType=i,this.notificationService=n,this.nominationRequestStatus=o,this.myPerformanceService=r,this.getApprovers=function(e){return e.log.map(function(e){return e.approverName}).join(", ")}}return e.prototype.$onInit=function(){var e=this;(this.stateParams.employeeId?this.reviewComponentService.getPastNominationsSummary(this.stateParams.employeeId,this.stateParams.cycleId,this.reviewer):this.myPerformanceService.getPastNominationsSummary(this.stateParams.cycleId)).then(function(t){e.employeePastReviewNominationSummary=t},function(t){e.notificationService.error("Error in loading nomination summary details")})},e.$inject=["$state","$stateParams","ReviewerType","NotificationService","NominationRequestStatus","MyPerformanceService"],e}();t.EmployeePastNominationsSummaryController=o;var r=function(){function t(e,t,i){this.scope=e,this.stateParams=t,this.reviewerType=i,this.peoplePresentInMeeting=[],this.peopleNotPresentInMeeting=[]}return t.prototype.$onInit=function(){this.setMeetingSummary()},t.prototype.$onChanges=function(e){e.currentStep.previousValue.stepIdentifier!=e.currentStep.currentValue.stepIdentifier&&this.setMeetingSummary()},t.prototype.setMeetingSummary=function(){var t=this;(this.stateParams.employeeId?this.reviewComponentService.getReviewMeetingSummary(this.stateParams.employeeId,this.selectedReview.id,this.currentStep.stepIdentifier):this.reviewComponentService.getReviewMeetingSummary(this.selectedReview.id,this.currentStep.stepIdentifier)).then(function(i){t.meetingSummary=new e.Model.EmployeeReviewMeeting(i),t.setParticipants()})},t.prototype.setParticipants=function(){this.peoplePresentInMeeting=this.meetingSummary.participants.filter(function(e){return e.isPresent}),this.peopleNotPresentInMeeting=this.meetingSummary.participants.filter(function(e){return!e.isPresent})},t.$inject=["$state","$stateParams","ReviewerType"],t}();t.EmployeeMeetingPreviewController=r;var a=function(){function t(e,t,i,n,o,r,a,s,l,c,p){this.scope=e,this.stateParams=t,this.reviewerTypes=i,this.pmsSettings=n,this.appSettings=o,this.notificationService=r,this.reviewObjectives=a,this.reviewResponseType=s,this.filter=l,this.appContext=c,this.q=p,this.showReadonlyForm=!0,this.reviewRatings=[],this.reviewRatingTransactions=[],this.pastReviewRatingTransactions=[],this.otherEmployeeRatingTransactions=[],this.employeeId=this.stateParams.employeeId,this.cycleId=this.stateParams.cycleId,this.setProgressOptions()}return t.prototype.setProgressOptions=function(){this.progressOptions=angular.copy(this.appSettings.progressOptions),this.progressOptions.strokeWidth=12,this.progressOptions.trailWidth=10,this.progressOptions.text.style.fontSize="9px",this.progressOptions.text.style.color="#43A0EA",this.progressOptions.text.style.top="12px"},t.prototype.$onInit=function(){var t=this;(this.stateParams.employeeId?this.reviewComponentService.getPastReviewSummary(this.stateParams.employeeId,this.stateParams.cycleId,this.reviewer):this.reviewComponentService.getPastReviewSummary(this.stateParams.cycleId)).then(function(i){t.employeeReview=new e.Model.ReviewSummary(i),t.selectedReview=t.employeeReview,t.pastReviewRatingTransactions=t.filter("orderBy")(t.employeeReview.reviewRatingTransactions.map(function(t){return new e.Model.ReviewRatingTransactionView(t)}),"ratingId"),t.reviewRatings=t.filter("orderBy")(t.employeeReview.reviewRatings.map(function(t){return new e.Model.ReviewRating(t)}),"id"),t.currentView=t.reviewObjectives.none.id,t.setSkillRatings(),t.setQuestionnaireRatings(),t.setGoals()},function(e){t.notificationService.error("Error in loading employee review details")})},t.prototype.setSkillRatings=function(){var t=this,i=this.pastReviewRatingTransactions.filter(function(t){return t.reviewObjective==e.Model.ReviewObjective.Competencies||t.reviewObjective==e.Model.ReviewObjective.CoreValues}),n=this.filter("groupBy")(i,"reviewObjectiveGroupId");Object.keys(n).forEach(function(i){t.filter("unique")(n[i],"reviewObjectiveId").forEach(function(i){var n=new e.Model.ReviewRatingTransaction({reviewObjective:i.reviewObjective,reviewObjectiveId:i.reviewObjectiveId,title:i.title,description:i.description,weightage:i.weightage,isPreview:!0,reviewObjectiveGroupId:i.reviewObjectiveGroupId}),o=i.objectiveComponents;n.objectiveComponents=o.length>0?t.setSkillBahviourRatings(i.reviewObjective,o,n.isDraft):[],n.otherEmployeeRatings=t.getEmployeeRatings(i.reviewObjective,i.reviewObjectiveId,i.reviewObjectiveGroupId),n.isPreview=!0,t.reviewRatingTransactions.push(n)})})},t.prototype.setSkillBahviourRatings=function(t,i,n){var o=[];return i.forEach(function(i){var n=new e.Model.ObjectiveComponent({componentId:i.componentId,reviewObjective:t,title:i.title,isPreview:!0});n.isPreview=!0,o.push(n)}),o},t.prototype.setQuestionnaireRatings=function(){var t=this;this.filter("unique")(this.pastReviewRatingTransactions.filter(function(t){return t.reviewObjective==e.Model.ReviewObjective.ReviewForm}),"reviewObjectiveId",!1).forEach(function(i){var n=i.ratingScaleId?new e.Model.RatingScale(t.employeeReview.ratingScales.find(function(e){return e.id==i.ratingScaleId})):null,o=new e.Model.ReviewRatingTransaction({reviewObjective:e.Model.ReviewObjective.ReviewForm,reviewObjectiveId:i.reviewObjectiveId,title:i.title,description:i.description,isPreview:!0,responseType:i.responseType,options:i.options,selectedAnswers:i.selectedAnswers,ratingScaleId:i.ratingScaleId,allowAttachments:i.allowAttachments});o.selectedAnswers=[],o.ratingScale=n,o.otherEmployeeRatings=t.getEmployeeRatings(e.Model.ReviewObjective.ReviewForm,i.reviewObjectiveId),o.isPreview=!0,t.reviewRatingTransactions.push(o)})},t.prototype.setGoals=function(){var t=this;this.filter("unique")(this.pastReviewRatingTransactions.filter(function(t){return t.reviewObjective==e.Model.ReviewObjective.Goals}),"reviewObjectiveId",!1).forEach(function(i){var n=new e.Model.ReviewRatingTransaction({reviewObjective:e.Model.ReviewObjective.Goals,reviewObjectiveId:i.reviewObjectiveId,title:i.title,description:i.description,isPreview:!0});n.reviewGoalDetails=new e.Model.ReviewGoalDetails(i.reviewGoalDetails),n.reviewGoalDetails.goalMeasurements=new e.Model.GoalMeasurements(i.reviewGoalDetails.goalMeasurements),n.otherEmployeeRatings=t.getEmployeeRatings(e.Model.ReviewObjective.Goals,i.reviewObjectiveId),n.isPreview=!0,n.objectiveComponents=t.setKeyResults(i.objectiveComponents,i,i.isDraft),t.reviewRatingTransactions.push(n)})},t.prototype.setKeyResults=function(t,i,n){var o=[];return t.forEach(function(t){var i=new e.Model.ObjectiveComponent({componentId:t.componentId,reviewObjective:e.Model.ReviewObjective.Goals,title:t.title,isPreview:!0});i.weightage=t.weightage,i.goalMeasurements=new e.Model.GoalMeasurements(t.goalMeasurements),o.push(i)}),o},t.prototype.getEmployeeRatings=function(t,i,n){var o=this,r=this.pastReviewRatingTransactions.filter(function(e){return e.reviewObjective==t&&e.reviewObjectiveId==i&&e.reviewObjectiveGroupId==n});return r.forEach(function(t){t.ratingScaleId&&(t.ratingScale=new e.Model.RatingScale(o.employeeReview.ratingScales.find(function(e){return e.id==t.ratingScaleId})))}),r},t.prototype.getObjectiveRatings=function(e){var t=e||this.currentView;return this.reviewRatingTransactions.filter(function(e){return e.reviewObjective==t})},t.prototype.getTotalRatingCount=function(e){return this.getObjectiveRatings(e).length},t.prototype.getCompletedRatings=function(e){return this.getObjectiveRatings(e).filter(function(e){return e.isCompleted}).length},t.prototype.getPendingRatings=function(e){return this.getObjectiveRatings(e).filter(function(e){return!e.isCompleted}).length},t.prototype.getAutoCalculatedRating=function(){var t=this;if(this.reviewSummary){var i=0;return this.employeeReview.reviewObjectiveWeightageConfig.forEach(function(n){n.reviewObjective!=e.Model.ReviewObjective.ReviewForm&&n.responseType!=e.Model.ReviewResponseType.Rating||(i+=t.getAverageRating(n.reviewObjective)*(n.weightage/100))}),i}},t.prototype.getAverageRating=function(t){var i=0,n=0;return this.getObjectiveRatings(t).filter(function(e){return e.isCompleted}).forEach(function(t){if(!t.ratingNotApplicable&&(t.reviewObjective==e.Model.ReviewObjective.ReviewForm||t.responseType==e.Model.ReviewResponseType.Rating)){var o=t.originalGivenRating>0?t.originalGivenRating:t.autoCalculatedRating;o>0&&(i+=o,n++),t.otherEmployeeRatings.forEach(function(e){var t=e.originalGivenRating>0?e.originalGivenRating:e.autoCalculatedRating;t>0&&(i+=t,n++)})}}),i>0?i/n:0},t.$inject=["$state","$stateParams","ReviewerType","PMSSettings","AppSettings","NotificationService","ReviewObjectives","ReviewResponseType","$filter","AppContext","$q"],t}();t.EmployeeReviewFormPreviewController=a;var s=function(){return function(){}}();t.EmployeeReleaseNotePreviewController=s}(e.Controllers||(e.Controllers={}))}(PMS||(PMS={})),angular.module("PMS").controller("EmployeeReviewPreviewController",PMS.Controllers.EmployeeReviewPreviewController).controller("EmployeePastReviewPreviewController",PMS.Controllers.EmployeePastReviewPreviewController).controller("EmployeePastNominationsSummaryController",PMS.Controllers.EmployeePastNominationsSummaryController).controller("EmployeeReviewFormPreviewController",PMS.Controllers.EmployeeReviewFormPreviewController).controller("EmployeeMeetingPreviewController",PMS.Controllers.EmployeeMeetingPreviewController).controller("EmployeeReleaseNotePreviewController",PMS.Controllers.EmployeeReleaseNotePreviewController).component("employeePastNominationsSummary",{templateUrl:"reviewsummary/employeepastnominationsummary",controller:PMS.Controllers.EmployeePastNominationsSummaryController,controllerAs:"ctrl",bindings:{reviewer:"<",reviewComponentService:"<",selectedReview:"<",currentStep:"<"}}).component("employeeReviewMeetingPreview",{templateUrl:"reviewsummary/previewemployeemeeting",controller:PMS.Controllers.EmployeeMeetingPreviewController,controllerAs:"ctrl",bindings:{selectedReview:"<",currentStep:"<",reviewComponentService:"<"}}).component("employeeReviewFormPreview",{templateUrl:"reviewsummary/previewemployeereviewform",controller:PMS.Controllers.EmployeeReviewFormPreviewController,controllerAs:"ctrl",bindings:{selectedReview:"<",currentStep:"<",reviewComponentService:"<",reviewer:"<"}}).component("employeeReleaseNotePreview",{templateUrl:"employeeReleaseNotePreview",controller:PMS.Controllers.EmployeeReleaseNotePreviewController,controllerAs:"ctrl",bindings:{selectedReview:"<"}}),function(e){!function(t){var i=function(){function t(t){var i=this;this._resource=t,this.getPMSSettings=function(){i.pmsSettingsResource.get({action:"pmssettings"}).$promise.then(function(e){i.updateGoalSettings(e.goalSettings),i.updateReviewSettings(e.reviewSettings),i.updateFeedbackSettings(e.feedbackSettings)})},this.updateGoalSettings=function(t){i.goalSettings=new e.Model.GoalSettings(t)},this.updateReviewSettings=function(t){i.reviewSettings=new e.Model.ReviewSettings(t)},this.updateFeedbackSettings=function(t){i.feedbackSettings=new e.Model.FeedbackSettings(t)},this.updateGoalModuleStatus=function(e){i.goalSettings.isFeatureEnabled=e},this.updateReviewModuleStatus=function(e){i.reviewSettings.isFeatureEnabled=e},this.getTrackingLabel=function(e){var t=i.goalSettings.trackingLabels.filter(function(t){return t.trackingStatus==e})[0];return t?t.trackingLabel:null},this.pmsSettingsResource=t("/api/pms/config/:action",{action:"action"}),this.goalSettings=new e.Model.GoalSettings({}),this.reviewSettings=new e.Model.ReviewSettings({}),this.feedbackSettings=new e.Model.FeedbackSettings({})}return t.$inject=["$resource"],t}();t.PMSSettings=i;var n=function(){function e(e){this.resource=e,this.performanceLookup=this.resource("/api/lookup/pms/:action/:reviewGroupId/:reviewCycleId",{id:"@reviewGroupId",action:"@action",reviewCycleId:"@reviewCycleId"},{update:{method:"PUT"}})}return e.prototype.getJobFunctionLookups=function(){return this.performanceLookup.query({action:"jobfunctions"}).$promise},e.prototype.getMetricUnitLookups=function(){return this.performanceLookup.query({action:"metricunits"}).$promise},e.prototype.getRatingScaleLookups=function(){return this.performanceLookup.query({action:"review/ratingscales"}).$promise},e.prototype.getReviewGroups=function(){return this.performanceLookup.query({action:"reviewgroups"}).$promise},e.prototype.getReviewCycles=function(e){return this.performanceLookup.query({action:"reviewcycles",reviewGroupId:e}).$promise},e.prototype.getPerformanceBands=function(e){return this.performanceLookup.query({action:"bands",reviewCycleId:e}).$promise},e.$inject=["$resource"],e}();t.PMSLookupService=n;var o=function(){function e(e){this.resource=e,this.setup=this.resource("/api/performance/setup/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getPerformanceSettings=function(){return this.setup.get({action:"settings"}).$promise},e.prototype.updatePerformanceSettings=function(){return this.setup.update({action:"complete"}).$promise},e.prototype.getFeedbakSettings=function(){return this.setup.get({action:"feedbacksettings"}).$promise},e.prototype.saveFeedbackSettings=function(e){return this.setup.save({action:"feedbacksettings"},e).$promise},e.prototype.getReviewSettings=function(){return this.setup.get({action:"reviewsettings"}).$promise},e.prototype.saveReviewSettings=function(e){return this.setup.save({action:"reviewsettings"},e).$promise},e.prototype.getGoalSettings=function(){return this.setup.get({action:"goalsettings"}).$promise},e.prototype.saveGoalSettings=function(e){return this.setup.save({action:"goalsettings"},e).$promise},e.$inject=["$resource"],e}();t.PerformanceSetupService=o;var r=function(){function e(e,t){var i=this;this.resource=e,this._filter=t,this.pmsSettings=this.resource("/api/pms/settings/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.pms=this.resource("/api/feedback/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.pmsemployee=this.resource("/api/pms/employee/:id/:action/",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.skill=this.resource("/api/skill/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.getFeedbacks=function(e){return i.pms.query({action:"all",id:e}).$promise},this.saveFeedback=function(e){return i.pms.save({action:"save"},e).$promise},this.getRoles=function(){return i.pms.query({action:"roles"}).$promise},this.getBadgesfromKeka=function(){return i.pms.query({action:"librarybadges"}).$promise},this.getFeedbackSetting=function(){return i.pmsSettings.get({action:"feedbacksettings"}).$promise},this.saveFeedbackSetting=function(e){return i.pmsSettings.save({action:"savefeedbacksettings"},e).$promise},this.getEmployeeProfile=function(e){return i.pmsemployee.get({action:"pmsprofile",id:e}).$promise}}return e.prototype.getCoreValuesAndCompetencies=function(){return this.skill.get({action:"corevaluesandcompetencies"}).$promise},e.$inject=["$resource","$filter"],e}();t.PMSFeedbackService=r;var a=function(){function e(e){var t=this;this.resource=e,this.pmsGoals=this.resource("/api/pms/goals/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.getEmployeesBasicInfo=function(){return t.pmsGoals.query({action:"employeesbasicinfo"}).$promise},this.getGoalTemplates=function(){return t.pmsGoals.query({action:"goaltemplates"}).$promise},this.getGoalTemplateViewModel=function(e){return t.pmsGoals.get({action:"goaltemplateviewmodel",id:e}).$promise},this.getAllGoals=function(e,i){return t.pmsGoals.query({action:"allgoals",startDate:e,endDate:i}).$promise},this.getGoal=function(e){return t.pmsGoals.get({action:"goal",id:e}).$promise},this.saveGoal=function(e){return t.pmsGoals.save({action:"goal"},e).$promise},this.updateGoal=function(e,i){return t.pmsGoals.update({action:"goal",id:e},i).$promise},this.markGoalAsComplete=function(e){return t.pmsGoals.update({action:"markcomplete",id:e},null).$promise},this.markGoalAsIncomplete=function(e){return t.pmsGoals.update({action:"markincomplete",id:e},null).$promise},this.deleteGoal=function(e){return t.pmsGoals.update({action:"deletegoal",id:e}).$promise},this.getGoalCategories=function(){return t.pmsGoals.query({action:"categories"}).$promise},this.saveGoalCategory=function(e){return t.pmsGoals.save({action:"category"},e).$promise},this.deleteGoalCategory=function(e){return t.pmsGoals.update({action:"deletecategory",id:e}).$promise},this.checkDuplicateGoalCategory=function(e){return t.pmsGoals.get({action:"duplicatecategory",name:e}).$promise},this.getGoalSettings=function(){return t.pmsGoals.get({action:"settings"}).$promise},this.checkInGoal=function(e,i){return t.pmsGoals.update({action:"goalcheckin",id:e},i).$promise},this.getDepartments=function(){return t.pmsGoals.query({action:"departments"}).$promise},this.getBusinessUnits=function(){return t.pmsGoals.query({action:"businessunits"}).$promise},this.getGroupsAssignedToGoal=function(e){return t.pmsGoals.query({action:"groupsassignedto",id:e}).$promise},this.getKeyResults=function(e){return t.pmsGoals.query({action:"keyresults",id:e}).$promise},this.cloneGoals=function(e,i){return t.pmsGoals.update({action:"clone",id:e},i).$promise},this.closeGoalsInBulk=function(e){return t.pmsGoals.save({action:"bulk/close"},e).$promise},this.reopenGoalsInBulk=function(e){return t.pmsGoals.save({action:"bulk/reopen"},e).$promise}}return e.prototype.getEmployeeGoals=function(e){return this.pmsGoals.query({action:"employeegoals",id:e}).$promise},e.prototype.getAllCompetencies=function(){return this.pmsGoals.query({action:"competency/all"}).$promise},e.prototype.getGoalsToAssign=function(){return this.pmsGoals.query({action:"goalstoassign"}).$promise},e.prototype.assignGoalsToEmployees=function(e){return this.pmsGoals.save({action:"assigngoals"},e).$promise},e.prototype.getEmployeesInDepartment=function(e){return this.pmsGoals.query({action:"departmentemployees",id:e}).$promise},e.$inject=["$resource"],e}();t.PMSGoalsService=a;var s=function(){function e(e,t){var i=this;this.resource=e,this._filter=t,this.pmsSettings=this.resource("/api/pms/settings/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.pmsReviewQuestionnaire=this.resource("/api/pms/reviewquestionnaire/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.pmsGoals=this.resource("/api/pms/goals/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.getRatingScale=function(e){return i.pmsSettings.get({action:"ratingscale",id:e}).$promise},this.getRatingScales=function(){return i.pmsSettings.query({action:"review/ratingscales"}).$promise},this.saveRatingScale=function(e){return i.pmsSettings.save({action:"ratingscale"},e).$promise},this.updateRatingScale=function(e){return i.pmsSettings.update({action:"ratingscale",id:e.id},e).$promise},this.deleteRatingScale=function(e){return i.pmsSettings.update({action:"deleteratingscale",id:e}).$promise},this.getFeedbackSetting=function(){return i.pmsSettings.get({action:"feedbacksettings"}).$promise},this.saveFeedbackSetting=function(e){return i.pmsSettings.save({action:"savefeedbacksettings"},e).$promise},this.saveGoalSettings=function(e){return i.pmsSettings.save({action:"savegoalsettings"},e).$promise},this.getGoalSettings=function(){return i.pmsSettings.get({action:"goalsettings"}).$promise},this.getReviewSettings=function(){return i.pmsSettings.get({action:"reviewsettings"}).$promise},this.saveReviewSettings=function(e){return i.pmsSettings.save({action:"reviewsettings"},e).$promise},this.getAllReviewFormQuestionsBasedOnTemplates=function(e){return i.pmsReviewQuestionnaire.query({action:"templatequestions",templateIds:e}).$promise},this.getAllReviewFormQuestionTemplateList=function(){return i.pmsReviewQuestionnaire.get({action:"templatelist"}).$promise},this.getDefaultReviewers=function(){return i.pmsReviewQuestionnaire.query({action:"reviewers"}).$promise},this.getReviewFormQuestionTemplate=function(e){return i.pmsReviewQuestionnaire.get({action:"template",id:e}).$promise},this.getAllReviewFormQuestionTemplates=function(){return i.pmsReviewQuestionnaire.query({action:"template/all"}).$promise},this.updateReviewFormQuestionTemplate=function(e,t){return i.pmsReviewQuestionnaire.update({action:"template",id:e},t).$promise},this.saveReviewFormQuestionTemplate=function(e){return i.pmsReviewQuestionnaire.save({action:"template"},e).$promise},this.deleteReviewFormQuestionTemplate=function(e){return i.pmsReviewQuestionnaire.delete({action:"template",id:e}).$promise},this.getPlaceholderFields=function(){return i.pmsReviewQuestionnaire.get({action:"placeholderfields"}).$promise}}return e.prototype.doesRatingScaleExist=function(e){return this.pmsSettings.get({action:"doesratingscaleexist",id:e}).$promise},e.prototype.getBusinessUnits=function(){return this.pmsGoals.query({action:"businessunits"}).$promise},e.prototype.getMetricUnits=function(){return this.pmsSettings.query({action:"metricunits"}).$promise},e.prototype.getMetricUnit=function(e){return this.pmsSettings.get({action:"metricunit",id:e}).$promise},e.prototype.saveMetricUnit=function(e){return this.pmsSettings.save({action:"metricunit"},e).$promise},e.prototype.updateMetricUnit=function(e,t){return this.pmsSettings.update({action:"metricunit",id:e},t).$promise},e.prototype.deleteMetricUnit=function(e){return this.pmsSettings.delete({action:"metricunit",id:e}).$promise},e.prototype.doesMetricUnitExist=function(e){return this.pmsSettings.get({action:"doesmetricunitexist",name:e}).$promise},e.$inject=["$resource","$filter"],e}();t.PMSService=s;var l=function(){function e(e){this.resource=e,this.skill=this.resource("/api/skill/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.competency=this.resource("/api/skill/competency/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.competencyType=this.resource("/api/skill/competency/:action/:competencyType",{competencyType:"@competencyType",action:"@action"},{update:{method:"PUT"}}),this.behaviour=this.resource("/api/skill/behaviour/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.coreValue=this.resource("/api/skill/corevalue/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getAllCompetencies=function(){return this.competency.query({action:"all"}).$promise},e.prototype.getCoreCompetencies=function(e){return this.competencyType.query({action:"core",competencyType:e}).$promise},e.prototype.getCommonSuccessCompetencies=function(e){return this.competencyType.query({action:"commonsuccess",competencyType:e}).$promise},e.prototype.getJobSpecificCompetencies=function(){return this.competency.query({action:"jobspecific"}).$promise},e.prototype.getCompetenciesFromRepository=function(){return this.competency.get({action:"repository"}).$promise},e.prototype.saveCompetency=function(e){return this.competency.save({action:"add"},e).$promise},e.prototype.doesCompetencyNameExists=function(e,t){return this.competency.get({action:"doescompetencynameexist",name:e,competencyType:t}).$promise},e.prototype.doesCoreValueNameExist=function(e){return this.coreValue.get({action:"doescorevaluenameexist",name:e}).$promise},e.prototype.updateCompetency=function(e,t){return this.competency.update({action:"update",id:e},t).$promise},e.prototype.getCompetencyBehaviours=function(e){return this.competency.query({action:"behaviour",id:e}).$promise},e.prototype.getCompetencyJobFunctions=function(e){return this.competency.query({action:"jobfunctions",id:e}).$promise},e.prototype.importCompetencies=function(e){return this.competency.save({action:"import"},e).$promise},e.prototype.getCoreValues=function(){return this.coreValue.query({action:"all"}).$promise},e.prototype.getCoreValueBehaviours=function(e){return this.coreValue.query({action:"behaviour",id:e}).$promise},e.prototype.addCoreValue=function(e){return this.coreValue.save({action:"add"},e).$promise},e.prototype.updateCoreValue=function(e,t){return this.coreValue.update({action:"update",id:e},t).$promise},e.prototype.deleteSkill=function(e){return this.skill.delete({action:"delete",id:e}).$promise},e.prototype.deleteSkillBehaviour=function(e){return this.behaviour.delete({action:"delete",id:e}).$promise},e.$inject=["$resource"],e}();t.SkillService=l;var c=function(){function e(e){var t=this;this.resource=e,this.jobFunction=this.resource("/api/jobfunctions/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.getJobFunctions=function(){return t.jobFunction.query({action:"default"}).$promise},this.getAllJobFunctions=function(){return t.jobFunction.query({action:"all"}).$promise},this.getGroupJobFunctions=function(e){return t.jobFunction.query({action:"default",id:e}).$promise},this.saveJobFunction=function(e){return t.jobFunction.save({action:"default"},e).$promise},this.updateJobFunction=function(e,i){return t.jobFunction.update({action:"default",id:e},i).$promise},this.deleteJobFunction=function(e){return t.jobFunction.delete({action:"default",id:e}).$promise},this.getJobGroups=function(){return t.jobFunction.query({action:"jobGroups"}).$promise},this.getJobGroup=function(e){return t.jobFunction.get({action:"jobGroup",id:e}).$promise},this.saveJobGroup=function(e){return t.jobFunction.save({action:"jobGroup"},e).$promise},this.updateJobGroup=function(e,i){return t.jobFunction.update({action:"jobGroup",id:e},i).$promise},this.doesJobFunctionNameExist=function(e){return t.jobFunction.get({action:"doesjobfunctionnameexist",name:e}).$promise},this.deleteJobGroup=function(e){return t.jobFunction.delete({action:"jobgroup",id:e}).$promise},this.getJobFunctionCompetencies=function(){return t.jobFunction.query({action:"competencies"}).$promise},this.updateJobFunctionCompetencies=function(e,i){return t.jobFunction.update({action:"competencies",id:e},i).$promise},this.getJobFunctionOwners=function(){return t.jobFunction.query({action:"jobfunctionowners"}).$promise},this.addJobFunctionOwner=function(e){return t.jobFunction.save({action:"jobfunctionowners"},e).$promise},this.deleteJobFunctionOwners=function(e){return t.jobFunction.update({action:"jobfunctionowners",id:null},e).$promise},this.getEmployeeJobFunctions=function(){return t.jobFunction.query({action:"employeejobfunctions"}).$promise},this.saveEmployeeJobFunctions=function(e){return t.jobFunction.save({action:"employeejobfunctions"},e).$promise},this.deleteEmployeeJobFunction=function(e){return t.jobFunction.delete({action:"employeejobfunctions",id:e}).$promise},this.getJobFunctionStats=function(){return t.jobFunction.get({action:"jobfunctionstats"}).$promise},this.getDepartments=function(){return t.jobFunction.query({action:"departments"}).$promise},this.getBusinessUnits=function(){return t.jobFunction.query({action:"businessunits"}).$promise},this.getEmployees=function(){return t.jobFunction.query({action:"employees"}).$promise},this.getEmployeesInReview=function(){return t.jobFunction.query({action:"employeesinreview"}).$promise},this.getEmployeeProfiles=function(){return t.jobFunction.query({action:"pmsprofiles"}).$promise}}return e.prototype.getJobFunctionsFromRepository=function(){return this.jobFunction.get({action:"repository"}).$promise},e.prototype.importJobFunctions=function(e){return this.jobFunction.save({action:"import"},e).$promise},e.prototype.getAllDepartmentHeads=function(){return this.jobFunction.query({action:"departmentheads"}).$promise},e.$inject=["$resource"],e}();t.JobFunctionService=c;var p=function(){function e(e){var t=this;this.resource=e,this.reviewAdministration=this.resource("/api/pms/review/administration/:groupId/:action/:id/:stepIdentifier/:cycleId",{groupId:"@groupId",id:"@id",action:"@action",stepIdentifier:"@stepIdentifier",cycleId:"@cycleId"},{update:{method:"PUT"}}),this.administrationUrl=this.resource("/api/pms/review/administration/:action/:cycleId",{action:"@action",cycleId:"@cycleId"},{update:{method:"PUT"}}),this.serviceUrl=this.resource("/api/pms/review/administration/:reviewGroupId/cycle/:reviewCycleId/:action",{action:"@action",reviewGroupId:"@reviewGroupId",reviewCycleId:"@reviewCycleId"},{update:{method:"PUT"}}),this.finalizeReviewUrl=this.resource("/api/pms/review/administration/cycle/:cycleId/:action/:employeeId",{cycleId:"@cycleId",action:"@action",employeeId:"@employeeId"},{update:{method:"PUT"}}),this.reviewerManagementUrl=this.resource("/api/pms/review/administration/:groupId/:action/:cycleId",{groupId:"@groupId",action:"@action",cycleId:"@cycleId"},{update:{method:"PUT"}}),this.calibrationUrl=this.resource("/api/pms/review/administration/reviewcycle/:reviewCycleId/employee/:employeeId/:action",{reviewCycleId:"@reviewCycleId",action:"@action",employeeId:"@employeeId"},{update:{method:"PUT"}}),this.getEmployeeReviewFormSubmittedReviewers=function(e){return t.reviewAdministration.query({action:"submittedreviewers/form",id:e}).$promise}}return e.prototype.canInitiateReviews=function(e,t){return this.serviceUrl.get({action:"caninitiatereviews",reviewGroupId:e,reviewCycleId:t}).$promise},e.prototype.getReviewCycleEmployees=function(e,t){return this.reviewAdministration.query({action:"cycle/employees",reviewGroupId:e,reviewCycleId:t}).$promise},e.prototype.addEmployeesToCycle=function(e,t,i){return this.reviewAdministration.save({action:"cycle/employees",reviewGroupId:e,reviewCycleId:t},i).$promise},e.prototype.getReviewsReleased=function(e,t){return this.reviewAdministration.query({action:"reviews/released",reviewGroupId:e,reviewCycleId:t}).$promise},e.prototype.startReview=function(e){return this.reviewAdministration.update({action:"start",id:e}).$promise},e.prototype.cancelReview=function(e){return this.reviewAdministration.update({action:"cancel",id:e}).$promise},e.prototype.bulkCancelReviews=function(e){return this.reviewAdministration.update({action:"cancel/bulk"},e).$promise},e.prototype.getPastReviewSummary=function(e,t){return this.reviewAdministration.get({action:"pastreview/summary",cycleId:t,employeeId:e}).$promise},e.prototype.getReviewRatingTransactionDetails=function(e,t){return this.reviewAdministration.get({action:"reviewrating",cycleId:e,employeeId:t}).$promise},e.prototype.getReviewTransactionSummary=function(e,t){return this.reviewAdministration.get({action:"reviewtransactions",cycleId:e,employeeId:t}).$promise},e.prototype.getReviewSummary=function(e,t){return this.reviewAdministration.get({action:"summary",cycleId:e,employeeId:t}).$promise},e.prototype.getEmployeeReviewActivity=function(e){return this.reviewAdministration.get({action:"activity",id:e}).$promise},e.prototype.getCurrentStepParticipants=function(e,t){return this.reviewAdministration.query({action:"currentstep/partcipants",id:e,stepIdentifier:t}).$promise},e.prototype.getReviewMeetingSummary=function(e,t){return this.reviewAdministration.get({action:"meeting",id:e,stepIdentifier:t}).$promise},e.prototype.getEmployeeCalibrationSettingsView=function(e,t){return this.reviewAdministration.get({action:"employee/calibration/settings",cycleId:e,employeeId:t}).$promise},e.prototype.getRatingsForCalibration=function(e,t){return this.calibrationUrl.get({action:"calibration/ratings",reviewCycleId:e,employeeId:t}).$promise},e.prototype.saveCalibratedRatings=function(e,t,i){return this.calibrationUrl.update({action:"markcalibrationascomplete",reviewCycleId:e,employeeId:t},i).$promise},e.prototype.getReviewRatings=function(e){return this.reviewAdministration.query({action:"reviewratings/all",id:e}).$promise},e.prototype.getEmployeeReviewFinalizeView=function(e,t){return this.finalizeReviewUrl.get({action:"finalizeview",cycleId:t,employeeId:e}).$promise},e.prototype.getFinalizedRatings=function(e,t){return this.reviewAdministration.query({action:"finalizedratings",cycleId:e,employeeId:t}).$promise},e.prototype.getReviewCycleProcessSettings=function(e,t){return this.reviewAdministration.get({action:"reviewcycleprocess/settings",groupId:e,cycleId:t}).$promise},e.prototype.saveReleaseReview=function(e,t){return this.reviewAdministration.save({action:"reviewrating/release",id:e},t).$promise},e.prototype.saveUnlockedReviews=function(e,t,i){return this.reviewAdministration.save({action:"unlockreviews",id:e,cycleId:t},i).$promise},e.$inject=["$resource"],e}();t.ReviewAdministrationService=p,angular.module("PMS").service("PMSSettings",i).service("PMSLookupService",n).service("PerformanceSetupService",o).service("PMSService",s).service("PMSFeedbackService",r).service("SkillService",l).service("JobFunctionService",c).service("ReviewAdministrationService",p).service("PMSGoalsService",a)}(e.Services||(e.Services={}))}(PMS||(PMS={})),function(e){!function(e){var t=function(){function e(e){var t=this;this.resource=e,this.pmsEmployee=this.resource("/api/pms/employee/:id/:action",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.pmsEmployeeReview=this.resource("/api/pms/employee/:id/cycle/:cycleId/:action",{id:"@id",action:"@action",cycleId:"@cycleId"},{update:{method:"PUT"}}),this.pmsEmployees=this.resource("/api/pms/employees/:action",{action:"@action"},{update:{method:"PUT"}}),this.pmsEmployeeSkill=this.resource("/api/pms/employee/:id/competency/:competencyId/:action",{id:"@id",action:"@action",competencyId:"@competencyId"},{update:{method:"PUT"}}),this.getFeedback=function(e){return t.pmsEmployee.query({action:"feedback",id:e}).$promise},this.getEmployeeActiveFeedback=function(e){return t.pmsEmployee.query({action:"employeeactivefeedback",id:e}).$promise},this.getEmployeeProfile=function(e){return t.pmsEmployee.get({action:"pmsprofile",id:e}).$promise},this.getEmployeeActiveGoals=function(e){return t.pmsEmployee.query({action:"activegoals",id:e}).$promise},this.getCurrentCycleReview=function(e,i){return t.pmsEmployeeReview.get({action:"review",id:i,cycleId:e}).$promise},this.getNominationStepParticipants=function(e,i){return t.pmsEmployeeReview.query({action:"nominationstepparticipants",id:e,cycleId:i}).$promise},this.getNominationRequestDetails=function(e,i){return t.pmsEmployeeReview.get({action:"nominationrequests",id:i,cycleId:e}).$promise},this.getPastNominationRequestDetails=function(e,i){return t.pmsEmployeeReview.query({action:"pastnominationrequests",id:e,cycleId:i}).$promise},this.getReviewMeetingParticipants=function(e,i){return t.pmsEmployeeReview.query({action:"meetingparticipants",id:i,cycleId:e}).$promise},this.saveNominationRequests=function(e,i,n){return t.pmsEmployeeReview.save({action:"nominationrequests",id:e,cycleId:i},n).$promise},this.approveNominationRequests=function(e,i,n){return t.pmsEmployeeReview.save({action:"approvenominations",id:e,cycleId:i},n).$promise},this.saveReviewMeeting=function(e,i,n){return t.pmsEmployeeReview.save({action:"reviewmeeting",id:i,cycleId:e},n).$promise},this.draftReviewMeeting=function(e,i,n){return t.pmsEmployeeReview.save({action:"reviewmeeting/draft",id:i,cycleId:e},n).$promise},this.getOngoingMeetingSummary=function(e,i){return t.pmsEmployeeReview.get({action:"ongoingmeetingsummary",id:i,cycleId:e}).$promise},this.getEmployeeProfiles=function(){return t.pmsEmployees.query({action:"pmsprofiles"}).$promise},this.updateEmployeeJobFunctions=function(e){return t.pmsEmployees.save({action:"update/jobfunction"},e).$promise}}return e.prototype.getAllCompetenciesList=function(e){return this.pmsEmployee.query({action:"competencies",id:e}).$promise},e.prototype.getCompetencyBehaviours=function(e,t){return this.pmsEmployeeSkill.query({action:"behaviour",id:t,competencyId:e}).$promise},e.prototype.getEmployeeProfilesWithIds=function(e){return this.pmsEmployees.query({employeeIds:e,action:"pmsemployeesbyids"}).$promise},e.$inject=["$resource"],e}();e.PMSEmployeeService=t;var i=function(){function e(e){this.resource=e,this.importService=this.resource("/api/pms/import/:action/",{action:"@action"},{update:{method:"PUT"}})}return e.prototype.getEmployeePmsDetailImportValidations=function(e){return this.importService.save({action:"employeepmsdetailsvalidation"},e).$promise},e.prototype.getEmployeeGoalDetailValidations=function(){return this.importService.save({action:"employeegoaldetailsvalidation"}).$promise},e.prototype.getImportedEmployeePmsDetails=function(){return this.importService.query({action:"previewemployeepmsdetails"}).$promise},e.prototype.getImportedEmployeeGoalDetails=function(){return this.importService.query({action:"previewemployeegoaldetails"}).$promise},e.prototype.importExcelEmployeePmsDetails=function(e){return this.importService.save({action:"employeepmsdetails"},e).$promise},e.prototype.importExcelEmployeeGoalDetails=function(){return this.importService.save({action:"employeegoaldetails"}).$promise},e.prototype.validateCompetencyImport=function(){return this.importService.save({action:"validatecompetencies"}).$promise},e.prototype.previewImportedCompetencies=function(){return this.importService.query({action:"previewcompetencies"}).$promise},e.prototype.importCompetencies=function(){return this.importService.save({action:"importcompetencies"}).$promise},e.prototype.validateCompetencyBehaviours=function(){return this.importService.save({action:"validatecompetencybehaviours"}).$promise},e.prototype.previewImportedCompetencyBehaviours=function(){return this.importService.query({action:"previewcompetencybehaviours"}).$promise},e.prototype.importCompetencyBehaviours=function(){return this.importService.save({action:"importcompetencybehaviours"}).$promise},e.$inject=["$resource"],e}();e.PMSImportService=i,angular.module("PMS").service("PMSEmployeeService",t).service("PMSImportService",i)}(e.Services||(e.Services={}))}(PMS||(PMS={})),function(e){!function(e){var t=function(){function e(e,t,i,n,o,r,a,s){var l=this;this._scope=e,this._filter=t,this.notificationService=i,this.appSettings=n,this.reviewAdministrationService=o,this.dialogs=r,this.lookupService=a,this.reviewReleaseStatus=s,this.gridData=[],this.selectedRowsCount=0,this.reviewGroups=[],this.reviewCycles=[],this.reviewsReleased=[],this.popoverIsOpen=!1,this.getReviewCycles=function(){l.lookupService.getReviewCycles(l.reviewGroupId).then(function(e){l.reviewCycles=e,l.reviewCycleId=l.reviewCycles.length>0?l.reviewCycles[0].id:null,l.getReviewsReleased()})},this.setGridApi=function(e){l.gridApi=e,l.gridApi.selection.on.rowSelectionChanged(l._scope,function(e){l.selectedRowsCount=l.selectedRowsCount+(e.isSelected?1:-1)}),l.gridApi.selection.on.rowSelectionChangedBatch(l._scope,function(e){l.selectedRowsCount=e[0].isSelected?l.gridData.length:0})},this.gridSettings=angular.copy(this.appSettings.gridSettings),this.initGridSettings(),this.lookupService.getReviewGroups().then(function(e){l.reviewGroups=e,l.reviewGroupId=l.reviewGroups[0].id,l.getReviewCycles()})}return e.prototype.getReviewsReleased=function(){var e=this;this.reviewAdministrationService.getReviewsReleased(this.reviewGroupId,this.reviewCycleId).then(function(t){e.reviewsReleased=t,e.gridData=t,e.filterGrid()})},e.prototype.initGridSettings=function(){this.gridSettings.columnDefs=[{name:"employeeName",displayName:"Reviewee",cellTemplate:'<div class="ui-grid-cell-contents detail-cell"><a target="_blank" href="/old/#/employee/{{row.entity.employeeId}}/talent" title="{{grid.getCellValue(row,col)}}"><p class="clear-bottom">{{row.entity.employeeName}}</p></a><p class="clear-bottom text-muted font-smaller">{{row.entity.employeeNumber}}</p></div>',width:250,enableColumnMenu:!1},{field:"lastStepCompletedDate",name:"Completed On",cellTemplate:'<div class="ui-grid-cell-contents">\n                                       <div data-ng-if="row.entity.lastStepCompletedDate">\n                                              <p class="text-light-bold clear-bottom">\n                                                   {{row.entity.lastStepCompletedDate | date: "dd MMM, yyyy"}}\n                                              </p>\n                                       <p class="clear-bottom text-muted font-smaller">\n                                           Review Released\n                                       </p>\n                                   </div>\n                                  </div>',width:150,enableColumnMenu:!1},{field:"reviewReleaseStatus",name:"Review Status",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.ctrl.reviewReleaseStatus.getById(grid.getCellValue(row,col)).name}}</div></div>',width:150,enableColumnMenu:!1},{name:"actions",displayName:"Actions",cellTemplate:'<div class="ui-grid-cell-contents"><div class="node actions-popover text-muted align-self-center " data-popover-append-to-body="true" data-uib-popover-template="\'actionTemplate\'"  data-popover-trigger="outsideClick" data-popover-class="reviewer-actions  clear-top-margin"  data-popover-placement="bottom" data-ng-click="ctrl.popoverIsOpen = true">\n                                <span class="icon-xhr-options icon-action font-huge"></span>\n                            </div></div>',enableColumnMenu:!1}],this.gridSettings.data=this.gridData,this.gridSettings.multiSelect=!0,this.gridSettings.enablePaginationControls=!1,this.gridSettings.enableGridMenu=!1,this.gridSettings.showGridFooter=!0,this.gridSettings.onRegisterApi=this.setGridApi},e.prototype.filterGrid=function(){this.gridSettings.data=this._filter("filter")(this.gridData,this.filterText,!1)},e.prototype.getSelectedReviews=function(){var e=this.gridApi.selection.getSelectedRows();if(0!=e.length)return e;this.notificationService.error("Please select atleast one reviewer")},e.prototype.removeReviewFromList=function(e){var t=this.gridData.find(function(t){return t.id==e}),i=this.gridData.indexOf(t);this.gridData.splice(i,1),this.gridSettings.data=this.gridData},e.prototype.cancelReview=function(e){var t=this;this.dialogs.confirm("Confirm cancellation of review for "+e.displayName,"What happens next?<br/><br />The data of this review cycle for the selected employee(s) will be lost.<br/><br /> You can re - initiate and start the review(s) afresh at any point in time.").result.then(function(){t.reviewAdministrationService.cancelReview(e.id).then(function(i){t.removeReviewFromList(e.id),t.filterGrid(),t.notificationService.success("Review cancelled successfully"),t._scope.$emit("reviewsCountUpdated",{})},function(e){t.notificationService.error("Error in cancelling review")})})},e.prototype.bulkCancelReviews=function(){var e=this,t=this.getSelectedReviews();this.dialogs.confirm("Confirm cancellation of review ("+t.length+" reviewees selected)","What happens next?<br/><br />The data of this review cycle for the selected employee(s) will be lost.<br/><br /> You can re - initiate and start the review(s) afresh at any point in time.").result.then(function(){var i=t.map(function(e){return e.id});e.reviewAdministrationService.bulkCancelReviews(i).then(function(i){t.forEach(function(t){e.removeReviewFromList(t.id)}),e.filterGrid(),e.notificationService.success("Reviews cancelled succcessfully"),e._scope.$emit("reviewsCountUpdated",{})},function(t){e.notificationService.error("Error in cancelling reviews")})})},e.$inject=["$scope","$filter","NotificationService","AppSettings","ReviewAdministrationService","dialogs","PMSLookupService","ReviewReleaseStatus"],e}();e.ReviewsReleasedController=t}(e.Controllers||(e.Controllers={}))}(PMS||(PMS={})),angular.module("PMS").controller("ReviewsReleasedController",PMS.Controllers.ReviewsReleasedController),function(e){!function(t){var i=function(){function e(e,t,i,n,o){this._scope=e,this._state=t,this.notificationService=i,this.appSettings=n,this.appContext=o}return e.$inject=["$scope","$state","NotificationService","AppSettings","AppContext"],e}();t.CompetenciesController=i;var n=function(){function t(e,t,i,n,o,r,a,s,l){this._scope=e,this._state=t,this._modal=i,this.notificationService=n,this.appSettings=o,this.appContext=r,this.skillService=a,this.competencyType=s,this.pmsSettingsView=l,this.getCompetencies()}return t.prototype.getCompetencies=function(){var t=this;this.skillService.getCoreCompetencies(e.Model.CompetencyType.Core).then(function(e){t.coreCompetencies=e})},t.prototype.updateSetupCompetenciesCountBy=function(e){this.pmsSettingsView&&(this.pmsSettingsView.competenciesCount+=e)},t.prototype.addCompetency=function(t){var i=new e.Model.CompetencyView({competencyType:t,type:e.Model.SkillType.Competency});this.openCompetencyModal(i)},t.prototype.openCompetencyModal=function(t){var i=this;this._modal.open({templateUrl:"add-skill-template",windowClass:"right-side-modal pms-right-side-modal employee-exit-modal dark-modal wizard-head action-content",backdrop:!0,keyboard:!1,controller:"AddSkillController as ctrl",resolve:{Competency:function(){return new e.Model.CompetencyView(t)}}}).result.then(function(e){e.skill&&(i.getCompetencies(),e.isDeleted?i.updateSetupCompetenciesCountBy(-1):i.updateSetupCompetenciesCountBy(1))})},t.$inject=["$scope","$state","$uibModal","NotificationService","AppSettings","AppContext","SkillService","CompetencyType"],t}();t.CoreCompetenciesController=n;var o=function(){function t(e,t,i,n,o,r,a,s,l){this._scope=e,this._state=t,this._modal=i,this.notificationService=n,this.appSettings=o,this.appContext=r,this.skillService=a,this.competencyType=s,this.pmsSettingsView=l,this.getCompetencies()}return t.prototype.getCompetencies=function(){var t=this;this.skillService.getCommonSuccessCompetencies(e.Model.CompetencyType.CommonSuccess).then(function(e){t.commonCompetencies=e})},t.prototype.updateSetupCompetenciesCountBy=function(e){this.pmsSettingsView&&(this.pmsSettingsView.competenciesCount+=e)},t.prototype.addCompetency=function(t){var i=new e.Model.CompetencyView({competencyType:t,type:e.Model.SkillType.Competency});this.openCompetencyModal(i)},t.prototype.openCompetencyModal=function(t){var i=this;this._modal.open({templateUrl:"add-skill-template",windowClass:"right-side-modal pms-right-side-modal employee-exit-modal dark-modal wizard-head action-content",backdrop:!0,keyboard:!1,controller:"AddSkillController as ctrl",resolve:{Competency:function(){return new e.Model.CompetencyView(t)}}}).result.then(function(e){e.skill&&(i.getCompetencies(),e.isDeleted?i.updateSetupCompetenciesCountBy(-1):i.updateSetupCompetenciesCountBy(1))})},t.$inject=["$scope","$state","$uibModal","NotificationService","AppSettings","AppContext","SkillService","CompetencyType"],t}();t.CommonSuccessCompetenciesController=o;var r=function(){function t(e,t,i,n,o,r,a,s,l,c){this._scope=e,this._state=t,this._modal=i,this.notificationService=n,this.appSettings=o,this.appContext=r,this.skillService=a,this.competencyType=s,this.dialogs=l,this.pmsSettingsView=c,this.getJobSepecificCompetencies()}return t.prototype.getJobSepecificCompetencies=function(){var e=this;this.initBehaviourGridOptions(),this.initJobFunctionGridOptions(),this.initGridOptions(),this.skillService.getJobSpecificCompetencies().then(function(t){e.jobSpecificCompetencies=t})},t.prototype.updateSetupCompetenciesCountBy=function(e){this.pmsSettingsView&&(this.pmsSettingsView.competenciesCount+=e)},t.prototype.addCompetency=function(t){var i=new e.Model.CompetencyView({competencyType:t,type:e.Model.SkillType.Competency});this.openCompetencyModal(i)},t.prototype.openCompetencyModal=function(e){var t=this;this._modal.open({templateUrl:"add-skill-template",windowClass:"right-side-modal pms-right-side-modal employee-exit-modal dark-modal wizard-head action-content",backdrop:!0,keyboard:!1,controller:"AddSkillController as ctrl",resolve:{Competency:function(){return e}}}).result.then(function(e){e.skill&&(t.getJobSepecificCompetencies(),e.isDeleted?t.updateSetupCompetenciesCountBy(-1):t.updateSetupCompetenciesCountBy(1))})},t.prototype.deleteCompetency=function(e){var t=this;this.dialogs.confirm("Confirm deletion","Are you sure you want to delete this competency ?").result.then(function(){t.skillService.deleteSkill(e.id).then(function(i){i.isDeleted?(t.updateSetupCompetenciesCountBy(-1),t.notificationService.success("Competency Deleted Successfully"),t.jobSpecificCompetencies=t.jobSpecificCompetencies.filter(function(t){return t.id!=e.id})):t.notificationService.error("Can not delete competencies which are assigned to review process")},function(e){t.notificationService.error("Error in deleting competency")})})},t.prototype.showCompetencyBehaviours=function(e){var t=this;e.behaviourCount?(this.competencyToShow=angular.copy(e),this.skillService.getCompetencyBehaviours(e.id).then(function(e){t.competencyToShow.behaviours=e,t._modal.open({templateUrl:"assigned-behaviours-template",scope:t._scope})})):this.notificationService.information("There are no behaviours assigned to this competency")},t.prototype.showCompetencyJobFunctions=function(e){var t=this;e.jobFunctionCount?(this.competencyToShow=angular.copy(e),this.skillService.getCompetencyJobFunctions(e.id).then(function(e){t.competencyToShow.competencyJobFunctions=e,t._modal.open({templateUrl:"assigned-job-roles-template",scope:t._scope})})):this.notificationService.information("There are no job functions using this competency")},t.prototype.initBehaviourGridOptions=function(){this.behaviourGridOptions=angular.copy(this.appSettings.gridSettings),this.behaviourGridOptions.columnDefs=[{field:"title",displayName:"Title"},{field:"useInRatings",displayName:"Use in ratings",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.useInRatings ? "Yes" : "No"}}</div>'}],this.behaviourGridOptions.data='ctrl.competencyToShow.behaviours | orderBy: "title"'},t.prototype.initJobFunctionGridOptions=function(){this.jobFunctionGridOptions=angular.copy(this.appSettings.gridSettings),this.jobFunctionGridOptions.columnDefs=[{field:"name",displayName:"Title"},{field:"description",displayName:"Description"}],this.jobFunctionGridOptions.data='ctrl.competencyToShow.competencyJobFunctions | orderBy: "title"'},t.prototype.initGridOptions=function(){this.gridOptions=angular.copy(this.appSettings.gridSettings),this.gridOptions.columnDefs=[{field:"name",displayName:"Competency Name"},{field:"behaviourCount",displayName:"Behaviours",cellTemplate:'<div class="ui-grid-cell-contents"><a data-ng-click="grid.appScope.ctrl.showCompetencyBehaviours(row.entity)">{{row.entity.behaviourCount}}</a>'},{field:"jobFunctionCount",displayName:"Job Functions Using This",cellTemplate:'<div class="ui-grid-cell-contents"><a data-ng-click="grid.appScope.ctrl.showCompetencyJobFunctions(row.entity)">{{row.entity.jobFunctionCount}}</a>'},{name:"actions",displayName:"Actions",cellTemplate:'<div class="ui-grid-cell-contents text-align-center"><a data-ng-click="grid.appScope.ctrl.openCompetencyModal(row.entity)" data-uib-tooltip="Edit" tooltip-placement="left" class="information-tooltip tooltip-grey"><span class="icon-pencil5 horizontal-margin-sm"></span></a><a data-ng-click="grid.appScope.ctrl.deleteCompetency(row.entity)" data-uib-tooltip="Delete" tooltip-placement="right" class="information-tooltip tooltip-grey"><span class="icon-remove3"></span></a></div>'}],this.gridOptions.data="ctrl.jobSpecificCompetencies | filter: ctrl.filterText"},t.$inject=["$scope","$state","$uibModal","NotificationService","AppSettings","AppContext","SkillService","CompetencyType","dialogs"],t}();t.JobSpecificCompetenciesController=r;var a=function(){function e(e,t,i,n,o,r,a,s){this._scope=e,this.uibModal=t,this.sharedModel=i,this.appSettings=n,this.notificationService=o,this.pmsImportService=r,this.competencyType=a,this.fileDownloadService=s,this.steps=[],this.uploadedDetails=[],this.result=[],this.isImportDisabled=!1,this.steps=[new SharedModel.Step(1,"Upload Excel File","","pms-competencies-details-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","pms-competencies-validation-details",!1),new SharedModel.Step(3,"Preview","","pms-competencies-details-preview",!1)],this.currentStep=this.steps[0],this.initializeGridSettings()}return e.prototype.downloadExcelSample=function(){this.fileDownloadService.downloadFile("/api/pms/import/competenciestemplate")},e.prototype.initializeGridSettings=function(){this.competenciesDetailsGridOptions=angular.copy(this.appSettings.gridSettings),this.competenciesDetailsGridOptions.columnDefs=[{field:"competencyName",displayName:"Competency Name"},{field:"description",displayName:"Description"},{field:"competencyType",displayName:"Competency Type",cellTemplate:'<div class = "ui-grid-cell-contents">{{row.entity.competencyType ? row.entity.competencyType : "None"}}</div>'}],this.competenciesDetailsGridOptions.data=this.uploadedDetails},e.prototype.onFileUploaded=function(e){var t=this;this.isImportCompleted=!1,e.result?this.pmsImportService.validateCompetencyImport().then(function(e){t.nextStep(),t.result=e.result,0==t.result.length&&t.showPreview()},function(e){var i=e.data.message?e.data.message:"Error occured while importing file";t.notificationService.error(i)}):(this.exception=e.exception,this.notificationService.error(this.exception.Message))},e.prototype.nextStep=function(){var e=this;this.currentStep.valid=!0,this.currentStep=this.steps.find(function(t){return t.index==e.currentStep.index+1})},e.prototype.importCompetencyDetails=function(){var e=this;this.isImportDisabled=!0,this.pmsImportService.importCompetencies().then(function(t){e.result=t,e.isImportCompleted=!0},function(t){var i=t.data.message?t.data.message:"Error occured while importing file";e.notificationService.error(i)})},e.prototype.showPreview=function(){var e=this;this.pmsImportService.previewImportedCompetencies().then(function(t){e.uploadedDetails=t,e.initializeGridSettings(),e.nextStep(),e.result=null},function(t){e.notificationService.error("Failed to fetch data")})},e.prototype.closeModal=function(){this.uibModal.dismiss(!0)},e.prototype.completeImport=function(){this.uibModal.close()},e.$inject=["$scope","$uibModalInstance","SharedModel","AppSettings","NotificationService","PMSImportService","CompetencyType","FileDownloadService"],e}();t.ImportCompetenciesController=a;var s=function(){function e(e,t,i,n,o,r,a){this._scope=e,this.uibModal=t,this.sharedModel=i,this.appSettings=n,this.notificationService=o,this.pmsImportService=r,this.fileDownloadService=a,this.steps=[],this.uploadedDetails=[],this.result=[],this.isImportDisabled=!1,this.steps=[new SharedModel.Step(1,"Upload Excel File","","pms-competency-behaviours-details-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","pms-competency-behaviours-validation-details",!1),new SharedModel.Step(3,"Preview","","pms-competency-behaviours-details-preview",!1)],this.currentStep=this.steps[0],this.initializeGridSettings()}return e.prototype.downloadExcelSample=function(){this.fileDownloadService.downloadFile("/api/pms/import/competenciesbehaviourtemplate")},e.prototype.initializeGridSettings=function(){this.competencyBehaviourGridOptions=angular.copy(this.appSettings.gridSettings),this.competencyBehaviourGridOptions.columnDefs=[{field:"competencyName",displayName:"Competency Name"},{field:"behaviour",displayName:"Behaviour"},{field:"useInRatings",displayName:"Use In Ratings",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.useInRatings ? "Yes" : "No"}}</div>'}],this.competencyBehaviourGridOptions.data=this.uploadedDetails},e.prototype.onFileUploaded=function(e){var t=this;this.isImportCompleted=!1,e.result?this.pmsImportService.validateCompetencyBehaviours().then(function(e){t.nextStep(),t.result=e.result,0==t.result.length&&t.showPreview()},function(e){var i=e.data.message?e.data.message:"Error occurred while importing file";t.notificationService.error(i)}):(this.exception=e.exception,this.notificationService.error(this.exception.Message))},e.prototype.nextStep=function(){var e=this;this.currentStep.valid=!0,this.currentStep=this.steps.find(function(t){return t.index==e.currentStep.index+1})},e.prototype.importCompetencyBehaviourDetails=function(){var e=this;this.isImportDisabled=!0,this.pmsImportService.importCompetencyBehaviours().then(function(t){e.result=t,e.isImportCompleted=!0},function(t){var i=t.data.message?t.data.message:"Error occured while importing file";e.notificationService.error(i)})},e.prototype.showPreview=function(){var e=this;this.pmsImportService.previewImportedCompetencyBehaviours().then(function(t){e.uploadedDetails=t,e.initializeGridSettings(),e.nextStep(),e.result=null},function(t){e.notificationService.error("Failed to fetch data")})},e.prototype.closeModal=function(){this.uibModal.dismiss(!0)},e.prototype.completeImport=function(){this.uibModal.close()},e.$inject=["$scope","$uibModalInstance","SharedModel","AppSettings","NotificationService","PMSImportService","FileDownloadService"],e}();t.ImportCompetencyBehavioursController=s;var l=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m){var y=this;(this._scope=t,this._state=i,this._filter=n,this.q=o,this._modalInstance=r,this.notificationService=a,this.skill=s,this.appSettings=l,this.skillService=c,this.dialogs=p,this.competencyType=u,this.skillType=d,this.blobContainers=m,this.skillTypes=[],this.submitted=!1,this.containers=m,this.fileUploadSettings=angular.copy(l.fileUploadSettings),this.fileUploadSettings.acceptFileTypes="/(.|/)(png)$/i",this.fileUploadSettings.allowedFileTypes="png",this.fileUploadSettings.maxNumberOfFiles=1,this.skillTypes=this.competencyType.getAll(),this.skill.competencyType=this.skill.competencyType?this.skill.competencyType:null,this.skill.id)&&(this.skill.type==e.Model.SkillType.Competency?this.skillService.getCompetencyBehaviours(this.skill.id):this.skillService.getCoreValueBehaviours(this.skill.id)).then(function(t){y.skill.behaviours=t.map(function(t){return y.skillType==e.Model.SkillType.Competency?new e.Model.CompetencyBehaviour(t):new e.Model.CoreValueBehaviour(t)}),y.addSkillBehavour()})}return t.prototype.deleteSkill=function(){var e=this,t=this.skillType.getById(this.skill.type).name;this.dialogs.confirm("Confirm Deletion","Are you sure you want to delete this "+t).result.then(function(){e.skillService.deleteSkill(e.skill.id).then(function(i){i.isDeleted?(e.notificationService.success(t+" Deleted Successfully"),e._modalInstance.close({isDeleted:!0,skill:e.skill})):e.notificationService.error("Can not delete "+t+" which are assigned to review process")},function(i){e.notificationService.error("Error in deleting "+t)})})},t.prototype.addSkillBehavour=function(){this.skill.behaviours.push(this.skillType.getById(this.skill.type).id==e.Model.SkillType.Competency?new e.Model.CompetencyBehaviour({useInRatings:!0,shownToEmployee:!0,title:""}):new e.Model.CoreValueBehaviour({useInRatings:!0,shownToEmployee:!0,title:""}))},t.prototype.deleteBehaviour=function(e,t){var i=this;t.id?this.skillService.deleteSkillBehaviour(t.id).then(function(t){i.skill.behaviours.splice(e,1)}):this.skill.behaviours.splice(e,1)},t.prototype.saveSkill=function(){var t=this;if(this.form.addSkill.$valid){if(!this.isBahvaioursValid())return void this.notificationService.error("Please fill all the fields");this.skill.behaviours=this.skill.behaviours.filter(function(e){return""!=e.title});var i=this.skillType.getById(this.skill.type).name;if(this.skill.type==e.Model.SkillType.Competency)var n=this.skill.id?this.skillService.updateCompetency(this.skill.id,this.skill):this.skillService.saveCompetency(this.skill);else if(this.skill.type==e.Model.SkillType.CoreValue)n=this.skill.id?this.skillService.updateCoreValue(this.skill.id,this.skill):this.skillService.addCoreValue(this.skill);n.then(function(e){t.notificationService.success(t.skill.id?i+" updated successfully":i+" added successfully"),t.skill.id||(t.skill.id=e.id),t._modalInstance.close({skill:t.skill})},function(e){t.notificationService.error(t.skill.id?"Error in updating "+i:"Error in adding "+i)})}},t.prototype.isNameExist=function(t){if(this.skill.type==e.Model.SkillType.Competency&&void 0!=t){var i=this.q.defer();return this.skillService.doesCompetencyNameExists(t,this.skill.competencyType).then(function(e){e.isNameExist?i.resolve(!1):i.resolve(!0)}),i.promise}if(this.skill.type==e.Model.SkillType.CoreValue&&void 0!=t){i=this.q.defer();return this.skillService.doesCoreValueNameExist(t).then(function(e){e.isNameExist?i.resolve(!1):i.resolve(!0)}),i.promise}},t.prototype.isBehaviourExist=function(e){var t=this.skill.behaviours.filter(function(t){if(t.title.toLowerCase()==e.toLowerCase())return t}),i=this.q.defer();return t.length>0?i.resolve(!1):i.resolve(!0),i.promise},t.prototype.isBahvaioursValid=function(){var e=this.skill.behaviours.length;return 0==this.skill.behaviours.filter(function(t,i){if(i!=e-1)return!t.isValid()}).length},t.prototype.openFileDialog=function(){angular.element("#fileupload").click()},t.prototype.dismissModal=function(){this._modalInstance.dismiss()},t.$inject=["$scope","$state","$filter","$q","$uibModalInstance","NotificationService","Competency","AppSettings","SkillService","dialogs","CompetencyType","SkillType","BlobContainers"],t}();t.AddSkillController=l;var c=function(){function e(e,t,i,n,o,r,a){var s=this;this._scope=e,this._state=t,this._filter=i,this._modalInstance=n,this.notificationService=o,this.skillService=r,this.competencyType=a,this.competencies=[],this.competencyBehaviours=[],this.selectedCompetencies=[],this.competencyTypes=[],this.selectedTypeIds=[],this.selectedCompetencyIds=[],this.coreSelected=!1,this.dismissModal=function(){s._state.go("performance.competencies.core")},this.setCompetencyTypes(),this.skillService.getCompetenciesFromRepository().then(function(e){s.competencies=e.competencies,s.competencyBehaviours=e.competencyBehaviours})}return e.prototype.setCompetencyTypes=function(){var e=this;this.competencyTypes.push({id:0,name:"Core Competency",title:"Core Competency",isSelected:!1}),this.competencyType.getAll().filter(function(t){0!=t.id&&e.competencyTypes.push({id:t.id,name:t.name,title:t.title,isSelected:!1})})},e.prototype.getCompetenciesList=function(){var e=this;this.selectedCompetencies=[],this.selectedTypeIds=[],this.selectedTypeIds=this.competencyTypes.filter(function(e){return e.isSelected}).map(function(e){return e.id});var t=[];this.competencyTypes.forEach(function(i){0==i.id&&(e.coreSelected=i.isSelected),i.id>0&&!i.isSelected&&t.concat(e.competencies.filter(function(e){return e.competencyType==i.id}))}),t.forEach(function(t){e.competencies.forEach(function(e){e.id==t.id&&(e.isSelected=!1)}),e.competencyBehaviours.forEach(function(e){e.skillId==t.id&&(e.isSelected=!1)})}),this.selectedCompetencies=this._filter("filterWithArray")(this.competencies,"competencyType",this.selectedTypeIds),this.getBehaviours()},e.prototype.getBehaviours=function(){this.selectedCompetencyIds=this.competencies.filter(function(e){return e.isSelected}).map(function(e){return e.id})},e.prototype.importCompetencies=function(){var e=this,t=this.competencies.filter(function(e){return e.isSelected}).map(function(e){return e.id});if(t.length>0){var i={competencyIds:t,behaviourIds:this.competencyBehaviours.filter(function(e){return e.isSelected}).map(function(e){return e.id})};this.skillService.importCompetencies(i).then(function(t){e._modalInstance.close(),e.notificationService.success("Competencies imported successfully")},function(t){e.notificationService.error("Error in importing competencies")})}else this.notificationService.error("Please select atleast one competency")},e.$inject=["$scope","$state","$filter","$uibModalInstance","NotificationService","SkillService","CompetencyType"],e}();t.ImportCompetencyController=c;var p=function(){function t(e,t,i,n,o,r,a,s,l,c){this._scope=e,this._state=t,this._modal=i,this.notificationService=n,this.appSettings=o,this.appContext=r,this.skillService=a,this.competencyType=s,this.dialogs=l,this.pmsSettingsView=c,this.getCoreValues()}return t.prototype.getCoreValues=function(){var e=this;this.skillService.getCoreValues().then(function(t){e.coreValues=t,e.updateSetupCoreValuesCount()})},t.prototype.updateSetupCoreValuesCount=function(){this.pmsSettingsView&&(this.pmsSettingsView.coreValuesCount=this.coreValues.length)},t.prototype.updateCoreValue=function(e,t){this.skillService.updateCoreValue(e,t).then(function(e){})},t.prototype.addCoreValue=function(){var t=new e.Model.CoreValueView({type:e.Model.SkillType.CoreValue});this.openCoreValueModal(t)},t.prototype.openCoreValueModal=function(e){var t=this;this._modal.open({templateUrl:"add-skill-template",windowClass:"right-side-modal pms-right-side-modal employee-exit-modal dark-modal wizard-head action-content",backdrop:!0,keyboard:!1,controller:"AddSkillController as ctrl",resolve:{Competency:function(){return e}}}).result.then(function(e){e.skill&&t.getCoreValues()})},t.$inject=["$scope","$state","$uibModal","NotificationService","AppSettings","AppContext","SkillService","CompetencyType","dialogs"],t}();t.CoreValuesController=p}(e.Controllers||(e.Controllers={}))}(PMS||(PMS={})),angular.module("PMS").controller("CompetenciesController",PMS.Controllers.CompetenciesController).controller("CoreCompetenciesController",PMS.Controllers.CoreCompetenciesController).controller("CommonSuccessCompetenciesController",PMS.Controllers.CommonSuccessCompetenciesController).controller("JobSpecificCompetenciesController",PMS.Controllers.JobSpecificCompetenciesController).controller("ImportCompetenciesController",PMS.Controllers.ImportCompetenciesController).controller("ImportCompetencyBehavioursController",PMS.Controllers.ImportCompetencyBehavioursController).controller("AddSkillController",PMS.Controllers.AddSkillController).controller("ImportCompetencyController",PMS.Controllers.ImportCompetencyController).controller("CoreValuesController",PMS.Controllers.CoreValuesController),function(e){!function(e){var t=function(){function e(e){var t=this;this.timeoutService=e,this.restrict="EA",this.link=function(e,i,n){t.timeoutService(function(){$(i).svgConnect({stroke:"#007ACC",strokeWidth:2,orientation:"vertical",class:"tree-map-path"})})}}return e.factory=function(){var t=function(t){return new e(t)};return t.$inject=["$timeout"],t},e}(),i=function(){function e(e,t){var i=this;this.timeoutService=e,this.windowService=t,this.restrict="A",this.link=function(e,t,n){i.timeoutService(function(){var e=t.attr("id"),i=t.attr("goal-tree-item-connector");e&&i&&$("goal-tree-area").svgConnect("addPaths",[{start:"#"+e,end:"#"+i}])},4),e.$on("$destroy",function(){$("goal-tree-area").svgConnect("clearPaths",{startId:t.attr("id"),endId:t.attr("goal-tree-item-connector")})})}}return e.factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["$timeout","$window"],t},e}(),n=function(){function e(e,t){var i=this;this.compileService=e,this.timeoutService=t,this.restrict="EA",this.templateUrl="goalTreeTileItem",this.scope={goal:"=",ctrl:"="},this.link=function(e,t,n){t.attr("id","goal-"+Math.floor(268435456*(1+Math.random())).toString(16).substring(1));var o=t.outerWidth()+100;e.closeItem=function(n){n.stopImmediatePropagation(),e.goal.close();var o=t.parent("td");o.length>0?$(o[0]).css("height","auto"):t.css("margin-bottom","20px"),i.timeoutService(function(){$("goal-tree-area").svgConnect("reset")},50)},e.$watch("goal.isOpened",function(n,r){if(e.goal.isOpened){var a=e.goal.childGoals.length;if(a>0){var s=t.parent("td");s.length>0?$(s[0]).css("height",130*a+100):t.css("margin-bottom",130*a-60),i.timeoutService(function(){$("goal-tree-area").svgConnect("reset")},50)}if(e.goal.childGoals.length){var l='<goal-tree-item goal="item" class="children" style="left: '+o+'px" ctrl="ctrl" goal-tree-item-connector='+t.attr("id")+' data-ng-repeat="item in goal.childGoals"></goal-tree-item>',c=t.find(".child-goals-container");c.html(""),c.append(i.compileService(l)(e)),t.parent().length>0&&"TD"==t.parent().get(0).tagName||e.$emit("reCalcParentHeight",{source:t})}}}),e.$on("reCalcParentHeight",function(e,i){if(t.parent().length>0&&"TD"==t.parent().get(0).tagName){var n=t.get(0).scrollHeight,o=t.outerHeight();t.parent().height((n>o?n:o)+20)}}),t.on("click",function(t){t.stopImmediatePropagation(),e.ctrl.expandGoal(e.goal),e.$applyAsync()}),e.$on("$destroy",function(){t.remove(),e.$applyAsync()})}}return e.factory=function(){var t=function(t,i,n){return new e(t,i)};return t.$inject=["$compile","$timeout"],t},e}(),o=function(){function e(e,t){var i=this;this.windowService=e,this.filterService=t,this.restrict="EA",this.svgHeight=200,this.translateX=10,this.translateY=175,this.yPointMultiplier=50,this.xPointOffset=4,this.scalePointGapInPx=100,this.totalPoints=12,this.scope={eventItems:"=eventItems"},this.link=function(e,t,n){i.normalizeYPoints(e.eventItems),i.dataSet=e.eventItems.map(function(e){return[e.date,e.yPoint,e.contentCode,e.color,e.cssClass,e.title]}),i.drawInitialSvg(t,i.svgHeight,i.translateX,i.translateY),i.initEventScale(t),angular.element(i.windowService).on("resize",function(){i.onWindowResized(t)}),e.$on("$destroy",function(){angular.element(i.windowService).off("resize",function(){i.onWindowResized(t)})})}}return e.prototype.onWindowResized=function(e){$("#xhrEventScaleSvg").remove(),this.drawInitialSvg(e,this.svgHeight,this.translateX,this.translateY),this.initEventScale(e)},e.prototype.initEventScale=function(e){var t=this;this.scalePointGapInPx=(e.outerWidth()-80)/this.totalPoints;var i=new Date,n=new Date(i.getFullYear(),0,1),o=new Date(i.getFullYear(),10,31),r=d3.time.scale().domain([n,o]).range([0,this.totalPoints*this.scalePointGapInPx]);r.nice(d3.time.month);var a=d3.scale.linear().domain([0,3]),s=d3.svg.axis().scale(r).orient("bottom"),l=d3.time.format("%b");s.tickFormat(function(e){return l(e)}),this.svgHandle.selectAll("text").data(this.dataSet).enter().append("text").text(function(e){return e[2]}).attr("x",function(e){return r(e[0])+1}).attr("y",function(e){return t.svgHeight-25-a(e[1])}).attr("class","event-item").style("fill",function(e){return e[3]}).style("font-family","icomoon").style("font-size","18px").style("cursor","pointer").on("mouseenter",function(e,i,n){t.showTooltip(e,i,n)}).on("mouseleave",function(e,i,n){t.hideTootlip(e,i,n)}),this.svgHandle.select(".axis").call(s).selectAll(".tick").each(function(e,i,n){var o=d3.selectAll(".tick"),r=d3.select(o[0][i]),a=r.select("line"),s=parseInt(a.attr("y2"));a.attr("y1",s-100),a.attr("x1",0),r.append("line").attr("y1",5).attr("x1",t.scalePointGapInPx/2).attr("x2",t.scalePointGapInPx/2).attr("y2",-50)}),this.tooltipHandle=this.svgHandle.append("g"),this.tooltipHandle.append("rect").attr("class","event-info").attr("visibility","hidden").attr("x",0).attr("y",0).attr("rx",4).attr("ry",4).attr("width",100).attr("height",50),this.tooltipHandle.append("text").attr("x",0).attr("y",0).attr("width",100).attr("height",50).attr("visibility","hidden")},e.prototype.showTooltip=function(e,t,i){var n=this.tooltipHandle.select("rect"),o=this.tooltipHandle.select("text"),r=$(d3.event.target);o.html("Event: "+e[5]+" on "+this.filterService("date")(e[0],"dd MMM, yyyy")),n.attr("x",parseInt(r.attr("x"))+30),o.attr("x",parseInt(r.attr("x"))+34),n.attr("y",parseInt(r.attr("y"))-28),o.attr("y",r.attr("y")),n.attr("visibility","visible"),o.attr("visibility","visible"),n.attr("width",o[0][0].getComputedTextLength()+8)},e.prototype.hideTootlip=function(e,t,i){var n=this.tooltipHandle.select("rect"),o=this.tooltipHandle.select("text");o.html(""),n.attr("visibility","hidden"),o.attr("visibility","hidden"),n.attr("x",0),o.attr("x",0),n.attr("y",0),o.attr("y",0)},e.prototype.normalizeYPoints=function(e){var t=this;e.forEach(function(i,n){var o=e.filter(function(e){return e.date.dateOnlyString()==i.date.dateOnlyString()});o.length>1?i.yPoint=t.yPointMultiplier*o.indexOf(i):i.yPoint=0})},e.prototype.drawInitialSvg=function(e,t,i,n){var o='<svg width="100%" height="'+t+'" id="xhrEventScaleSvg"><g class="axis" transform="translate('+i+","+n+')" width="100%"></g></svg>';e.append(o),this.svgHandle=d3.select("#xhrEventScaleSvg")},e.factory=function(){var t=function(t,i){return new e(t,i)};return t.$inject=["$window","$filter"],t},e}();e.XhrEventScale=o,angular.module("PMS").directive("goalTreeArea",t.factory()).directive("goalTreeItemConnector",i.factory()).directive("goalTreeItem",n.factory()).directive("xhrEventScale",o.factory())}(e.Directives||(e.Directives={}))}(PMS||(PMS={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(t){var i=function(e){function t(t,i,n,o,r,a){var s=e.call(this,t,i)||this;return s._state=i,s.notificationService=n,s.appSettings=o,s.appContext=r,s.goalsService=a,s}return __extends(t,e),Object.defineProperty(t.prototype,"currentState",{get:function(){return this._state.current.name},enumerable:!0,configurable:!0}),t.$inject=["$scope","$state","NotificationService","AppSettings","AppContext","PMSGoalsService"],t}(e.StateChangeHandleController);t.PerformanceGoalsController=i;var n=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y){var h=this;this._q=t,this._state=i,this._filter=n,this._timeout=o,this._cookies=r,this.appSettings=a,this.appContext=s,this.pmsSettings=l,this.notificationService=c,this.pmsService=p,this.goalsService=u,this.dialogs=d,this.goalTypes=m,this.dateServices=y,this.goals=[],this.allGoalTypes=[],this.selectedEmployeeId=0,this.departments=[],this.businessUnits=[],this.cookieName="goal-library-view-name",this.viewNames=["gridview","listview"],this.setStartAndEndDates=function(){var e=new Date;e.setDate(1),h.startDate=angular.copy(e),h.endDate=angular.copy(e),h.startDate.setMonth(h.startDate.getMonth()-1),h.endDate.setMonth(e.getMonth()+1),h.endDate.setDate(h.endDate.getDate()-1)},this.setDropdownData=function(){h.pmsSettings.goalSettings.goalAlias?(h.allGoalTypes=angular.copy(h.goalTypes.getAll().filter(function(t){return t.id!=e.Model.GoalType.Team&&(h.appContext.isPMSAdmin||h.appContext.isGlobalAdmin||h.goals.map(function(e){return e.goalType}).some(function(e){return e==t.id}))})),h.allGoalTypes.length>1?h.allGoalTypes.unshift({id:-1,title:"All"}):h.allGoalTypes.length<1&&h.allGoalTypes.unshift({title:"No Goals Available"}),h.selectedGoalType=h.allGoalTypes[0].id,h.allGoalTypes.forEach(function(e){null!=e.id&&(e.title=e.title+" "+h.pmsSettings.goalSettings.goalAliasPlural)})):h._timeout(h.setDropdownData,50)},this.getGoals=function(){null!=h.startDate&&null!=h.endDate&&h.goalsService.getAllGoals(h.dateServices.dateOnlyString(h.startDate),h.dateServices.dateOnlyString(h.endDate)).then(function(t){h.goals=t.map(function(t){return new e.Model.GoalViewModel(t)}),h.filteredGoals=angular.copy(h.goals),h.setDropdownData(),h.filterGoals()})},this.filterGoals=function(){var e=h.goals.filter(function(e){return-1==h.selectedGoalType||e.goalType==h.selectedGoalType});h.filteredGoals=h._filter("filter")(e,h.filterText,!1)},this.setView=function(e){h.selectedView=e,h._cookies.put(h.cookieName,e)},this.setStartAndEndDates(),this.getGoals();var f=this._cookies.get(this.cookieName);this.selectedView=f||this.viewNames[0]}return t.$inject=["$q","$state","$filter","$timeout","$cookies","AppSettings","AppContext","PMSSettings","NotificationService","PMSService","PMSGoalsService","dialogs","GoalType","DateServices"],t}();t.GoalLibraryController=n;var o=function(){function t(t,i,n,o,r,a,s,l,c){var p=this;this._q=t,this._state=i,this._stateParams=n,this.notificationService=o,this.pmsService=r,this.goalsService=a,this.dialogs=s,this.goalTypes=l,this.goalMetricTypes=c,this.categories=[],this.saveGoal=function(){p.goalForm.goal.$valid&&(p.goalId?p.goalsService.updateGoal(p.goalId,p.goal):p.goalsService.saveGoal(p.goal)).then(function(e){p.goalsService.updateGoal(p.goalId,p.goal).then(function(e){p.notificationService.success("Goal "+(p.goalId?"updated":"saved")+" successfully"),p.dismissModal()},function(e){p.notificationService.success("Error occured while "+(p.goalId?"updating":"saving")+" the goal.")})})},this.dismissModal=function(){p._state.go("performance.goals.library")},this.goalId=this._stateParams.id,this.goalId?this._q.all([this.goalsService.getGoal(this.goalId),this.goalsService.getGoalCategories()]).then(function(t){p.goal=new e.Model.GoalViewModel(t[0]),p.categories=t[1]}):(this.goal=new e.Model.GoalViewModel({}),this.goal.isCompleted=!0,this.goalsService.getGoalCategories().then(function(e){p.categories=e}))}return t.$inject=["$q","$state","$stateParams","NotificationService","PMSService","PMSGoalsService","dialogs","GoalType","GoalMetricType"],t}();t.AddGoalController=o;var r=function(){function i(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y){this._state=e,this._scope=t,this._modal=i,this._filter=n,this._timeout=o,this.appSettings=r,this.pmsSettings=a,this.appContext=s,this.notificationService=l,this.commentItemTypes=c,this.goalTypes=p,this.goalMetricTypes=u,this.goalTrackingStatuses=d,this.pmsEmployeeService=m,this.goalPriorities=y,this.niceScrollOptions=angular.copy(this.appSettings.scrollSettings)}return Object.defineProperty(i.prototype,"totalGoalProgress",{get:function(){return this.goals.map(function(e){return e.progressPercentage}).reduce(function(e,t){return e+t})/this.goals.length},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"isSelfGoalsView",{get:function(){return null!=this.employee&&this.employee.id==this.appContext.myPublicProfile.id},enumerable:!0,configurable:!0}),i.prototype.copyFromGoalTemplate=function(){var e=this;this._modal.open({templateUrl:"/employeegoals/goaltemplatesview",controller:t.GoalTemplatesViewController,controllerAs:"ctrl",windowClass:"structure-compare small-btn",resolve:{goalComponentService:function(){return e.goalComponentService}}}).result.then(function(t){e.addCopiedGoal(t)})},i.prototype.addCopiedGoal=function(e){var t=this;this.goal=e,this.modalInstance=this._modal.open({template:'<add-employee-goal goal-to-edit="ctrl.goal" data-modal-instance="ctrl.modalInstance" goal-component-service="ctrl.goalComponentService"></add-employee-goal>',windowClass:"right-side-modal pms-right-side-modal",backdrop:!0,scope:this._scope}),this.modalInstance.result.then(function(e){(t.employee&&e.goalOwners.some(function(e){return e.id==t.employee.id})||!t.employee&&!t.isEmployeeGoalsView)&&t.goals.push(e),t.notificationService.success(t.pmsSettings.goalSettings.goalAlias+" is added successfully")})},i.prototype.addNewGoal=function(){var e=this;this.modalInstance=this._modal.open({template:'<add-employee-goal data-employee="ctrl.employee" data-modal-instance="ctrl.modalInstance" goal-component-service="ctrl.goalComponentService" data-is-employee-goal-page="ctrl.isEmployeeGoalsView" data-is-self-goal-page="ctrl.isSelfGoalsView"></add-employee-goal>',windowClass:"right-side-modal pms-right-side-modal",backdrop:!0,scope:this._scope}),this.modalInstance.result.then(function(t){(e.employee&&t.goalOwners.some(function(t){return t.id==e.employee.id})||!e.employee&&!e.isEmployeeGoalsView)&&e.goals.push(t),e.notificationService.success(e.pmsSettings.goalSettings.goalAlias+" is added successfully")})},i.prototype.assignNewGoal=function(){var t=this;this.modalInstance=this._modal.open({template:'<assign-employee-goal data-employee="ctrl.employee" data-employees="ctrl.employees" data-modal-instance="ctrl.modalInstance" goal-component-service="ctrl.goalComponentService"></assign-employee-goal>',windowClass:"full-screen-modal dark-modal performance-commons",backdrop:!0,scope:this._scope}),this.modalInstance.result.then(function(i){i.forEach(function(i){var n=t.goals.map(function(e){return e.id}).indexOf(i.id);(!t.employee||t.employee&&i.goalOwners.some(function(e){return e.id==t.employee.id}))&&(n<0?t.goals.push(i):t.employee||(t.goals[n]=new e.Model.GoalViewModel(i)))})})},i.prototype.getLastUpdated=function(e){return this._filter("orderBy")(e.log,"loggedOn",!0)[0]},i.prototype.getKeyResultProgressTooltip=function(e){var t=e.actualValue||e.startValue||0;return e.metricType!=this.goalMetricTypes.Checkbox.id?"Progress: "+parseFloat(t.toFixed(2))+"/"+e.targetValue+" "+this.goalMetricTypes.getById(e.metricType).symbol:e.actualValue==e.targetValue?"Complete":"In Progress"},i.prototype.checkInGoal=function(e,t){var i=this;this.goalToCheckIn=angular.copy(e),this.modalInstance=this._modal.open({template:'<goal-check-in modal-instance="ctrl.modalInstance" goal="ctrl.goalToCheckIn" goal-component-service="ctrl.goalComponentService"></goal-check-in>',scope:this._scope,windowClass:"performance-commons goal-check-in"}),this.modalInstance.result.then(function(t){i.goals.forEach(function(i,n){var o=t.filter(function(e){return e.id==i.id})[0],r=null!=o?t.filter(function(t){return e.keyResults.some(function(e){return e.id==t.id})}):[];o&&(i.actualValue=o.actualValue,i.log=o.log),r.length&&i.keyResults.forEach(function(e){var t=r.filter(function(t){return t.id==e.id})[0];t&&(e.actualValue=t.actualValue)})})})},i.prototype.getKeyResults=function(t){t.keyResultCount&&!t.keyResults.length&&this.goalComponentService.getKeyResults(t.id).then(function(i){t.keyResults=i.map(function(t){return new e.Model.KeyResult(t)})})},i.$inject=["$state","$scope","$uibModal","$filter","$timeout","AppSettings","PMSSettings","AppContext","NotificationService","CommentItemType","GoalType","GoalMetricType","GoalTrackingStatus","PMSEmployeeService","GoalPriority"],i}();t.EmployeeGoalsController=r;var a=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f){var g=this;this._q=t,this._filter=i,this.appSettings=n,this.appContext=o,this.pmsSettings=r,this.dialogs=a,this.notificationService=s,this.goalsService=l,this.goalMetricTypes=c,this.goalTypes=p,this.keyResultRequirementType=u,this.utilService=d,this.priorities=m,this.goalPeriodUnits=y,this.lookupService=h,this.dateServices=f,this.goal=new e.Model.GoalViewModel({}),this.categories=[],this.competencies=[],this.groupsToAssign=[],this.groupsAssignedTo=[],this.businessUnits=[],this.goalSaveInProgress=!1,this.goalType=e.Model.GoalType.Individual,this.precisionFactor=100,this.setGoalType=function(t){g.goalType=angular.copy(t),g.goalType!=e.Model.GoalType.Individual&&(g.goal.isDevelopmentGoal=!1,g.getGroupsToAssign())},this.getGroupsToAssign=function(){g.goalType!=e.Model.GoalType.Department||g.groupsToAssign.length||g.goalComponentService.getDepartments().then(function(t){t&&angular.isArray(t)&&(t=g._filter("orderBy")(t,"name",!1)),g.groupsToAssign=t.map(function(t){return new e.Model.LookupItem(t)})})},this.calculateGoalProgress=function(){g.areWeightagesValid&&(g.goal.actualValue=g.goal.keyResults.map(function(e){return e.actualValue*e.weightageContribution}).reduce(function(e,t){return e+t}))},this.resetKeyResultWeights=function(){g.goal.areWeightagesEnabled&&g.goal.keyResults.forEach(function(e,t){e.weightage=null}),g.setKeyResultWeights()},this.setKeyResultWeights=function(){g.goal.areWeightagesEnabled||g.goal.keyResults.forEach(function(e){e.weightage=100/g.goal.keyResults.length})},this.showErrorsDialog=function(e){var t=e.split("\n").join("<br /><br />");g.dialogs.notify("Application notification",t,{keyboard:!1,backdrop:"static"})},this.groupByGoalType=function(e){return g.goalTypes.getById(e.goalType).title+" "+g.pmsSettings.goalSettings.goalAliasPlural},this.orderGoalGroups=function(e){return g._filter("orderBy")(e,"name")},this.getMatchedEmployees=function(e){return g.utilService.getMatchedEmployeesExcluding(e,g.goal.goalOwners.map(function(e){return e.id}))},this.addGoalOwner=function(e){g.goal.goalOwners.push(e),g.selectedEmployee=null},this.resetGoalOwners=function(){g.goal.goalOwners.splice(1,g.goal.goalOwners.length-1)}}return Object.defineProperty(t.prototype,"areWeightagesValid",{get:function(){if(!this.goal.hasKeyResults)return!0;if(this.goal.areWeightagesEnabled&&!this.goal.keyResults.every(function(e){return/^[0]*[\d]{1,2}(.[\d][\d]?)?$/.test(e.weightage)}))return!1;return 100==Math.round(this.goal.keyResults.map(function(e){return parseFloat(e.weightage)}).reduce(function(e,t){return e+t})*this.precisionFactor)/this.precisionFactor},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"areAllWeightagesGiven",{get:function(){return!this.goal.areWeightagesEnabled||this.goal.keyResults.every(function(e){return!!e.weightage})&&this.goal.keyResults.every(function(e){return/^[0]*[\d]{1,2}(.[\d][\d]?)?$/.test(e.weightage)})},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"areGoalMetricsValid",{get:function(){return this.goal.hasKeyResults?this.goal.keyResults.every(function(t){return t.metricType==e.Model.GoalMetricType.Checkbox||null!=t.targetValue&&t.targetValue!=(t.startValue||0)}):this.goal.metricType==e.Model.GoalMetricType.Checkbox||null!=this.goal.targetValue&&this.goal.targetValue!=(this.goal.startValue||0)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"useWeights",{get:function(){return this.goal.areWeightagesEnabled},set:function(e){var t=this;e?(this.goal.areWeightagesEnabled=e,this.resetKeyResultWeights()):this.goal.keyResults.some(function(e){return!!e.weightage})?this.dialogs.confirm("Please Confirm","Any weights you have given to the "+this.pmsSettings.goalSettings.keyResultAliasPlural+" will be lost. Are you sure you want to continue?").result.then(function(){t.goal.areWeightagesEnabled=e,t.resetKeyResultWeights()}):(this.goal.areWeightagesEnabled=e,this.resetKeyResultWeights())},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isGoalPeriodValid",{get:function(){return this.goal.startDate&&this.goal.endDate},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isGoalCreatedBySelf",{get:function(){return this.appContext&&this.goal&&this.appContext.myPublicProfile.id==this.goal.authorId},enumerable:!0,configurable:!0}),t.prototype.$onInit=function(){var t=this;this.goalToEdit?(this.goal=new e.Model.GoalViewModel(this.goalToEdit),this.goalType=angular.copy(this.goalToEdit.goalType),this.goal.goalType=null,this.goal.id&&this.goalType==e.Model.GoalType.Department&&this.goalComponentService.getGroupsAssignedToGoal(this.goal.id).then(function(i){t.groupsAssignedTo=i.map(function(t){return new e.Model.LookupItem(t)})})):this.goal.checkInReminderSettings=angular.copy(this.pmsSettings.goalSettings.checkInReminderSettings),this.goalComponentService.getGoalCategories().then(function(e){t.categories=e}),this.goalComponentService.getAllCompetencies().then(function(i){t.competencies=i.map(function(t){return new e.Model.LookupItem(t)})}),this.lookupService.getMetricUnits().then(function(e){t.metricUnits=e}),this.goalComponentService.getBusinessUnits().then(function(e){t.businessUnits=angular.copy(e),t.businessUnits.length>0&&(t.goal.businessUnitId=t.goal.businessUnitId||t.businessUnits[0].id)}),this.initializeGoal(),this.setGoalType(this.goalType)},t.prototype.initializeGoal=function(){!this.pmsSettings.goalSettings.canEmployeeAddGoals&&this.isSelfGoalPage&&(this.goal.isPrivateGoal=!0),!this.goal.goalOwners.length&&this.employee&&this.goal.goalOwners.push(this.employee),this.goal.id||(this.goal.hasKeyResults=this.pmsSettings.goalSettings.keyResultRequirementType!=this.keyResultRequirementType.NotRequired.id),this.goal.keyResults.length||(this.goal.keyResults.push(new e.Model.KeyResult({startValue:0,targetValue:100})),this.goal.keyResults.push(new e.Model.KeyResult({startValue:0,targetValue:100})),this.goal.keyResults.push(new e.Model.KeyResult({startValue:0,targetValue:100}))),this.setKeyResultWeights()},t.prototype.dismissModal=function(){this.modalInstance.dismiss()},t.prototype.resetGoalModel=function(t){if(t.goalType=this.goalType,t.startDate=t.startDate?this.dateServices.dateOnlyString(t.startDate):null,t.endDate=t.endDate?this.dateServices.dateOnlyString(t.endDate):null,t.assignedGroupIds=t.goalType==e.Model.GoalType.Department?this.groupsAssignedTo.map(function(e){return e.id}):[],t.goalType!=e.Model.GoalType.Individual&&(t.isDevelopmentGoal=!1,t.goalCompetencies=[]),t.hasKeyResults){t.metricType=e.Model.GoalMetricType.Percentage,t.metricUnitId=null,t.keyResults.forEach(function(i){t.areWeightagesEnabled||(i.weightage=100/t.keyResults.length);var n=t.log.some(function(e){return e.childGoalIdentifier==i.identifier});(!i.id||!n||!i.isDecreasingGoal&&i.actualValue<i.startValue||i.isDecreasingGoal&&i.actualValue>i.startValue)&&(i.actualValue=i.startValue),i.id||i.metricType!=e.Model.GoalMetricType.Checkbox||(i.startValue=0,i.targetValue=100,i.actualValue=i.actualValue<i.targetValue?i.startValue:i.targetValue,i.isDecreasingGoal=!1)});var i=t.keyResults.length?1:0,n=t.keyResults.map(function(e){return e.progressPercentage*e.weightageContribution}).reduce(function(e,t){return e+t});t.startValue=0,t.targetValue=100,t.actualValue=n/(i||1)}else{t.keyResults=[],t.startValue=t.startValue||0,!(t.log.filter(function(t){return t.type==e.Model.GoalLogItemType.CheckIn}).length>0)&&(!t.id||t.trackingStatus==e.Model.GoalTrackingStatus.None||!t.isDecreasingGoal&&t.actualValue<t.startValue||t.isDecreasingGoal&&t.actualValue>t.startValue)&&(t.actualValue=t.startValue),t.id||t.metricType!=e.Model.GoalMetricType.Checkbox||(t.startValue=0,t.targetValue=100,t.actualValue=t.actualValue<t.targetValue?t.startValue:t.targetValue,t.isDecreasingGoal=!1)}return t.keyResultCount=t.keyResults.length,t},t.prototype.saveGoal=function(){var t=this;this.submitted=!0;var i=!this.goal.hasKeyResults||this.goal.hasKeyResults&&this.goal.keyResults.length>0,n=this.goalType!=e.Model.GoalType.Department||1==this.groupsAssignedTo.length,o=!this.goal.isDevelopmentGoal||this.goal.isDevelopmentGoal&&this.goal.goalCompetencies.length;if(!this.goalSaveInProgress&&this.goalForm.goal.$valid&&this.goal.goalOwners.length&&this.areWeightagesValid&&this.areGoalMetricsValid&&i&&n&&o&&this.isGoalPeriodValid){var r=this.resetGoalModel(angular.copy(this.goal));this.goalSaveInProgress=!0,this.goal.id?this.goalComponentService.updateGoal(r.id,r).then(function(i){t.goalSaveInProgress=!1,t.modalInstance.close(new e.Model.GoalViewModel(i)),t.notificationService.success(t.pmsSettings.goalSettings.goalAlias+" has been updated successfully")},function(e){t.goalSaveInProgress=!1,e.data&&e.data.message?t.showErrorsDialog(e.data.message):t.notificationService.error("An error has occurred while updating the "+t.pmsSettings.goalSettings.goalAlias)}):this.goalComponentService.saveGoal(r).then(function(i){t.goalSaveInProgress=!1,t.modalInstance.close(new e.Model.GoalViewModel(i)),t.notificationService.success(t.pmsSettings.goalSettings.goalAlias+" has been added successfully")},function(e){t.goalSaveInProgress=!1,e.data&&e.data.message?t.showErrorsDialog(e.data.message):t.notificationService.error("An error has occurred while adding the "+t.pmsSettings.goalSettings.goalAlias)})}},t.$inject=["$q","$filter","AppSettings","AppContext","PMSSettings","dialogs","NotificationService","PMSGoalsService","GoalMetricType","GoalType","KeyResultRequirementType","Utils","GoalPriority","GoalPeriodUnit","LookupService","DateServices"],t}();t.AddEmployeeGoalController=a;var s=function(){function t(e,t,i,n,o,r,a){this.pmsSettings=e,this.goalTypes=t,this.goalCheckInTypes=i,this.notificationService=n,this.goalTrackingStatuses=o,this.goalMetricTypes=r,this.lookupService=a,this.metricUnits=[],this.isCheckinInProgress=!1}return Object.defineProperty(t.prototype,"keyResultsToCheckIn",{get:function(){return this.checkInRequest.hasKeyResults?this.checkInRequest.keyResults.filter(function(e){return null!=e.checkInValue}):new Array},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isStatusUpdated",{get:function(){return null!=this.checkInRequest&&this.checkInRequest.trackingStatus!=this.goal.trackingStatus},enumerable:!0,configurable:!0}),t.prototype.$onInit=function(){this.getGoalViewModel(this.goal.id)},t.prototype.getGoalViewModel=function(t){var i=this;this.goalComponentService.getGoal(t).then(function(t){i.goalModel=new e.Model.GoalViewModel(t),i.checkInRequest=new e.Model.GoalCheckInRequest(i.goalModel),i.lookupService.getMetricUnits().then(function(e){e&&e.length&&(i.metricUnits=e.map(function(e){return new Settings.Model.MetricUnit(e)}))})})},t.prototype.getGoalMetricTooltip=function(t){var i=null!=t&&null!=t.metricType?this.goalMetricTypes.getById(t.metricType).title:"";return this.metricUnits.length&&t.metricType==e.Model.GoalMetricType.Number&&(i+=" : "+this.metricUnits.filter(function(e){return e.id==t.metricUnitId})[0].name),i},t.prototype.checkOrUncheckGoal=function(t){t.metricType==e.Model.GoalMetricType.Checkbox&&(t.checkInValue=null==t.checkInValue?t.actualValue:t.checkInValue,t.checkInValue==t.targetValue?t.checkInValue=t.startValue:t.checkInValue=t.targetValue,t.checkInValue==t.actualValue&&(t.checkInValue=null))},t.prototype.isGoalChecked=function(e){return(e.checkInValue||e.actualValue)==e.targetValue},t.prototype.isObjectiveProgressValid=function(e){var t=this.getEffectiveCheckInValue(e);return e.actualValue!=t&&(e.isDecreasingGoal?t<e.startValue:t>e.startValue)},t.prototype.getEffectiveCheckInValue=function(t){if(t){var i=t.checkInValue;return t.checkInType==e.Model.GoalCheckInValueType.Increment?i=t.actualValue+t.checkInValue:t.checkInType==e.Model.GoalCheckInValueType.Decrement&&(i=t.actualValue-t.checkInValue),i}},t.prototype.checkIn=function(){var t=this;if(!this.isCheckinInProgress&&this.goalCheckInForm.goalCheckIn.$valid){var i=!this.checkInRequest.hasKeyResults||(this.keyResultsToCheckIn.length>0?this.keyResultsToCheckIn.every(function(i){return i.metricType==e.Model.GoalMetricType.Checkbox||t.isObjectiveProgressValid(i)}):this.isStatusUpdated),n=this.checkInRequest.hasKeyResults?i:null==this.checkInRequest.checkInValue?this.checkInRequest.metricType==e.Model.GoalMetricType.Checkbox||this.isStatusUpdated:this.checkInRequest.metricType==e.Model.GoalMetricType.Checkbox||this.isObjectiveProgressValid(this.checkInRequest);(this.checkInRequest.hasKeyResults&&i||!this.checkInRequest.hasKeyResults&&n)&&(this.isCheckinInProgress=!0,this.goalComponentService.checkInGoal(this.checkInRequest.id,this.checkInRequest).then(function(i){t.notificationService.success("Goal progress has been updated successfully");var n=i.updatedGoals.map(function(t){return new e.Model.GoalListItem(t)});t.modalInstance.close(n),t.isCheckinInProgress=!1},function(e){t.notificationService.error("An error occurred while updating goal progress")}))}},t.prototype.closeModal=function(){this.modalInstance.dismiss()},t.$inject=["PMSSettings","GoalType","GoalCheckInType","NotificationService","GoalTrackingStatus","GoalMetricType","LookupService"],t}();t.GoalCheckInController=s;var l=function(){function t(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f){this._state=e,this._stateParams=t,this._scope=i,this._modal=n,this._filter=o,this._window=r,this.pmsSettings=a,this.appContext=s,this.appSettings=l,this.goalTypes=c,this.pmsGoalsService=p,this.goalMetricTypes=u,this.pmsEmployeService=d,this.commentItemTypes=m,this.dialogs=y,this.notificationService=h,this.goalTrackingStatuses=f,this.selectedTab="details",this.employeesWhoCheckedIn=[],this.managedDepartments=[],this.niceScrollOptions=angular.copy(this.appSettings.scrollSettings)}return Object.defineProperty(t.prototype,"isGoalEditable",{get:function(){var e=this;return this.appContext&&this.goal&&(!this.isMyGoalPage&&(this.appContext.isPMSAdmin||this.appContext.isGlobalAdmin||this.isBusinessUnitHead||this.isGoalManagedByEmployee)||this.goal.goalOwners.some(function(t){return t.id==e.appContext.myPublicProfile.id||!e.isMyGoalPage&&t.reportingTo==e.appContext.myPublicProfile.id}))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isGoalManagedByEmployee",{get:function(){var e=this;return this.managedDepartments.some(function(t){return e.goal.assignedGroupIds.some(function(e){return e==t.id})})},enumerable:!0,configurable:!0}),t.prototype.$onInit=function(){var t=this;this.goalComponentService.getGoal(this._stateParams.goalId).then(function(i){t.goal=new e.Model.GoalViewModel(i)},function(e){t.notificationService.error("You do not have enough privileges to view this "+t.pmsSettings.goalSettings.goalAlias),t.goBack()}),this.goalComponentService.getDepartments().then(function(e){t.managedDepartments=e})},t.prototype.goBack=function(){this._state.go(this.previousState||this._state.current.parentState,this.previousStateParams||{})},t.prototype.checkInGoal=function(){var e=this;this.modalInstance=this._modal.open({template:'<goal-check-in modal-instance="ctrl.modalInstance" goal="ctrl.goal" goal-component-service="ctrl.goalComponentService"></goal-check-in>',scope:this._scope,windowClass:"performance-commons goal-check-in"}),this.modalInstance.result.then(function(t){var i=t.filter(function(t){return t.id==e.goal.id})[0],n=null!=i?t.filter(function(t){return e.goal.keyResults.some(function(e){return e.id==t.id})}):[];i&&(e.goal.actualValue=i.actualValue,e.goal.log=i.log),n.length&&e.goal.keyResults.forEach(function(e){var t=n.filter(function(t){return t.id==e.id})[0];t&&(e.actualValue=t.actualValue)})})},t.prototype.getKeyResultProgressTooltip=function(e){var t=e.actualValue||e.startValue||0;return e.metricType!=this.goalMetricTypes.Checkbox.id?"Progress: "+parseFloat(t.toFixed(2))+"/"+e.targetValue+" "+this.goalMetricTypes.getById(e.metricType).symbol:e.actualValue==e.targetValue?"Complete":"In Progress"},t.prototype.editGoal=function(){var t=this;this.editGoalModel=angular.copy(this.goal),this.modalInstance=this._modal.open({template:'<add-employee-goal goal-to-edit="ctrl.editGoalModel" data-employee="ctrl.employee" data-modal-instance="ctrl.modalInstance" goal-component-service="ctrl.goalComponentService" data-is-self-goal-page="ctrl.isMyGoalPage"></add-employee-goal>',windowClass:"right-side-modal pms-right-side-modal",backdrop:!0,scope:this._scope}),this.modalInstance.result.then(function(i){t.isMyGoalPage&&!i.goalOwners.some(function(e){return e.id==t.appContext.myPublicProfile.id})||t.isMyTeamGoalsPage&&!i.goalOwners.some(function(e){return e.id==t.appContext.myPublicProfile.id})&&!i.goalOwners.some(function(e){return e.reportingTo==t.appContext.myPublicProfile.id})?t.goBack():t.goal=new e.Model.GoalViewModel(i)})},t.prototype.closeModal=function(){this.modalInstance.dismiss()},t.prototype.markGoalAsComplete=function(){var t=this;this.dialogs.confirm("Please Confirm","Are you sure you want to close this "+this.pmsSettings.goalSettings.goalAlias+"?").result.then(function(){t.goalComponentService.markGoalAsComplete(t.goal.id).then(function(i){t.goal.log.push(new e.Model.GoalCheckInLogItem(i)),t.goal.isCompleted=!0,t.notificationService.success("Goal has been marked as complete")},function(e){t.notificationService.error("An error occurred while closing the "+t.pmsSettings.goalSettings.goalAlias)})})},t.prototype.markGoalAsIncomplete=function(){var t=this;this.dialogs.confirm("Please Confirm","Are you sure you want to reopen this "+this.pmsSettings.goalSettings.goalAlias+"?").result.then(function(){t.goalComponentService.markGoalAsIncomplete(t.goal.id).then(function(i){t.goal.log.push(new e.Model.GoalCheckInLogItem(i)),t.goal.isCompleted=!1,t.notificationService.success("Goal has been marked as incomplete")},function(e){t.notificationService.error("An error occurred while reopening the "+t.pmsSettings.goalSettings.goalAlias)})})},t.prototype.deleteGoal=function(){var e=this;this.dialogs.confirm("Please Confirm","Are you sure you want to delete this "+this.pmsSettings.goalSettings.goalAlias+"?").result.then(function(){e.goalComponentService.deleteGoal(e.goal.id).then(function(t){e.notificationService.success(e.pmsSettings.goalSettings.goalAlias+" has been deleted successfully"),e.goBack()},function(t){e.notificationService.error("An error occurred while deleting the "+e.pmsSettings.goalSettings.goalAlias)})})},t.prototype.getGoalStartDateVerb=function(){return this.goal.startDate<=new Date?"Started":"Starts"},t.$inject=["$state","$stateParams","$scope","$uibModal","$filter","$window","PMSSettings","AppContext","AppSettings","GoalType","PMSGoalsService","GoalMetricType","PMSEmployeeService","CommentItemType","dialogs","NotificationService","GoalTrackingStatus"],t}();t.GoalDetailsController=l;var c=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d){var m=this;this._q=t,this._scope=i,this._filter=n,this.appSettings=o,this.pmsSettings=r,this.dialogs=a,this.goalTypes=s,this.utilService=l,this.notificationService=c,this.pmsService=p,this.goalsService=u,this.myTeamService=d,this.filteredGoals=[],this.selectedEmployees=[],this.selectedGoals=[],this.departments=[],this.goalDepartments=[],this.businessUnits=[],this.goalBusinessUnits=[],this.allGoalTypes=[],this.gridSettings={},this.selectedRowsCount=0,this.selectedGoalType=-1,this.departmentId=0,this.selectedGroupId=0,this.showSearch=!1,this.submitted=!1,this.populateGoalGroups=function(){m.goals.forEach(function(t){t.assignedGroupIds.forEach(function(i){t.goalType==e.Model.GoalType.Department&&(m.goalDepartments.map(function(e){return e.id}).indexOf(i)<0&&m.departments.filter(function(e){return e.id==i})[0]&&m.goalDepartments.push(m.departments.filter(function(e){return e.id==i})[0]))})}),m.goalDepartments.unshift(new Settings.Model.Group({id:0,name:"All Departments"})),m.goalBusinessUnits.unshift(new Settings.Model.Group({id:0,name:"All Organizations"}))},this.initializeGoalsGrid=function(){m.gridSettings=angular.copy(m.appSettings.gridSettings),m.gridSettings.columnDefs=[{field:"name",displayName:m.pmsSettings.goalSettings.goalAlias+" Name"},{field:"description",displayName:"Description",cellTemplate:'<div class="ui-grid-cell-contents text-muted">{{row.entity.description || "Not Available"}}</div>'},{field:"goalType",displayName:m.pmsSettings.goalSettings.goalAlias+" Type",cellTemplate:'<div class="ui-grid-cell-contents text-muted">{{grid.appScope.ctrl.goalTypes.getById(row.entity.goalType).title}} {{grid.appScope.ctrl.pmsSettings.goalSettings.goalAlias}}</div>'},{field:"goalOwners",displayName:"Owners",cellTemplate:'<div class="ui-grid-cell-contents text-muted">{{grid.appScope.ctrl.getGoalOwners(row.entity)}}</div>'},{field:"departmentsAssignedTo",displayName:"Assigned To",cellTemplate:'<div class="ui-grid-cell-contents text-muted">{{grid.appScope.ctrl.getGroupsAssignedTo(row.entity) || "-"}}</div>'}],m.gridSettings.data="ctrl.filteredGoals",m.gridSettings.multiSelect=!0,m.gridSettings.onRegisterApi=function(e){m.gridApi=e,m.gridApi.selection.on.rowSelectionChanged(m._scope,function(e){m.selectedRowsCount=m.selectedRowsCount+(e.isSelected?1:-1)}),m.gridApi.selection.on.rowSelectionChangedBatch(m._scope,function(e){m.selectedRowsCount=e[0].isSelected?m.selectedGoals.length:0})}},this.filterGoals=function(){var t=angular.copy(m.filteredGoals),i=m.goals.filter(function(t){return-1==m.selectedGoalType||t.goalType==m.selectedGoalType&&(m.selectedGoalType==e.Model.GoalType.Individual||0==m.selectedGroupId||t.assignedGroupIds.some(function(e){return e==m.selectedGroupId}))});m.filteredGoals=m._filter("filter")(i,m.filterText,!1),t.length==m.filteredGoals.length&&m.filteredGoals.every(function(e){return t.some(function(t){return t.id==e.id})})||m.gridApi.selection.clearSelectedRows()},this.allGoalTypes=angular.copy(this.goalTypes.getAll().filter(function(t){return t.id!=e.Model.GoalType.Team})),this.allGoalTypes.unshift({id:-1,title:"All"}),this.allGoalTypes.forEach(function(e){e.title=e.title+" "+m.pmsSettings.goalSettings.goalAliasPlural})}return t.prototype.$onInit=function(){var t,i=this;this.employees&&this.employees.length?(t=this.selectedEmployees).push.apply(t,this.employees):this.employee&&this.selectedEmployees.push(this.employee),this._q.all([this.goalComponentService.getGoalsToAssign(),this.goalComponentService.getBusinessUnits(),this.goalComponentService.getDepartments()]).then(function(t){i.goals=t[0].map(function(t){return new e.Model.GoalViewModel(t)}),i.filteredGoals=angular.copy(i.goals),i.businessUnits=t[1].map(function(e){return new Settings.Model.BusinessUnit(e)}),i.departments=t[2].map(function(e){return new Settings.Model.Department(e)}),i.departments.unshift(new Settings.Model.Department({id:0,name:"All Departments"})),i.populateGoalGroups()}),this.initializeGoalsGrid()},t.prototype.getGroupsAssignedTo=function(t){if(t.goalType==e.Model.GoalType.Department)return this.departments.filter(function(e){return t.assignedGroupIds.indexOf(e.id)>=0}).map(function(e){return e.name}).join(", ")},t.prototype.getGoalOwners=function(e){return e.goalOwners.map(function(e){return e.displayName}).join(", ")},t.prototype.getMatchedEmployees=function(e){return this.utilService.getMatchedEmployeesExcluding(e,this.selectedEmployees.map(function(e){return e.id}))},t.prototype.employeeSelected=function(e){this.selectedEmployee=e,this.showSearch=!1,this.selectedEmployees.push(e),this.selectedEmployee=null},t.prototype.removeEmployee=function(e){this.selectedEmployees.splice(e,1)},t.prototype.removeAllEmployees=function(){var e=this;this.selectedEmployees.length>1?this.dialogs.confirm("Please Confirm","Are you sure you want to remove all selected employees?").result.then(function(){e.selectedEmployees=[]}):this.selectedEmployees=[]},t.prototype.addDepartmentEmployees=function(){var e=this;this.goalsService.getEmployeesInDepartment(this.departmentId).then(function(t){t.length?e.addEmployees(t):e.notificationService.error("There are no employees in this department.")})},t.prototype.addMyReportees=function(){var e=this;this.myTeamService.getTeamMembers().then(function(t){t.length&&e.addEmployees(t)})},t.prototype.addEmployees=function(e){var t=this;e.forEach(function(e){t.selectedEmployees.map(function(e){return e.id}).indexOf(e.id)<0&&t.selectedEmployees.push(e)})},t.prototype.assignGoals=function(){var t=this;if(this.submitted=!0,this.selectedEmployees.length&&this.selectedRowsCount){this.selectedGoals=this.gridApi.selection.getSelectedRows();var i=[];this.selectedGoals.forEach(function(n){t.selectedEmployees.forEach(function(o){t.goals.filter(function(e){return e.id==n.id})[0].goalOwners.every(function(e){return e.id!=o.id})&&(i.push(new e.Model.GoalEmployeeAssignment({goalId:n.id,employeeId:o.id})),n.goalOwners.push(o))})}),i.length?this.goalComponentService.assignGoalsToEmployees(i).then(function(e){t.notificationService.success("All the selected "+t.pmsSettings.goalSettings.goalAliasPlural+" have been assigned to the selected employees successfully"),t.modalInstance.close(t.selectedGoals)},function(e){t.notificationService.error(e.data.message)}):this.notificationService.information("All the selected "+this.pmsSettings.goalSettings.goalAliasPlural+" are already assigned to all the selected employees.")}},t.prototype.closeModal=function(){var e=this;this.dialogs.confirm("Please Confirm","Are you sure you want to cancel assignment of "+this.pmsSettings.goalSettings.goalAliasPlural+"?").result.then(function(){e.modalInstance.dismiss()})},t.$inject=["$q","$scope","$filter","AppSettings","PMSSettings","dialogs","GoalType","Utils","NotificationService","PMSService","PMSGoalsService","MyTeamServices"],t}();t.AssignEmployeeGoalsController=c;var p=function(){function t(t,i,n,o){this.pmsSettings=t,this.goalLogItemType=i,this.goalTrackingStatuses=n,this.goalMetricTypes=o,this.goalCheckInItemTypes=e.Model.GoalCheckInItemType}return t.prototype.$onInit=function(){var t=this;this.goal&&this.goal.id?this.goalCopy=new e.Model.GoalViewModel({}):this.goalComponentService.getGoal(this.goalId).then(function(i){t.goal=new e.Model.GoalViewModel(i),t.goalCopy=new e.Model.GoalViewModel(t.goal)})},t.prototype.isCheckBox=function(t){return t.metricType==e.Model.GoalMetricType.Checkbox},t.prototype.isFinished=function(t){return t.metricType==e.Model.GoalMetricType.Checkbox&&100==t.metadata.newValue},t.prototype.getGoalItem=function(t){var i="this "+this.pmsSettings.goalSettings.goalAlias;return t.logSource==e.Model.GoalLogSource.KeyResult&&(i="the "+this.pmsSettings.goalSettings.keyResultAlias+" <b>"+t.childGoalName+"</b>"),t.logSource==e.Model.GoalLogSource.ChildGoal&&(i+=" via the "+this.pmsSettings.goalSettings.goalAlias+" <b>"+t.childGoalName+"</b>"),i},t.prototype.getLogItemMetricUnit=function(t){return t.logSource!=e.Model.GoalLogSource.Goal||t.metricType==e.Model.GoalMetricType.Percentage?this.goalMetricTypes.getById(e.Model.GoalMetricType.Percentage).symbol:t.metricUnitName},t.$inject=["PMSSettings","GoalLogItemType","GoalTrackingStatus","GoalMetricType"],t}();t.GoalLogController=p,angular.module("PMS").controller("PerformanceGoalsController",e.Controllers.PerformanceGoalsController).controller("GoalLibraryController",e.Controllers.GoalLibraryController).controller("AddGoalController",e.Controllers.AddGoalController).controller("GoalDetailsController",e.Controllers.GoalDetailsController).component("employeeGoals",{controller:r,controllerAs:"ctrl",templateUrl:"/employeegoals",bindings:{goals:"<",employee:"<",isFullPageView:"<",isEmployeeGoalsView:"<",employees:"<",goalComponentService:"<",enableGoalImport:"<"}}).component("goalDetails",{controller:l,controllerAs:"ctrl",templateUrl:"/employeegoals/goaldetails",bindings:{isMyGoalPage:"<",isMyTeamGoalsPage:"<",canCloneGoal:"<",goalComponentService:"<",previousState:"<",previousStateParams:"<"}}).component("addEmployeeGoal",{controller:a,controllerAs:"ctrl",templateUrl:"/employeegoals/addgoal",bindings:{goalToEdit:"<",employee:"<",modalInstance:"<",isEmployeeGoalPage:"<",isSelfGoalPage:"<",goalComponentService:"<"}}).component("assignEmployeeGoal",{controller:c,controllerAs:"ctrl",templateUrl:"/employeegoals/assigngoals",bindings:{employee:"<",employees:"<",modalInstance:"<",goalComponentService:"<"}}).component("goalCheckIn",{controller:s,controllerAs:"ctrl",templateUrl:"/employeegoals/goalcheckin",bindings:{goal:"<",modalInstance:"<",goalComponentService:"<"}}).component("goalLog",{controller:p,controllerAs:"ctrl",templateUrl:"/employeegoals/goallog",bindings:{goalId:"<",goal:"<",goalComponentService:"<"}})}(e.Controllers||(e.Controllers={}))}(PMS||(PMS={})),function(e){!function(t){var i=function(){function t(e,t,i,n,o,r,a,s){var l=this;this.scope=e,this.state=t,this.stateParams=i,this.modalInstance=n,this.appSettings=o,this.filter=r,this.goalTypes=a,this.goalComponentService=s,this.goals=[],this.submitted=!1,this.setGridApi=function(e){l.gridApi=e,l.gridApi.selection.on.rowSelectionChanged(l.scope,function(e){l.selectedGoal=e.entity})},this.goalComponentService.getGoalTemplates().then(function(e){l.goals=e,l.initializeGrid()})}return t.prototype.isGoalSelected=function(){return!!this.gridApi&&0!=this.gridApi.selection.getSelectedCount()},t.prototype.initializeGrid=function(){this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.columnDefs=[{name:"name",displayName:"Goal Title",headerTooltip:!0},{name:"goalType",displayName:"Goal Type",cellTemplate:'<div class= "ui-grid-cell-contents" ><span>{{grid.appScope.ctrl.goalTypes.getById(row.entity.goalType).title}}</span></div>'}],this.gridSettings.multiSelect=!1,this.gridSettings.data=this.goals,this.gridSettings.onRegisterApi=this.setGridApi},t.prototype.copyGoal=function(){var t=this;this.submitted=!0,0!=this.gridApi.selection.getSelectedCount()&&this.goalComponentService.getGoalTemplateViewModel(this.selectedGoal.id).then(function(i){t.goal=new e.Model.GoalViewModel(i),t.modalInstance.close(t.goal)})},t.prototype.filterGrid=function(){this.gridSettings.data=this.filter("filter")(this.goals,this.filterText,!1)},t.$inject=["$scope","$state","$stateParams","$uibModalInstance","AppSettings","$filter","GoalType","goalComponentService"],t}();t.GoalTemplatesViewController=i;var n=function(){function t(t,i,n,o,r,a,s){var l=this;this.scope=t,this.filter=i,this.modal=n,this.appSettings=o,this.goalTemplateService=r,this.goalTypes=a,this.notificationService=s,this.selectedKeyResults=[],this.goalTemplateService.getAllGoalTemplates().then(function(t){l.goalTemplates=t.map(function(t){return new e.Model.GoalTemplate(t)}),l.initTemplateGridSettings()})}return t.prototype.initTemplateGridSettings=function(){this.templateGridSettings=angular.copy(this.appSettings.gridSettings),this.templateGridSettings.columnDefs=[{name:"name",displayName:"Name",cellTemplate:'<div class="ui-grid-cell-contents"><p class="clear-bottom">{{row.entity.name}}</p><p class="clear-bottom font-smaller text-muted">{{row.entity.description}}</p></div>'},{name:"goalType",displayName:"Goal Type",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.ctrl.goalTypes.getById(row.entity.goalType).title}}</span></div>'},{name:"keyResults",displayName:"Key Results",cellTemplate:'<div class = "ui-grid-cell-contents"><a data-ng-click="grid.appScope.ctrl.showKeyResults(row.entity)" >{{row.entity.keyResults.length}}</a></div>'},{name:"actions",displayName:"Actions",cellTemplate:'<div class = "ui-grid-cell-contents"><a data-ui-sref= "performance.goals.templates.edittemplate({id: row.entity.id})">Edit</a></div>'}],this.templateGridSettings.data=this.goalTemplates},t.prototype.initKeyResultGridSettings=function(){this.keyresultGridSettings=angular.copy(this.appSettings.gridSettings),this.keyresultGridSettings.columnDefs=[{name:"name",displayName:"Key Result Name"}],this.keyresultGridSettings.data=this.selectedKeyResults},t.prototype.showKeyResults=function(e){this.selectedKeyResults=e.keyResults,this.selectedGoalTemplate=e,this.initKeyResultGridSettings(),this.modal.open({templateUrl:"keyResultsModal",scope:this.scope})},t.$inject=["$scope","$filter","$uibModal","AppSettings","PMSGoalTemplateService","GoalType","NotificationService"],t}();t.GoalTemplatesController=n;var o=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d){var m=this;this.scope=t,this.state=i,this.stateParams=n,this.q=o,this.pmsSettings=r,this.goalsService=a,this.goalTemplateService=s,this.goalTypes=l,this.keyResultRequirementTypes=c,this.goalMetricTypes=p,this.notificationService=u,this.lookupService=d,this.submitted=!1,this.addDescription=!1,this.categories=[],this.metricUnits=[],this.getGoalCategories(),this.getMetricUnits(),this.stateParams.id?this.goalTemplateService.getGoalTemplate(this.stateParams.id).then(function(t){m.goalTemplate=new e.Model.GoalTemplate(t),m.goalTemplate.keyResults.length>0?m.goalTemplate.hasKeyResults=!0:m.goalTemplate.hasKeyResults=!1}):(this.goalTemplate=new e.Model.GoalTemplate({}),this.goalTemplate.hasKeyResults=this.pmsSettings.goalSettings.keyResultRequirementType!=this.keyResultRequirementTypes.Optional.id&&this.pmsSettings.goalSettings.keyResultRequirementType!=this.keyResultRequirementTypes.NotRequired.id,this.setKeyResults())}return t.prototype.setKeyResults=function(){this.goalTemplate.hasKeyResults?(this.goalTemplate.keyResults.push(new e.Model.GoalTemplate({startValue:0,targetValue:100})),this.goalTemplate.keyResults.push(new e.Model.GoalTemplate({startValue:0,targetValue:100})),this.goalTemplate.keyResults.push(new e.Model.GoalTemplate({startValue:0,targetValue:100}))):this.goalTemplate.keyResults=[]},t.prototype.getGoalCategories=function(){var e=this;this.goalsService.getGoalCategories().then(function(t){e.categories=t})},t.prototype.getMetricUnits=function(){var e=this;this.lookupService.getMetricUnits().then(function(t){t&&t.length&&(e.metricUnits=t.map(function(e){return new Settings.Model.MetricUnit(e)}))})},t.prototype.saveGoalTemplate=function(){var e=this;this.submitted=!0,this.form.goalTemplate.$valid&&(this.goalTemplate.id?this.goalTemplateService.updateGoalTemplate(this.goalTemplate).then(function(t){t.id?(e.notificationService.success(e.pmsSettings.goalSettings.goalAlias+"Template has been updated successfully"),e.dismissModal()):e.notificationService.error("An error occured while updating the"+e.pmsSettings.goalSettings.goalAlias+"Template")},function(t){e.notificationService.error("An error occured while updating the"+e.pmsSettings.goalSettings.goalAlias+"Template")}):this.goalTemplateService.saveGoalTemplate(this.goalTemplate).then(function(t){e.notificationService.success(e.pmsSettings.goalSettings.goalAlias+"Template has been added successfully"),e.dismissModal()},function(t){e.notificationService.error("An error occured while saving the"+e.pmsSettings.goalSettings.goalAlias+"Template")}))},t.prototype.isTemplateNameExist=function(e){var t=this.q.defer();return this.goalTemplateService.doesGoalTemplateNameExist(e).then(function(e){e.isNameExist?t.resolve(!1):t.resolve(!0)}),t.promise},t.prototype.dismissModal=function(){this.state.go("performance.goals.templates")},t.$inject=["$scope","$state","$stateParams","$q","PMSSettings","PMSGoalsService","PMSGoalTemplateService","GoalType","KeyResultRequirementType","GoalMetricType","NotificationService","LookupService"],t}();t.AddGoalTemplateController=o,angular.module("PMS").controller("GoalTemplatesViewController",e.Controllers.GoalTemplatesViewController).controller("GoalTemplatesController",e.Controllers.GoalTemplatesController).controller("AddGoalTemplateController",e.Controllers.AddGoalTemplateController)}(e.Controllers||(e.Controllers={}))}(PMS||(PMS={})),function(e){!function(e){var t=function(){function e(e){var t=this;this.resource=e,this.pmsGoalTemplates=this.resource("/api/pms/goals/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}}),this.getGoalTemplate=function(e){return t.pmsGoalTemplates.get({action:"goaltemplate",id:e}).$promise},this.doesGoalTemplateNameExist=function(e){return t.pmsGoalTemplates.get({action:"doesgoaltemplatenameexist",name:e}).$promise}}return e.prototype.getAllGoalTemplates=function(){return this.pmsGoalTemplates.query({action:"alltemplates"}).$promise},e.prototype.saveGoalTemplate=function(e){return this.pmsGoalTemplates.save({action:"goaltemplate"},e).$promise},e.prototype.updateGoalTemplate=function(e){return this.pmsGoalTemplates.update({action:"goaltemplate",id:e.id},e).$promise},e.$inject=["$resource"],e}();e.PMSGoalTemplateService=t,angular.module("PMS").service("PMSGoalTemplateService",t)}(e.Services||(e.Services={}))}(PMS||(PMS={})),function(e){!function(t){var i=function(){function t(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y){var h=this;this._timeout=e,this._filter=t,this._scope=i,this._state=n,this._modal=o,this.pmsSettings=r,this.appSettings=a,this.goalTypes=s,this.goalMetricTypes=l,this.keyResultRequirementType=c,this.priorities=p,this.lookupService=u,this.dialogs=d,this.notificationService=m,this._q=y,this.steps=[],this.currentStepIndex=0,this.metricUnits=[],this.departments=[],this.locations=[],this.selectedDepartments=[],this.selectedLocations=[],this.precisionFactor=100,this.initializeGoalsGrid=function(){h.gridSettings=angular.copy(h.appSettings.gridSettings),h.gridSettings.columnDefs=[{field:"displayName",displayName:"Employee"},{field:"jobTitle",displayName:"Job Title"},{field:"departmentName",displayName:"Department"},{field:"locationName",displayName:"location"}],h.gridSettings.data="ctrl.filteredEmployees",h.gridSettings.multiSelect=!0,h.gridSettings.onRegisterApi=h.setGridApi},this.setGridApi=function(e){h.employeeSelectionGridApi=e,h.employeeSelectionGridApi.selection.on.rowSelectionChanged(h._scope,function(t){h.employeeSelectionGridApi=e}),h.employeeSelectionGridApi.selection.on.rowSelectionChangedBatch(h._scope,function(t){h.employeeSelectionGridApi=e})},this.goToPreviousStep=function(){h.currentStepIndex>0&&(h.currentStepIndex=h.currentStepIndex-1,h.currentStep=h.steps[h.currentStepIndex])},this.goToNextStep=function(){h.submitted=!0,h.steps[h.currentStepIndex].valid=h.validateStep(h.currentStepIndex),h.steps[h.currentStepIndex].valid&&h.currentStepIndex<h.steps.length&&(h.currentStepIndex=h.currentStepIndex+1,h.currentStep=h.steps[h.currentStepIndex],h.submitted=!1,2==h.currentStep.index&&h.resetFilters())},this.filterEmployeesBasedOnFilters=function(){h.filteredEmployees=h.employees.filter(function(e){return(0==h.selectedLocations.length||h.selectedLocations.some(function(t){return t.id==e.locationId}))&&(0==h.selectedDepartments.length||h.selectedDepartments.some(function(t){return t.id==e.departmentId}))}),h.filteredEmployees=h._filter("filter")(h.filteredEmployees,h.filterText,!1),h.employeeSelectionGridApi&&(h.employeeSelectionGridApi.selection.getSelectedRows().length==h.gridSettings.data.length?h.employeeSelectionGridApi.grid.selection.selectAll=!0:h.employeeSelectionGridApi.grid.selection.selectAll=!1,h.employeeSelectionGridApi.selection.clearSelectedRows())},this.validateStep=function(e){switch(e){case 0:return h.goalDetailsForm.goalDetails.$valid&&(!h.goalCloneModel.hasKeyResults||h.goalCloneModel.keyResults.length>0)&&h.areWeightagesValid&&h.areGoalMetricsValid;case 1:return h.employeeSelectionGridApi.selection.getSelectedRows().length>1}},this.navigateTo=function(e){h.steps[e].valid&&(h.currentStepIndex=e,h.currentStep=h.steps[e],2==h.currentStep.index&&h.resetFilters())},this.resetKeyResultWeights=function(){h.goalCloneModel.areWeightagesEnabled&&h.goalCloneModel.keyResults.forEach(function(e,t){e.weightage=null}),h.setKeyResultWeights()},this.setKeyResultWeights=function(){h.goalCloneModel.areWeightagesEnabled||h.goalCloneModel.keyResults.forEach(function(e){e.weightage=100/h.goalCloneModel.keyResults.length})},this.steps=[new SharedModel.Step(1,this.pmsSettings.goalSettings.goalAlias+" Details","goalDetails","goalDetails",!1,null,"Configure the "+this.pmsSettings.goalSettings.goalAlias+" that you want to clone"),new SharedModel.Step(2,"Select Employees","employeeSelection","employeeSelection",!1,null,"Select the employees for whom the "+this.pmsSettings.goalSettings.goalAlias+" is supposed to be cloned")],this.currentStep=this.steps[this.currentStepIndex],this.modalInstance=this._modal.open({scope:this._scope,templateUrl:"/employeegoals/goalclone",windowClass:"full-screen-modal employee-exit-modal dark-modal wizard-head action-content performance-commons",keyboard:!1,backdrop:!1}),this.initializeGoalsGrid(),this.lookupService.getMetricUnits().then(function(e){h.metricUnits=e})}return Object.defineProperty(t.prototype,"useWeights",{get:function(){return this.goalCloneModel.areWeightagesEnabled},set:function(e){var t=this;e?(this.goalCloneModel.areWeightagesEnabled=e,this.resetKeyResultWeights()):this.goalCloneModel.keyResults.some(function(e){return!!e.weightage})?this.dialogs.confirm("Please Confirm","Any weights you have given to the "+this.pmsSettings.goalSettings.keyResultAliasPlural+" will be lost. Are you sure you want to continue?").result.then(function(){t.goalCloneModel.areWeightagesEnabled=e,t.resetKeyResultWeights()}):(this.goalCloneModel.areWeightagesEnabled=e,this.resetKeyResultWeights())},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"areWeightagesValid",{get:function(){if(!this.goalCloneModel.hasKeyResults)return!0;if(this.goalCloneModel.areWeightagesEnabled&&!this.goalCloneModel.keyResults.every(function(e){return/^[0]*[\d]{1,2}(.[\d][\d]?)?$/.test(e.weightage)}))return!1;return 100==Math.round(this.goalCloneModel.keyResults.map(function(e){return parseFloat(e.weightage)}).reduce(function(e,t){return e+t})*this.precisionFactor)/this.precisionFactor},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"areAllWeightagesGiven",{get:function(){return!this.goalCloneModel.areWeightagesEnabled||this.goalCloneModel.keyResults.every(function(e){return!!e.weightage})&&this.goalCloneModel.keyResults.every(function(e){return/^[0]*[\d]{1,2}(.[\d][\d]?)?$/.test(e.weightage)})},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"areGoalMetricsValid",{get:function(){return this.goalCloneModel.hasKeyResults?this.goalCloneModel.keyResults.every(function(t){return t.metricType==e.Model.GoalMetricType.Checkbox||null!=t.targetValue&&t.targetValue!=(t.startValue||0)}):this.goalCloneModel.metricType==e.Model.GoalMetricType.Checkbox||null!=this.goalCloneModel.targetValue&&this.goalCloneModel.targetValue!=(this.goalCloneModel.startValue||0)},enumerable:!0,configurable:!0}),t.prototype.$onInit=function(){var e=this;this._q.all([this.lookupService.getDepartments(),this.lookupService.getLocations()]).then(function(t){e.departments=t[0],e.locations=t[1]}),this.getEmployeesBasicInfo()},t.prototype.$onChanges=function(){this.goalCloneModel=new e.Model.GoalCloneRequest(this.goal||{}),this.goalCloneModel.startDate=null,this.goalCloneModel.endDate=null,this.pmsSettings.goalSettings.keyResultRequirementType==e.Model.KeyResultRequirementType.NotRequired?this.goalCloneModel.hasKeyResults=!1:this.goalCloneModel.hasKeyResults=this.goal&&this.goal.hasKeyResults||this.pmsSettings.goalSettings.keyResultRequirementType==e.Model.KeyResultRequirementType.Required,this.setKeyResultWeights()},t.prototype.getEmployeesBasicInfo=function(){var e=this;this.goalComponentService.getEmployeesBasicInfo().then(function(t){e.employees=t,e.filteredEmployees=e.employees})},t.prototype.onSelectDepartment=function(){this.selectedDepartments.push(this.department);var e=this.departments.map(function(e){return e.id}).indexOf(this.department.id);this.departments.splice(e,1),this.filterEmployeesBasedOnFilters(),this.department=null},t.prototype.onSelectLocation=function(){this.selectedLocations.push(this.location);var e=this.locations.map(function(e){return e.id}).indexOf(this.location.id);this.locations.splice(e,1),this.filterEmployeesBasedOnFilters(),this.location=null},t.prototype.removeDepartment=function(e){var t=this.selectedDepartments.map(function(e){return e.id}).indexOf(e.id);this.selectedDepartments.splice(t,1),this.departments.push(e),this.filterEmployeesBasedOnFilters()},t.prototype.removeLocation=function(e){var t=this.selectedLocations.map(function(e){return e.id}).indexOf(e.id);this.selectedLocations.splice(t,1),this.locations.push(e),this.filterEmployeesBasedOnFilters()},t.prototype.resetFilters=function(){this.locations=this.locations.concat(this.selectedLocations),this.departments=this.departments.concat(this.selectedDepartments),this.selectedDepartments=[],this.selectedLocations=[],this.filterEmployeesBasedOnFilters()},t.prototype.dismissModal=function(){this._state.go("^")},t.prototype.resetGoalCloneModel=function(t){return t.employeeIds=this.employeeSelectionGridApi.selection.getSelectedRows().map(function(e){return e.id}),t.id=null,t.startDate=t.startDate.dateOnlyString(),t.endDate=t.endDate.dateOnlyString(),(t.hasKeyResults||t.metricType==e.Model.GoalMetricType.Checkbox)&&(t.metricUnitId=null,t.startValue=t.actualValue=0,t.targetValue=100,t.isDecreasingGoal=!1),t.hasKeyResults?(t.metricType=e.Model.GoalMetricType.Percentage,t.keyResults.forEach(function(t){(!t.id||!t.isDecreasingGoal&&t.actualValue<t.startValue||t.isDecreasingGoal&&t.actualValue>t.startValue)&&(t.actualValue=t.startValue),t.metricType==e.Model.GoalMetricType.Checkbox&&(t.startValue=t.actualValue=0,t.targetValue=100,t.isDecreasingGoal=!1)})):(t.keyResults=[],t.startValue=t.startValue||0,(!t.isDecreasingGoal&&t.actualValue<t.startValue||t.isDecreasingGoal&&t.actualValue>t.startValue)&&(t.actualValue=t.startValue)),t},t.prototype.cloneGoals=function(){var e=this;this.employeeSelectionGridApi.selection.getSelectedRows().length>0?(this.goalCloneModel=this.resetGoalCloneModel(this.goalCloneModel),this.goalComponentService.cloneGoals(this.goal.id,this.goalCloneModel).then(function(t){e.notificationService.success("The "+e.pmsSettings.goalSettings.goalAlias+" has been cloned successfully for "+e.employeeSelectionGridApi.selection.getSelectedRows().length+" employees"),e.dismissModal()})):this.notificationService.information("Please select at least one employee")},t.$inject=["$timeout","$filter","$scope","$state","$uibModal","PMSSettings","AppSettings","GoalType","GoalMetricType","KeyResultRequirementType","GoalPriority","LookupService","dialogs","NotificationService","$q"],t}();t.GoalCloneController=i,angular.module("PMS").component("goalClone",{controller:i,controllerAs:"ctrl",templateUrl:"/employeegoals/goalclone",bindings:{goal:"<",goalComponentService:"<"}})}(e.Controllers||(e.Controllers={}))}(PMS||(PMS={})),function(e){!function(e){var t=function(){function e(e,t,i,n,o,r,a){var s=this;this._scope=e,this._filter=t,this.appSettings=i,this.pmsSettings=n,this.goalTypes=o,this.dialogs=r,this.notificationService=a,this.selectedRowsCount=0,this.intializeGrid=function(){s.gridSettings=angular.copy(s.appSettings.gridSettings),s.gridSettings.rowHeight=65,s.gridSettings.columnDefs=[{name:"name",displayName:s.pmsSettings.goalSettings.goalAlias+" Name",cellTemplate:'<div class="ui-grid-cell-contents"><a data-ui-sref="^.goal({ goalId: row.entity.id })" title="{{grid.getCellValue(row,col)}}"><span title="{{row.entity.name}}">{{row.entity.name}}</span></a><br/><span title="{{row.entity.description}}">{{row.entity.description}}</span></div>',headerTooltip:!0},{name:"keyResultCount",displayName:s.pmsSettings.goalSettings.keyResultAlias+" Count",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.keyResultCount">{{row.entity.keyResultCount}}</span><span data-ng-if="!row.entity.keyResultCount">No {{grid.appScope.ctrl.pmsSettings.goalSettings.keyResultAliasPlural}}</span></div>',headerTooltip:!0},{name:"goalType",displayName:s.pmsSettings.goalSettings.goalAlias+" Type",cellTemplate:'<div class="ui-grid-cell-contents"><span> {{grid.appScope.ctrl.goalTypes.getById(row.entity.goalType).title}} {{grid.appScope.ctrl.pmsSettings.goalSettings.goalAlias}}</span></div>',cellClass:"ui-grid-cell",headerTooltip:!0},{name:"startDate",displayName:"Start Date",cellTemplate:'<div class="ui-grid-cell-contents"><span> {{row.entity.startDate | date: "dd MMM, yyyy"}}</span></div>',cellClass:"ui-grid-cell",headerTooltip:!0},{name:"endDate",displayName:"Due Date",cellTemplate:'<div class="ui-grid-cell-contents"><span> {{row.entity.endDate | date: "dd MMM, yyyy"}}</span></div>',cellClass:"ui-grid-cell",headerTooltip:!0},{name:"goalOwners",displayName:s.pmsSettings.goalSettings.goalAlias+" Owners",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-repeat="owner in row.entity.goalOwners"><a target="_blank" href="/old/#/employee/{{owner.id}}/summary">{{owner.displayName}}</a><span data-ng-if="!$last">, </span></span></div>',headerTooltip:!0},{name:"progressPercentage",displayName:"Progress",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.progressPercentage | toFixed: "2"}}%</span></div>',headerTooltip:!0},{name:"trackingStatus",displayName:"Status",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.trackingStatus">{{grid.appScope.ctrl.pmsSettings.getTrackingLabel(row.entity.trackingStatus)}}</span><span data-ng-if="!row.entity.trackingStatus">New</span></div>',headerTooltip:!0},{name:"isCompleted",displayName:"Is Closed",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="row.entity.isCompleted">Yes</span><span data-ng-if="!row.entity.isCompleted">No</span></div>',headerTooltip:!0}],s.gridSettings.data="ctrl.filteredGoals",s.gridSettings.multiSelect=!0,s.gridSettings.showGridFooter=!0,s.gridSettings.onRegisterApi=s.setGridApi},this.setGridApi=function(e){s.gridApi=e,s.gridApi.selection.on.rowSelectionChanged(s._scope,function(e){s.selectedRowsCount=s.selectedRowsCount+(e.isSelected?1:-1),s.selectedGoals=s.gridApi.grid.rows.filter(function(e){return e.isSelected}).map(function(e){return e.entity})}),s.gridApi.selection.on.rowSelectionChangedBatch(s._scope,function(e){s.selectedRowsCount=e[0].isSelected?s.goals.length:0,s.selectedGoals=s.gridApi.grid.rows.filter(function(e){return e.isSelected}).map(function(e){return e.entity})})},this.filterGoals=function(){s.filteredGoals=s._filter("filter")(s.goals,s.filterText,!1)}}return Object.defineProperty(e.prototype,"areAllSelectedGoalsCompleted",{get:function(){return this.selectedGoals.every(function(e){return e.isCompleted})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"areAllSelectedGoalsOpen",{get:function(){return this.selectedGoals.every(function(e){return!e.isCompleted})},enumerable:!0,configurable:!0}),e.prototype.$onInit=function(){this.intializeGrid()},e.prototype.$onChanges=function(){this.filteredGoals=angular.copy(this.goals),this.gridApi&&this.gridApi.selection.clearSelectedRows()},e.prototype.closeSelectedGoals=function(){var e=this;this.selectedRowsCount>0?this.dialogs.confirm("Please Confirm","Are you sure you want to close the selected "+(this.selectedRowsCount>1?this.pmsSettings.goalSettings.goalAliasPlural:this.pmsSettings.goalSettings.goalAlias)+"?").result.then(function(){var t=e.selectedGoals.filter(function(e){return!e.isCompleted});e.goalComponentService.closeGoalsInBulk(t.map(function(e){return e.id})).then(function(i){e.notificationService.success(t.length+" "+e.pmsSettings.goalSettings.goalAlias+" "+(t.length>1?"have":"has")+" been closed successfully"),e.updateSelected(t,!0)},function(t){t.data&&t.data.message&&e.dialogs.notify("Application notification",t.data.message,{keyboard:!1,backdrop:"static"})})}):this.dialogs.notify("Application notification","Please select at least one "+this.pmsSettings.goalSettings.goalAlias,{keyboard:!1,backdrop:"static"})},e.prototype.reopenSelectedGoals=function(){var e=this;this.selectedRowsCount>0?this.dialogs.confirm("Please Confirm","Are you sure you want to reopen the selected "+(this.selectedRowsCount>1?this.pmsSettings.goalSettings.goalAliasPlural:this.pmsSettings.goalSettings.goalAlias)+"?").result.then(function(){var t=e.selectedGoals.filter(function(e){return e.isCompleted});e.goalComponentService.reopenGoalsInBulk(t.map(function(e){return e.id})).then(function(i){e.notificationService.success(t.length+" "+e.pmsSettings.goalSettings.goalAlias+" "+(t.length>1?"have":"has")+" been reopened successfully"),e.updateSelected(t,!1)},function(t){t.data&&t.data.message&&e.dialogs.notify("Application notification",t.data.message,{keyboard:!1,backdrop:"static"})})}):this.dialogs.notify("Application notification","Please select at least one "+this.pmsSettings.goalSettings.goalAlias,{keyboard:!1,backdrop:"static"})},e.prototype.updateSelected=function(e,t){var i=this;void 0===t&&(t=!1),e.forEach(function(e){i.gridApi.selection.unSelectRow(e),e.isCompleted=t})},e.$inject=["$scope","$filter","AppSettings","PMSSettings","GoalType","dialogs","NotificationService"],e}();e.GoalsListComponentController=t,angular.module("PMS").component("goalsList",{controller:t,controllerAs:"ctrl",templateUrl:"/employeegoals/goalslist",bindings:{goals:"<",goalComponentService:"<",enableSearch:"<"}})}(e.Controllers||(e.Controllers={}))}(PMS||(PMS={})),function(e){!function(t){var i=function(){function e(e,t,i,n,o,r,a,s,l,c,p){var u=this;this._scope=e,this._q=t,this._modal=i,this.appContext=n,this.jobFunctionService=o,this.skillService=r,this.notificationService=a,this.dialogs=s,this._filter=l,this.appSettings=c,this.pmsSettingsView=p,this.jobFunctions=[],this.modelOptions={updateOn:"blur"},this.stats={},this.isAdmin=!1,this.math=Math,this.pageIndex=0,this.employeesWithJobFunctions={},this.filterDepartments=function(){u.departments=[u.departmentsCopy.find(function(e){return e.id==u.selectedDepartment.id})],u.pageIndex=0},this.resetDeptFilter=function(){u.departments=u.departmentsCopy,u.selectedDepartment=null,u.filterText=""},this.groupJobFunctions=function(){u.jobFunctions.forEach(function(e){var t=u.jobFunctions.filter(function(t){return t.id==e.id}).map(function(e){return e.departmentId});e.departments=u.departments.filter(function(e){return-1!=t.indexOf(e.id)}).map(function(e){return e.name})}),u.departments.forEach(function(e){var t=u.businessUnits.find(function(t){return t.id==e.parentGroupId});if(t)e.businessUnitId=t.id;else{var i=u.departments.find(function(t){return t.id==e.parentGroupId});i&&(e.businessUnitId=i.parentGroupId)}var n=u.businessUnits.find(function(t){return t.id==e.businessUnitId});e.businessUnit=n?n.name:"",e.owners=u.departmentHeads.filter(function(t){return t.groupId==e.id});var o=u.jobFunctionOwners.filter(function(t){return t.departmentId==e.id});e.owners=e.owners.concat(o),e.jobFunctions=u.jobFunctions.filter(function(t){return t.departmentId==e.id})})},this.getBusinessUnitName=function(e){var t=u.businessUnits.find(function(t){return t.id==e});return t?t.name:""},this.showJobFunctionEmployees=function(e){u.selectedJobFunction=angular.copy(e),u.jobFunctionEmployees=u.stats.jobFunctionEmployees.filter(function(t){return t.jobFunctionId==e.id}),u._modal.open({templateUrl:"job-function-employees-template",windowClass:"",backdrop:!0,keyboard:!1,scope:u._scope}),u.jobFunctionEmployees.length>0&&(u.jobFunctionEmployeesGridOptions.data="ctrl.jobFunctionEmployees")},this.isAdmin=this.appContext.isGlobalAdmin||this.appContext.isHRManager||this.appContext.isPMSAdmin,this._q.all([this.jobFunctionService.getBusinessUnits(),this.jobFunctionService.getDepartments(),this.jobFunctionService.getAllJobFunctions(),this.jobFunctionService.getAllDepartmentHeads(),this.jobFunctionService.getJobFunctionOwners()]).then(function(e){u.businessUnits=e[0],u.departments=e[1],u.departmentsCopy=u.departments,u.jobFunctions=e[2],u.departmentHeads=e[3],u.jobFunctionOwners=e[4],u.filteredBusinessUnits=u.businessUnits,u.groupJobFunctions(),u.updateSetupJobFunctionsCount()}),this.jobFunctionService.getJobFunctionStats().then(function(e){u.stats=e,u.employeesWithJobFunctions=u._filter("groupBy")(u.stats.jobFunctionEmployees,"employeeId")}),this.initJobFunctionEmployeesGridOptions()}return Object.defineProperty(e.prototype,"jobFunctionEmployeeCount",{get:function(){return Object.keys(this.employeesWithJobFunctions).length},enumerable:!0,configurable:!0}),e.prototype.updateSetupJobFunctionsCount=function(){this.pmsSettingsView&&(this.pmsSettingsView.jobFunctionsCount=this.jobFunctions.length)},e.prototype.initJobFunctionEmployeesGridOptions=function(){this.jobFunctionEmployeesGridOptions=angular.copy(this.appSettings.gridSettings),this.jobFunctionEmployeesGridOptions.columnDefs=[{field:"displayName",displayName:"Employee Name"},{field:"jobTitle",displayName:"Job Title"},{field:"departmentName",displayName:"Department"}]},e.$inject=["$scope","$q","$uibModal","AppContext","JobFunctionService","SkillService","NotificationService","dialogs","$filter","AppSettings"],e}();t.JobFunctionsController=i;var n=function(){function e(e,t,i,n,o,r,a){var s=this;this._scope=e,this._q=t,this._filter=i,this.appContext=n,this.jobFunctionService=o,this.notificationService=r,this.dialogs=a,this.isAdmin=!1,this.showBulkEdit=!1,this.submitted=!1,this.atleastOneJobFunctionEdited=!1,this.bindEmployeeJobFunctions=function(){s.employees.forEach(function(e){var t=s.employeeJobFunctions.filter(function(t){return t.employeeId==e.id});e.jobFunctions=s._filter("orderBy")(t,"weightage",!0),e.hasJobFunctions=t.length>0,e.canEdit=-1==s.employeesInReview.indexOf(e.id)}),s.departments.find(function(e){var t=s.businessUnits.find(function(t){return t.id==e.parentGroupId});if(t)e.businessUnitId=t.id;else{var i=s.departments.find(function(t){return t.id==e.parentGroupId});i&&(e.businessUnitId=i.parentGroupId)}var n=s.businessUnits.find(function(t){return t.id==e.businessUnitId});e.businessUnit=n?n.name:"",e.owners=s.departmentHeads.filter(function(t){return t.groupId==e.id});var o=s.jobFunctionOwners.filter(function(t){return t.departmentId==e.id});e.owners=e.owners.concat(o),e.employees=s.employees.filter(function(t){return t.departmentId==e.id})}),s.departmentsCopy=angular.copy(s.departments)},this.saveEmployeeJobFunctions=function(e,t,i,n){s.form.assignJobFunction["department"+i+"employee"+n+"weightage0"].$valid&&s.form.assignJobFunction["department"+i+"employee"+n+"weightage1"].$valid?(s.jobFunctionService.saveEmployeeJobFunctions(e.jobFunctions).then(function(i){e.isUpdated=!1,e.showEdit=!1,e.hasJobFunctions=e.jobFunctions.some(function(e){return e.jobFunctionId});var n=s.departmentsCopy.map(function(e){return e.id}).indexOf(t),o=s.departmentsCopy[n].employees.map(function(e){return e.id}).indexOf(e.id);s.departmentsCopy[n].employees[o]=angular.copy(e),s.notificationService.success("Employee Job functions updated successfully.")}),s.submitted=!1):s.submitted=!0},this.bulkSaveEmployeeJobFunctions=function(){if(s.form.assignJobFunction.$valid){var e=s.departments.map(function(e){return e.employees}).reduce(function(e,t){return e.concat(t)}).filter(function(e){return e.isUpdated}).map(function(e){return e.jobFunctions}).reduce(function(e,t){return e.concat(t)});s.jobFunctionService.saveEmployeeJobFunctions(e).then(function(e){s.departments.forEach(function(e){e.employees.forEach(function(e){e.isUpdated=!1,e.showEdit=!1,e.hasJobFunctions=e.jobFunctions.some(function(e){return e.jobFunctionId})})}),s.departmentsCopy=angular.copy(s.departments),s.notificationService.success("Job functions assigned successfully."),s.showBulkEdit=!1}),s.submitted=!1}else s.notificationService.error("Please make sure job functions weightage to be positive integer and sum to be equal to 100"),s.submitted=!0},this.getJobFunction=function(e){var t=s.jobFunctions?s.jobFunctions.find(function(t){return t.id==e}):null;return t?t.name:""},this.discardChanges=function(){s.dialogs.confirm("Discard Changes","All changes made will be lost if you discard. Are you sure you want to proceed?").result.then(function(){s.departments=angular.copy(s.departmentsCopy),s.showBulkEdit=!1,s.submitted=!1})},this.enableBulkEdit=function(){s.showBulkEdit=!0},this.enableEdit=function(e){e.showEdit=!0},this.cancelEdit=function(e,t){e.showEdit=!1;var i=s.departmentsCopy.map(function(e){return e.id}).indexOf(t),n=s.departmentsCopy[i].employees.map(function(e){return e.id}).indexOf(e.id);s.departments[i].employees[n]=angular.copy(s.departmentsCopy[i].employees[n]),s.submitted=!1},this.isAdmin=this.appContext.isGlobalAdmin||this.appContext.isHRManager||this.appContext.isPMSAdmin,this._q.all([this.jobFunctionService.getEmployeeProfiles(),this.jobFunctionService.getEmployeeJobFunctions(),this.jobFunctionService.getBusinessUnits(),this.jobFunctionService.getDepartments(),this.jobFunctionService.getAllDepartmentHeads(),this.jobFunctionService.getJobFunctionOwners(),this.jobFunctionService.getEmployeesInReview()]).then(function(e){s.employees=e[0],s.employeeJobFunctions=e[1],s.businessUnits=e[2],s.departments=e[3],s.departmentHeads=e[4],s.jobFunctionOwners=e[5],s.employeesInReview=e[6],s.bindEmployeeJobFunctions()}),this.jobFunctionService.getJobFunctions().then(function(e){s.jobFunctions=e})}return e.prototype.getWeigtage=function(e,t){var i=0;return e.forEach(function(e,n){n!=t&&e.jobFunctionId&&e.jobFunctionId>0&&(i+=e.weightage)}),100-i},e.prototype.resetJobFunctionWeightages=function(e){this.atleastOneJobFunctionEdited=!0,e.isUpdated=!0,e.jobFunctions.forEach(function(e){e.jobFunctionId||(e.weightage=null,e.isManuallyUpdated=!1)}),this.setJobFunctionWeightages(e)},e.prototype.setJobFunctionWeightages=function(e){var t=e.jobFunctions.filter(function(e){return!!e.jobFunctionId}),i=t.length,n=Math.floor(100/i),o=100-i*n;e.jobFunctions.every(function(e){return!e.isManuallyUpdated})&&t.forEach(function(e,t){e.jobFunctionId&&(e.weightage=n+o*+(t==i-1))})},e.$inject=["$scope","$q","$filter","AppContext","JobFunctionService","NotificationService","dialogs"],e}();t.AssignJobFunctionsController=n;var o=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g){var v=this;this._scope=t,this._q=i,this._state=n,this._stateParams=o,this._filter=r,this._modal=a,this._modalInstance=s,this.appSettings=l,this.appContext=c,this.notificationService=p,this.jobFunctionService=u,this.skillService=d,this.skillType=m,this.DepartmentId=y,this.pmsSettings=h,this.dialogs=f,this.competencyTypes=g,this.departments=[],this.departmentsCopy=[],this.selectedDepartments=[],this.submitted=!1,this.competencies=[],this.jobFunctionCompetencies=[],this.isSaveInProgress=!1,this.loadJobGroupModel=function(){var t=[];v.jobGroupData.jobFunctionCompetencies.forEach(function(i){var n=new e.Model.JobFunctionCompetencyView(i),o=v.competencies.find(function(e){return e.id==i.skillId});null!=o&&(n.name=o.name,t.push(n))});var i=[];v.jobGroupData.jobFunctions.forEach(function(n){var o=new e.Model.JobFunction(n);o.competencies=t.filter(function(e){return e.jobFunctionId==n.id}),i.push(o)}),v.model=new e.Model.JobGroup(v.jobGroupData.jobGroup),v.model.departments=v.jobGroupData.jobGroupDepartments,v.model.jobFunctions=i,v.selectedDepartments=v.departments.filter(function(e){return-1!=v.model.departments.map(function(e){return e.id}).indexOf(e.id)}).map(function(t){return new e.Model.JobGroupDepartment(t)}),v.updateDepartments()},this.resetJobFunction=function(){v.model.hasMultipleLevels?v.model.jobFunctions.length<2&&(v.model.numberOfLevels=2,v.model.jobFunctions.push(new e.Model.JobFunction({}))):(v.model.numberOfLevels=1,v.model.jobFunctions.length>1&&(v.model.jobFunctions.splice(1,v.model.jobFunctions.length),v.model.jobFunctions[0].name=v.model.name)),v.setJobFunctionNames()},this.setJobFunctionNames=function(){v.model.hasMultipleLevels?v.model.jobFunctions.forEach(function(e,t){!e.name&&v.model.name&&(e.name=v.model.name+" "+(t+1))}):v.model.jobFunctions[0].name=angular.copy(v.model.name)},this.resetJobFunctionLevels=function(){if(v.model.jobFunctions.length<=v.model.numberOfLevels)for(var t=v.model.numberOfLevels-v.model.jobFunctions.length,i=1;i<=t;i++)v.model.jobFunctions.push(new e.Model.JobFunction({}));else v.model.jobFunctions.splice(v.model.numberOfLevels,v.model.jobFunctions.length);v.setJobFunctionNames()},this.onSelectDepartment=function(){var t=v.selectedDepartments.map(function(e){return e.id}).indexOf(v.department.id);t<0?v.selectedDepartments.push(new e.Model.JobGroupDepartment(v.department)):v.selectedDepartments[t].isDeleted=!1,v.department=null,v.updateDepartments()},this.removeDepartment=function(e){v.selectedDepartments[e].isDeleted=!0,v.updateDepartments()},this.updateDepartments=function(){var e=v.selectedDepartments.filter(function(e){return!e.isDeleted}).map(function(e){return e.id});v.departments=v.departmentsCopy.filter(function(t){return-1==e.indexOf(t.id)})},this.saveJobFunction=function(){v.submitted=!0,v.model.jobFunctions.every(function(e){return e.areWeightagesValid})&&!v.isSaveInProgress&&v.form.newJobFunction.$valid&&v.activeDepartments.length>0&&(v.isSaveInProgress=!0,v.model.departments=v.selectedDepartments,v.model.hasMultipleLevels||(v.model.jobFunctions[0].name=v.model.name),v.id?v.jobFunctionService.updateJobGroup(v.id,v.model).then(function(e){v.notificationService.success("Job function updated successfully."),v._modalInstance.close(),v.isSaveInProgress=!1},function(e){v.notificationService.success("An error occurred while updating the job function.")}):v.jobFunctionService.saveJobGroup(v.model).then(function(e){v.notificationService.success("Job function saved successfully."),v._modalInstance.close(),v.isSaveInProgress=!1},function(e){v.notificationService.success("An error occurred while saving the job function.")}))},this.addCompetency=function(e){v.selectedJobFunctionIndex=e;var t=v.model.jobFunctions[e];v.jobFunctionCompetencies=angular.copy(v.competencies),v.jobFunctionCompetencies.forEach(function(e){t.competencies.some(function(t){return t.skillId==e.id})&&(e.isSelected=!0)}),v.filterText="",v.competenciesModal=v._modal.open({templateUrl:"add-job-function-competency-template",windowClass:"",backdrop:!0,keyboard:!1,scope:v._scope})},this.saveCompetencies=function(){v.competenciesModal.close();var t=v.model.jobFunctions[v.selectedJobFunctionIndex],i=v.jobFunctionCompetencies.filter(function(e){return e.isSelected}),n=i.map(function(e){return e.id});t.competencies=t.competencies.filter(function(e){return-1!=n.indexOf(e.skillId)}),i.forEach(function(i){t.competencies.some(function(e){return i.id==e.skillId})||t.competencies.push(new e.Model.JobFunctionCompetencyView({name:i.name,skillId:i.id,skillType:v.skillType.Competency.id}))}),v.model.jobFunctions[v.selectedJobFunctionIndex]=t},this.doesJobGroupExist=function(e){var t=v._q.defer();return e&&e.length>2?v.jobFunctionService.jobFunction.get({action:"doesjobgroupexist",jobGroupName:e},function(e){t.resolve(!e.result)}):t.resolve(!0),t.promise},this.id=this._stateParams.id,this.scrollSettings=angular.copy(l.scrollSettings),this.isAdmin=this.appContext.isGlobalAdmin||this.appContext.isHRManager||this.appContext.isPMSAdmin,this.id?this._q.all([this.jobFunctionService.getDepartments(),this.skillService.getAllCompetencies(),this.jobFunctionService.getJobGroup(this.id)]).then(function(e){v.departments=e[0],v.competencies=e[1],v.jobGroupData=e[2],v.departmentsCopy=angular.copy(v.departments),v.loadJobGroupModel()}):(this.model=new e.Model.JobGroup({}),this.model.jobFunctions.push(new e.Model.JobFunction({})),this.resetJobFunction(),this._q.all([this.jobFunctionService.getDepartments(),this.skillService.getAllCompetencies()]).then(function(t){if(v.departments=t[0],v.competencies=t[1],v.departmentsCopy=angular.copy(v.departments),v.DepartmentId){var i=v.departments.find(function(e){return e.id==v.DepartmentId});i&&v.selectedDepartments.push(new e.Model.JobGroupDepartment(i))}}))}return Object.defineProperty(t.prototype,"activeDepartments",{get:function(){return this.selectedDepartments.filter(function(e){return!e.isDeleted})},enumerable:!0,configurable:!0}),t.prototype.validateWeightages=function(){var e=this;this.model.jobFunctions.forEach(function(t){if(e.model.allowCompetencyWeightages){var i=0;t.competencies.forEach(function(e){i+=e.weightage}),100!=i&&t.competencies.length>0?t.areWeightagesValid=!1:t.areWeightagesValid=!0}else t.areWeightagesValid=!0})},t.prototype.isNameExist=function(e){if(void 0!=e){var t=this._q.defer();return this.model.jobFunctions.filter(function(t){if(t.name==e)return t}).length>0?t.resolve(!1):t.resolve(!0),t.promise}},t.prototype.deleteJobGroup=function(){var e=this;this.dialogs.confirm("Please Confirm","Are you sure you want to delete this job function?").result.then(function(){e.jobFunctionService.deleteJobGroup(e.model.id).then(function(t){e._modalInstance.close(),e.notificationService.success("The job function has been deleted successfully")},function(t){500!=t.status&&t.data&&t.data.message?e.dialogs.notify("Application Notification",t.data.message,{keyboard:!1,backdrop:"static"}):e.notificationService.error("An error has occurred while deleting the job function.")})})},t.$inject=["$scope","$q","$state","$stateParams","$filter","$uibModal","$uibModalInstance","AppSettings","AppContext","NotificationService","JobFunctionService","SkillService","SkillType","DepartmentId","PMSSettings","dialogs","CompetencyType"],t}();t.AddJobFunctionController=o}(e.Controllers||(e.Controllers={}))}(PMS||(PMS={})),angular.module("PMS").controller("JobFunctionsController",PMS.Controllers.JobFunctionsController).controller("AddJobFunctionController",PMS.Controllers.AddJobFunctionController).controller("AssignJobFunctionsController",PMS.Controllers.AssignJobFunctionsController);__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(t){var i=function(){function e(e,t,i,n){this._scope=e,this._state=t,this.notificationService=i,this.appSettings=n}return e.$inject=["$scope","$state","NotificationService","AppSettings"],e}();t.PerformanceSetupController=i;var n=function(){function e(e,t){this._scope=e,this.appSettings=t,this.niceScrollOptions=angular.copy(t.scrollSettings)}return e.$inject=["$scope","AppSettings"],e}();t.AboutJobFunctionsController=n;var o=function(){function e(e,t,i,n,o,r,a,s,l,c){this._scope=e,this._modal=t,this.location=i,this._state=n,this.performanceSetupService=o,this.notificationService=r,this.appSettings=a,this.window=s,this.reviewObjectives=l,this.performanceSettings=c,this.stepCount=1,this.setStepCount()}return e.prototype.setStepCount=function(){this.performanceSettings.reviewSettings.isFeatureEnabled||(this.stepCount=0)},e.prototype.completeSetup=function(){this._modal.open({templateUrl:"completeSetupContainer",scope:this._scope,windowClass:"structure-compare small-btn exit-process-container"})},e.prototype.isConfirmationTextValid=function(){return!(!this.confirmationText||"yes"!=this.confirmationText.toLowerCase())},e.prototype.goLive=function(){var e=this;this.isConfirmationTextValid()&&this.performanceSetupService.updatePerformanceSettings().then(function(t){e._state.go("performance",{},{reload:!0}),e.notificationService.success("You are now live.")},function(t){e.notificationService.error("error in completing setup")})},e.$inject=["$scope","$uibModal","$location","$state","PerformanceSetupService","NotificationService","AppSettings","$window","ReviewObjectives","PMSSettingsView"],e}();t.SetupWizardController=o;var r=function(){function e(e,t,i,n,o,r){this._scope=e,this._state=t,this.modalInstance=i,this.notificationService=n,this.performanceSetupService=o,this.pmsSettingsView=r,this.feedbackSettings=angular.copy(this.pmsSettingsView.feedbackSettings)}return e.prototype.saveSettings=function(){var e=this;this.performanceSetupService.saveFeedbackSettings(this.feedbackSettings).then(function(t){e.notificationService.success("Feedback settings saved successfully"),e.pmsSettingsView.feedbackSettings=e.feedbackSettings,e.modalInstance.close()},function(t){e.notificationService.error("error in saving feedback settings")})},e.$inject=["$scope","$state","$uibModalInstance","NotificationService","PerformanceSetupService","PMSSettingsView"],e}();t.FeedbackSetUpController=r;var a=function(){function t(e,t,i,n,o,r,a,s,l,c){this._scope=e,this._state=t,this.modalInstance=i,this.notificationService=n,this.performanceSetupService=o,this.goalMethod=r,this.goalTrackingStatuses=a,this.goalAlias=s,this.pmsSettingsView=l,this.pmsSettings=c,this.goalSettings=angular.copy(this.pmsSettingsView.goalSettings),this.setGoalMethod()}return t.prototype.saveSettings=function(){var e=this;this.performanceSetupService.saveGoalSettings(this.goalSettings).then(function(t){e.notificationService.success("Goal settings are saved successfully"),e.pmsSettingsView.goalSettings=e.goalSettings,e.pmsSettings.updateGoalSettings(e.goalSettings),e.modalInstance.close()},function(t){e.notificationService.error("error in saving goal settings")})},t.prototype.setTrackingLabels=function(){var t=[];return this.goalTrackingStatuses.getAll().forEach(function(i){0!=i.id&&t.push(new e.Model.TrackingLabelItem({trackingLabel:i.title,trackingStatus:i.id}))}),t},t.prototype.setGoalMethod=function(){this.goalSettings.keyResultRequirementType=this.goalSettings.goalMethod==e.Model.GoalMethod.Standard?e.Model.KeyResultRequirementType.Optional:e.Model.KeyResultRequirementType.Required,this.goalSettings.goalAlias=this.goalSettings.goalMethod==e.Model.GoalMethod.Standard?this.goalAlias.Standard.title:this.goalAlias.OKR.title,this.goalSettings.keyResultAlias=this.goalSettings.goalMethod==e.Model.GoalMethod.Standard?this.goalAlias.Standard.subTitle:this.goalAlias.OKR.subTitle,0==this.goalSettings.trackingLabels.length&&(this.goalSettings.trackingLabels=this.setTrackingLabels())},t.$inject=["$scope","$state","$uibModalInstance","NotificationService","PerformanceSetupService","GoalMethod","GoalTrackingStatus","GoalAlias","PMSSettingsView","PMSSettings"],t}();t.GoalsConfigurationController=a;var s=function(){function t(t,i,n,o,r,a,s,l,c){var p=this;this._scope=t,this._state=i,this.modalInstance=n,this.performanceSetupService=o,this.notificationService=r,this.globalRatingScales=a,this.dialogService=s,this.pmsSettingsView=l,this.utilService=c,this.submitted=!1,this.updateRatingConfig=function(t){p.submitted=!1;var i=angular.copy(p.reviewSetup.ratingScale.ratingScaleLevels);p.reviewSetup.ratingScale.ratingScaleLevels=[];for(var n=0;n<t;n++){var o=i[n];p.reviewSetup.ratingScale.ratingScaleLevels.push(new e.Model.RatingScaleLevel(o||{score:n+1}))}},this.performanceSetupService.getReviewSettings().then(function(t){p.reviewSetup=new e.Model.ReviewSetup({}),p.reviewSetup.reviewSettings=new e.Model.ReviewSettings(t.reviewSettings||{}),p.reviewSetup.reviewRatingMetrics=t.reviewRatingMetrics,0==p.reviewSetup.reviewRatingMetrics.length&&p.setRatingMetrics(),p.reviewSetup.ratingScale=new e.Model.RatingScale(t.ratingScale||{})})}return t.prototype.setRatingMetrics=function(){this.reviewSetup.reviewRatingMetrics.push({identifier:this.utilService.getGuid(),title:"Performance"}),this.reviewSetup.reviewRatingMetrics.push({identifier:this.utilService.getGuid(),title:"Potential"})},t.prototype.initializeRatingScale=function(t){void 0===t&&(t=null),this.reviewSetup.ratingScale=new e.Model.RatingScale({}),t&&(this.reviewSetup.ratingScale=angular.copy(t)),this.reviewSetup.ratingScale.ratingScaleLevelCount=this.reviewSetup.reviewSettings.globalRatingScale,this.updateRatingConfig(this.reviewSetup.reviewSettings.globalRatingScale)},t.prototype.save=function(){var e=this;this.form.reviewSettingsForm.$valid&&this.dialogService.confirm("Notification","Further changes in review configurations cannot be made once setup is done. These will reflect in review process of employee. Are you sure you want to continue?").result.then(function(){e.performanceSetupService.saveReviewSettings(e.reviewSetup).then(function(t){e.notificationService.success("Review settings saved successfully"),e.pmsSettingsView.reviewSettings=e.reviewSetup.reviewSettings,e.modalInstance.close()},function(t){e.notificationService.error("error in saving review settings")})})},t.$inject=["$scope","$state","$uibModalInstance","PerformanceSetupService","NotificationService","GlobalRatingScales","dialogs","PMSSettingsView","Utils"],t}();t.ReviewsConfigurationController=s;var l=function(){function e(e,t,i,n,o){this._scope=e,this._state=t,this.notificationService=i,this.appSettings=n,this.appContext=o}return e.$inject=["$scope","$state","NotificationService","AppSettings","AppContext"],e}();t.CompetenciesSetupController=l;var c=function(e){function t(t,i,n,o,r,a,s,l,c){var p=e.call(this,t,i,n,o,r,a,s,l,c)||this;return p.isSetupMode=!0,p}return __extends(t,e),t.$inject=["$scope","$state","$uibModal","NotificationService","AppSettings","AppContext","SkillService","CompetencyType","PMSSettingsView"],t}(t.CoreCompetenciesController);t.CoreCompetenciesSetupController=c;var p=function(e){function t(t,i,n,o,r,a,s,l,c){var p=e.call(this,t,i,n,o,r,a,s,l,c)||this;return p.isSetupMode=!0,p}return __extends(t,e),t.$inject=["$scope","$state","$uibModal","NotificationService","AppSettings","AppContext","SkillService","CompetencyType","PMSSettingsView"],t}(t.CommonSuccessCompetenciesController);t.CommonSuccessCompetenciesSetupController=p;var u=function(e){function t(t,i,n,o,r,a,s,l,c,p){var u=e.call(this,t,i,n,o,r,a,s,l,c,p)||this;return u.isSetupMode=!0,u}return __extends(t,e),t.$inject=["$scope","$state","$uibModal","NotificationService","AppSettings","AppContext","SkillService","CompetencyType","dialogs","PMSSettingsView"],t}(t.JobSpecificCompetenciesController);t.JobSpecificCompetenciesSetupController=u;var d=function(e){function t(t,i,n,o,r,a,s){return e.call(this,t,i,n,o,r,a,s)||this}return __extends(t,e),t}(t.ImportCompetencyController);t.ImportCompetencySetupController=d;var m=function(e){function t(t,i,n,o,r,a,s,l,c,p){var u=e.call(this,t,i,n,o,r,a,s,l,c,p)||this;return u.isSetupMode=!0,u}return __extends(t,e),t.$inject=["$scope","$state","$uibModal","NotificationService","AppSettings","AppContext","SkillService","CompetencyType","dialogs","PMSSettingsView"],t}(t.CoreValuesController);t.CoreValuesSetupController=m;var y=function(e){function t(t,i,n,o,r,a,s,l,c,p,u){var d=e.call(this,t,i,n,o,r,a,s,l,c,p,u)||this;return d.isSetupMode=!0,d}return __extends(t,e),t.$inject=["$scope","$q","$uibModal","AppContext","JobFunctionService","SkillService","NotificationService","dialogs","$filter","AppSettings","PMSSettingsView"],t}(t.JobFunctionsController);t.JobFunctionsSetupController=y;var h=function(e){function t(t,i,n,o,r,a,s,l,c,p){var u=e.call(this,t,i,n,o,r,a,s,l,c,p)||this;return u.isSetupMode=!0,u}return __extends(t,e),t.$inject=["$scope","$q","$state","$filter","$uibModal","AppSettings","NotificationService","PMSService","dialogs","PMSSettingsView"],t}(t.MetricUnitController);t.MetricUnitSetupController=h}(e.Controllers||(e.Controllers={}))}(PMS||(PMS={})),angular.module("PMS").controller("PerformanceSetupController",PMS.Controllers.PerformanceSetupController).controller("AboutJobFunctionsController",PMS.Controllers.AboutJobFunctionsController).controller("SetupWizardController",PMS.Controllers.SetupWizardController).controller("FeedbackSetUpController",PMS.Controllers.FeedbackSetUpController).controller("GoalsConfigurationController",PMS.Controllers.GoalsConfigurationController).controller("ReviewsConfigurationController",PMS.Controllers.ReviewsConfigurationController).controller("CompetenciesSetupController",PMS.Controllers.CompetenciesSetupController).controller("CoreCompetenciesSetupController",PMS.Controllers.CoreCompetenciesSetupController).controller("CommonSuccessCompetenciesSetupController",PMS.Controllers.CommonSuccessCompetenciesSetupController).controller("JobSpecificCompetenciesSetupController",PMS.Controllers.JobSpecificCompetenciesSetupController).controller("ImportCompetencySetupController",PMS.Controllers.ImportCompetencySetupController).controller("CoreValuesSetupController",PMS.Controllers.CoreValuesSetupController).controller("JobFunctionsSetupController",PMS.Controllers.JobFunctionsSetupController).controller("MetricUnitSetupController",PMS.Controllers.MetricUnitSetupController),function(e){!function(e){var t=function(){function e(e,t,i,n,o,r){this._scope=e,this.modalInstance=t,this.appSettings=i,this.notificationService=n,this.pmsImportService=o,this.window=r,this.steps=[],this.hideFileUpload=!1,this.uploadedDetails=[],this.modalTitle="Import Employee Performance Details",this.steps=[new SharedModel.Step(1,"Upload Excel File","","employee-pms-details-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","employee-pms-details-validation-details",!1),new SharedModel.Step(3,"Preview","","employee-pms-details-preview",!1)],this.currentStep=this.steps[0],this.initializeGridSettings()}return e.prototype.initializeGridSettings=function(){this.employeePmsDetailsGridOptions=angular.copy(this.appSettings.gridSettings),this.employeePmsDetailsGridOptions.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee Name"},{field:"reviewCycle",displayName:"Review Cycle"},{field:"reviewProcess",displayName:"Review Process"}],this.employeePmsDetailsGridOptions.data="ctrl.uploadedDetails"},e.prototype.showPreview=function(){var e=this;this.pmsImportService.getImportedEmployeePmsDetails().then(function(t){e.uploadedDetails=t,e.nextStep()})},e.prototype.getValidations=function(){var e=this;this.pmsImportService.getEmployeePmsDetailImportValidations(this.model).then(function(t){t.result.length>0?e.validationErrors=t.result:e.showPreview()})},e.prototype.closeModal=function(){this.modalInstance.dismiss(!0)},e.prototype.completeImport=function(){this.modalInstance.close()},e.prototype.sortTableData=function(e){this.currentSortingElement=e,this.sortType=e.name,e.sortReverse=!e.sortReverse,this.sortReverse=e.sortReverse},e.prototype.onFileUploaded=function(e){e.exception?this.notificationService.error(e.exception.Message):(this.hideFileUpload=!0,this.nextStep(),this.getValidations())},e.prototype.nextStep=function(){var e=this;this.currentStep.valid=!0,this.currentStep=this.steps.find(function(t){return t.index==e.currentStep.index+1})},e.prototype.importEmployeePmsDetails=function(){var e=this;this.pmsImportService.importExcelEmployeePmsDetails(this.model).then(function(t){e.results=t,e.notificationService.success(e.results.successful.length+" Out Of "+(parseInt(e.results.successful.length)+parseInt(e.results.failures.length)).toString()+" Employee performance details Imported.")},function(t){e.notificationService.error("Error occurred while importing performance details")})},e.prototype.downloadImportSample=function(){this.window.location="/api/performance/excel/template/employeepmsdetailsimport"},e.$inject=["$scope","$uibModalInstance","AppSettings","NotificationService","PMSImportService","$window"],e}();e.ExcelImportEmployeePMSDetailsController=t;var i=function(){function e(e,t,i,n,o){this.stateService=e,this.appSettings=t,this.windowService=i,this.pmsImportService=n,this.notificationService=o,this.steps=[],this.isImportInProgress=!1,this.steps=[new SharedModel.Step(1,"Upload Excel File","","employee-goal-excel-upload",!1),new SharedModel.Step(2,"Data Validations","","employee-goal-validation-details",!1),new SharedModel.Step(3,"Preview","","employee-goal-details-preview",!1)],this.currentStep=this.steps[0]}return e.prototype.downloadImportSample=function(){this.windowService.location.href="/api/performance/excel/template/employeegoaldetailimport"},e.prototype.onFileUploaded=function(e){var t=this;this.isImportCompleted=!1,e.result?this.pmsImportService.getEmployeeGoalDetailValidations().then(function(e){t.importResult=e.result,0==t.importResult.length?t.finalizeImport():t.nextStep()},function(e){var i=e.data.message?e.data.message:"Error occurred while importing file";t.notificationService.error(i)}):this.notificationService.error(e.exception.Message)},e.prototype.nextStep=function(){var e=this;this.currentStep.valid=!0,this.currentStep=this.steps.find(function(t){return t.index==e.currentStep.index+1})},e.prototype.finalizeImport=function(){var e=this;this.pmsImportService.getImportedEmployeeGoalDetails().then(function(t){e.initializeGridSettings(t),e.currentStep=e.steps[e.steps.length-1],e.importResult=null},function(t){e.notificationService.error("Failed to fetch imported data.")})},e.prototype.initializeGridSettings=function(e){this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Employee Number"},{field:"employeeName",displayName:"Employee Name"},{field:"goalName",displayName:"Goal Name"},{field:"goalDescription",displayName:"Goal Description"},{field:"goalType",displayName:"Goal Type"},{field:"businessUnit",displayName:"Business Unit"},{field:"department",displayName:"Department Name"},{field:"goalMetric",displayName:"Goal Metric"},{field:"metricUnit",displayName:"Metric Unit"},{field:"priority",displayName:"Priority"},{field:"includeInReview",displayName:"Include In Review"},{field:"startValue",displayName:"Start Value"},{field:"targetValue",displayName:"Target Value"},{field:"startDate",displayName:"Start Date",cellFilter:'date: "dd MMM, yyyy"'},{field:"dueDate",displayName:"Due Date",cellFilter:'date: "dd MMM, yyyy"'}],this.gridSettings.data=e},e.prototype.importEmployeeGoals=function(){var e=this;this.isImportInProgress||(this.isImportInProgress=!0,this.pmsImportService.importExcelEmployeeGoalDetails().then(function(t){e.importResult=t,e.isImportCompleted=!0,e.isImportInProgress=!1},function(t){var i=t.data&&t.data.message?t.data.message:"Error occured while importing file";e.notificationService.error(i),e.isImportInProgress=!1}))},e.$inject=["$state","AppSettings","$window","PMSImportService","NotificationService"],e}();e.GoalImportController=i}(e.Controllers||(e.Controllers={}))}(PMS||(PMS={})),angular.module("PMS").controller("ExcelImportEmployeePMSDetailsController",PMS.Controllers.ExcelImportEmployeePMSDetailsController).controller("GoalImportController",PMS.Controllers.GoalImportController),function(e){!function(t){var i=function(){function t(t,i,n,o,r){var a=this;this.appSettings=t,this.performanceService=i,this.notificationService=n,this._q=o,this.feedbackTypes=r,this.employeeFeedback=[],this.niceScrollOptions=angular.copy(t.scrollSettings),this._q.all([this.performanceService.getEmployeesFeedback()]).then(function(t){a.employeeFeedback=t[0].map(function(t){return new e.Model.Feedback(t)})},function(e){a.notificationService.error("error in loading feedback")})}return t.$inject=["AppSettings","PMSReportsService","NotificationService","$q","FeedBackTypes"],t}();t.PMSEmployeesFeedbackController=i;var n=function(){function e(e,t,i,n,o,r,a,s){var l=this;this._scope=e,this._q=t,this._filter=i,this.notificationService=n,this.appSettings=o,this.reportService=r,this.lookupService=a,this.fileDownloadService=s,this.gridData=[],this.reviewGroups=[],this.reviewCycles=[],this.getReviewCycles=function(){l.lookupService.getReviewCycles(l.reviewGroupId).then(function(e){l.reviewCycles=e,l.reviewCycleId=l.reviewCycles.length>0?l.reviewCycles[0].id:null,l.getQuestionnaireRatings()})},this.getQuestionnaireRatings=function(){if(!l.reviewCycleId)return l.gridData=[],l.filterGrid(),void(l.gridApi&&l.gridApi.grid.queueGridRefresh());l.reportService.getQuestionnaireRatingReport(l.reviewGroupId,l.reviewCycleId).then(function(e){l.gridData=e,l.initGridSettings(),l.filterGrid(),l.gridApi&&l.gridApi.grid.queueGridRefresh()})},this.initGridSettings=function(){l.gridSettings.columnDefs=[{name:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents detail-cell"><span data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col)}}</span><span data-ng-if="!grid.getCellValue(row,col)">Not Available</span></div>',cellTooltip:!0,headerTooltip:!0},{name:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents detail-cell"><a href="/old/#/employee/{{row.entity.employeeId}}/talent" title="{{grid.getCellValue(row,col)}}" target="_blank"><p class="clear-bottom">{{grid.getCellValue(row,col)}}</p></a></div>',cellTooltip:!0,headerTooltip:!0},{field:"jobTitle",displayName:"Job Title",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col)}}</span><span data-ng-if="!grid.getCellValue(row,col)">Not Available</span></div>',cellTooltip:!0,headerTooltip:!0},{field:"departmentName",displayName:"Department",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col)}}</span><span data-ng-if="!grid.getCellValue(row,col)">Not Available</span></div>',cellTooltip:!0,headerTooltip:!0},{field:"locationName",displayName:"Location",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col)}}</span><span data-ng-if="!grid.getCellValue(row,col)">Not Available</span></div>',cellTooltip:!0,headerTooltip:!0},{field:"reportingManager",displayName:"Reporting Manager",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col)}}</span><span data-ng-if="!grid.getCellValue(row,col)">Not Available</span></div>',cellTooltip:!0,headerTooltip:!0},{field:"reviewerName",displayName:"Reviewer Name",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col)}}</span><span data-ng-if="!grid.getCellValue(row,col)">Not Available</span></div>',cellTooltip:!0,headerTooltip:!0},{field:"reviewItemTitle",displayName:"Question",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col)}}</span><span data-ng-if="!grid.getCellValue(row,col)">Not Available</span></div>',cellTooltip:!0,headerTooltip:!0},{field:"overallRating",displayName:"Rating",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row,col)"><span data-ng-if="!row.entity.ratingNotApplicable">{{grid.getCellValue(row,col) | number : 2}}</span><span data-ng-if="row.entity.ratingNotApplicable">Not applicable</span></span><span data-ng-if = "!grid.getCellValue(row,col)">Not Available</span></div>',cellTooltip:!0,headerTooltip:!0},{field:"comments",displayName:"Comments",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col)}}</span><span data-ng-if="!grid.getCellValue(row,col)">Not Available</span></div>',cellTooltip:!0,headerTooltip:!0}],l.gridSettings.data=l.gridData,l.gridSettings.onRegisterApi=l.setGridApi},this.setGridApi=function(e){l.gridApi=e},this.gridSettings=angular.copy(this.appSettings.gridSettings),this.lookupService.getReviewGroups().then(function(e){l.reviewGroups=e,l.reviewGroupId=l.reviewGroups[0].id,l.getReviewCycles()})}return e.prototype.filterGrid=function(){this.gridSettings.data=this._filter("filter")(this.gridData,this.filterText,!1)},e.prototype.exportReport=function(e){this.gridSettings.data.length>0&&this.fileDownloadService.downloadFile("/api/pms/reports/export/questionnaire/overallratings?name=questionnaireratingsreport&format="+e+"&searchKey="+(this.filterText?this.filterText.trim():"")+"&reviewGroupId="+this.reviewGroupId+"&reviewCycleId="+this.reviewCycleId)},e.$inject=["$scope","$q","$filter","NotificationService","AppSettings","PMSReportsService","PMSLookupService","FileDownloadService"],e}();t.QuestionnaireOverallRatingReportController=n;var o=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d){var m=this;this._scope=t,this._q=i,this._filter=n,this.notificationService=o,this.appSettings=r,this.reportService=a,this.lookupService=s,this.fileDownloadService=l,this.reviewObjectives=c,this.stateParams=p,this.pmsSettings=u,this.reviewObjectiveType=d,this.gridData=[],this.reviewGroups=[],this.reviewCycles=[],this.getReviewCycles=function(){m.lookupService.getReviewCycles(m.reviewGroupId).then(function(e){m.reviewCycles=e,m.reviewCycleId=m.reviewCycles.length>0?m.reviewCycles[0].id:null,m.getReviewItemRatings()})},this.getReviewItemRatings=function(){m.reportService.getReviewItemRatingReport(m.reviewGroupId,m.reviewCycleId,m.reviewObjectiveType).then(function(e){m.gridData=e,m.initGridSettings(),m.filterGrid(),m.gridApi&&m.gridApi.grid.queueGridRefresh()})},this.initGridSettings=function(){m.gridSettings.columnDefs=[{name:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents detail-cell"><span data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col)}}</span><span data-ng-if="!grid.getCellValue(row,col)">Not Available</span></div>',cellTooltip:!0,headerTooltip:!0},{name:"employeeName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents detail-cell"><a href="/old/#/employee/{{row.entity.employeeId}}/talent" title="{{grid.getCellValue(row,col)}}" target="_blank"><p class="clear-bottom">{{row.entity.employeeName}}</p></a></div>',cellTooltip:!0,headerTooltip:!0},{field:"jobTitle",displayName:"Job Title",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col)}}</span><span data-ng-if="!grid.getCellValue(row,col)">Not Available</span></div>',cellTooltip:!0,headerTooltip:!0},{field:"departmentName",displayName:"Department",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col)}}</span><span data-ng-if="!grid.getCellValue(row,col)">Not Available</span></div>',cellTooltip:!0,headerTooltip:!0},{field:"locationName",displayName:"Location",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col)}}</span><span data-ng-if="!grid.getCellValue(row,col)">Not Available</span></div>',cellTooltip:!0,headerTooltip:!0},{field:"reportingManager",displayName:"Reporting Manager",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col)}}</span><span data-ng-if="!grid.getCellValue(row,col)">Not Available</span></div>',cellTooltip:!0,headerTooltip:!0},{field:"reviewerName",displayName:"Reviewer Name",cellTooltip:!0,headerTooltip:!0},{field:"reviewItemTitle",displayName:m.getReviewItemTitle(m.reviewObjectiveType),cellTooltip:!0,headerTooltip:!0},{field:"subReviewItemTitle",displayName:m.getReviewSubItemTitle(m.reviewObjectiveType),cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row,col)" title="{{grid.getCellValue(row,col)}}">{{grid.getCellValue(row,col)}}</span><span data-ng-if="!grid.getCellValue(row,col)">Not Available</span></div>',cellTooltip:!0,headerTooltip:!0},{field:"overallRating",displayName:"Rating",cellTooltip:!0,headerTooltip:!0},{field:"comments",displayName:"Comments",cellTooltip:!0,headerTooltip:!0}],m.gridSettings.data=m.gridData,m.gridSettings.onRegisterApi=m.setGridApi,m.gridSettings.enableHorizontalScrollbar=!0},this.setGridApi=function(e){m.gridApi=e},this.getReviewItemTitle=function(t){switch(t){case e.Model.ReviewObjective.Competencies:return"Competency";case e.Model.ReviewObjective.Goals:return m.pmsSettings.goalSettings.goalAlias;case e.Model.ReviewObjective.CoreValues:return"Core Value"}},this.getReviewSubItemTitle=function(t){switch(t){case e.Model.ReviewObjective.Competencies:return"Competency Behaviour";case e.Model.ReviewObjective.Goals:return m.pmsSettings.goalSettings.keyResultAlias;case e.Model.ReviewObjective.CoreValues:return"Core Value Behaviour"}},this.gridSettings=angular.copy(this.appSettings.gridSettings),this.lookupService.getReviewGroups().then(function(e){m.reviewGroups=e,m.reviewGroupId=m.reviewGroups[0].id,m.getReviewCycles()})}return t.prototype.filterGrid=function(){this.gridSettings.data=this._filter("filter")(this.gridData,this.filterText,!1)},t.prototype.exportReport=function(e){this.gridSettings.data.length>0&&this.fileDownloadService.downloadFile("/api/pms/reports/export/reivewitem/overallratings?name=reviewitemsratingreport&format="+e+"&searchKey="+(this.filterText?this.filterText.trim():"")+"&reviewGroupId="+this.reviewGroupId+"&reviewCycleId="+this.reviewCycleId+"&reviewObjectiveType="+this.reviewObjectiveType)},t.$inject=["$scope","$q","$filter","NotificationService","AppSettings","PMSReportsService","PMSLookupService","FileDownloadService","ReviewObjectives","$stateParams","PMSSettings","ReviewObjectiveType"],t}();t.ReviewItemOverallRatingReportController=o;var r=function(){function e(e,t,i,n,o,r,a,s,l){var c=this;this._scope=e,this._q=t,this._filter=i,this.notificationService=n,this.appSettings=o,this.reportService=r,this.lookupService=a,this.fileDownloadService=s,this.reviewObjectives=l,this.gridData=[],this.reviewGroups=[],this.reviewCycles=[],this.getReviewCycles=function(){c.lookupService.getReviewCycles(c.reviewGroupId).then(function(e){c.reviewCycles=e,c.reviewCycleId=c.reviewCycles.length>0?c.reviewCycles[0].id:null,c.getReviewerRatings()})},this.getReviewerRatings=function(){if(!c.reviewCycleId)return c.gridData=[],c.filterGrid(),void(c.gridApi&&c.gridApi.grid.queueGridRefresh());c.reportService.getEmployeeReviewParameterwiseRatings(c.reviewGroupId,c.reviewCycleId).then(function(e){c.gridData=e,c.initGridSettings(),c.buildColumns(),c.filterGrid(),c.gridApi&&c.gridApi.grid.queueGridRefresh()})},this.initGridSettings=function(){c.gridSettings.columnDefs=[{name:"employeeNumber",displayName:"Employee Number",cellTemplate:'<div class="ui-grid-cell-contents detail-cell"><span data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col)}}</span><span data-ng-if="!grid.getCellValue(row,col)">Not Available</span></div>',enablePinning:!0,pinnedLeft:!0,width:150},{name:"displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents detail-cell"><a href="/old/#/employee/{{row.entity.employeeId}}/talent" title="{{grid.getCellValue(row,col)}}" target="_blank"><p class="clear-bottom">{{row.entity.displayName}}</p></a><p class="clear-bottom text-muted font-smaller">{{row.entity.jobRole}}</p></div>',enablePinning:!0,pinnedLeft:!0,width:150},{field:"jobTitle",displayName:"Job Title",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col)}}</span><span data-ng-if="!grid.getCellValue(row,col)">Not Available</span></div>',enablePinning:!0,pinnedLeft:!0,width:150},{field:"departmentName",displayName:"Department",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col)}}</span><span data-ng-if="!grid.getCellValue(row,col)">Not Available</span></div>',enablePinning:!0,pinnedLeft:!0,width:150},{field:"locationName",displayName:"Location",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col)}}</span><span data-ng-if="!grid.getCellValue(row,col)">Not Available</span></div>',enablePinning:!0,pinnedLeft:!0,width:150},{field:"reportingManager",displayName:"Reporting Manager",cellTemplate:'<div class="ui-grid-cell-contents"><span data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col)}}</span><span data-ng-if="!grid.getCellValue(row,col)">Not Available</span></div>',enablePinning:!0,pinnedLeft:!0,width:150}],c.gridSettings.data=c.gridData,c.gridSettings.onRegisterApi=c.setGridApi,c.gridSettings.enableHorizontalScrollbar=!0},this.setGridApi=function(e){c.gridApi=e},this.gridSettings=angular.copy(this.appSettings.gridSettings),this.lookupService.getReviewGroups().then(function(e){c.reviewGroups=e,c.reviewGroupId=c.reviewGroups[0].id,c.getReviewCycles()})}return e.prototype.buildColumns=function(){var e=this;if(this.gridData.length>0){this.gridData[0].reviewObjectiveRatingDetails.forEach(function(t,i){[{field:"reviewObjectiveRatingDetails["+i+"].givenRating",displayName:(3==t.reviewObjective?"Review Questions":e.reviewObjectives.getById(t.reviewObjective).name)+" Average Rating",cellTemplate:'<div class="ui-grid-cell-contents"><span title = "{{grid.getCellValue(row,col)}}" data-ng-if = "grid.getCellValue(row,col)">{{grid.getCellValue(row,col) | number : 2}}</span><span data-ng-if = "!grid.getCellValue(row,col)">0</span></div>',cellTooltip:!0,headerTooltip:!0,width:"250"}].forEach(function(t){e.gridSettings.columnDefs.push(t)})});this.gridSettings.columnDefs.push({field:"overallRating",displayName:"Overall Rating",cellTemplate:'<div class="ui-grid-cell-contents"><span title = "{{grid.getCellValue(row,col)}}" data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col) | number : 2}}</span><span data-ng-if = "!grid.getCellValue(row,col)">0</span></div>',cellTooltip:!0,headerTooltip:!0,width:"250"})}},e.prototype.filterGrid=function(){this.gridSettings.data=this._filter("filter")(this.gridData,this.filterText,!1)},e.prototype.exportReport=function(e){this.gridSettings.data.length>0&&this.fileDownloadService.downloadFile("/api/pms/reports/export/objective/ratingreport?name=reviewerratings&format="+e+"&searchKey="+(this.filterText?this.filterText.trim():"")+"&reviewGroupId="+this.reviewGroupId+"&reviewCycleId="+this.reviewCycleId)},e.$inject=["$scope","$q","$filter","NotificationService","AppSettings","PMSReportsService","PMSLookupService","FileDownloadService","ReviewObjectives"],e}();t.EmployeeRevieweObjectiveWiseRatingReportController=r}(e.Controllers||(e.Controllers={}))}(PMS||(PMS={})),angular.module("PMS").controller("PMSEmployeesFeedbackController",PMS.Controllers.PMSEmployeesFeedbackController).controller("QuestionnaireOverallRatingReportController",PMS.Controllers.QuestionnaireOverallRatingReportController).controller("EmployeeRevieweObjectiveWiseRatingReportController",PMS.Controllers.EmployeeRevieweObjectiveWiseRatingReportController).controller("ReviewItemOverallRatingReportController",PMS.Controllers.ReviewItemOverallRatingReportController),function(e){!function(e){var t=function(){function e(e,t,i,n,o,r,a){var s=this;this._scope=e,this._filter=t,this.appSettings=i,this.goalReportService=n,this.lookupService=o,this.reviewerType=r,this.fileDownloadService=a,this.gridData=[],this.reviewGroups=[],this.reviewCycles=[],this.getReviewGroups=function(){s.lookupService.getReviewGroups().then(function(e){s.reviewGroups=e,s.reviewGroupId=s.reviewGroups[0].id,s.getReviewCycles()})},this.getReviewCycles=function(){s.reviewCycleId=0,s.lookupService.getReviewCycles(s.reviewGroupId).then(function(e){s.reviewCycles=e,s.reviewCycleId=s.reviewCycles[0].id,s.getGoalRatings()})},this.setGridApi=function(e){s.gridApi=e},this.initGridSettings=function(){s.gridSettings.columnDefs=[{field:"employeeNumber",displayName:"Emp No",cellTemplate:'<div class="ui-grid-cell-contents"><span title = {{grid.getCellValue(row,col)}}>{{grid.getCellValue(row,col)}}</span></div>',enablePinning:!0,pinnedLeft:!0,width:100},{name:"displayName",displayName:"Employee Name",cellTemplate:'<div class="ui-grid-cell-contents detail-cell"><a href="/old/#/employee/{{row.entity.employeeId}}/talent" title="{{grid.getCellValue(row,col)}}" target="_blank"><p class="clear-bottom">{{row.entity.displayName}}</p></a><p class="clear-bottom text-muted font-smaller">{{row.entity.jobRole}}</p>',enablePinning:!0,pinnedLeft:!0,width:150},{field:"jobTitle",displayName:"Job Title",enablePinning:!0,pinnedLeft:!0,width:150},{field:"title",displayName:"Goal Name",enablePinning:!0,pinnedLeft:!0,width:150}],s.gridSettings.data=s.gridData,s.gridSettings.onRegisterApi=s.setGridApi,s.gridSettings.enableHorizontalScrollbar=!0},this.gridSettings=angular.copy(this.appSettings.gridSettings),this.initGridSettings(),this.getReviewGroups()}return e.prototype.getGoalRatings=function(){var e=this;this.goalDetailsForm.goalDetails.$valid&&this.goalReportService.getGoalRatingDetails(this.reviewGroupId,this.reviewCycleId).then(function(t){e.gridData=t,e.initGridSettings(),e.buildColumns(),e.gridApi&&e.gridApi.grid.queueGridRefresh()})},e.prototype.filterGrid=function(){this.gridSettings.data=this._filter("filter")(this.gridData,this.filterText,!1)},e.prototype.buildColumns=function(){var e=this;this.gridData.length>0&&this.gridData[0].goalRatingDetails.forEach(function(t,i){[{field:"goalRatingDetails["+i+"].reviewerName",displayName:t.reviewerTypeName+" Name",cellTemplate:'<div class="ui-grid-cell-contents"><span title = "{{grid.getCellValue(row,col)}}" data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col)}}</span><span data-ng-if = "!grid.getCellValue(row,col)">Not Available</span></div>',width:150,cellTooltip:!0,headerTooltip:!0},{field:"goalRatingDetails["+i+"].rating",displayName:t.reviewerTypeName+" Rating",cellTemplate:'<div class="ui-grid-cell-contents"><span title = "{{grid.getCellValue(row,col)}}" data-ng-if="!row.entity.goalRatingDetails['+i+'].notApplicable && grid.getCellValue(row,col)">{{grid.getCellValue(row,col)}}</span><span data-ng-if = "row.entity.goalRatingDetails['+i+'].notApplicable">Not Applicable</span><span data-ng-if="!row.entity.goalRatingDetails['+i+'].notApplicable && !grid.getCellValue(row,col)">Not Available</span></div>',width:150,cellTooltip:!0,headerTooltip:!0},{field:"goalRatingDetails["+i+"].comments",displayName:t.reviewerTypeName+" Comments",cellTemplate:'<div class="ui-grid-cell-contents"><span title = "{{grid.getCellValue(row,col)}}" data-ng-if="grid.getCellValue(row,col)">{{grid.getCellValue(row,col)}}</span><span data-ng-if = "!grid.getCellValue(row,col)">Not Available</span></div>',width:150,cellTooltip:!0,headerTooltip:!0}].forEach(function(t){e.gridSettings.columnDefs.push(t)})})},e.prototype.exportReport=function(e){this.gridSettings.data.length>0&&this.fileDownloadService.downloadFile("/api/pms/reports/export/goal/ratings?name=goaldetailedratings&format="+e+"&searchKey="+(this.filterText?this.filterText.trim():"")+"&reviewGroupId="+this.reviewGroupId+"&reviewCycleId="+this.reviewCycleId)},e.$inject=["$scope","$filter","AppSettings","GoalReportService","PMSLookupService","ReviewerType","FileDownloadService"],e}();e.EmployeeGoalRatingDetailsController=t,angular.module("PMS").controller("EmployeeGoalRatingDetailsController",t)}(e.Controllers||(e.Controllers={}))}(PMS||(PMS={})),function(e){!function(e){var t=function(){function e(e){var t=this;this.resource=e,this.reportService=this.resource("/api/pms/reports/:action/:skillType",{action:"@action",skillType:"@skillType"},{update:{method:"PUT"}}),this.getEmployeesFeedback=function(){return t.reportService.query({action:"employeesfeedback"}).$promise},this.getEmployeeReviewParameterwiseRatings=function(e,i){return t.reportService.query({action:"objective/ratingreport",reviewGroupId:e,reviewCycleId:i}).$promise},this.getQuestionnaireRatingReport=function(e,i){return t.reportService.query({action:"questionnaire/overallratings",reviewGroupId:e,reviewCycleId:i}).$promise},this.getReviewItemRatingReport=function(e,i,n){return t.reportService.query({action:"reviewitem/overallratings",reviewGroupId:e,reviewCycleId:i,reviewObjectiveType:n}).$promise}}return e.$inject=["$resource"],e}();e.PMSReportsService=t;var i=function(){function e(e){this.resource=e,this.reportService=this.resource("/api/pms/reports/goal/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getGoalRatingDetails=function(e,t){return this.reportService.query({action:"ratings",reviewGroupId:e,reviewCycleId:t}).$promise},e.$inject=["$resource"],e}();e.GoalReportService=i,angular.module("PMS").service("PMSReportsService",t).service("GoalReportService",i)}(e.Services||(e.Services={}))}(PMS||(PMS={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){var t=function(){return function(t){this.id=t.id,this.identifier=t.identifier,this.name=t.name,this.description=t.description,this.reviewCycleFrequency=t.reviewCycleFrequency||e.Frequency.Yearly,this.reviewCycleType=t.reviewCycleType||e.ReviewCycleType.CommonCycle,this.isDefault=t.isDefault}}();e.ReviewGroup=t;var i=function(){return function(t){this.isEdit=!1,this.id=t.id,this.reviewGroupId=t.reviewGroupId,this.reviewCycleName=t.reviewCycleName,this.reviewCycleStartDate=t.reviewCycleStartDate?t.reviewCycleStartDate.stringToDate():null,this.firstReviewInitiatedDate=t.firstReviewInitiatedDate,this.reviewPeriodBeginDate=t.reviewPeriodBeginDate,this.reviewPeriodEndDate=t.reviewPeriodEndDate,this.reviewGroupCycleStatus=t.reviewGroupCycleStatus||e.ReviewGroupCycleStatus.NotStarted,this.reviewCycleType=t.reviewCycleType,this.reviewCycleCategory=t.reviewCycleCategory,this.reviewCycleFrequency=t.reviewCycleFrequency,this.reviewCycleProcessSettings=new r(t.reviewCycleProcessSettings||{}),this.reviewFormSettings=t.reviewFormSettings||new g({}),this.isSetupCompleted=t.isSetupCompleted,this.isEdit=!1,this.setupCompletedOn=t.setupCompletedOn}}();e.ReviewGroupCycle=i;var n=function(){return function(t){this.groupedReviews=[],this.id=t.id||0,this.reviewGroupId=t.reviewGroupId,this.reviewCycleName=t.reviewCycleName,this.reviewCycleStartDate=t.reviewCycleStartDate?t.reviewCycleStartDate.stringToDate():null,this.reviewGroupCycleStatus=t.reviewGroupCycleStatus||e.ReviewGroupCycleStatus.NotStarted,this.reviewCycleType=t.reviewCycleType,this.reviewCycleCategory=t.reviewCycleCategory||e.ReviewCycleCategory.StandardCycle,this.reviewCycleFrequency=t.reviewCycleFrequency,this.isProcessSetupCompleted=t.isProcessSetupCompleted,this.isFormSetupCompleted=t.isFormSetupCompleted,this.isSetupCompleted=t.isSetupCompleted||!1,this.employeesCount=t.employeesCount}}();e.ReviewGroupCycleView=n;var o=function(){return function(e){this.reviewCycleId=e.reviewCycleId,this.employeesCount=e.employeesCount,this.status=e.status}}();e.ActiveReviewGroupCycleStatistics=o;var r=function(){return function(t){this.reviewers=[],this.reviewProcessSteps=[],this.reviewers=t.reviewers?t.reviewers.map(function(t){return new e.Reviewer(t)}):[],this.reviewProcessSteps=t.reviewProcessSteps||[],this.isSetupCompleted=t.isSetupCompleted}}();e.ReviewCycleProcessSettings=r;var a=function(){function e(e){this.reviewerStepAttributes=[],this.identifier=e.identifier,this.reviewerType=e.reviewerType,this.name=e.name,this.isReviewParticipant=e.isReviewParticipant,this.isAdditionalReviewer=e.isAdditionalReviewer,this.reviewerStepAttributes=e.reviewerStepAttributes||[],this.onEdit=!1,this.setReviewAttributes()}return e.prototype.setReviewAttributes=function(){var e=this;this.reviewerStepAttributes.forEach(function(t){return e[t.stepIdentifier]=t})},e.prototype.toJSON=function(){return{identifier:this.identifier,reviewerType:this.reviewerType,name:this.name,isReviewParticipant:this.isReviewParticipant,isAdditionalReviewer:this.isAdditionalReviewer,reviewerStepAttributes:this.reviewerStepAttributes}},e.prototype.getReviewStepAttribute=function(e){return this.reviewerStepAttributes.find(function(t){return t.stepIdentifier==e})},e}();e.Reviewer=a;var s=function(){return function(e){this.$type=e.$type,this.stepIdentifier=e.stepIdentifier,this.isParticipant=e.isParticipant,this.sequenceOrder=e.sequenceOrder,this.reviewDurationInDays=e.reviewDurationInDays,this.instructions=e.instructions}}();e.ReviewerStepAttribute=s;var l=function(e){function t(t){var i=e.call(this,t)||this;return i.maxNumberOfReviewers=t.maxNumberOfReviewers,i.canApproveNominations=t.canApproveNominations,i.whoCanNominate=t.whoCanNominate,i.whoCanViewNominations=t.whoCanViewNominations,i}return __extends(t,e),t}(s);e.NominationStepReviewerAttributes=l;var c=function(e){function t(t){var i=e.call(this,t)||this;return i.canCompleteMeeting=t.canCompleteMeeting,i}return __extends(t,e),t}(s);e.MeetingStepReviewerAttributes=c;var p=function(e){function t(t){var i=e.call(this,t)||this;return i.accessibleReviewerFeedback=[],i.reviewObjectiveWeightageConfiguration=[],i.hideReviewerIdentity=t.hideReviewerIdentity,i.requireComments=t.requireComments,i.reviewerWeightage=t.reviewerWeightage,i.accessibleReviewerFeedback=t.accessibleReviewerFeedback,i.reviewObjectiveWeightageConfiguration=t.reviewObjectiveWeightageConfiguration||[],i}return __extends(t,e),t}(s);e.ReviewFormStepReviewerAttributes=p;var u=function(e){function t(t){return e.call(this,t)||this}return __extends(t,e),t}(s);e.ModerationStepReviewerAttributes=u;var d=function(e){function t(t){var i=e.call(this,t)||this;return i.canProvideSummary=t.canProvideSummary,i.canReleaseReview=t.canReleaseReview,i.employeeVisibilitySettingsEnabled=t.employeeVisibilitySettingsEnabled,i.finalRatingVisibilityTypes=t.finalRatingVisibilityTypes,i.employeeReviewVisibilitySettings=t.employeeReviewVisibilitySettings,i}return __extends(t,e),t}(s);e.FinalStepReviewerAttributes=d;var m=function(){return function(e){this.isWeightageRequired=!1,this.isObjectiveSettingsEnabled=!1,this.reviewObjective=e.reviewObjective,this.weightage=e.weightage,this.isWeightageRequired=!1,this.isObjectiveSettingsEnabled=!1}}();e.ReviewObjectiveWeightageConfig=m;var y=function(){return function(t){this.options=[],this.otherReviewerRatingTransactions=[],this.reviewObjective=t.reviewObjective,this.weightage=t.weightage,this.showNotApplicable=t.showNotApplicable,this.ratingScaleId=t.ratingScaleId,this.responseType=t.responseType||e.ReviewResponseType.TextBox,this.options=t.options||[],this.isCommentRequired=t.isCommentRequired,this.otherReviewerRatingTransactions=t.otherReviewerRatingTransactions||[]}}();e.ReviewObjectiveWeightageConfigView=y;var h=function(){return function(e){this.canViewReviewerName=e.canViewReviewerName,this.canViewReviewerRating=e.canViewReviewerRating,this.canViewReviewElementRating=e.canViewReviewElementRating,this.canViewReviewerComments=e.canViewReviewerComments}}();e.EmployeeReviewVisibilitySettings=h;var f=function(){return function(t){this.makeCommentsMandatoryForOverriddenRating=!1,this.name=t.name,this.description=t.description,this.identifier=t.identifier,this.reviewStepType=t.reviewStepType||e.ReviewStepType.None,this.sequenceOrder=t.sequenceOrder,this.durationInDays=t.durationInDays,this.reviewStepFunction=t.reviewStepFunction,this.areInstructionsSame=t.areInstructionsSame,this.commonInstructions=t.commonInstructions,this.isSetupCompleted=t.isSetupCompleted,this.isStepCompleted=t.isStepCompleted,this.stepEndDate=t.stepEndDate,this.makeCommentsMandatoryForOverriddenRating=t.makeCommentsMandatoryForOverriddenRating||!1,this.isReviewSummaryRequired=t.isReviewSummaryRequired,this.reviewSummaryDuration=t.reviewSummaryDuration,this.reviewReleaseDuration=t.reviewReleaseDuration}}();e.ReviewProcessStep=f;var g=function(){return function(e){this.questionnaireTemplateSettings=new S(e.questionnaireTemplateSettings||{}),this.competencyTemplateSettings=new C(e.competencyTemplateSettings||{}),this.goalTemplateSettings=new w(e.goalTemplateSettings||{}),this.coreValueTemplateSettings=new b(e.coreValueTemplateSettings||{}),this.isSetupCompleted=e.isSetupCompleted}}();e.ReviewFormSettings=g;var v=function(){return function(t){this.reviewersWhoCanProvideFeedback=[],this.options=[],this.allReviewersSelected=!1,this.ratingScaleId=t.ratingScaleId||null,this.weightage=t.weightage,this.showNotApplicable=t.showNotApplicable,this.reviewersWhoCanProvideFeedback=t.reviewersWhoCanProvideFeedback||[],this.responseType=t.responseType||e.ReviewResponseType.TextBox,this.options=t.options||[],this.isCommentRequired=t.isCommentRequired,this.allReviewersSelected=t.allReviewersSelected}}();e.ReviewFormTemplateSettings=v;var S=function(e){function t(t){var i=e.call(this,t)||this;return i.enableQuestionnaireReviews=t.enableQuestionnaireReviews,i}return __extends(t,e),t}(v);e.QuestionnaireTemplateSettings=S;var C=function(e){function t(t){var i=e.call(this,t)||this;return i.competencyTypes=[],i.enableCompetencyReviews=t.enableCompetencyReviews,i.competencyTypes=t.competencyTypes,i}return __extends(t,e),t}(v);e.CompetencyTemplateSettings=C;var w=function(e){function t(t){var i=e.call(this,t)||this;return i.enableGoalReviews=t.enableGoalReviews,i.goalConsiderationStartDate=t.goalConsiderationStartDate?new Date(t.goalConsiderationStartDate):null,i.goalConsiderationEndDate=t.goalConsiderationEndDate?new Date(t.goalConsiderationEndDate):null,i}return __extends(t,e),t}(v);e.GoalTemplateSettings=w;var b=function(e){function t(t){var i=e.call(this,t)||this;return i.enableCoreValueReviews=t.enableCoreValueReviews,i}return __extends(t,e),t}(v);e.CoreValueTemplateSettings=b;var P=function(){return function(e){this.id=e.id,this.identifier=e.identifier,this.name=e.name,this.description=e.description,this.reviewCycleFrequency=e.reviewCycleFrequency,this.reviewCycleType=e.reviewCycleType,this.isDefault=e.isDefault,this.assignedEmployeesCount=e.assignedEmployeesCount}}();e.ReviewGroupView=P;var T=function(){return function(e){this.id=e.id,this.employeeId=e.employeeId,this.reviewGroupId=e.reviewGroupId,this.assignedOn=e.assignedOn,this.assignedBy=e.assignedBy}}();e.ReviewGroupEmployee=T;var D=function(){return function(e){this.id=e.id,this.employeeNumber=e.employeeNumber,this.displayName=e.displayName,this.reviewGroupId=e.reviewGroupId,this.assignedDate=e.assignedDate,this.assignedBy=e.assignedBy,this.locationId=e.locationId,this.jobTitleId=e.jobTitleId,this.locationName=e.locationName,this.jobTitle=e.jobTitle,this.dateJoined=e.dateJoined,this.departmentId=e.departmentId,this.departmentName=e.departmentName,this.isEmployeeInActiveReviewCycle=e.isEmployeeInActiveReviewCycle}}();e.ReviewGroupEmployeeLookUpView=D;var I=function(){return function(t){this.id=t.id,this.reviewGroupId=t.reviewGroupId,this.reviewCycleName=t.reviewCycleName,this.reviewCycleStartDate=t.reviewCycleStartDate?t.reviewCycleStartDate.stringToDate():new Date,this.reviewCycleProcessSettings=new e.ReviewCycleProcessSettings(t.reviewCycleProcessSettings||{}),this.reviewCycleType=t.reviewCycleType,this.calibrationSettings=new e.CalibrationSettingsView(t.calibrationSettings||{}),this.reviewCycleCategory=t.reviewCycleCategory,this.isFormSetupCompleted=t.isFormSetupCompleted}}();e.ReviewCycleProcessSettingsView=I;var A=function(){return function(e){this.performanceBands=[],this.enableCalibration=e.enableCalibration||!1,this.usePerformanceBands=e.usePerformanceBands,this.performanceBands=e.performanceBands||new Array}}();e.CalibrationSettingsView=A;var E=function(){return function(e){this.id=e.id,this.reviewCycleId=e.reviewCycleId,this.order=e.order||1,this.name=e.name,this.label=e.label,this.description=e.description}}();e.PerformanceBand=E;var R=function(){return function(t){this.reviewerObjectiveWeightageConfig=[],this.reviewFormQuestions=[],this.id=t.id,this.reviewGroupId=t.reviewGroupId,this.reviewCycleName=t.reviewCycleName,this.reviewFormSettings=new e.ReviewFormSettings(t.reviewFormSettings),this.reviewFormQuestions=t.reviewFormQuestions,this.reviewerObjectiveWeightageConfig=t.reviewerObjectiveWeightageConfig,this.reviewerObjectiveWeightageConfig.map(function(t){new e.ReviewerObjectiveWeightageConfigView(t)}),this.reviewFormQuestions.map(function(t){new e.ReviewFormQuestion(t)})}}();e.ReviewFormSettingsView=R;var x=function(){return function(e){this.reviewObjectiveWeightageConfiguration=[],this.isValid=!1,this.isSelectedInReviewObjective=!1,this.reviewerType=e.reviewerType,this.reviewerTypeName=e.reviewerTypeName,this.reviewerTypeIdentifier=e.reviewerTypeIdentifier,this.reviewObjectiveWeightageConfiguration=e.reviewObjectiveWeightageConfiguration||[],this.totalWeightage=e.totalWeightage,this.isValid=!1,this.isSelectedInReviewObjective=e.isSelectedInReviewObjective}}();e.ReviewerObjectiveWeightageConfigView=x;var M=function(){return function(e){this.id=e.id,this.employeeNumber=e.employeeNumber,this.employeeName=e.employeeName,this.jobTitle=e.jobTitle,this.locationId=e.locationId,this.location=e.location,this.departmentId=e.departmentId,this.department=e.department,this.reportingTo=e.reportingTo,this.dateJoined=e.dateJoined}}();e.ReviewGroupUnAssignedEmployeeReport=M;var N=function(){return function(t){this.reviewStepLog=[],this.reviewProcessSteps=[],this.id=t.id,this.reviewGroupId=t.reviewGroupId,this.reviewCycleId=t.reviewCycleId,this.cycleName=t.cycleName,this.employeeId=t.employeeId,this.displayName=t.displayName,this.employeeNumber=t.employeeNumber,this.profileImageUrl=t.profileImageUrl,this.jobTitle=t.jobTitle,this.cycleStartDate=t.cycleStartDate,this.status=t.status,this.reviewCalibrationStatus=t.reviewCalibrationStatus,this.reviewReleaseStatus=t.reviewReleaseStatus,this.currentStepIdentifier=t.currentStepIdentifier,this.reviewStepLog=t.reviewStepLog,this.reviewProcessSteps=t.reviewProcessSteps,this.reviewOverride=t.reviewOverride?new e.ReviewOverride(t.reviewOverride):null,this.overallRating=t.overallRating,this.bandLabel=t.bandLabel}}();e.EmployeeReviewSummaryView=N;var O=function(){return function(e){this.name=e.name,this.description=e.description,this.reviewStepType=e.reviewStepType,this.stepIdentifier=e.stepIdentifier,this.stepStartDate=e.stepStartDate,this.stepDuration=e.stepDuration,this.actualStepEndDate=e.actualStepEndDate,this.stepEndDate=e.stepEndDate}}();e.ReviewStepLog=O;var k=function(){return function(e){this.id=e.id,this.reviewGroupId=e.reviewGroupId,this.reviewCycleId=e.reviewCycleId,this.cycleName=e.cycleName,this.employeeId=e.employeeId,this.displayName=e.displayName,this.jobTitle=e.jobTitle,this.employeeNumber=e.employeeNumber,this.profileImageUrl=e.profileImageUrl,this.cycleStartDate=e.cycleStartDate,this.startDate=e.startDate,this.status=e.status,this.reviewReleaseStatus=e.reviewReleaseStatus,this.overallRating=e.overallRating,this.bandLabel=e.bandLabel,this.currentStepType=e.currentStepType,this.currentStepEndDate=e.currentStepEndDate,this.canEmployeeSubmit=e.canEmployeeSubmit,this.canViewNominaitonsSummary=e.canViewNominaitonsSummary,this.isSelfRatingSubmitted=e.isSelfRatingSubmitted,this.waitingOn=e.waitingOn,this.reviewProgress=e.reviewProgress,this.finalRatingVisibilityTypes=e.finalRatingVisibilityTypes}}();e.EmployeeReviewLookUpView=k;var F=function(){return function(e){this.employeeId=e.employeeId,this.displayName=e.displayName,this.profileImageUrl=e.profileImageUrl,this.jobTitle=e.jobTitle,this.status=e.status,this.currentStepType=e.currentStepType,this.reviewCycleId=e.reviewCycleId,this.isApprover=e.isApprover}}();e.ReviewerPendingReviewsView=F;var $=function(){return function(e){this.reviewerType=e.reviewerType,this.reviewerTypeName=e.reviewerTypeName,this.reviewerTypeIdentifier=e.reviewerTypeIdentifier,this.maximumNumberOfReviewersAllowed=e.maximumNumberOfReviewersAllowed}}();e.NominationStepParticipantConfiguration=$;var G=function(){return function(e){this.reviewerName=e.reviewerName,this.isNominationsSubmitted=e.isNominationsSubmitted,this.submittedOn=e.submittedOn,this.dueDate=e.dueDate,this.dueInDays=Math.ceil((new Date(e.dueDate).getTime()-(new Date).getTime())/864e5),this.duration=Math.abs(this.dueInDays)}}();e.NominationCurrentReviewerStatusView=G;var L=function(){return function(e,t){this.unit=e,this.duration=t}}();e.TimePeriod=L}(e.Model||(e.Model={}))}(PMS||(PMS={}));__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(t){var i=function(){function t(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h){var f=this;this._stateParams=e,this._q=t,this._filter=i,this._modalInstance=n,this.notificationService=o,this.appContext=r,this.reviewStatus=a,this.reviewerType=s,this.reviewStepType=l,this.dialogs=c,this.reviewAdministrationService=p,this.state=u,this.scope=d,this.reviewLogItemType=m,this.modalService=y,this.reviewCalibrationStatus=h,this._isStepComplete=!1,this.currentDate=new Date,this.canInitiateReview=!1,this.employeeId=this._stateParams.employeeId,this.cycleId=this._stateParams.cycleId,this.getReviewData(),this.scope.$on("pms:refreshCurrentReview",function(){f.getReviewData()})}return Object.defineProperty(t.prototype,"isStepCompleted",{get:function(){var t=this;if(this.reviewSummary.status==e.Model.ReviewStatus.NotStarted)return this._isStepComplete=!1;var i=this.reviewSummary.reviewProcessSteps.findIndex(function(e){return e.identifier==t.reviewSummary.currentStepIdentifier});return this.reviewSummary.reviewProcessSteps.findIndex(function(e){return e.identifier==t.currentStep.identifier})<=i},set:function(e){this._isStepComplete=e},enumerable:!0,configurable:!0}),t.prototype.getReviewData=function(){var t=this;this.reviewAdministrationService.getReviewSummary(this.cycleId,this.employeeId).then(function(i){t.reviewSummary=new e.Model.EmployeeReviewSummaryView(i),t.setReviewProcessSteps(),t.reviewSummary.status==e.Model.ReviewStatus.NotStarted&&t.canInitiateReviews()})},t.prototype.canInitiateReviews=function(){var e=this;this.reviewAdministrationService.canInitiateReviews(this.reviewSummary.reviewGroupId,this.reviewSummary.reviewCycleId).then(function(t){e.canInitiateReview=t.canInitiateReviews})},t.prototype.setReviewProcessSteps=function(){var t=this,i=this.reviewSummary.reviewProcessSteps.findIndex(function(e){return e.identifier==t.reviewSummary.currentStepIdentifier});this.reviewSummary.reviewProcessSteps.forEach(function(e,n){if(e.isStepCompleted=-1!=i&&n<i,e.isStepCompleted){var o=t.reviewSummary.reviewStepLog.find(function(t){return t.stepIdentifier==e.identifier});e.stepEndDate=o?o.stepEndDate:null}}),this.currentStep=this.reviewSummary.currentStepIdentifier?this.reviewSummary.reviewProcessSteps.find(function(e){return e.identifier==t.reviewSummary.currentStepIdentifier}):new e.Model.ReviewProcessStep({})},t.prototype.startReview=function(){var e=this;this.dialogs.confirm("Confirm Review initiation (for "+this.reviewSummary.displayName+")","This will send an email notification to all the people responsible for taking next steps in the review process").result.then(function(){e.reviewAdministrationService.startReview(e.reviewSummary.id).then(function(t){t.result.length>0?e.showErrors(t.result).result.finally(function(){e._modalInstance.close()}):(e.notificationService.success("Review process started successfully"),e._modalInstance.close())},function(t){e.notificationService.error("Error in starting review process")})})},t.prototype.showErrors=function(e){return this.validationErrors=e,this.modalService.open({templateUrl:"review-validations-template",scope:this.scope})},t.prototype.dismissModal=function(){this.scope.$emit("reviewsCountUpdated",{})},t.$inject=["$stateParams","$q","$filter","$uibModalInstance","NotificationService","AppContext","ReviewStatus","ReviewerType","ReviewStepType","dialogs","ReviewAdministrationService","$state","$scope","ReviewLogItemType","$uibModal","ReviewCalibrationStatus"],t}();t.EmployeeReviewSummaryController=i;var n=function(){function e(e,t){this.reviewAdminstrationService=e,this.reviewLogItemType=t}return e.prototype.$onInit=function(){var e=this;this.reviewAdminstrationService.getEmployeeReviewActivity(this.reviewId).then(function(t){e.currentReview=t})},e.prototype.getStepName=function(e){var t=this.reviewSummary.reviewProcessSteps.find(function(t){return t.identifier==e});return t?t.name:""},e.prototype.getLogTypeAction=function(e){return e.type==this.reviewLogItemType.ReviewersApprovedRejected.id?0==e.participants.length?"approved without nominations":"":e.type==this.reviewLogItemType.ReviewersNominated.id&&0==e.participants.length?"submitted without nominations":this.reviewLogItemType.getById(e.type).action},e.$inject=["ReviewAdministrationService","ReviewLogItemType"],e}();t.ReviewActivityController=n;var o=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f){var g=this;this._scope=t,this._stateParams=i,this._state=n,this._q=o,this._modal=r,this.utilService=a,this.performanceService=s,this.appContext=l,this.nominationRequestStatus=c,this.notificationService=p,this.reviewerType=u,this.reviewStatus=d,this.dialogs=m,this.publicProfileServices=y,this.filter=h,this.isApprover=f,this.nominationRequests=[],this.filteredRequests=[],this.nominationStepParticipants=[],this.availableReviewerTypes=[],this.reviewers=[],this.currentReviewers=[],this.getMatchedEmployees=function(e){var t=g.nominationRequests.map(function(e){return e.nominatedEmployeeId});return g.utilService.getMatchedEmployeesExcluding(e,t)},this.getReviewerType=function(e){return g.reviewers.find(function(t){return t.reviewerType==e}).reviewerTypeName},this.isRequestApproved=function(e){return null!=e.log.find(function(e){return e.approverId==g.currentUser.id})},this.showReviewerForm=function(){g.selectedEmployee=null,g.selectedReviewerType=null,g.availableReviewerTypes=g.reviewers.filter(function(t){return g.nominationRequests.filter(function(i){return i.typeIdentifier==t.reviewerTypeIdentifier&&i.status!=e.Model.NominationRequestStatus.Rejected}).length<t.maximumNumberOfReviewersAllowed}),1==g.availableReviewerTypes.length&&(g.selectedReviewerType=g.availableReviewerTypes[0]),g.nominationRequest=new e.Model.ReviewerNomination({nominatedBy:g.currentUser.id,nominatedByEmployee:g.currentUser.displayName,employeeId:g.employeeProfile.id}),g.modalInstance=g._modal.open({templateUrl:"add-reviewer-template",scope:g._scope})},this.canAddReviewers=function(){return g.reviewers.some(function(t){return g.nominationRequests.filter(function(i){return i.typeIdentifier==t.reviewerTypeIdentifier&&i.status!=e.Model.NominationRequestStatus.Rejected}).length<t.maximumNumberOfReviewersAllowed})},this.setReviewer=function(e){g.selectedEmployee=e,-1==g.nominationRequests.map(function(e){return e.nominatedEmployeeId}).indexOf(e.id)?(g.nominationRequest.nominatedEmployeeId=e.id,g.nominationRequest.nominatedEmployee=e.displayName,g.nominationRequest.jobTitle=e.jobTitle,g.nominationRequest.profileImageUrl=e.profileImageUrl):g.notificationService.error("Selected employee is already nominated for this review.")},this.getApprovers=function(e){if(e&&e.log&&e.log.length>0){if(e.status==g.nominationRequestStatus.Rejected.id){var t=e.log.find(function(e){return e.status==g.nominationRequestStatus.Rejected.id});return t?t.approverName:""}return e.log.filter(function(e){return e.status==g.nominationRequestStatus.Approved.id}).map(function(e){return e.approverName}).join(", ")}},this.addReviewer=function(){g.addReviewerForm.reviewerForm.$valid&&(g.nominationRequest.nomineeType=g.selectedReviewerType.reviewerType,g.nominationRequest.typeIdentifier=g.selectedReviewerType.reviewerTypeIdentifier,g.nominationRequest.status=g.isApprover?g.nominationRequestStatus.Approved.id:g.nominationRequestStatus.Pending.id,g.nominationRequests.push(g.nominationRequest),g.filterRequests(),g.modalInstance.close())},this.removeReviewer=function(e){var t=g.nominationRequests.map(function(e){return e.nominatedEmployeeId}).indexOf(e);g.nominationRequests.splice(t,1),g.filterRequests()},this.getNotificationMessage=function(){var t="",i=g.filter("groupBy")(g.nominationRequests.filter(function(t){return t.status==e.Model.NominationRequestStatus.Pending||t.status==e.Model.NominationRequestStatus.Approved}),"nominatedEmployeeId"),n=g.filter("unique")(g.nominationRequests.filter(function(t){return(t.status==e.Model.NominationRequestStatus.Pending||t.status==e.Model.NominationRequestStatus.Approved)&&i[t.nominatedEmployeeId].length>1}),"nominatedEmployeeId");if(n.length>0)n.forEach(function(e,i){t=(t=t.concat(e.nominatedEmployee)).concat(i==n.length-1?"":n.length>1&&i==n.length-2?" and ":", ")}),t=t.concat(" have been nominated multiple times");else{var o=g.reviewers.filter(function(t){return t.maximumNumberOfReviewersAllowed<g.nominationRequests.filter(function(i){return i.nomineeType==t.reviewerType&&(i.status==e.Model.NominationRequestStatus.Pending||i.status==e.Model.NominationRequestStatus.Approved)}).length});t="You can only ".concat(g.isApprover?"approve":"nominate").concat(" up to "),o.forEach(function(i,n){i.maximumNumberOfReviewersAllowed<g.nominationRequests.filter(function(t){return t.nomineeType==i.reviewerType&&(t.status==e.Model.NominationRequestStatus.Pending||t.status==e.Model.NominationRequestStatus.Approved)}).length&&(t=(t=t.concat(o.length>1&&n==g.reviewers.length-1?" and ":"")).concat(i.maximumNumberOfReviewersAllowed+" "+i.reviewerTypeName))})}return t},this.filterRequests=function(){g.filteredRequests=g.filter("filter")(g.nominationRequests,g.filterText,!1)},this.openRejectForm=function(e){g.comments=null,g.rejectCommentsModalInstance=g._modal.open({templateUrl:"reject-template",scope:g._scope,backdrop:!1,keyboard:!1}),g.rejectCommentsModalInstance.result.then(function(t){var i=g.nominationRequests.find(function(t){return t.id==e});null!=i&&(t?i.comments=g.comments:i.status=g.nominationRequestStatus.Approved.id)})},this.isNominationRequestsValid=function(){return g.reviewers.every(function(t){return t.maximumNumberOfReviewersAllowed>=g.nominationRequests.filter(function(i){return i.nomineeType==t.reviewerType&&(i.status==e.Model.NominationRequestStatus.Pending||i.status==e.Model.NominationRequestStatus.Approved)}).length})&&!g.nominationRequests.some(function(t){return g.nominationRequests.filter(function(i){return(i.status==e.Model.NominationRequestStatus.Pending||i.status==e.Model.NominationRequestStatus.Approved)&&i.nominatedEmployeeId==t.nominatedEmployeeId}).length>1})},this.rejectReviewer=function(){g.rejectForm.rejectForm.$valid&&g.rejectCommentsModalInstance.close(!0)},this.getRequestStatus=function(e){return g.nominationRequestStatus.getById(e).name},this.employeeId=this._stateParams.employeeId,this.cycleId=this._stateParams.cycleId,this.isSelf=!this.employeeId,this.isApprover=!this.isApprover||this.isApprover}return t.prototype.$onInit=function(){var t=this;if(!this.reviewSummary||this.reviewSummary.status!=e.Model.ReviewStatus.NotStarted&&this.reviewSummary.status!=e.Model.ReviewStatus.Nominating&&this.reviewSummary.status!=e.Model.ReviewStatus.InNominationApproval){var i=this.isSelf?this.performanceService.getNominationConfigurationDetails(this.cycleId):this.isApprover?this.performanceService.getNominationRequestDetails(this.cycleId,this.employeeId):this.performanceService.getNominationConfigurationDetails(this.cycleId,this.employeeId);this._q.all([this.appContext.currentUser(),i]).then(function(i){t.currentUser=i[0],t.employeeProfile=i[1].employeeProfile,t.nominationRequests=i[1].nominationRequests?i[1].nominationRequests:[],t.filteredRequests=t.nominationRequests,t.reviewers=i[1].reviewers.map(function(t){return new e.Model.NominationStepParticipantConfiguration(t)}),t.currentReviewers=i[1].currentReviewers?i[1].currentReviewers.map(function(t){return new e.Model.NominationCurrentReviewerStatusView(t)}):[],t.nominationRequests.forEach(function(e){e.nomineeTypeName=t.reviewers.find(function(t){return t.reviewerType==e.nomineeType}).reviewerTypeName})})}else this.performanceService.getNominationStepParticipants(this.employeeId,this.cycleId).then(function(e){t.nominationStepParticipants=e})},t.prototype.submit=function(e){var t=this;this.isNominationRequestsValid()?this.isApprover?this.nominationRequests.some(function(e){return!e.status||e.status!=t.nominationRequestStatus.Approved.id&&e.status!=t.nominationRequestStatus.Rejected.id})?this.notificationService.error("Please set status for all requests"):this.dialogs.confirm("Please confirm","Are you sure you want to submit?").result.then(function(){t.performanceService.approveNominationRequests(t.employeeId,t.cycleId,t.nominationRequests).then(function(i){i.isApproved?(t.notificationService.success("Nominations updated successfully."),t._scope.$emit("pms:refreshCurrentReview"),e&&e.close()):t.notificationService.error("Error while approving reviewer nominations.")},function(e){t.notificationService.error(e.data.message)})}):this.dialogs.confirm("Please confirm","Are you sure you want to submit?").result.then(function(){t.performanceService.saveNominationRequests(t.employeeId,t.cycleId,t.nominationRequests).then(function(i){i.isSaved?(t.notificationService.success("Reviewer Nominations saved successfully."),e&&e.close()):t.notificationService.error("Error while saving reviewer nominations.")},function(e){t.notificationService.error(e.data.message)})}):this.dialogs.notify("Application Notification",this.getNotificationMessage().concat("."))},t.$inject=["$scope","$stateParams","$state","$q","$uibModal","Utils","PMSEmployeeService","AppContext","NominationRequestStatus","NotificationService","ReviewerType","ReviewStatus","dialogs","PublicProfileServices","$filter"],t}();t.NominateReviewersController=o;var r=function(e){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g){var v=e.call(this,t,i,n,o,r,s,l,c,p,u,d,m,y,h,f,g)||this;return v._scope=t,v._stateParams=i,v._state=n,v._q=o,v._modal=r,v._modalInstance=a,v.utilService=s,v.performanceService=l,v.appContext=c,v.nominationRequestStatus=p,v.notificationService=u,v.reviewerType=d,v.reviewStatus=m,v.dialogs=y,v.publicProfileServices=h,v.filter=f,v.isApprover=g,v}return __extends(t,e),t.prototype.submit=function(){e.prototype.submit.call(this,this._modalInstance)},t.$inject=["$scope","$stateParams","$state","$q","$uibModal","$uibModalInstance","Utils","PerformanceService","AppContext","NominationRequestStatus","NotificationService","ReviewerType","ReviewStatus","dialogs","PublicProfileServices","$filter","IsApprover"],t}(o);t.NominateReviewersModalController=r;var a=function(){function t(e,t,i,n,o,r,a,s,l,c,p,u){var d=this;this._scope=e,this._stateParams=t,this._state=i,this._q=n,this._modal=o,this.utilService=r,this.performanceService=a,this.appContext=s,this.nominationRequestStatus=l,this.notificationService=c,this.reviewerType=p,this.reviewStatus=u,this.nominationRequests=[],this.reviewers=[],this.isPastReviewSummary=!0,this.nominationStepParticipants=[],this.getReviewerType=function(e){if(d.reviewers.length>0)return d.reviewers.find(function(t){return t.isAdditionalReviewer&&t.reviewerType==e}).name},this.isRequestApproved=function(e){return null!=e.log.find(function(e){return e.approverId==d.currentUser.id})},this.getApprovers=function(e){if(e&&e.log&&e.log.length>0){if(e.status==d.nominationRequestStatus.Rejected.id){var t=e.log.find(function(e){return e.status==d.nominationRequestStatus.Rejected.id});return t?t.approverName:""}return e.log.filter(function(e){return e.status==d.nominationRequestStatus.Approved.id}).map(function(e){return e.approverName}).join(", ")}},this.getRequestStatus=function(e){return d.nominationRequestStatus.getById(e).name},this.employeeId=this._stateParams.employeeId,this.cycleId=this._stateParams.cycleId}return t.prototype.$onInit=function(){var t=this;this.reviewSummary.status!=e.Model.ReviewStatus.NotStarted&&this.reviewSummary.status!=e.Model.ReviewStatus.Nominating&&this.reviewSummary.status!=e.Model.ReviewStatus.InNominationApproval?this._q.all([this.performanceService.getPastNominationRequestDetails(this.employeeId,this.cycleId),this.performanceService.getCurrentCycleReview(this.cycleId,this.employeeId)]).then(function(i){t.nominationRequests=i[0],t.currentReview=new e.Model.EmployeeReview(i[1]),t.reviewers=t.currentReview.reviewCycleProcessSettings.reviewers}):this.performanceService.getNominationStepParticipants(this.employeeId,this.cycleId).then(function(e){t.nominationStepParticipants=e})},t.$inject=["$scope","$stateParams","$state","$q","$uibModal","Utils","PMSEmployeeService","AppContext","NominationRequestStatus","NotificationService","ReviewerType","ReviewStatus"],t}();t.PastReviewNominationRequestsController=a;var s=function(){function t(t,i,n,o,r,a,s,l,c,p,u,d,m){var y=this;this.scope=t,this._stateParams=i,this._state=n,this._q=o,this.appContext=r,this.publicProfileServices=a,this.notificationService=s,this.reviewerType=l,this.reviewStatus=c,this.reviewStepType=p,this.dialogs=u,this.myPerformanceService=d,this.employeeReviewDataService=m,this.participants=[],this.today=new Date,this.submitted=!1,this.getReviewMeetingSummary=function(){(y.isSelf?y._q.all([y.appContext.currentUser(),y.myPerformanceService.getOngoingMeetingSummary(y.cycleId)]):y._q.all([y.employeeReviewDataService.getEmployeeProfile(y.employeeId),y.employeeReviewDataService.getOngoingMeetingSummary(y.cycleId,y.employeeId)])).then(function(t){y.employeeProfile=t[0],y.reviewMeeting=new e.Model.EmployeeReviewMeeting(t[1]),y.reviewMeeting.id?y.participants=y.reviewMeeting.participants:y.setData()})},this.setData=function(){y.reviewMeeting=new e.Model.EmployeeReviewMeeting({meetingDate:new Date}),(y.isSelf?y.myPerformanceService.getMyReviewMeetingParticipants(y.cycleId):y.employeeReviewDataService.getReviewMeetingParticipants(y.cycleId,y.employeeId)).then(function(e){y.mapPartcipants(e)})},this.getParticipants=function(){var t=new Array;return y.participants.forEach(function(i){if(!t.some(function(e){return e.employeeId==i.id})){var n=y.getReviewerType(i.id);t.push(new e.Model.ReviewMeetingParticipant({reviewerType:n,employeeId:i.id,isPresent:i.isPresent}))}}),t},this.getReviewerType=function(e){return e==y.employeeProfile.id?y.reviewerType.self.id:e==y.employeeProfile.reportingTo?y.reviewerType.reportingManager.id:e==y.employeeProfile.l2ManagerId?y.reviewerType.managerOfManager.id:e==y.employeeProfile.departmentHeadId?y.reviewerType.departmentHead.id:void 0},this.employeeId=this._stateParams.employeeId,this.cycleId=this._stateParams.cycleId,this.isSelf=!this.employeeId,this.getReviewMeetingSummary()}return t.prototype.$onInit=function(){},t.prototype.mapPartcipants=function(e){this.participants=e,1==this.participants.length&&(this.participants[0].isPresent=!0)},t.prototype.submit=function(e){var t=this;this.form.reviewMeeting.$valid?this.participants.some(function(e){return!!e.isPresent})?this.dialogs.confirm("Please confirm","Are you sure you want to submit?").result.then(function(){t.reviewMeeting.participants=t.reviewMeeting.id?t.reviewMeeting.participants:t.getParticipants(),(t.isSelf?t.myPerformanceService.saveReviewMeeting(t.cycleId,t.reviewMeeting):t.employeeReviewDataService.saveReviewMeeting(t.cycleId,t.employeeId,t.reviewMeeting)).then(function(i){i&&i.isSaved?(t.scope.$emit("pms:refreshCurrentReview"),t.submitted=!1,t.notificationService.success("Review meeting submitted successfully."),e?e.close():t.getReviewMeetingSummary()):t.notificationService.error("You can not submit this meeting summary as this step is completed by some other reviewer, Please close the page and try again.")})}):this.notificationService.success("Please select atleast one participant"):this.submitted=!0},t.prototype.draftMeetingSummary=function(e){var t=this;this.reviewMeeting.participants=this.reviewMeeting.id?this.reviewMeeting.participants:this.getParticipants(),(this.isSelf?this.myPerformanceService.draftReviewMeeting(this.cycleId,this.reviewMeeting):this.employeeReviewDataService.draftReviewMeeting(this.cycleId,this.employeeId,this.reviewMeeting)).then(function(e){e&&e.isDraft?(t.scope.$emit("pms:refreshCurrentReview"),t.getReviewMeetingSummary(),t.notificationService.success("Review meeting saved successfully.")):t.notificationService.error("You can not Save this meeting summary as this step is completed by some other reviewer, Please reload the page and try again.")})},t.$inject=["$scope","$stateParams","$state","$q","AppContext","PublicProfileServices","NotificationService","ReviewerType","ReviewStatus","ReviewStepType","dialogs","MyPerformanceService","PMSEmployeeService"],t}();t.ReviewMeetingBaseController=s;var l=function(e){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y){var h=e.call(this,t,i,n,o,s,l,c,p,u,d,m,y,a)||this;return h.scope=t,h._stateParams=i,h._state=n,h._q=o,h._modalInstance=r,h.employeeReviewDataService=a,h.appContext=s,h.publicProfileServices=l,h.notificationService=c,h.reviewerType=p,h.reviewStatus=u,h.reviewStepType=d,h.dialogs=m,h.myPerformanceService=y,h}return __extends(t,e),t.prototype.submit=function(){e.prototype.submit.call(this,this._modalInstance)},t.prototype.draftMeetingSummary=function(){e.prototype.draftMeetingSummary.call(this,this._modalInstance)},t.$inject=["$scope","$stateParams","$state","$q","$uibModalInstance","EmployeeReviewDataService","AppContext","PublicProfileServices","NotificationService","ReviewerType","ReviewStatus","ReviewStepType","dialogs","MyPerformanceService"],t}(s);t.ReviewMeetingModalController=l;var c=function(){function t(t,i,n,o,r,a){this.reviewAdministrationService=t,this.reviewerType=i,this.pmsEmployeeService=n,this.notificationService=o,this.scope=r,this.dialogs=a,this.today=new Date,this.reviewerTypeLookup=e.Model.ReviewerType,this.peoplePresentInMeeting=[],this.peopleNotPresentInMeeting=[]}return t.prototype.$onInit=function(){},t.prototype.$onChanges=function(e){this.currentStep=e.currentStep.currentValue,this.setMeetingSummary()},t.prototype.setMeetingSummary=function(){var t=this;this.isStepComplete?this.reviewAdministrationService.getReviewMeetingSummary(this.reviewSummary.id,this.currentStep.identifier).then(function(i){t.meetingSummary=new e.Model.EmployeeReviewMeeting(i),t.setParticipants()}):this.reviewAdministrationService.getCurrentStepParticipants(this.reviewSummary.id,this.currentStep.identifier).then(function(e){t.peopleInvolved=e})},t.prototype.setParticipants=function(){this.peoplePresentInMeeting=this.meetingSummary.participants.filter(function(e){return e.isPresent}),this.peopleNotPresentInMeeting=this.meetingSummary.participants.filter(function(e){return!e.isPresent})},t.$inject=["ReviewAdministrationService","ReviewerType","PMSEmployeeService","NotificationService","$scope","dialogs"],t}();t.ReviewMeetingSummaryController=c;var p=function(){function t(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h){void 0===r&&(r=!1),this.scope=e,this.state=t,this.stateParams=i,this.notificationService=n,this.employeeReviewDataService=o,this.isEdit=r,this.appContext=a,this.ratingIcons=s,this.appSettings=l,this.reviewObjectives=c,this.feedbackService=p,this.reviewResponseType=u,this.filter=d,this.pmsSettings=m,this.dialogService=y,this.reviewerTypes=h,this.reviewRatingTransactions=[],this.reviewRatings=[],this.completedReviewRatings=[],this.myRatingTransactions=[],this.otherEmployeeRatingTransactions=[],this.employeeFeedbacks=[],this.reviewRatingGroup={},this.totalWeightage=0,this.showReadonlyForm=!1,this.isStepComplete=!0,this.employeeId=this.stateParams.employeeId,this.cycleId=this.stateParams.cycleId,this.setProgressOptions(),this.getReviewDetails()}return Object.defineProperty(t.prototype,"isAllRatingsCompleted",{get:function(){return 0===this.reviewRatingTransactions.filter(function(e){return!e.isCompleted}).length&&(!this.myRating||!this.myRating.originalGivenRating||!this.employeeReview.areCommentsMandatoryForOverriddenRating||this.myRating.originalGivenRating>=0&&this.myRating.originalGivenRating<=this.pmsSettings.reviewSettings.globalRatingScale&&this.myRating.comments)},enumerable:!0,configurable:!0}),t.prototype.getReviewDetails=function(){var t=this,i=this.employeeId?this.employeeReviewDataService.getReviewRatingTransactionDetails(this.cycleId,this.employeeId):this.employeeReviewDataService.getReviewRatingTransactionDetails(this.cycleId);this.showReadonlyForm=!this.isEdit,i.then(function(i){t.employeeReview=new e.Model.ReviewSummary(i),t.setReviewRatings(),t.setRatingTransactions(),(!t.showReadonlyForm||t.employeeReview.reviewRatings.filter(function(e){return e.reviewerId==t.appContext.myPublicProfile.id}).length>0)&&t.setObjectiveOtherRatingTransactions()})},t.prototype.setReviewRatings=function(){var e=this;this.reviewRatings=this.filter("orderBy")(this.employeeReview.reviewRatings,"id"),this.myRating=this.reviewRatings.find(function(t){return t.reviewerId==e.appContext.myPublicProfile.id}),this.otherReviewerRatings=this.reviewRatings.filter(function(t){return t.reviewerId!=e.appContext.myPublicProfile.id}),this.completedReviewRatings=angular.copy(this.reviewRatings.filter(function(t){return!(t.isDraft||e.isEdit&&t.reviewerId==e.appContext.myPublicProfile.id)}))},t.prototype.setObjectiveOtherRatingTransactions=function(){var e=this;this.employeeReview.reviewObjectiveWeightageConfig.forEach(function(t){t.otherReviewerRatingTransactions=e.employeeReview.reviewRatingTransactions.filter(function(i){return i.reviewerId!=e.appContext.myPublicProfile.id&&i.reviewObjective==t.reviewObjective&&0==e.reviewRatingTransactions.filter(function(e){return e.reviewObjectiveId==i.reviewObjectiveId&&e.reviewObjectiveGroupId==i.reviewObjectiveGroupId}).length}),t.otherReviewerRatingTransactions.forEach(function(t){t=e.setRatingTransactionDetails(t)})})},t.prototype.setRatingTransactions=function(){var e=this;this.myRatingTransactions=this.employeeReview.reviewRatingTransactions.filter(function(t){return t.reviewerId==e.appContext.myPublicProfile.id}),this.otherEmployeeRatingTransactions=this.employeeReview.reviewRatingTransactions.filter(function(t){return t.reviewerId!=e.appContext.myPublicProfile.id}),this.myRatingTransactions.forEach(function(t){t.otherEmployeeRatings=e.getOtherEmployeeRatings(t.reviewObjective,t.reviewObjectiveId,t.reviewObjectiveGroupId),t.isEdit=e.isEdit,t=e.setRatingTransactionDetails(t),e.reviewRatingTransactions.push(t)})},t.prototype.setRatingTransactionDetails=function(t){var i=this;if(t.responseType==e.Model.ReviewResponseType.Rating&&this.employeeReview.ratingScales.length>0){var n=t.ratingScaleId?new e.Model.RatingScale(this.employeeReview.ratingScales.find(function(e){return e.id==t.ratingScaleId})):null;t.ratingScale=n}return t.objectiveComponents.forEach(function(e){e.isEdit=i.isEdit}),t},t.prototype.setProgressOptions=function(){this.progressOptions=angular.copy(this.appSettings.progressOptions),this.progressOptions.strokeWidth=12,this.progressOptions.trailWidth=10,this.progressOptions.text.style.fontSize="9px",this.progressOptions.text.style.color="#43A0EA",this.progressOptions.text.style.top="12px"},t.prototype.getObjectiveRatings=function(e){var t=e||this.currentView;return this.reviewRatingTransactions.filter(function(e){return e.reviewObjective==t})},t.prototype.getTotalRatingCount=function(e){return this.getObjectiveRatings(e).length},t.prototype.getCompletedRatings=function(e){var t=this.getObjectiveRatings(e);return this.showReadonlyForm&&this.currentStep.isStepCompleted?t.length:t.filter(function(e){return e.isCompleted}).length},t.prototype.getPendingRatings=function(e){return this.getObjectiveRatings(e).filter(function(e){return!e.isCompleted}).length},t.prototype.getAutoCalculatedRating=function(){var t=this;if(this.employeeReview){this.totalWeightage=0;var i=0;return this.reviewRatingGroup=this.filter("groupBy")(this.reviewRatingTransactions,"reviewObjective"),this.employeeReview.reviewObjectiveWeightageConfig.forEach(function(i){if(i.reviewObjective==e.Model.ReviewObjective.ReviewForm||i.responseType==e.Model.ReviewResponseType.Rating){var n=t.reviewRatingGroup[i.reviewObjective];if(i.reviewObjective==e.Model.ReviewObjective.Competencies)for(var o in t.employeeReview.jobFunctions){var r=t.employeeReview.jobFunctions[o];if(!n){t.totalWeightage=t.totalWeightage+i.weightage;break}var a=n.filter(function(e){return e.reviewObjectiveGroupId==r.jobFunctionId});if(!a.length||a.some(function(e){return e.autoCalculatedRating>0})||!a.every(function(e){return 0==e.autoCalculatedRating})){t.totalWeightage=t.totalWeightage+i.weightage;break}}else i.reviewObjective!=e.Model.ReviewObjective.ReviewForm||n&&(!n||!n.some(function(e){return e.autoCalculatedRating>0})&&0!=n.filter(function(t){return t.responseType==e.Model.ReviewResponseType.Rating}).length)?(n&&n.some(function(e){return e.autoCalculatedRating>0})||!n)&&(t.totalWeightage=t.totalWeightage+i.weightage):t.totalWeightage=t.totalWeightage+i.weightage}}),this.employeeReview.reviewObjectiveWeightageConfig.forEach(function(n){if(n.reviewObjective==e.Model.ReviewObjective.ReviewForm||n.responseType==e.Model.ReviewResponseType.Rating){var o=n.weightage;i=t.totalWeightage>0?i+t.getAverageRating(n.reviewObjective)*(o/t.totalWeightage):i}}),i}},t.prototype.getAverageRating=function(t){var i=this,n=this.getObjectiveRatings(t);if(0==n.filter(function(t){return t.responseType==e.Model.ReviewResponseType.Rating}).length)return 0;var o=n.filter(function(e){return e.isCompleted}),r=0,a=0,s=0;return t==e.Model.ReviewObjective.Competencies&&this.employeeReview.jobFunctions.forEach(function(e){var t=o.filter(function(t){return t.reviewObjectiveGroupId==e.jobFunctionId}),i=o.filter(function(t){return t.autoCalculatedRating>0&&t.reviewObjectiveGroupId==e.jobFunctionId});s+=!t.length||i.length?e.jobFunctionWeightage:0}),o.forEach(function(n){if(!n.ratingNotApplicable){var l=0;if(t!=e.Model.ReviewObjective.Competencies||0!=n.objectiveComponents.length&&n.objectiveComponents.every(function(e){return e.ratingNotApplicable}))l=n.originalGivenRating>0?n.originalGivenRating:n.autoCalculatedRating;else{var c=i.employeeReview.jobFunctions.filter(function(e){return n.reviewObjectiveGroupId==e.jobFunctionId})[0],p=o.filter(function(e){return e.autoCalculatedRating>0&&e.reviewObjectiveGroupId==n.reviewObjectiveGroupId&&e.reviewerId==n.reviewerId}).map(function(e){return e.weightage}).reduce(function(e,t){return e+t});if(null!=c){var u=n.weightage/p*(c.jobFunctionWeightage/s);l=n.originalGivenRating>0?n.originalGivenRating*u:n.autoCalculatedRating*u}}l>0&&(r+=l,a++)}}),t==e.Model.ReviewObjective.Competencies?r:r>0?r/a:0},t.prototype.getMyRating=function(e,t,i){return this.myRatingTransactions.find(function(n){return n.reviewObjective==e&&n.reviewObjectiveId==t&&i==n.reviewObjectiveGroupId})},t.prototype.getMyRatingComponent=function(e,t){return e?e.objectiveComponents.find(function(e){return e.componentId==t}):null},t.prototype.getOtherEmployeeRatings=function(t,i,n){var o=this,r=this.otherEmployeeRatingTransactions.filter(function(e){return e.reviewObjective==t&&e.reviewObjectiveId==i&&(!n||e.reviewObjectiveGroupId==n)});return r.forEach(function(t){t.ratingScaleId&&(t.ratingScale=new e.Model.RatingScale(o.employeeReview.ratingScales.find(function(e){return e.id==t.ratingScaleId})))}),r},t.prototype.saveEmployeeRatings=function(t){var i=this;this.dialogService.confirm("Please confirm","Once the review is submitted, you will no longer be able to make any changes. Are you sure you want to proceed?").result.then(function(){var n=new e.Model.ReviewRatingViewModel({reviewRating:i.myRating,reviewRatingTransactions:i.reviewRatingTransactions});i.employeeReviewDataService.saveReviewRatingTransactions(i.employeeReview.reviewCycleId,n,i.employeeReview.employeeId).then(function(e){e.isSaved?(i.notificationService.success("Ratings submitted successfully"),i.scope.$emit("pms:refreshCurrentReview"),i.scope.$emit("reviewsCountUpdated",{}),t&&t.close()):i.notificationService.error("You can not submit ratings against this review as this step is completed by some other reviewer, Please reload the page and try again")},function(e){i.notificationService.error("You are no longer a reviewer for this employee. Hence, you cannot save or submit the form.")})})},t.prototype.draftEmployeeRatings=function(t){var i=this,n=new e.Model.ReviewRatingViewModel({reviewRating:this.myRating,reviewRatingTransactions:this.reviewRatingTransactions});this.employeeReviewDataService.draftReviewRatingTransactions(this.employeeReview.reviewCycleId,n,this.employeeReview.employeeId).then(function(e){e.isDraft?(i.notificationService.success("Your responses in this review form are saved successfully."),t&&t.close()):i.notificationService.error("You can not submit ratings against this review as this step is completed by other reviewer, Please reload the page and try again")},function(e){i.notificationService.error("You are no longer a reviewer for this employee. Hence, you cannot save or submit the form.")})},t.$inject=["$scope","$state","$stateParams","NotificationService","ReviewAdministrationService","AppContext","RatingIcons","AppSettings","ReviewObjectives","PMSFeedbackService","ReviewResponseType","$filter","PMSSettings","dialogs","ReviewerType"],t}();t.ReviewEmployeeBaseController=p;var u=function(e){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f){var g=e.call(this,t,i,n,o,r,!1,a,s,l,c,p,u,d,y,h,m)||this;return g.scope=t,g.state=i,g.stateParams=n,g.notificationService=o,g.employeeReviewDataService=r,g.appContext=a,g.ratingIcons=s,g.appSettings=l,g.reviewObjectives=c,g.feedbackService=p,g.reviewResponseType=u,g.filter=d,g.reviewerType=m,g.pmsSettings=y,g.dialogService=h,g.reviewStatus=f,g.givenRatingSummary=[],g.isStepComplete&&g.getReviewTransactionSummary(),g}return __extends(t,e),t.prototype.getReviewTransactionSummary=function(){var e=this;this.employeeReviewDataService.getReviewTransactionSummary(this.cycleId,this.employeeId).then(function(t){t.ratingSummary&&t.ratingSummary.forEach(function(i){i.ratingTransactions=t.ratingTransactionSummary.filter(function(e){return e.reviewerId==i.reviewerId}),e.givenRatingSummary.push(i)})})},t.$inject=["$scope","$state","$stateParams","NotificationService","ReviewAdministrationService","AppContext","RatingIcons","AppSettings","ReviewObjectives","PMSFeedbackService","ReviewResponseType","$filter","ReviewerType","PMSSettings","dialogs","ReviewStatus"],t}(p);t.ReviewEmployeeReadonlyController=u;var d=function(e){function t(t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g){var v=e.call(this,t,i,n,r,a,s,l,c,p,u,d,m,y,h,f,g)||this;return v.scope=t,v.state=i,v.stateParams=n,v._modalInstance=o,v.notificationService=r,v.employeeReviewDataService=a,v.isEdit=s,v.appContext=l,v.ratingIcons=c,v.appSettings=p,v.reviewObjectives=u,v.feedbackService=d,v.reviewResponseType=m,v.filter=y,v.pmsSettings=h,v.dialogService=f,v.reviewerType=g,v}return __extends(t,e),t.prototype.saveEmployeeRatings=function(){e.prototype.saveEmployeeRatings.call(this,this._modalInstance)},t.$inject=["$scope","$state","$stateParams","$uibModalInstance","NotificationService","EmployeeReviewDataService","IsEdit","AppContext","RatingIcons","AppSettings","ReviewObjectives","PMSFeedbackService","ReviewResponseType","$filter","PMSSettings","dialogs","ReviewerType"],t}(p);t.ReviewEmployeeModalController=d;var m=function(){function e(e,t,i,n,o,r){this._scope=e,this.notificationService=t,this.lookupService=i,this.pmsSettings=n,this.reviewAdministrationService=o,this.reviewerType=r,this.performanceBands=[]}return e.prototype.getRatingsForCalibration=function(){var e=this;this.reviewAdministrationService.getRatingsForCalibration(this.reviewSummary.reviewCycleId,this.reviewSummary.employeeId).then(function(t){e.review=t,e.review.usePerformanceBands&&e.getPerformanceBands(),e.setRatings()})},e.prototype.getPerformanceBands=function(){var e=this;this.lookupService.getPerformanceBands(this.reviewSummary.reviewCycleId).then(function(t){e.performanceBands=t})},e.prototype.setRatings=function(){this.review.reviewRatings.forEach(function(e){null!=e.overallRating&&e.overallRating>=0&&(e.selectedRating=null!==e.moderatedRating&&e.moderatedRating===e.overallRating?3:e.overallRating===e.autoCalculatedRating?1:2)})},e.prototype.setRating=function(e,t){e.overallRating=t,e.moderatedRating=3!=e.selectedRating?null:e.moderatedRating},e.prototype.$onInit=function(){this.getRatingsForCalibration()},e.prototype.validateWeightage=function(){return 100==Number(this.review.reviewRatings.reduce(function(e,t){return e+t.weightage||0},0).toFixed(2))},e.prototype.getTotalRating=function(){return this.review?this.review.reviewRatings.reduce(function(e,t){return e+t.overallRating*(t.weightage/100)||0},0):0},e.prototype.validateRatings=function(){var e=!0;return this.review.reviewRatings.forEach(function(t){(t.autoCalculatedRating||t.originalGivenRating)&&null==t.overallRating&&(e=!1)}),e},e.prototype.saveCalibratedRatings=function(){var e=this;this.form.calibrateRatingForm.$valid&&this.validateWeightage()&&this.validateRatings()&&this.reviewAdministrationService.saveCalibratedRatings(this.reviewSummary.reviewCycleId,this.reviewSummary.employeeId,this.review).then(function(t){e.notificationService.success("Ratings saved successfully"),e._scope.$emit("pms:refreshCurrentReview")},function(t){e.notificationService.success("Error in saving ratings")})},e.$inject=["$scope","NotificationService","PMSLookupService","PMSSettings","ReviewAdministrationService","ReviewerType"],e}();t.ReviewCalibrationController=m;var y=function(){function t(e,t,i,n){this.reviewAdministrationService=e,this.reviewStatus=t,this.reviewerType=i,this.reviewCalibrationStatus=n}return Object.defineProperty(t.prototype,"peopleInvolvedInstep",{get:function(){return[]},enumerable:!0,configurable:!0}),t.prototype.$onInit=function(){this.reviewSummary.reviewCalibrationStatus==e.Model.ReviewCalibrationStatus.Completed||this.reviewSummary.status==e.Model.ReviewStatus.AwaitingForRelease||this.reviewSummary.status==e.Model.ReviewStatus.WritingReviewSummary||this.reviewSummary.status==e.Model.ReviewStatus.Completed?this.getReviewRatings():this.getCalibrationSettings()},t.prototype.getReviewRatings=function(){var e=this;this.reviewAdministrationService.getEmployeeCalibrationSettingsView(this.reviewSummary.reviewCycleId,this.reviewSummary.employeeId).then(function(t){e.reviewCalibratorsView=t,t.calibrationSettings.enableCalibration&&e.getCalibratedRatings()})},t.prototype.getCalibratedRatings=function(){var e=this;this.reviewAdministrationService.getReviewRatings(this.reviewSummary.id).then(function(t){e.calibratedRatings=t,e.getTotalRating()})},t.prototype.getCalibrationSettings=function(){var e=this;this.reviewAdministrationService.getEmployeeCalibrationSettingsView(this.reviewSummary.reviewCycleId,this.reviewSummary.employeeId).then(function(t){e.reviewCalibratorsView=t})},t.prototype.getTotalRating=function(){this.totalRating=this.calibratedRatings.reduce(function(e,t){return e+t.weightedRating||0},0)},t.$inject=["ReviewAdministrationService","ReviewStatus","ReviewerType","ReviewCalibrationStatus"],t}();t.ReviewCalibrationReadOnlyController=y;var h=function(){function t(e,t,i,n,o,r,a,s){this._q=e,this.filter=t,this.reviewAdministrationService=i,this.dialogsService=n,this.state=o,this.stateParams=r,this.reviewerType=a,this.reviewReleaseStatus=s}return Object.defineProperty(t.prototype,"peopleInvolvedInstep",{get:function(){return[]},enumerable:!0,configurable:!0}),t.prototype.$onInit=function(){this.cycleId=this.stateParams.cycleId,this.employeeId=this.stateParams.employeeId,this.model=new e.Model.ReviewFinalizeViewModel({reviewId:this.reviewSummary.id}),this.getReviewRatings()},t.prototype.getReviewRatings=function(){var t=this;this.reviewAdministrationService.getFinalizedRatings(this.cycleId,this.employeeId).then(function(i){t.model.reviewRatings=i.map(function(t){return new e.Model.ReviewRating(t)}),t.getTotalRating()})},t.prototype.getTotalRating=function(){this.totalRating=this.model.reviewRatings.reduce(function(e,t){return e+t.weightedRating||0},0)},t.prototype.releaseReview=function(e){var t=this;this.form.finalizeReview.$valid&&this.dialogsService.confirm("Release Review","Are you sure you want to release review?").result.then(function(){t.model.reviewReleaseStatus=e,t.reviewAdministrationService.saveReleaseReview(t.reviewSummary.id,t.model).then(function(){t.state.go("^")})})},t.$inject=["$q","$filter","ReviewAdministrationService","dialogs","$state","$stateParams","ReviewerType","ReviewReleaseStatus"],t}();t.ReviewCompletionController=h;var f=function(){function t(e,t,i,n,o,r,a,s,l,c,p,u,d){this._stateParams=e,this._filter=t,this.notificationService=i,this.pmsEmployeeService=n,this.appContext=o,this.reviewStatus=r,this.reviewerType=a,this.reviewStepType=s,this.reviewAdministrationService=l,this.state=c,this.scope=p,this.reviewLogItemType=u,this.modalService=d,this.isAdminView=!0,this.isPastReviewSummary=!0,this._isStepComplete=!1,this.getReviewData()}return Object.defineProperty(t.prototype,"isStepCompleted",{get:function(){return!0},set:function(e){this._isStepComplete=e},enumerable:!0,configurable:!0}),t.prototype.getReviewData=function(){var e=this;this.reviewAdministrationService.getReviewSummary(this._stateParams.cycleId,this._stateParams.employeeId).then(function(t){e.reviewSummary=t,e.setReviewProcessSteps()})},t.prototype.setReviewProcessSteps=function(){var t=this,i=(this.reviewSummary.reviewProcessSteps.findIndex(function(e){return e.identifier==t.reviewSummary.currentStepIdentifier}),[]);this.reviewSummary.reviewStepLog.forEach(function(t){i.push(new e.Model.ReviewProcessStep({name:t.name,identifier:t.stepIdentifier,isStepCompleted:!0,stepEndDate:t.stepEndDate,reviewStepType:t.reviewStepType}))}),this.reviewSummary.reviewProcessSteps=i,this.currentStep=new e.Model.ReviewProcessStep({})},t.$inject=["$stateParams","$filter","NotificationService","PMSEmployeeService","AppContext","ReviewStatus","ReviewerType","ReviewStepType","ReviewAdministrationService","$state","$scope","ReviewLogItemType","$uibModal"],t}();t.EmployeeReleasedReviewSummaryController=f;var g=function(){function t(e,t,i,n,o,r){this._q=e,this.reviewAdministrationService=t,this.dialogsService=i,this.state=n,this.stateParams=o,this.reviewerType=r,this.isPastReviewSummary=!0,this.showRatingToEmployee=!0,this.reviewRatings=[]}return t.prototype.$onInit=function(){this.isStepComplete&&this.getReviewRatings()},t.prototype.getReviewRatings=function(){var t=this;this.reviewAdministrationService.getEmployeeReviewFinalizeView(this.reviewSummary.employeeId,this.reviewSummary.reviewCycleId).then(function(i){t.reviewRatings=i.reviewRatings.map(function(t){return new e.Model.ReviewRating(t)}),t.employeeReviewFinalizeView=i})},t.$inject=["$q","ReviewAdministrationService","dialogs","$state","$stateParams","ReviewerType"],t}();t.ReviewCompletionReadOnlyController=g}(e.Controllers||(e.Controllers={}))}(PMS||(PMS={})),angular.module("PMS").controller("EmployeeReviewSummaryController",PMS.Controllers.EmployeeReviewSummaryController).controller("ReviewActivityController",PMS.Controllers.ReviewActivityController).controller("NominateReviewersController",PMS.Controllers.NominateReviewersController).controller("NominateReviewersModalController",PMS.Controllers.NominateReviewersModalController).controller("ReviewMeetingBaseController",PMS.Controllers.ReviewMeetingBaseController).controller("ReviewMeetingModalController",PMS.Controllers.ReviewMeetingModalController).controller("ReviewMeetingSummaryController",PMS.Controllers.ReviewMeetingSummaryController).controller("ReviewEmployeeBaseController",PMS.Controllers.ReviewEmployeeBaseController).controller("ReviewEmployeeReadonlyController",PMS.Controllers.ReviewEmployeeReadonlyController).controller("ReviewEmployeeModalController",PMS.Controllers.ReviewEmployeeModalController).controller("ReviewCalibrationController",PMS.Controllers.ReviewCalibrationController).controller("ReviewCalibrationReadOnlyController",PMS.Controllers.ReviewCalibrationReadOnlyController).controller("ReviewCompletionController",PMS.Controllers.ReviewCompletionController).controller("EmployeeReleasedReviewSummaryController",PMS.Controllers.EmployeeReleasedReviewSummaryController).controller("PastReviewNominationRequestsController",PMS.Controllers.PastReviewNominationRequestsController).controller("ReviewCompletionReadOnlyController",PMS.Controllers.ReviewCompletionReadOnlyController),function(e){!function(t){var i=function(){function t(e,t,i,n,o,r,a,s,l,c,p,u,d){var m=this;this.scope=e,this.reviewAdministrationService=t,this.appSettings=i,this._filter=n,this.dialogsService=o,this.state=r,this.stateParams=a,this.reviewerType=s,this.reviewSubmissionStatus=l,this.notificationService=c,this.modalService=p,this.modalInstance=u,this.selectedReview=d,this.gridData=[],this.reviewers=[],this.canOpenUnlockReviewModal=!0,this.selectedRowsCount=0,this.setGridApi=function(e){m.gridApi=e,m.gridApi.selection.on.rowSelectionChanged(m.scope,function(e){m.selectedRowsCount=m.selectedRowsCount+(e.isSelected?1:-1)}),m.gridApi.selection.on.rowSelectionChangedBatch(m.scope,function(e){m.selectedRowsCount=e[0].isSelected?m.gridData.length:0})},this.openUnlockReviewTemplate=function(){m.canOpenUnlockReviewModal&&m.gridApi.selection.getSelectedCount()>0&&(m.canOpenUnlockReviewModal=!1,m.unlockReviewModal=m.modalService.open({templateUrl:"unlockReviewTemplate",scope:m.scope,backdrop:!1,keyboard:!1}))},this.saveAndClose=function(){var e=m.gridApi.selection.getSelectedRows();e.length>0&&m.comments&&(e.forEach(function(e){e.comments=m.comments}),m.reviewAdministrationService.saveUnlockedReviews(m.employeeId,m.cycleId,e).then(function(e){e.isReviewsUnlocked?(m.notificationService.success("Review Unlocked Successfully"),m.unlockReviewModal.close(),m.modalInstance.close()):m.notificationService.error("error in unlocking review")}))},this.employeeId=this.selectedReview.employeeId,this.cycleId=this.selectedReview.reviewCycleId,this.reviewId=this.selectedReview.id,this.getUnlockReviewFormView()}return t.prototype.getUnlockReviewFormView=function(){var t=this;this.reviewAdministrationService.getEmployeeReviewFormSubmittedReviewers(this.reviewId).then(function(i){t.reviewers=i.map(function(t){return new e.Model.ReviewUnlockViewModel(t)}),t.setReviewerSequence(),t.gridData=t.reviewers,t.canOpenUnlockReviewModal=!0,t.initGridSettings()})},t.prototype.setReviewerSequence=function(){var e=this;this.reviewers.forEach(function(t){t.sequenceOrder=Object.keys(e._filter("groupBy")(e.reviewers,"reviewerTypeIdentifier")).indexOf(t.reviewerTypeIdentifier)+1})},t.prototype.initGridSettings=function(){this.gridSettings=angular.copy(this.appSettings.gridSettings),this.gridSettings.columnDefs=[{field:"reviewerEmployeeNumber",displayName:"Employee Number",enableColumnMenu:!1},{field:"reviewerName",displayName:"Employee Name",enableColumnMenu:!1},{field:"reviewerType",displayName:"Relation To Reviewee",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{grid.appScope.ctrl.reviewerType.getById(row.entity.reviewerType).title}}</span></div>',enableColumnMenu:!1},{field:"submittedOn",displayName:"Review Submitted On",cellTemplate:'<div class="ui-grid-cell-contents"><span>{{row.entity.submittedOn | date: "MMM dd, yyyy"}}</span></div>',enableColumnMenu:!1}],this.gridSettings.data=this.gridData,this.gridSettings.multiSelect=!0,this.gridSettings.onRegisterApi=this.setGridApi},t.$inject=["$scope","ReviewAdministrationService","AppSettings","$filter","dialogs","$state","$stateParams","ReviewerType","ReviewSubmissionStatus","NotificationService","$uibModal","$uibModalInstance","SelectedReview"],t}();t.UnlockReviewFormTemplateController=i}(e.Controllers||(e.Controllers={}))}(PMS||(PMS={})),angular.module("PMS").controller("UnlockReviewFormTemplateController",PMS.Controllers.UnlockReviewFormTemplateController),angular.module("PMS").component("reviewSummary",{templateUrl:"reviewsummary",controller:PMS.Controllers.ReviewActivityController,bindings:{reviewId:"=",reviewSummary:"<",isStepComplete:"="}}).component("reviewNomination",{templateUrl:"reviewsummary/reviewnomination",controller:PMS.Controllers.NominateReviewersController,controllerAs:"ctrl",bindings:{isStepComplete:"="}}).component("reviewNominationReadonly",{templateUrl:"reviewsummary/reviewnominationreadonly",controller:PMS.Controllers.NominateReviewersController,controllerAs:"ctrl",bindings:{isStepComplete:"=",reviewSummary:"<"}}).component("employeePastReviewNominationrequests",{templateUrl:"reviewsummary/reviewnominationreadonly",controller:PMS.Controllers.PastReviewNominationRequestsController,controllerAs:"ctrl",bindings:{reviewSummary:"<"}}).component("reviewMeeting",{templateUrl:"reviewsummary/reviewmeeting",controller:PMS.Controllers.ReviewMeetingBaseController,controllerAs:"ctrl",bindings:{isStepComplete:"=",currentStep:"="}}).component("reviewMeetingReadonly",{templateUrl:"reviewsummary/reviewmeetingreadonly",controller:PMS.Controllers.ReviewMeetingSummaryController,controllerAs:"ctrl",bindings:{reviewSummary:"<",isStepComplete:"=",currentStep:"<"}}).component("reviewFormReadonly",{templateUrl:"reviewsummary/reviewformreadonly",controller:PMS.Controllers.ReviewEmployeeReadonlyController,controllerAs:"ctrl",bindings:{isStepComplete:"=",currentStep:"=",reviewSummary:"<"}}).component("employeePastReviewFormSummary",{templateUrl:"reviewsummary/previewemployeereviewform",controller:PMS.Controllers.EmployeeReviewFormPreviewController,controllerAs:"ctrl",bindings:{isAdminView:"<",reviewSummary:"=",currentStep:"=",reviewComponentService:"<"}}).component("reviewCalibration",{templateUrl:"reviewsummary/reviewcalibration",controller:PMS.Controllers.ReviewCalibrationController,controllerAs:"ctrl",bindings:{reviewSummary:"=",isStepComplete:"="}}).component("reviewCalibrationReadonly",{templateUrl:"reviewsummary/reviewCalibrationreadonly",controller:PMS.Controllers.ReviewCalibrationReadOnlyController,controllerAs:"ctrl",bindings:{reviewSummary:"<",isStepComplete:"=",currentStep:"="}}).component("reviewCompletion",{templateUrl:"reviewsummary/reviewcompletion",controller:PMS.Controllers.ReviewCompletionController,bindings:{reviewSummary:"=",isStepComplete:"=",currentStep:"="}}).component("reviewCompletionReadonly",{templateUrl:"reviewsummary/reviewcompletionreadonly",controller:PMS.Controllers.ReviewCompletionReadOnlyController,controllerAs:"ctrl",bindings:{reviewSummary:"=",isStepComplete:"=",currentStep:"="}}),function(e){!function(t){var i=function(){function t(e,t,i,n,o,r,a,s,l){var c=this;this.scope=e,this.appSettings=t,this.reviewResponseType=i,this.reviewObjectives=n,this.pmsSettings=o,this.blobContainers=r,this._modal=a,this.fileDownloadService=s,this.filter=l,this.selectedAttachments=[],this.showNotApplicable=!1,this.setFileUploadSettings=function(){c.fileUploadSettings=angular.copy(c.appSettings.fileUploadSettings),c.fileUploadSettings.acceptFileTypes=/(\.|\/)(jpe?g|png|doc|docx|pdf|txt|xps|rtf)$/i,c.fileUploadSettings.allowedFileTypes="png,jpg,jpeg,doc,docx,pdf,rtf,xps,txt",c.fileUploadSettings.maxNumberOfFiles=2,c.fileUploadSettings.maxFileSize=2e6,c.fileUploadSettings.dragZone="#dragZone"},this.downloadFile=function(e,t){c.fileDownloadService.downloadFile(c.filter("privateStorageAccountUrl")(e),t)},this.progressOptions=angular.copy(this.appSettings.progressOptions),this.setFileUploadSettings(),this.progressOptions.strokeWidth=15,this.progressOptions.trailWidth=12,this.progressOptions.color="#86C06A",this.progressOptions.text.style.fontSize="12px",this.progressOptions.text.style.color="#333",this.progressOptions.text.style.top="20px"}return t.prototype.$onInit=function(){this.objectiveConfigView=this.employeeReview.reviewObjectiveWeightageConfig.find(function(t){return t.reviewObjective==e.Model.ReviewObjective.ReviewForm}),this.showNotApplicable=this.objectiveConfigView.showNotApplicable},t.prototype.getCalcAverageRating=function(e){this.getAverageRating({objectiveType:e})},t.prototype.getSelectedAnswer=function(e){return e.ratingNotApplicable||0==e.selectedAnswers.length?"":e.options.find(function(t){return t.identifier==e.selectedAnswers[0]}).text},t.prototype.getOtherEmployeeRatingDetails=function(e,t){var i={};if(0==e.objectiveComponents.length)i={comments:e.comments,responseComments:e.responseComments,rating:e.originalGivenRating>0?e.originalGivenRating:e.autoCalculatedRating,ratingNotApplicable:e.ratingNotApplicable};else{var n=e.objectiveComponents.find(function(e){return e.componentId==t});n&&(i={comments:n.comments,responseComments:n.responseComments,rating:n.rating,ratingNotApplicable:n.ratingNotApplicable})}return i},t.prototype.setRating=function(e,t){e.ratingNotApplicable||(e.originalGivenRating=t)},t.prototype.resetRating=function(e){e.ratingNotApplicable&&(e.originalGivenRating=0,e.selectedAnswers=[])},t.prototype.uploadAttachment=function(e){this.popoverIsOpen=!1,this.selectedReviewRating=e,this.selectedAttachments=angular.copy(e.attachments),this.uploadAttachmentModalInstance=this._modal.open({templateUrl:"upload-attachments-template",scope:this.scope})},t.prototype.saveUploadedAttachment=function(){this.selectedReviewRating.attachments=angular.copy(this.selectedAttachments),this.selectedAttachments=[],this.closeUploadAttachmentModal()},t.prototype.closeUploadAttachmentModal=function(){this.uploadAttachmentModalInstance.close(),this.selectedAttachments=[]},t.$inject=["$scope","AppSettings","ReviewResponseType","ReviewObjectives","PMSSettings","BlobContainers","$uibModal","FileDownloadService","$filter"],t}();t.ReviewQuestionareController=i;var n=function(){function t(e,t,i,n,o,r){this.appSettings=e,this.goalType=t,this.reviewResponseType=i,this.goalTrackingStatus=n,this.pmsSettings=o,this.reviewObjectives=r,this.showNotApplicable=!1,this.progressOptions=angular.copy(this.appSettings.progressOptions),this.progressOptions.strokeWidth=15,this.progressOptions.trailWidth=12,this.progressOptions.color="#86C06A",this.progressOptions.text.style.fontSize="12px",this.progressOptions.text.style.color="#333",this.progressOptions.text.style.top="20px"}return t.prototype.$onInit=function(){this.objectiveConfigView=this.employeeReview.reviewObjectiveWeightageConfig.find(function(t){return t.reviewObjective==e.Model.ReviewObjective.Goals}),this.employeeReview.ratingScales.length>0&&this.getRatingScale(),this.showNotApplicable=this.objectiveConfigView.showNotApplicable},t.prototype.getRatingScale=function(){var t=this,i=this.employeeReview.ratingScales.find(function(e){return e.id==t.objectiveConfigView.ratingScaleId});this.ratingScale=new e.Model.RatingScale(i||{})},t.prototype.getOtherEmployeeRatingDetails=function(e,t){var i={};if(0!=e.objectiveComponents.length&&e.reviewGoalDetails.keyResultRatingEnabled){var n=e.objectiveComponents.find(function(e){return e.componentId==t});n&&(i={comments:n.comments,responseComments:n.responseComments,rating:n.rating,ratingNotApplicable:n.ratingNotApplicable})}else i={comments:e.comments,responseComments:e.responseComments,rating:e.originalGivenRating>0?e.originalGivenRating:e.autoCalculatedRating,ratingNotApplicable:e.ratingNotApplicable};return i},t.prototype.setRating=function(e,t){e.ratingNotApplicable||(e.originalGivenRating=t)},t.prototype.setBehaviourRating=function(e,t){e.ratingNotApplicable||(e.rating=t)},t.prototype.resetRating=function(e){e.ratingNotApplicable&&(e.originalGivenRating=0,e.selectedAnswers=[])},t.prototype.resetObjectiveRating=function(e){e.ratingNotApplicable&&(e.rating=0,e.selectedAnswers=[])},t.prototype.getProgressTooltip=function(e){var t=e.actualValue||e.startValue||0;return"Progress: "+parseFloat(t.toFixed(2))+"/"+e.targetValue},t.$inject=["AppSettings","GoalType","ReviewResponseType","GoalTrackingStatus","PMSSettings","ReviewObjectives"],t}();t.ReviewGoalController=n;var o=function(){function t(e,t,i,n){this._filter=e,this.appSettings=t,this.reviewResponseType=i,this.reviewObjectives=n,this.showNotApplicable=!1,this.progressOptions=angular.copy(this.appSettings.progressOptions),this.progressOptions.strokeWidth=15,this.progressOptions.trailWidth=12,this.progressOptions.color="#86C06A",this.progressOptions.text.style.fontSize="12px",this.progressOptions.text.style.color="#333",this.progressOptions.text.style.top="20px"}return t.prototype.$onInit=function(){var e=this;this.objectiveConfigView=this.employeeReview.reviewObjectiveWeightageConfig.find(function(t){return t.reviewObjective==e.currentView}),this.employeeReview.ratingScales.length>0&&this.getRatingScale(),this.showNotApplicable=this.objectiveConfigView.showNotApplicable},t.prototype.getRatingScale=function(){var t=this,i=this.employeeReview.ratingScales.find(function(e){return e.id==t.objectiveConfigView.ratingScaleId});this.ratingScale=new e.Model.RatingScale(i||{})},t.prototype.getOtherEmployeeRatingDetails=function(e,t){var i={};if(0==e.objectiveComponents.length)i={comments:e.comments,responseComments:e.responseComments,rating:e.originalGivenRating>0?e.originalGivenRating:e.autoCalculatedRating,ratingNotApplicable:e.ratingNotApplicable};else{var n=e.objectiveComponents.find(function(e){return e.componentId==t});n&&(i={comments:n.comments,responseComments:n.responseComments,rating:n.rating,ratingNotApplicable:n.ratingNotApplicable})}return i},t.prototype.setRating=function(e,t){e.ratingNotApplicable||(e.originalGivenRating=t)},t.prototype.setBehaviourRating=function(e,t){e.ratingNotApplicable||(e.rating=t)},t.prototype.resetRating=function(e){e.ratingNotApplicable&&(e.originalGivenRating=0,e.selectedAnswers=[])},t.prototype.resetObjectiveRating=function(e){e.ratingNotApplicable&&(e.rating=0,e.selectedAnswers=[])},t.prototype.getJobFunctionCompetencies=function(e){return this._filter("filter")(this.reviewRatingTransactions,{reviewObjective:this.currentView,reviewObjectiveGroupId:e.jobFunctionId})},t.$inject=["$filter","AppSettings","ReviewResponseType","ReviewObjectives"],t}();t.ReviewSkillController=o;var r=function(){function e(){}return e.prototype.$onInit=function(){},e.$inject=[],e}();t.ReviewIntroductionController=r;var a=function(){function e(e,t,i,n,o,r){this.feedbackService=e,this.state=t,this.stateParams=i,this.myPerformanceService=n,this.myTeamFeedbackService=o,this.feedbackTypes=r,this.employeeFeedbacks=[]}return e.prototype.$onInit=function(){var e=this;(!this.stateParams.employeeId?this.myPerformanceService.getFeedbacks():this.feedbackService.getFeedbacks(this.employeeId)).then(function(t){e.employeeFeedbacks=t})},e.$inject=["PMSFeedbackService","$state","$stateParams","MyPerformanceService","MyTeamFeedbackService","FeedBackTypes"],e}();t.EmployeeFeedbackListController=a,angular.module("PMS").component("reviewIntroduction",{templateUrl:"reviewFormIntroduction",controller:r,bindings:{instruction:"<"}}).component("reviewQuestionare",{templateUrl:"performanceemployees/reviewquestionare",controller:i,bindings:{employeeReview:"=",isFormStepCompleted:"<",reviewRatingTransactions:"=",currentView:"=",showReadonlyForm:"=",getTotalRatingCount:"&",getPendingRatings:"&",getAverageRating:"&",getCompletedRatings:"&"}}).component("reviewGoals",{templateUrl:"performanceemployees/reviewgoals",controller:n,bindings:{employeeReview:"=",isFormStepCompleted:"<",reviewRatingTransactions:"=",currentView:"=",showReadonlyForm:"=",getTotalRatingCount:"&",getPendingRatings:"&",getAverageRating:"&",getCompletedRatings:"&"}}).component("reviewCompentency",{templateUrl:"performanceemployees/reviewskill",controller:o,bindings:{employeeReview:"=",isFormStepCompleted:"<",reviewRatingTransactions:"=",currentView:"=",showReadonlyForm:"=",getTotalRatingCount:"&",getPendingRatings:"&",getAverageRating:"&",getCompletedRatings:"&"}}).component("reviewCorevalues",{templateUrl:"performanceemployees/reviewcorevalue",controller:o,bindings:{employeeReview:"=",isFormStepCompleted:"<",reviewRatingTransactions:"=",currentView:"=",showReadonlyForm:"=",getTotalRatingCount:"&",getPendingRatings:"&",getAverageRating:"&",getCompletedRatings:"&"}}).component("employeeFeedbackList",{templateUrl:"performanceemployees/feedbacklist",controller:a,bindings:{employeeId:"="}})}(e.Components||(e.Components={}))}(PMS||(PMS={}));var PMS,Employee;__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(t){var i=function(e){function t(t,i,n,o,r){var a=e.call(this,i,t)||this;return a.state=t,a.stateParams=n,a.pmsSettings=o,a.goalsService=r,a}return __extends(t,e),Object.defineProperty(t.prototype,"parentState",{get:function(){return this.state.current.parentState},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"currentState",{get:function(){return this.state.current.name},enumerable:!0,configurable:!0}),t.$inject=["$state","$scope","$stateParams","PMSSettings","MyGoalsService"],t}(e.StateChangeHandleController);t.MyTalentController=i;var n=function(){function t(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g){this._stateParams=e,this.notificationService=t,this._q=i,this._state=n,this.myPerformanceService=o,this.appContext=r,this.appSettings=a,this.goalTypes=s,this.goalMetricTypes=l,this.goalTrackingStatuses=c,this.feedbackTypes=p,this.filter=u,this.reviewerTypes=d,this.pmsSettings=m,this.reviewStatus=y,this.reviewReleaseStatus=h,this.reviewStepType=f,this.modalService=g,this.submitted=!1,this.ReviewsRating=[],this.jobFunctions=[],this.employeeJobFunctions=[],this.addNew=!0,this.maximumWeightage=0,this.activeGoals=[],this.reviewRatings=[],this.reviewRatingGroup={},this.reviewRatingAverage={},this.customColors=["#CEE5B0","#F3BC8E","#C598D0","#99D6D7","#79B4E5","#FF312E","#285796","#282D32","#CEE5B0","#F3BC8E"],this.reviewEventItems=[],this.areWeightagesValid=!1,this.isDataEdited=!1,this.niceScrollOptions=angular.copy(a.scrollSettings),this.employeeId=this._stateParams.id||this.appContext.myPublicProfile.id,this.getEmployeePerformanceDetails(),this.getEmployeeActiveGoals(),this.getReviewDetails(),this.getFeedback(),this.reviewEventItems=[new SharedModel.EventScaleItem({date:new Date(2017,0,1),title:"Meeting",contentCode:"",cssClass:"icon-cup",color:"#64C3D1",type:"Meeting"}),new SharedModel.EventScaleItem({date:new Date(2017,4,18),title:"Feedback Received",contentCode:"",cssClass:"icon-feedback",color:"#FFC528",type:"Feedback"}),new SharedModel.EventScaleItem({date:new Date(2017,7,1),title:"Goal Assignment",contentCode:"",cssClass:"icon-target",color:"#86C06A",type:"Goal Assignment"}),new SharedModel.EventScaleItem({date:new Date(2017,0,1),title:"Feedback Received",contentCode:"",cssClass:"icon-feedback",color:"#FFC528",type:"Feedback"})]}return t.prototype.getEmployeePerformanceDetails=function(){var t=this;this.myPerformanceService.getEmployeeTalentDetails().then(function(i){t.employeeProfile=i.employeeProfile,t.employeeJobFunctions=i.employeeJobFunctions,t.jobFunctions=i.jobFunctions,t.setJobfunctions(),t.model=new e.Model.PMSEmployeePerformanceDetails(t.employeeProfile?t.employeeProfile:{employeeid:t.employeeId})})},t.prototype.getEmployeeActiveGoals=function(){var t=this;this.myPerformanceService.getEmployeeActiveGoals().then(function(i){t.activeGoals=i.map(function(t){return new e.Model.GoalListItem(t)})})},t.prototype.getReviewDetails=function(){var t=this;this.myPerformanceService.getEmployeeActiveReviewDetails().then(function(i){t.currentReview=new e.Model.EmployeeReviewLookUpView(i.currentReview),t.reviewRatings=i.reviewRating,t.currentReview&&(t.filterReviewRatings(),t.buildDonutChartOptions(),t.bindChartData())})},t.prototype.getFeedback=function(){var t=this;this.myPerformanceService.getEmployeeActiveFeedback().then(function(i){t.feedbackItems=i.map(function(t){return new e.Model.Feedback(t)})})},t.prototype.setJobfunctions=function(){var e=this;this.employeeJobFunctions.forEach(function(t){var i=e.jobFunctions.find(function(e){return e.id==t.jobFunctionId});t.name=i.name})},t.prototype.getKeyResultProgressTooltip=function(e){var t=e.actualValue||e.startValue||0;return e.metricType!=this.goalMetricTypes.Checkbox.id?"Progress: "+parseFloat(t.toFixed(2))+"/"+e.targetValue+" "+this.goalMetricTypes.getById(e.metricType).symbol:e.actualValue==e.targetValue?"Complete":"In Progress"},t.prototype.getLastUpdated=function(e){return this.filter("orderBy")(e.log,"loggedOn",!0)[0]},t.prototype.buildDonutChartOptions=function(){return this.donutChartOptions={},this.donutChartOptions={chart:angular.copy(this.appSettings.donutChartOptions),title:{enable:!0,text:"",html:"<h4 class='text-light-bold'>"+this.filter("number")(this.currentReview.overallRating,1)+"</h4>",class:"chart-title",css:{textAlign:"center",top:"40px",left:"10px","font-size":"12px",position:"absolute",width:"90px"}}},this.donutChartOptions.chart.height=120,this.donutChartOptions.chart.width=110,this.donutChartOptions.chart.pie.donutRatio=.6,this.donutChartOptions.chart.showLegend=!1,this.donutChartOptions.chart.growOnHover=!1,this.donutChartOptions.chart.valueFormat=function(e){return e},this.donutChartOptions},t.prototype.bindChartData=function(){this.ReviewsRating.push({key:"Rating",y:this.currentReview.overallRating,color:"#86C06A"},{y:5-this.currentReview.overallRating,color:"#E3E5E8"})},t.prototype.filterReviewRatings=function(){var e=this;this.reviewRatingGroup=this.filter("groupBy")(this.reviewRatings,"reviewerType"),Object.keys(this.reviewRatingGroup).forEach(function(t){var i=0;e.reviewRatingGroup[t].forEach(function(e){i+=e.overallRating}),i/=e.reviewRatingGroup[t].length,e.reviewRatingAverage[t]=i})},t.$inject=["$stateParams","NotificationService","$q","$state","MyPerformanceService","AppContext","AppSettings","GoalType","GoalMetricType","GoalTrackingStatus","FeedBackTypes","$filter","ReviewerType","PMSSettings","ReviewStatus","ReviewReleaseStatus","ReviewStepType","$uibModal"],t}();t.MyTalentSummaryController=n;var o=function(e){function t(t,i,n,o){var r=e.call(this,t,i)||this;return r._state=i,r.pmsSettings=n,r.myGoalsService=o,r}return __extends(t,e),Object.defineProperty(t.prototype,"currentState",{get:function(){return this._state.current.name},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parentState",{get:function(){return this._state.current.parentState},enumerable:!0,configurable:!0}),t.$inject=["$scope","$state","PMSSettings","MyGoalsService"],t}(e.StateChangeHandleController);t.MyPerformanceController=o;var r=function(){function t(e,t,i,n,o,r,a,s,l,c,p,u,d,m,y,h,f,g,v){var S=this;this._state=e,this._filter=t,this._q=i,this.pmsSettings=n,this.myPerformanceService=o,this.reviewStatus=r,this.reviewReleaseStatus=a,this.competencyType=s,this.reviewStepType=l,this.appSettings=c,this.appContext=p,this.feedbackTypes=u,this.pmsService=d,this.notificationService=m,this.goalTypes=y,this.goalMetricTypes=h,this.goalTrackingStatuses=f,this.reviewerTypes=g,this.ratingVisibilityType=v,this.companyGoals=[],this.ReviewsRating=[],this.jobFunctions=[],this.employeeJobFunctions=[],this.activeGoals=[],this.accoladeKeys=[],this.canEmployeeNominate=!1,this.reviewRatings=[],this.reviewRatingGroup={},this.reviewRatingAverage={},this.customColors=["#CEE5B0","#F3BC8E","#C598D0","#99D6D7","#79B4E5","#FF312E","#285796","#282D32","#CEE5B0","#F3BC8E"],this.nominateReviewers=function(){S._state.go(".nominatereviewers",{cycleId:S.currentReview.reviewCycleId})},this.submitReview=function(){S._state.go(".review",{cycleId:S.currentReview.reviewCycleId})},this.submitMeetingSummary=function(){S._state.go(".reviewmeeting",{cycleId:S.currentReview.reviewCycleId})},this.niceScrollOptions=angular.copy(c.scrollSettings),this.employeeId=this.appContext.myPublicProfile.id,this.getPerformanceDetails(),this.getEmployeeActiveGoals(),this.getActiveEmployeeReviewDetails(),this.getFeedbackSettings()}return t.prototype.getPerformanceDetails=function(){var t=this;this.myPerformanceService.getEmployeeTalentDetails().then(function(i){t.employeeProfile=i.employeeProfile,t.employeeJobFunctions=i.employeeJobFunctions,t.jobFunctions=i.jobFunctions,t.setJobfunctions(),t.model=new e.Model.PMSEmployeePerformanceDetails(t.employeeProfile?t.employeeProfile:{employeeid:t.employeeId})})},t.prototype.getEmployeeActiveGoals=function(){var t=this;this.myPerformanceService.getEmployeeActiveGoals().then(function(i){t.activeGoals=i.map(function(t){return new e.Model.GoalListItem(t)})})},t.prototype.getActiveEmployeeReviewDetails=function(){var t=this;this.myPerformanceService.getEmployeeActiveReviewDetails().then(function(i){t.currentReview=new e.Model.EmployeeReviewLookUpView(i.currentReview),t.reviewRatings=i.reviewRating,t.currentReview&&t.currentReview.reviewReleaseStatus==e.Model.ReviewReleaseStatus.Released&&(t.filterReviewRatings(),t.buildDonutChartOptions(),t.bindChartData())})},t.prototype.getFeedbackSettings=function(){var e=this;this.myPerformanceService.getFeedbackSetting().then(function(t){e.feedbackSettings=t,e.feedbackSettings.isFeatureEnabled&&e.getMyFeedBack()})},t.prototype.setJobfunctions=function(){var e=this;this.employeeJobFunctions.forEach(function(t){var i=e.jobFunctions.find(function(e){return e.id==t.jobFunctionId});t.name=i.name})},t.prototype.getMyFeedBack=function(){var t=this;this.myPerformanceService.getFeedbacks().then(function(i){t.feedbackItems=i.map(function(t){return new e.Model.Feedback(t)}),t.feedbackItems&&t.feedbackItems.length>0&&(t.feedbackGroups=t._filter("groupBy")(t.feedbackItems.filter(function(e){return e.feedbackType==t.feedbackTypes.Appreciate.id}),"badge.image.location"),t.accoladeKeys=Object.keys(t.feedbackGroups))})},t.prototype.getKeyResultProgressTooltip=function(e){var t=e.actualValue||e.startValue||0;return e.metricType!=this.goalMetricTypes.Checkbox.id?"Progress: "+parseFloat(t.toFixed(2))+"/"+e.targetValue+" "+this.goalMetricTypes.getById(e.metricType).symbol:e.actualValue==e.targetValue?"Complete":"In Progress"},t.prototype.getLastUpdated=function(e){return this._filter("orderBy")(e.log,"loggedOn",!0)[0]},t.prototype.buildDonutChartOptions=function(){return this.donutChartOptions={},this.donutChartOptions={chart:angular.copy(this.appSettings.donutChartOptions),title:{enable:!0,text:"",html:"<h4 class='text-light-bold'>"+this._filter("number")(this.currentReview.overallRating,1)+"</h4>",class:"chart-title",css:{textAlign:"center",top:"40px",left:"10px","font-size":"12px",position:"absolute",width:"90px"}}},this.donutChartOptions.chart.height=120,this.donutChartOptions.chart.width=110,this.donutChartOptions.chart.pie.donutRatio=.6,this.donutChartOptions.chart.showLegend=!1,this.donutChartOptions.chart.growOnHover=!1,this.donutChartOptions.chart.valueFormat=function(e){return e},this.donutChartOptions},t.prototype.bindChartData=function(){this.ReviewsRating.push({key:"Rating",y:this.currentReview.overallRating,color:"#86C06A"},{y:5-this.currentReview.overallRating,color:"#E3E5E8"})},t.prototype.filterReviewRatings=function(){var e=this;this.reviewRatingGroup=this._filter("groupBy")(this.reviewRatings,"reviewerType"),Object.keys(this.reviewRatingGroup).forEach(function(t){var i=0;e.reviewRatingGroup[t].forEach(function(e){i+=e.overallRating}),i/=e.reviewRatingGroup[t].length,e.reviewRatingAverage[t]=i})},t.$inject=["$state","$filter","$q","PMSSettings","MyPerformanceService","ReviewStatus","ReviewReleaseStatus","CompetencyType","ReviewStepType","AppSettings","AppContext","FeedBackTypes","PMSService","NotificationService","GoalType","GoalMetricType","GoalTrackingStatus","ReviewerType","RatingVisibilityType"],t}();t.MyPerformanceSummaryController=r;var a=function(){function t(e,t,i,n,o,r,a,s,l,c){var p=this;this._state=e,this._filter=t,this._q=i,this.pmsSettings=n,this.myPerfromanceService=o,this.goalsService=r,this.appContext=a,this.dateServices=s,this.pmsEmployeeService=l,this.notificationService=c,this.goals=[],this.setStartAndEndDates=function(){var e=new Date;e.setDate(1),p.startDate=angular.copy(e),p.endDate=angular.copy(e),p.startDate.setMonth(p.startDate.getMonth()-1),p.endDate.setMonth(e.getMonth()+1),p.endDate.setDate(p.endDate.getDate()-1)},this.setStartAndEndDates(),this.parentState=this._state.current.parentState,this.getGoals(),this.myPerfromanceService.getCurrentEmployeeProfile().then(function(e){p.employee=e})}return Object.defineProperty(t.prototype,"startDateString",{get:function(){return this.startDate?this.dateServices.dateOnlyString(this.startDate):null},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"endDateString",{get:function(){return this.endDate?this.dateServices.dateOnlyString(this.endDate):null},enumerable:!0,configurable:!0}),t.prototype.getGoals=function(){var t=this;this.goalsService.getEmployeeGoals(this.startDateString,this.endDateString).then(function(i){t.goals=i.map(function(t){return new e.Model.GoalListItem(t)})},function(e){t.notificationService.error("An error occured while fetching employee goals")})},t.$inject=["$state","$filter","$q","PMSSettings","MyPerformanceService","MyGoalsService","AppContext","DateServices"],t}();t.MyPerformanceGoalsController=a;var s=function(){function t(t,i,n,o,r){var a=this;this.appSettings=t,this.myPerformanceService=i,this.notificationService=n,this._q=o,this.feedbackTypes=r,this.myFeedback=[],this._q.all([this.myPerformanceService.getFeedbacks()]).then(function(t){a.myFeedback=t[0].map(function(t){return new e.Model.Feedback(t)})},function(e){a.notificationService.error("error in loading feedback")})}return t.$inject=["AppSettings","MyPerformanceService","NotificationService","$q","FeedBackTypes"],t}();t.MyFeedbackController=s;var l=function(){function t(t,i,n,o,r){var a=this;this.appSettings=t,this.myPerformanceService=i,this.notificationService=n,this._q=o,this.feedbackTypes=r,this.submittedFeedback=[],this._q.all([this.myPerformanceService.getMySubmittedFeedback()]).then(function(t){a.submittedFeedback=t[0].map(function(t){return new e.Model.Feedback(t)})},function(e){a.notificationService.error("error in loading feedback")})}return t.$inject=["AppSettings","MyPerformanceService","NotificationService","$q","FeedBackTypes"],t}();t.SubmittedAppraisalsController=l;var c=function(){function t(e,t,i,n,o,r,a,s,l,c){var p=this;this._state=e,this._filter=t,this._q=i,this.appSettings=n,this.myPerformanceService=o,this.reviewStatus=r,this.pmsSettings=a,this.reviewStepType=s,this.reviewReleaseStatus=l,this.ratingVisibilityType=c,this.pastReviews=[],this.ongoingReviews=[],this.nominateReviewers=function(e){p._state.go(".nominatereviewers",{cycleId:e})},this.submitReview=function(e){p._state.go(".review",{cycleId:e})},this.submitMeetingSummary=function(e){p._state.go(".reviewmeeting",{cycleId:e})},this.viewSubmittedReviewForm=function(e){p._state.go(".viewform",{reviewId:e})},this.viewNominationsSummary=function(e){p._state.go(".viewnominations",{cycleId:e})},this.progressOptions=angular.copy(this.appSettings.progressOptions),this.progressOptions.strokeWidth=15,this.progressOptions.trailWidth=10,this.progressOptions.color="#86C06A",this.progressOptions.text.style.fontSize="12px",this.progressOptions.text.style.color="#333",this.progressOptions.text.style.top="20px",this.getOngoingReview(),this.getMyPastReviews()}return t.prototype.getOngoingReview=function(){var t=this;this.myPerformanceService.getMyOngoingReviews().then(function(i){t.ongoingReviews=i.map(function(t){return new e.Model.EmployeeReviewLookUpView(t)})})},t.prototype.getMyPastReviews=function(){var t=this;this.myPerformanceService.getPastReviews().then(function(i){t.pastReviews=i.map(function(t){return new e.Model.EmployeeReviewLookUpView(t)})})},t.prototype.preview=function(e){this._state.go(".reviewSummary",{cycleId:e.reviewCycleId})},t.$inject=["$state","$filter","$q","AppSettings","MyPerformanceService","ReviewStatus","PMSSettings","ReviewStepType","ReviewReleaseStatus","RatingVisibilityType"],t}();t.MyReviewsController=c;var p=function(){function t(t,i,n,o,r,a){var s=this;this.state=t,this.stateParams=i,this.myPerformanceService=n,this.filter=o,this.reviewStatus=r,this.reviewerType=a,this.submittedReviews=[],this.filteredReviews=[],this.reviewFilters=[],this.myPerformanceService.getSubmittedReviews().then(function(t){s.submittedReviews=t.map(function(t){return new e.Model.SubmittedReviewsView(t)}),s.submittedReviews.length>0&&s.setFilters()})}return t.prototype.filterReviews=function(){var e=this,t=this.submittedReviews.filter(function(t){return e.filter("date")(t.submittedOn,"MMM yyyy")==e.filteredCycle.date});this.filteredReviews=this.filter("filter")(t,this.filterText,!1)},t.prototype.setFilters=function(){var t=this;this.submittedReviews.forEach(function(i){var n=t.filter("date")(i.submittedOn,"MMM yyyy");if(null==t.reviewFilters.find(function(e){return e.date==n})){var o=t.submittedReviews.filter(function(e){return t.filter("date")(e.submittedOn,"MMM yyyy")==n}).length;t.reviewFilters.push(new e.Model.PastReviewFilter({date:n,peopleCount:o}))}}),this.setFilteredCycle(this.reviewFilters[0])},t.prototype.setFilteredCycle=function(e){this.filteredCycle=e,this.filterReviews()},t.prototype.preview=function(e){this.state.go("mytime.performance.reviews.submittedreviews.reviewsummary",{reviewId:e.reviewId})},t.$inject=["$state","$stateParams","MyPerformanceService","$filter","ReviewStatus","ReviewerType"],t}();t.SubmittedReviewsController=p;var u=function(){function t(e,t,i,n,o,r,a,s,l,c){this.state=e,this.q=t,this.stateParams=i,this.myPerformanceService=n,this.appSettings=o,this.reviewObjectives=r,this.reviewResponseType=a,this.pmsSettings=s,this.filter=l,this.reviewerTypes=c,this.ratingTransactionSummary=[],this.showReadonlyForm=!0,this.reviewRatingGroup={},this.totalWeightage=0,this.reviewRatingTransactions=[],this.setProgressOptions(),this.getSubmittedRatingSummary()}return t.prototype.getSubmittedRatingSummary=function(){var t=this;this.myPerformanceService.getSubmittedReviewRatingSummary(this.stateParams.reviewId).then(function(i){t.employeeReview=new e.Model.ReviewSummary(i),t.ratingSummary=new e.Model.ReviewRating(t.employeeReview.reviewRatings[0]),t.reviewRatingTransactions=t.employeeReview.reviewRatingTransactions.map(function(t){return new e.Model.ReviewRatingTransaction(t)}),t.currentView=t.reviewObjectives.none.id,t.setReviewRatingTransactions(),t.setTotalWeightage()})},t.prototype.setReviewRatingTransactions=function(){var t=this;this.reviewRatingTransactions.forEach(function(i){if(i.isPreview=!0,i.reviewObjective==e.Model.ReviewObjective.ReviewForm||i.responseType==e.Model.ReviewResponseType.Rating){var n=i.ratingScaleId?t.employeeReview.ratingScales.find(function(e){return e.id==i.ratingScaleId}):null;i.ratingScale=new e.Model.RatingScale(n||{})}i.reviewObjective==e.Model.ReviewObjective.Goals&&(i.reviewGoalDetails.keyResultRatingEnabled=t.pmsSettings.goalSettings.keyResultRatingEnabled),i.objectiveComponents.forEach(function(e){e.isEdit=!1})})},t.prototype.setProgressOptions=function(){this.progressOptions=angular.copy(this.appSettings.progressOptions),this.progressOptions.strokeWidth=12,this.progressOptions.trailWidth=10,this.progressOptions.text.style.fontSize="9px",this.progressOptions.text.style.color="#43A0EA",this.progressOptions.text.style.top="12px"},t.prototype.getMyrating=function(e,t){return this.reviewRatingTransactions.find(function(i){return i.reviewObjective==e&&i.reviewObjectiveId==t})},t.prototype.getMyRatingComponent=function(e,t){return e?e.objectiveComponents.find(function(e){return e.componentId==t}):null},t.prototype.getObjectiveRatings=function(e){var t=e||this.currentView;return this.reviewRatingTransactions.filter(function(e){return e.reviewObjective==t})},t.prototype.getTotalRatingCount=function(e){return this.getObjectiveRatings(e).length},t.prototype.getCompletedRatings=function(e){return this.getObjectiveRatings(e).filter(function(e){return e.isCompleted}).length},t.prototype.getPendingRatings=function(e){return this.getObjectiveRatings(e).filter(function(e){return!e.isCompleted}).length},t.prototype.setTotalWeightage=function(){var t=this;this.employeeReview&&(this.totalWeightage=0,this.reviewRatingGroup=this.filter("groupBy")(this.reviewRatingTransactions,"reviewObjective"),this.employeeReview.reviewObjectiveWeightageConfig.forEach(function(i){if(i.reviewObjective==e.Model.ReviewObjective.ReviewForm||i.responseType==e.Model.ReviewResponseType.Rating){var n=t.reviewRatingGroup[i.reviewObjective];if(i.reviewObjective==e.Model.ReviewObjective.Competencies)for(var o in t.employeeReview.jobFunctions){var r=t.employeeReview.jobFunctions[o];if(!n){t.totalWeightage=t.totalWeightage+i.weightage;break}var a=n.filter(function(e){return e.reviewObjectiveGroupId==r.jobFunctionId});if(!a.length||a.some(function(e){return e.autoCalculatedRating>0})||!a.every(function(e){return 0==e.autoCalculatedRating})){t.totalWeightage=t.totalWeightage+i.weightage;break}}else i.reviewObjective!=e.Model.ReviewObjective.ReviewForm||n&&(!n||!n.some(function(e){return e.autoCalculatedRating>0})&&0!=n.filter(function(t){return t.responseType==e.Model.ReviewResponseType.Rating}).length)?(n&&n.some(function(e){return e.autoCalculatedRating>0})||!n)&&(t.totalWeightage=t.totalWeightage+i.weightage):t.totalWeightage=t.totalWeightage+i.weightage}}))},t.prototype.getAverageRating=function(t){var i=this,n=this.getObjectiveRatings(t).filter(function(e){return e.isCompleted}),o=0,r=0,a=0;return t==e.Model.ReviewObjective.Competencies&&this.employeeReview.jobFunctions.forEach(function(e){var t=n.filter(function(t){return t.reviewObjectiveGroupId==e.jobFunctionId}),i=n.filter(function(t){return t.autoCalculatedRating>0&&t.reviewObjectiveGroupId==e.jobFunctionId});a+=!t.length||i.length?e.jobFunctionWeightage:0}),n.forEach(function(s){if(s.responseType==e.Model.ReviewResponseType.Rating&&!s.ratingNotApplicable){var l=0;if(t!=e.Model.ReviewObjective.Competencies||0!=s.objectiveComponents.length&&s.objectiveComponents.every(function(e){return e.ratingNotApplicable}))l=s.originalGivenRating>0?s.originalGivenRating:s.autoCalculatedRating;else{var c=i.employeeReview.jobFunctions.filter(function(e){return s.reviewObjectiveGroupId==e.jobFunctionId})[0],p=n.filter(function(e){return e.autoCalculatedRating>0&&e.reviewObjectiveGroupId==s.reviewObjectiveGroupId&&e.reviewerId==s.reviewerId}).map(function(e){return e.weightage}).reduce(function(e,t){return e+t});if(null!=c){var u=s.weightage/p*(c.jobFunctionWeightage/a);l=s.originalGivenRating>0?s.originalGivenRating*u:s.autoCalculatedRating*u}}l>0&&(o+=l,r++)}}),t==e.Model.ReviewObjective.Competencies?o:o>0?o/r:0},t.$inject=["$state","$q","$stateParams","MyPerformanceService","AppSettings","ReviewObjectives","ReviewResponseType","PMSSettings","$filter","ReviewerType"],t}();t.SubmittedReviewSummaryController=u;var d=function(){function t(t,i,n,o,r,a,s,l,c,p,u){var d=this;this._scope=t,this.stateParams=i,this._modal=n,this.notificationService=o,this.qService=r,this._filter=a,this.stateService=s,this.myPerformanceService=l,this.appContext=c,this.appSettings=p,this.competencyType=u,this.competencyList=[],this.coreValueList=[],this.skillBehaviours=[],this.initCompetencyOptions=function(){d.competencyGridOptions=angular.copy(d.appSettings.gridSettings),d.competencyGridOptions.columnDefs=[{field:"name",displayName:"Competency Name",cellTemplate:'<div class ="ui-grid-cell-contents" title = "{{row.entity.name}}">{{row.entity.name}}</div>',cellToolTip:!0},{field:"description",displayName:"Description",cellTemplate:'<div class ="ui-grid-cell-contents" title = "{{row.entity.description}}">{{row.entity.description}}</div>',cellToolTip:!0},{field:"weightage",displayName:"Weightage",cellTemplate:"<div class=\"ui-grid-cell-contents\">\n                                    <span>{{row.entity.weightage+'%'}}</span>\n                                   </div>"},{field:"behaviourCount",displayName:"Behaviours",cellTemplate:'<div class="ui-grid-cell-contents"><a data-ng-click="grid.appScope.ctrl.showCompetencyBehaviours(row.entity)">{{row.entity.behaviourCount}}</a>'},{field:"competencyTypeName",displayName:"Competency Type",cellTemplate:'<div class ="ui-grid-cell-contents" title = "{{row.entity.competencyTypeName}}">{{row.entity.competencyTypeName}}</div>',cellToolTip:!0}],d.competencyGridOptions.data=d.competencyList,d.competencyGridOptions.onRegisterApi=d.setGridApi},this.setGridApi=function(e){d.gridApi=e},this.presentState=this.stateService.current.name,this.myPerformanceService.getAllCompetenciesList().then(function(t){d.competencyList=t.map(function(t){return new e.Model.CompetencyView(t)}),d.competencyList.forEach(function(t){t.competencyType!=e.Model.CompetencyType.None?t.competencyTypeName=d.competencyType.getById(t.competencyType).name:t.competencyTypeName="Core Competency"}),d.initCompetencyOptions(),d.initBehaviourGridOptions(),d.filterCompetencies()}),this.myPerformanceService.getCoreValuesList().then(function(e){d.coreValueList=e,d.initCoreValueOptions(),d.filterCoreValues()})}return t.prototype.initBehaviourGridOptions=function(){this.behaviourGridOptions=angular.copy(this.appSettings.gridSettings),this.behaviourGridOptions.columnDefs=[{field:"title",displayName:"Title",cellTooltip:!0},{field:"useInRatings",displayName:"Use in ratings?",cellTemplate:'<div class="ui-grid-cell-contents">{{row.entity.useInRatings ? "Yes" : "No"}}</div>'}],this.behaviourGridOptions.data='ctrl.skillBehaviours | orderBy: "title"'},t.prototype.initCoreValueOptions=function(){this.coreValueGridOptions=angular.copy(this.appSettings.gridSettings),this.coreValueGridOptions.columnDefs=[{field:"name",displayName:"Core Value Name",cellTooltip:!0},{field:"description",displayName:"Description",cellTemplate:'<div class ="ui-grid-cell-contents" title = "{{row.entity.description}}">{{row.entity.description}}</div>',cellToolTip:!0},{field:"behaviourCount",displayName:"Behaviours",cellTemplate:'<div class="ui-grid-cell-contents"><a data-ng-click="grid.appScope.ctrl.showCoreValueBehaviours(row.entity)">{{row.entity.behaviourCount}}</a>'}],this.coreValueGridOptions.data=this.coreValueList,this.coreValueGridOptions.onRegisterApi=this.setGridApi},t.prototype.showCompetencyBehaviours=function(e){var t=this;e.behaviourCount?(this.skillToShow=e,this.myPerformanceService.getCompetencyBehaviours(e.id).then(function(e){t.skillBehaviours=e,t._modal.open({templateUrl:"assigned-behaviours-template",scope:t._scope})})):this.notificationService.information("There are no behaviours assigned to this competency")},t.prototype.showCoreValueBehaviours=function(e){var t=this;e.behaviourCount?(this.skillToShow=e,this.myPerformanceService.getCoreValueBehaviours(e.id).then(function(e){t.skillBehaviours=e,t._modal.open({templateUrl:"assigned-behaviours-template",scope:t._scope})})):this.notificationService.information("There are no behaviours assigned to this corevalue")},t.prototype.filterCompetencies=function(){this.competencyGridOptions.data=this._filter("filter")(this.competencyList,this.competencyFilterText,!1)},t.prototype.filterCoreValues=function(){this.coreValueGridOptions.data=this._filter("filter")(this.coreValueList,this.coreValueFilterText,!1)},t.$inject=["$scope","$stateParams","$uibModal","NotificationService","$q","$filter","$state","MyPerformanceService","AppContext","AppSettings","CompetencyType"],t}();t.MySkillsController=d;var m=function(){function e(e){var t=this;this._scope=e,this._scope.$on("$stateChangeSuccess",function(e,i,n,o,r){t.currentState=o.name,t.currentStateParams=r})}return e.$inject=["$scope"],e}();t.MyMeetingStateController=m;var y=function(){function e(e){var t=this;this._scope=e,this._scope.$on("$stateChangeSuccess",function(e,i,n,o,r){t.currentState=o.name,t.currentStateParams=r})}return e.$inject=["$scope"],e}();t.MeetingWithOthersStateController=y}(e.Controllers||(e.Controllers={}))}(PMS||(PMS={})),angular.module("PMS").controller("MyTalentController",PMS.Controllers.MyTalentController).controller("MyTalentSummaryController",PMS.Controllers.MyTalentSummaryController).controller("MyPerformanceController",PMS.Controllers.MyPerformanceController).controller("MyPerformanceSummaryController",PMS.Controllers.MyPerformanceSummaryController).controller("MyPerformanceGoalsController",PMS.Controllers.MyPerformanceGoalsController).controller("MyReviewsController",PMS.Controllers.MyReviewsController).controller("SubmittedReviewsController",PMS.Controllers.SubmittedReviewsController).controller("SubmittedReviewSummaryController",PMS.Controllers.SubmittedReviewSummaryController).controller("MyFeedbackController",PMS.Controllers.MyFeedbackController).controller("SubmittedAppraisalsController",PMS.Controllers.SubmittedAppraisalsController).controller("MySkillsController",PMS.Controllers.MySkillsController).controller("MyMeetingStateController",PMS.Controllers.MyMeetingStateController).controller("MeetingWithOthersStateController",PMS.Controllers.MeetingWithOthersStateController),function(e){!function(e){var t=function(){function e(e){var t=this;this.resource=e,this.performance=this.resource("/api/myperformance/:action/:id/:stepIdentifier/:cycleId",{action:"@action",stepIdentifier:"@stepIdentifier",cycleId:"@cycleId"},{update:{method:"PUT"}}),this.performanceMeeting=this.resource("/api/myperformance/:action/:cycleId",{action:"@action",cycleId:"@cycleId"},{update:{method:"PUT"}}),this.getEmployeeReviews=function(){return t.performance.query({action:"review/all"}).$promise},this.getCurrentReview=function(e){return t.performance.get({action:"currentreview",cycleId:e}).$promise},this.getMyOngoingReviews=function(){return t.performance.query({action:"ongoingreviews"}).$promise},this.getIsRatingToSelfSubmitted=function(e){return t.performance.get({action:"ongoingreviewrating",id:e}).$promise},this.getNominationConfigurationDetails=function(e){return t.performance.get({action:"nominationconfigurationdetails",cycleId:e}).$promise},this.saveNominationRequests=function(e,i,n){return t.performance.save({action:"nominationrequests",cycleId:i},n).$promise},this.getMyCompetencies=function(){return t.performance.query({action:"competencies"}).$promise},this.getEmployeeTalentDetails=function(){return t.performance.get({action:"performance/details"}).$promise},this.getEmployeeActiveGoals=function(){return t.performance.query({action:"activegoals"}).$promise},this.getEmployeeActiveReviewDetails=function(){return t.performance.get({action:"activereview"}).$promise},this.getPastReviews=function(){return t.performance.query({action:"pastreviews"}).$promise},this.getEmployeeReviewSummary=function(e){return t.performance.get({action:"reviewSummary",cycleId:e}).$promise},this.getSubmittedReviews=function(){return t.performance.query({action:"submittedreviews"}).$promise},this.getSubmittedReviewRatingSummary=function(e){return t.performance.get({action:"submittedrating/summary",id:e}).$promise},this.getFeedbackSetting=function(){return t.performance.get({action:"feedbacksettings"}).$promise},this.getFeedbacks=function(e){return t.performance.query({action:"feedback"}).$promise},this.getEmployeeActiveFeedback=function(){return t.performance.query({action:"activefeedback"}).$promise},this.saveFeedback=function(e){return t.performance.save({action:"savefeedback"},e).$promise},this.getMySubmittedFeedback=function(){return t.performance.query({action:"submittedfeedback"}).$promise},this.getDepartments=function(){return t.performance.query({action:"departments"}).$promise},this.getBusinessUnits=function(){return t.performance.query({action:"businessunits"}).$promise},this.getMyReviewMeetingParticipants=function(e){return t.performance.query({action:"meetingparticipants",cycleId:e}).$promise},this.getOngoingMeetingSummary=function(e){return t.performance.get({action:"ongoingmeetingsummary",cycleId:e}).$promise},this.saveReviewMeeting=function(e,i){return t.performanceMeeting.save({action:"reviewmeeting",cycleId:e},i).$promise},this.draftReviewMeeting=function(e,i){return t.performanceMeeting.save({action:"reviewmeeting/draft",cycleId:e},i).$promise},this.getRoles=function(){return t.performance.query({action:"roles"}).$promise},this.getCurrentEmployeeProfile=function(){return t.performance.get({action:"currentpmsprofile"}).$promise}}return e.prototype.getPastReviewSummary=function(e){return this.performance.get({action:"pastreview/summary",cycleId:e}).$promise},e.prototype.getPastNominationsSummary=function(e){return this.performance.get({action:"pastnominationssummary",cycleId:e}).$promise},e.prototype.getReviewMeetingSummary=function(e,t){return this.performance.get({action:"meeting",id:e,stepIdentifier:t}).$promise},e.prototype.draftReviewRatingTransactions=function(e,t,i){return this.performance.save({action:"reviewrating/draft",cycleId:e},t).$promise},e.prototype.saveReviewRatingTransactions=function(e,t,i){return this.performance.save({action:"reviewrating",cycleId:e},t).$promise},e.prototype.getAllReviewsList=function(e){return this.performance.query({action:"myreviews"}).$promise},e.prototype.getAllCompetenciesList=function(){return this.performance.query({action:"mycompetencies"}).$promise},e.prototype.getCoreValuesList=function(){return this.performance.query({action:"corevalues"}).$promise},e.prototype.getCompetencyBehaviours=function(e){return this.performance.query({action:"competency/behaviour",id:e}).$promise},e.prototype.getCoreValueBehaviours=function(e){return this.performance.query({action:"corevalues/behaviour",id:e}).$promise},e.prototype.getCoreValuesAndCompetencies=function(){return this.performance.get({action:"corevaluesandcompetencies"}).$promise},e.$inject=["$resource"],e}();e.MyPerformanceService=t;var i=function(){function e(e){var t=this;this.resource=e,this.performance=this.resource("/api/myperformance/goals/:action/:id/",{action:"@action",id:"@id"},{update:{method:"PUT"}}),this.getMyGoals=function(){return t.performance.query({action:"default"}).$promise},this.getEmployeeGoals=function(e,i){return t.performance.query({action:"default",startDate:e,endDate:i}).$promise},this.getGoal=function(e){return t.performance.get({action:"default",id:e}).$promise},this.saveGoal=function(e){return t.performance.save({action:"save"},e).$promise},this.updateGoal=function(e,i){return t.performance.update({action:"update",id:e},i).$promise},this.checkInGoal=function(e,i){return t.performance.update({action:"checkin",id:e},i).$promise},this.markGoalAsComplete=function(e){return t.performance.update({action:"markcomplete",id:e},null).$promise},this.markGoalAsIncomplete=function(e){return t.performance.update({action:"markincomplete",id:e},null).$promise},this.deleteGoal=function(e){return t.performance.update({action:"delete",id:e},null).$promise},this.getKeyResults=function(e){return t.performance.query({action:"keyresults",id:e}).$promise},this.getGoalCategories=function(){return t.performance.query({action:"categories"}).$promise},this.getGroupsAssignedToGoal=function(e){return t.performance.query({action:"groupsassignedto",id:e}).$promise},this.getDepartments=function(){return t.performance.query({action:"departments"}).$promise},this.getBusinessUnits=function(){return t.performance.query({action:"businessunits"}).$promise},this.getGoalTemplates=function(){return t.performance.query({action:"templates"}).$promise},this.getGoalTemplateViewModel=function(e){return t.performance.get({action:"template",id:e}).$promise}}return e.prototype.getGoalsToAssign=function(){return this.getMyGoals()},e.prototype.assignGoalsToEmployees=function(e){return null},e.prototype.getAllCompetencies=function(){return this.performance.query({action:"competency/all"}).$promise},e.$inject=["$resource"],e}();e.MyGoalsService=i}(e.Services||(e.Services={}))}(PMS||(PMS={})),angular.module("PMS").service("MyPerformanceService",PMS.Services.MyPerformanceService).service("MyGoalsService",PMS.Services.MyGoalsService),function(e){!function(e){var t=function(){function e(e,t,i,n){this._state=e,this.appSettings=t,this.goalsService=i,this.pmsSettings=n}return Object.defineProperty(e.prototype,"currentState",{get:function(){return this._state.current.name},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"parentState",{get:function(){return this._state.current.parentState},enumerable:!0,configurable:!0}),e.$inject=["$state","AppSettings","PMSGoalsService","PMSSettings"],e}();e.EmployeePerformanceController=t;var i=function(){function e(e,t,i,n,o,r,a,s,l,c,p){var u=this;this._state=e,this._stateParams=t,this._filter=i,this._q=n,this.pmsSettings=o,this.employeePerformanceService=r,this.reviewStatus=a,this.competencyType=s,this.pmsService=l,this.notificationService=c,this.feedbackTypes=p,this.goals=[],this.companyGoals=[],this.feedbackItems=[],this.getFeedBackSettings=function(){u.pmsService.getFeedbackSetting().then(function(e){e&&(u.feedbackSettings=new PMS.Model.FeedbackSettings(e))},function(e){u.notificationService.error("error in getting feedback settings")})},this.nominateReviewers=function(){u._state.go("nominatereviewers",{id:u.id})},this.getCompetencyType=function(e){return u.competencyType.getById(e).name},this.id=this._stateParams.id,this.getEmployeeCompetencies(),this.getEmployeeCurrentReview(),this.getEmployeeGoals(),this.getEmployeeFeedback(),this.getFeedBackSettings()}return Object.defineProperty(e.prototype,"organizationGoals",{get:function(){return this.goals.filter(function(e){return e.goalType==PMS.Model.GoalType.Organization})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"departmentGoals",{get:function(){return this.goals.filter(function(e){return e.goalType==PMS.Model.GoalType.Department})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"individualGoals",{get:function(){return this.goals.filter(function(e){return e.goalType==PMS.Model.GoalType.Individual})},enumerable:!0,configurable:!0}),e.prototype.getEmployeeCompetencies=function(){var e=this;this.employeePerformanceService.getEmployeeCompetencies(this.id).then(function(t){e.competencies=t})},e.prototype.getEmployeeCurrentReview=function(){var e=this;this.pmsSettings.reviewSettings.isFeatureEnabled&&this.employeePerformanceService.getEmployeeCurrentReview(this.id).then(function(t){e.currentReview=t})},e.prototype.getEmployeeGoals=function(){var e=this;this.pmsSettings.goalSettings.isFeatureEnabled&&this.employeePerformanceService.getEmployeeGoals(this.id).then(function(t){e.goals=t.map(function(e){return new PMS.Model.GoalListItem(e)})})},e.prototype.getEmployeeFeedback=function(){var e=this;this.employeePerformanceService.getEmployeeFeedback(this.id).then(function(t){e.feedbackItems=t,e.feedbackItems&&e.feedbackItems.length>0&&(e.feedbackGroups=e._filter("groupBy")(e.feedbackItems,"badge.id"))})},e.$inject=["$state","$stateParams","$filter","$q","PMSSettings","EmployeePerformanceService","ReviewStatus","CompetencyType","PMSService","NotificationService","FeedBackTypes"],e}();e.EmployeePerformanceSummaryController=i;var n=function(){function e(e,t,i,n,o){var r=this;this._state=e,this._q=t,this.pmsSettings=i,this.goalsService=n,this.pmsEmployeeService=o,this.goals=[],this.parentState=this._state.current.parentState,this._q.all([this.goalsService.getEmployeeGoals(this._state.params.id),this.pmsEmployeeService.getEmployeeProfile(this._state.params.id)]).then(function(e){r.goals=e[0].map(function(e){return new PMS.Model.GoalListItem(e)}),r.employee=e[1]})}return e.$inject=["$state","$q","PMSSettings","PMSGoalsService","PMSEmployeeService"],e}();e.EmployeePerformanceGoalController=n,angular.module("xhr").controller("EmployeePerformanceController",t).controller("EmployeePerformanceGoalController",n).controller("EmployeePerformanceSummaryController",i)}(e.Performance||(e.Performance={}))}(Employee||(Employee={}));var xhr,Audit;__extends=this&&this.__extends||function(){var e=function(t,i){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])})(t,i)};return function(t,i){function n(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}();!function(e){!function(e){var t=function(e){function t(t,i,n,o,r,a){var s=e.call(this,t.OnboardingSetup,null,a)||this;return s.scope=t,s.dialogs=i,s._modal=n,s.OnboardingService=o,s.notificationService=r,s.updateStepsStatus(),s.scope.$watch("ctrl.setup",s.updateStepsStatus,!0),s.init(),s}return __extends(t,e),t.prototype.getDefaultSteps=function(){var e={employeeImport:{id:1,title:"Employee Basic Import",name:"EmployeeBasicImport",description:"",stateName:"employeesImported",startedOn:this.setup.orgSetup.startedOn,progress:this.setup.orgSetup.progress,isStarted:this.setup.orgSetup.isStarted,completedInDays:this.setup.orgSetup.completedInDays},employeeInformation:{id:2,title:"Employee Information",name:"EmployeeInformation",description:"",stateName:"",startedOn:this.setup.leaveSetup.startedOn,progress:this.setup.leaveSetup.progress,isStarted:this.setup.leaveSetup.isStarted,completedInDays:this.setup.leaveSetup.completedInDays},employeeJobImport:{id:3,title:"Employee Job Import",name:"EmployeeJobImport",description:"",stateName:"employeeJobDetailsImported",startedOn:this.setup.attendanceSetup.startedOn,progress:this.setup.attendanceSetup.progress,isStarted:this.setup.attendanceSetup.isStarted,completedInDays:this.setup.attendanceSetup.completedInDays}};return this.setup.hasLeaveFeature&&(e.leaveSummaryImport={id:4,title:"Consumed/Availed Leave Import",name:"LeaveSummaryImport",description:"",stateName:"leaveConsumedImported",startedOn:this.setup.employeeSetup.startedOn,progress:this.setup.employeeSetup.progress,isStarted:this.setup.employeeSetup.isStarted,completedInDays:this.setup.employeeSetup.completedInDays},e.leaveCarryOverImport={id:5,title:"Leave Carryover Import",name:"LeaveCarryOverImport",description:"",stateName:"leaveCarryoverImported",startedOn:this.setup.employeeSetup.startedOn,progress:this.setup.employeeSetup.progress,isStarted:this.setup.employeeSetup.isStarted,completedInDays:this.setup.employeeSetup.completedInDays}),this.setup.hasPayrollFeature&&(e.currentSalaryImport={id:6,title:"Import Current Salary",name:"currentSalaryImport",description:"",stateName:"currentSalaryImported",startedOn:this.setup.payrollImportSetup.startedOn,progress:this.setup.payrollImportSetup.progress,isStarted:this.setup.payrollImportSetup.isStarted,completedInDays:this.setup.payrollImportSetup.completedInDays},e.previousSalaryImport={id:6,title:"Import Previous Salary",name:"previousSalaryImport",description:"",stateName:"previousSalaryImported",startedOn:this.setup.payrollImportSetup.startedOn,progress:this.setup.payrollImportSetup.progress,isStarted:this.setup.payrollImportSetup.isStarted,completedInDays:this.setup.payrollImportSetup.completedInDays}),e},t.prototype.init=function(){this.setup.employeeImportSetup.employeeBasicDetailsImported=!(!this.setup.employeeImportSetup.employeeBasicDetailsImported&&!this.setup.employeeImportSetup.employeePersonalDetailsImported),this.totalNoOfSteps=3,this.totalCompletedSteps=this.setup.employeeImportSetup.employeeBasicDetailsImported?1:0,this.totalCompletedSteps+=this.setup.employeeImportSetup.employeePersonalDetailsImported?1:0,this.totalCompletedSteps+=this.setup.employeeImportSetup.employeeJobDetailsImported?1:0,this.setup.hasLeaveFeature&&(this.totalCompletedSteps+=this.setup.employeeImportSetup.leaveConsumedImported?1:0,this.totalCompletedSteps+=this.setup.employeeImportSetup.leaveCarryoverImported?1:0,this.totalNoOfSteps+=2),this.setup.hasPayrollFeature&&(this.totalCompletedSteps+=this.setup.payrollImportSetup.currentSalaryImported?1:0,this.totalNoOfSteps++,this.setup.payrollImportSetup.isPreviousSalaryRequired&&(this.totalCompletedSteps+=this.setup.payrollImportSetup.previousSalaryImported?1:0,this.totalNoOfSteps++)),this.getStartedProgress=this.totalCompletedSteps/this.totalNoOfSteps*100},t.prototype.importEmployeeBasicDetails=function(){var e=this;this._modal.open({templateUrl:"onboard-basic-details-import",controller:"ExcelImportBasicEmployeeDetails",controllerAs:"ctrl",windowClass:"full-screen-modal",keyboard:!1,backdrop:!1}).result.then(function(t){e.updateStats(e.setup.employeeImportSetup.employeeBasicDetailsImported),e.setup.employeeImportSetup.employeeBasicDetailsImported=t})},t.prototype.importEmployeeDetails=function(){var e=this;this._modal.open({templateUrl:"employees/excelImport",controller:"ExcelImportEmployeeController",controllerAs:"ctrl",windowClass:"full-screen-modal",keyboard:!1,backdrop:!1}).result.then(function(){e.updateStats(e.setup.employeeImportSetup.employeePersonalDetailsImported),e.updateStats(e.setup.employeeImportSetup.employeeBasicDetailsImported),e.setup.employeeImportSetup.employeePersonalDetailsImported=!0,e.setup.employeeImportSetup.employeeBasicDetailsImported=!0})},t.prototype.updateStats=function(e){e||this.totalCompletedSteps++,this.getStartedProgress=this.totalCompletedSteps/this.totalNoOfSteps*100},t.prototype.employeeJobImport=function(){var e=this;this._modal.open({templateUrl:"employees/excelImport",controller:"ExcelImportJobDetailsController",controllerAs:"ctrl",windowClass:"full-screen-modal",keyboard:!1,backdrop:!1}).result.then(function(){e.updateStats(e.setup.employeeImportSetup.employeeJobDetailsImported),e.setup.employeeImportSetup.employeeJobDetailsImported=!0})},t.prototype.employeeSummaryImport=function(){var e=this;this._modal.open({templateUrl:"leave-summary-excel-upload",windowClass:"full-screen-modal",backdrop:!1,keyboard:!1,controller:"ImportLeaveSummaryController as ctrl"}).result.then(function(t){t&&(e.updateStats(e.setup.employeeImportSetup.leaveConsumedImported),e.setup.employeeImportSetup.leaveConsumedImported=!0)})},t.prototype.leaveCarryOverImport=function(){var e=this;this._modal.open({templateUrl:"carryover-balance-import",controller:"ImportCarryoverBalanceController as ctrl",windowClass:"full-screen-modal",keyboard:!1,backdrop:!1}).result.then(function(t){t&&(e.updateStats(e.setup.employeeImportSetup.leaveCarryoverImported),e.setup.employeeImportSetup.leaveCarryoverImported=!0)})},t.prototype.importCurrentSalary=function(){var e=this;this.isPayrollSetupCompleted()&&this._modal.open({templateUrl:"import/PayrollCurrentSalary",controller:"PayrollCurrentSalaryImportController as importCtrl",windowClass:"full-screen-modal",keyboard:!1,backdrop:!1}).result.then(function(t){t&&(e.updateStats(e.setup.payrollImportSetup.currentSalaryImported),e.setup.payrollImportSetup.currentSalaryImported=!0)})},t.prototype.isPayrollSetupCompleted=function(){if(this.setup.isPayrollSetupCompleted)return this.setup.isPayrollSetupCompleted;this.dialogs.notify("Application notification","Payroll setup is not completed. To run payroll complete the setup .",{keyboard:!1,backdrop:"static"}).result.then(function(){window.location.href="/#/settings/payroll/setup"})},t.prototype.importPreviousSalary=function(){var e=this;this.isPayrollSetupCompleted()&&this._modal.open({templateUrl:"import/PayrollPreviousSalary",controller:"PayrollPreviousSalaryImportController as importCtrl",windowClass:"full-screen-modal",keyboard:!1,backdrop:!1,resolve:{Month:null}}).result.then(function(t){t&&(e.updateStats(e.setup.payrollImportSetup.previousSalaryImported),e.setup.payrollImportSetup.previousSalaryImported=!0)})},t.prototype.completeOnboardImport=function(){this.disableCompleteOnBoard=!0,this.OnboardingService.updateOnboardStatus().then(function(e){window.location.href="/",console.log("Onboard Completed.")})},t.$inject=["$scope","dialogs","$uibModal","OnboardingService","NotificationService","SharedModel"],t}(SharedPatterns.Setup);e.OnboardingWidgetController=t}(e.Components||(e.Components={}))}(xhr||(xhr={})),angular.module("xhr").controller("OnboardingWidgetController",xhr.Components.OnboardingWidgetController),function(e){!function(t){var i=function(){function t(e,t){this.resource=e,this.payrollModel=t,this.onboardingService=this.resource("/api/onboard/:action",{action:"@action",id:"@id"},{update:{method:"PUT"}}),this.employee=this.resource("/api/employee/:action/:id",{action:"@action",id:"@id"},{update:{method:"PUT"}})}return t.prototype.getOnboardSetup=function(){var t=this;return this.onboardingService.get({action:"setup"}).$promise.then(function(i){return i.payrollSetup.config=null!=i.payrollSetup.config?new t.payrollModel.PayrollConfiguration(i.payrollSetup.config):i.payrollSetup.config,new e.Models.OnboardingSetup(i)})},t.prototype.updateSetupStatus=function(){return this.onboardingService.update({action:"setupstatus"}).$promise},t.prototype.updateOnboardStatus=function(){return this.onboardingService.update({action:"importstatus"}).$promise},t.prototype.setAuditFieldsOnUpdate=function(t){var i=this;return this.onboardingService.update({action:"setauditfieldsonupdate"},t).$promise.then(function(t){return t.payrollSetup.config=null!=t.payrollSetup.config?new i.payrollModel.PayrollConfiguration(t.payrollSetup.config):t.payrollSetup.config,new e.Models.OnboardingSetup(t)})},t.prototype.createLegalEntity=function(e){return this.onboardingService.save({action:"orglegalentity"},e).$promise},t.prototype.getOrgLegalEntity=function(){return this.onboardingService.get({action:"orglegalentity"}).$promise},t.$inject=["$resource","PayrollModel"],t}();t.OnboardingService=i;var n=function(){function e(e){this.resource=e,this.partner=this.resource("/api/organization/:action/:id",{action:"@action",id:"@id"})}return e.prototype.getPartnerOrgs=function(){return this.partner.query({action:"partnerorgs"}).$promise},e.$inject=["$resource"],e}();t.PartnerService=n,angular.module("xhr").service("OnboardingService",i).service("PartnerService",n)}(e.Services||(e.Services={}))}(xhr||(xhr={})),function(e){var t;e.Components||(e.Components={}),t=function(){function e(e,t,i,n,o){this.appSettings=e,this.notificationService=t,this.q=i,this.auditService=n,this._scope=o}return e.prototype.$onInit=function(){var e=new Date;this.toDate=angular.copy(e),e.setMonth(e.getMonth()-1),this.fromDate=angular.copy(e),this.getAuditDetails(),this.maxDate=angular.copy(this.toDate),this.minDate=new Date,this.minDate.setMonth(this.minDate.getMonth()-3)},e.prototype.getAuditDetails=function(){var e=this,t=angular.copy(this.toDate);t.setDate(t.getDate()+1),this.fromDate<=this.toDate&&this.auditService.getAuditLogs(this.eventType,this.identifier,this.fromDate.dateOnlyString(),t.dateOnlyString()).then(function(t){e.auditDetails=t})},e.$inject=["AppSettings","NotificationService","$q","AuditService","$scope"],e}(),angular.module("xhr").component("auditComponent",{templateUrl:"/audit/audittemplate",controller:t,controllerAs:"ctrl",bindings:{auditTitle:"<",identifier:"<",eventType:"<",dismiss:"&"}})}(Audit||(Audit={})),function(e){!function(e){var t=function(){function e(e,t){this.resource=e,this._q=t,this.auditResource=this.resource("/api/audit/:action/:id",{id:"@id",action:"@action"},{update:{method:"PUT"}})}return e.prototype.getAuditLogs=function(e,t,i,n){return this.auditResource.query({action:e,id:t,fromDate:i,toDate:n}).$promise},e.$inject=["$resource","$q"],e}();e.AuditService=t,angular.module("xhr").service("AuditService",t)}(e.Service||(e.Service={}))}(Audit||(Audit={})),function(e){!function(e){var t=function(){function e(){}return e.AttendanceTrackingPolicy="auditattendancetrackingpolicy",e.EmployeeProfileTimeline="auditemployeeprofiletimeline",e.LeavePlan="auditleaveplan",e}();e.AuditEventType=t}(e.Model||(e.Model={}))}(Audit||(Audit={}));